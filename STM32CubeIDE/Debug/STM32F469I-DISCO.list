
STM32F469I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001b4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002f680  080001c0  080001c0  000011c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000419c  0802f840  0802f840  00030840  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 00000054  080339dc  080339dc  000349dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  08033a30  08033a30  004d4238  2**0
                  CONTENTS
  5 .ARM          00000008  08033a30  08033a30  00034a30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  08033a38  08033a38  004d4238  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   0000001c  08033a38  08033a38  00034a38  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   0000000c  08033a54  08033a54  00034a54  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000128  20000000  08033a60  00035000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 TouchGFX_ScratchbufferA 00000100  20000140  08033b88  00035140  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 11 TouchGFX_ScratchbufferB 00000100  20000240  08033c88  00035240  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 12 .bss          0000ee0c  20000340  08033d88  00035340  2**3
                  ALLOC
 13 ._user_heap_stack 00002004  2000f14c  08033d88  0003614c  2**0
                  ALLOC
 14 .ARM.attributes 00000030  00000000  00000000  004d4238  2**0
                  CONTENTS, READONLY
 15 ExtFlashSection 0049c240  90000000  90000000  00036000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 FontFlashSection 00001f20  9049c240  9049c240  004d2240  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 TextFlashSection 000000d8  9049e160  9049e160  004d4160  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 TouchGFX_Framebuffer 000bb800  c0000000  c0000000  004d5000  2**2
                  ALLOC
 19 .debug_line   0007a017  00000000  00000000  004d4268  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_line_str 0000006a  00000000  00000000  0054e27f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_info   0015a57e  00000000  00000000  0054e2e9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_abbrev 0001c45b  00000000  00000000  006a8867  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_aranges 00004868  00000000  00000000  006c4cc8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_str    00142575  00000000  00000000  006c9530  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_rnglists 00006fbb  00000000  00000000  0080baa5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_loclists 0003515a  00000000  00000000  00812a60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_macro  0003d2d6  00000000  00000000  00847bba  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .comment      000000c2  00000000  00000000  00884e90  2**0
                  CONTENTS, READONLY
 29 .debug_frame  0000d590  00000000  00000000  00884f54  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	@ (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	@ (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	@ (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000340 	.word	0x20000340
 80001dc:	00000000 	.word	0x00000000
 80001e0:	0802f828 	.word	0x0802f828

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	@ (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	@ (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	@ (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	20000344 	.word	0x20000344
 80001fc:	0802f828 	.word	0x0802f828

08000200 <strlen>:
 8000200:	4603      	mov	r3, r0
 8000202:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000206:	2a00      	cmp	r2, #0
 8000208:	d1fb      	bne.n	8000202 <strlen+0x2>
 800020a:	1a18      	subs	r0, r3, r0
 800020c:	3801      	subs	r0, #1
 800020e:	4770      	bx	lr

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__aeabi_ldivmod>:
 80002b0:	b97b      	cbnz	r3, 80002d2 <__aeabi_ldivmod+0x22>
 80002b2:	b972      	cbnz	r2, 80002d2 <__aeabi_ldivmod+0x22>
 80002b4:	2900      	cmp	r1, #0
 80002b6:	bfbe      	ittt	lt
 80002b8:	2000      	movlt	r0, #0
 80002ba:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
 80002be:	e006      	blt.n	80002ce <__aeabi_ldivmod+0x1e>
 80002c0:	bf08      	it	eq
 80002c2:	2800      	cmpeq	r0, #0
 80002c4:	bf1c      	itt	ne
 80002c6:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
 80002ca:	f04f 30ff 	movne.w	r0, #4294967295
 80002ce:	f000 b9b5 	b.w	800063c <__aeabi_idiv0>
 80002d2:	f1ad 0c08 	sub.w	ip, sp, #8
 80002d6:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002da:	2900      	cmp	r1, #0
 80002dc:	db09      	blt.n	80002f2 <__aeabi_ldivmod+0x42>
 80002de:	2b00      	cmp	r3, #0
 80002e0:	db1a      	blt.n	8000318 <__aeabi_ldivmod+0x68>
 80002e2:	f000 f84d 	bl	8000380 <__udivmoddi4>
 80002e6:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002ea:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ee:	b004      	add	sp, #16
 80002f0:	4770      	bx	lr
 80002f2:	4240      	negs	r0, r0
 80002f4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002f8:	2b00      	cmp	r3, #0
 80002fa:	db1b      	blt.n	8000334 <__aeabi_ldivmod+0x84>
 80002fc:	f000 f840 	bl	8000380 <__udivmoddi4>
 8000300:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000304:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000308:	b004      	add	sp, #16
 800030a:	4240      	negs	r0, r0
 800030c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000310:	4252      	negs	r2, r2
 8000312:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000316:	4770      	bx	lr
 8000318:	4252      	negs	r2, r2
 800031a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800031e:	f000 f82f 	bl	8000380 <__udivmoddi4>
 8000322:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000326:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800032a:	b004      	add	sp, #16
 800032c:	4240      	negs	r0, r0
 800032e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000332:	4770      	bx	lr
 8000334:	4252      	negs	r2, r2
 8000336:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800033a:	f000 f821 	bl	8000380 <__udivmoddi4>
 800033e:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000342:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000346:	b004      	add	sp, #16
 8000348:	4252      	negs	r2, r2
 800034a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800034e:	4770      	bx	lr

08000350 <__aeabi_uldivmod>:
 8000350:	b953      	cbnz	r3, 8000368 <__aeabi_uldivmod+0x18>
 8000352:	b94a      	cbnz	r2, 8000368 <__aeabi_uldivmod+0x18>
 8000354:	2900      	cmp	r1, #0
 8000356:	bf08      	it	eq
 8000358:	2800      	cmpeq	r0, #0
 800035a:	bf1c      	itt	ne
 800035c:	f04f 31ff 	movne.w	r1, #4294967295
 8000360:	f04f 30ff 	movne.w	r0, #4294967295
 8000364:	f000 b96a 	b.w	800063c <__aeabi_idiv0>
 8000368:	f1ad 0c08 	sub.w	ip, sp, #8
 800036c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000370:	f000 f806 	bl	8000380 <__udivmoddi4>
 8000374:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000378:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800037c:	b004      	add	sp, #16
 800037e:	4770      	bx	lr

08000380 <__udivmoddi4>:
 8000380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000384:	9d08      	ldr	r5, [sp, #32]
 8000386:	460c      	mov	r4, r1
 8000388:	2b00      	cmp	r3, #0
 800038a:	d14e      	bne.n	800042a <__udivmoddi4+0xaa>
 800038c:	4694      	mov	ip, r2
 800038e:	458c      	cmp	ip, r1
 8000390:	4686      	mov	lr, r0
 8000392:	fab2 f282 	clz	r2, r2
 8000396:	d962      	bls.n	800045e <__udivmoddi4+0xde>
 8000398:	b14a      	cbz	r2, 80003ae <__udivmoddi4+0x2e>
 800039a:	f1c2 0320 	rsb	r3, r2, #32
 800039e:	4091      	lsls	r1, r2
 80003a0:	fa20 f303 	lsr.w	r3, r0, r3
 80003a4:	fa0c fc02 	lsl.w	ip, ip, r2
 80003a8:	4319      	orrs	r1, r3
 80003aa:	fa00 fe02 	lsl.w	lr, r0, r2
 80003ae:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003b2:	fa1f f68c 	uxth.w	r6, ip
 80003b6:	fbb1 f4f7 	udiv	r4, r1, r7
 80003ba:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80003be:	fb07 1114 	mls	r1, r7, r4, r1
 80003c2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80003c6:	fb04 f106 	mul.w	r1, r4, r6
 80003ca:	4299      	cmp	r1, r3
 80003cc:	d90a      	bls.n	80003e4 <__udivmoddi4+0x64>
 80003ce:	eb1c 0303 	adds.w	r3, ip, r3
 80003d2:	f104 30ff 	add.w	r0, r4, #4294967295
 80003d6:	f080 8112 	bcs.w	80005fe <__udivmoddi4+0x27e>
 80003da:	4299      	cmp	r1, r3
 80003dc:	f240 810f 	bls.w	80005fe <__udivmoddi4+0x27e>
 80003e0:	3c02      	subs	r4, #2
 80003e2:	4463      	add	r3, ip
 80003e4:	1a59      	subs	r1, r3, r1
 80003e6:	fa1f f38e 	uxth.w	r3, lr
 80003ea:	fbb1 f0f7 	udiv	r0, r1, r7
 80003ee:	fb07 1110 	mls	r1, r7, r0, r1
 80003f2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80003f6:	fb00 f606 	mul.w	r6, r0, r6
 80003fa:	429e      	cmp	r6, r3
 80003fc:	d90a      	bls.n	8000414 <__udivmoddi4+0x94>
 80003fe:	eb1c 0303 	adds.w	r3, ip, r3
 8000402:	f100 31ff 	add.w	r1, r0, #4294967295
 8000406:	f080 80fc 	bcs.w	8000602 <__udivmoddi4+0x282>
 800040a:	429e      	cmp	r6, r3
 800040c:	f240 80f9 	bls.w	8000602 <__udivmoddi4+0x282>
 8000410:	4463      	add	r3, ip
 8000412:	3802      	subs	r0, #2
 8000414:	1b9b      	subs	r3, r3, r6
 8000416:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800041a:	2100      	movs	r1, #0
 800041c:	b11d      	cbz	r5, 8000426 <__udivmoddi4+0xa6>
 800041e:	40d3      	lsrs	r3, r2
 8000420:	2200      	movs	r2, #0
 8000422:	e9c5 3200 	strd	r3, r2, [r5]
 8000426:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800042a:	428b      	cmp	r3, r1
 800042c:	d905      	bls.n	800043a <__udivmoddi4+0xba>
 800042e:	b10d      	cbz	r5, 8000434 <__udivmoddi4+0xb4>
 8000430:	e9c5 0100 	strd	r0, r1, [r5]
 8000434:	2100      	movs	r1, #0
 8000436:	4608      	mov	r0, r1
 8000438:	e7f5      	b.n	8000426 <__udivmoddi4+0xa6>
 800043a:	fab3 f183 	clz	r1, r3
 800043e:	2900      	cmp	r1, #0
 8000440:	d146      	bne.n	80004d0 <__udivmoddi4+0x150>
 8000442:	42a3      	cmp	r3, r4
 8000444:	d302      	bcc.n	800044c <__udivmoddi4+0xcc>
 8000446:	4290      	cmp	r0, r2
 8000448:	f0c0 80f0 	bcc.w	800062c <__udivmoddi4+0x2ac>
 800044c:	1a86      	subs	r6, r0, r2
 800044e:	eb64 0303 	sbc.w	r3, r4, r3
 8000452:	2001      	movs	r0, #1
 8000454:	2d00      	cmp	r5, #0
 8000456:	d0e6      	beq.n	8000426 <__udivmoddi4+0xa6>
 8000458:	e9c5 6300 	strd	r6, r3, [r5]
 800045c:	e7e3      	b.n	8000426 <__udivmoddi4+0xa6>
 800045e:	2a00      	cmp	r2, #0
 8000460:	f040 8090 	bne.w	8000584 <__udivmoddi4+0x204>
 8000464:	eba1 040c 	sub.w	r4, r1, ip
 8000468:	ea4f 481c 	mov.w	r8, ip, lsr #16
 800046c:	fa1f f78c 	uxth.w	r7, ip
 8000470:	2101      	movs	r1, #1
 8000472:	fbb4 f6f8 	udiv	r6, r4, r8
 8000476:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800047a:	fb08 4416 	mls	r4, r8, r6, r4
 800047e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000482:	fb07 f006 	mul.w	r0, r7, r6
 8000486:	4298      	cmp	r0, r3
 8000488:	d908      	bls.n	800049c <__udivmoddi4+0x11c>
 800048a:	eb1c 0303 	adds.w	r3, ip, r3
 800048e:	f106 34ff 	add.w	r4, r6, #4294967295
 8000492:	d202      	bcs.n	800049a <__udivmoddi4+0x11a>
 8000494:	4298      	cmp	r0, r3
 8000496:	f200 80cd 	bhi.w	8000634 <__udivmoddi4+0x2b4>
 800049a:	4626      	mov	r6, r4
 800049c:	1a1c      	subs	r4, r3, r0
 800049e:	fa1f f38e 	uxth.w	r3, lr
 80004a2:	fbb4 f0f8 	udiv	r0, r4, r8
 80004a6:	fb08 4410 	mls	r4, r8, r0, r4
 80004aa:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80004ae:	fb00 f707 	mul.w	r7, r0, r7
 80004b2:	429f      	cmp	r7, r3
 80004b4:	d908      	bls.n	80004c8 <__udivmoddi4+0x148>
 80004b6:	eb1c 0303 	adds.w	r3, ip, r3
 80004ba:	f100 34ff 	add.w	r4, r0, #4294967295
 80004be:	d202      	bcs.n	80004c6 <__udivmoddi4+0x146>
 80004c0:	429f      	cmp	r7, r3
 80004c2:	f200 80b0 	bhi.w	8000626 <__udivmoddi4+0x2a6>
 80004c6:	4620      	mov	r0, r4
 80004c8:	1bdb      	subs	r3, r3, r7
 80004ca:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 80004ce:	e7a5      	b.n	800041c <__udivmoddi4+0x9c>
 80004d0:	f1c1 0620 	rsb	r6, r1, #32
 80004d4:	408b      	lsls	r3, r1
 80004d6:	fa22 f706 	lsr.w	r7, r2, r6
 80004da:	431f      	orrs	r7, r3
 80004dc:	fa20 fc06 	lsr.w	ip, r0, r6
 80004e0:	fa04 f301 	lsl.w	r3, r4, r1
 80004e4:	ea43 030c 	orr.w	r3, r3, ip
 80004e8:	40f4      	lsrs	r4, r6
 80004ea:	fa00 f801 	lsl.w	r8, r0, r1
 80004ee:	0c38      	lsrs	r0, r7, #16
 80004f0:	ea4f 4913 	mov.w	r9, r3, lsr #16
 80004f4:	fbb4 fef0 	udiv	lr, r4, r0
 80004f8:	fa1f fc87 	uxth.w	ip, r7
 80004fc:	fb00 441e 	mls	r4, r0, lr, r4
 8000500:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000504:	fb0e f90c 	mul.w	r9, lr, ip
 8000508:	45a1      	cmp	r9, r4
 800050a:	fa02 f201 	lsl.w	r2, r2, r1
 800050e:	d90a      	bls.n	8000526 <__udivmoddi4+0x1a6>
 8000510:	193c      	adds	r4, r7, r4
 8000512:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000516:	f080 8084 	bcs.w	8000622 <__udivmoddi4+0x2a2>
 800051a:	45a1      	cmp	r9, r4
 800051c:	f240 8081 	bls.w	8000622 <__udivmoddi4+0x2a2>
 8000520:	f1ae 0e02 	sub.w	lr, lr, #2
 8000524:	443c      	add	r4, r7
 8000526:	eba4 0409 	sub.w	r4, r4, r9
 800052a:	fa1f f983 	uxth.w	r9, r3
 800052e:	fbb4 f3f0 	udiv	r3, r4, r0
 8000532:	fb00 4413 	mls	r4, r0, r3, r4
 8000536:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800053a:	fb03 fc0c 	mul.w	ip, r3, ip
 800053e:	45a4      	cmp	ip, r4
 8000540:	d907      	bls.n	8000552 <__udivmoddi4+0x1d2>
 8000542:	193c      	adds	r4, r7, r4
 8000544:	f103 30ff 	add.w	r0, r3, #4294967295
 8000548:	d267      	bcs.n	800061a <__udivmoddi4+0x29a>
 800054a:	45a4      	cmp	ip, r4
 800054c:	d965      	bls.n	800061a <__udivmoddi4+0x29a>
 800054e:	3b02      	subs	r3, #2
 8000550:	443c      	add	r4, r7
 8000552:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000556:	fba0 9302 	umull	r9, r3, r0, r2
 800055a:	eba4 040c 	sub.w	r4, r4, ip
 800055e:	429c      	cmp	r4, r3
 8000560:	46ce      	mov	lr, r9
 8000562:	469c      	mov	ip, r3
 8000564:	d351      	bcc.n	800060a <__udivmoddi4+0x28a>
 8000566:	d04e      	beq.n	8000606 <__udivmoddi4+0x286>
 8000568:	b155      	cbz	r5, 8000580 <__udivmoddi4+0x200>
 800056a:	ebb8 030e 	subs.w	r3, r8, lr
 800056e:	eb64 040c 	sbc.w	r4, r4, ip
 8000572:	fa04 f606 	lsl.w	r6, r4, r6
 8000576:	40cb      	lsrs	r3, r1
 8000578:	431e      	orrs	r6, r3
 800057a:	40cc      	lsrs	r4, r1
 800057c:	e9c5 6400 	strd	r6, r4, [r5]
 8000580:	2100      	movs	r1, #0
 8000582:	e750      	b.n	8000426 <__udivmoddi4+0xa6>
 8000584:	f1c2 0320 	rsb	r3, r2, #32
 8000588:	fa20 f103 	lsr.w	r1, r0, r3
 800058c:	fa0c fc02 	lsl.w	ip, ip, r2
 8000590:	fa24 f303 	lsr.w	r3, r4, r3
 8000594:	4094      	lsls	r4, r2
 8000596:	430c      	orrs	r4, r1
 8000598:	ea4f 481c 	mov.w	r8, ip, lsr #16
 800059c:	fa00 fe02 	lsl.w	lr, r0, r2
 80005a0:	fa1f f78c 	uxth.w	r7, ip
 80005a4:	fbb3 f0f8 	udiv	r0, r3, r8
 80005a8:	fb08 3110 	mls	r1, r8, r0, r3
 80005ac:	0c23      	lsrs	r3, r4, #16
 80005ae:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80005b2:	fb00 f107 	mul.w	r1, r0, r7
 80005b6:	4299      	cmp	r1, r3
 80005b8:	d908      	bls.n	80005cc <__udivmoddi4+0x24c>
 80005ba:	eb1c 0303 	adds.w	r3, ip, r3
 80005be:	f100 36ff 	add.w	r6, r0, #4294967295
 80005c2:	d22c      	bcs.n	800061e <__udivmoddi4+0x29e>
 80005c4:	4299      	cmp	r1, r3
 80005c6:	d92a      	bls.n	800061e <__udivmoddi4+0x29e>
 80005c8:	3802      	subs	r0, #2
 80005ca:	4463      	add	r3, ip
 80005cc:	1a5b      	subs	r3, r3, r1
 80005ce:	b2a4      	uxth	r4, r4
 80005d0:	fbb3 f1f8 	udiv	r1, r3, r8
 80005d4:	fb08 3311 	mls	r3, r8, r1, r3
 80005d8:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 80005dc:	fb01 f307 	mul.w	r3, r1, r7
 80005e0:	42a3      	cmp	r3, r4
 80005e2:	d908      	bls.n	80005f6 <__udivmoddi4+0x276>
 80005e4:	eb1c 0404 	adds.w	r4, ip, r4
 80005e8:	f101 36ff 	add.w	r6, r1, #4294967295
 80005ec:	d213      	bcs.n	8000616 <__udivmoddi4+0x296>
 80005ee:	42a3      	cmp	r3, r4
 80005f0:	d911      	bls.n	8000616 <__udivmoddi4+0x296>
 80005f2:	3902      	subs	r1, #2
 80005f4:	4464      	add	r4, ip
 80005f6:	1ae4      	subs	r4, r4, r3
 80005f8:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 80005fc:	e739      	b.n	8000472 <__udivmoddi4+0xf2>
 80005fe:	4604      	mov	r4, r0
 8000600:	e6f0      	b.n	80003e4 <__udivmoddi4+0x64>
 8000602:	4608      	mov	r0, r1
 8000604:	e706      	b.n	8000414 <__udivmoddi4+0x94>
 8000606:	45c8      	cmp	r8, r9
 8000608:	d2ae      	bcs.n	8000568 <__udivmoddi4+0x1e8>
 800060a:	ebb9 0e02 	subs.w	lr, r9, r2
 800060e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000612:	3801      	subs	r0, #1
 8000614:	e7a8      	b.n	8000568 <__udivmoddi4+0x1e8>
 8000616:	4631      	mov	r1, r6
 8000618:	e7ed      	b.n	80005f6 <__udivmoddi4+0x276>
 800061a:	4603      	mov	r3, r0
 800061c:	e799      	b.n	8000552 <__udivmoddi4+0x1d2>
 800061e:	4630      	mov	r0, r6
 8000620:	e7d4      	b.n	80005cc <__udivmoddi4+0x24c>
 8000622:	46d6      	mov	lr, sl
 8000624:	e77f      	b.n	8000526 <__udivmoddi4+0x1a6>
 8000626:	4463      	add	r3, ip
 8000628:	3802      	subs	r0, #2
 800062a:	e74d      	b.n	80004c8 <__udivmoddi4+0x148>
 800062c:	4606      	mov	r6, r0
 800062e:	4623      	mov	r3, r4
 8000630:	4608      	mov	r0, r1
 8000632:	e70f      	b.n	8000454 <__udivmoddi4+0xd4>
 8000634:	3e02      	subs	r6, #2
 8000636:	4463      	add	r3, ip
 8000638:	e730      	b.n	800049c <__udivmoddi4+0x11c>
 800063a:	bf00      	nop

0800063c <__aeabi_idiv0>:
 800063c:	4770      	bx	lr
 800063e:	bf00      	nop

08000640 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8000640:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8000678 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000644:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000646:	e003      	b.n	8000650 <LoopCopyDataInit>

08000648 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000648:	4b0c      	ldr	r3, [pc, #48]	@ (800067c <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800064a:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 800064c:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800064e:	3104      	adds	r1, #4

08000650 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000650:	480b      	ldr	r0, [pc, #44]	@ (8000680 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000652:	4b0c      	ldr	r3, [pc, #48]	@ (8000684 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000654:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000656:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000658:	d3f6      	bcc.n	8000648 <CopyDataInit>
  ldr  r2, =_sbss
 800065a:	4a0b      	ldr	r2, [pc, #44]	@ (8000688 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 800065c:	e002      	b.n	8000664 <LoopFillZerobss>

0800065e <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800065e:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000660:	f842 3b04 	str.w	r3, [r2], #4

08000664 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000664:	4b09      	ldr	r3, [pc, #36]	@ (800068c <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000666:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000668:	d3f9      	bcc.n	800065e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 800066a:	f00b f9b1 	bl	800b9d0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800066e:	f02e fb6b 	bl	802ed48 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000672:	f003 f825 	bl	80036c0 <main>
  bx  lr    
 8000676:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 8000678:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 800067c:	08033a60 	.word	0x08033a60
  ldr  r0, =_sdata
 8000680:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000684:	20000128 	.word	0x20000128
  ldr  r2, =_sbss
 8000688:	20000340 	.word	0x20000340
  ldr  r3, = _ebss
 800068c:	2000f14c 	.word	0x2000f14c

08000690 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000690:	e7fe      	b.n	8000690 <ADC_IRQHandler>
	...

08000694 <_Z41__static_initialization_and_destruction_0ii>:
  ecg_filtered_val = ecg_filtered.getVal();
  ecg_bpm_val = ecg_bpm.getVal();

  //ecg_sqr_val = ecg_sqr.getVal();
  //ecg_period_val = ecg_period.getVal();
}
 8000694:	2801      	cmp	r0, #1
 8000696:	d000      	beq.n	800069a <_Z41__static_initialization_and_destruction_0ii+0x6>
 8000698:	4770      	bx	lr
 800069a:	b508      	push	{r3, lr}
 800069c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80006a0:	4299      	cmp	r1, r3
 80006a2:	d000      	beq.n	80006a6 <_Z41__static_initialization_and_destruction_0ii+0x12>
 80006a4:	bd08      	pop	{r3, pc}
SDW sdw1;
 80006a6:	480c      	ldr	r0, [pc, #48]	@ (80006d8 <_Z41__static_initialization_and_destruction_0ii+0x44>)
 80006a8:	f000 fcb6 	bl	8001018 <_ZN3SDWC1Ev>
input buzzer_enable;
 80006ac:	480b      	ldr	r0, [pc, #44]	@ (80006dc <_Z41__static_initialization_and_destruction_0ii+0x48>)
 80006ae:	f001 f91d 	bl	80018ec <_ZN5inputC1Ev>
probe ecg_measure;
 80006b2:	480b      	ldr	r0, [pc, #44]	@ (80006e0 <_Z41__static_initialization_and_destruction_0ii+0x4c>)
 80006b4:	f001 f8a6 	bl	8001804 <_ZN5probeC1Ev>
probe ecg_filtered;
 80006b8:	480a      	ldr	r0, [pc, #40]	@ (80006e4 <_Z41__static_initialization_and_destruction_0ii+0x50>)
 80006ba:	f001 f8a3 	bl	8001804 <_ZN5probeC1Ev>
probe ecg_filtered1;
 80006be:	480a      	ldr	r0, [pc, #40]	@ (80006e8 <_Z41__static_initialization_and_destruction_0ii+0x54>)
 80006c0:	f001 f8a0 	bl	8001804 <_ZN5probeC1Ev>
probe ecg_sqr;
 80006c4:	4809      	ldr	r0, [pc, #36]	@ (80006ec <_Z41__static_initialization_and_destruction_0ii+0x58>)
 80006c6:	f001 f89d 	bl	8001804 <_ZN5probeC1Ev>
probe ecg_bpm;
 80006ca:	4809      	ldr	r0, [pc, #36]	@ (80006f0 <_Z41__static_initialization_and_destruction_0ii+0x5c>)
 80006cc:	f001 f89a 	bl	8001804 <_ZN5probeC1Ev>
probe ecg_period;
 80006d0:	4808      	ldr	r0, [pc, #32]	@ (80006f4 <_Z41__static_initialization_and_destruction_0ii+0x60>)
 80006d2:	f001 f897 	bl	8001804 <_ZN5probeC1Ev>
}
 80006d6:	e7e5      	b.n	80006a4 <_Z41__static_initialization_and_destruction_0ii+0x10>
 80006d8:	200003a8 	.word	0x200003a8
 80006dc:	20000398 	.word	0x20000398
 80006e0:	20000390 	.word	0x20000390
 80006e4:	20000388 	.word	0x20000388
 80006e8:	20000380 	.word	0x20000380
 80006ec:	20000378 	.word	0x20000378
 80006f0:	20000370 	.word	0x20000370
 80006f4:	20000368 	.word	0x20000368

080006f8 <setup>:
{
 80006f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80006fc:	ed2d 8b02 	vpush	{d8}
 8000700:	b0bd      	sub	sp, #244	@ 0xf4
  sdw1 = SDW(CHIP_SELECT_PIN);
 8000702:	210a      	movs	r1, #10
 8000704:	a81b      	add	r0, sp, #108	@ 0x6c
 8000706:	f000 fc89 	bl	800101c <_ZN3SDWC1Ei>
 800070a:	4db4      	ldr	r5, [pc, #720]	@ (80009dc <setup+0x2e4>)
 800070c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 800070e:	602b      	str	r3, [r5, #0]
  sdw1.startDesign(250, Tustin);
 8000710:	2101      	movs	r1, #1
 8000712:	ed9f 0ab3 	vldr	s0, [pc, #716]	@ 80009e0 <setup+0x2e8>
 8000716:	4628      	mov	r0, r5
 8000718:	f000 fca0 	bl	800105c <_ZN3SDW11startDesignEf11SDW_C2dAlgo>
  sdw1.setMonitoringInterface(MonitoringOverSpi);
 800071c:	2101      	movs	r1, #1
 800071e:	4628      	mov	r0, r5
 8000720:	f000 fd06 	bl	8001130 <_ZN3SDW22setMonitoringInterfaceE16SDW_MonInterface>
    sensor raw_ecg = sensor(&raw_ecg_spec);
 8000724:	49af      	ldr	r1, [pc, #700]	@ (80009e4 <setup+0x2ec>)
 8000726:	a81a      	add	r0, sp, #104	@ 0x68
 8000728:	f000 ff12 	bl	8001550 <_ZN6sensorC1EP14SDW_SensorSpec>
    actuator bip = actuator(&beep);
 800072c:	49ae      	ldr	r1, [pc, #696]	@ (80009e8 <setup+0x2f0>)
 800072e:	a819      	add	r0, sp, #100	@ 0x64
 8000730:	f000 fec6 	bl	80014c0 <_ZN8actuatorC1EP16SDW_ActuatorSpec>
    butter lowPass = butter(5, 15, passLow);    //  butter lowPass = butter(3, 15, passLow); // 10 10
 8000734:	2200      	movs	r2, #0
 8000736:	eeb2 0a0e 	vmov.f32	s0, #46	@ 0x41700000  15.0
 800073a:	2105      	movs	r1, #5
 800073c:	a818      	add	r0, sp, #96	@ 0x60
 800073e:	f000 ffad 	bl	800169c <_ZN6butterC1Ehf14SDW_FilterType>
    butter highPass = butter(5, 5, passHigh);   // butter highPass = butter(3, 5, passHigh); // 5 8
 8000742:	2201      	movs	r2, #1
 8000744:	eeb1 0a04 	vmov.f32	s0, #20	@ 0x40a00000  5.0
 8000748:	2105      	movs	r1, #5
 800074a:	a817      	add	r0, sp, #92	@ 0x5c
 800074c:	f000 ffa6 	bl	800169c <_ZN6butterC1Ehf14SDW_FilterType>
    tf derivative = tf("[10 0]", "[0.0001 1]"); // tf derivative = tf("[10 0]", "[0.0001 1]"); // 25 0
 8000750:	4aa6      	ldr	r2, [pc, #664]	@ (80009ec <setup+0x2f4>)
 8000752:	49a7      	ldr	r1, [pc, #668]	@ (80009f0 <setup+0x2f8>)
 8000754:	a816      	add	r0, sp, #88	@ 0x58
 8000756:	f000 fdf5 	bl	8001344 <_ZN2tfC1EPKcS1_>
    node Abs = node("[1]", "[1]", Abs1);
 800075a:	4fa6      	ldr	r7, [pc, #664]	@ (80009f4 <setup+0x2fc>)
 800075c:	2302      	movs	r3, #2
 800075e:	463a      	mov	r2, r7
 8000760:	4639      	mov	r1, r7
 8000762:	a815      	add	r0, sp, #84	@ 0x54
 8000764:	f000 fe34 	bl	80013d0 <_ZN4nodeC1EPKcS1_12SDW_NodeType>
    butter Average = butter(5, 5, passLow); // butter Average = butter(2, 5, passLow);
 8000768:	2200      	movs	r2, #0
 800076a:	eeb1 0a04 	vmov.f32	s0, #20	@ 0x40a00000  5.0
 800076e:	2105      	movs	r1, #5
 8000770:	a814      	add	r0, sp, #80	@ 0x50
 8000772:	f000 ff93 	bl	800169c <_ZN6butterC1Ehf14SDW_FilterType>
    schmidt ecgToSqr = schmidt();
 8000776:	a813      	add	r0, sp, #76	@ 0x4c
 8000778:	f000 ff2a 	bl	80015d0 <_ZN7schmidtC1Ev>
    input Vmax = input("Vmax", 100.0);
 800077c:	ed9f 8a9e 	vldr	s16, [pc, #632]	@ 80009f8 <setup+0x300>
 8000780:	eeb0 0a48 	vmov.f32	s0, s16
 8000784:	499d      	ldr	r1, [pc, #628]	@ (80009fc <setup+0x304>)
 8000786:	a80f      	add	r0, sp, #60	@ 0x3c
 8000788:	f001 f8b2 	bl	80018f0 <_ZN5inputC1EPKcf>
    input Vmin = input("Vmin",0.0);
 800078c:	eddf 8a9c 	vldr	s17, [pc, #624]	@ 8000a00 <setup+0x308>
 8000790:	eeb0 0a68 	vmov.f32	s0, s17
 8000794:	499b      	ldr	r1, [pc, #620]	@ (8000a04 <setup+0x30c>)
 8000796:	a80b      	add	r0, sp, #44	@ 0x2c
 8000798:	f001 f8aa 	bl	80018f0 <_ZN5inputC1EPKcf>
    input LTH = input("LTH",60);
 800079c:	ed9f 0a9a 	vldr	s0, [pc, #616]	@ 8000a08 <setup+0x310>
 80007a0:	499a      	ldr	r1, [pc, #616]	@ (8000a0c <setup+0x314>)
 80007a2:	a807      	add	r0, sp, #28
 80007a4:	f001 f8a4 	bl	80018f0 <_ZN5inputC1EPKcf>
    input HTH = input("HTH",80);
 80007a8:	ed9f 0a99 	vldr	s0, [pc, #612]	@ 8000a10 <setup+0x318>
 80007ac:	4999      	ldr	r1, [pc, #612]	@ (8000a14 <setup+0x31c>)
 80007ae:	a803      	add	r0, sp, #12
 80007b0:	f001 f89e 	bl	80018f0 <_ZN5inputC1EPKcf>
    period periodMeasure = period(100, 0, 0.001);
 80007b4:	ed9f 1a98 	vldr	s2, [pc, #608]	@ 8000a18 <setup+0x320>
 80007b8:	eef0 0a68 	vmov.f32	s1, s17
 80007bc:	eeb0 0a48 	vmov.f32	s0, s16
 80007c0:	a802      	add	r0, sp, #8
 80007c2:	f000 ffaf 	bl	8001724 <_ZN6periodC1Efff>
    maxObserve MAX = maxObserve(7);
 80007c6:	2107      	movs	r1, #7
 80007c8:	a801      	add	r0, sp, #4
 80007ca:	f000 ffef 	bl	80017ac <_ZN10maxObserveC1Eh>
    buzzer_enable = input("control",1);
 80007ce:	ae1c      	add	r6, sp, #112	@ 0x70
 80007d0:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80007d4:	4991      	ldr	r1, [pc, #580]	@ (8000a1c <setup+0x324>)
 80007d6:	4630      	mov	r0, r6
 80007d8:	f001 f88a 	bl	80018f0 <_ZN5inputC1EPKcf>
 80007dc:	4c90      	ldr	r4, [pc, #576]	@ (8000a20 <setup+0x328>)
 80007de:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 80007e2:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
    node Multiplicator = node ("[1 1]","[1]",Mul);
 80007e6:	2301      	movs	r3, #1
 80007e8:	463a      	mov	r2, r7
 80007ea:	498e      	ldr	r1, [pc, #568]	@ (8000a24 <setup+0x32c>)
 80007ec:	4668      	mov	r0, sp
 80007ee:	f000 fdef 	bl	80013d0 <_ZN4nodeC1EPKcS1_12SDW_NodeType>
    ecg_measure = probe("ecg_measure");
 80007f2:	ae20      	add	r6, sp, #128	@ 0x80
 80007f4:	498c      	ldr	r1, [pc, #560]	@ (8000a28 <setup+0x330>)
 80007f6:	4630      	mov	r0, r6
 80007f8:	f001 f806 	bl	8001808 <_ZN5probeC1EPKc>
 80007fc:	f8df a24c 	ldr.w	sl, [pc, #588]	@ 8000a4c <setup+0x354>
 8000800:	e896 0003 	ldmia.w	r6, {r0, r1}
 8000804:	e88a 0003 	stmia.w	sl, {r0, r1}
    ecg_filtered = probe("ecg_filtered");
 8000808:	ae22      	add	r6, sp, #136	@ 0x88
 800080a:	4988      	ldr	r1, [pc, #544]	@ (8000a2c <setup+0x334>)
 800080c:	4630      	mov	r0, r6
 800080e:	f000 fffb 	bl	8001808 <_ZN5probeC1EPKc>
 8000812:	f8df 923c 	ldr.w	r9, [pc, #572]	@ 8000a50 <setup+0x358>
 8000816:	e896 0003 	ldmia.w	r6, {r0, r1}
 800081a:	e889 0003 	stmia.w	r9, {r0, r1}
    ecg_filtered1 = probe("ecg_filtered1");
 800081e:	ae24      	add	r6, sp, #144	@ 0x90
 8000820:	4983      	ldr	r1, [pc, #524]	@ (8000a30 <setup+0x338>)
 8000822:	4630      	mov	r0, r6
 8000824:	f000 fff0 	bl	8001808 <_ZN5probeC1EPKc>
 8000828:	4b82      	ldr	r3, [pc, #520]	@ (8000a34 <setup+0x33c>)
 800082a:	e896 0003 	ldmia.w	r6, {r0, r1}
 800082e:	e883 0003 	stmia.w	r3, {r0, r1}
    ecg_sqr = probe("ecg_sqr");
 8000832:	ae26      	add	r6, sp, #152	@ 0x98
 8000834:	4980      	ldr	r1, [pc, #512]	@ (8000a38 <setup+0x340>)
 8000836:	4630      	mov	r0, r6
 8000838:	f000 ffe6 	bl	8001808 <_ZN5probeC1EPKc>
 800083c:	f8df 8214 	ldr.w	r8, [pc, #532]	@ 8000a54 <setup+0x35c>
 8000840:	e896 0003 	ldmia.w	r6, {r0, r1}
 8000844:	e888 0003 	stmia.w	r8, {r0, r1}
    ecg_bpm = probe("ecg_bpm");
 8000848:	af28      	add	r7, sp, #160	@ 0xa0
 800084a:	497c      	ldr	r1, [pc, #496]	@ (8000a3c <setup+0x344>)
 800084c:	4638      	mov	r0, r7
 800084e:	f000 ffdb 	bl	8001808 <_ZN5probeC1EPKc>
 8000852:	4e7b      	ldr	r6, [pc, #492]	@ (8000a40 <setup+0x348>)
 8000854:	e897 0003 	ldmia.w	r7, {r0, r1}
 8000858:	e886 0003 	stmia.w	r6, {r0, r1}
    ecg_period = probe("ecg_period");
 800085c:	f10d 0ba8 	add.w	fp, sp, #168	@ 0xa8
 8000860:	4978      	ldr	r1, [pc, #480]	@ (8000a44 <setup+0x34c>)
 8000862:	4658      	mov	r0, fp
 8000864:	f000 ffd0 	bl	8001808 <_ZN5probeC1EPKc>
 8000868:	4f77      	ldr	r7, [pc, #476]	@ (8000a48 <setup+0x350>)
 800086a:	e89b 0003 	ldmia.w	fp, {r0, r1}
 800086e:	e887 0003 	stmia.w	r7, {r0, r1}
  raw_ecg.out(0) > lowPass;
 8000872:	2100      	movs	r1, #0
 8000874:	a81a      	add	r0, sp, #104	@ 0x68
 8000876:	f000 fe10 	bl	800149a <_ZN4node3outEh>
 800087a:	902c      	str	r0, [sp, #176]	@ 0xb0
 800087c:	f8bd 1060 	ldrh.w	r1, [sp, #96]	@ 0x60
 8000880:	a82c      	add	r0, sp, #176	@ 0xb0
 8000882:	f000 fedf 	bl	8001644 <_ZN4nodegtE2tf>
  lowPass > highPass;
 8000886:	f8bd 105c 	ldrh.w	r1, [sp, #92]	@ 0x5c
 800088a:	a818      	add	r0, sp, #96	@ 0x60
 800088c:	f000 fd47 	bl	800131e <_ZN2tfgtES_>
  highPass > derivative;
 8000890:	f8bd 1058 	ldrh.w	r1, [sp, #88]	@ 0x58
 8000894:	a817      	add	r0, sp, #92	@ 0x5c
 8000896:	f000 fd42 	bl	800131e <_ZN2tfgtES_>
  derivative > Abs.in(0);
 800089a:	2100      	movs	r1, #0
 800089c:	a815      	add	r0, sp, #84	@ 0x54
 800089e:	f000 fded 	bl	800147c <_ZN4node2inEh>
 80008a2:	4601      	mov	r1, r0
 80008a4:	902d      	str	r0, [sp, #180]	@ 0xb4
 80008a6:	a816      	add	r0, sp, #88	@ 0x58
 80008a8:	f000 feb6 	bl	8001618 <_ZN2tfgtE4node>
  Abs.out(0) > Average;
 80008ac:	2100      	movs	r1, #0
 80008ae:	a815      	add	r0, sp, #84	@ 0x54
 80008b0:	f000 fdf3 	bl	800149a <_ZN4node3outEh>
 80008b4:	902e      	str	r0, [sp, #184]	@ 0xb8
 80008b6:	f8bd 1050 	ldrh.w	r1, [sp, #80]	@ 0x50
 80008ba:	a82e      	add	r0, sp, #184	@ 0xb8
 80008bc:	f000 fec2 	bl	8001644 <_ZN4nodegtE2tf>
  Average > ecgToSqr.in(0);
 80008c0:	2100      	movs	r1, #0
 80008c2:	a813      	add	r0, sp, #76	@ 0x4c
 80008c4:	f000 fdda 	bl	800147c <_ZN4node2inEh>
 80008c8:	4601      	mov	r1, r0
 80008ca:	902f      	str	r0, [sp, #188]	@ 0xbc
 80008cc:	a814      	add	r0, sp, #80	@ 0x50
 80008ce:	f000 fea3 	bl	8001618 <_ZN2tfgtE4node>
  Vmax > ecgToSqr.in(1);
 80008d2:	2101      	movs	r1, #1
 80008d4:	a813      	add	r0, sp, #76	@ 0x4c
 80008d6:	f000 fdd1 	bl	800147c <_ZN4node2inEh>
 80008da:	4601      	mov	r1, r0
 80008dc:	9030      	str	r0, [sp, #192]	@ 0xc0
 80008de:	a80f      	add	r0, sp, #60	@ 0x3c
 80008e0:	f001 f872 	bl	80019c8 <_ZN5inputgtE4node>
  Vmin > ecgToSqr.in(2);
 80008e4:	2102      	movs	r1, #2
 80008e6:	a813      	add	r0, sp, #76	@ 0x4c
 80008e8:	f000 fdc8 	bl	800147c <_ZN4node2inEh>
 80008ec:	4601      	mov	r1, r0
 80008ee:	9031      	str	r0, [sp, #196]	@ 0xc4
 80008f0:	a80b      	add	r0, sp, #44	@ 0x2c
 80008f2:	f001 f869 	bl	80019c8 <_ZN5inputgtE4node>
  LTH > ecgToSqr.in(3);
 80008f6:	2103      	movs	r1, #3
 80008f8:	a813      	add	r0, sp, #76	@ 0x4c
 80008fa:	f000 fdbf 	bl	800147c <_ZN4node2inEh>
 80008fe:	4601      	mov	r1, r0
 8000900:	9032      	str	r0, [sp, #200]	@ 0xc8
 8000902:	a807      	add	r0, sp, #28
 8000904:	f001 f860 	bl	80019c8 <_ZN5inputgtE4node>
  HTH > ecgToSqr.in(4);
 8000908:	2104      	movs	r1, #4
 800090a:	a813      	add	r0, sp, #76	@ 0x4c
 800090c:	f000 fdb6 	bl	800147c <_ZN4node2inEh>
 8000910:	4601      	mov	r1, r0
 8000912:	9033      	str	r0, [sp, #204]	@ 0xcc
 8000914:	a803      	add	r0, sp, #12
 8000916:	f001 f857 	bl	80019c8 <_ZN5inputgtE4node>
  ecgToSqr.out(0) > periodMeasure;
 800091a:	2100      	movs	r1, #0
 800091c:	a813      	add	r0, sp, #76	@ 0x4c
 800091e:	f000 fdbc 	bl	800149a <_ZN4node3outEh>
 8000922:	9034      	str	r0, [sp, #208]	@ 0xd0
 8000924:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8000928:	a834      	add	r0, sp, #208	@ 0xd0
 800092a:	f000 fe8b 	bl	8001644 <_ZN4nodegtE2tf>
  ecgToSqr.out(0) > Multiplicator.in(0);
 800092e:	2100      	movs	r1, #0
 8000930:	a813      	add	r0, sp, #76	@ 0x4c
 8000932:	f000 fdb2 	bl	800149a <_ZN4node3outEh>
 8000936:	9035      	str	r0, [sp, #212]	@ 0xd4
 8000938:	2100      	movs	r1, #0
 800093a:	4668      	mov	r0, sp
 800093c:	f000 fd9e 	bl	800147c <_ZN4node2inEh>
 8000940:	4601      	mov	r1, r0
 8000942:	9036      	str	r0, [sp, #216]	@ 0xd8
 8000944:	a835      	add	r0, sp, #212	@ 0xd4
 8000946:	f000 fe91 	bl	800166c <_ZN4nodegtES_>
  buzzer_enable > Multiplicator.in(1);
 800094a:	2101      	movs	r1, #1
 800094c:	4668      	mov	r0, sp
 800094e:	f000 fd95 	bl	800147c <_ZN4node2inEh>
 8000952:	4601      	mov	r1, r0
 8000954:	9037      	str	r0, [sp, #220]	@ 0xdc
 8000956:	4620      	mov	r0, r4
 8000958:	f001 f836 	bl	80019c8 <_ZN5inputgtE4node>
  Multiplicator.out(0) > bip.in(0);
 800095c:	2100      	movs	r1, #0
 800095e:	4668      	mov	r0, sp
 8000960:	f000 fd9b 	bl	800149a <_ZN4node3outEh>
 8000964:	9038      	str	r0, [sp, #224]	@ 0xe0
 8000966:	2100      	movs	r1, #0
 8000968:	a819      	add	r0, sp, #100	@ 0x64
 800096a:	f000 fd87 	bl	800147c <_ZN4node2inEh>
 800096e:	4601      	mov	r1, r0
 8000970:	9039      	str	r0, [sp, #228]	@ 0xe4
 8000972:	a838      	add	r0, sp, #224	@ 0xe0
 8000974:	f000 fe7a 	bl	800166c <_ZN4nodegtES_>
  periodMeasure > MAX;
 8000978:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 800097c:	a802      	add	r0, sp, #8
 800097e:	f000 fcce 	bl	800131e <_ZN2tfgtES_>
  raw_ecg.out(0) > ecg_measure;
 8000982:	2100      	movs	r1, #0
 8000984:	a81a      	add	r0, sp, #104	@ 0x68
 8000986:	f000 fd88 	bl	800149a <_ZN4node3outEh>
 800098a:	903a      	str	r0, [sp, #232]	@ 0xe8
 800098c:	4651      	mov	r1, sl
 800098e:	a83a      	add	r0, sp, #232	@ 0xe8
 8000990:	f000 ff8b 	bl	80018aa <_ZN4nodegtER5probe>
  Average > ecg_filtered;
 8000994:	4649      	mov	r1, r9
 8000996:	a814      	add	r0, sp, #80	@ 0x50
 8000998:	f000 ff72 	bl	8001880 <_ZN2tfgtER5probe>
  ecgToSqr.out(0) > ecg_sqr;
 800099c:	2100      	movs	r1, #0
 800099e:	a813      	add	r0, sp, #76	@ 0x4c
 80009a0:	f000 fd7b 	bl	800149a <_ZN4node3outEh>
 80009a4:	903b      	str	r0, [sp, #236]	@ 0xec
 80009a6:	4641      	mov	r1, r8
 80009a8:	a83b      	add	r0, sp, #236	@ 0xec
 80009aa:	f000 ff7e 	bl	80018aa <_ZN4nodegtER5probe>
  periodMeasure > ecg_period;
 80009ae:	4639      	mov	r1, r7
 80009b0:	a802      	add	r0, sp, #8
 80009b2:	f000 ff65 	bl	8001880 <_ZN2tfgtER5probe>
  MAX > ecg_bpm;
 80009b6:	4631      	mov	r1, r6
 80009b8:	a801      	add	r0, sp, #4
 80009ba:	f000 ff61 	bl	8001880 <_ZN2tfgtER5probe>
  buzzer_enable.enableRemote();
 80009be:	4620      	mov	r0, r4
 80009c0:	f000 ffe0 	bl	8001984 <_ZN5input12enableRemoteEv>
  sdw1.stopDesign();
 80009c4:	4628      	mov	r0, r5
 80009c6:	f000 fb7b 	bl	80010c0 <_ZN3SDW10stopDesignEv>
  sdw1.startSampling();
 80009ca:	4628      	mov	r0, r5
 80009cc:	f000 fb90 	bl	80010f0 <_ZN3SDW13startSamplingEv>
}
 80009d0:	b03d      	add	sp, #244	@ 0xf4
 80009d2:	ecbd 8b02 	vpop	{d8}
 80009d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80009da:	bf00      	nop
 80009dc:	200003a8 	.word	0x200003a8
 80009e0:	437a0000 	.word	0x437a0000
 80009e4:	20000014 	.word	0x20000014
 80009e8:	20000004 	.word	0x20000004
 80009ec:	0802f8b4 	.word	0x0802f8b4
 80009f0:	0802f8c0 	.word	0x0802f8c0
 80009f4:	0802f8c8 	.word	0x0802f8c8
 80009f8:	42c80000 	.word	0x42c80000
 80009fc:	0802f8cc 	.word	0x0802f8cc
 8000a00:	00000000 	.word	0x00000000
 8000a04:	0802f8d4 	.word	0x0802f8d4
 8000a08:	42700000 	.word	0x42700000
 8000a0c:	0802f8dc 	.word	0x0802f8dc
 8000a10:	42a00000 	.word	0x42a00000
 8000a14:	0802f8e0 	.word	0x0802f8e0
 8000a18:	3a83126f 	.word	0x3a83126f
 8000a1c:	0802f8e4 	.word	0x0802f8e4
 8000a20:	20000398 	.word	0x20000398
 8000a24:	0802f8ec 	.word	0x0802f8ec
 8000a28:	0802f8f4 	.word	0x0802f8f4
 8000a2c:	0802f900 	.word	0x0802f900
 8000a30:	0802f910 	.word	0x0802f910
 8000a34:	20000380 	.word	0x20000380
 8000a38:	0802f920 	.word	0x0802f920
 8000a3c:	0802f928 	.word	0x0802f928
 8000a40:	20000370 	.word	0x20000370
 8000a44:	0802f930 	.word	0x0802f930
 8000a48:	20000368 	.word	0x20000368
 8000a4c:	20000390 	.word	0x20000390
 8000a50:	20000388 	.word	0x20000388
 8000a54:	20000378 	.word	0x20000378

08000a58 <loop>:
{
 8000a58:	b508      	push	{r3, lr}
  sdw1.getProbes();
 8000a5a:	480b      	ldr	r0, [pc, #44]	@ (8000a88 <loop+0x30>)
 8000a5c:	f000 fbde 	bl	800121c <_ZN3SDW9getProbesEv>
  ecg_measure_val = ecg_measure.getVal();
 8000a60:	480a      	ldr	r0, [pc, #40]	@ (8000a8c <loop+0x34>)
 8000a62:	f000 ff39 	bl	80018d8 <_ZN5probe6getValEv>
 8000a66:	4b0a      	ldr	r3, [pc, #40]	@ (8000a90 <loop+0x38>)
 8000a68:	ed83 0a00 	vstr	s0, [r3]
  ecg_filtered_val = ecg_filtered.getVal();
 8000a6c:	4809      	ldr	r0, [pc, #36]	@ (8000a94 <loop+0x3c>)
 8000a6e:	f000 ff33 	bl	80018d8 <_ZN5probe6getValEv>
 8000a72:	4b09      	ldr	r3, [pc, #36]	@ (8000a98 <loop+0x40>)
 8000a74:	ed83 0a00 	vstr	s0, [r3]
  ecg_bpm_val = ecg_bpm.getVal();
 8000a78:	4808      	ldr	r0, [pc, #32]	@ (8000a9c <loop+0x44>)
 8000a7a:	f000 ff2d 	bl	80018d8 <_ZN5probe6getValEv>
 8000a7e:	4b08      	ldr	r3, [pc, #32]	@ (8000aa0 <loop+0x48>)
 8000a80:	ed83 0a00 	vstr	s0, [r3]
}
 8000a84:	bd08      	pop	{r3, pc}
 8000a86:	bf00      	nop
 8000a88:	200003a8 	.word	0x200003a8
 8000a8c:	20000390 	.word	0x20000390
 8000a90:	20000364 	.word	0x20000364
 8000a94:	20000388 	.word	0x20000388
 8000a98:	20000360 	.word	0x20000360
 8000a9c:	20000370 	.word	0x20000370
 8000aa0:	2000035c 	.word	0x2000035c

08000aa4 <_GLOBAL__sub_I_sdw1>:
 8000aa4:	b508      	push	{r3, lr}
 8000aa6:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8000aaa:	2001      	movs	r0, #1
 8000aac:	f7ff fdf2 	bl	8000694 <_Z41__static_initialization_and_destruction_0ii>
 8000ab0:	bd08      	pop	{r3, pc}

08000ab2 <_ZL12CalculateCrcPht>:
        currentDesignStatus = SDW_DesignStatus::BadParam;
    }
}

static uint16_t CalculateCrc(uint8_t *Data, uint16_t DataLength)
{
 8000ab2:	b530      	push	{r4, r5, lr}
 8000ab4:	4604      	mov	r4, r0
 8000ab6:	460d      	mov	r5, r1
    uint16_t Crc = 0;
    uint16_t ByteIndex;
    uint8_t BitIndex;
    uint8_t CrcLsb = 0;

    for (ByteIndex = 0; ByteIndex < DataLength; ByteIndex++)
 8000ab8:	2100      	movs	r1, #0
    uint16_t Crc = 0;
 8000aba:	4608      	mov	r0, r1
    for (ByteIndex = 0; ByteIndex < DataLength; ByteIndex++)
 8000abc:	e019      	b.n	8000af2 <_ZL12CalculateCrcPht+0x40>
    {
        for (BitIndex = 0; BitIndex < 8; BitIndex++)
 8000abe:	3301      	adds	r3, #1
 8000ac0:	b2db      	uxtb	r3, r3
 8000ac2:	2b07      	cmp	r3, #7
 8000ac4:	d813      	bhi.n	8000aee <_ZL12CalculateCrcPht+0x3c>
        {
            CrcLsb = Crc & 0x01;
 8000ac6:	f000 0c01 	and.w	ip, r0, #1
            Crc >>= 1;

            if (((Data[ByteIndex] & (1u << BitIndex)) >> BitIndex) != CrcLsb)
 8000aca:	5c62      	ldrb	r2, [r4, r1]
 8000acc:	f04f 0e01 	mov.w	lr, #1
 8000ad0:	fa0e fe03 	lsl.w	lr, lr, r3
 8000ad4:	ea02 020e 	and.w	r2, r2, lr
 8000ad8:	40da      	lsrs	r2, r3
 8000ada:	4562      	cmp	r2, ip
 8000adc:	ea4f 0050 	mov.w	r0, r0, lsr #1
 8000ae0:	d0ed      	beq.n	8000abe <_ZL12CalculateCrcPht+0xc>
            {
                Crc = Crc ^ 0x1021;
 8000ae2:	f480 5081 	eor.w	r0, r0, #4128	@ 0x1020
 8000ae6:	f080 0001 	eor.w	r0, r0, #1
 8000aea:	b280      	uxth	r0, r0
 8000aec:	e7e7      	b.n	8000abe <_ZL12CalculateCrcPht+0xc>
    for (ByteIndex = 0; ByteIndex < DataLength; ByteIndex++)
 8000aee:	3101      	adds	r1, #1
 8000af0:	b289      	uxth	r1, r1
 8000af2:	42a9      	cmp	r1, r5
 8000af4:	d201      	bcs.n	8000afa <_ZL12CalculateCrcPht+0x48>
        for (BitIndex = 0; BitIndex < 8; BitIndex++)
 8000af6:	2300      	movs	r3, #0
 8000af8:	e7e3      	b.n	8000ac2 <_ZL12CalculateCrcPht+0x10>
            }
        }
    }

    return Crc;
}
 8000afa:	bd30      	pop	{r4, r5, pc}

08000afc <_ZL18CalculateAndsetCrcPht>:

static void CalculateAndsetCrc(uint8_t *Data, uint16_t DataLength)
{
 8000afc:	b538      	push	{r3, r4, r5, lr}
 8000afe:	4605      	mov	r5, r0
 8000b00:	460c      	mov	r4, r1
    uint16_t Crc = 0;
    Crc = CalculateCrc(Data, DataLength);
 8000b02:	f7ff ffd6 	bl	8000ab2 <_ZL12CalculateCrcPht>
    Data[DataLength] = (uint8_t)Crc;
 8000b06:	5528      	strb	r0, [r5, r4]
    Data[DataLength + 1u] = (uint8_t)(Crc >> 8u);
 8000b08:	f3c0 200f 	ubfx	r0, r0, #8, #16
 8000b0c:	3401      	adds	r4, #1
 8000b0e:	5528      	strb	r0, [r5, r4]
}
 8000b10:	bd38      	pop	{r3, r4, r5, pc}

08000b12 <_ZL24SerializeResponseRequestPhP15SDW_CommandInfo>:

static void SerializeResponseRequest(uint8_t *SerialData, SDW_CommandInfo *Command)
{
    if ((SerialData != NULL) && (Command != NULL))
 8000b12:	b168      	cbz	r0, 8000b30 <_ZL24SerializeResponseRequestPhP15SDW_CommandInfo+0x1e>
{
 8000b14:	b508      	push	{r3, lr}
    if ((SerialData != NULL) && (Command != NULL))
 8000b16:	b151      	cbz	r1, 8000b2e <_ZL24SerializeResponseRequestPhP15SDW_CommandInfo+0x1c>
    {
        SerialData[SDW_CMD_SEQ_NUMBER_IDX] = Command->TransactionInfo.SeqNbr;
 8000b18:	f891 2084 	ldrb.w	r2, [r1, #132]	@ 0x84
 8000b1c:	7002      	strb	r2, [r0, #0]
        SerialData[SDW_CMD_READ_WRITE_IDX] = SDW_CMD_READ;
 8000b1e:	2201      	movs	r2, #1
 8000b20:	7042      	strb	r2, [r0, #1]
        SerialData[SDW_CMD_SIZEL_IDX] = (uint8_t)(SDW_CMD_RESPONSE_ID & 0x00FFu);
 8000b22:	22ff      	movs	r2, #255	@ 0xff
 8000b24:	7082      	strb	r2, [r0, #2]
        SerialData[SDW_CMD_SIZEH_IDX] = (uint8_t)((SDW_CMD_RESPONSE_ID & 0xFF00u) >> 8u);
 8000b26:	70c2      	strb	r2, [r0, #3]
        CalculateAndsetCrc(SerialData, SDW_RESPONSE_REQ_SIZE - SDW_CMD_CRC_SIZE);
 8000b28:	2104      	movs	r1, #4
 8000b2a:	f7ff ffe7 	bl	8000afc <_ZL18CalculateAndsetCrcPht>
    }
}
 8000b2e:	bd08      	pop	{r3, pc}
 8000b30:	4770      	bx	lr

08000b32 <_ZL15SerializeHeaderPhP15SDW_CommandInfo>:
    }
}

static void SerializeHeader(uint8_t *SerialData, SDW_CommandInfo *Command)
{
    if ((SerialData != NULL) && (Command != NULL))
 8000b32:	b188      	cbz	r0, 8000b58 <_ZL15SerializeHeaderPhP15SDW_CommandInfo+0x26>
{
 8000b34:	b508      	push	{r3, lr}
    if ((SerialData != NULL) && (Command != NULL))
 8000b36:	b171      	cbz	r1, 8000b56 <_ZL15SerializeHeaderPhP15SDW_CommandInfo+0x24>
    {
        SerialData[SDW_CMD_SEQ_NUMBER_IDX] = Command->TransactionInfo.SeqNbr;
 8000b38:	f891 2084 	ldrb.w	r2, [r1, #132]	@ 0x84
 8000b3c:	7002      	strb	r2, [r0, #0]
        SerialData[SDW_CMD_READ_WRITE_IDX] = SDW_CMD_WRITE;
 8000b3e:	2200      	movs	r2, #0
 8000b40:	7042      	strb	r2, [r0, #1]
        SerialData[SDW_CMD_SIZEL_IDX] = (uint8_t)(Command->FuncInfo.DataSize & 0x00FFu);
 8000b42:	f8b1 2078 	ldrh.w	r2, [r1, #120]	@ 0x78
 8000b46:	7082      	strb	r2, [r0, #2]
        SerialData[SDW_CMD_SIZEH_IDX] = (uint8_t)((Command->FuncInfo.DataSize & 0xFF00u) >> 8u);
 8000b48:	f8b1 2078 	ldrh.w	r2, [r1, #120]	@ 0x78
 8000b4c:	0a12      	lsrs	r2, r2, #8
 8000b4e:	70c2      	strb	r2, [r0, #3]
        CalculateAndsetCrc(SerialData, SDW_CMD_HEADER_SIZE - SDW_CMD_CRC_SIZE);
 8000b50:	2104      	movs	r1, #4
 8000b52:	f7ff ffd3 	bl	8000afc <_ZL18CalculateAndsetCrcPht>
    }
}
 8000b56:	bd08      	pop	{r3, pc}
 8000b58:	4770      	bx	lr
	...

08000b5c <_ZL16PrepareCmdHeaderP15SDW_CommandInfot10SDW_FuncIdh13SDW_SubFuncIdt>:
        SDW_FuncId FuncId,
        uint8_t NbrOfParams,
        SDW_SubFuncId SubFuncId,
        uint16_t BlockId)
{
    if (Command != NULL)
 8000b5c:	4684      	mov	ip, r0
 8000b5e:	b188      	cbz	r0, 8000b84 <_ZL16PrepareCmdHeaderP15SDW_CommandInfot10SDW_FuncIdh13SDW_SubFuncIdt+0x28>
    {
        Command->TransactionInfo.SeqNbr = (uint8_t)SequenceNumber;
 8000b60:	4809      	ldr	r0, [pc, #36]	@ (8000b88 <_ZL16PrepareCmdHeaderP15SDW_CommandInfot10SDW_FuncIdh13SDW_SubFuncIdt+0x2c>)
 8000b62:	8800      	ldrh	r0, [r0, #0]
 8000b64:	f88c 0084 	strb.w	r0, [ip, #132]	@ 0x84
        Command->FuncInfo.DataSize = SerialDataSize;
 8000b68:	f8ac 1078 	strh.w	r1, [ip, #120]	@ 0x78
        Command->FuncInfo.BlockId = BlockId;
 8000b6c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8000b70:	f8ac 107a 	strh.w	r1, [ip, #122]	@ 0x7a
        Command->FuncInfo.FuncId = FuncId;
 8000b74:	f88c 207e 	strb.w	r2, [ip, #126]	@ 0x7e
        Command->FuncInfo.SubFuncId = SubFuncId;
 8000b78:	f8bd 2000 	ldrh.w	r2, [sp]
 8000b7c:	f8ac 207c 	strh.w	r2, [ip, #124]	@ 0x7c
        Command->FuncInfo.NbrOfParams = NbrOfParams;
 8000b80:	f88c 307f 	strb.w	r3, [ip, #127]	@ 0x7f
    }
}
 8000b84:	4770      	bx	lr
 8000b86:	bf00      	nop
 8000b88:	20000658 	.word	0x20000658

08000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>:
static void PrepareParam(SDW_CommandInfo *Command,
        uint8_t ParamIndex,
        uint8_t SizeOfParam,
        SDW_FuncParamId FuncParamId,
        SDW_FuncParam *FuncParam)
{
 8000b8c:	b410      	push	{r4}
 8000b8e:	9c01      	ldr	r4, [sp, #4]
    if ((Command != NULL) && (FuncParam != NULL))
 8000b90:	b148      	cbz	r0, 8000ba6 <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam+0x1a>
 8000b92:	4684      	mov	ip, r0
 8000b94:	b13c      	cbz	r4, 8000ba6 <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam+0x1a>
    {
        Command->FuncInfo.FuncParamIds[ParamIndex] = FuncParamId;
 8000b96:	4408      	add	r0, r1
 8000b98:	f880 3050 	strb.w	r3, [r0, #80]	@ 0x50
        Command->FuncInfo.FuncParamSizes[ParamIndex] = SizeOfParam;
 8000b9c:	f880 2064 	strb.w	r2, [r0, #100]	@ 0x64
        memcpy((void *)&Command->FuncInfo.FuncParams[ParamIndex], (const void *)FuncParam, sizeof(SDW_FuncParam));
 8000ba0:	6823      	ldr	r3, [r4, #0]
 8000ba2:	f84c 3021 	str.w	r3, [ip, r1, lsl #2]
    }
}
 8000ba6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000baa:	4770      	bx	lr

08000bac <_ZL20SerializeFullCommandPhP15SDW_CommandInfo>:
    if ((SerialData != NULL) && (Command != NULL))
 8000bac:	2800      	cmp	r0, #0
 8000bae:	d04e      	beq.n	8000c4e <_ZL20SerializeFullCommandPhP15SDW_CommandInfo+0xa2>
{
 8000bb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000bb4:	460e      	mov	r6, r1
 8000bb6:	4607      	mov	r7, r0
    if ((SerialData != NULL) && (Command != NULL))
 8000bb8:	2900      	cmp	r1, #0
 8000bba:	d046      	beq.n	8000c4a <_ZL20SerializeFullCommandPhP15SDW_CommandInfo+0x9e>
        SerialData[SDW_CMD_SEQ_NUMBER_IDX] = Command->TransactionInfo.SeqNbr;
 8000bbc:	f891 3084 	ldrb.w	r3, [r1, #132]	@ 0x84
 8000bc0:	7003      	strb	r3, [r0, #0]
        SerialData[SDW_CMD_READ_WRITE_IDX] = SDW_CMD_WRITE;
 8000bc2:	2400      	movs	r4, #0
 8000bc4:	7044      	strb	r4, [r0, #1]
        SerialData[SDW_CMD_SIZEL_IDX] = (uint8_t)(SDW_CMD_FULL_CMD_ID & 0x00FFu);
 8000bc6:	23ee      	movs	r3, #238	@ 0xee
 8000bc8:	7083      	strb	r3, [r0, #2]
        SerialData[SDW_CMD_SIZEH_IDX] = (uint8_t)((SDW_CMD_FULL_CMD_ID & 0xFF00u) >> 8u);
 8000bca:	70c3      	strb	r3, [r0, #3]
        SerialData[SDW_CMD_BLOCKIDL_IDX] = (uint8_t)(Command->FuncInfo.BlockId & 0x00FFu);
 8000bcc:	f8b1 307a 	ldrh.w	r3, [r1, #122]	@ 0x7a
 8000bd0:	7103      	strb	r3, [r0, #4]
        SerialData[SDW_CMD_BLOCKIDH_IDX] = (uint8_t)((Command->FuncInfo.BlockId & 0xFF00u) >> 8u);
 8000bd2:	f8b1 307a 	ldrh.w	r3, [r1, #122]	@ 0x7a
 8000bd6:	0a1b      	lsrs	r3, r3, #8
 8000bd8:	7143      	strb	r3, [r0, #5]
        SerialData[SDW_CMD_FUNC_ID_IDX] = (uint8_t)(Command->FuncInfo.FuncId);
 8000bda:	f891 307e 	ldrb.w	r3, [r1, #126]	@ 0x7e
 8000bde:	7183      	strb	r3, [r0, #6]
        SerialData[SDW_CMD_SUB_FUNC_IDL_IDX] = (uint8_t)(Command->FuncInfo.SubFuncId & 0x00FFu);
 8000be0:	f8b1 307c 	ldrh.w	r3, [r1, #124]	@ 0x7c
 8000be4:	71c3      	strb	r3, [r0, #7]
        SerialData[SDW_CMD_SUB_FUNC_IDH_IDX] = (uint8_t)((Command->FuncInfo.SubFuncId & 0xFF00u) >> 8u);
 8000be6:	f8b1 307c 	ldrh.w	r3, [r1, #124]	@ 0x7c
 8000bea:	0a1b      	lsrs	r3, r3, #8
 8000bec:	7203      	strb	r3, [r0, #8]
        SerialData[SDW_CMD_NBR_OF_PARAMS_IDX] = Command->FuncInfo.NbrOfParams;
 8000bee:	f891 307f 	ldrb.w	r3, [r1, #127]	@ 0x7f
 8000bf2:	7243      	strb	r3, [r0, #9]
        uint32_t currentCmdInfoIndex = SDW_CMD_START_OF_PARAMS_IDX;
 8000bf4:	250a      	movs	r5, #10
        for (uint8_t index = 0u; index < Command->FuncInfo.NbrOfParams; index++)
 8000bf6:	e008      	b.n	8000c0a <_ZL20SerializeFullCommandPhP15SDW_CommandInfo+0x5e>
                    memcpy((void *)&SerialData[currentCmdInfoIndex],
 8000bf8:	4642      	mov	r2, r8
 8000bfa:	f856 1024 	ldr.w	r1, [r6, r4, lsl #2]
 8000bfe:	1978      	adds	r0, r7, r5
 8000c00:	f02e f8c9 	bl	802ed96 <memcpy>
                    currentCmdInfoIndex += TmpFuncParamSize;
 8000c04:	4445      	add	r5, r8
        for (uint8_t index = 0u; index < Command->FuncInfo.NbrOfParams; index++)
 8000c06:	3401      	adds	r4, #1
 8000c08:	b2e4      	uxtb	r4, r4
 8000c0a:	f896 307f 	ldrb.w	r3, [r6, #127]	@ 0x7f
 8000c0e:	42a3      	cmp	r3, r4
 8000c10:	d917      	bls.n	8000c42 <_ZL20SerializeFullCommandPhP15SDW_CommandInfo+0x96>
            SDW_FuncParamId TmpFuncParamId = Command->FuncInfo.FuncParamIds[index];
 8000c12:	1932      	adds	r2, r6, r4
 8000c14:	f892 3050 	ldrb.w	r3, [r2, #80]	@ 0x50
            uint8_t TmpFuncParamSize = Command->FuncInfo.FuncParamSizes[index];
 8000c18:	f892 8064 	ldrb.w	r8, [r2, #100]	@ 0x64
            SerialData[currentCmdInfoIndex] = (uint8_t)TmpFuncParamId;
 8000c1c:	557b      	strb	r3, [r7, r5]
            SerialData[currentCmdInfoIndex + 1u] = TmpFuncParamSize;
 8000c1e:	1c6a      	adds	r2, r5, #1
 8000c20:	f807 8002 	strb.w	r8, [r7, r2]
            currentCmdInfoIndex += 2u;
 8000c24:	3502      	adds	r5, #2
            switch (TmpFuncParamId)
 8000c26:	2b04      	cmp	r3, #4
 8000c28:	d9e6      	bls.n	8000bf8 <_ZL20SerializeFullCommandPhP15SDW_CommandInfo+0x4c>
 8000c2a:	3b05      	subs	r3, #5
 8000c2c:	b2db      	uxtb	r3, r3
 8000c2e:	2b03      	cmp	r3, #3
 8000c30:	d8e9      	bhi.n	8000c06 <_ZL20SerializeFullCommandPhP15SDW_CommandInfo+0x5a>
                    memcpy((void *)&SerialData[currentCmdInfoIndex],
 8000c32:	4642      	mov	r2, r8
 8000c34:	eb06 0184 	add.w	r1, r6, r4, lsl #2
 8000c38:	1978      	adds	r0, r7, r5
 8000c3a:	f02e f8ac 	bl	802ed96 <memcpy>
                    currentCmdInfoIndex += TmpFuncParamSize;
 8000c3e:	4445      	add	r5, r8
                break;
 8000c40:	e7e1      	b.n	8000c06 <_ZL20SerializeFullCommandPhP15SDW_CommandInfo+0x5a>
        CalculateAndsetCrc(SerialData, currentCmdInfoIndex);
 8000c42:	b2a9      	uxth	r1, r5
 8000c44:	4638      	mov	r0, r7
 8000c46:	f7ff ff59 	bl	8000afc <_ZL18CalculateAndsetCrcPht>
}
 8000c4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000c4e:	4770      	bx	lr

08000c50 <_ZL11SendCommandPht>:
    if (Cmd != NULL)
 8000c50:	b1f8      	cbz	r0, 8000c92 <_ZL11SendCommandPht+0x42>
{
 8000c52:	b538      	push	{r3, r4, r5, lr}
 8000c54:	460c      	mov	r4, r1
 8000c56:	4605      	mov	r5, r0
        HAL_GPIO_WritePin(GPIOH, GPIO_PIN_6, GPIO_PIN_RESET); // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6, GPIO_PIN_RESET);
 8000c58:	2200      	movs	r2, #0
 8000c5a:	2140      	movs	r1, #64	@ 0x40
 8000c5c:	480d      	ldr	r0, [pc, #52]	@ (8000c94 <_ZL11SendCommandPht+0x44>)
 8000c5e:	f00c fa0d 	bl	800d07c <HAL_GPIO_WritePin>
        HAL_Delay(1);
 8000c62:	2001      	movs	r0, #1
 8000c64:	f00a feee 	bl	800ba44 <HAL_Delay>
        HAL_SPI_Transmit_DMA(&hspi2, (const uint8_t*)Cmd, Size);
 8000c68:	4622      	mov	r2, r4
 8000c6a:	4629      	mov	r1, r5
 8000c6c:	480a      	ldr	r0, [pc, #40]	@ (8000c98 <_ZL11SendCommandPht+0x48>)
 8000c6e:	f00e fb45 	bl	800f2fc <HAL_SPI_Transmit_DMA>
        while (SDW_TX_DONE != true);
 8000c72:	4b0a      	ldr	r3, [pc, #40]	@ (8000c9c <_ZL11SendCommandPht+0x4c>)
 8000c74:	781b      	ldrb	r3, [r3, #0]
 8000c76:	2b00      	cmp	r3, #0
 8000c78:	d0fb      	beq.n	8000c72 <_ZL11SendCommandPht+0x22>
        SDW_TX_DONE = false ;
 8000c7a:	4b08      	ldr	r3, [pc, #32]	@ (8000c9c <_ZL11SendCommandPht+0x4c>)
 8000c7c:	2200      	movs	r2, #0
 8000c7e:	701a      	strb	r2, [r3, #0]
        HAL_Delay(1);
 8000c80:	2001      	movs	r0, #1
 8000c82:	f00a fedf 	bl	800ba44 <HAL_Delay>
        HAL_GPIO_WritePin(GPIOH, GPIO_PIN_6, GPIO_PIN_SET); // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6, GPIO_PIN_RESET);
 8000c86:	2201      	movs	r2, #1
 8000c88:	2140      	movs	r1, #64	@ 0x40
 8000c8a:	4802      	ldr	r0, [pc, #8]	@ (8000c94 <_ZL11SendCommandPht+0x44>)
 8000c8c:	f00c f9f6 	bl	800d07c <HAL_GPIO_WritePin>
}
 8000c90:	bd38      	pop	{r3, r4, r5, pc}
 8000c92:	4770      	bx	lr
 8000c94:	40021c00 	.word	0x40021c00
 8000c98:	20005194 	.word	0x20005194
 8000c9c:	200003ad 	.word	0x200003ad

08000ca0 <_ZL11GetResponsePhS_>:
    if ((Cmd != NULL) && (Response != NULL))
 8000ca0:	2800      	cmp	r0, #0
 8000ca2:	d059      	beq.n	8000d58 <_ZL11GetResponsePhS_+0xb8>
{
 8000ca4:	b570      	push	{r4, r5, r6, lr}
 8000ca6:	460c      	mov	r4, r1
 8000ca8:	4605      	mov	r5, r0
    if ((Cmd != NULL) && (Response != NULL))
 8000caa:	2900      	cmp	r1, #0
 8000cac:	d050      	beq.n	8000d50 <_ZL11GetResponsePhS_+0xb0>
        HAL_GPIO_WritePin(GPIOH, GPIO_PIN_6, GPIO_PIN_RESET); //HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6, GPIO_PIN_RESET);
 8000cae:	2200      	movs	r2, #0
 8000cb0:	2140      	movs	r1, #64	@ 0x40
 8000cb2:	482b      	ldr	r0, [pc, #172]	@ (8000d60 <_ZL11GetResponsePhS_+0xc0>)
 8000cb4:	f00c f9e2 	bl	800d07c <HAL_GPIO_WritePin>
        HAL_Delay(1);
 8000cb8:	2001      	movs	r0, #1
 8000cba:	f00a fec3 	bl	800ba44 <HAL_Delay>
        HAL_SPI_Transmit_DMA(&hspi2, (const uint8_t*)Cmd, SDW_RESPONSE_REQ_SIZE);
 8000cbe:	2206      	movs	r2, #6
 8000cc0:	4629      	mov	r1, r5
 8000cc2:	4828      	ldr	r0, [pc, #160]	@ (8000d64 <_ZL11GetResponsePhS_+0xc4>)
 8000cc4:	f00e fb1a 	bl	800f2fc <HAL_SPI_Transmit_DMA>
        while (SDW_TX_DONE != true);
 8000cc8:	4b27      	ldr	r3, [pc, #156]	@ (8000d68 <_ZL11GetResponsePhS_+0xc8>)
 8000cca:	781b      	ldrb	r3, [r3, #0]
 8000ccc:	2b00      	cmp	r3, #0
 8000cce:	d0fb      	beq.n	8000cc8 <_ZL11GetResponsePhS_+0x28>
        SDW_TX_DONE = false ;
 8000cd0:	2600      	movs	r6, #0
 8000cd2:	4b25      	ldr	r3, [pc, #148]	@ (8000d68 <_ZL11GetResponsePhS_+0xc8>)
 8000cd4:	701e      	strb	r6, [r3, #0]
        HAL_Delay(1);
 8000cd6:	2001      	movs	r0, #1
 8000cd8:	f00a feb4 	bl	800ba44 <HAL_Delay>
        HAL_GPIO_WritePin(GPIOH, GPIO_PIN_6, GPIO_PIN_SET); //HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6, GPIO_PIN_RESET);
 8000cdc:	4d20      	ldr	r5, [pc, #128]	@ (8000d60 <_ZL11GetResponsePhS_+0xc0>)
 8000cde:	2201      	movs	r2, #1
 8000ce0:	2140      	movs	r1, #64	@ 0x40
 8000ce2:	4628      	mov	r0, r5
 8000ce4:	f00c f9ca 	bl	800d07c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(GPIOH, GPIO_PIN_6, GPIO_PIN_RESET);//HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6, GPIO_PIN_RESET);
 8000ce8:	4632      	mov	r2, r6
 8000cea:	2140      	movs	r1, #64	@ 0x40
 8000cec:	4628      	mov	r0, r5
 8000cee:	f00c f9c5 	bl	800d07c <HAL_GPIO_WritePin>
        HAL_Delay(1);
 8000cf2:	2001      	movs	r0, #1
 8000cf4:	f00a fea6 	bl	800ba44 <HAL_Delay>
        HAL_SPI_Receive_DMA(&hspi2, Response, SDW_RESPONSE_SIZE);
 8000cf8:	2204      	movs	r2, #4
 8000cfa:	4621      	mov	r1, r4
 8000cfc:	4819      	ldr	r0, [pc, #100]	@ (8000d64 <_ZL11GetResponsePhS_+0xc4>)
 8000cfe:	f00e fbe7 	bl	800f4d0 <HAL_SPI_Receive_DMA>
        while (SDW_RX_DONE != true);
 8000d02:	4b1a      	ldr	r3, [pc, #104]	@ (8000d6c <_ZL11GetResponsePhS_+0xcc>)
 8000d04:	781b      	ldrb	r3, [r3, #0]
 8000d06:	2b00      	cmp	r3, #0
 8000d08:	d0fb      	beq.n	8000d02 <_ZL11GetResponsePhS_+0x62>
        SDW_RX_DONE = false ;
 8000d0a:	4b18      	ldr	r3, [pc, #96]	@ (8000d6c <_ZL11GetResponsePhS_+0xcc>)
 8000d0c:	2200      	movs	r2, #0
 8000d0e:	701a      	strb	r2, [r3, #0]
        HAL_GPIO_WritePin(GPIOH, GPIO_PIN_6, GPIO_PIN_SET);//HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6, GPIO_PIN_RESET);
 8000d10:	2201      	movs	r2, #1
 8000d12:	2140      	movs	r1, #64	@ 0x40
 8000d14:	4812      	ldr	r0, [pc, #72]	@ (8000d60 <_ZL11GetResponsePhS_+0xc0>)
 8000d16:	f00c f9b1 	bl	800d07c <HAL_GPIO_WritePin>
        if (SequenceNumber != Response[SDW_RES_SEQ_NUMBER_IDX])
 8000d1a:	7822      	ldrb	r2, [r4, #0]
 8000d1c:	4b14      	ldr	r3, [pc, #80]	@ (8000d70 <_ZL11GetResponsePhS_+0xd0>)
 8000d1e:	881b      	ldrh	r3, [r3, #0]
 8000d20:	429a      	cmp	r2, r3
 8000d22:	d003      	beq.n	8000d2c <_ZL11GetResponsePhS_+0x8c>
            currentComStatus = WrongSeqNumber;
 8000d24:	4b13      	ldr	r3, [pc, #76]	@ (8000d74 <_ZL11GetResponsePhS_+0xd4>)
 8000d26:	2201      	movs	r2, #1
 8000d28:	701a      	strb	r2, [r3, #0]
 8000d2a:	e014      	b.n	8000d56 <_ZL11GetResponsePhS_+0xb6>
        else if (CalculateCrc(&Response[0u], SDW_RESPONSE_SIZE - SDW_CMD_CRC_SIZE) !=
 8000d2c:	2102      	movs	r1, #2
 8000d2e:	4620      	mov	r0, r4
 8000d30:	f7ff febf 	bl	8000ab2 <_ZL12CalculateCrcPht>
                ((uint16_t)(Response[SDW_RES_CRCL_IDX] | (Response[SDW_RES_CRCH_IDX] << 8u))))
 8000d34:	78a3      	ldrb	r3, [r4, #2]
 8000d36:	78e2      	ldrb	r2, [r4, #3]
 8000d38:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
        else if (CalculateCrc(&Response[0u], SDW_RESPONSE_SIZE - SDW_CMD_CRC_SIZE) !=
 8000d3c:	4298      	cmp	r0, r3
 8000d3e:	d003      	beq.n	8000d48 <_ZL11GetResponsePhS_+0xa8>
            currentComStatus = WrongCrc;
 8000d40:	4b0c      	ldr	r3, [pc, #48]	@ (8000d74 <_ZL11GetResponsePhS_+0xd4>)
 8000d42:	2202      	movs	r2, #2
 8000d44:	701a      	strb	r2, [r3, #0]
 8000d46:	e006      	b.n	8000d56 <_ZL11GetResponsePhS_+0xb6>
            currentDesignStatus = static_cast<SDW_DesignStatus>(Response[SDW_RES_RESCODE_IDX]);
 8000d48:	7862      	ldrb	r2, [r4, #1]
 8000d4a:	4b0b      	ldr	r3, [pc, #44]	@ (8000d78 <_ZL11GetResponsePhS_+0xd8>)
 8000d4c:	701a      	strb	r2, [r3, #0]
 8000d4e:	e002      	b.n	8000d56 <_ZL11GetResponsePhS_+0xb6>
        currentDesignStatus = SDW_DesignStatus::BadParam;
 8000d50:	4b09      	ldr	r3, [pc, #36]	@ (8000d78 <_ZL11GetResponsePhS_+0xd8>)
 8000d52:	2206      	movs	r2, #6
 8000d54:	701a      	strb	r2, [r3, #0]
}
 8000d56:	bd70      	pop	{r4, r5, r6, pc}
        currentDesignStatus = SDW_DesignStatus::BadParam;
 8000d58:	4b07      	ldr	r3, [pc, #28]	@ (8000d78 <_ZL11GetResponsePhS_+0xd8>)
 8000d5a:	2206      	movs	r2, #6
 8000d5c:	701a      	strb	r2, [r3, #0]
 8000d5e:	4770      	bx	lr
 8000d60:	40021c00 	.word	0x40021c00
 8000d64:	20005194 	.word	0x20005194
 8000d68:	200003ad 	.word	0x200003ad
 8000d6c:	200003ac 	.word	0x200003ac
 8000d70:	20000658 	.word	0x20000658
 8000d74:	20000654 	.word	0x20000654
 8000d78:	20000655 	.word	0x20000655

08000d7c <_ZL9HandleCmdP15SDW_CommandInfot>:
    if (SerialDataSize <= SDW_CMD_MAX_SIZE)
 8000d7c:	f5b1 7fc8 	cmp.w	r1, #400	@ 0x190
 8000d80:	d847      	bhi.n	8000e12 <_ZL9HandleCmdP15SDW_CommandInfot+0x96>
{
 8000d82:	b570      	push	{r4, r5, r6, lr}
 8000d84:	4605      	mov	r5, r0
 8000d86:	460c      	mov	r4, r1
        if ((SDW_ComStatus::ComOk == currentComStatus) &&
 8000d88:	4b24      	ldr	r3, [pc, #144]	@ (8000e1c <_ZL9HandleCmdP15SDW_CommandInfot+0xa0>)
 8000d8a:	781b      	ldrb	r3, [r3, #0]
 8000d8c:	b913      	cbnz	r3, 8000d94 <_ZL9HandleCmdP15SDW_CommandInfot+0x18>
                (SDW_DesignStatus::DesignOk == currentDesignStatus))
 8000d8e:	4b24      	ldr	r3, [pc, #144]	@ (8000e20 <_ZL9HandleCmdP15SDW_CommandInfot+0xa4>)
 8000d90:	781b      	ldrb	r3, [r3, #0]
        if ((SDW_ComStatus::ComOk == currentComStatus) &&
 8000d92:	b103      	cbz	r3, 8000d96 <_ZL9HandleCmdP15SDW_CommandInfot+0x1a>
}
 8000d94:	bd70      	pop	{r4, r5, r6, pc}
            SerializeHeader(&SerialData[0u], Command);
 8000d96:	4e23      	ldr	r6, [pc, #140]	@ (8000e24 <_ZL9HandleCmdP15SDW_CommandInfot+0xa8>)
 8000d98:	4601      	mov	r1, r0
 8000d9a:	4630      	mov	r0, r6
 8000d9c:	f7ff fec9 	bl	8000b32 <_ZL15SerializeHeaderPhP15SDW_CommandInfo>
            SendCommand(&SerialData[0u], SDW_CMD_HEADER_SIZE);
 8000da0:	2106      	movs	r1, #6
 8000da2:	4630      	mov	r0, r6
 8000da4:	f7ff ff54 	bl	8000c50 <_ZL11SendCommandPht>
            SerializeFullCommand(&SerialData[0u], Command);
 8000da8:	4629      	mov	r1, r5
 8000daa:	4630      	mov	r0, r6
 8000dac:	f7ff fefe 	bl	8000bac <_ZL20SerializeFullCommandPhP15SDW_CommandInfo>
            SendCommand(&SerialData[0u], SerialDataSize);
 8000db0:	4621      	mov	r1, r4
 8000db2:	4630      	mov	r0, r6
 8000db4:	f7ff ff4c 	bl	8000c50 <_ZL11SendCommandPht>
            HAL_Delay(50); // Check if needed
 8000db8:	2032      	movs	r0, #50	@ 0x32
 8000dba:	f00a fe43 	bl	800ba44 <HAL_Delay>
            SerializeResponseRequest(&SerialData[0u], Command);
 8000dbe:	4629      	mov	r1, r5
 8000dc0:	4630      	mov	r0, r6
 8000dc2:	f7ff fea6 	bl	8000b12 <_ZL24SerializeResponseRequestPhP15SDW_CommandInfo>
            GetResponse(SerialData, Response);
 8000dc6:	4918      	ldr	r1, [pc, #96]	@ (8000e28 <_ZL9HandleCmdP15SDW_CommandInfot+0xac>)
 8000dc8:	4630      	mov	r0, r6
 8000dca:	f7ff ff69 	bl	8000ca0 <_ZL11GetResponsePhS_>
            if (currentComStatus != SDW_ComStatus::ComOk)
 8000dce:	4b13      	ldr	r3, [pc, #76]	@ (8000e1c <_ZL9HandleCmdP15SDW_CommandInfot+0xa0>)
 8000dd0:	781b      	ldrb	r3, [r3, #0]
 8000dd2:	b9a3      	cbnz	r3, 8000dfe <_ZL9HandleCmdP15SDW_CommandInfot+0x82>
            bool com_error = false;
 8000dd4:	2400      	movs	r4, #0
            if (currentDesignStatus != SDW_DesignStatus::DesignOk)
 8000dd6:	4b12      	ldr	r3, [pc, #72]	@ (8000e20 <_ZL9HandleCmdP15SDW_CommandInfot+0xa4>)
 8000dd8:	781b      	ldrb	r3, [r3, #0]
 8000dda:	b993      	cbnz	r3, 8000e02 <_ZL9HandleCmdP15SDW_CommandInfot+0x86>
            bool design_error = false;
 8000ddc:	2500      	movs	r5, #0
            if ((true == com_error) && (ComErrorHandler != NULL))
 8000dde:	b11c      	cbz	r4, 8000de8 <_ZL9HandleCmdP15SDW_CommandInfot+0x6c>
 8000de0:	4b12      	ldr	r3, [pc, #72]	@ (8000e2c <_ZL9HandleCmdP15SDW_CommandInfot+0xb0>)
 8000de2:	681b      	ldr	r3, [r3, #0]
 8000de4:	b103      	cbz	r3, 8000de8 <_ZL9HandleCmdP15SDW_CommandInfot+0x6c>
                ComErrorHandler();
 8000de6:	4798      	blx	r3
            if ((true == design_error) && (DesignErrorHandler != NULL))
 8000de8:	b96d      	cbnz	r5, 8000e06 <_ZL9HandleCmdP15SDW_CommandInfot+0x8a>
            if ((false == design_error) && (false == com_error))
 8000dea:	2c00      	cmp	r4, #0
 8000dec:	d1d2      	bne.n	8000d94 <_ZL9HandleCmdP15SDW_CommandInfot+0x18>
                SequenceNumber++;
 8000dee:	4a10      	ldr	r2, [pc, #64]	@ (8000e30 <_ZL9HandleCmdP15SDW_CommandInfot+0xb4>)
 8000df0:	8813      	ldrh	r3, [r2, #0]
 8000df2:	3301      	adds	r3, #1
 8000df4:	b29b      	uxth	r3, r3
 8000df6:	8013      	strh	r3, [r2, #0]
                SequenceNumber %= 256u;
 8000df8:	b2db      	uxtb	r3, r3
 8000dfa:	8013      	strh	r3, [r2, #0]
 8000dfc:	e7ca      	b.n	8000d94 <_ZL9HandleCmdP15SDW_CommandInfot+0x18>
                com_error = true;
 8000dfe:	2401      	movs	r4, #1
 8000e00:	e7e9      	b.n	8000dd6 <_ZL9HandleCmdP15SDW_CommandInfot+0x5a>
                design_error = true;
 8000e02:	2501      	movs	r5, #1
 8000e04:	e7eb      	b.n	8000dde <_ZL9HandleCmdP15SDW_CommandInfot+0x62>
            if ((true == design_error) && (DesignErrorHandler != NULL))
 8000e06:	4b0b      	ldr	r3, [pc, #44]	@ (8000e34 <_ZL9HandleCmdP15SDW_CommandInfot+0xb8>)
 8000e08:	681b      	ldr	r3, [r3, #0]
 8000e0a:	2b00      	cmp	r3, #0
 8000e0c:	d0c2      	beq.n	8000d94 <_ZL9HandleCmdP15SDW_CommandInfot+0x18>
                DesignErrorHandler();
 8000e0e:	4798      	blx	r3
 8000e10:	e7c0      	b.n	8000d94 <_ZL9HandleCmdP15SDW_CommandInfot+0x18>
        currentDesignStatus = SDW_DesignStatus::BadParam;
 8000e12:	4b03      	ldr	r3, [pc, #12]	@ (8000e20 <_ZL9HandleCmdP15SDW_CommandInfot+0xa4>)
 8000e14:	2206      	movs	r2, #6
 8000e16:	701a      	strb	r2, [r3, #0]
 8000e18:	4770      	bx	lr
 8000e1a:	bf00      	nop
 8000e1c:	20000654 	.word	0x20000654
 8000e20:	20000655 	.word	0x20000655
 8000e24:	200004bc 	.word	0x200004bc
 8000e28:	200004b8 	.word	0x200004b8
 8000e2c:	20000650 	.word	0x20000650
 8000e30:	20000658 	.word	0x20000658
 8000e34:	2000064c 	.word	0x2000064c

08000e38 <_ZL15LinkBlock2Blockthth13SDW_SubFuncId>:

static void LinkBlock2Block(uint16_t SrcId, uint8_t OutIdx, uint16_t DstId, uint8_t InIdx, SDW_SubFuncId SubFuncId)
{
 8000e38:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000e3c:	b085      	sub	sp, #20
 8000e3e:	460f      	mov	r7, r1
 8000e40:	4615      	mov	r5, r2
 8000e42:	461e      	mov	r6, r3
 8000e44:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
    uint8_t NbrOfParams = 0xff;
    SDW_FuncParam FuncParam;
    uint16_t SerialDataSize = SDW_FIXED_SIZE +
            2u * (SDW_PARAM_INFO_SIZE + SDW_BLOCKID_SIZE);
    switch (SubFuncId)
 8000e48:	f240 33ee 	movw	r3, #1006	@ 0x3ee
 8000e4c:	429c      	cmp	r4, r3
 8000e4e:	d93c      	bls.n	8000eca <_ZL15LinkBlock2Blockthth13SDW_SubFuncId+0x92>
 8000e50:	f240 33f6 	movw	r3, #1014	@ 0x3f6
 8000e54:	429c      	cmp	r4, r3
 8000e56:	f200 80d9 	bhi.w	800100c <_ZL15LinkBlock2Blockthth13SDW_SubFuncId+0x1d4>
 8000e5a:	f240 33ef 	movw	r3, #1007	@ 0x3ef
 8000e5e:	429c      	cmp	r4, r3
 8000e60:	f0c0 8088 	bcc.w	8000f74 <_ZL15LinkBlock2Blockthth13SDW_SubFuncId+0x13c>
 8000e64:	f2a4 3eef 	subw	lr, r4, #1007	@ 0x3ef
 8000e68:	fa1f fe8e 	uxth.w	lr, lr
 8000e6c:	f04f 0c01 	mov.w	ip, #1
 8000e70:	fa0c fc0e 	lsl.w	ip, ip, lr
 8000e74:	f01c 0f32 	tst.w	ip, #50	@ 0x32
 8000e78:	f040 8096 	bne.w	8000fa8 <_ZL15LinkBlock2Blockthth13SDW_SubFuncId+0x170>
 8000e7c:	f01c 0f85 	tst.w	ip, #133	@ 0x85
 8000e80:	d039      	beq.n	8000ef6 <_ZL15LinkBlock2Blockthth13SDW_SubFuncId+0xbe>
        {
            NbrOfParams = 3u;
            SerialDataSize += SDW_PARAM_INFO_SIZE + SDW_UINT8_SIZE;

            /* Prepare Param_1 */
            FuncParam.ParamBlockId(SrcId);
 8000e82:	f8ad 000c 	strh.w	r0, [sp, #12]
            PrepareParam(&Command, 0u, SDW_BLOCKID_SIZE, SDW_BLOCK_ID_TYPE, &FuncParam);
 8000e86:	4e63      	ldr	r6, [pc, #396]	@ (8001014 <_ZL15LinkBlock2Blockthth13SDW_SubFuncId+0x1dc>)
 8000e88:	f10d 080c 	add.w	r8, sp, #12
 8000e8c:	f8cd 8000 	str.w	r8, [sp]
 8000e90:	2307      	movs	r3, #7
 8000e92:	2202      	movs	r2, #2
 8000e94:	2100      	movs	r1, #0
 8000e96:	4630      	mov	r0, r6
 8000e98:	f7ff fe78 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>

            /* Prepare Param_2 */
            FuncParam.ParamUint8 = OutIdx;
 8000e9c:	f88d 700c 	strb.w	r7, [sp, #12]
            PrepareParam(&Command, 1u, SDW_UINT8_SIZE, TYPE_Uint8, &FuncParam);
 8000ea0:	f8cd 8000 	str.w	r8, [sp]
 8000ea4:	2308      	movs	r3, #8
 8000ea6:	2201      	movs	r2, #1
 8000ea8:	4611      	mov	r1, r2
 8000eaa:	4630      	mov	r0, r6
 8000eac:	f7ff fe6e 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>

            /* Prepare Param_3 */
            FuncParam.ParamBlockId(DstId);
 8000eb0:	f8ad 500c 	strh.w	r5, [sp, #12]
            PrepareParam(&Command, 2u, SDW_BLOCKID_SIZE, SDW_BLOCK_ID_TYPE, &FuncParam);
 8000eb4:	f8cd 8000 	str.w	r8, [sp]
 8000eb8:	2307      	movs	r3, #7
 8000eba:	2202      	movs	r2, #2
 8000ebc:	4611      	mov	r1, r2
 8000ebe:	4630      	mov	r0, r6
 8000ec0:	f7ff fe64 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>
            SerialDataSize += SDW_PARAM_INFO_SIZE + SDW_UINT8_SIZE;
 8000ec4:	2517      	movs	r5, #23
            NbrOfParams = 3u;
 8000ec6:	2303      	movs	r3, #3
        }
        break;
 8000ec8:	e004      	b.n	8000ed4 <_ZL15LinkBlock2Blockthth13SDW_SubFuncId+0x9c>
    switch (SubFuncId)
 8000eca:	f5b4 7f7a 	cmp.w	r4, #1000	@ 0x3e8
 8000ece:	d23c      	bcs.n	8000f4a <_ZL15LinkBlock2Blockthth13SDW_SubFuncId+0x112>
 8000ed0:	2514      	movs	r5, #20
 8000ed2:	23ff      	movs	r3, #255	@ 0xff
        {
        }
        break;
    }

    PrepareCmdHeader(&Command, SerialDataSize, SDW_LinkBlock, NbrOfParams, SubFuncId, 0xFFFF);
 8000ed4:	4e4f      	ldr	r6, [pc, #316]	@ (8001014 <_ZL15LinkBlock2Blockthth13SDW_SubFuncId+0x1dc>)
 8000ed6:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000eda:	9201      	str	r2, [sp, #4]
 8000edc:	9400      	str	r4, [sp, #0]
 8000ede:	2201      	movs	r2, #1
 8000ee0:	4629      	mov	r1, r5
 8000ee2:	4630      	mov	r0, r6
 8000ee4:	f7ff fe3a 	bl	8000b5c <_ZL16PrepareCmdHeaderP15SDW_CommandInfot10SDW_FuncIdh13SDW_SubFuncIdt>

    /* Send Configuration Request */
    HandleCmd(&Command, SerialDataSize);
 8000ee8:	4629      	mov	r1, r5
 8000eea:	4630      	mov	r0, r6
 8000eec:	f7ff ff46 	bl	8000d7c <_ZL9HandleCmdP15SDW_CommandInfot>
}
 8000ef0:	b005      	add	sp, #20
 8000ef2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    switch (SubFuncId)
 8000ef6:	f01c 0f48 	tst.w	ip, #72	@ 0x48
 8000efa:	d023      	beq.n	8000f44 <_ZL15LinkBlock2Blockthth13SDW_SubFuncId+0x10c>
            FuncParam.ParamBlockId(SrcId);
 8000efc:	f8ad 000c 	strh.w	r0, [sp, #12]
            PrepareParam(&Command, 0u, SDW_BLOCKID_SIZE, SDW_BLOCK_ID_TYPE, &FuncParam);
 8000f00:	4f44      	ldr	r7, [pc, #272]	@ (8001014 <_ZL15LinkBlock2Blockthth13SDW_SubFuncId+0x1dc>)
 8000f02:	f10d 080c 	add.w	r8, sp, #12
 8000f06:	f8cd 8000 	str.w	r8, [sp]
 8000f0a:	2307      	movs	r3, #7
 8000f0c:	2202      	movs	r2, #2
 8000f0e:	2100      	movs	r1, #0
 8000f10:	4638      	mov	r0, r7
 8000f12:	f7ff fe3b 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>
            FuncParam.ParamBlockId(DstId);
 8000f16:	f8ad 500c 	strh.w	r5, [sp, #12]
            PrepareParam(&Command, 1u, SDW_BLOCKID_SIZE, SDW_BLOCK_ID_TYPE, &FuncParam);
 8000f1a:	f8cd 8000 	str.w	r8, [sp]
 8000f1e:	2307      	movs	r3, #7
 8000f20:	2202      	movs	r2, #2
 8000f22:	2101      	movs	r1, #1
 8000f24:	4638      	mov	r0, r7
 8000f26:	f7ff fe31 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>
            FuncParam.ParamUint8 = InIdx;
 8000f2a:	f88d 600c 	strb.w	r6, [sp, #12]
            PrepareParam(&Command, 2u, SDW_UINT8_SIZE, TYPE_Uint8, &FuncParam);
 8000f2e:	f8cd 8000 	str.w	r8, [sp]
 8000f32:	2308      	movs	r3, #8
 8000f34:	2201      	movs	r2, #1
 8000f36:	2102      	movs	r1, #2
 8000f38:	4638      	mov	r0, r7
 8000f3a:	f7ff fe27 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>
            SerialDataSize += SDW_PARAM_INFO_SIZE + SDW_UINT8_SIZE;
 8000f3e:	2517      	movs	r5, #23
            NbrOfParams = 3u;
 8000f40:	2303      	movs	r3, #3
        break;
 8000f42:	e7c7      	b.n	8000ed4 <_ZL15LinkBlock2Blockthth13SDW_SubFuncId+0x9c>
    switch (SubFuncId)
 8000f44:	2514      	movs	r5, #20
 8000f46:	23ff      	movs	r3, #255	@ 0xff
 8000f48:	e7c4      	b.n	8000ed4 <_ZL15LinkBlock2Blockthth13SDW_SubFuncId+0x9c>
 8000f4a:	f5a4 737a 	sub.w	r3, r4, #1000	@ 0x3e8
 8000f4e:	2b06      	cmp	r3, #6
 8000f50:	d859      	bhi.n	8001006 <_ZL15LinkBlock2Blockthth13SDW_SubFuncId+0x1ce>
 8000f52:	a201      	add	r2, pc, #4	@ (adr r2, 8000f58 <_ZL15LinkBlock2Blockthth13SDW_SubFuncId+0x120>)
 8000f54:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000f58:	08000f7b 	.word	0x08000f7b
 8000f5c:	08000fa9 	.word	0x08000fa9
 8000f60:	08000efd 	.word	0x08000efd
 8000f64:	08000efd 	.word	0x08000efd
 8000f68:	08000e83 	.word	0x08000e83
 8000f6c:	08000f7b 	.word	0x08000f7b
 8000f70:	08000f7b 	.word	0x08000f7b
 8000f74:	2514      	movs	r5, #20
 8000f76:	23ff      	movs	r3, #255	@ 0xff
 8000f78:	e7ac      	b.n	8000ed4 <_ZL15LinkBlock2Blockthth13SDW_SubFuncId+0x9c>
            FuncParam.ParamBlockId(SrcId);
 8000f7a:	f8ad 000c 	strh.w	r0, [sp, #12]
            PrepareParam(&Command, 0u, SDW_BLOCKID_SIZE, SDW_BLOCK_ID_TYPE, &FuncParam);
 8000f7e:	4e25      	ldr	r6, [pc, #148]	@ (8001014 <_ZL15LinkBlock2Blockthth13SDW_SubFuncId+0x1dc>)
 8000f80:	af03      	add	r7, sp, #12
 8000f82:	9700      	str	r7, [sp, #0]
 8000f84:	2307      	movs	r3, #7
 8000f86:	2202      	movs	r2, #2
 8000f88:	2100      	movs	r1, #0
 8000f8a:	4630      	mov	r0, r6
 8000f8c:	f7ff fdfe 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>
            FuncParam.ParamBlockId(DstId);
 8000f90:	f8ad 500c 	strh.w	r5, [sp, #12]
            PrepareParam(&Command, 1u, SDW_BLOCKID_SIZE, SDW_BLOCK_ID_TYPE, &FuncParam);
 8000f94:	9700      	str	r7, [sp, #0]
 8000f96:	2307      	movs	r3, #7
 8000f98:	2202      	movs	r2, #2
 8000f9a:	2101      	movs	r1, #1
 8000f9c:	4630      	mov	r0, r6
 8000f9e:	f7ff fdf5 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>
    uint16_t SerialDataSize = SDW_FIXED_SIZE +
 8000fa2:	2514      	movs	r5, #20
            NbrOfParams = 2u;
 8000fa4:	2302      	movs	r3, #2
        break;
 8000fa6:	e795      	b.n	8000ed4 <_ZL15LinkBlock2Blockthth13SDW_SubFuncId+0x9c>
            FuncParam.ParamBlockId(SrcId);
 8000fa8:	f8ad 000c 	strh.w	r0, [sp, #12]
            PrepareParam(&Command, 0u, SDW_BLOCKID_SIZE, SDW_BLOCK_ID_TYPE, &FuncParam);
 8000fac:	f8df 8064 	ldr.w	r8, [pc, #100]	@ 8001014 <_ZL15LinkBlock2Blockthth13SDW_SubFuncId+0x1dc>
 8000fb0:	f10d 090c 	add.w	r9, sp, #12
 8000fb4:	f8cd 9000 	str.w	r9, [sp]
 8000fb8:	2307      	movs	r3, #7
 8000fba:	2202      	movs	r2, #2
 8000fbc:	2100      	movs	r1, #0
 8000fbe:	4640      	mov	r0, r8
 8000fc0:	f7ff fde4 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>
            FuncParam.ParamUint8 = OutIdx;
 8000fc4:	f88d 700c 	strb.w	r7, [sp, #12]
            PrepareParam(&Command, 1u, SDW_UINT8_SIZE, TYPE_Uint8, &FuncParam);
 8000fc8:	f8cd 9000 	str.w	r9, [sp]
 8000fcc:	2308      	movs	r3, #8
 8000fce:	2201      	movs	r2, #1
 8000fd0:	4611      	mov	r1, r2
 8000fd2:	4640      	mov	r0, r8
 8000fd4:	f7ff fdda 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>
            FuncParam.ParamBlockId(DstId);
 8000fd8:	f8ad 500c 	strh.w	r5, [sp, #12]
            PrepareParam(&Command, 2u, SDW_BLOCKID_SIZE, SDW_BLOCK_ID_TYPE, &FuncParam);
 8000fdc:	f8cd 9000 	str.w	r9, [sp]
 8000fe0:	2307      	movs	r3, #7
 8000fe2:	2202      	movs	r2, #2
 8000fe4:	4611      	mov	r1, r2
 8000fe6:	4640      	mov	r0, r8
 8000fe8:	f7ff fdd0 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>
            FuncParam.ParamUint8 = InIdx;
 8000fec:	f88d 600c 	strb.w	r6, [sp, #12]
            PrepareParam(&Command, 3u, SDW_UINT8_SIZE, TYPE_Uint8, &FuncParam);
 8000ff0:	f8cd 9000 	str.w	r9, [sp]
 8000ff4:	2308      	movs	r3, #8
 8000ff6:	2201      	movs	r2, #1
 8000ff8:	2103      	movs	r1, #3
 8000ffa:	4640      	mov	r0, r8
 8000ffc:	f7ff fdc6 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>
            SerialDataSize += 2u * (SDW_PARAM_INFO_SIZE + SDW_UINT8_SIZE);
 8001000:	251a      	movs	r5, #26
            NbrOfParams = 4u;
 8001002:	2304      	movs	r3, #4
        break;
 8001004:	e766      	b.n	8000ed4 <_ZL15LinkBlock2Blockthth13SDW_SubFuncId+0x9c>
    switch (SubFuncId)
 8001006:	2514      	movs	r5, #20
 8001008:	23ff      	movs	r3, #255	@ 0xff
 800100a:	e763      	b.n	8000ed4 <_ZL15LinkBlock2Blockthth13SDW_SubFuncId+0x9c>
 800100c:	2514      	movs	r5, #20
 800100e:	23ff      	movs	r3, #255	@ 0xff
 8001010:	e760      	b.n	8000ed4 <_ZL15LinkBlock2Blockthth13SDW_SubFuncId+0x9c>
 8001012:	bf00      	nop
 8001014:	20000430 	.word	0x20000430

08001018 <_ZN3SDWC1Ev>:

/* Generic Functions ##################################################################################################### */
SDW::SDW(){};
 8001018:	4770      	bx	lr
	...

0800101c <_ZN3SDWC1Ei>:

SDW::SDW(int cs)
 800101c:	b538      	push	{r3, r4, r5, lr}
 800101e:	4604      	mov	r4, r0
{
    /* Workaround  */
    HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET); // HAL_GPIO_WritePin(GPIOG, GPIO_PIN_3, GPIO_PIN_RESET);
 8001020:	4d0c      	ldr	r5, [pc, #48]	@ (8001054 <_ZN3SDWC1Ei+0x38>)
 8001022:	2200      	movs	r2, #0
 8001024:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001028:	4628      	mov	r0, r5
 800102a:	f00c f827 	bl	800d07c <HAL_GPIO_WritePin>
    /* Workaround  */

    HAL_GPIO_WritePin(GPIOH, GPIO_PIN_6, GPIO_PIN_SET); // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, GPIO_PIN_SET);
 800102e:	2201      	movs	r2, #1
 8001030:	2140      	movs	r1, #64	@ 0x40
 8001032:	4809      	ldr	r0, [pc, #36]	@ (8001058 <_ZN3SDWC1Ei+0x3c>)
 8001034:	f00c f822 	bl	800d07c <HAL_GPIO_WritePin>

    /* Workaround  */
    HAL_Delay(10);
 8001038:	200a      	movs	r0, #10
 800103a:	f00a fd03 	bl	800ba44 <HAL_Delay>
    HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_SET); // HAL_GPIO_WritePin(GPIOG, GPIO_PIN_3, GPIO_PIN_SET);
 800103e:	2201      	movs	r2, #1
 8001040:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001044:	4628      	mov	r0, r5
 8001046:	f00c f819 	bl	800d07c <HAL_GPIO_WritePin>
    HAL_Delay(10);
 800104a:	200a      	movs	r0, #10
 800104c:	f00a fcfa 	bl	800ba44 <HAL_Delay>
    /* Workaround  */
}
 8001050:	4620      	mov	r0, r4
 8001052:	bd38      	pop	{r3, r4, r5, pc}
 8001054:	40021800 	.word	0x40021800
 8001058:	40021c00 	.word	0x40021c00

0800105c <_ZN3SDW11startDesignEf11SDW_C2dAlgo>:
{
    DesignErrorHandler = UserHandler;
}

void SDW::startDesign(float SamplingFreq, SDW_C2dAlgo Algo)
{
 800105c:	b570      	push	{r4, r5, r6, lr}
 800105e:	b084      	sub	sp, #16
 8001060:	ee10 6a10 	vmov	r6, s0
 8001064:	460d      	mov	r5, r1
    uint16_t SerialDataSize = SDW_FIXED_SIZE +
            SDW_PARAM_INFO_SIZE + SDW_REAL_SIZE +
            SDW_PARAM_INFO_SIZE + SDW_C2D_ALGO_SIZE;

    /* 0. Set current Chip Select Pin */
    chipSelectPin = this->cs;
 8001066:	6802      	ldr	r2, [r0, #0]
 8001068:	4b13      	ldr	r3, [pc, #76]	@ (80010b8 <_ZN3SDW11startDesignEf11SDW_C2dAlgo+0x5c>)
 800106a:	601a      	str	r2, [r3, #0]

    /* 1. Prepare Configuration : Header + Function Info */
    PrepareCmdHeader(&Command, SerialDataSize, SDW_ManageBlock, 2u, SDW_EDL_DesignInit, 0xFFFF);
 800106c:	4c13      	ldr	r4, [pc, #76]	@ (80010bc <_ZN3SDW11startDesignEf11SDW_C2dAlgo+0x60>)
 800106e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001072:	9301      	str	r3, [sp, #4]
 8001074:	f44f 63fa 	mov.w	r3, #2000	@ 0x7d0
 8001078:	9300      	str	r3, [sp, #0]
 800107a:	2302      	movs	r3, #2
 800107c:	461a      	mov	r2, r3
 800107e:	2115      	movs	r1, #21
 8001080:	4620      	mov	r0, r4
 8001082:	f7ff fd6b 	bl	8000b5c <_ZL16PrepareCmdHeaderP15SDW_CommandInfot10SDW_FuncIdh13SDW_SubFuncIdt>

    /* 2. Prepare Param_1 */
    FuncParam.ParamReal = SamplingFreq;
 8001086:	9603      	str	r6, [sp, #12]
    PrepareParam(&Command, 0u, SDW_REAL_SIZE, TYPE_Real, &FuncParam);
 8001088:	ae03      	add	r6, sp, #12
 800108a:	9600      	str	r6, [sp, #0]
 800108c:	2306      	movs	r3, #6
 800108e:	2204      	movs	r2, #4
 8001090:	2100      	movs	r1, #0
 8001092:	4620      	mov	r0, r4
 8001094:	f7ff fd7a 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>

    /* 3. Prepare Param_2 */
    FuncParam.ParamC2dAlgo(Algo);
 8001098:	f88d 500c 	strb.w	r5, [sp, #12]
    PrepareParam(&Command, 1u, SDW_C2D_ALGO_SIZE, SDW_C2D_ALGO_TYPE, &FuncParam);
 800109c:	9600      	str	r6, [sp, #0]
 800109e:	2308      	movs	r3, #8
 80010a0:	2201      	movs	r2, #1
 80010a2:	4611      	mov	r1, r2
 80010a4:	4620      	mov	r0, r4
 80010a6:	f7ff fd71 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>

    /* 4. Send Configuration Request */
    HandleCmd(&Command, SerialDataSize);
 80010aa:	2115      	movs	r1, #21
 80010ac:	4620      	mov	r0, r4
 80010ae:	f7ff fe65 	bl	8000d7c <_ZL9HandleCmdP15SDW_CommandInfot>
}
 80010b2:	b004      	add	sp, #16
 80010b4:	bd70      	pop	{r4, r5, r6, pc}
 80010b6:	bf00      	nop
 80010b8:	2000065c 	.word	0x2000065c
 80010bc:	20000430 	.word	0x20000430

080010c0 <_ZN3SDW10stopDesignEv>:

void SDW::stopDesign(void)
{
 80010c0:	b510      	push	{r4, lr}
 80010c2:	b082      	sub	sp, #8
    uint16_t SerialDataSize = SDW_FIXED_SIZE;

    /* 1. Prepare Configuration : Header + Function Info */
    PrepareCmdHeader(&Command, SerialDataSize, SDW_ManageBlock, 0u, SDW_EDL_StopDesign, 0xFFFF);
 80010c4:	4c09      	ldr	r4, [pc, #36]	@ (80010ec <_ZN3SDW10stopDesignEv+0x2c>)
 80010c6:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80010ca:	9301      	str	r3, [sp, #4]
 80010cc:	f240 73d2 	movw	r3, #2002	@ 0x7d2
 80010d0:	9300      	str	r3, [sp, #0]
 80010d2:	2300      	movs	r3, #0
 80010d4:	2202      	movs	r2, #2
 80010d6:	210c      	movs	r1, #12
 80010d8:	4620      	mov	r0, r4
 80010da:	f7ff fd3f 	bl	8000b5c <_ZL16PrepareCmdHeaderP15SDW_CommandInfot10SDW_FuncIdh13SDW_SubFuncIdt>

    /* 2. Send Configuration Request */
    HandleCmd(&Command, SerialDataSize);
 80010de:	210c      	movs	r1, #12
 80010e0:	4620      	mov	r0, r4
 80010e2:	f7ff fe4b 	bl	8000d7c <_ZL9HandleCmdP15SDW_CommandInfot>
}
 80010e6:	b002      	add	sp, #8
 80010e8:	bd10      	pop	{r4, pc}
 80010ea:	bf00      	nop
 80010ec:	20000430 	.word	0x20000430

080010f0 <_ZN3SDW13startSamplingEv>:

void SDW::startSampling(void)
{
 80010f0:	b510      	push	{r4, lr}
 80010f2:	b082      	sub	sp, #8
    uint16_t SerialDataSize = SDW_FIXED_SIZE;

    /* 1. Prepare Configuration : Header + Function Info */
    PrepareCmdHeader(&Command, SerialDataSize, SDW_ManageBlock, 0u, SDW_EDL_StartSampling, 0xFFFF);
 80010f4:	4c0c      	ldr	r4, [pc, #48]	@ (8001128 <_ZN3SDW13startSamplingEv+0x38>)
 80010f6:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80010fa:	9301      	str	r3, [sp, #4]
 80010fc:	f240 73d5 	movw	r3, #2005	@ 0x7d5
 8001100:	9300      	str	r3, [sp, #0]
 8001102:	2300      	movs	r3, #0
 8001104:	2202      	movs	r2, #2
 8001106:	210c      	movs	r1, #12
 8001108:	4620      	mov	r0, r4
 800110a:	f7ff fd27 	bl	8000b5c <_ZL16PrepareCmdHeaderP15SDW_CommandInfot10SDW_FuncIdh13SDW_SubFuncIdt>

    /* 2. Send Configuration Request */
    HandleCmd(&Command, SerialDataSize);
 800110e:	210c      	movs	r1, #12
 8001110:	4620      	mov	r0, r4
 8001112:	f7ff fe33 	bl	8000d7c <_ZL9HandleCmdP15SDW_CommandInfot>

    if (false == DataExchangeStarted)
 8001116:	4b05      	ldr	r3, [pc, #20]	@ (800112c <_ZN3SDW13startSamplingEv+0x3c>)
 8001118:	781b      	ldrb	r3, [r3, #0]
 800111a:	b913      	cbnz	r3, 8001122 <_ZN3SDW13startSamplingEv+0x32>
    {
        DataExchangeStarted = true;
 800111c:	4b03      	ldr	r3, [pc, #12]	@ (800112c <_ZN3SDW13startSamplingEv+0x3c>)
 800111e:	2201      	movs	r2, #1
 8001120:	701a      	strb	r2, [r3, #0]
    }
}
 8001122:	b002      	add	sp, #8
 8001124:	bd10      	pop	{r4, pc}
 8001126:	bf00      	nop
 8001128:	20000430 	.word	0x20000430
 800112c:	20000656 	.word	0x20000656

08001130 <_ZN3SDW22setMonitoringInterfaceE16SDW_MonInterface>:
    /* 2. Send Configuration Request */
    HandleCmd(&Command, SerialDataSize);
}

void SDW::setMonitoringInterface(SDW_MonInterface InterfaceId)
{
 8001130:	b530      	push	{r4, r5, lr}
 8001132:	b085      	sub	sp, #20
 8001134:	460d      	mov	r5, r1
    SDW_FuncParam FuncParam;
    uint16_t SerialDataSize = SDW_FIXED_SIZE +
            SDW_PARAM_INFO_SIZE + SDW_MON_INTERFACE_SIZE;

    /* 1. Prepare Configuration : Header + Function Info */
    PrepareCmdHeader(&Command, SerialDataSize, SDW_ManageBlock, 1u, SDW_SetMonInterface, 0xFFFF);
 8001136:	4c0e      	ldr	r4, [pc, #56]	@ (8001170 <_ZN3SDW22setMonitoringInterfaceE16SDW_MonInterface+0x40>)
 8001138:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800113c:	9301      	str	r3, [sp, #4]
 800113e:	f240 73d9 	movw	r3, #2009	@ 0x7d9
 8001142:	9300      	str	r3, [sp, #0]
 8001144:	2301      	movs	r3, #1
 8001146:	2202      	movs	r2, #2
 8001148:	210f      	movs	r1, #15
 800114a:	4620      	mov	r0, r4
 800114c:	f7ff fd06 	bl	8000b5c <_ZL16PrepareCmdHeaderP15SDW_CommandInfot10SDW_FuncIdh13SDW_SubFuncIdt>

    /* 2. Prepare Param_1 */
    FuncParam.ParamMonInterface(InterfaceId);
 8001150:	f88d 500c 	strb.w	r5, [sp, #12]
    PrepareParam(&Command, 0u, SDW_MON_INTERFACE_SIZE, SDW_MON_INTERFACE_TYPE, &FuncParam);
 8001154:	ab03      	add	r3, sp, #12
 8001156:	9300      	str	r3, [sp, #0]
 8001158:	2308      	movs	r3, #8
 800115a:	2201      	movs	r2, #1
 800115c:	2100      	movs	r1, #0
 800115e:	4620      	mov	r0, r4
 8001160:	f7ff fd14 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>

    /* 4. Send Configuration Request */
    HandleCmd(&Command, SerialDataSize);
 8001164:	210f      	movs	r1, #15
 8001166:	4620      	mov	r0, r4
 8001168:	f7ff fe08 	bl	8000d7c <_ZL9HandleCmdP15SDW_CommandInfot>
}
 800116c:	b005      	add	sp, #20
 800116e:	bd30      	pop	{r4, r5, pc}
 8001170:	20000430 	.word	0x20000430

08001174 <_ZN3SDW9setInputsEv>:

void SDW::setInputs(void)
{
    if ((input::currentInputIdx > 0u) && (input::currentInputIdx < SDW_MAX_INPUTS_NUMBER))
 8001174:	4b24      	ldr	r3, [pc, #144]	@ (8001208 <_ZN3SDW9setInputsEv+0x94>)
 8001176:	781b      	ldrb	r3, [r3, #0]
 8001178:	3b01      	subs	r3, #1
 800117a:	b2db      	uxtb	r3, r3
 800117c:	2b0e      	cmp	r3, #14
 800117e:	d900      	bls.n	8001182 <_ZN3SDW9setInputsEv+0xe>
 8001180:	4770      	bx	lr
{
 8001182:	b530      	push	{r4, r5, lr}
 8001184:	b083      	sub	sp, #12
    {
        /* Request Write */
        HAL_GPIO_WritePin(GPIOH, GPIO_PIN_6, GPIO_PIN_RESET); // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, GPIO_PIN_RESET);
 8001186:	2200      	movs	r2, #0
 8001188:	2140      	movs	r1, #64	@ 0x40
 800118a:	4820      	ldr	r0, [pc, #128]	@ (800120c <_ZN3SDW9setInputsEv+0x98>)
 800118c:	f00b ff76 	bl	800d07c <HAL_GPIO_WritePin>
        HAL_Delay(1);
 8001190:	2001      	movs	r0, #1
 8001192:	f00a fc57 	bl	800ba44 <HAL_Delay>
        uint8_t tmp = SDW_CMD_WRITE;
 8001196:	2300      	movs	r3, #0
 8001198:	f88d 3007 	strb.w	r3, [sp, #7]
       // if (osMutexAcquire(spiMutexHandle, osWaitForever) == osOK)
        //{
        HAL_SPI_Transmit_DMA(&hspi2, (const uint8_t*)&tmp, 1);
 800119c:	2201      	movs	r2, #1
 800119e:	f10d 0107 	add.w	r1, sp, #7
 80011a2:	481b      	ldr	r0, [pc, #108]	@ (8001210 <_ZN3SDW9setInputsEv+0x9c>)
 80011a4:	f00e f8aa 	bl	800f2fc <HAL_SPI_Transmit_DMA>
        while (SDW_TX_DONE != true);
 80011a8:	4b1a      	ldr	r3, [pc, #104]	@ (8001214 <_ZN3SDW9setInputsEv+0xa0>)
 80011aa:	781b      	ldrb	r3, [r3, #0]
 80011ac:	2b00      	cmp	r3, #0
 80011ae:	d0fb      	beq.n	80011a8 <_ZN3SDW9setInputsEv+0x34>
        SDW_TX_DONE = false ;
 80011b0:	2500      	movs	r5, #0
 80011b2:	4b18      	ldr	r3, [pc, #96]	@ (8001214 <_ZN3SDW9setInputsEv+0xa0>)
 80011b4:	701d      	strb	r5, [r3, #0]
        //}
        HAL_Delay(1);
 80011b6:	2001      	movs	r0, #1
 80011b8:	f00a fc44 	bl	800ba44 <HAL_Delay>
        HAL_GPIO_WritePin(GPIOH, GPIO_PIN_6, GPIO_PIN_SET); // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, GPIO_PIN_SET);
 80011bc:	4c13      	ldr	r4, [pc, #76]	@ (800120c <_ZN3SDW9setInputsEv+0x98>)
 80011be:	2201      	movs	r2, #1
 80011c0:	2140      	movs	r1, #64	@ 0x40
 80011c2:	4620      	mov	r0, r4
 80011c4:	f00b ff5a 	bl	800d07c <HAL_GPIO_WritePin>

        /* Send Inputs */
        HAL_GPIO_WritePin(GPIOH, GPIO_PIN_6, GPIO_PIN_RESET); // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, GPIO_PIN_RESET);
 80011c8:	462a      	mov	r2, r5
 80011ca:	2140      	movs	r1, #64	@ 0x40
 80011cc:	4620      	mov	r0, r4
 80011ce:	f00b ff55 	bl	800d07c <HAL_GPIO_WritePin>
        HAL_Delay(1);
 80011d2:	2001      	movs	r0, #1
 80011d4:	f00a fc36 	bl	800ba44 <HAL_Delay>
      //  if (osMutexAcquire(spiMutexHandle, osWaitForever) == osOK)
       // {
        HAL_SPI_Transmit_DMA(&hspi2, (const uint8_t*)&SDW_InputsBuffer[0u], input::currentInputIdx * SDW_REAL_SIZE);
 80011d8:	4b0b      	ldr	r3, [pc, #44]	@ (8001208 <_ZN3SDW9setInputsEv+0x94>)
 80011da:	781a      	ldrb	r2, [r3, #0]
 80011dc:	0092      	lsls	r2, r2, #2
 80011de:	490e      	ldr	r1, [pc, #56]	@ (8001218 <_ZN3SDW9setInputsEv+0xa4>)
 80011e0:	480b      	ldr	r0, [pc, #44]	@ (8001210 <_ZN3SDW9setInputsEv+0x9c>)
 80011e2:	f00e f88b 	bl	800f2fc <HAL_SPI_Transmit_DMA>
        while (SDW_TX_DONE != true);
 80011e6:	4b0b      	ldr	r3, [pc, #44]	@ (8001214 <_ZN3SDW9setInputsEv+0xa0>)
 80011e8:	781b      	ldrb	r3, [r3, #0]
 80011ea:	2b00      	cmp	r3, #0
 80011ec:	d0fb      	beq.n	80011e6 <_ZN3SDW9setInputsEv+0x72>
        SDW_TX_DONE = false ;
 80011ee:	4b09      	ldr	r3, [pc, #36]	@ (8001214 <_ZN3SDW9setInputsEv+0xa0>)
 80011f0:	2200      	movs	r2, #0
 80011f2:	701a      	strb	r2, [r3, #0]
        //}
        HAL_Delay(1);
 80011f4:	2001      	movs	r0, #1
 80011f6:	f00a fc25 	bl	800ba44 <HAL_Delay>
        HAL_GPIO_WritePin(GPIOH, GPIO_PIN_6, GPIO_PIN_SET); //  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6, GPIO_PIN_SET);
 80011fa:	2201      	movs	r2, #1
 80011fc:	2140      	movs	r1, #64	@ 0x40
 80011fe:	4803      	ldr	r0, [pc, #12]	@ (800120c <_ZN3SDW9setInputsEv+0x98>)
 8001200:	f00b ff3c 	bl	800d07c <HAL_GPIO_WritePin>
    }
}
 8001204:	b003      	add	sp, #12
 8001206:	bd30      	pop	{r4, r5, pc}
 8001208:	2000065b 	.word	0x2000065b
 800120c:	40021c00 	.word	0x40021c00
 8001210:	20005194 	.word	0x20005194
 8001214:	200003ad 	.word	0x200003ad
 8001218:	200003f0 	.word	0x200003f0

0800121c <_ZN3SDW9getProbesEv>:

void SDW::getProbes(void)
{
    if ((probe::currentProbeIdx > 0u) && (probe::currentProbeIdx < SDW_MAX_PROBES_NUMBER))
 800121c:	4b2f      	ldr	r3, [pc, #188]	@ (80012dc <_ZN3SDW9getProbesEv+0xc0>)
 800121e:	781b      	ldrb	r3, [r3, #0]
 8001220:	3b01      	subs	r3, #1
 8001222:	b2db      	uxtb	r3, r3
 8001224:	2b0e      	cmp	r3, #14
 8001226:	d900      	bls.n	800122a <_ZN3SDW9getProbesEv+0xe>
 8001228:	4770      	bx	lr
{
 800122a:	b510      	push	{r4, lr}
 800122c:	b086      	sub	sp, #24
    {
        /* Request Read */
        HAL_GPIO_WritePin(GPIOH, GPIO_PIN_6, GPIO_PIN_RESET); // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, GPIO_PIN_RESET);
 800122e:	2200      	movs	r2, #0
 8001230:	2140      	movs	r1, #64	@ 0x40
 8001232:	482b      	ldr	r0, [pc, #172]	@ (80012e0 <_ZN3SDW9getProbesEv+0xc4>)
 8001234:	f00b ff22 	bl	800d07c <HAL_GPIO_WritePin>
        //HAL_Delay(1);
        for ( volatile int i = 0; i < 100; i++ );
 8001238:	2300      	movs	r3, #0
 800123a:	9302      	str	r3, [sp, #8]
 800123c:	e002      	b.n	8001244 <_ZN3SDW9getProbesEv+0x28>
 800123e:	9b02      	ldr	r3, [sp, #8]
 8001240:	3301      	adds	r3, #1
 8001242:	9302      	str	r3, [sp, #8]
 8001244:	9b02      	ldr	r3, [sp, #8]
 8001246:	2b63      	cmp	r3, #99	@ 0x63
 8001248:	ddf9      	ble.n	800123e <_ZN3SDW9getProbesEv+0x22>
        uint8_t tmp = SDW_CMD_READ;
 800124a:	2201      	movs	r2, #1
 800124c:	f88d 2007 	strb.w	r2, [sp, #7]
      //  if (osMutexAcquire(spiMutexHandle, osWaitForever) == osOK)
        //{
        HAL_SPI_Transmit_DMA(&hspi2, (const uint8_t*)&tmp, 1);
 8001250:	f10d 0107 	add.w	r1, sp, #7
 8001254:	4823      	ldr	r0, [pc, #140]	@ (80012e4 <_ZN3SDW9getProbesEv+0xc8>)
 8001256:	f00e f851 	bl	800f2fc <HAL_SPI_Transmit_DMA>
        while (SDW_TX_DONE != true);
 800125a:	4b23      	ldr	r3, [pc, #140]	@ (80012e8 <_ZN3SDW9getProbesEv+0xcc>)
 800125c:	781b      	ldrb	r3, [r3, #0]
 800125e:	2b00      	cmp	r3, #0
 8001260:	d0fb      	beq.n	800125a <_ZN3SDW9getProbesEv+0x3e>
        SDW_TX_DONE = false ;
 8001262:	2300      	movs	r3, #0
 8001264:	4a20      	ldr	r2, [pc, #128]	@ (80012e8 <_ZN3SDW9getProbesEv+0xcc>)
 8001266:	7013      	strb	r3, [r2, #0]
        //}
        //HAL_Delay(1);
        for ( volatile int i = 0; i < 100; i++ );
 8001268:	9303      	str	r3, [sp, #12]
 800126a:	e002      	b.n	8001272 <_ZN3SDW9getProbesEv+0x56>
 800126c:	9b03      	ldr	r3, [sp, #12]
 800126e:	3301      	adds	r3, #1
 8001270:	9303      	str	r3, [sp, #12]
 8001272:	9b03      	ldr	r3, [sp, #12]
 8001274:	2b63      	cmp	r3, #99	@ 0x63
 8001276:	ddf9      	ble.n	800126c <_ZN3SDW9getProbesEv+0x50>
        HAL_GPIO_WritePin(GPIOH, GPIO_PIN_6, GPIO_PIN_SET);  // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, GPIO_PIN_SET);
 8001278:	4c19      	ldr	r4, [pc, #100]	@ (80012e0 <_ZN3SDW9getProbesEv+0xc4>)
 800127a:	2201      	movs	r2, #1
 800127c:	2140      	movs	r1, #64	@ 0x40
 800127e:	4620      	mov	r0, r4
 8001280:	f00b fefc 	bl	800d07c <HAL_GPIO_WritePin>

        /* Get Probes */
        HAL_GPIO_WritePin(GPIOH, GPIO_PIN_6, GPIO_PIN_RESET); // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, GPIO_PIN_RESET);
 8001284:	2200      	movs	r2, #0
 8001286:	2140      	movs	r1, #64	@ 0x40
 8001288:	4620      	mov	r0, r4
 800128a:	f00b fef7 	bl	800d07c <HAL_GPIO_WritePin>
        //HAL_Delay(1);
        for ( volatile int i = 0; i < 100; i++ );
 800128e:	2300      	movs	r3, #0
 8001290:	9304      	str	r3, [sp, #16]
 8001292:	e002      	b.n	800129a <_ZN3SDW9getProbesEv+0x7e>
 8001294:	9b04      	ldr	r3, [sp, #16]
 8001296:	3301      	adds	r3, #1
 8001298:	9304      	str	r3, [sp, #16]
 800129a:	9b04      	ldr	r3, [sp, #16]
 800129c:	2b63      	cmp	r3, #99	@ 0x63
 800129e:	ddf9      	ble.n	8001294 <_ZN3SDW9getProbesEv+0x78>
     //   if (osMutexAcquire(spiMutexHandle, osWaitForever) == osOK)
       // {
        HAL_SPI_Receive_DMA(&hspi2, &SDW_ProbesBuffer[0], probe::currentProbeIdx * SDW_REAL_SIZE);
 80012a0:	4b0e      	ldr	r3, [pc, #56]	@ (80012dc <_ZN3SDW9getProbesEv+0xc0>)
 80012a2:	781a      	ldrb	r2, [r3, #0]
 80012a4:	0092      	lsls	r2, r2, #2
 80012a6:	4911      	ldr	r1, [pc, #68]	@ (80012ec <_ZN3SDW9getProbesEv+0xd0>)
 80012a8:	480e      	ldr	r0, [pc, #56]	@ (80012e4 <_ZN3SDW9getProbesEv+0xc8>)
 80012aa:	f00e f911 	bl	800f4d0 <HAL_SPI_Receive_DMA>
        while (SDW_RX_DONE != true);
 80012ae:	4b10      	ldr	r3, [pc, #64]	@ (80012f0 <_ZN3SDW9getProbesEv+0xd4>)
 80012b0:	781b      	ldrb	r3, [r3, #0]
 80012b2:	2b00      	cmp	r3, #0
 80012b4:	d0fb      	beq.n	80012ae <_ZN3SDW9getProbesEv+0x92>
        SDW_RX_DONE = false ;
 80012b6:	2300      	movs	r3, #0
 80012b8:	4a0d      	ldr	r2, [pc, #52]	@ (80012f0 <_ZN3SDW9getProbesEv+0xd4>)
 80012ba:	7013      	strb	r3, [r2, #0]
        //}
        //HAL_Delay(1);
        for ( volatile int i = 0; i < 100; i++ );
 80012bc:	9305      	str	r3, [sp, #20]
 80012be:	e002      	b.n	80012c6 <_ZN3SDW9getProbesEv+0xaa>
 80012c0:	9b05      	ldr	r3, [sp, #20]
 80012c2:	3301      	adds	r3, #1
 80012c4:	9305      	str	r3, [sp, #20]
 80012c6:	9b05      	ldr	r3, [sp, #20]
 80012c8:	2b63      	cmp	r3, #99	@ 0x63
 80012ca:	ddf9      	ble.n	80012c0 <_ZN3SDW9getProbesEv+0xa4>
        HAL_GPIO_WritePin(GPIOH, GPIO_PIN_6, GPIO_PIN_SET); // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6, GPIO_PIN_SET);
 80012cc:	2201      	movs	r2, #1
 80012ce:	2140      	movs	r1, #64	@ 0x40
 80012d0:	4803      	ldr	r0, [pc, #12]	@ (80012e0 <_ZN3SDW9getProbesEv+0xc4>)
 80012d2:	f00b fed3 	bl	800d07c <HAL_GPIO_WritePin>
    }
}
 80012d6:	b006      	add	sp, #24
 80012d8:	bd10      	pop	{r4, pc}
 80012da:	bf00      	nop
 80012dc:	2000065a 	.word	0x2000065a
 80012e0:	40021c00 	.word	0x40021c00
 80012e4:	20005194 	.word	0x20005194
 80012e8:	200003ad 	.word	0x200003ad
 80012ec:	200003b0 	.word	0x200003b0
 80012f0:	200003ac 	.word	0x200003ac

080012f4 <_Z18getButterSubFuncId14SDW_FilterType>:

SDW_SubFuncId getButterSubFuncId(SDW_FilterType ftype)
{
    SDW_SubFuncId retval = NoSubFuncId;

    switch (ftype)
 80012f4:	2803      	cmp	r0, #3
 80012f6:	d803      	bhi.n	8001300 <_Z18getButterSubFuncId14SDW_FilterType+0xc>
 80012f8:	e8df f000 	tbb	[pc, r0]
 80012fc:	0907050b 	.word	0x0907050b
 8001300:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8001304:	4770      	bx	lr
            retval = SDW_EDL_NewButterLow;
        }
        break;
        case passHigh:
        {
            retval = SDW_EDL_NewButterHigh;
 8001306:	200e      	movs	r0, #14
        }
        break;
 8001308:	4770      	bx	lr
        case passBand:
        {
            retval = SDW_EDL_NewButterBand;
 800130a:	200d      	movs	r0, #13
        }
        break;
 800130c:	4770      	bx	lr
        case stopBand:
        {
            retval = SDW_EDL_NewButterStop;
 800130e:	200c      	movs	r0, #12
        }
        break;
 8001310:	4770      	bx	lr
            retval = SDW_EDL_NewButterLow;
 8001312:	200f      	movs	r0, #15
        }
        break;
    };

    return retval;
}
 8001314:	4770      	bx	lr

08001316 <_ZN2tf5getIdEv>:
tf::tf(){};

uint16_t tf::getId()
{
    return this->id;
}
 8001316:	8800      	ldrh	r0, [r0, #0]
 8001318:	4770      	bx	lr

0800131a <_ZN2tf5setIdEt>:

void tf::setId(uint16_t id)
{
    this->id = id;
 800131a:	8001      	strh	r1, [r0, #0]
}
 800131c:	4770      	bx	lr

0800131e <_ZN2tfgtES_>:

void tf::operator>(tf Dst) // Sys2Sys
{
 800131e:	b510      	push	{r4, lr}
 8001320:	b084      	sub	sp, #16
 8001322:	f8ad 100c 	strh.w	r1, [sp, #12]
    LinkBlock2Block(this->id, 0xFF, Dst.getId(), 0xFF, SDW_EDL_LinkSys2Sys);
 8001326:	8804      	ldrh	r4, [r0, #0]
 8001328:	a803      	add	r0, sp, #12
 800132a:	f7ff fff4 	bl	8001316 <_ZN2tf5getIdEv>
 800132e:	4602      	mov	r2, r0
 8001330:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001334:	9300      	str	r3, [sp, #0]
 8001336:	23ff      	movs	r3, #255	@ 0xff
 8001338:	4619      	mov	r1, r3
 800133a:	4620      	mov	r0, r4
 800133c:	f7ff fd7c 	bl	8000e38 <_ZL15LinkBlock2Blockthth13SDW_SubFuncId>
}
 8001340:	b004      	add	sp, #16
 8001342:	bd10      	pop	{r4, pc}

08001344 <_ZN2tfC1EPKcS1_>:
void tf::operator>(macro Dst) // Sys2Macro
{
    LinkBlock2Block(this->id, 0xFF, Dst.getId(), Dst.getActiveIoIdx(), SDW_EDL_LinkSys2Macro);
}

tf::tf(const char *numerator, const char *denominator)
 8001344:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001348:	b085      	sub	sp, #20
 800134a:	4606      	mov	r6, r0
 800134c:	460f      	mov	r7, r1
 800134e:	4692      	mov	sl, r2
{
    SDW_FuncParam FuncParam;
    uint8_t param1_size = strlen(numerator) + 1u;
 8001350:	4608      	mov	r0, r1
 8001352:	f7fe ff55 	bl	8000200 <strlen>
 8001356:	b2c5      	uxtb	r5, r0
 8001358:	3501      	adds	r5, #1
 800135a:	b2ed      	uxtb	r5, r5
    uint8_t param2_size = strlen(denominator) + 1u;
 800135c:	4650      	mov	r0, sl
 800135e:	f7fe ff4f 	bl	8000200 <strlen>
 8001362:	b2c4      	uxtb	r4, r0
 8001364:	3401      	adds	r4, #1
 8001366:	b2e4      	uxtb	r4, r4
    uint16_t SerialDataSize = SDW_FIXED_SIZE +
            SDW_PARAM_INFO_SIZE + param1_size +
            SDW_PARAM_INFO_SIZE + param2_size;
 8001368:	eb05 0904 	add.w	r9, r5, r4
    uint16_t SerialDataSize = SDW_FIXED_SIZE +
 800136c:	f109 0910 	add.w	r9, r9, #16

    /* 1. Prepare Configuration : Header + Function Info */
    this->id = currentSysId++;
 8001370:	4a15      	ldr	r2, [pc, #84]	@ (80013c8 <_ZN2tfC1EPKcS1_+0x84>)
 8001372:	8813      	ldrh	r3, [r2, #0]
 8001374:	1c59      	adds	r1, r3, #1
 8001376:	8011      	strh	r1, [r2, #0]
 8001378:	8033      	strh	r3, [r6, #0]
    PrepareCmdHeader(&Command, SerialDataSize, SDW_CreateBlock, 2u, SDW_EDL_NewSys, this->id);
 800137a:	f8df 8050 	ldr.w	r8, [pc, #80]	@ 80013cc <_ZN2tfC1EPKcS1_+0x88>
 800137e:	9301      	str	r3, [sp, #4]
 8001380:	f04f 0b01 	mov.w	fp, #1
 8001384:	f8cd b000 	str.w	fp, [sp]
 8001388:	2302      	movs	r3, #2
 800138a:	2200      	movs	r2, #0
 800138c:	4649      	mov	r1, r9
 800138e:	4640      	mov	r0, r8
 8001390:	f7ff fbe4 	bl	8000b5c <_ZL16PrepareCmdHeaderP15SDW_CommandInfot10SDW_FuncIdh13SDW_SubFuncIdt>

    /* 2. Prepare Param_1 */
    FuncParam.ParamString = numerator;
 8001394:	9703      	str	r7, [sp, #12]
    PrepareParam(&Command, 0u, param1_size, TYPE_String, &FuncParam);
 8001396:	af03      	add	r7, sp, #12
 8001398:	9700      	str	r7, [sp, #0]
 800139a:	2300      	movs	r3, #0
 800139c:	462a      	mov	r2, r5
 800139e:	4619      	mov	r1, r3
 80013a0:	4640      	mov	r0, r8
 80013a2:	f7ff fbf3 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>

    /* 3. Prepare Param_2 */
    FuncParam.ParamString = denominator;
 80013a6:	f8cd a00c 	str.w	sl, [sp, #12]
    PrepareParam(&Command, 1u, param2_size, TYPE_String, &FuncParam);
 80013aa:	9700      	str	r7, [sp, #0]
 80013ac:	2300      	movs	r3, #0
 80013ae:	4622      	mov	r2, r4
 80013b0:	4659      	mov	r1, fp
 80013b2:	4640      	mov	r0, r8
 80013b4:	f7ff fbea 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>

    /* 4. Send Configuration Request */
    HandleCmd(&Command, SerialDataSize);
 80013b8:	4649      	mov	r1, r9
 80013ba:	4640      	mov	r0, r8
 80013bc:	f7ff fcde 	bl	8000d7c <_ZL9HandleCmdP15SDW_CommandInfot>
}
 80013c0:	4630      	mov	r0, r6
 80013c2:	b005      	add	sp, #20
 80013c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80013c8:	20000026 	.word	0x20000026
 80013cc:	20000430 	.word	0x20000430

080013d0 <_ZN4nodeC1EPKcS1_12SDW_NodeType>:
    HandleCmd(&Command, SerialDataSize);
}

/* Node Class ############################################################################################################ */
node::node(){};
node::node(const char *InCoef, const char *OutCoef, SDW_NodeType Type)
 80013d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80013d4:	b087      	sub	sp, #28
 80013d6:	4607      	mov	r7, r0
 80013d8:	468a      	mov	sl, r1
 80013da:	4691      	mov	r9, r2
 80013dc:	9303      	str	r3, [sp, #12]
{
    SDW_FuncParam FuncParam;
    uint8_t param1_size = strlen(InCoef) + 1u;
 80013de:	4608      	mov	r0, r1
 80013e0:	f7fe ff0e 	bl	8000200 <strlen>
 80013e4:	b2c5      	uxtb	r5, r0
 80013e6:	3501      	adds	r5, #1
 80013e8:	b2ed      	uxtb	r5, r5
    uint8_t param2_size = strlen(OutCoef) + 1u;
 80013ea:	4648      	mov	r0, r9
 80013ec:	f7fe ff08 	bl	8000200 <strlen>
 80013f0:	b2c4      	uxtb	r4, r0
 80013f2:	3401      	adds	r4, #1
 80013f4:	b2e4      	uxtb	r4, r4
    uint16_t SerialDataSize = SDW_FIXED_SIZE +
            SDW_PARAM_INFO_SIZE + param1_size +
            SDW_PARAM_INFO_SIZE + param2_size +
 80013f6:	eb05 0804 	add.w	r8, r5, r4
    uint16_t SerialDataSize = SDW_FIXED_SIZE +
 80013fa:	f108 0813 	add.w	r8, r8, #19
            SDW_PARAM_INFO_SIZE + SDW_NODE_TYPE_SIZE;

    /* 1. Prepare Configuration : Header + Function Info */
    this->id = currentNodeId++;
 80013fe:	4a1d      	ldr	r2, [pc, #116]	@ (8001474 <_ZN4nodeC1EPKcS1_12SDW_NodeType+0xa4>)
 8001400:	8813      	ldrh	r3, [r2, #0]
 8001402:	1c59      	adds	r1, r3, #1
 8001404:	8011      	strh	r1, [r2, #0]
 8001406:	803b      	strh	r3, [r7, #0]
    PrepareCmdHeader(&Command, SerialDataSize, SDW_CreateBlock, 3u, SDW_EDL_NewNode, this->id);
 8001408:	4e1b      	ldr	r6, [pc, #108]	@ (8001478 <_ZN4nodeC1EPKcS1_12SDW_NodeType+0xa8>)
 800140a:	9301      	str	r3, [sp, #4]
 800140c:	f04f 0b02 	mov.w	fp, #2
 8001410:	f8cd b000 	str.w	fp, [sp]
 8001414:	2303      	movs	r3, #3
 8001416:	2200      	movs	r2, #0
 8001418:	4641      	mov	r1, r8
 800141a:	4630      	mov	r0, r6
 800141c:	f7ff fb9e 	bl	8000b5c <_ZL16PrepareCmdHeaderP15SDW_CommandInfot10SDW_FuncIdh13SDW_SubFuncIdt>

    /* 2. Prepare Param_1 */
    FuncParam.ParamString = InCoef;
 8001420:	f8cd a014 	str.w	sl, [sp, #20]
    PrepareParam(&Command, 0u, param1_size, TYPE_String, &FuncParam);
 8001424:	f10d 0a14 	add.w	sl, sp, #20
 8001428:	f8cd a000 	str.w	sl, [sp]
 800142c:	2300      	movs	r3, #0
 800142e:	462a      	mov	r2, r5
 8001430:	4619      	mov	r1, r3
 8001432:	4630      	mov	r0, r6
 8001434:	f7ff fbaa 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>

    /* 3. Prepare Param_2 */
    FuncParam.ParamString = OutCoef;
 8001438:	f8cd 9014 	str.w	r9, [sp, #20]
    PrepareParam(&Command, 1u, param2_size, TYPE_String, &FuncParam);
 800143c:	f8cd a000 	str.w	sl, [sp]
 8001440:	2300      	movs	r3, #0
 8001442:	4622      	mov	r2, r4
 8001444:	2101      	movs	r1, #1
 8001446:	4630      	mov	r0, r6
 8001448:	f7ff fba0 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>

    /* 4. Prepare Param_3 */
    FuncParam.ParamNodeType(Type);
 800144c:	9b03      	ldr	r3, [sp, #12]
 800144e:	f88d 3014 	strb.w	r3, [sp, #20]
    PrepareParam(&Command, 2u, SDW_NODE_TYPE_SIZE, SDW_NODE_TYPE_TYPE, &FuncParam);
 8001452:	f8cd a000 	str.w	sl, [sp]
 8001456:	2308      	movs	r3, #8
 8001458:	2201      	movs	r2, #1
 800145a:	4659      	mov	r1, fp
 800145c:	4630      	mov	r0, r6
 800145e:	f7ff fb95 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>

    /* 5. Send Configuration Request */
    HandleCmd(&Command, SerialDataSize);
 8001462:	4641      	mov	r1, r8
 8001464:	4630      	mov	r0, r6
 8001466:	f7ff fc89 	bl	8000d7c <_ZL9HandleCmdP15SDW_CommandInfot>
}
 800146a:	4638      	mov	r0, r7
 800146c:	b007      	add	sp, #28
 800146e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001472:	bf00      	nop
 8001474:	20000024 	.word	0x20000024
 8001478:	20000430 	.word	0x20000430

0800147c <_ZN4node2inEh>:
  /* 2. Send Configuration Request */
  HandleCmd(&Command, SDW_FIXED_SIZE);
}

node node::in(uint8_t InIdx)
{
 800147c:	b082      	sub	sp, #8
    this->activeIoIdx = InIdx;
 800147e:	7081      	strb	r1, [r0, #2]
    return *this;
 8001480:	6800      	ldr	r0, [r0, #0]
 8001482:	9001      	str	r0, [sp, #4]
 8001484:	2000      	movs	r0, #0
 8001486:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800148a:	f363 000f 	bfi	r0, r3, #0, #16
 800148e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001492:	f363 401f 	bfi	r0, r3, #16, #16
}
 8001496:	b002      	add	sp, #8
 8001498:	4770      	bx	lr

0800149a <_ZN4node3outEh>:

node node::out(uint8_t OutIdx)
{
 800149a:	b082      	sub	sp, #8
    this->activeIoIdx = OutIdx;
 800149c:	7081      	strb	r1, [r0, #2]
    return *this;
 800149e:	6800      	ldr	r0, [r0, #0]
 80014a0:	9001      	str	r0, [sp, #4]
 80014a2:	2000      	movs	r0, #0
 80014a4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80014a8:	f363 000f 	bfi	r0, r3, #0, #16
 80014ac:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80014b0:	f363 401f 	bfi	r0, r3, #16, #16
}
 80014b4:	b002      	add	sp, #8
 80014b6:	4770      	bx	lr

080014b8 <_ZN4node5getIdEv>:

uint16_t node::getId()
{
    return this->id;
}
 80014b8:	8800      	ldrh	r0, [r0, #0]
 80014ba:	4770      	bx	lr

080014bc <_ZN4node5setIdEt>:

void node::setId(uint16_t id)
{
    this->id = id;
 80014bc:	8001      	strh	r1, [r0, #0]
}
 80014be:	4770      	bx	lr

080014c0 <_ZN8actuatorC1EP16SDW_ActuatorSpec>:
actuator::actuator(SDW_ActuatorSpec *Actuator)
 80014c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80014c2:	b085      	sub	sp, #20
 80014c4:	4606      	mov	r6, r0
 80014c6:	460d      	mov	r5, r1
    this->setId(currentNodeId++);
 80014c8:	4b1f      	ldr	r3, [pc, #124]	@ (8001548 <_ZN8actuatorC1EP16SDW_ActuatorSpec+0x88>)
 80014ca:	8819      	ldrh	r1, [r3, #0]
 80014cc:	1c4a      	adds	r2, r1, #1
 80014ce:	801a      	strh	r2, [r3, #0]
 80014d0:	f7ff fff4 	bl	80014bc <_ZN4node5setIdEt>
    PrepareCmdHeader(&Command,
 80014d4:	4630      	mov	r0, r6
 80014d6:	f7ff ffef 	bl	80014b8 <_ZN4node5getIdEv>
 80014da:	4c1c      	ldr	r4, [pc, #112]	@ (800154c <_ZN8actuatorC1EP16SDW_ActuatorSpec+0x8c>)
 80014dc:	9001      	str	r0, [sp, #4]
 80014de:	2353      	movs	r3, #83	@ 0x53
 80014e0:	9300      	str	r3, [sp, #0]
 80014e2:	2304      	movs	r3, #4
 80014e4:	2200      	movs	r2, #0
 80014e6:	2122      	movs	r1, #34	@ 0x22
 80014e8:	4620      	mov	r0, r4
 80014ea:	f7ff fb37 	bl	8000b5c <_ZL16PrepareCmdHeaderP15SDW_CommandInfot10SDW_FuncIdh13SDW_SubFuncIdt>
    FuncParam.ParamHwRoutineId(Actuator->HwId);
 80014ee:	89ab      	ldrh	r3, [r5, #12]
 80014f0:	f8ad 300c 	strh.w	r3, [sp, #12]
    PrepareParam(&Command, 0u, SDW_HW_ROUTINE_ID_SIZE, SDW_HW_ROUTINE_ID_TYPE, &FuncParam);
 80014f4:	af03      	add	r7, sp, #12
 80014f6:	9700      	str	r7, [sp, #0]
 80014f8:	2307      	movs	r3, #7
 80014fa:	2202      	movs	r2, #2
 80014fc:	2100      	movs	r1, #0
 80014fe:	4620      	mov	r0, r4
 8001500:	f7ff fb44 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>
    FuncParam.ParamReal = Actuator->ConvConst1;
 8001504:	682b      	ldr	r3, [r5, #0]
 8001506:	9303      	str	r3, [sp, #12]
    PrepareParam(&Command, 1u, SDW_REAL_SIZE, TYPE_Real, &FuncParam);
 8001508:	9700      	str	r7, [sp, #0]
 800150a:	2306      	movs	r3, #6
 800150c:	2204      	movs	r2, #4
 800150e:	2101      	movs	r1, #1
 8001510:	4620      	mov	r0, r4
 8001512:	f7ff fb3b 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>
    FuncParam.ParamReal = Actuator->LowerLimit;
 8001516:	686b      	ldr	r3, [r5, #4]
 8001518:	9303      	str	r3, [sp, #12]
    PrepareParam(&Command, 2u, SDW_REAL_SIZE, TYPE_Real, &FuncParam);
 800151a:	9700      	str	r7, [sp, #0]
 800151c:	2306      	movs	r3, #6
 800151e:	2204      	movs	r2, #4
 8001520:	2102      	movs	r1, #2
 8001522:	4620      	mov	r0, r4
 8001524:	f7ff fb32 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>
    FuncParam.ParamReal = Actuator->UpperLimit;
 8001528:	68ab      	ldr	r3, [r5, #8]
 800152a:	9303      	str	r3, [sp, #12]
    PrepareParam(&Command, 3u, SDW_REAL_SIZE, TYPE_Real, &FuncParam);
 800152c:	9700      	str	r7, [sp, #0]
 800152e:	2306      	movs	r3, #6
 8001530:	2204      	movs	r2, #4
 8001532:	2103      	movs	r1, #3
 8001534:	4620      	mov	r0, r4
 8001536:	f7ff fb29 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>
    HandleCmd(&Command, SerialDataSize);
 800153a:	2122      	movs	r1, #34	@ 0x22
 800153c:	4620      	mov	r0, r4
 800153e:	f7ff fc1d 	bl	8000d7c <_ZL9HandleCmdP15SDW_CommandInfot>
}
 8001542:	4630      	mov	r0, r6
 8001544:	b005      	add	sp, #20
 8001546:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001548:	20000024 	.word	0x20000024
 800154c:	20000430 	.word	0x20000430

08001550 <_ZN6sensorC1EP14SDW_SensorSpec>:
sensor::sensor(SDW_SensorSpec *Sensor)
 8001550:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001552:	b085      	sub	sp, #20
 8001554:	4606      	mov	r6, r0
 8001556:	460d      	mov	r5, r1
    this->setId(currentNodeId++);
 8001558:	4b1b      	ldr	r3, [pc, #108]	@ (80015c8 <_ZN6sensorC1EP14SDW_SensorSpec+0x78>)
 800155a:	8819      	ldrh	r1, [r3, #0]
 800155c:	1c4a      	adds	r2, r1, #1
 800155e:	801a      	strh	r2, [r3, #0]
 8001560:	f7ff ffac 	bl	80014bc <_ZN4node5setIdEt>
    PrepareCmdHeader(&Command,
 8001564:	4630      	mov	r0, r6
 8001566:	f7ff ffa7 	bl	80014b8 <_ZN4node5getIdEv>
 800156a:	4c18      	ldr	r4, [pc, #96]	@ (80015cc <_ZN6sensorC1EP14SDW_SensorSpec+0x7c>)
 800156c:	9001      	str	r0, [sp, #4]
 800156e:	2352      	movs	r3, #82	@ 0x52
 8001570:	9300      	str	r3, [sp, #0]
 8001572:	2303      	movs	r3, #3
 8001574:	2200      	movs	r2, #0
 8001576:	211c      	movs	r1, #28
 8001578:	4620      	mov	r0, r4
 800157a:	f7ff faef 	bl	8000b5c <_ZL16PrepareCmdHeaderP15SDW_CommandInfot10SDW_FuncIdh13SDW_SubFuncIdt>
    FuncParam.ParamUint16 = (uint16_t)Sensor->HwId;
 800157e:	892b      	ldrh	r3, [r5, #8]
 8001580:	f8ad 300c 	strh.w	r3, [sp, #12]
    PrepareParam(&Command, 0u, SDW_HW_ROUTINE_ID_SIZE, TYPE_Uint16, &FuncParam);
 8001584:	af03      	add	r7, sp, #12
 8001586:	9700      	str	r7, [sp, #0]
 8001588:	2307      	movs	r3, #7
 800158a:	2202      	movs	r2, #2
 800158c:	2100      	movs	r1, #0
 800158e:	4620      	mov	r0, r4
 8001590:	f7ff fafc 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>
    FuncParam.ParamReal = Sensor->ConvConst1;
 8001594:	682b      	ldr	r3, [r5, #0]
 8001596:	9303      	str	r3, [sp, #12]
    PrepareParam(&Command, 1u, SDW_REAL_SIZE, TYPE_Real, &FuncParam);
 8001598:	9700      	str	r7, [sp, #0]
 800159a:	2306      	movs	r3, #6
 800159c:	2204      	movs	r2, #4
 800159e:	2101      	movs	r1, #1
 80015a0:	4620      	mov	r0, r4
 80015a2:	f7ff faf3 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>
    FuncParam.ParamReal = Sensor->ConvConst2;
 80015a6:	686b      	ldr	r3, [r5, #4]
 80015a8:	9303      	str	r3, [sp, #12]
    PrepareParam(&Command, 2u, SDW_REAL_SIZE, TYPE_Real, &FuncParam);
 80015aa:	9700      	str	r7, [sp, #0]
 80015ac:	2306      	movs	r3, #6
 80015ae:	2204      	movs	r2, #4
 80015b0:	2102      	movs	r1, #2
 80015b2:	4620      	mov	r0, r4
 80015b4:	f7ff faea 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>
    HandleCmd(&Command, SerialDataSize);
 80015b8:	211c      	movs	r1, #28
 80015ba:	4620      	mov	r0, r4
 80015bc:	f7ff fbde 	bl	8000d7c <_ZL9HandleCmdP15SDW_CommandInfot>
}
 80015c0:	4630      	mov	r0, r6
 80015c2:	b005      	add	sp, #20
 80015c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80015c6:	bf00      	nop
 80015c8:	20000024 	.word	0x20000024
 80015cc:	20000430 	.word	0x20000430

080015d0 <_ZN7schmidtC1Ev>:
schmidt::schmidt()
 80015d0:	b530      	push	{r4, r5, lr}
 80015d2:	b083      	sub	sp, #12
 80015d4:	4604      	mov	r4, r0
    this->setId(currentNodeId++);
 80015d6:	4b0d      	ldr	r3, [pc, #52]	@ (800160c <_ZN7schmidtC1Ev+0x3c>)
 80015d8:	8819      	ldrh	r1, [r3, #0]
 80015da:	1c4a      	adds	r2, r1, #1
 80015dc:	801a      	strh	r2, [r3, #0]
 80015de:	f7ff ff6d 	bl	80014bc <_ZN4node5setIdEt>
    PrepareCmdHeader(&Command,
 80015e2:	4620      	mov	r0, r4
 80015e4:	f7ff ff68 	bl	80014b8 <_ZN4node5getIdEv>
 80015e8:	4d09      	ldr	r5, [pc, #36]	@ (8001610 <_ZN7schmidtC1Ev+0x40>)
 80015ea:	9001      	str	r0, [sp, #4]
 80015ec:	2356      	movs	r3, #86	@ 0x56
 80015ee:	9300      	str	r3, [sp, #0]
 80015f0:	2300      	movs	r3, #0
 80015f2:	461a      	mov	r2, r3
 80015f4:	210c      	movs	r1, #12
 80015f6:	4628      	mov	r0, r5
 80015f8:	f7ff fab0 	bl	8000b5c <_ZL16PrepareCmdHeaderP15SDW_CommandInfot10SDW_FuncIdh13SDW_SubFuncIdt>
    HandleCmd(&Command, SDW_FIXED_SIZE);
 80015fc:	210c      	movs	r1, #12
 80015fe:	4628      	mov	r0, r5
 8001600:	f7ff fbbc 	bl	8000d7c <_ZL9HandleCmdP15SDW_CommandInfot>
}
 8001604:	4620      	mov	r0, r4
 8001606:	b003      	add	sp, #12
 8001608:	bd30      	pop	{r4, r5, pc}
 800160a:	bf00      	nop
 800160c:	20000024 	.word	0x20000024
 8001610:	20000430 	.word	0x20000430

08001614 <_ZN4node14getActiveIoIdxEv>:

uint8_t node::getActiveIoIdx()
{
    return this->activeIoIdx;
}
 8001614:	7880      	ldrb	r0, [r0, #2]
 8001616:	4770      	bx	lr

08001618 <_ZN2tfgtE4node>:
{
 8001618:	b530      	push	{r4, r5, lr}
 800161a:	b085      	sub	sp, #20
 800161c:	9103      	str	r1, [sp, #12]
    LinkBlock2Block(this->id, 0xFF, Dst.getId(), Dst.getActiveIoIdx(), SDW_EDL_LinkSys2Node);
 800161e:	8805      	ldrh	r5, [r0, #0]
 8001620:	a803      	add	r0, sp, #12
 8001622:	f7ff ff49 	bl	80014b8 <_ZN4node5getIdEv>
 8001626:	4604      	mov	r4, r0
 8001628:	a803      	add	r0, sp, #12
 800162a:	f7ff fff3 	bl	8001614 <_ZN4node14getActiveIoIdxEv>
 800162e:	4603      	mov	r3, r0
 8001630:	f240 32ea 	movw	r2, #1002	@ 0x3ea
 8001634:	9200      	str	r2, [sp, #0]
 8001636:	4622      	mov	r2, r4
 8001638:	21ff      	movs	r1, #255	@ 0xff
 800163a:	4628      	mov	r0, r5
 800163c:	f7ff fbfc 	bl	8000e38 <_ZL15LinkBlock2Blockthth13SDW_SubFuncId>
}
 8001640:	b005      	add	sp, #20
 8001642:	bd30      	pop	{r4, r5, pc}

08001644 <_ZN4nodegtE2tf>:

void node::operator>(tf Dst) // Node2Sys
{
 8001644:	b530      	push	{r4, r5, lr}
 8001646:	b085      	sub	sp, #20
 8001648:	f8ad 100c 	strh.w	r1, [sp, #12]
    LinkBlock2Block(this->id, this->activeIoIdx, Dst.getId(), 0xFF, SDW_EDL_LinkNode2Sys);
 800164c:	8804      	ldrh	r4, [r0, #0]
 800164e:	7885      	ldrb	r5, [r0, #2]
 8001650:	a803      	add	r0, sp, #12
 8001652:	f7ff fe60 	bl	8001316 <_ZN2tf5getIdEv>
 8001656:	4602      	mov	r2, r0
 8001658:	f240 33ef 	movw	r3, #1007	@ 0x3ef
 800165c:	9300      	str	r3, [sp, #0]
 800165e:	23ff      	movs	r3, #255	@ 0xff
 8001660:	4629      	mov	r1, r5
 8001662:	4620      	mov	r0, r4
 8001664:	f7ff fbe8 	bl	8000e38 <_ZL15LinkBlock2Blockthth13SDW_SubFuncId>
}
 8001668:	b005      	add	sp, #20
 800166a:	bd30      	pop	{r4, r5, pc}

0800166c <_ZN4nodegtES_>:
    LinkBlock2Block(this->id, this->activeIoIdx, Dst.getId(), 0xFF, SDW_EDL_LinkNode2Probe);
    Dst.addToQueue();
}

void node::operator>(node Dst) // Node2Node
{
 800166c:	b570      	push	{r4, r5, r6, lr}
 800166e:	b084      	sub	sp, #16
 8001670:	9103      	str	r1, [sp, #12]
    LinkBlock2Block(this->id, this->activeIoIdx, Dst.getId(), Dst.getActiveIoIdx(), SDW_EDL_LinkNode2Node);
 8001672:	8805      	ldrh	r5, [r0, #0]
 8001674:	7886      	ldrb	r6, [r0, #2]
 8001676:	a803      	add	r0, sp, #12
 8001678:	f7ff ff1e 	bl	80014b8 <_ZN4node5getIdEv>
 800167c:	4604      	mov	r4, r0
 800167e:	a803      	add	r0, sp, #12
 8001680:	f7ff ffc8 	bl	8001614 <_ZN4node14getActiveIoIdxEv>
 8001684:	4603      	mov	r3, r0
 8001686:	f240 32e9 	movw	r2, #1001	@ 0x3e9
 800168a:	9200      	str	r2, [sp, #0]
 800168c:	4622      	mov	r2, r4
 800168e:	4631      	mov	r1, r6
 8001690:	4628      	mov	r0, r5
 8001692:	f7ff fbd1 	bl	8000e38 <_ZL15LinkBlock2Blockthth13SDW_SubFuncId>
}
 8001696:	b004      	add	sp, #16
 8001698:	bd70      	pop	{r4, r5, r6, pc}
	...

0800169c <_ZN6butterC1Ehf14SDW_FilterType>:
        /* 4. Send Configuration Request */
        HandleCmd(&Command, SerialDataSize);
    }
}

butter::butter(uint8_t n, float fc, SDW_FilterType ftype)
 800169c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80016a0:	b084      	sub	sp, #16
 80016a2:	4604      	mov	r4, r0
 80016a4:	460f      	mov	r7, r1
 80016a6:	ee10 6a10 	vmov	r6, s0
{
    SDW_SubFuncId SubFuncId = getButterSubFuncId(ftype);
 80016aa:	4610      	mov	r0, r2
 80016ac:	f7ff fe22 	bl	80012f4 <_Z18getButterSubFuncId14SDW_FilterType>

    if ((SDW_EDL_NewButterLow == SubFuncId) || (SDW_EDL_NewButterHigh == SubFuncId))
 80016b0:	f1a0 030e 	sub.w	r3, r0, #14
 80016b4:	b29b      	uxth	r3, r3
 80016b6:	2b01      	cmp	r3, #1
 80016b8:	d903      	bls.n	80016c2 <_ZN6butterC1Ehf14SDW_FilterType+0x26>
        PrepareParam(&Command, 1u, SDW_UINT8_SIZE, TYPE_Uint8, &FuncParam);

        /* 4. Send Configuration Request */
        HandleCmd(&Command, SerialDataSize);
    }
}
 80016ba:	4620      	mov	r0, r4
 80016bc:	b004      	add	sp, #16
 80016be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80016c2:	4605      	mov	r5, r0
        this->setId(currentSysId++);
 80016c4:	4b15      	ldr	r3, [pc, #84]	@ (800171c <_ZN6butterC1Ehf14SDW_FilterType+0x80>)
 80016c6:	8819      	ldrh	r1, [r3, #0]
 80016c8:	1c4a      	adds	r2, r1, #1
 80016ca:	801a      	strh	r2, [r3, #0]
 80016cc:	4620      	mov	r0, r4
 80016ce:	f7ff fe24 	bl	800131a <_ZN2tf5setIdEt>
        PrepareCmdHeader(&Command, SerialDataSize, SDW_CreateBlock, 2u, SubFuncId, this->getId());
 80016d2:	4620      	mov	r0, r4
 80016d4:	f7ff fe1f 	bl	8001316 <_ZN2tf5getIdEv>
 80016d8:	f8df 8044 	ldr.w	r8, [pc, #68]	@ 8001720 <_ZN6butterC1Ehf14SDW_FilterType+0x84>
 80016dc:	9001      	str	r0, [sp, #4]
 80016de:	9500      	str	r5, [sp, #0]
 80016e0:	2302      	movs	r3, #2
 80016e2:	2200      	movs	r2, #0
 80016e4:	2115      	movs	r1, #21
 80016e6:	4640      	mov	r0, r8
 80016e8:	f7ff fa38 	bl	8000b5c <_ZL16PrepareCmdHeaderP15SDW_CommandInfot10SDW_FuncIdh13SDW_SubFuncIdt>
        FuncParam.ParamReal = fc;
 80016ec:	9603      	str	r6, [sp, #12]
        PrepareParam(&Command, 0u, SDW_REAL_SIZE, TYPE_Real, &FuncParam);
 80016ee:	ad03      	add	r5, sp, #12
 80016f0:	9500      	str	r5, [sp, #0]
 80016f2:	2306      	movs	r3, #6
 80016f4:	2204      	movs	r2, #4
 80016f6:	2100      	movs	r1, #0
 80016f8:	4640      	mov	r0, r8
 80016fa:	f7ff fa47 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>
        FuncParam.ParamUint8 = n;
 80016fe:	f88d 700c 	strb.w	r7, [sp, #12]
        PrepareParam(&Command, 1u, SDW_UINT8_SIZE, TYPE_Uint8, &FuncParam);
 8001702:	9500      	str	r5, [sp, #0]
 8001704:	2308      	movs	r3, #8
 8001706:	2201      	movs	r2, #1
 8001708:	4611      	mov	r1, r2
 800170a:	4640      	mov	r0, r8
 800170c:	f7ff fa3e 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>
        HandleCmd(&Command, SerialDataSize);
 8001710:	2115      	movs	r1, #21
 8001712:	4640      	mov	r0, r8
 8001714:	f7ff fb32 	bl	8000d7c <_ZL9HandleCmdP15SDW_CommandInfot>
 8001718:	e7cf      	b.n	80016ba <_ZN6butterC1Ehf14SDW_FilterType+0x1e>
 800171a:	bf00      	nop
 800171c:	20000026 	.word	0x20000026
 8001720:	20000430 	.word	0x20000430

08001724 <_ZN6periodC1Efff>:
        /* 5. Send Configuration Request */
        HandleCmd(&Command, SerialDataSize);
    }
}

period::period(float Max, float Min, float Epsilon)
 8001724:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001728:	b084      	sub	sp, #16
 800172a:	4605      	mov	r5, r0
 800172c:	ee10 6a10 	vmov	r6, s0
 8001730:	ee10 8a90 	vmov	r8, s1
 8001734:	ee11 7a10 	vmov	r7, s2
    SDW_FuncParam FuncParam;
    uint16_t SerialDataSize = SDW_FIXED_SIZE +
            3u * (SDW_PARAM_INFO_SIZE + SDW_REAL_SIZE);

    /* 1. Prepare Configuration : Header + Function Info */
    this->setId(currentSysId++);
 8001738:	4b1a      	ldr	r3, [pc, #104]	@ (80017a4 <_ZN6periodC1Efff+0x80>)
 800173a:	8819      	ldrh	r1, [r3, #0]
 800173c:	1c4a      	adds	r2, r1, #1
 800173e:	801a      	strh	r2, [r3, #0]
 8001740:	f7ff fdeb 	bl	800131a <_ZN2tf5setIdEt>
    PrepareCmdHeader(&Command, SerialDataSize, SDW_CreateBlock, 3u, SDW_EDL_NewPeriodMeter, this->getId());
 8001744:	4628      	mov	r0, r5
 8001746:	f7ff fde6 	bl	8001316 <_ZN2tf5getIdEv>
 800174a:	4c17      	ldr	r4, [pc, #92]	@ (80017a8 <_ZN6periodC1Efff+0x84>)
 800174c:	9001      	str	r0, [sp, #4]
 800174e:	2357      	movs	r3, #87	@ 0x57
 8001750:	9300      	str	r3, [sp, #0]
 8001752:	2303      	movs	r3, #3
 8001754:	2200      	movs	r2, #0
 8001756:	211e      	movs	r1, #30
 8001758:	4620      	mov	r0, r4
 800175a:	f7ff f9ff 	bl	8000b5c <_ZL16PrepareCmdHeaderP15SDW_CommandInfot10SDW_FuncIdh13SDW_SubFuncIdt>

    /* 2. Prepare Param_1 */
    FuncParam.ParamReal = Max;
 800175e:	9603      	str	r6, [sp, #12]
    PrepareParam(&Command, 0u, SDW_REAL_SIZE, TYPE_Real, &FuncParam);
 8001760:	ae03      	add	r6, sp, #12
 8001762:	9600      	str	r6, [sp, #0]
 8001764:	2306      	movs	r3, #6
 8001766:	2204      	movs	r2, #4
 8001768:	2100      	movs	r1, #0
 800176a:	4620      	mov	r0, r4
 800176c:	f7ff fa0e 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>

    /* 3. Prepare Param_2 */
    FuncParam.ParamReal = Min;
 8001770:	f8cd 800c 	str.w	r8, [sp, #12]
    PrepareParam(&Command, 1u, SDW_REAL_SIZE, TYPE_Real, &FuncParam);
 8001774:	9600      	str	r6, [sp, #0]
 8001776:	2306      	movs	r3, #6
 8001778:	2204      	movs	r2, #4
 800177a:	2101      	movs	r1, #1
 800177c:	4620      	mov	r0, r4
 800177e:	f7ff fa05 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>

    /* 4. Prepare Param_3 */
    FuncParam.ParamReal = Epsilon;
 8001782:	9703      	str	r7, [sp, #12]
    PrepareParam(&Command, 2u, SDW_REAL_SIZE, TYPE_Real, &FuncParam);
 8001784:	9600      	str	r6, [sp, #0]
 8001786:	2306      	movs	r3, #6
 8001788:	2204      	movs	r2, #4
 800178a:	2102      	movs	r1, #2
 800178c:	4620      	mov	r0, r4
 800178e:	f7ff f9fd 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>

    /* 6. Send Configuration Request */
    HandleCmd(&Command, SerialDataSize);
 8001792:	211e      	movs	r1, #30
 8001794:	4620      	mov	r0, r4
 8001796:	f7ff faf1 	bl	8000d7c <_ZL9HandleCmdP15SDW_CommandInfot>
}
 800179a:	4628      	mov	r0, r5
 800179c:	b004      	add	sp, #16
 800179e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80017a2:	bf00      	nop
 80017a4:	20000026 	.word	0x20000026
 80017a8:	20000430 	.word	0x20000430

080017ac <_ZN10maxObserveC1Eh>:

maxObserve::maxObserve(uint8_t NbrOfSamples)
 80017ac:	b570      	push	{r4, r5, r6, lr}
 80017ae:	b084      	sub	sp, #16
 80017b0:	4604      	mov	r4, r0
 80017b2:	460e      	mov	r6, r1
    SDW_FuncParam FuncParam;
    uint16_t SerialDataSize = SDW_FIXED_SIZE +
            SDW_PARAM_INFO_SIZE + SDW_UINT8_SIZE;

    /* 1. Prepare Configuration : Header + Function Info */
    this->setId(currentSysId++);
 80017b4:	4b11      	ldr	r3, [pc, #68]	@ (80017fc <_ZN10maxObserveC1Eh+0x50>)
 80017b6:	8819      	ldrh	r1, [r3, #0]
 80017b8:	1c4a      	adds	r2, r1, #1
 80017ba:	801a      	strh	r2, [r3, #0]
 80017bc:	f7ff fdad 	bl	800131a <_ZN2tf5setIdEt>
    PrepareCmdHeader(&Command, SerialDataSize, SDW_CreateBlock, 1u, SDW_EDL_NewMaxObserver, this->getId());
 80017c0:	4620      	mov	r0, r4
 80017c2:	f7ff fda8 	bl	8001316 <_ZN2tf5getIdEv>
 80017c6:	4d0e      	ldr	r5, [pc, #56]	@ (8001800 <_ZN10maxObserveC1Eh+0x54>)
 80017c8:	9001      	str	r0, [sp, #4]
 80017ca:	2354      	movs	r3, #84	@ 0x54
 80017cc:	9300      	str	r3, [sp, #0]
 80017ce:	2301      	movs	r3, #1
 80017d0:	2200      	movs	r2, #0
 80017d2:	210f      	movs	r1, #15
 80017d4:	4628      	mov	r0, r5
 80017d6:	f7ff f9c1 	bl	8000b5c <_ZL16PrepareCmdHeaderP15SDW_CommandInfot10SDW_FuncIdh13SDW_SubFuncIdt>

    /* 2. Prepare Param_1 */
    FuncParam.ParamUint8 = NbrOfSamples;
 80017da:	f88d 600c 	strb.w	r6, [sp, #12]
    PrepareParam(&Command, 0u, SDW_UINT8_SIZE, TYPE_Uint8, &FuncParam);
 80017de:	ab03      	add	r3, sp, #12
 80017e0:	9300      	str	r3, [sp, #0]
 80017e2:	2308      	movs	r3, #8
 80017e4:	2201      	movs	r2, #1
 80017e6:	2100      	movs	r1, #0
 80017e8:	4628      	mov	r0, r5
 80017ea:	f7ff f9cf 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>

    /* 3. Send Configuration Request */
    HandleCmd(&Command, SerialDataSize);
 80017ee:	210f      	movs	r1, #15
 80017f0:	4628      	mov	r0, r5
 80017f2:	f7ff fac3 	bl	8000d7c <_ZL9HandleCmdP15SDW_CommandInfot>
}
 80017f6:	4620      	mov	r0, r4
 80017f8:	b004      	add	sp, #16
 80017fa:	bd70      	pop	{r4, r5, r6, pc}
 80017fc:	20000026 	.word	0x20000026
 8001800:	20000430 	.word	0x20000430

08001804 <_ZN5probeC1Ev>:
    /* 5. Send Configuration Request */
    HandleCmd(&Command, SerialDataSize);
}

/* Probe Class ########################################################################################################### */
probe::probe(){};
 8001804:	4770      	bx	lr
	...

08001808 <_ZN5probeC1EPKc>:

probe::probe(const char *label)
 8001808:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800180c:	b084      	sub	sp, #16
 800180e:	4605      	mov	r5, r0
 8001810:	460e      	mov	r6, r1
{
    SDW_FuncParam FuncParam;
    uint8_t labelLen = strlen(label) + 1;
 8001812:	4608      	mov	r0, r1
 8001814:	f7fe fcf4 	bl	8000200 <strlen>
 8001818:	b2c4      	uxtb	r4, r0
 800181a:	3401      	adds	r4, #1
 800181c:	b2e4      	uxtb	r4, r4
    uint16_t SerialDataSize;

    SerialDataSize = SDW_FIXED_SIZE +
 800181e:	f104 080e 	add.w	r8, r4, #14
            SDW_PARAM_INFO_SIZE + labelLen;

    /* 1. Prepare Configuration : Header + Function Info */
    this->label = label;
 8001822:	606e      	str	r6, [r5, #4]
    this->id = currentProbeId++;
 8001824:	4a0f      	ldr	r2, [pc, #60]	@ (8001864 <_ZN5probeC1EPKc+0x5c>)
 8001826:	8813      	ldrh	r3, [r2, #0]
 8001828:	1c59      	adds	r1, r3, #1
 800182a:	8011      	strh	r1, [r2, #0]
 800182c:	802b      	strh	r3, [r5, #0]
    PrepareCmdHeader(&Command, SerialDataSize, SDW_CreateBlock, 1u, SDW_EDL_NewProbe, this->id);
 800182e:	4f0e      	ldr	r7, [pc, #56]	@ (8001868 <_ZN5probeC1EPKc+0x60>)
 8001830:	9301      	str	r3, [sp, #4]
 8001832:	2307      	movs	r3, #7
 8001834:	9300      	str	r3, [sp, #0]
 8001836:	2301      	movs	r3, #1
 8001838:	2200      	movs	r2, #0
 800183a:	4641      	mov	r1, r8
 800183c:	4638      	mov	r0, r7
 800183e:	f7ff f98d 	bl	8000b5c <_ZL16PrepareCmdHeaderP15SDW_CommandInfot10SDW_FuncIdh13SDW_SubFuncIdt>

    /* 2. Prepare Param_1 */
    FuncParam.ParamString = label;
 8001842:	9603      	str	r6, [sp, #12]
    PrepareParam(&Command, 0u, labelLen, TYPE_String, &FuncParam);
 8001844:	ab03      	add	r3, sp, #12
 8001846:	9300      	str	r3, [sp, #0]
 8001848:	2300      	movs	r3, #0
 800184a:	4622      	mov	r2, r4
 800184c:	4619      	mov	r1, r3
 800184e:	4638      	mov	r0, r7
 8001850:	f7ff f99c 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>

    /* 2. Send Configuration Request */
    HandleCmd(&Command, SerialDataSize);
 8001854:	4641      	mov	r1, r8
 8001856:	4638      	mov	r0, r7
 8001858:	f7ff fa90 	bl	8000d7c <_ZL9HandleCmdP15SDW_CommandInfot>
}
 800185c:	4628      	mov	r0, r5
 800185e:	b004      	add	sp, #16
 8001860:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001864:	20000020 	.word	0x20000020
 8001868:	20000430 	.word	0x20000430

0800186c <_ZN5probe5getIdEv>:

uint16_t probe::getId()
{
    return this->id;
}
 800186c:	8800      	ldrh	r0, [r0, #0]
 800186e:	4770      	bx	lr

08001870 <_ZN5probe10addToQueueEv>:
    this->id = id;
}

void probe::addToQueue()
{
    this->idx = currentProbeIdx++;
 8001870:	4a02      	ldr	r2, [pc, #8]	@ (800187c <_ZN5probe10addToQueueEv+0xc>)
 8001872:	7813      	ldrb	r3, [r2, #0]
 8001874:	1c59      	adds	r1, r3, #1
 8001876:	7011      	strb	r1, [r2, #0]
 8001878:	7083      	strb	r3, [r0, #2]
}
 800187a:	4770      	bx	lr
 800187c:	2000065a 	.word	0x2000065a

08001880 <_ZN2tfgtER5probe>:
{
 8001880:	b530      	push	{r4, r5, lr}
 8001882:	b083      	sub	sp, #12
 8001884:	460c      	mov	r4, r1
    LinkBlock2Block(this->id, 0xFF, Dst.getId(), 0xFF, SDW_EDL_LinkSys2Probe);
 8001886:	8805      	ldrh	r5, [r0, #0]
 8001888:	4608      	mov	r0, r1
 800188a:	f7ff ffef 	bl	800186c <_ZN5probe5getIdEv>
 800188e:	4602      	mov	r2, r0
 8001890:	f240 33ed 	movw	r3, #1005	@ 0x3ed
 8001894:	9300      	str	r3, [sp, #0]
 8001896:	23ff      	movs	r3, #255	@ 0xff
 8001898:	4619      	mov	r1, r3
 800189a:	4628      	mov	r0, r5
 800189c:	f7ff facc 	bl	8000e38 <_ZL15LinkBlock2Blockthth13SDW_SubFuncId>
    Dst.addToQueue();
 80018a0:	4620      	mov	r0, r4
 80018a2:	f7ff ffe5 	bl	8001870 <_ZN5probe10addToQueueEv>
}
 80018a6:	b003      	add	sp, #12
 80018a8:	bd30      	pop	{r4, r5, pc}

080018aa <_ZN4nodegtER5probe>:
{
 80018aa:	b570      	push	{r4, r5, r6, lr}
 80018ac:	b082      	sub	sp, #8
 80018ae:	460c      	mov	r4, r1
    LinkBlock2Block(this->id, this->activeIoIdx, Dst.getId(), 0xFF, SDW_EDL_LinkNode2Probe);
 80018b0:	8805      	ldrh	r5, [r0, #0]
 80018b2:	7886      	ldrb	r6, [r0, #2]
 80018b4:	4608      	mov	r0, r1
 80018b6:	f7ff ffd9 	bl	800186c <_ZN5probe5getIdEv>
 80018ba:	4602      	mov	r2, r0
 80018bc:	f44f 737b 	mov.w	r3, #1004	@ 0x3ec
 80018c0:	9300      	str	r3, [sp, #0]
 80018c2:	23ff      	movs	r3, #255	@ 0xff
 80018c4:	4631      	mov	r1, r6
 80018c6:	4628      	mov	r0, r5
 80018c8:	f7ff fab6 	bl	8000e38 <_ZL15LinkBlock2Blockthth13SDW_SubFuncId>
    Dst.addToQueue();
 80018cc:	4620      	mov	r0, r4
 80018ce:	f7ff ffcf 	bl	8001870 <_ZN5probe10addToQueueEv>
}
 80018d2:	b002      	add	sp, #8
 80018d4:	bd70      	pop	{r4, r5, r6, pc}
	...

080018d8 <_ZN5probe6getValEv>:

float probe::getVal()
{
    float retval;
    memcpy((void *)&retval, (const void *)&SDW_ProbesBuffer[this->idx * SDW_REAL_SIZE], SDW_REAL_SIZE);
 80018d8:	7882      	ldrb	r2, [r0, #2]
    return retval;
 80018da:	4b03      	ldr	r3, [pc, #12]	@ (80018e8 <_ZN5probe6getValEv+0x10>)
 80018dc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80018e0:	ee00 3a10 	vmov	s0, r3
}
 80018e4:	4770      	bx	lr
 80018e6:	bf00      	nop
 80018e8:	200003b0 	.word	0x200003b0

080018ec <_ZN5inputC1Ev>:
void probe::show(void)
{
}

/* Input Class ########################################################################################################### */
input::input(){};
 80018ec:	4770      	bx	lr
	...

080018f0 <_ZN5inputC1EPKcf>:

input::input(const char *label, float val)
 80018f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80018f4:	b085      	sub	sp, #20
 80018f6:	4605      	mov	r5, r0
 80018f8:	460e      	mov	r6, r1
 80018fa:	ee10 8a10 	vmov	r8, s0
{
    SDW_FuncParam FuncParam;
    uint8_t labelLen = strlen(label) + 1;
 80018fe:	4608      	mov	r0, r1
 8001900:	f7fe fc7e 	bl	8000200 <strlen>
 8001904:	b2c4      	uxtb	r4, r0
 8001906:	3401      	adds	r4, #1
 8001908:	b2e4      	uxtb	r4, r4
    uint16_t SerialDataSize = SDW_FIXED_SIZE +
 800190a:	f104 0914 	add.w	r9, r4, #20
            SDW_PARAM_INFO_SIZE + labelLen +
            SDW_PARAM_INFO_SIZE + SDW_REAL_SIZE;

    /* 1. Prepare Configuration : Header + Function Info */
    this->id = currentInputId++;
 800190e:	4a16      	ldr	r2, [pc, #88]	@ (8001968 <_ZN5inputC1EPKcf+0x78>)
 8001910:	8813      	ldrh	r3, [r2, #0]
 8001912:	1c59      	adds	r1, r3, #1
 8001914:	8011      	strh	r1, [r2, #0]
 8001916:	802b      	strh	r3, [r5, #0]
    this->val = val;
 8001918:	f8c5 8004 	str.w	r8, [r5, #4]
    this->label = label;
 800191c:	60ee      	str	r6, [r5, #12]
    PrepareCmdHeader(&Command, SerialDataSize, SDW_CreateBlock, 2u, SDW_EDL_NewInput, this->id);
 800191e:	4e13      	ldr	r6, [pc, #76]	@ (800196c <_ZN5inputC1EPKcf+0x7c>)
 8001920:	9301      	str	r3, [sp, #4]
 8001922:	2308      	movs	r3, #8
 8001924:	9300      	str	r3, [sp, #0]
 8001926:	2302      	movs	r3, #2
 8001928:	2200      	movs	r2, #0
 800192a:	4649      	mov	r1, r9
 800192c:	4630      	mov	r0, r6
 800192e:	f7ff f915 	bl	8000b5c <_ZL16PrepareCmdHeaderP15SDW_CommandInfot10SDW_FuncIdh13SDW_SubFuncIdt>

    /* 2. Prepare Param_1 */
    FuncParam.ParamString = this->label;
 8001932:	68eb      	ldr	r3, [r5, #12]
 8001934:	9303      	str	r3, [sp, #12]
    PrepareParam(&Command, 0u, labelLen, TYPE_String, &FuncParam);
 8001936:	af03      	add	r7, sp, #12
 8001938:	9700      	str	r7, [sp, #0]
 800193a:	2300      	movs	r3, #0
 800193c:	4622      	mov	r2, r4
 800193e:	4619      	mov	r1, r3
 8001940:	4630      	mov	r0, r6
 8001942:	f7ff f923 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>

    /* 3. Prepare Param_2 */
    FuncParam.ParamReal = val;
 8001946:	f8cd 800c 	str.w	r8, [sp, #12]
    PrepareParam(&Command, 1u, SDW_REAL_SIZE, TYPE_Real, &FuncParam);
 800194a:	9700      	str	r7, [sp, #0]
 800194c:	2306      	movs	r3, #6
 800194e:	2204      	movs	r2, #4
 8001950:	2101      	movs	r1, #1
 8001952:	4630      	mov	r0, r6
 8001954:	f7ff f91a 	bl	8000b8c <_ZL12PrepareParamP15SDW_CommandInfohh15SDW_FuncParamIdP13SDW_FuncParam>

    /* 4. Send Configuration Request */
    HandleCmd(&Command, SerialDataSize);
 8001958:	4649      	mov	r1, r9
 800195a:	4630      	mov	r0, r6
 800195c:	f7ff fa0e 	bl	8000d7c <_ZL9HandleCmdP15SDW_CommandInfot>
}
 8001960:	4628      	mov	r0, r5
 8001962:	b005      	add	sp, #20
 8001964:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001968:	20000022 	.word	0x20000022
 800196c:	20000430 	.word	0x20000430

08001970 <_ZN5input10addToQueueEf>:
    HandleCmd(&Command, SDW_FIXED_SIZE);
}

void input::addToQueue(float InputValue)
{
    memcpy((void *)&SDW_InputsBuffer[this->idx * SDW_REAL_SIZE], (const void *)&InputValue, SDW_REAL_SIZE);
 8001970:	7a02      	ldrb	r2, [r0, #8]
 8001972:	4b03      	ldr	r3, [pc, #12]	@ (8001980 <_ZN5input10addToQueueEf+0x10>)
 8001974:	ee10 1a10 	vmov	r1, s0
 8001978:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
}
 800197c:	4770      	bx	lr
 800197e:	bf00      	nop
 8001980:	200003f0 	.word	0x200003f0

08001984 <_ZN5input12enableRemoteEv>:
{
 8001984:	b530      	push	{r4, r5, lr}
 8001986:	b083      	sub	sp, #12
 8001988:	4604      	mov	r4, r0
    this->idx = currentInputIdx++;
 800198a:	4a0d      	ldr	r2, [pc, #52]	@ (80019c0 <_ZN5input12enableRemoteEv+0x3c>)
 800198c:	7813      	ldrb	r3, [r2, #0]
 800198e:	1c59      	adds	r1, r3, #1
 8001990:	7011      	strb	r1, [r2, #0]
 8001992:	7203      	strb	r3, [r0, #8]
    this->addToQueue(this->val);
 8001994:	ed90 0a01 	vldr	s0, [r0, #4]
 8001998:	f7ff ffea 	bl	8001970 <_ZN5input10addToQueueEf>
    PrepareCmdHeader(&Command, SDW_FIXED_SIZE, SDW_ManageBlock, 0u, SDW_EnableRemoteInput, this->id);
 800199c:	4d09      	ldr	r5, [pc, #36]	@ (80019c4 <_ZN5input12enableRemoteEv+0x40>)
 800199e:	8823      	ldrh	r3, [r4, #0]
 80019a0:	9301      	str	r3, [sp, #4]
 80019a2:	f44f 63fb 	mov.w	r3, #2008	@ 0x7d8
 80019a6:	9300      	str	r3, [sp, #0]
 80019a8:	2300      	movs	r3, #0
 80019aa:	2202      	movs	r2, #2
 80019ac:	210c      	movs	r1, #12
 80019ae:	4628      	mov	r0, r5
 80019b0:	f7ff f8d4 	bl	8000b5c <_ZL16PrepareCmdHeaderP15SDW_CommandInfot10SDW_FuncIdh13SDW_SubFuncIdt>
    HandleCmd(&Command, SDW_FIXED_SIZE);
 80019b4:	210c      	movs	r1, #12
 80019b6:	4628      	mov	r0, r5
 80019b8:	f7ff f9e0 	bl	8000d7c <_ZL9HandleCmdP15SDW_CommandInfot>
}
 80019bc:	b003      	add	sp, #12
 80019be:	bd30      	pop	{r4, r5, pc}
 80019c0:	2000065b 	.word	0x2000065b
 80019c4:	20000430 	.word	0x20000430

080019c8 <_ZN5inputgtE4node>:
{
    LinkBlock2Block(this->id, 0xFF, Dst.getId(), 0xFF, SDW_EDL_LinkIn2Sys);
}

void input::operator>(node Dst)
{
 80019c8:	b530      	push	{r4, r5, lr}
 80019ca:	b085      	sub	sp, #20
 80019cc:	9103      	str	r1, [sp, #12]
    LinkBlock2Block(this->id, 0xFF, Dst.getId(), Dst.getActiveIoIdx(), SDW_EDL_LinkIn2Node);
 80019ce:	8805      	ldrh	r5, [r0, #0]
 80019d0:	a803      	add	r0, sp, #12
 80019d2:	f7ff fd71 	bl	80014b8 <_ZN4node5getIdEv>
 80019d6:	4604      	mov	r4, r0
 80019d8:	a803      	add	r0, sp, #12
 80019da:	f7ff fe1b 	bl	8001614 <_ZN4node14getActiveIoIdxEv>
 80019de:	4603      	mov	r3, r0
 80019e0:	f240 32eb 	movw	r2, #1003	@ 0x3eb
 80019e4:	9200      	str	r2, [sp, #0]
 80019e6:	4622      	mov	r2, r4
 80019e8:	21ff      	movs	r1, #255	@ 0xff
 80019ea:	4628      	mov	r0, r5
 80019ec:	f7ff fa24 	bl	8000e38 <_ZL15LinkBlock2Blockthth13SDW_SubFuncId>
}
 80019f0:	b005      	add	sp, #20
 80019f2:	bd30      	pop	{r4, r5, pc}

080019f4 <HAL_SPI_TxCpltCallback>:



 void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
{
  SDW_TX_DONE = true ;
 80019f4:	4b01      	ldr	r3, [pc, #4]	@ (80019fc <HAL_SPI_TxCpltCallback+0x8>)
 80019f6:	2201      	movs	r2, #1
 80019f8:	701a      	strb	r2, [r3, #0]
}
 80019fa:	4770      	bx	lr
 80019fc:	200003ad 	.word	0x200003ad

08001a00 <HAL_SPI_RxCpltCallback>:

 void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)
{
	 SDW_RX_DONE = true ;
 8001a00:	4b01      	ldr	r3, [pc, #4]	@ (8001a08 <HAL_SPI_RxCpltCallback+0x8>)
 8001a02:	2201      	movs	r2, #1
 8001a04:	701a      	strb	r2, [r3, #0]
}
 8001a06:	4770      	bx	lr
 8001a08:	200003ac 	.word	0x200003ac

08001a0c <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8001a0c:	4770      	bx	lr
 8001a0e:	bf00      	nop

08001a10 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8001a10:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 8001a12:	f001 fa43 	bl	8002e9c <touchgfx_components_init>
    touchgfx_init();
}
 8001a16:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 8001a1a:	f001 ba11 	b.w	8002e40 <touchgfx_init>
 8001a1e:	bf00      	nop

08001a20 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 8001a20:	f001 ba3e 	b.w	8002ea0 <touchgfx_taskEntry>

08001a24 <_ZN8touchgfx18MCUInstrumentation12setMCUActiveEb>:
    /**
     * Sets MCU activity high.
     *
     * @param  active if True, inactive otherwise.
     */
    virtual void setMCUActive(bool active)
 8001a24:	b510      	push	{r4, lr}
 8001a26:	4604      	mov	r4, r0
    {
        if (active) // Idle task sched out
 8001a28:	b141      	cbz	r1, 8001a3c <_ZN8touchgfx18MCUInstrumentation12setMCUActiveEb+0x18>
        {
            uint32_t cc_temp = getCPUCycles() - cc_in;
 8001a2a:	6803      	ldr	r3, [r0, #0]
 8001a2c:	691b      	ldr	r3, [r3, #16]
 8001a2e:	4798      	blx	r3
 8001a30:	68a3      	ldr	r3, [r4, #8]
 8001a32:	1ac0      	subs	r0, r0, r3
            cc_consumed += cc_temp;
 8001a34:	6863      	ldr	r3, [r4, #4]
 8001a36:	4403      	add	r3, r0
 8001a38:	6063      	str	r3, [r4, #4]
        }
        else // Idle task sched in
        {
            cc_in = getCPUCycles();
        }
    }
 8001a3a:	bd10      	pop	{r4, pc}
            cc_in = getCPUCycles();
 8001a3c:	6803      	ldr	r3, [r0, #0]
 8001a3e:	691b      	ldr	r3, [r3, #16]
 8001a40:	4798      	blx	r3
 8001a42:	60a0      	str	r0, [r4, #8]
    }
 8001a44:	e7f9      	b.n	8001a3a <_ZN8touchgfx18MCUInstrumentation12setMCUActiveEb+0x16>

08001a46 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 8001a46:	6840      	ldr	r0, [r0, #4]
    }
 8001a48:	4770      	bx	lr

08001a4a <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8001a4a:	6041      	str	r1, [r0, #4]
    }
 8001a4c:	4770      	bx	lr

08001a4e <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Instrumentation Trace Macrocell (ITM)
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8001a4e:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8001a52:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	@ 0xdfc
 8001a56:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8001a5a:	f8c2 3dfc 	str.w	r3, [r2, #3580]	@ 0xdfc
    *((volatile unsigned int*)0xE0001000) |= 1;
 8001a5e:	f5a2 4250 	sub.w	r2, r2, #53248	@ 0xd000
 8001a62:	6813      	ldr	r3, [r2, #0]
 8001a64:	f043 0301 	orr.w	r3, r3, #1
 8001a68:	6013      	str	r3, [r2, #0]
}
 8001a6a:	4770      	bx	lr

08001a6c <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8001a6c:	1a52      	subs	r2, r2, r1
 8001a6e:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
 8001a72:	fbb2 f0f3 	udiv	r0, r2, r3
 8001a76:	4770      	bx	lr

08001a78 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8001a78:	4b01      	ldr	r3, [pc, #4]	@ (8001a80 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8001a7a:	6858      	ldr	r0, [r3, #4]
}
 8001a7c:	4770      	bx	lr
 8001a7e:	bf00      	nop
 8001a80:	e0001000 	.word	0xe0001000

08001a84 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
 8001a84:	b510      	push	{r4, lr}
 8001a86:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8001a88:	b141      	cbz	r1, 8001a9c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8001a8a:	6803      	ldr	r3, [r0, #0]
 8001a8c:	691b      	ldr	r3, [r3, #16]
 8001a8e:	4798      	blx	r3
 8001a90:	68a3      	ldr	r3, [r4, #8]
 8001a92:	1ac0      	subs	r0, r0, r3
        cc_consumed += cc_temp;
 8001a94:	6863      	ldr	r3, [r4, #4]
 8001a96:	4403      	add	r3, r0
 8001a98:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8001a9a:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8001a9c:	6803      	ldr	r3, [r0, #0]
 8001a9e:	691b      	ldr	r3, [r3, #16]
 8001aa0:	4798      	blx	r3
 8001aa2:	60a0      	str	r0, [r4, #8]
}
 8001aa4:	e7f9      	b.n	8001a9a <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>
	...

08001aa8 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 8001aa8:	4a02      	ldr	r2, [pc, #8]	@ (8001ab4 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev+0xc>)
 8001aaa:	6002      	str	r2, [r0, #0]
    {
 8001aac:	4a02      	ldr	r2, [pc, #8]	@ (8001ab8 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev+0x10>)
 8001aae:	6002      	str	r2, [r0, #0]
 8001ab0:	4770      	bx	lr
 8001ab2:	bf00      	nop
 8001ab4:	0802f96c 	.word	0x0802f96c
 8001ab8:	0802f944 	.word	0x0802f944

08001abc <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 8001abc:	b510      	push	{r4, lr}
 8001abe:	4604      	mov	r4, r0
 8001ac0:	4b04      	ldr	r3, [pc, #16]	@ (8001ad4 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev+0x18>)
 8001ac2:	6003      	str	r3, [r0, #0]
 8001ac4:	4b04      	ldr	r3, [pc, #16]	@ (8001ad8 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev+0x1c>)
 8001ac6:	6003      	str	r3, [r0, #0]
 8001ac8:	210c      	movs	r1, #12
 8001aca:	f02b fef0 	bl	802d8ae <_ZdlPvj>
 8001ace:	4620      	mov	r0, r4
 8001ad0:	bd10      	pop	{r4, pc}
 8001ad2:	bf00      	nop
 8001ad4:	0802f96c 	.word	0x0802f96c
 8001ad8:	0802f944 	.word	0x0802f944

08001adc <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 8001adc:	4770      	bx	lr
	...

08001ae0 <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 8001ae0:	4a02      	ldr	r2, [pc, #8]	@ (8001aec <_ZN8touchgfx10KeySamplerD1Ev+0xc>)
 8001ae2:	6002      	str	r2, [r0, #0]
    {
 8001ae4:	4a02      	ldr	r2, [pc, #8]	@ (8001af0 <_ZN8touchgfx10KeySamplerD1Ev+0x10>)
 8001ae6:	6002      	str	r2, [r0, #0]
 8001ae8:	4770      	bx	lr
 8001aea:	bf00      	nop
 8001aec:	0802f9b0 	.word	0x0802f9b0
 8001af0:	0802f994 	.word	0x0802f994

08001af4 <_ZN8touchgfx10KeySampler4initEv>:
using namespace touchgfx;

void KeySampler::init()
{

}
 8001af4:	4770      	bx	lr
	...

08001af8 <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8001af8:	b510      	push	{r4, lr}
 8001afa:	460c      	mov	r4, r1
    //User key
    if (HAL_GPIO_ReadPin(USER_BUTTON_GPIO_Port, USER_BUTTON_Pin))
 8001afc:	2101      	movs	r1, #1
 8001afe:	4804      	ldr	r0, [pc, #16]	@ (8001b10 <_ZN8touchgfx10KeySampler6sampleERh+0x18>)
 8001b00:	f00b fab6 	bl	800d070 <HAL_GPIO_ReadPin>
 8001b04:	b908      	cbnz	r0, 8001b0a <_ZN8touchgfx10KeySampler6sampleERh+0x12>
    {
        key = 1;
        return true;
    }

    return false;
 8001b06:	2000      	movs	r0, #0
}
 8001b08:	bd10      	pop	{r4, pc}
        key = 1;
 8001b0a:	2001      	movs	r0, #1
 8001b0c:	7020      	strb	r0, [r4, #0]
        return true;
 8001b0e:	e7fb      	b.n	8001b08 <_ZN8touchgfx10KeySampler6sampleERh+0x10>
 8001b10:	40020000 	.word	0x40020000

08001b14 <_ZN8touchgfx10KeySamplerD0Ev>:
 8001b14:	b510      	push	{r4, lr}
 8001b16:	4604      	mov	r4, r0
 8001b18:	4b04      	ldr	r3, [pc, #16]	@ (8001b2c <_ZN8touchgfx10KeySamplerD0Ev+0x18>)
 8001b1a:	6003      	str	r3, [r0, #0]
 8001b1c:	4b04      	ldr	r3, [pc, #16]	@ (8001b30 <_ZN8touchgfx10KeySamplerD0Ev+0x1c>)
 8001b1e:	6003      	str	r3, [r0, #0]
 8001b20:	2104      	movs	r1, #4
 8001b22:	f02b fec4 	bl	802d8ae <_ZdlPvj>
 8001b26:	4620      	mov	r0, r4
 8001b28:	bd10      	pop	{r4, pc}
 8001b2a:	bf00      	nop
 8001b2c:	0802f9b0 	.word	0x0802f9b0
 8001b30:	0802f994 	.word	0x0802f994

08001b34 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8001b34:	4a02      	ldr	r2, [pc, #8]	@ (8001b40 <_ZN20STM32TouchControllerD1Ev+0xc>)
 8001b36:	6002      	str	r2, [r0, #0]
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
    {
 8001b38:	4a02      	ldr	r2, [pc, #8]	@ (8001b44 <_ZN20STM32TouchControllerD1Ev+0x10>)
 8001b3a:	6002      	str	r2, [r0, #0]
 8001b3c:	4770      	bx	lr
 8001b3e:	bf00      	nop
 8001b40:	0802f9e4 	.word	0x0802f9e4
 8001b44:	0802f9cc 	.word	0x0802f9cc

08001b48 <_ZN20STM32TouchController4initEv>:
        }
    }
}

void STM32TouchController::init()
{
 8001b48:	b500      	push	{lr}
 8001b4a:	b087      	sub	sp, #28
    // Determine which touch controller is used (differs based on board revision)
    uint8_t tsID = 0;
 8001b4c:	2300      	movs	r3, #0
 8001b4e:	f88d 3017 	strb.w	r3, [sp, #23]
    HAL_I2C_Mem_Read(&hi2c1, TS_I2C_ADDRESS_FT6206, TS_ID_REG, 1, &tsID, 1, HAL_MAX_DELAY);
 8001b52:	f04f 33ff 	mov.w	r3, #4294967295
 8001b56:	9302      	str	r3, [sp, #8]
 8001b58:	2301      	movs	r3, #1
 8001b5a:	9301      	str	r3, [sp, #4]
 8001b5c:	f10d 0217 	add.w	r2, sp, #23
 8001b60:	9200      	str	r2, [sp, #0]
 8001b62:	22a8      	movs	r2, #168	@ 0xa8
 8001b64:	2154      	movs	r1, #84	@ 0x54
 8001b66:	4808      	ldr	r0, [pc, #32]	@ (8001b88 <_ZN20STM32TouchController4initEv+0x40>)
 8001b68:	f00b fe6e 	bl	800d848 <HAL_I2C_Mem_Read>
    if (tsID == FT6206_ID_VALUE)
 8001b6c:	f89d 3017 	ldrb.w	r3, [sp, #23]
 8001b70:	2b11      	cmp	r3, #17
 8001b72:	d005      	beq.n	8001b80 <_ZN20STM32TouchController4initEv+0x38>
    {
        TS_I2C_ADDRESS = TS_I2C_ADDRESS_FT6206;
    }
    else
    {
        TS_I2C_ADDRESS = TS_I2C_ADDRESS_FT6336G;
 8001b74:	4b05      	ldr	r3, [pc, #20]	@ (8001b8c <_ZN20STM32TouchController4initEv+0x44>)
 8001b76:	2270      	movs	r2, #112	@ 0x70
 8001b78:	801a      	strh	r2, [r3, #0]
    }
}
 8001b7a:	b007      	add	sp, #28
 8001b7c:	f85d fb04 	ldr.w	pc, [sp], #4
        TS_I2C_ADDRESS = TS_I2C_ADDRESS_FT6206;
 8001b80:	4b02      	ldr	r3, [pc, #8]	@ (8001b8c <_ZN20STM32TouchController4initEv+0x44>)
 8001b82:	2254      	movs	r2, #84	@ 0x54
 8001b84:	801a      	strh	r2, [r3, #0]
 8001b86:	e7f8      	b.n	8001b7a <_ZN20STM32TouchController4initEv+0x32>
 8001b88:	200052e0 	.word	0x200052e0
 8001b8c:	20000660 	.word	0x20000660

08001b90 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8001b90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001b94:	b089      	sub	sp, #36	@ 0x24
    volatile uint8_t touches = 0;
 8001b96:	2300      	movs	r3, #0
 8001b98:	f88d 301f 	strb.w	r3, [sp, #31]
    uint8_t buf[6] = {0};
 8001b9c:	9306      	str	r3, [sp, #24]
 8001b9e:	f8ad 301c 	strh.w	r3, [sp, #28]
    uint8_t ZERO = 0;
 8001ba2:	f88d 3017 	strb.w	r3, [sp, #23]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001ba6:	4b33      	ldr	r3, [pc, #204]	@ (8001c74 <_ZN20STM32TouchController11sampleTouchERlS0_+0xe4>)
 8001ba8:	f44f 0000 	mov.w	r0, #8388608	@ 0x800000
 8001bac:	f8c3 0080 	str.w	r0, [r3, #128]	@ 0x80
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001bb0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001bb4:	f3bf 8f6f 	isb	sy

    NVIC_DisableIRQ(EXTI9_5_IRQn);
    if (doSampleTouch)
 8001bb8:	4b2f      	ldr	r3, [pc, #188]	@ (8001c78 <_ZN20STM32TouchController11sampleTouchERlS0_+0xe8>)
 8001bba:	781b      	ldrb	r3, [r3, #0]
 8001bbc:	b95b      	cbnz	r3, 8001bd6 <_ZN20STM32TouchController11sampleTouchERlS0_+0x46>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001bbe:	4b2d      	ldr	r3, [pc, #180]	@ (8001c74 <_ZN20STM32TouchController11sampleTouchERlS0_+0xe4>)
 8001bc0:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8001bc4:	601a      	str	r2, [r3, #0]
            y = ((TS_MSB_MASK & buf[2]) << 8) + buf[3];
        }
    }
    NVIC_EnableIRQ(EXTI9_5_IRQn);

    return (touches > 0);
 8001bc6:	f89d 001f 	ldrb.w	r0, [sp, #31]
}
 8001bca:	3800      	subs	r0, #0
 8001bcc:	bf18      	it	ne
 8001bce:	2001      	movne	r0, #1
 8001bd0:	b009      	add	sp, #36	@ 0x24
 8001bd2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001bd6:	460d      	mov	r5, r1
 8001bd8:	4614      	mov	r4, r2
        HAL_I2C_Mem_Read(&hi2c1, TS_I2C_ADDRESS, TS_STATE_REG, 1, buf, 1, HAL_MAX_DELAY);
 8001bda:	f8df 80a4 	ldr.w	r8, [pc, #164]	@ 8001c80 <_ZN20STM32TouchController11sampleTouchERlS0_+0xf0>
 8001bde:	4f27      	ldr	r7, [pc, #156]	@ (8001c7c <_ZN20STM32TouchController11sampleTouchERlS0_+0xec>)
 8001be0:	f04f 39ff 	mov.w	r9, #4294967295
 8001be4:	f8cd 9008 	str.w	r9, [sp, #8]
 8001be8:	2601      	movs	r6, #1
 8001bea:	9601      	str	r6, [sp, #4]
 8001bec:	ab06      	add	r3, sp, #24
 8001bee:	9300      	str	r3, [sp, #0]
 8001bf0:	4633      	mov	r3, r6
 8001bf2:	2202      	movs	r2, #2
 8001bf4:	f8b8 1000 	ldrh.w	r1, [r8]
 8001bf8:	4638      	mov	r0, r7
 8001bfa:	f00b fe25 	bl	800d848 <HAL_I2C_Mem_Read>
        touches = (TS_STATE_MASK & buf[0]);
 8001bfe:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8001c02:	f003 030f 	and.w	r3, r3, #15
 8001c06:	f88d 301f 	strb.w	r3, [sp, #31]
        HAL_I2C_Mem_Write(&hi2c1, TS_I2C_ADDRESS, TS_STATE_REG, 1, &ZERO, 1, HAL_MAX_DELAY);
 8001c0a:	f8cd 9008 	str.w	r9, [sp, #8]
 8001c0e:	9601      	str	r6, [sp, #4]
 8001c10:	f10d 0317 	add.w	r3, sp, #23
 8001c14:	9300      	str	r3, [sp, #0]
 8001c16:	4633      	mov	r3, r6
 8001c18:	2202      	movs	r2, #2
 8001c1a:	f8b8 1000 	ldrh.w	r1, [r8]
 8001c1e:	4638      	mov	r0, r7
 8001c20:	f00b fd20 	bl	800d664 <HAL_I2C_Mem_Write>
        doSampleTouch = false;
 8001c24:	4b14      	ldr	r3, [pc, #80]	@ (8001c78 <_ZN20STM32TouchController11sampleTouchERlS0_+0xe8>)
 8001c26:	2200      	movs	r2, #0
 8001c28:	701a      	strb	r2, [r3, #0]
        if (touches > 0)
 8001c2a:	f89d 301f 	ldrb.w	r3, [sp, #31]
 8001c2e:	2b00      	cmp	r3, #0
 8001c30:	d0c5      	beq.n	8001bbe <_ZN20STM32TouchController11sampleTouchERlS0_+0x2e>
            HAL_I2C_Mem_Read(&hi2c1, TS_I2C_ADDRESS, TS_P1_X_REG, 1, buf, 4, HAL_MAX_DELAY);
 8001c32:	f8cd 9008 	str.w	r9, [sp, #8]
 8001c36:	2304      	movs	r3, #4
 8001c38:	9301      	str	r3, [sp, #4]
 8001c3a:	ab06      	add	r3, sp, #24
 8001c3c:	9300      	str	r3, [sp, #0]
 8001c3e:	4633      	mov	r3, r6
 8001c40:	2203      	movs	r2, #3
 8001c42:	f8b8 1000 	ldrh.w	r1, [r8]
 8001c46:	4638      	mov	r0, r7
 8001c48:	f00b fdfe 	bl	800d848 <HAL_I2C_Mem_Read>
            x = ((TS_MSB_MASK & buf[0]) << 8) + buf[1];
 8001c4c:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8001c50:	021b      	lsls	r3, r3, #8
 8001c52:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 8001c56:	f89d 2019 	ldrb.w	r2, [sp, #25]
 8001c5a:	4413      	add	r3, r2
 8001c5c:	602b      	str	r3, [r5, #0]
            y = ((TS_MSB_MASK & buf[2]) << 8) + buf[3];
 8001c5e:	f89d 301a 	ldrb.w	r3, [sp, #26]
 8001c62:	021b      	lsls	r3, r3, #8
 8001c64:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 8001c68:	f89d 201b 	ldrb.w	r2, [sp, #27]
 8001c6c:	4413      	add	r3, r2
 8001c6e:	6023      	str	r3, [r4, #0]
 8001c70:	e7a5      	b.n	8001bbe <_ZN20STM32TouchController11sampleTouchERlS0_+0x2e>
 8001c72:	bf00      	nop
 8001c74:	e000e100 	.word	0xe000e100
 8001c78:	20000662 	.word	0x20000662
 8001c7c:	200052e0 	.word	0x200052e0
 8001c80:	20000660 	.word	0x20000660

08001c84 <_ZN20STM32TouchControllerD0Ev>:
 8001c84:	b510      	push	{r4, lr}
 8001c86:	4604      	mov	r4, r0
 8001c88:	4b04      	ldr	r3, [pc, #16]	@ (8001c9c <_ZN20STM32TouchControllerD0Ev+0x18>)
 8001c8a:	6003      	str	r3, [r0, #0]
 8001c8c:	4b04      	ldr	r3, [pc, #16]	@ (8001ca0 <_ZN20STM32TouchControllerD0Ev+0x1c>)
 8001c8e:	6003      	str	r3, [r0, #0]
 8001c90:	2104      	movs	r1, #4
 8001c92:	f02b fe0c 	bl	802d8ae <_ZdlPvj>
 8001c96:	4620      	mov	r0, r4
 8001c98:	bd10      	pop	{r4, pc}
 8001c9a:	bf00      	nop
 8001c9c:	0802f9e4 	.word	0x0802f9e4
 8001ca0:	0802f9cc 	.word	0x0802f9cc

08001ca4 <HAL_GPIO_EXTI_Callback>:
        if (GPIO_Pin == TP_IRQ_Pin)
 8001ca4:	2820      	cmp	r0, #32
 8001ca6:	d000      	beq.n	8001caa <HAL_GPIO_EXTI_Callback+0x6>
    }
 8001ca8:	4770      	bx	lr
            doSampleTouch = true;
 8001caa:	4b02      	ldr	r3, [pc, #8]	@ (8001cb4 <HAL_GPIO_EXTI_Callback+0x10>)
 8001cac:	2201      	movs	r2, #1
 8001cae:	701a      	strb	r2, [r3, #0]
            return;
 8001cb0:	e7fa      	b.n	8001ca8 <HAL_GPIO_EXTI_Callback+0x4>
 8001cb2:	bf00      	nop
 8001cb4:	20000662 	.word	0x20000662

08001cb8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 8001cb8:	b508      	push	{r3, lr}
    switch (id)
 8001cba:	2803      	cmp	r0, #3
 8001cbc:	d80d      	bhi.n	8001cda <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x22>
 8001cbe:	e8df f000 	tbb	[pc, r0]
 8001cc2:	0d02      	.short	0x0d02
 8001cc4:	2318      	.short	0x2318
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8001cc6:	4b16      	ldr	r3, [pc, #88]	@ (8001d20 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x68>)
 8001cc8:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
 8001ccc:	fab2 f282 	clz	r2, r2
 8001cd0:	0952      	lsrs	r2, r2, #5
 8001cd2:	2104      	movs	r1, #4
 8001cd4:	4813      	ldr	r0, [pc, #76]	@ (8001d24 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x6c>)
 8001cd6:	f00b f9d1 	bl	800d07c <HAL_GPIO_WritePin>
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    }
}
 8001cda:	bd08      	pop	{r3, pc}
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8001cdc:	4b10      	ldr	r3, [pc, #64]	@ (8001d20 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x68>)
 8001cde:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
 8001ce2:	fab2 f282 	clz	r2, r2
 8001ce6:	0952      	lsrs	r2, r2, #5
 8001ce8:	2140      	movs	r1, #64	@ 0x40
 8001cea:	480e      	ldr	r0, [pc, #56]	@ (8001d24 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x6c>)
 8001cec:	f00b f9c6 	bl	800d07c <HAL_GPIO_WritePin>
        break;
 8001cf0:	e7f3      	b.n	8001cda <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x22>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8001cf2:	4b0b      	ldr	r3, [pc, #44]	@ (8001d20 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x68>)
 8001cf4:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
 8001cf8:	fab2 f282 	clz	r2, r2
 8001cfc:	0952      	lsrs	r2, r2, #5
 8001cfe:	2102      	movs	r1, #2
 8001d00:	4808      	ldr	r0, [pc, #32]	@ (8001d24 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x6c>)
 8001d02:	f00b f9bb 	bl	800d07c <HAL_GPIO_WritePin>
        break;
 8001d06:	e7e8      	b.n	8001cda <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x22>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8001d08:	4b05      	ldr	r3, [pc, #20]	@ (8001d20 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x68>)
 8001d0a:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
 8001d0e:	fab2 f282 	clz	r2, r2
 8001d12:	0952      	lsrs	r2, r2, #5
 8001d14:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8001d18:	4803      	ldr	r0, [pc, #12]	@ (8001d28 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x70>)
 8001d1a:	f00b f9af 	bl	800d07c <HAL_GPIO_WritePin>
}
 8001d1e:	e7dc      	b.n	8001cda <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x22>
 8001d20:	20000664 	.word	0x20000664
 8001d24:	40020000 	.word	0x40020000
 8001d28:	40021800 	.word	0x40021800

08001d2c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 8001d2c:	b508      	push	{r3, lr}
    switch (id)
 8001d2e:	2803      	cmp	r0, #3
 8001d30:	d80d      	bhi.n	8001d4e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x22>
 8001d32:	e8df f000 	tbb	[pc, r0]
 8001d36:	0d02      	.short	0x0d02
 8001d38:	2418      	.short	0x2418
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8001d3a:	4b17      	ldr	r3, [pc, #92]	@ (8001d98 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x6c>)
 8001d3c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8001d40:	b103      	cbz	r3, 8001d44 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
 8001d42:	2001      	movs	r0, #1
 8001d44:	4602      	mov	r2, r0
 8001d46:	2104      	movs	r1, #4
 8001d48:	4814      	ldr	r0, [pc, #80]	@ (8001d9c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x70>)
 8001d4a:	f00b f997 	bl	800d07c <HAL_GPIO_WritePin>
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    }
}
 8001d4e:	bd08      	pop	{r3, pc}
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 8001d50:	4b11      	ldr	r3, [pc, #68]	@ (8001d98 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x6c>)
 8001d52:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8001d56:	b903      	cbnz	r3, 8001d5a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2e>
 8001d58:	2000      	movs	r0, #0
 8001d5a:	4602      	mov	r2, r0
 8001d5c:	2140      	movs	r1, #64	@ 0x40
 8001d5e:	480f      	ldr	r0, [pc, #60]	@ (8001d9c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x70>)
 8001d60:	f00b f98c 	bl	800d07c <HAL_GPIO_WritePin>
        break;
 8001d64:	e7f3      	b.n	8001d4e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x22>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8001d66:	4b0c      	ldr	r3, [pc, #48]	@ (8001d98 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x6c>)
 8001d68:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8001d6c:	b12b      	cbz	r3, 8001d7a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4e>
 8001d6e:	2201      	movs	r2, #1
 8001d70:	2102      	movs	r1, #2
 8001d72:	480a      	ldr	r0, [pc, #40]	@ (8001d9c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x70>)
 8001d74:	f00b f982 	bl	800d07c <HAL_GPIO_WritePin>
        break;
 8001d78:	e7e9      	b.n	8001d4e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x22>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8001d7a:	2200      	movs	r2, #0
 8001d7c:	e7f8      	b.n	8001d70 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x44>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8001d7e:	4b06      	ldr	r3, [pc, #24]	@ (8001d98 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x6c>)
 8001d80:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8001d84:	b133      	cbz	r3, 8001d94 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x68>
 8001d86:	2201      	movs	r2, #1
 8001d88:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8001d8c:	4804      	ldr	r0, [pc, #16]	@ (8001da0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x74>)
 8001d8e:	f00b f975 	bl	800d07c <HAL_GPIO_WritePin>
}
 8001d92:	e7dc      	b.n	8001d4e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x22>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8001d94:	2200      	movs	r2, #0
 8001d96:	e7f7      	b.n	8001d88 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>
 8001d98:	20000664 	.word	0x20000664
 8001d9c:	40020000 	.word	0x40020000
 8001da0:	40021800 	.word	0x40021800

08001da4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 8001da4:	b508      	push	{r3, lr}
    switch (id)
 8001da6:	2803      	cmp	r0, #3
 8001da8:	d807      	bhi.n	8001dba <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x16>
 8001daa:	e8df f000 	tbb	[pc, r0]
 8001dae:	0702      	.short	0x0702
 8001db0:	110c      	.short	0x110c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001db2:	2104      	movs	r1, #4
 8001db4:	4809      	ldr	r0, [pc, #36]	@ (8001ddc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x38>)
 8001db6:	f00b f965 	bl	800d084 <HAL_GPIO_TogglePin>
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
 8001dba:	bd08      	pop	{r3, pc}
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8001dbc:	2140      	movs	r1, #64	@ 0x40
 8001dbe:	4807      	ldr	r0, [pc, #28]	@ (8001ddc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x38>)
 8001dc0:	f00b f960 	bl	800d084 <HAL_GPIO_TogglePin>
        break;
 8001dc4:	e7f9      	b.n	8001dba <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x16>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001dc6:	2102      	movs	r1, #2
 8001dc8:	4804      	ldr	r0, [pc, #16]	@ (8001ddc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x38>)
 8001dca:	f00b f95b 	bl	800d084 <HAL_GPIO_TogglePin>
        break;
 8001dce:	e7f4      	b.n	8001dba <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x16>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001dd0:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8001dd4:	4802      	ldr	r0, [pc, #8]	@ (8001de0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x3c>)
 8001dd6:	f00b f955 	bl	800d084 <HAL_GPIO_TogglePin>
}
 8001dda:	e7ee      	b.n	8001dba <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x16>
 8001ddc:	40020000 	.word	0x40020000
 8001de0:	40021800 	.word	0x40021800

08001de4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8001de4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8001de6:	2803      	cmp	r0, #3
 8001de8:	d81c      	bhi.n	8001e24 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x40>
 8001dea:	e8df f000 	tbb	[pc, r0]
 8001dee:	0b02      	.short	0x0b02
 8001df0:	1510      	.short	0x1510
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001df2:	2104      	movs	r1, #4
 8001df4:	480c      	ldr	r0, [pc, #48]	@ (8001e28 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x44>)
 8001df6:	f00b f93b 	bl	800d070 <HAL_GPIO_ReadPin>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8001dfa:	2801      	cmp	r0, #1
 8001dfc:	bf14      	ite	ne
 8001dfe:	2000      	movne	r0, #0
 8001e00:	2001      	moveq	r0, #1
 8001e02:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8001e04:	2140      	movs	r1, #64	@ 0x40
 8001e06:	4808      	ldr	r0, [pc, #32]	@ (8001e28 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x44>)
 8001e08:	f00b f932 	bl	800d070 <HAL_GPIO_ReadPin>
        break;
 8001e0c:	e7f5      	b.n	8001dfa <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001e0e:	2102      	movs	r1, #2
 8001e10:	4805      	ldr	r0, [pc, #20]	@ (8001e28 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x44>)
 8001e12:	f00b f92d 	bl	800d070 <HAL_GPIO_ReadPin>
        break;
 8001e16:	e7f0      	b.n	8001dfa <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001e18:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8001e1c:	4803      	ldr	r0, [pc, #12]	@ (8001e2c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x48>)
 8001e1e:	f00b f927 	bl	800d070 <HAL_GPIO_ReadPin>
        break;
 8001e22:	e7ea      	b.n	8001dfa <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
    switch (id)
 8001e24:	2000      	movs	r0, #0
 8001e26:	e7e8      	b.n	8001dfa <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8001e28:	40020000 	.word	0x40020000
 8001e2c:	40021800 	.word	0x40021800

08001e30 <_ZN8touchgfx4GPIO4initEv>:
{
 8001e30:	b510      	push	{r4, lr}
    for (int id = 0; id <= 4; id++)
 8001e32:	2400      	movs	r4, #0
 8001e34:	e000      	b.n	8001e38 <_ZN8touchgfx4GPIO4initEv+0x8>
 8001e36:	3401      	adds	r4, #1
 8001e38:	2c04      	cmp	r4, #4
 8001e3a:	dc0e      	bgt.n	8001e5a <_ZN8touchgfx4GPIO4initEv+0x2a>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8001e3c:	b2e0      	uxtb	r0, r4
 8001e3e:	f7ff ffd1 	bl	8001de4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8001e42:	2800      	cmp	r0, #0
 8001e44:	d0f7      	beq.n	8001e36 <_ZN8touchgfx4GPIO4initEv+0x6>
            if (GPIO_InvertedLevels[id] != 1)
 8001e46:	4b05      	ldr	r3, [pc, #20]	@ (8001e5c <_ZN8touchgfx4GPIO4initEv+0x2c>)
 8001e48:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8001e4c:	2b01      	cmp	r3, #1
 8001e4e:	d0f2      	beq.n	8001e36 <_ZN8touchgfx4GPIO4initEv+0x6>
                GPIO_InvertedLevels[id] = 1;
 8001e50:	4b02      	ldr	r3, [pc, #8]	@ (8001e5c <_ZN8touchgfx4GPIO4initEv+0x2c>)
 8001e52:	2201      	movs	r2, #1
 8001e54:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 8001e58:	e7ed      	b.n	8001e36 <_ZN8touchgfx4GPIO4initEv+0x6>
}
 8001e5a:	bd10      	pop	{r4, pc}
 8001e5c:	20000664 	.word	0x20000664

08001e60 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     *
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
 8001e60:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 8001e64:	2301      	movs	r3, #1
 8001e66:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 8001e6a:	4770      	bx	lr

08001e6c <_ZN8touchgfx3HAL11submitGPU2DEv>:
     *
     * Only implemented on systems with the GPU2D IP.
     */
    virtual void submitGPU2D()
    {
    }
 8001e6c:	4770      	bx	lr

08001e6e <_ZN8touchgfx3HAL11getBlitCapsEv>:
     *
     * @return a bitmask of the supported blitcaps.
     *
     * @see enableDMAAcceleration
     */
    virtual BlitOperations getBlitCaps()
 8001e6e:	b508      	push	{r3, lr}
    {
        if (useDMAAcceleration)
 8001e70:	f890 307a 	ldrb.w	r3, [r0, #122]	@ 0x7a
 8001e74:	b123      	cbz	r3, 8001e80 <_ZN8touchgfx3HAL11getBlitCapsEv+0x12>
        {
            return dma.getBlitCaps();
 8001e76:	6840      	ldr	r0, [r0, #4]
 8001e78:	6803      	ldr	r3, [r0, #0]
 8001e7a:	681b      	ldr	r3, [r3, #0]
 8001e7c:	4798      	blx	r3
        }
        return static_cast<BlitOperations>(0);
    }
 8001e7e:	bd08      	pop	{r3, pc}
        return static_cast<BlitOperations>(0);
 8001e80:	2000      	movs	r0, #0
 8001e82:	e7fc      	b.n	8001e7e <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>

08001e84 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8001e84:	2000      	movs	r0, #0
 8001e86:	4770      	bx	lr

08001e88 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8001e88:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001e8a:	3900      	subs	r1, #0
 8001e8c:	bf18      	it	ne
 8001e8e:	2101      	movne	r1, #1
 8001e90:	4b01      	ldr	r3, [pc, #4]	@ (8001e98 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
 8001e92:	7019      	strb	r1, [r3, #0]
    }
 8001e94:	4770      	bx	lr
 8001e96:	bf00      	nop
 8001e98:	2000e40b 	.word	0x2000e40b

08001e9c <_ZN8touchgfx3HAL16waitForLTDCLinesEt>:
     *
     * @param numberOfLines Number of lines to wait.
     */
    virtual void waitForLTDCLines(uint16_t numberOfLines)
    {
    }
 8001e9c:	4770      	bx	lr

08001e9e <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001e9e:	2000      	movs	r0, #0
 8001ea0:	4770      	bx	lr

08001ea2 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @param  ms Number of milliseconds to wait.
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
 8001ea2:	b508      	push	{r3, lr}
    {
        if (taskDelayFunc)
 8001ea4:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8001ea6:	b10b      	cbz	r3, 8001eac <_ZN8touchgfx3HAL9taskDelayEt+0xa>
        {
            taskDelayFunc(ms);
 8001ea8:	4608      	mov	r0, r1
 8001eaa:	4798      	blx	r3
        }
    }
 8001eac:	bd08      	pop	{r3, pc}

08001eae <_ZN8touchgfx3HAL10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA implementation. As default,
     * will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
 8001eae:	b508      	push	{r3, lr}
    {
        return dma.getDMAType();
 8001eb0:	6840      	ldr	r0, [r0, #4]
 8001eb2:	6803      	ldr	r3, [r0, #0]
 8001eb4:	699b      	ldr	r3, [r3, #24]
 8001eb6:	4798      	blx	r3
    }
 8001eb8:	bd08      	pop	{r3, pc}

08001eba <_ZN8touchgfx3HAL25partialLTDCDeadlineMissedEv>:
     * This empty function can be overridden to e.g. output this error condition
     * on a pin.
     */
    virtual void partialLTDCDeadlineMissed()
    {
    }
 8001eba:	4770      	bx	lr

08001ebc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
 8001ebc:	f890 2078 	ldrb.w	r2, [r0, #120]	@ 0x78
 8001ec0:	f890 3034 	ldrb.w	r3, [r0, #52]	@ 0x34
 8001ec4:	429a      	cmp	r2, r3
 8001ec6:	d00c      	beq.n	8001ee2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
        {
            if (DISPLAY_ROTATION == rotate0)
 8001ec8:	4b0c      	ldr	r3, [pc, #48]	@ (8001efc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
 8001eca:	781b      	ldrb	r3, [r3, #0]
 8001ecc:	b9ab      	cbnz	r3, 8001efa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3e>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001ece:	4a0c      	ldr	r2, [pc, #48]	@ (8001f00 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
 8001ed0:	8811      	ldrh	r1, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001ed2:	4b0c      	ldr	r3, [pc, #48]	@ (8001f04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x48>)
 8001ed4:	8818      	ldrh	r0, [r3, #0]
 8001ed6:	8010      	strh	r0, [r2, #0]
                DISPLAY_WIDTH = tmp;
 8001ed8:	8019      	strh	r1, [r3, #0]
                DISPLAY_ROTATION = rotate90;
 8001eda:	4b08      	ldr	r3, [pc, #32]	@ (8001efc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
 8001edc:	2201      	movs	r2, #1
 8001ede:	701a      	strb	r2, [r3, #0]
 8001ee0:	4770      	bx	lr
            }
        }
        else if (DISPLAY_ROTATION != rotate0)
 8001ee2:	4b06      	ldr	r3, [pc, #24]	@ (8001efc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
 8001ee4:	781b      	ldrb	r3, [r3, #0]
 8001ee6:	b143      	cbz	r3, 8001efa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3e>
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001ee8:	4a05      	ldr	r2, [pc, #20]	@ (8001f00 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
 8001eea:	8811      	ldrh	r1, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001eec:	4b05      	ldr	r3, [pc, #20]	@ (8001f04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x48>)
 8001eee:	8818      	ldrh	r0, [r3, #0]
 8001ef0:	8010      	strh	r0, [r2, #0]
            DISPLAY_WIDTH = tmp;
 8001ef2:	8019      	strh	r1, [r3, #0]
            DISPLAY_ROTATION = rotate0;
 8001ef4:	4b01      	ldr	r3, [pc, #4]	@ (8001efc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
 8001ef6:	2200      	movs	r2, #0
 8001ef8:	701a      	strb	r2, [r3, #0]
        }
    }
 8001efa:	4770      	bx	lr
 8001efc:	2000e404 	.word	0x2000e404
 8001f00:	2000e402 	.word	0x2000e402
 8001f04:	2000e400 	.word	0x2000e400

08001f08 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8001f08:	4770      	bx	lr

08001f0a <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8001f0a:	4770      	bx	lr

08001f0c <_ZN8touchgfx3HAL22InvalidateTextureCacheEv>:
     * Called on every tick before drawing into the framebuffer to enable
     * invalidation of any caches that may be incoherent with main memory.
     */
    virtual void InvalidateTextureCache()
    {
    }
 8001f0c:	4770      	bx	lr
	...

08001f10 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    return currFbBase;
}
 8001f10:	4b01      	ldr	r3, [pc, #4]	@ (8001f18 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 8001f12:	6818      	ldr	r0, [r3, #0]
 8001f14:	4770      	bx	lr
 8001f16:	bf00      	nop
 8001f18:	20000684 	.word	0x20000684

08001f1c <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001f1c:	4a03      	ldr	r2, [pc, #12]	@ (8001f2c <_ZN11TouchGFXHALD1Ev+0x10>)
 8001f1e:	6002      	str	r2, [r0, #0]
 *
 * @brief HAL implementation for TouchGFXGenerated.
 *
 * @sa HAL
 */
class TouchGFXGeneratedHAL : public touchgfx::HAL
 8001f20:	4a03      	ldr	r2, [pc, #12]	@ (8001f30 <_ZN11TouchGFXHALD1Ev+0x14>)
 8001f22:	6002      	str	r2, [r0, #0]
    {
 8001f24:	4a03      	ldr	r2, [pc, #12]	@ (8001f34 <_ZN11TouchGFXHALD1Ev+0x18>)
 8001f26:	6002      	str	r2, [r0, #0]
 8001f28:	4770      	bx	lr
 8001f2a:	bf00      	nop
 8001f2c:	0802fb74 	.word	0x0802fb74
 8001f30:	08030370 	.word	0x08030370
 8001f34:	08032288 	.word	0x08032288

08001f38 <_ZN11TouchGFXHAL10initializeEv>:
{
 8001f38:	b538      	push	{r3, r4, r5, lr}
 8001f3a:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
 8001f3c:	f001 fa76 	bl	800342c <_ZN20TouchGFXGeneratedHAL10initializeEv>
    instrumentation.init();
 8001f40:	4d05      	ldr	r5, [pc, #20]	@ (8001f58 <_ZN11TouchGFXHAL10initializeEv+0x20>)
 8001f42:	4628      	mov	r0, r5
 8001f44:	f7ff fd83 	bl	8001a4e <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        mcuInstrumentation = mcuInstr;
 8001f48:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
 8001f4a:	2301      	movs	r3, #1
 8001f4c:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
        buttonController = btnCtrl;
 8001f50:	4b02      	ldr	r3, [pc, #8]	@ (8001f5c <_ZN11TouchGFXHAL10initializeEv+0x24>)
 8001f52:	6163      	str	r3, [r4, #20]
}
 8001f54:	bd38      	pop	{r3, r4, r5, pc}
 8001f56:	bf00      	nop
 8001f58:	20000678 	.word	0x20000678
 8001f5c:	20000674 	.word	0x20000674

08001f60 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 8001f60:	b508      	push	{r3, lr}
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    currFbBase = address;
 8001f62:	4b02      	ldr	r3, [pc, #8]	@ (8001f6c <_ZN11TouchGFXHAL17setTFTFrameBufferEPt+0xc>)
 8001f64:	6019      	str	r1, [r3, #0]

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8001f66:	f001 f927 	bl	80031b8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 8001f6a:	bd08      	pop	{r3, pc}
 8001f6c:	20000684 	.word	0x20000684

08001f70 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 8001f70:	b508      	push	{r3, lr}
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate the start address of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8001f72:	f001 fa17 	bl	80033a4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 8001f76:	bd08      	pop	{r3, pc}

08001f78 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 8001f78:	b508      	push	{r3, lr}
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 8001f7a:	f001 fa17 	bl	80033ac <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
}
 8001f7e:	bd08      	pop	{r3, pc}

08001f80 <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 8001f80:	b508      	push	{r3, lr}
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8001f82:	f001 f8d1 	bl	8003128 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 8001f86:	bd08      	pop	{r3, pc}

08001f88 <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 8001f88:	b508      	push	{r3, lr}
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8001f8a:	f001 f8d7 	bl	800313c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 8001f8e:	bd08      	pop	{r3, pc}

08001f90 <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 8001f90:	b508      	push	{r3, lr}
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8001f92:	f001 f8dd 	bl	8003150 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 8001f96:	bd08      	pop	{r3, pc}

08001f98 <_ZN11TouchGFXHAL10beginFrameEv>:

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
}

bool TouchGFXHAL::beginFrame()
{
 8001f98:	b508      	push	{r3, lr}
    return TouchGFXGeneratedHAL::beginFrame();
 8001f9a:	f001 f9fb 	bl	8003394 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
}
 8001f9e:	bd08      	pop	{r3, pc}

08001fa0 <_ZN11TouchGFXHAL8endFrameEv>:

void TouchGFXHAL::endFrame()
{
 8001fa0:	b510      	push	{r4, lr}
 8001fa2:	b082      	sub	sp, #8
 8001fa4:	4604      	mov	r4, r0
    static bool firstFrame = true;
    if (firstFrame)
 8001fa6:	4b11      	ldr	r3, [pc, #68]	@ (8001fec <_ZN11TouchGFXHAL8endFrameEv+0x4c>)
 8001fa8:	781b      	ldrb	r3, [r3, #0]
 8001faa:	b163      	cbz	r3, 8001fc6 <_ZN11TouchGFXHAL8endFrameEv+0x26>
    {
        if (lcd_is_OTM8009A)
 8001fac:	4b10      	ldr	r3, [pc, #64]	@ (8001ff0 <_ZN11TouchGFXHAL8endFrameEv+0x50>)
 8001fae:	781b      	ldrb	r3, [r3, #0]
 8001fb0:	b1a3      	cbz	r3, 8001fdc <_ZN11TouchGFXHAL8endFrameEv+0x3c>
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_ID, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPON, 0x00);
 8001fb2:	2100      	movs	r1, #0
 8001fb4:	9100      	str	r1, [sp, #0]
 8001fb6:	2329      	movs	r3, #41	@ 0x29
 8001fb8:	2215      	movs	r2, #21
 8001fba:	480e      	ldr	r0, [pc, #56]	@ (8001ff4 <_ZN11TouchGFXHAL8endFrameEv+0x54>)
 8001fbc:	f00a fcf6 	bl	800c9ac <HAL_DSI_ShortWrite>
        }
        else
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_ID, DSI_DCS_SHORT_PKT_WRITE_P1, NT35510_CMD_DISPON, 0x00);
        }
        firstFrame = false;
 8001fc0:	4b0a      	ldr	r3, [pc, #40]	@ (8001fec <_ZN11TouchGFXHAL8endFrameEv+0x4c>)
 8001fc2:	2200      	movs	r2, #0
 8001fc4:	701a      	strb	r2, [r3, #0]
    }

    TouchGFXGeneratedHAL::endFrame();
 8001fc6:	4620      	mov	r0, r4
 8001fc8:	f001 f9e8 	bl	800339c <_ZN20TouchGFXGeneratedHAL8endFrameEv>

    if (frameBufferUpdatedThisFrame)
 8001fcc:	f894 304b 	ldrb.w	r3, [r4, #75]	@ 0x4b
 8001fd0:	b113      	cbz	r3, 8001fd8 <_ZN11TouchGFXHAL8endFrameEv+0x38>
    {
        refreshRequested = true;
 8001fd2:	4b09      	ldr	r3, [pc, #36]	@ (8001ff8 <_ZN11TouchGFXHAL8endFrameEv+0x58>)
 8001fd4:	2201      	movs	r2, #1
 8001fd6:	701a      	strb	r2, [r3, #0]
    }
}
 8001fd8:	b002      	add	sp, #8
 8001fda:	bd10      	pop	{r4, pc}
            HAL_DSI_ShortWrite(&hdsi, LCD_ID, DSI_DCS_SHORT_PKT_WRITE_P1, NT35510_CMD_DISPON, 0x00);
 8001fdc:	2100      	movs	r1, #0
 8001fde:	9100      	str	r1, [sp, #0]
 8001fe0:	2329      	movs	r3, #41	@ 0x29
 8001fe2:	2215      	movs	r2, #21
 8001fe4:	4803      	ldr	r0, [pc, #12]	@ (8001ff4 <_ZN11TouchGFXHAL8endFrameEv+0x54>)
 8001fe6:	f00a fce1 	bl	800c9ac <HAL_DSI_ShortWrite>
 8001fea:	e7e9      	b.n	8001fc0 <_ZN11TouchGFXHAL8endFrameEv+0x20>
 8001fec:	20000028 	.word	0x20000028
 8001ff0:	20005094 	.word	0x20005094
 8001ff4:	20005334 	.word	0x20005334
 8001ff8:	20000029 	.word	0x20000029

08001ffc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8001ffc:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8001ffe:	b161      	cbz	r1, 800201a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x1e>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 8002000:	63c1      	str	r1, [r0, #60]	@ 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8002002:	6402      	str	r2, [r0, #64]	@ 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8002004:	3a00      	subs	r2, #0
 8002006:	bf18      	it	ne
 8002008:	2201      	movne	r2, #1
 800200a:	4907      	ldr	r1, [pc, #28]	@ (8002028 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2c>)
 800200c:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
 800200e:	6802      	ldr	r2, [r0, #0]
 8002010:	f8d2 2090 	ldr.w	r2, [r2, #144]	@ 0x90
 8002014:	4619      	mov	r1, r3
 8002016:	4790      	blx	r2
    }
 8002018:	bd10      	pop	{r4, pc}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800201a:	4b04      	ldr	r3, [pc, #16]	@ (800202c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800201c:	4a04      	ldr	r2, [pc, #16]	@ (8002030 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 800201e:	f240 21ff 	movw	r1, #767	@ 0x2ff
 8002022:	4804      	ldr	r0, [pc, #16]	@ (8002034 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8002024:	f02c fb8a 	bl	802e73c <__assert_func>
 8002028:	2000e40a 	.word	0x2000e40a
 800202c:	0802f9f4 	.word	0x0802f9f4
 8002030:	0802fa2c 	.word	0x0802fa2c
 8002034:	0802fa7c 	.word	0x0802fa7c

08002038 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8002038:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800203a:	4b09      	ldr	r3, [pc, #36]	@ (8002060 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 800203c:	881b      	ldrh	r3, [r3, #0]
 800203e:	428b      	cmp	r3, r1
 8002040:	d808      	bhi.n	8002054 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
 8002042:	4b08      	ldr	r3, [pc, #32]	@ (8002064 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8002044:	881b      	ldrh	r3, [r3, #0]
 8002046:	4293      	cmp	r3, r2
 8002048:	d804      	bhi.n	8002054 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
 800204a:	4b07      	ldr	r3, [pc, #28]	@ (8002068 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 800204c:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 800204e:	4b07      	ldr	r3, [pc, #28]	@ (800206c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8002050:	801a      	strh	r2, [r3, #0]
    }
 8002052:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8002054:	4b06      	ldr	r3, [pc, #24]	@ (8002070 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8002056:	4a07      	ldr	r2, [pc, #28]	@ (8002074 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8002058:	21a3      	movs	r1, #163	@ 0xa3
 800205a:	4807      	ldr	r0, [pc, #28]	@ (8002078 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 800205c:	f02c fb6e 	bl	802e73c <__assert_func>
 8002060:	2000e400 	.word	0x2000e400
 8002064:	2000e402 	.word	0x2000e402
 8002068:	2000e406 	.word	0x2000e406
 800206c:	2000e408 	.word	0x2000e408
 8002070:	0802fac4 	.word	0x0802fac4
 8002074:	0802fb28 	.word	0x0802fb28
 8002078:	0802fa7c 	.word	0x0802fa7c

0800207c <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 800207c:	b510      	push	{r4, lr}
 800207e:	4604      	mov	r4, r0
        swapFrameBuffers();
 8002080:	f011 fcdc 	bl	8013a3c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8002084:	6823      	ldr	r3, [r4, #0]
 8002086:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800208a:	4620      	mov	r0, r4
 800208c:	4798      	blx	r3
    }
 800208e:	bd10      	pop	{r4, pc}

08002090 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 8002090:	b508      	push	{r3, lr}
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8002092:	f010 fee2 	bl	8012e5a <_ZN8touchgfx3HAL16flushFrameBufferEv>
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
    }
 8002096:	bd08      	pop	{r3, pc}

08002098 <_ZN11TouchGFXHALD0Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8002098:	b510      	push	{r4, lr}
 800209a:	4604      	mov	r4, r0
 800209c:	4b05      	ldr	r3, [pc, #20]	@ (80020b4 <_ZN11TouchGFXHALD0Ev+0x1c>)
 800209e:	6003      	str	r3, [r0, #0]
class TouchGFXGeneratedHAL : public touchgfx::HAL
 80020a0:	4b05      	ldr	r3, [pc, #20]	@ (80020b8 <_ZN11TouchGFXHALD0Ev+0x20>)
 80020a2:	6003      	str	r3, [r0, #0]
    {
 80020a4:	4b05      	ldr	r3, [pc, #20]	@ (80020bc <_ZN11TouchGFXHALD0Ev+0x24>)
 80020a6:	6003      	str	r3, [r0, #0]
 80020a8:	2184      	movs	r1, #132	@ 0x84
 80020aa:	f02b fc00 	bl	802d8ae <_ZdlPvj>
 80020ae:	4620      	mov	r0, r4
 80020b0:	bd10      	pop	{r4, pc}
 80020b2:	bf00      	nop
 80020b4:	0802fb74 	.word	0x0802fb74
 80020b8:	08030370 	.word	0x08030370
 80020bc:	08032288 	.word	0x08032288

080020c0 <_Z41__static_initialization_and_destruction_0ii>:
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
}
 80020c0:	b538      	push	{r3, r4, r5, lr}
 80020c2:	4604      	mov	r4, r0
 80020c4:	460d      	mov	r5, r1
 80020c6:	2801      	cmp	r0, #1
 80020c8:	d005      	beq.n	80020d6 <_Z41__static_initialization_and_destruction_0ii+0x16>
static KeySampler btnctrl;
 80020ca:	b91c      	cbnz	r4, 80020d4 <_Z41__static_initialization_and_destruction_0ii+0x14>
 80020cc:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80020d0:	429d      	cmp	r5, r3
 80020d2:	d014      	beq.n	80020fe <_Z41__static_initialization_and_destruction_0ii+0x3e>
}
 80020d4:	bd38      	pop	{r3, r4, r5, pc}
 80020d6:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80020da:	4299      	cmp	r1, r3
 80020dc:	d1f5      	bne.n	80020ca <_Z41__static_initialization_and_destruction_0ii+0xa>
          cc_in(0)
 80020de:	4b0d      	ldr	r3, [pc, #52]	@ (8002114 <_Z41__static_initialization_and_destruction_0ii+0x54>)
 80020e0:	4a0d      	ldr	r2, [pc, #52]	@ (8002118 <_Z41__static_initialization_and_destruction_0ii+0x58>)
 80020e2:	601a      	str	r2, [r3, #0]
        : cc_consumed(0),
 80020e4:	2200      	movs	r2, #0
 80020e6:	605a      	str	r2, [r3, #4]
          cc_in(0)
 80020e8:	609a      	str	r2, [r3, #8]
 80020ea:	4a0c      	ldr	r2, [pc, #48]	@ (800211c <_Z41__static_initialization_and_destruction_0ii+0x5c>)
 80020ec:	601a      	str	r2, [r3, #0]
class ButtonController
 80020ee:	480c      	ldr	r0, [pc, #48]	@ (8002120 <_Z41__static_initialization_and_destruction_0ii+0x60>)
 80020f0:	4b0c      	ldr	r3, [pc, #48]	@ (8002124 <_Z41__static_initialization_and_destruction_0ii+0x64>)
 80020f2:	6003      	str	r3, [r0, #0]
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 80020f4:	4b0c      	ldr	r3, [pc, #48]	@ (8002128 <_Z41__static_initialization_and_destruction_0ii+0x68>)
 80020f6:	6003      	str	r3, [r0, #0]
        init();
 80020f8:	f7ff fcfc 	bl	8001af4 <_ZN8touchgfx10KeySampler4initEv>
    }
 80020fc:	e7e5      	b.n	80020ca <_Z41__static_initialization_and_destruction_0ii+0xa>
    virtual ~KeySampler() {}
 80020fe:	4b08      	ldr	r3, [pc, #32]	@ (8002120 <_Z41__static_initialization_and_destruction_0ii+0x60>)
 8002100:	4a09      	ldr	r2, [pc, #36]	@ (8002128 <_Z41__static_initialization_and_destruction_0ii+0x68>)
 8002102:	601a      	str	r2, [r3, #0]
    {
 8002104:	4a07      	ldr	r2, [pc, #28]	@ (8002124 <_Z41__static_initialization_and_destruction_0ii+0x64>)
 8002106:	601a      	str	r2, [r3, #0]
 8002108:	4b02      	ldr	r3, [pc, #8]	@ (8002114 <_Z41__static_initialization_and_destruction_0ii+0x54>)
 800210a:	4a04      	ldr	r2, [pc, #16]	@ (800211c <_Z41__static_initialization_and_destruction_0ii+0x5c>)
 800210c:	601a      	str	r2, [r3, #0]
    {
 800210e:	4a02      	ldr	r2, [pc, #8]	@ (8002118 <_Z41__static_initialization_and_destruction_0ii+0x58>)
 8002110:	601a      	str	r2, [r3, #0]
 8002112:	e7df      	b.n	80020d4 <_Z41__static_initialization_and_destruction_0ii+0x14>
 8002114:	20000678 	.word	0x20000678
 8002118:	0802f944 	.word	0x0802f944
 800211c:	0802f96c 	.word	0x0802f96c
 8002120:	20000674 	.word	0x20000674
 8002124:	0802f994 	.word	0x0802f994
 8002128:	0802f9b0 	.word	0x0802f9b0

0800212c <_Z11LCD_ReqTearv>:
{
 800212c:	b500      	push	{lr}
 800212e:	b083      	sub	sp, #12
    if (lcd_is_OTM8009A)
 8002130:	4b0a      	ldr	r3, [pc, #40]	@ (800215c <_Z11LCD_ReqTearv+0x30>)
 8002132:	781b      	ldrb	r3, [r3, #0]
 8002134:	b14b      	cbz	r3, 800214a <_Z11LCD_ReqTearv+0x1e>
        HAL_DSI_ShortWrite(&hdsi, LCD_ID, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_TEEON, OTM8009A_TEEON_TELOM_VBLANKING_INFO_ONLY);
 8002136:	2100      	movs	r1, #0
 8002138:	9100      	str	r1, [sp, #0]
 800213a:	2335      	movs	r3, #53	@ 0x35
 800213c:	2215      	movs	r2, #21
 800213e:	4808      	ldr	r0, [pc, #32]	@ (8002160 <_Z11LCD_ReqTearv+0x34>)
 8002140:	f00a fc34 	bl	800c9ac <HAL_DSI_ShortWrite>
}
 8002144:	b003      	add	sp, #12
 8002146:	f85d fb04 	ldr.w	pc, [sp], #4
        HAL_DSI_ShortWrite(&hdsi, LCD_ID, DSI_DCS_SHORT_PKT_WRITE_P1, NT35510_CMD_TEEON, NT35510_TEEON_TELOM_VBLANKING_INFO_ONLY);
 800214a:	2100      	movs	r1, #0
 800214c:	9100      	str	r1, [sp, #0]
 800214e:	2335      	movs	r3, #53	@ 0x35
 8002150:	2215      	movs	r2, #21
 8002152:	4803      	ldr	r0, [pc, #12]	@ (8002160 <_Z11LCD_ReqTearv+0x34>)
 8002154:	f00a fc2a 	bl	800c9ac <HAL_DSI_ShortWrite>
}
 8002158:	e7f4      	b.n	8002144 <_Z11LCD_ReqTearv+0x18>
 800215a:	bf00      	nop
 800215c:	20005094 	.word	0x20005094
 8002160:	20005334 	.word	0x20005334

08002164 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 8002164:	b510      	push	{r4, lr}
 8002166:	4604      	mov	r4, r0
    LCD_ReqTear();
 8002168:	f7ff ffe0 	bl	800212c <_Z11LCD_ReqTearv>
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800216c:	4620      	mov	r0, r4
 800216e:	f001 f803 	bl	8003178 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 8002172:	bd10      	pop	{r4, pc}

08002174 <HAL_DSI_TearingEffectCallback>:
{
 8002174:	b510      	push	{r4, lr}
 8002176:	4604      	mov	r4, r0
    GPIO::set(GPIO::VSYNC_FREQ);
 8002178:	2000      	movs	r0, #0
 800217a:	f7ff fd9d 	bl	8001cb8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
        return instance;
 800217e:	4b0d      	ldr	r3, [pc, #52]	@ (80021b4 <HAL_DSI_TearingEffectCallback+0x40>)
 8002180:	681b      	ldr	r3, [r3, #0]
        vSyncCnt++;
 8002182:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
 8002186:	3201      	adds	r2, #1
 8002188:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 800218c:	2200      	movs	r2, #0
 800218e:	f883 207c 	strb.w	r2, [r3, #124]	@ 0x7c
    OSWrappers::signalVSync();
 8002192:	f000 f891 	bl	80022b8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
    if (refreshRequested)
 8002196:	4b08      	ldr	r3, [pc, #32]	@ (80021b8 <HAL_DSI_TearingEffectCallback+0x44>)
 8002198:	781b      	ldrb	r3, [r3, #0]
 800219a:	b133      	cbz	r3, 80021aa <HAL_DSI_TearingEffectCallback+0x36>
        HAL_DSI_Refresh(hdsi);
 800219c:	4620      	mov	r0, r4
 800219e:	f00a fbf1 	bl	800c984 <HAL_DSI_Refresh>
        refreshRequested = false;
 80021a2:	4b05      	ldr	r3, [pc, #20]	@ (80021b8 <HAL_DSI_TearingEffectCallback+0x44>)
 80021a4:	2200      	movs	r2, #0
 80021a6:	701a      	strb	r2, [r3, #0]
}
 80021a8:	bd10      	pop	{r4, pc}
        GPIO::clear(GPIO::VSYNC_FREQ);
 80021aa:	2000      	movs	r0, #0
 80021ac:	f7ff fdbe 	bl	8001d2c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
}
 80021b0:	e7fa      	b.n	80021a8 <HAL_DSI_TearingEffectCallback+0x34>
 80021b2:	bf00      	nop
 80021b4:	2000e40c 	.word	0x2000e40c
 80021b8:	20000029 	.word	0x20000029

080021bc <HAL_DSI_EndOfRefreshCallback>:
{
 80021bc:	b510      	push	{r4, lr}
    GPIO::clear(GPIO::VSYNC_FREQ);
 80021be:	2000      	movs	r0, #0
 80021c0:	f7ff fdb4 	bl	8001d2c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
        return instance;
 80021c4:	4b04      	ldr	r3, [pc, #16]	@ (80021d8 <HAL_DSI_EndOfRefreshCallback+0x1c>)
 80021c6:	681c      	ldr	r4, [r3, #0]
        allowDMATransfers();
 80021c8:	6823      	ldr	r3, [r4, #0]
 80021ca:	6a1b      	ldr	r3, [r3, #32]
 80021cc:	4620      	mov	r0, r4
 80021ce:	4798      	blx	r3
        isFrontPorchEntered = true;
 80021d0:	2301      	movs	r3, #1
 80021d2:	f884 307c 	strb.w	r3, [r4, #124]	@ 0x7c
}
 80021d6:	bd10      	pop	{r4, pc}
 80021d8:	2000e40c 	.word	0x2000e40c

080021dc <IdleTaskHook>:
    {
 80021dc:	b508      	push	{r3, lr}
        if ((int)p) // idle task sched out
 80021de:	b130      	cbz	r0, 80021ee <IdleTaskHook+0x12>
            touchgfx::HAL::getInstance()->setMCUActive(true);
 80021e0:	2101      	movs	r1, #1
 80021e2:	4b06      	ldr	r3, [pc, #24]	@ (80021fc <IdleTaskHook+0x20>)
 80021e4:	6818      	ldr	r0, [r3, #0]
 80021e6:	f011 fc43 	bl	8013a70 <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
 80021ea:	2001      	movs	r0, #1
 80021ec:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
 80021ee:	2100      	movs	r1, #0
 80021f0:	4b02      	ldr	r3, [pc, #8]	@ (80021fc <IdleTaskHook+0x20>)
 80021f2:	6818      	ldr	r0, [r3, #0]
 80021f4:	f011 fc3c 	bl	8013a70 <_ZN8touchgfx3HAL12setMCUActiveEb>
 80021f8:	e7f7      	b.n	80021ea <IdleTaskHook+0xe>
 80021fa:	bf00      	nop
 80021fc:	2000e40c 	.word	0x2000e40c

08002200 <_GLOBAL__sub_I__ZN11TouchGFXHAL10initializeEv>:
}
 8002200:	b508      	push	{r3, lr}
 8002202:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8002206:	2001      	movs	r0, #1
 8002208:	f7ff ff5a 	bl	80020c0 <_Z41__static_initialization_and_destruction_0ii>
 800220c:	bd08      	pop	{r3, pc}

0800220e <_GLOBAL__sub_D__ZN11TouchGFXHAL10initializeEv>:
 800220e:	b508      	push	{r3, lr}
 8002210:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8002214:	2000      	movs	r0, #0
 8002216:	f7ff ff53 	bl	80020c0 <_Z41__static_initialization_and_destruction_0ii>
 800221a:	bd08      	pop	{r3, pc}

0800221c <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 800221c:	b508      	push	{r3, lr}
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800221e:	2200      	movs	r2, #0
 8002220:	2101      	movs	r1, #1
 8002222:	4608      	mov	r0, r1
 8002224:	f00d fe08 	bl	800fe38 <osSemaphoreNew>
 8002228:	4b0b      	ldr	r3, [pc, #44]	@ (8002258 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 800222a:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 800222c:	b140      	cbz	r0, 8002240 <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 800222e:	2200      	movs	r2, #0
 8002230:	2104      	movs	r1, #4
 8002232:	2001      	movs	r0, #1
 8002234:	f00d febc 	bl	800ffb0 <osMessageQueueNew>
 8002238:	4b08      	ldr	r3, [pc, #32]	@ (800225c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800223a:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 800223c:	b130      	cbz	r0, 800224c <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
 800223e:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8002240:	4b07      	ldr	r3, [pc, #28]	@ (8002260 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8002242:	4a08      	ldr	r2, [pc, #32]	@ (8002264 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8002244:	2128      	movs	r1, #40	@ 0x28
 8002246:	4808      	ldr	r0, [pc, #32]	@ (8002268 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8002248:	f02c fa78 	bl	802e73c <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 800224c:	4b07      	ldr	r3, [pc, #28]	@ (800226c <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
 800224e:	4a05      	ldr	r2, [pc, #20]	@ (8002264 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8002250:	212c      	movs	r1, #44	@ 0x2c
 8002252:	4805      	ldr	r0, [pc, #20]	@ (8002268 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8002254:	f02c fa72 	bl	802e73c <__assert_func>
 8002258:	2000068c 	.word	0x2000068c
 800225c:	20000688 	.word	0x20000688
 8002260:	0802fc58 	.word	0x0802fc58
 8002264:	0802fca4 	.word	0x0802fca4
 8002268:	0802fcd4 	.word	0x0802fcd4
 800226c:	0802fd40 	.word	0x0802fd40

08002270 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 8002270:	b508      	push	{r3, lr}
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8002272:	f04f 31ff 	mov.w	r1, #4294967295
 8002276:	4b02      	ldr	r3, [pc, #8]	@ (8002280 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x10>)
 8002278:	6818      	ldr	r0, [r3, #0]
 800227a:	f00d fe3d 	bl	800fef8 <osSemaphoreAcquire>
}
 800227e:	bd08      	pop	{r3, pc}
 8002280:	2000068c 	.word	0x2000068c

08002284 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 8002284:	b508      	push	{r3, lr}
    osSemaphoreRelease(frame_buffer_sem);
 8002286:	4b02      	ldr	r3, [pc, #8]	@ (8002290 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0xc>)
 8002288:	6818      	ldr	r0, [r3, #0]
 800228a:	f00d fe67 	bl	800ff5c <osSemaphoreRelease>
}
 800228e:	bd08      	pop	{r3, pc}
 8002290:	2000068c 	.word	0x2000068c

08002294 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 8002294:	b508      	push	{r3, lr}
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8002296:	2100      	movs	r1, #0
 8002298:	4b02      	ldr	r3, [pc, #8]	@ (80022a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x10>)
 800229a:	6818      	ldr	r0, [r3, #0]
 800229c:	f00d fe2c 	bl	800fef8 <osSemaphoreAcquire>
}
 80022a0:	bd08      	pop	{r3, pc}
 80022a2:	bf00      	nop
 80022a4:	2000068c 	.word	0x2000068c

080022a8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 80022a8:	b508      	push	{r3, lr}
    osSemaphoreRelease(frame_buffer_sem);
 80022aa:	4b02      	ldr	r3, [pc, #8]	@ (80022b4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0xc>)
 80022ac:	6818      	ldr	r0, [r3, #0]
 80022ae:	f00d fe55 	bl	800ff5c <osSemaphoreRelease>
}
 80022b2:	bd08      	pop	{r3, pc}
 80022b4:	2000068c 	.word	0x2000068c

080022b8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 80022b8:	b508      	push	{r3, lr}
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 80022ba:	2300      	movs	r3, #0
 80022bc:	461a      	mov	r2, r3
 80022be:	4903      	ldr	r1, [pc, #12]	@ (80022cc <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 80022c0:	4803      	ldr	r0, [pc, #12]	@ (80022d0 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x18>)
 80022c2:	6800      	ldr	r0, [r0, #0]
 80022c4:	f00d feac 	bl	8010020 <osMessageQueuePut>
}
 80022c8:	bd08      	pop	{r3, pc}
 80022ca:	bf00      	nop
 80022cc:	2000002c 	.word	0x2000002c
 80022d0:	20000688 	.word	0x20000688

080022d4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 80022d4:	b510      	push	{r4, lr}
 80022d6:	b082      	sub	sp, #8
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 80022d8:	4c07      	ldr	r4, [pc, #28]	@ (80022f8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 80022da:	2300      	movs	r3, #0
 80022dc:	461a      	mov	r2, r3
 80022de:	a901      	add	r1, sp, #4
 80022e0:	6820      	ldr	r0, [r4, #0]
 80022e2:	f00d fecf 	bl	8010084 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 80022e6:	f04f 33ff 	mov.w	r3, #4294967295
 80022ea:	2200      	movs	r2, #0
 80022ec:	a901      	add	r1, sp, #4
 80022ee:	6820      	ldr	r0, [r4, #0]
 80022f0:	f00d fec8 	bl	8010084 <osMessageQueueGet>
}
 80022f4:	b002      	add	sp, #8
 80022f6:	bd10      	pop	{r4, pc}
 80022f8:	20000688 	.word	0x20000688

080022fc <_ZN8touchgfx10OSWrappers9taskDelayEt>:
 *
 * see HAL::setFrameRefreshStrategy(FrameRefreshStrategy s)
 * see HAL::registerTaskDelayFunction(void (*delayF)(uint16_t))
 */
void OSWrappers::taskDelay(uint16_t ms)
{
 80022fc:	b508      	push	{r3, lr}
    osDelay(static_cast<uint32_t>(ms));
 80022fe:	f00d fd8d 	bl	800fe1c <osDelay>
}
 8002302:	bd08      	pop	{r3, pc}

08002304 <_ZN8touchgfx13DMA_Interface5flushEv>:
     * @param  op The operation to add.
     */
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
 8002304:	b508      	push	{r3, lr}
    {
        waitForFrameBufferSemaphore();
 8002306:	6803      	ldr	r3, [r0, #0]
 8002308:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800230a:	4798      	blx	r3
    }
 800230c:	bd08      	pop	{r3, pc}

0800230e <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 800230e:	2001      	movs	r0, #1
 8002310:	4770      	bx	lr

08002312 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Raises a DMA interrupt signal.
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
 8002312:	b508      	push	{r3, lr}
    {
        executeCompleted();
 8002314:	6803      	ldr	r3, [r0, #0]
 8002316:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002318:	4798      	blx	r3
    }
 800231a:	bd08      	pop	{r3, pc}

0800231c <DMA2D_XferCpltCallback>:

extern "C" DMA2D_HandleTypeDef hdma2d;

extern "C" {
    static void DMA2D_XferCpltCallback(DMA2D_HandleTypeDef* handle)
    {
 800231c:	b508      	push	{r3, lr}
        return instance;
 800231e:	4b03      	ldr	r3, [pc, #12]	@ (800232c <DMA2D_XferCpltCallback+0x10>)
 8002320:	681b      	ldr	r3, [r3, #0]
        dma.signalDMAInterrupt();
 8002322:	6858      	ldr	r0, [r3, #4]
 8002324:	6803      	ldr	r3, [r0, #0]
 8002326:	695b      	ldr	r3, [r3, #20]
 8002328:	4798      	blx	r3
        (void)handle; // Unused argument
        HAL::getInstance()->signalDMAInterrupt();
    }
 800232a:	bd08      	pop	{r3, pc}
 800232c:	2000e40c 	.word	0x2000e40c

08002330 <DMA2D_XferErrorCallback>:

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
 8002330:	e7fe      	b.n	8002330 <DMA2D_XferErrorCallback>
	...

08002334 <_ZN8STM32DMAD1Ev>:
STM32DMA::STM32DMA()
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
{
}

STM32DMA::~STM32DMA()
 8002334:	4a08      	ldr	r2, [pc, #32]	@ (8002358 <_ZN8STM32DMAD1Ev+0x24>)
 8002336:	6002      	str	r2, [r0, #0]
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002338:	4a08      	ldr	r2, [pc, #32]	@ (800235c <_ZN8STM32DMAD1Ev+0x28>)
 800233a:	f04f 6180 	mov.w	r1, #67108864	@ 0x4000000
 800233e:	f8c2 1088 	str.w	r1, [r2, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8002342:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002346:	f3bf 8f6f 	isb	sy
class LockFreeDMA_Queue : public DMA_Queue
 800234a:	4a05      	ldr	r2, [pc, #20]	@ (8002360 <_ZN8STM32DMAD1Ev+0x2c>)
 800234c:	60c2      	str	r2, [r0, #12]
    {
 800234e:	4a05      	ldr	r2, [pc, #20]	@ (8002364 <_ZN8STM32DMAD1Ev+0x30>)
 8002350:	60c2      	str	r2, [r0, #12]
        return DMA_TYPE_GENERIC;
    }

    /** Finalizes an instance of the DMA_Interface class. */
    virtual ~DMA_Interface()
    {
 8002352:	4a05      	ldr	r2, [pc, #20]	@ (8002368 <_ZN8STM32DMAD1Ev+0x34>)
 8002354:	6002      	str	r2, [r0, #0]
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
 8002356:	4770      	bx	lr
 8002358:	0802ff28 	.word	0x0802ff28
 800235c:	e000e100 	.word	0xe000e100
 8002360:	080323c4 	.word	0x080323c4
 8002364:	0802ff04 	.word	0x0802ff04
 8002368:	08032374 	.word	0x08032374

0800236c <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
 800236c:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800236e:	2300      	movs	r3, #0
 8002370:	9301      	str	r3, [sp, #4]
 8002372:	4b0e      	ldr	r3, [pc, #56]	@ (80023ac <_ZN8STM32DMA10initializeEv+0x40>)
 8002374:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002376:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 800237a:	631a      	str	r2, [r3, #48]	@ 0x30
 800237c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800237e:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
 8002382:	9201      	str	r2, [sp, #4]
 8002384:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8002386:	691a      	ldr	r2, [r3, #16]
 8002388:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 800238c:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 800238e:	691a      	ldr	r2, [r3, #16]
 8002390:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 8002394:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8002396:	4b06      	ldr	r3, [pc, #24]	@ (80023b0 <_ZN8STM32DMA10initializeEv+0x44>)
 8002398:	4a06      	ldr	r2, [pc, #24]	@ (80023b4 <_ZN8STM32DMA10initializeEv+0x48>)
 800239a:	611a      	str	r2, [r3, #16]

    /* Add transfer error callback function */
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 800239c:	4a06      	ldr	r2, [pc, #24]	@ (80023b8 <_ZN8STM32DMA10initializeEv+0x4c>)
 800239e:	615a      	str	r2, [r3, #20]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80023a0:	4b06      	ldr	r3, [pc, #24]	@ (80023bc <_ZN8STM32DMA10initializeEv+0x50>)
 80023a2:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80023a6:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80023a8:	b002      	add	sp, #8
 80023aa:	4770      	bx	lr
 80023ac:	40023800 	.word	0x40023800
 80023b0:	20005350 	.word	0x20005350
 80023b4:	0800231d 	.word	0x0800231d
 80023b8:	08002331 	.word	0x08002331
 80023bc:	e000e100 	.word	0xe000e100

080023c0 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 80023c0:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 80023c4:	4770      	bx	lr

080023c6 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 80023c6:	b510      	push	{r4, lr}
 80023c8:	4604      	mov	r4, r0
}
 80023ca:	f7ff ffb3 	bl	8002334 <_ZN8STM32DMAD1Ev>
 80023ce:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 80023d2:	4620      	mov	r0, r4
 80023d4:	f02b fa6b 	bl	802d8ae <_ZdlPvj>
 80023d8:	4620      	mov	r0, r4
 80023da:	bd10      	pop	{r4, pc}

080023dc <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 80023dc:	b538      	push	{r3, r4, r5, lr}
 80023de:	4605      	mov	r5, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 80023e0:	4b0c      	ldr	r3, [pc, #48]	@ (8002414 <_ZN8STM32DMAC1Ev+0x38>)
 80023e2:	f840 3b0c 	str.w	r3, [r0], #12
 80023e6:	6068      	str	r0, [r5, #4]
 80023e8:	2300      	movs	r3, #0
 80023ea:	722b      	strb	r3, [r5, #8]
 80023ec:	726b      	strb	r3, [r5, #9]
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 80023ee:	462c      	mov	r4, r5
 80023f0:	4b09      	ldr	r3, [pc, #36]	@ (8002418 <_ZN8STM32DMAC1Ev+0x3c>)
 80023f2:	f844 3b20 	str.w	r3, [r4], #32
 80023f6:	2260      	movs	r2, #96	@ 0x60
 80023f8:	4621      	mov	r1, r4
 80023fa:	f011 fc91 	bl	8013d20 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 80023fe:	235f      	movs	r3, #95	@ 0x5f
 8002400:	e003      	b.n	800240a <_ZN8STM32DMAC1Ev+0x2e>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8002402:	2200      	movs	r2, #0
 8002404:	60e2      	str	r2, [r4, #12]
 8002406:	3b01      	subs	r3, #1
 8002408:	3424      	adds	r4, #36	@ 0x24
 800240a:	2b00      	cmp	r3, #0
 800240c:	daf9      	bge.n	8002402 <_ZN8STM32DMAC1Ev+0x26>
}
 800240e:	4628      	mov	r0, r5
 8002410:	bd38      	pop	{r3, r4, r5, pc}
 8002412:	bf00      	nop
 8002414:	08032374 	.word	0x08032374
 8002418:	0802ff28 	.word	0x0802ff28

0800241c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 800241c:	b508      	push	{r3, lr}
    switch (format)
 800241e:	290b      	cmp	r1, #11
 8002420:	d80b      	bhi.n	800243a <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8002422:	e8df f001 	tbb	[pc, r1]
 8002426:	1206      	.short	0x1206
 8002428:	0a0a0a10 	.word	0x0a0a0a10
 800242c:	0808080a 	.word	0x0808080a
 8002430:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8002432:	2002      	movs	r0, #2
}
 8002434:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8002436:	2005      	movs	r0, #5
        break;
 8002438:	e7fc      	b.n	8002434 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 800243a:	4b05      	ldr	r3, [pc, #20]	@ (8002450 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 800243c:	4a05      	ldr	r2, [pc, #20]	@ (8002454 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 800243e:	216f      	movs	r1, #111	@ 0x6f
 8002440:	4805      	ldr	r0, [pc, #20]	@ (8002458 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8002442:	f02c f97b 	bl	802e73c <__assert_func>
    switch (format)
 8002446:	2000      	movs	r0, #0
 8002448:	e7f4      	b.n	8002434 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB888;
 800244a:	2001      	movs	r0, #1
    return dma2dColorMode;
 800244c:	e7f2      	b.n	8002434 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 800244e:	bf00      	nop
 8002450:	0802fd84 	.word	0x0802fd84
 8002454:	0802fda0 	.word	0x0802fda0
 8002458:	0802fdec 	.word	0x0802fdec

0800245c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 800245c:	b508      	push	{r3, lr}
    switch (format)
 800245e:	290a      	cmp	r1, #10
 8002460:	d809      	bhi.n	8002476 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8002462:	e8df f001 	tbb	[pc, r1]
 8002466:	1006      	.short	0x1006
 8002468:	0808080e 	.word	0x0808080e
 800246c:	10101008 	.word	0x10101008
 8002470:	10          	.byte	0x10
 8002471:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8002472:	2002      	movs	r0, #2
        break;
 8002474:	e008      	b.n	8002488 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x2c>
        assert(0 && "Unsupported Format!");
 8002476:	4b05      	ldr	r3, [pc, #20]	@ (800248c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8002478:	4a05      	ldr	r2, [pc, #20]	@ (8002490 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 800247a:	2190      	movs	r1, #144	@ 0x90
 800247c:	4805      	ldr	r0, [pc, #20]	@ (8002494 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 800247e:	f02c f95d 	bl	802e73c <__assert_func>
    switch (format)
 8002482:	2000      	movs	r0, #0
 8002484:	e000      	b.n	8002488 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x2c>
        dma2dColorMode = DMA2D_OUTPUT_RGB888;
 8002486:	2001      	movs	r0, #1
}
 8002488:	bd08      	pop	{r3, pc}
 800248a:	bf00      	nop
 800248c:	0802fd84 	.word	0x0802fd84
 8002490:	0802fe54 	.word	0x0802fe54
 8002494:	0802fdec 	.word	0x0802fdec

08002498 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8002498:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800249c:	4605      	mov	r5, r0
 800249e:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80024a0:	7f49      	ldrb	r1, [r1, #29]
 80024a2:	f7ff ffbb 	bl	800241c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 80024a6:	4606      	mov	r6, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80024a8:	f894 801e 	ldrb.w	r8, [r4, #30]
 80024ac:	4641      	mov	r1, r8
 80024ae:	4628      	mov	r0, r5
 80024b0:	f7ff ffb4 	bl	800241c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 80024b4:	4607      	mov	r7, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80024b6:	4641      	mov	r1, r8
 80024b8:	4628      	mov	r0, r5
 80024ba:	f7ff ffcf 	bl	800245c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80024be:	8b62      	ldrh	r2, [r4, #26]
 80024c0:	8aa3      	ldrh	r3, [r4, #20]
 80024c2:	1ad2      	subs	r2, r2, r3
 80024c4:	4b61      	ldr	r3, [pc, #388]	@ (800264c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
 80024c6:	641a      	str	r2, [r3, #64]	@ 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80024c8:	8b62      	ldrh	r2, [r4, #26]
 80024ca:	8aa1      	ldrh	r1, [r4, #20]
 80024cc:	1a52      	subs	r2, r2, r1
 80024ce:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 80024d0:	8b22      	ldrh	r2, [r4, #24]
 80024d2:	8aa1      	ldrh	r1, [r4, #20]
 80024d4:	1a52      	subs	r2, r2, r1
 80024d6:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80024d8:	6358      	str	r0, [r3, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80024da:	8ae2      	ldrh	r2, [r4, #22]
 80024dc:	8aa1      	ldrh	r1, [r4, #20]
 80024de:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80024e2:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80024e4:	6922      	ldr	r2, [r4, #16]
 80024e6:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 80024e8:	6862      	ldr	r2, [r4, #4]
 80024ea:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 80024ec:	6823      	ldr	r3, [r4, #0]
 80024ee:	2b80      	cmp	r3, #128	@ 0x80
 80024f0:	d03d      	beq.n	800256e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
 80024f2:	d815      	bhi.n	8002520 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x88>
 80024f4:	2b20      	cmp	r3, #32
 80024f6:	f000 8087 	beq.w	8002608 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x170>
 80024fa:	2b40      	cmp	r3, #64	@ 0x40
 80024fc:	f000 8084 	beq.w	8002608 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x170>
 8002500:	2b04      	cmp	r3, #4
 8002502:	f040 808e 	bne.w	8002622 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18a>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
        break;
    case BLIT_OP_COPY_WITH_ALPHA:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002506:	7f23      	ldrb	r3, [r4, #28]
 8002508:	ea46 6303 	orr.w	r3, r6, r3, lsl #24
 800250c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002510:	4a4e      	ldr	r2, [pc, #312]	@ (800264c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
 8002512:	61d3      	str	r3, [r2, #28]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002514:	6257      	str	r7, [r2, #36]	@ 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002516:	6923      	ldr	r3, [r4, #16]
 8002518:	6153      	str	r3, [r2, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 800251a:	4b4d      	ldr	r3, [pc, #308]	@ (8002650 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
 800251c:	6013      	str	r3, [r2, #0]
        break;
 800251e:	e024      	b.n	800256a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd2>
    switch (blitOp.operation)
 8002520:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002524:	d012      	beq.n	800254c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb4>
 8002526:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800252a:	d17a      	bne.n	8002622 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18a>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800252c:	7f23      	ldrb	r3, [r4, #28]
 800252e:	061b      	lsls	r3, r3, #24
 8002530:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002534:	f043 0309 	orr.w	r3, r3, #9
 8002538:	4a44      	ldr	r2, [pc, #272]	@ (800264c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
 800253a:	61d3      	str	r3, [r2, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 800253c:	68e3      	ldr	r3, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800253e:	6213      	str	r3, [r2, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002540:	6257      	str	r7, [r2, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002542:	6923      	ldr	r3, [r4, #16]
 8002544:	6153      	str	r3, [r2, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8002546:	4b42      	ldr	r3, [pc, #264]	@ (8002650 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
 8002548:	6013      	str	r3, [r2, #0]
        break;
 800254a:	e00e      	b.n	800256a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd2>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800254c:	7f23      	ldrb	r3, [r4, #28]
 800254e:	061b      	lsls	r3, r3, #24
 8002550:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002554:	f043 030a 	orr.w	r3, r3, #10
 8002558:	4a3c      	ldr	r2, [pc, #240]	@ (800264c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
 800255a:	61d3      	str	r3, [r2, #28]
 800255c:	68e3      	ldr	r3, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800255e:	6213      	str	r3, [r2, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002560:	6257      	str	r7, [r2, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002562:	6923      	ldr	r3, [r4, #16]
 8002564:	6153      	str	r3, [r2, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8002566:	4b3a      	ldr	r3, [pc, #232]	@ (8002650 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
 8002568:	6013      	str	r3, [r2, #0]
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
        }
        break;
    }
}
 800256a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 800256e:	68a1      	ldr	r1, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8002570:	1d0b      	adds	r3, r1, #4
 8002572:	4a36      	ldr	r2, [pc, #216]	@ (800264c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
 8002574:	62d3      	str	r3, [r2, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002576:	7f23      	ldrb	r3, [r4, #28]
 8002578:	ea46 6303 	orr.w	r3, r6, r3, lsl #24
 800257c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002580:	61d3      	str	r3, [r2, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002582:	6257      	str	r7, [r2, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002584:	6923      	ldr	r3, [r4, #16]
 8002586:	6153      	str	r3, [r2, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8002588:	780b      	ldrb	r3, [r1, #0]
 800258a:	b19b      	cbz	r3, 80025b4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x11c>
 800258c:	2b01      	cmp	r3, #1
 800258e:	d130      	bne.n	80025f2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
                if (blitOp.alpha == 255)
 8002590:	7f23      	ldrb	r3, [r4, #28]
 8002592:	2bff      	cmp	r3, #255	@ 0xff
 8002594:	d02b      	beq.n	80025ee <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x156>
            bool blend = true;
 8002596:	2001      	movs	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8002598:	4c2c      	ldr	r4, [pc, #176]	@ (800264c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
 800259a:	69e3      	ldr	r3, [r4, #28]
 800259c:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80025a0:	f023 0310 	bic.w	r3, r3, #16
 80025a4:	884a      	ldrh	r2, [r1, #2]
 80025a6:	3a01      	subs	r2, #1
 80025a8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80025ac:	f043 0310 	orr.w	r3, r3, #16
 80025b0:	61e3      	str	r3, [r4, #28]
                break;
 80025b2:	e00b      	b.n	80025cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 80025b4:	4825      	ldr	r0, [pc, #148]	@ (800264c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
 80025b6:	69c3      	ldr	r3, [r0, #28]
 80025b8:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80025bc:	f023 0310 	bic.w	r3, r3, #16
 80025c0:	884a      	ldrh	r2, [r1, #2]
 80025c2:	3a01      	subs	r2, #1
 80025c4:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80025c8:	61c3      	str	r3, [r0, #28]
            bool blend = true;
 80025ca:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 80025cc:	4a1f      	ldr	r2, [pc, #124]	@ (800264c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
 80025ce:	69d3      	ldr	r3, [r2, #28]
 80025d0:	f043 0320 	orr.w	r3, r3, #32
 80025d4:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 80025d6:	4b1d      	ldr	r3, [pc, #116]	@ (800264c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
 80025d8:	69db      	ldr	r3, [r3, #28]
 80025da:	f013 0f20 	tst.w	r3, #32
 80025de:	d1fa      	bne.n	80025d6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13e>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 80025e0:	4b1a      	ldr	r3, [pc, #104]	@ (800264c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
 80025e2:	2210      	movs	r2, #16
 80025e4:	609a      	str	r2, [r3, #8]
            if (blend)
 80025e6:	b158      	cbz	r0, 8002600 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 80025e8:	4a19      	ldr	r2, [pc, #100]	@ (8002650 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
 80025ea:	601a      	str	r2, [r3, #0]
 80025ec:	e7bd      	b.n	800256a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd2>
                    blend = false;
 80025ee:	2000      	movs	r0, #0
 80025f0:	e7d2      	b.n	8002598 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 80025f2:	4b18      	ldr	r3, [pc, #96]	@ (8002654 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
 80025f4:	4a18      	ldr	r2, [pc, #96]	@ (8002658 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c0>)
 80025f6:	f44f 718d 	mov.w	r1, #282	@ 0x11a
 80025fa:	4818      	ldr	r0, [pc, #96]	@ (800265c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c4>)
 80025fc:	f02c f89e 	bl	802e73c <__assert_func>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8002600:	4b12      	ldr	r3, [pc, #72]	@ (800264c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
 8002602:	4a17      	ldr	r2, [pc, #92]	@ (8002660 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c8>)
 8002604:	601a      	str	r2, [r3, #0]
 8002606:	e7b0      	b.n	800256a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd2>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002608:	7f23      	ldrb	r3, [r4, #28]
 800260a:	ea46 6303 	orr.w	r3, r6, r3, lsl #24
 800260e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002612:	4a0e      	ldr	r2, [pc, #56]	@ (800264c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
 8002614:	61d3      	str	r3, [r2, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002616:	6257      	str	r7, [r2, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002618:	6923      	ldr	r3, [r4, #16]
 800261a:	6153      	str	r3, [r2, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 800261c:	4b0c      	ldr	r3, [pc, #48]	@ (8002650 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
 800261e:	6013      	str	r3, [r2, #0]
        break;
 8002620:	e7a3      	b.n	800256a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd2>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002622:	7f23      	ldrb	r3, [r4, #28]
 8002624:	ea46 6603 	orr.w	r6, r6, r3, lsl #24
 8002628:	f446 3600 	orr.w	r6, r6, #131072	@ 0x20000
 800262c:	4b07      	ldr	r3, [pc, #28]	@ (800264c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
 800262e:	61de      	str	r6, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8002630:	7f62      	ldrb	r2, [r4, #29]
 8002632:	7fa3      	ldrb	r3, [r4, #30]
 8002634:	429a      	cmp	r2, r3
 8002636:	d003      	beq.n	8002640 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8002638:	4b04      	ldr	r3, [pc, #16]	@ (800264c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
 800263a:	4a09      	ldr	r2, [pc, #36]	@ (8002660 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c8>)
 800263c:	601a      	str	r2, [r3, #0]
 800263e:	e794      	b.n	800256a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8002640:	4b02      	ldr	r3, [pc, #8]	@ (800264c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
 8002642:	f242 3201 	movw	r2, #8961	@ 0x2301
 8002646:	601a      	str	r2, [r3, #0]
}
 8002648:	e78f      	b.n	800256a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd2>
 800264a:	bf00      	nop
 800264c:	4002b000 	.word	0x4002b000
 8002650:	00022301 	.word	0x00022301
 8002654:	0802fea0 	.word	0x0802fea0
 8002658:	0802febc 	.word	0x0802febc
 800265c:	0802fdec 	.word	0x0802fdec
 8002660:	00012301 	.word	0x00012301

08002664 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8002664:	b510      	push	{r4, lr}
 8002666:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8002668:	7f89      	ldrb	r1, [r1, #30]
 800266a:	f7ff fef7 	bl	800245c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800266e:	4b1e      	ldr	r3, [pc, #120]	@ (80026e8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x84>)
 8002670:	6358      	str	r0, [r3, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8002672:	8ae2      	ldrh	r2, [r4, #22]
 8002674:	8aa1      	ldrh	r1, [r4, #20]
 8002676:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800267a:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800267c:	6922      	ldr	r2, [r4, #16]
 800267e:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002680:	8b62      	ldrh	r2, [r4, #26]
 8002682:	8aa1      	ldrh	r1, [r4, #20]
 8002684:	1a52      	subs	r2, r2, r1
 8002686:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8002688:	6823      	ldr	r3, [r4, #0]
 800268a:	2b08      	cmp	r3, #8
 800268c:	d012      	beq.n	80026b4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x50>
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
    }
    else
    {
        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 800268e:	4916      	ldr	r1, [pc, #88]	@ (80026e8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x84>)
 8002690:	61c8      	str	r0, [r1, #28]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);
 8002692:	2300      	movs	r3, #0
 8002694:	610b      	str	r3, [r1, #16]
 8002696:	68e2      	ldr	r2, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8002698:	0a13      	lsrs	r3, r2, #8
 800269a:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 800269e:	0950      	lsrs	r0, r2, #5
 80026a0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80026a4:	4303      	orrs	r3, r0
 80026a6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80026aa:	4313      	orrs	r3, r2
 80026ac:	638b      	str	r3, [r1, #56]	@ 0x38

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 80026ae:	4b0f      	ldr	r3, [pc, #60]	@ (80026ec <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x88>)
 80026b0:	600b      	str	r3, [r1, #0]
    }
}
 80026b2:	bd10      	pop	{r4, pc}
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80026b4:	8b62      	ldrh	r2, [r4, #26]
 80026b6:	8aa3      	ldrh	r3, [r4, #20]
 80026b8:	1ad2      	subs	r2, r2, r3
 80026ba:	4b0b      	ldr	r3, [pc, #44]	@ (80026e8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x84>)
 80026bc:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80026be:	8b62      	ldrh	r2, [r4, #26]
 80026c0:	8aa1      	ldrh	r1, [r4, #20]
 80026c2:	1a52      	subs	r2, r2, r1
 80026c4:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80026c6:	6258      	str	r0, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 80026c8:	7f22      	ldrb	r2, [r4, #28]
 80026ca:	0612      	lsls	r2, r2, #24
 80026cc:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 80026d0:	f042 0209 	orr.w	r2, r2, #9
 80026d4:	61da      	str	r2, [r3, #28]
 80026d6:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 80026d8:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80026da:	6922      	ldr	r2, [r4, #16]
 80026dc:	615a      	str	r2, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80026de:	6922      	ldr	r2, [r4, #16]
 80026e0:	60da      	str	r2, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
 80026e2:	4a03      	ldr	r2, [pc, #12]	@ (80026f0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x8c>)
 80026e4:	601a      	str	r2, [r3, #0]
 80026e6:	e7e4      	b.n	80026b2 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x4e>
 80026e8:	4002b000 	.word	0x4002b000
 80026ec:	00032301 	.word	0x00032301
 80026f0:	00022301 	.word	0x00022301

080026f4 <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 80026f4:	4b04      	ldr	r3, [pc, #16]	@ (8002708 <_ZN8touchgfx5paint8tearDownEv+0x14>)
 80026f6:	681b      	ldr	r3, [r3, #0]
 80026f8:	f013 0f01 	tst.w	r3, #1
 80026fc:	d1fa      	bne.n	80026f4 <_ZN8touchgfx5paint8tearDownEv>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80026fe:	4b02      	ldr	r3, [pc, #8]	@ (8002708 <_ZN8touchgfx5paint8tearDownEv+0x14>)
 8002700:	2223      	movs	r2, #35	@ 0x23
 8002702:	609a      	str	r2, [r3, #8]
}
 8002704:	4770      	bx	lr
 8002706:	bf00      	nop
 8002708:	4002b000 	.word	0x4002b000

0800270c <_ZN8touchgfx5paint9flushLineEPmi>:
 *
 * @brief Flushes decoded RGB pixels when rendering compressed images
 */
void flushLine(uint32_t* addr, int sizebytes)
{
}
 800270c:	4770      	bx	lr
	...

08002710 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8002710:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8002712:	4c13      	ldr	r4, [pc, #76]	@ (8002760 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
 8002714:	6824      	ldr	r4, [r4, #0]
 8002716:	f014 0f01 	tst.w	r4, #1
 800271a:	d1fa      	bne.n	8002712 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800271c:	4c10      	ldr	r4, [pc, #64]	@ (8002760 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
 800271e:	2523      	movs	r5, #35	@ 0x23
 8002720:	60a5      	str	r5, [r4, #8]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8002722:	2502      	movs	r5, #2
 8002724:	6365      	str	r5, [r4, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8002726:	0409      	lsls	r1, r1, #16
 8002728:	f041 0101 	orr.w	r1, r1, #1
 800272c:	6461      	str	r1, [r4, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 800272e:	63e0      	str	r0, [r4, #60]	@ 0x3c

    if (alpha < 0xFF)
 8002730:	2bff      	cmp	r3, #255	@ 0xff
 8002732:	d00d      	beq.n	8002750 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002734:	6265      	str	r5, [r4, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8002736:	061b      	lsls	r3, r3, #24
 8002738:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800273c:	f043 0309 	orr.w	r3, r3, #9
 8002740:	61e3      	str	r3, [r4, #28]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, color);
 8002742:	6222      	str	r2, [r4, #32]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8002744:	6160      	str	r0, [r4, #20]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8002746:	60e0      	str	r0, [r4, #12]

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8002748:	4b06      	ldr	r3, [pc, #24]	@ (8002764 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
 800274a:	6023      	str	r3, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
 800274c:	bc30      	pop	{r4, r5}
 800274e:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8002750:	4b03      	ldr	r3, [pc, #12]	@ (8002760 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
 8002752:	2202      	movs	r2, #2
 8002754:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8002756:	9a02      	ldr	r2, [sp, #8]
 8002758:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 800275a:	4a03      	ldr	r2, [pc, #12]	@ (8002768 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x58>)
 800275c:	601a      	str	r2, [r3, #0]
}
 800275e:	e7f5      	b.n	800274c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3c>
 8002760:	4002b000 	.word	0x4002b000
 8002764:	00020001 	.word	0x00020001
 8002768:	00030001 	.word	0x00030001

0800276c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 800276c:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 800276e:	4c12      	ldr	r4, [pc, #72]	@ (80027b8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>)
 8002770:	6824      	ldr	r4, [r4, #0]
 8002772:	f014 0f01 	tst.w	r4, #1
 8002776:	d1fa      	bne.n	800276e <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8002778:	4c0f      	ldr	r4, [pc, #60]	@ (80027b8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>)
 800277a:	2523      	movs	r5, #35	@ 0x23
 800277c:	60a5      	str	r5, [r4, #8]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 800277e:	2502      	movs	r5, #2
 8002780:	6365      	str	r5, [r4, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8002782:	0412      	lsls	r2, r2, #16
 8002784:	f042 0201 	orr.w	r2, r2, #1
 8002788:	6462      	str	r2, [r4, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 800278a:	63e0      	str	r0, [r4, #60]	@ 0x3c

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 800278c:	60e1      	str	r1, [r4, #12]

    if (alpha < 0xFF)
 800278e:	2bff      	cmp	r3, #255	@ 0xff
 8002790:	d009      	beq.n	80027a6 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x3a>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8002792:	061b      	lsls	r3, r3, #24
 8002794:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 8002798:	61e3      	str	r3, [r4, #28]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800279a:	6265      	str	r5, [r4, #36]	@ 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 800279c:	6160      	str	r0, [r4, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 800279e:	4b07      	ldr	r3, [pc, #28]	@ (80027bc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x50>)
 80027a0:	6023      	str	r3, [r4, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
    }
}
 80027a2:	bc30      	pop	{r4, r5}
 80027a4:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80027a6:	061b      	lsls	r3, r3, #24
 80027a8:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 80027ac:	4a02      	ldr	r2, [pc, #8]	@ (80027b8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>)
 80027ae:	61d3      	str	r3, [r2, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 80027b0:	2301      	movs	r3, #1
 80027b2:	6013      	str	r3, [r2, #0]
}
 80027b4:	e7f5      	b.n	80027a2 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x36>
 80027b6:	bf00      	nop
 80027b8:	4002b000 	.word	0x4002b000
 80027bc:	00020001 	.word	0x00020001

080027c0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 80027c0:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 80027c2:	4c0d      	ldr	r4, [pc, #52]	@ (80027f8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x38>)
 80027c4:	6824      	ldr	r4, [r4, #0]
 80027c6:	f014 0f01 	tst.w	r4, #1
 80027ca:	d1fa      	bne.n	80027c2 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80027cc:	4c0a      	ldr	r4, [pc, #40]	@ (80027f8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x38>)
 80027ce:	2523      	movs	r5, #35	@ 0x23
 80027d0:	60a5      	str	r5, [r4, #8]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80027d2:	2502      	movs	r5, #2
 80027d4:	6365      	str	r5, [r4, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80027d6:	0412      	lsls	r2, r2, #16
 80027d8:	f042 0201 	orr.w	r2, r2, #1
 80027dc:	6462      	str	r2, [r4, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 80027de:	63e0      	str	r0, [r4, #60]	@ 0x3c

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 80027e0:	60e1      	str	r1, [r4, #12]

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80027e2:	061b      	lsls	r3, r3, #24
 80027e4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80027e8:	61e3      	str	r3, [r4, #28]

    /* Write DMA2D BGPFCCR register */
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80027ea:	6265      	str	r5, [r4, #36]	@ 0x24

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 80027ec:	6160      	str	r0, [r4, #20]

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 80027ee:	4b03      	ldr	r3, [pc, #12]	@ (80027fc <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x3c>)
 80027f0:	6023      	str	r3, [r4, #0]
}
 80027f2:	bc30      	pop	{r4, r5}
 80027f4:	4770      	bx	lr
 80027f6:	bf00      	nop
 80027f8:	4002b000 	.word	0x4002b000
 80027fc:	00020001 	.word	0x00020001

08002800 <_ZN8touchgfx7MVPHeapD1Ev>:
    {
    }

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
    {
 8002800:	4b01      	ldr	r3, [pc, #4]	@ (8002808 <_ZN8touchgfx7MVPHeapD1Ev+0x8>)
 8002802:	6003      	str	r3, [r0, #0]
    }
 8002804:	4770      	bx	lr
 8002806:	bf00      	nop
 8002808:	0802ff8c 	.word	0x0802ff8c

0800280c <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800280c:	4770      	bx	lr

0800280e <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800280e:	4770      	bx	lr

08002810 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002810:	4770      	bx	lr

08002812 <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
    {
        (void)c; // Unused variable
    }
 8002812:	4770      	bx	lr

08002814 <_ZN8touchgfx15UIEventListener15handleTickEventEv>:
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
    {
    }
 8002814:	4770      	bx	lr

08002816 <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
    {
    }
 8002816:	4770      	bx	lr

08002818 <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
    {
 8002818:	4b01      	ldr	r3, [pc, #4]	@ (8002820 <_ZN8touchgfx15UIEventListenerD1Ev+0x8>)
 800281a:	6003      	str	r3, [r0, #0]
    }
 800281c:	4770      	bx	lr
 800281e:	bf00      	nop
 8002820:	0802ff9c 	.word	0x0802ff9c

08002824 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002824:	4770      	bx	lr

08002826 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002826:	4770      	bx	lr

08002828 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002828:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 800282c:	6808      	ldr	r0, [r1, #0]
 800282e:	6849      	ldr	r1, [r1, #4]
 8002830:	c303      	stmia	r3!, {r0, r1}
    }
 8002832:	4770      	bx	lr

08002834 <_ZN8touchgfx14MVPApplicationD1Ev>:
 *
 * It maintains a callback for transitioning and evaluates this at each tick.
 *
 * @see Application
 */
class MVPApplication : public Application
 8002834:	4a03      	ldr	r2, [pc, #12]	@ (8002844 <_ZN8touchgfx14MVPApplicationD1Ev+0x10>)
 8002836:	6002      	str	r2, [r0, #0]
class Application : public UIEventListener
 8002838:	4a03      	ldr	r2, [pc, #12]	@ (8002848 <_ZN8touchgfx14MVPApplicationD1Ev+0x14>)
 800283a:	6002      	str	r2, [r0, #0]
    {
 800283c:	4a03      	ldr	r2, [pc, #12]	@ (800284c <_ZN8touchgfx14MVPApplicationD1Ev+0x18>)
 800283e:	6002      	str	r2, [r0, #0]
 8002840:	4770      	bx	lr
 8002842:	bf00      	nop
 8002844:	0802fff0 	.word	0x0802fff0
 8002848:	080330b8 	.word	0x080330b8
 800284c:	0802ff9c 	.word	0x0802ff9c

08002850 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002850:	4a07      	ldr	r2, [pc, #28]	@ (8002870 <_ZN23FrontendApplicationBaseD1Ev+0x20>)
 8002852:	6002      	str	r2, [r0, #0]
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002854:	4a07      	ldr	r2, [pc, #28]	@ (8002874 <_ZN23FrontendApplicationBaseD1Ev+0x24>)
 8002856:	f8c0 2144 	str.w	r2, [r0, #324]	@ 0x144
    {
 800285a:	4a07      	ldr	r2, [pc, #28]	@ (8002878 <_ZN23FrontendApplicationBaseD1Ev+0x28>)
 800285c:	f8c0 2144 	str.w	r2, [r0, #324]	@ 0x144
 8002860:	4a06      	ldr	r2, [pc, #24]	@ (800287c <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 8002862:	6002      	str	r2, [r0, #0]
 8002864:	4a06      	ldr	r2, [pc, #24]	@ (8002880 <_ZN23FrontendApplicationBaseD1Ev+0x30>)
 8002866:	6002      	str	r2, [r0, #0]
 8002868:	4a06      	ldr	r2, [pc, #24]	@ (8002884 <_ZN23FrontendApplicationBaseD1Ev+0x34>)
 800286a:	6002      	str	r2, [r0, #0]
 800286c:	4770      	bx	lr
 800286e:	bf00      	nop
 8002870:	0803005c 	.word	0x0803005c
 8002874:	08030044 	.word	0x08030044
 8002878:	0802ffd8 	.word	0x0802ffd8
 800287c:	0802fff0 	.word	0x0802fff0
 8002880:	080330b8 	.word	0x080330b8
 8002884:	0802ff9c 	.word	0x0802ff9c

08002888 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8002888:	4a08      	ldr	r2, [pc, #32]	@ (80028ac <_ZN19FrontendApplicationD1Ev+0x24>)
 800288a:	6002      	str	r2, [r0, #0]
 800288c:	4a08      	ldr	r2, [pc, #32]	@ (80028b0 <_ZN19FrontendApplicationD1Ev+0x28>)
 800288e:	6002      	str	r2, [r0, #0]
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002890:	4a08      	ldr	r2, [pc, #32]	@ (80028b4 <_ZN19FrontendApplicationD1Ev+0x2c>)
 8002892:	f8c0 2144 	str.w	r2, [r0, #324]	@ 0x144
    {
 8002896:	4a08      	ldr	r2, [pc, #32]	@ (80028b8 <_ZN19FrontendApplicationD1Ev+0x30>)
 8002898:	f8c0 2144 	str.w	r2, [r0, #324]	@ 0x144
 800289c:	4a07      	ldr	r2, [pc, #28]	@ (80028bc <_ZN19FrontendApplicationD1Ev+0x34>)
 800289e:	6002      	str	r2, [r0, #0]
 80028a0:	4a07      	ldr	r2, [pc, #28]	@ (80028c0 <_ZN19FrontendApplicationD1Ev+0x38>)
 80028a2:	6002      	str	r2, [r0, #0]
 80028a4:	4a07      	ldr	r2, [pc, #28]	@ (80028c4 <_ZN19FrontendApplicationD1Ev+0x3c>)
 80028a6:	6002      	str	r2, [r0, #0]
 80028a8:	4770      	bx	lr
 80028aa:	bf00      	nop
 80028ac:	080300b0 	.word	0x080300b0
 80028b0:	0803005c 	.word	0x0803005c
 80028b4:	08030044 	.word	0x08030044
 80028b8:	0802ffd8 	.word	0x0802ffd8
 80028bc:	0802fff0 	.word	0x0802fff0
 80028c0:	080330b8 	.word	0x080330b8
 80028c4:	0802ff9c 	.word	0x0802ff9c

080028c8 <_ZN16FrontendHeapBaseD1Ev>:
 * view only. The largest of these classes are determined at compile-time using template
 * magic. As such, it is important to add all presenters, views and transitions to the
 * type lists in this class.
 *
 */
class FrontendHeapBase : public touchgfx::MVPHeap
 80028c8:	4a02      	ldr	r2, [pc, #8]	@ (80028d4 <_ZN16FrontendHeapBaseD1Ev+0xc>)
 80028ca:	6002      	str	r2, [r0, #0]
    {
 80028cc:	4a02      	ldr	r2, [pc, #8]	@ (80028d8 <_ZN16FrontendHeapBaseD1Ev+0x10>)
 80028ce:	6002      	str	r2, [r0, #0]
 80028d0:	4770      	bx	lr
 80028d2:	bf00      	nop
 80028d4:	08030104 	.word	0x08030104
 80028d8:	0802ff8c 	.word	0x0802ff8c

080028dc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80028dc:	4a02      	ldr	r2, [pc, #8]	@ (80028e8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0xc>)
 80028de:	6002      	str	r2, [r0, #0]
    {
 80028e0:	4a02      	ldr	r2, [pc, #8]	@ (80028ec <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x10>)
 80028e2:	6002      	str	r2, [r0, #0]
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80028e4:	4770      	bx	lr
 80028e6:	bf00      	nop
 80028e8:	08030044 	.word	0x08030044
 80028ec:	0802ffd8 	.word	0x0802ffd8

080028f0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15CoverTransitionILNS_9DirectionE1EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80028f0:	2001      	movs	r0, #1
 80028f2:	4770      	bx	lr

080028f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15CoverTransitionILNS_9DirectionE1EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80028f4:	2010      	movs	r0, #16
 80028f6:	4770      	bx	lr

080028f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15CoverTransitionILNS_9DirectionE1EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80028f8:	0109      	lsls	r1, r1, #4
 80028fa:	3108      	adds	r1, #8
    }
 80028fc:	4408      	add	r0, r1
 80028fe:	4770      	bx	lr

08002900 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15CoverTransitionILNS_9DirectionE1EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8002900:	0109      	lsls	r1, r1, #4
 8002902:	3108      	adds	r1, #8
    }
 8002904:	4408      	add	r0, r1
 8002906:	4770      	bx	lr

08002908 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002908:	2001      	movs	r0, #1
 800290a:	4770      	bx	lr

0800290c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 800290c:	f643 00b8 	movw	r0, #14520	@ 0x38b8
 8002910:	4770      	bx	lr

08002912 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002912:	f643 03b8 	movw	r3, #14520	@ 0x38b8
 8002916:	fb03 f101 	mul.w	r1, r3, r1
 800291a:	3108      	adds	r1, #8
    }
 800291c:	4408      	add	r0, r1
 800291e:	4770      	bx	lr

08002920 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002920:	f643 03b8 	movw	r3, #14520	@ 0x38b8
 8002924:	fb03 f101 	mul.w	r1, r3, r1
 8002928:	3108      	adds	r1, #8
    }
 800292a:	4408      	add	r0, r1
 800292c:	4770      	bx	lr

0800292e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800292e:	2001      	movs	r0, #1
 8002930:	4770      	bx	lr

08002932 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002932:	2010      	movs	r0, #16
 8002934:	4770      	bx	lr

08002936 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002936:	0109      	lsls	r1, r1, #4
 8002938:	3108      	adds	r1, #8
    }
 800293a:	4408      	add	r0, r1
 800293c:	4770      	bx	lr

0800293e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800293e:	0109      	lsls	r1, r1, #4
 8002940:	3108      	adds	r1, #8
    }
 8002942:	4408      	add	r0, r1
 8002944:	4770      	bx	lr

08002946 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002946:	b508      	push	{r3, lr}
 8002948:	4603      	mov	r3, r0
    {
        (pobject->*pmemfun)();
 800294a:	6841      	ldr	r1, [r0, #4]
 800294c:	68c2      	ldr	r2, [r0, #12]
 800294e:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002952:	f012 0f01 	tst.w	r2, #1
 8002956:	d102      	bne.n	800295e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x18>
 8002958:	689b      	ldr	r3, [r3, #8]
 800295a:	4798      	blx	r3
    }
 800295c:	bd08      	pop	{r3, pc}
 800295e:	ea4f 0c62 	mov.w	ip, r2, asr #1
        (pobject->*pmemfun)();
 8002962:	f851 200c 	ldr.w	r2, [r1, ip]
 8002966:	689b      	ldr	r3, [r3, #8]
 8002968:	58d3      	ldr	r3, [r2, r3]
 800296a:	e7f6      	b.n	800295a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x14>

0800296c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 800296c:	6843      	ldr	r3, [r0, #4]
 800296e:	b14b      	cbz	r3, 8002984 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x18>
 8002970:	6883      	ldr	r3, [r0, #8]
 8002972:	b10b      	cbz	r3, 8002978 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
 8002974:	2001      	movs	r0, #1
 8002976:	4770      	bx	lr
 8002978:	68c3      	ldr	r3, [r0, #12]
 800297a:	f013 0f01 	tst.w	r3, #1
 800297e:	d003      	beq.n	8002988 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x1c>
 8002980:	2001      	movs	r0, #1
 8002982:	4770      	bx	lr
 8002984:	2000      	movs	r0, #0
 8002986:	4770      	bx	lr
 8002988:	2000      	movs	r0, #0
    }
 800298a:	4770      	bx	lr

0800298c <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 800298c:	b510      	push	{r4, lr}
 800298e:	4604      	mov	r4, r0
    {
 8002990:	4b03      	ldr	r3, [pc, #12]	@ (80029a0 <_ZN8touchgfx15UIEventListenerD0Ev+0x14>)
 8002992:	6003      	str	r3, [r0, #0]
    }
 8002994:	2104      	movs	r1, #4
 8002996:	f02a ff8a 	bl	802d8ae <_ZdlPvj>
 800299a:	4620      	mov	r0, r4
 800299c:	bd10      	pop	{r4, pc}
 800299e:	bf00      	nop
 80029a0:	0802ff9c 	.word	0x0802ff9c

080029a4 <_ZN16FrontendHeapBaseD0Ev>:
 80029a4:	b510      	push	{r4, lr}
 80029a6:	4604      	mov	r4, r0
 80029a8:	4b04      	ldr	r3, [pc, #16]	@ (80029bc <_ZN16FrontendHeapBaseD0Ev+0x18>)
 80029aa:	6003      	str	r3, [r0, #0]
 80029ac:	4b04      	ldr	r3, [pc, #16]	@ (80029c0 <_ZN16FrontendHeapBaseD0Ev+0x1c>)
 80029ae:	6003      	str	r3, [r0, #0]
 80029b0:	2114      	movs	r1, #20
 80029b2:	f02a ff7c 	bl	802d8ae <_ZdlPvj>
 80029b6:	4620      	mov	r0, r4
 80029b8:	bd10      	pop	{r4, pc}
 80029ba:	bf00      	nop
 80029bc:	08030104 	.word	0x08030104
 80029c0:	0802ff8c 	.word	0x0802ff8c

080029c4 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 80029c4:	b510      	push	{r4, lr}
 80029c6:	4604      	mov	r4, r0
    {
 80029c8:	4b03      	ldr	r3, [pc, #12]	@ (80029d8 <_ZN8touchgfx7MVPHeapD0Ev+0x14>)
 80029ca:	6003      	str	r3, [r0, #0]
    }
 80029cc:	2114      	movs	r1, #20
 80029ce:	f02a ff6e 	bl	802d8ae <_ZdlPvj>
 80029d2:	4620      	mov	r0, r4
 80029d4:	bd10      	pop	{r4, pc}
 80029d6:	bf00      	nop
 80029d8:	0802ff8c 	.word	0x0802ff8c

080029dc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80029dc:	b510      	push	{r4, lr}
 80029de:	4604      	mov	r4, r0
 80029e0:	4b04      	ldr	r3, [pc, #16]	@ (80029f4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev+0x18>)
 80029e2:	6003      	str	r3, [r0, #0]
    {
 80029e4:	4b04      	ldr	r3, [pc, #16]	@ (80029f8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev+0x1c>)
 80029e6:	6003      	str	r3, [r0, #0]
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80029e8:	2110      	movs	r1, #16
 80029ea:	f02a ff60 	bl	802d8ae <_ZdlPvj>
 80029ee:	4620      	mov	r0, r4
 80029f0:	bd10      	pop	{r4, pc}
 80029f2:	bf00      	nop
 80029f4:	08030044 	.word	0x08030044
 80029f8:	0802ffd8 	.word	0x0802ffd8

080029fc <_ZN8touchgfx14MVPApplicationD0Ev>:
 80029fc:	b510      	push	{r4, lr}
 80029fe:	4604      	mov	r4, r0
 8002a00:	4b05      	ldr	r3, [pc, #20]	@ (8002a18 <_ZN8touchgfx14MVPApplicationD0Ev+0x1c>)
 8002a02:	6003      	str	r3, [r0, #0]
 8002a04:	4b05      	ldr	r3, [pc, #20]	@ (8002a1c <_ZN8touchgfx14MVPApplicationD0Ev+0x20>)
 8002a06:	6003      	str	r3, [r0, #0]
    {
 8002a08:	4b05      	ldr	r3, [pc, #20]	@ (8002a20 <_ZN8touchgfx14MVPApplicationD0Ev+0x24>)
 8002a0a:	6003      	str	r3, [r0, #0]
 8002a0c:	f44f 71a2 	mov.w	r1, #324	@ 0x144
 8002a10:	f02a ff4d 	bl	802d8ae <_ZdlPvj>
 8002a14:	4620      	mov	r0, r4
 8002a16:	bd10      	pop	{r4, pc}
 8002a18:	0802fff0 	.word	0x0802fff0
 8002a1c:	080330b8 	.word	0x080330b8
 8002a20:	0802ff9c 	.word	0x0802ff9c

08002a24 <_ZN23FrontendApplicationBaseD0Ev>:
 8002a24:	b510      	push	{r4, lr}
 8002a26:	4604      	mov	r4, r0
 8002a28:	4b09      	ldr	r3, [pc, #36]	@ (8002a50 <_ZN23FrontendApplicationBaseD0Ev+0x2c>)
 8002a2a:	6003      	str	r3, [r0, #0]
 8002a2c:	4b09      	ldr	r3, [pc, #36]	@ (8002a54 <_ZN23FrontendApplicationBaseD0Ev+0x30>)
 8002a2e:	f8c0 3144 	str.w	r3, [r0, #324]	@ 0x144
    {
 8002a32:	4b09      	ldr	r3, [pc, #36]	@ (8002a58 <_ZN23FrontendApplicationBaseD0Ev+0x34>)
 8002a34:	f8c0 3144 	str.w	r3, [r0, #324]	@ 0x144
 8002a38:	4b08      	ldr	r3, [pc, #32]	@ (8002a5c <_ZN23FrontendApplicationBaseD0Ev+0x38>)
 8002a3a:	6003      	str	r3, [r0, #0]
 8002a3c:	4b08      	ldr	r3, [pc, #32]	@ (8002a60 <_ZN23FrontendApplicationBaseD0Ev+0x3c>)
 8002a3e:	6003      	str	r3, [r0, #0]
 8002a40:	4b08      	ldr	r3, [pc, #32]	@ (8002a64 <_ZN23FrontendApplicationBaseD0Ev+0x40>)
 8002a42:	6003      	str	r3, [r0, #0]
 8002a44:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8002a48:	f02a ff31 	bl	802d8ae <_ZdlPvj>
 8002a4c:	4620      	mov	r0, r4
 8002a4e:	bd10      	pop	{r4, pc}
 8002a50:	0803005c 	.word	0x0803005c
 8002a54:	08030044 	.word	0x08030044
 8002a58:	0802ffd8 	.word	0x0802ffd8
 8002a5c:	0802fff0 	.word	0x0802fff0
 8002a60:	080330b8 	.word	0x080330b8
 8002a64:	0802ff9c 	.word	0x0802ff9c

08002a68 <_ZN19FrontendApplicationD0Ev>:
 8002a68:	b510      	push	{r4, lr}
 8002a6a:	4604      	mov	r4, r0
 8002a6c:	4b0a      	ldr	r3, [pc, #40]	@ (8002a98 <_ZN19FrontendApplicationD0Ev+0x30>)
 8002a6e:	6003      	str	r3, [r0, #0]
 8002a70:	4b0a      	ldr	r3, [pc, #40]	@ (8002a9c <_ZN19FrontendApplicationD0Ev+0x34>)
 8002a72:	6003      	str	r3, [r0, #0]
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002a74:	4b0a      	ldr	r3, [pc, #40]	@ (8002aa0 <_ZN19FrontendApplicationD0Ev+0x38>)
 8002a76:	f8c0 3144 	str.w	r3, [r0, #324]	@ 0x144
    {
 8002a7a:	4b0a      	ldr	r3, [pc, #40]	@ (8002aa4 <_ZN19FrontendApplicationD0Ev+0x3c>)
 8002a7c:	f8c0 3144 	str.w	r3, [r0, #324]	@ 0x144
 8002a80:	4b09      	ldr	r3, [pc, #36]	@ (8002aa8 <_ZN19FrontendApplicationD0Ev+0x40>)
 8002a82:	6003      	str	r3, [r0, #0]
 8002a84:	4b09      	ldr	r3, [pc, #36]	@ (8002aac <_ZN19FrontendApplicationD0Ev+0x44>)
 8002a86:	6003      	str	r3, [r0, #0]
 8002a88:	4b09      	ldr	r3, [pc, #36]	@ (8002ab0 <_ZN19FrontendApplicationD0Ev+0x48>)
 8002a8a:	6003      	str	r3, [r0, #0]
 8002a8c:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8002a90:	f02a ff0d 	bl	802d8ae <_ZdlPvj>
 8002a94:	4620      	mov	r0, r4
 8002a96:	bd10      	pop	{r4, pc}
 8002a98:	080300b0 	.word	0x080300b0
 8002a9c:	0803005c 	.word	0x0803005c
 8002aa0:	08030044 	.word	0x08030044
 8002aa4:	0802ffd8 	.word	0x0802ffd8
 8002aa8:	0802fff0 	.word	0x0802fff0
 8002aac:	080330b8 	.word	0x080330b8
 8002ab0:	0802ff9c 	.word	0x0802ff9c

08002ab4 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 8002ab4:	b508      	push	{r3, lr}
    {
        app.gotoScreen2ScreenNoTransition();
 8002ab6:	4608      	mov	r0, r1
 8002ab8:	f001 fed8 	bl	800486c <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
    }
 8002abc:	bd08      	pop	{r3, pc}

08002abe <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 8002abe:	b508      	push	{r3, lr}
    {
        gotoScreen2ScreenNoTransition();
 8002ac0:	f001 fed4 	bl	800486c <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
    }
 8002ac4:	bd08      	pop	{r3, pc}

08002ac6 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8002ac6:	b510      	push	{r4, lr}
 8002ac8:	4604      	mov	r4, r0
    {
        model.tick();
 8002aca:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 8002ace:	f007 fd09 	bl	800a4e4 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8002ad2:	4620      	mov	r0, r4
 8002ad4:	f018 f860 	bl	801ab98 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 8002ad8:	bd10      	pop	{r4, pc}
	...

08002adc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15CoverTransitionILNS_9DirectionE1EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8002adc:	b510      	push	{r4, lr}
 8002ade:	4604      	mov	r4, r0
 8002ae0:	4b02      	ldr	r3, [pc, #8]	@ (8002aec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15CoverTransitionILNS_9DirectionE1EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8002ae2:	6003      	str	r3, [r0, #0]
 8002ae4:	f00f ff0d 	bl	8012902 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002ae8:	4620      	mov	r0, r4
 8002aea:	bd10      	pop	{r4, pc}
 8002aec:	08030180 	.word	0x08030180

08002af0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15CoverTransitionILNS_9DirectionE1EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8002af0:	b510      	push	{r4, lr}
 8002af2:	4604      	mov	r4, r0
 8002af4:	4b04      	ldr	r3, [pc, #16]	@ (8002b08 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15CoverTransitionILNS_9DirectionE1EEENS2_INS1_3NilES6_EEEELt1EED0Ev+0x18>)
 8002af6:	6003      	str	r3, [r0, #0]
 8002af8:	f00f ff03 	bl	8012902 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002afc:	2118      	movs	r1, #24
 8002afe:	4620      	mov	r0, r4
 8002b00:	f02a fed5 	bl	802d8ae <_ZdlPvj>
 8002b04:	4620      	mov	r0, r4
 8002b06:	bd10      	pop	{r4, pc}
 8002b08:	08030180 	.word	0x08030180

08002b0c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002b0c:	b510      	push	{r4, lr}
 8002b0e:	4604      	mov	r4, r0
 8002b10:	4b02      	ldr	r3, [pc, #8]	@ (8002b1c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002b12:	6003      	str	r3, [r0, #0]
 8002b14:	f00f fef5 	bl	8012902 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002b18:	4620      	mov	r0, r4
 8002b1a:	bd10      	pop	{r4, pc}
 8002b1c:	0803014c 	.word	0x0803014c

08002b20 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002b20:	b510      	push	{r4, lr}
 8002b22:	4604      	mov	r4, r0
 8002b24:	4b05      	ldr	r3, [pc, #20]	@ (8002b3c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
 8002b26:	6003      	str	r3, [r0, #0]
 8002b28:	f00f feeb 	bl	8012902 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002b2c:	f44f 5163 	mov.w	r1, #14528	@ 0x38c0
 8002b30:	4620      	mov	r0, r4
 8002b32:	f02a febc 	bl	802d8ae <_ZdlPvj>
 8002b36:	4620      	mov	r0, r4
 8002b38:	bd10      	pop	{r4, pc}
 8002b3a:	bf00      	nop
 8002b3c:	0803014c 	.word	0x0803014c

08002b40 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002b40:	b510      	push	{r4, lr}
 8002b42:	4604      	mov	r4, r0
 8002b44:	4b02      	ldr	r3, [pc, #8]	@ (8002b50 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002b46:	6003      	str	r3, [r0, #0]
 8002b48:	f00f fedb 	bl	8012902 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002b4c:	4620      	mov	r0, r4
 8002b4e:	bd10      	pop	{r4, pc}
 8002b50:	08030118 	.word	0x08030118

08002b54 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002b54:	b510      	push	{r4, lr}
 8002b56:	4604      	mov	r4, r0
 8002b58:	4b04      	ldr	r3, [pc, #16]	@ (8002b6c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
 8002b5a:	6003      	str	r3, [r0, #0]
 8002b5c:	f00f fed1 	bl	8012902 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002b60:	2118      	movs	r1, #24
 8002b62:	4620      	mov	r0, r4
 8002b64:	f02a fea3 	bl	802d8ae <_ZdlPvj>
 8002b68:	4620      	mov	r0, r4
 8002b6a:	bd10      	pop	{r4, pc}
 8002b6c:	08030118 	.word	0x08030118

08002b70 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8002b70:	b510      	push	{r4, lr}
 8002b72:	4604      	mov	r4, r0
 8002b74:	4b19      	ldr	r3, [pc, #100]	@ (8002bdc <_ZN12FrontendHeapD1Ev+0x6c>)
 8002b76:	6003      	str	r3, [r0, #0]
    virtual ~FrontendApplication() { }
 8002b78:	f500 5340 	add.w	r3, r0, #12288	@ 0x3000
 8002b7c:	4a18      	ldr	r2, [pc, #96]	@ (8002be0 <_ZN12FrontendHeapD1Ev+0x70>)
 8002b7e:	f8c3 2908 	str.w	r2, [r3, #2312]	@ 0x908
    virtual ~FrontendApplicationBase() { }
 8002b82:	4a18      	ldr	r2, [pc, #96]	@ (8002be4 <_ZN12FrontendHeapD1Ev+0x74>)
 8002b84:	f8c3 2908 	str.w	r2, [r3, #2312]	@ 0x908
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002b88:	4a17      	ldr	r2, [pc, #92]	@ (8002be8 <_ZN12FrontendHeapD1Ev+0x78>)
 8002b8a:	f8c3 2a4c 	str.w	r2, [r3, #2636]	@ 0xa4c
    {
 8002b8e:	4a17      	ldr	r2, [pc, #92]	@ (8002bec <_ZN12FrontendHeapD1Ev+0x7c>)
 8002b90:	f8c3 2a4c 	str.w	r2, [r3, #2636]	@ 0xa4c
 8002b94:	4a16      	ldr	r2, [pc, #88]	@ (8002bf0 <_ZN12FrontendHeapD1Ev+0x80>)
 8002b96:	f8c3 2908 	str.w	r2, [r3, #2312]	@ 0x908
 8002b9a:	4a16      	ldr	r2, [pc, #88]	@ (8002bf4 <_ZN12FrontendHeapD1Ev+0x84>)
 8002b9c:	f8c3 2908 	str.w	r2, [r3, #2312]	@ 0x908
 8002ba0:	4a15      	ldr	r2, [pc, #84]	@ (8002bf8 <_ZN12FrontendHeapD1Ev+0x88>)
 8002ba2:	f8c3 2908 	str.w	r2, [r3, #2312]	@ 0x908
 8002ba6:	4a15      	ldr	r2, [pc, #84]	@ (8002bfc <_ZN12FrontendHeapD1Ev+0x8c>)
 8002ba8:	f8c3 28ec 	str.w	r2, [r3, #2284]	@ 0x8ec
 8002bac:	f500 5063 	add.w	r0, r0, #14528	@ 0x38c0
 8002bb0:	302c      	adds	r0, #44	@ 0x2c
 8002bb2:	f00f fea6 	bl	8012902 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002bb6:	4620      	mov	r0, r4
 8002bb8:	4b11      	ldr	r3, [pc, #68]	@ (8002c00 <_ZN12FrontendHeapD1Ev+0x90>)
 8002bba:	f840 3f2c 	str.w	r3, [r0, #44]!
 8002bbe:	f00f fea0 	bl	8012902 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002bc2:	4620      	mov	r0, r4
 8002bc4:	4b0f      	ldr	r3, [pc, #60]	@ (8002c04 <_ZN12FrontendHeapD1Ev+0x94>)
 8002bc6:	f840 3f14 	str.w	r3, [r0, #20]!
 8002bca:	f00f fe9a 	bl	8012902 <_ZN8touchgfx17AbstractPartitionD1Ev>
class FrontendHeapBase : public touchgfx::MVPHeap
 8002bce:	4b0e      	ldr	r3, [pc, #56]	@ (8002c08 <_ZN12FrontendHeapD1Ev+0x98>)
 8002bd0:	6023      	str	r3, [r4, #0]
    {
 8002bd2:	4b0e      	ldr	r3, [pc, #56]	@ (8002c0c <_ZN12FrontendHeapD1Ev+0x9c>)
 8002bd4:	6023      	str	r3, [r4, #0]
 8002bd6:	4620      	mov	r0, r4
 8002bd8:	bd10      	pop	{r4, pc}
 8002bda:	bf00      	nop
 8002bdc:	080301b4 	.word	0x080301b4
 8002be0:	080300b0 	.word	0x080300b0
 8002be4:	0803005c 	.word	0x0803005c
 8002be8:	08030044 	.word	0x08030044
 8002bec:	0802ffd8 	.word	0x0802ffd8
 8002bf0:	0802fff0 	.word	0x0802fff0
 8002bf4:	080330b8 	.word	0x080330b8
 8002bf8:	0802ff9c 	.word	0x0802ff9c
 8002bfc:	08030180 	.word	0x08030180
 8002c00:	0803014c 	.word	0x0803014c
 8002c04:	08030118 	.word	0x08030118
 8002c08:	08030104 	.word	0x08030104
 8002c0c:	0802ff8c 	.word	0x0802ff8c

08002c10 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8002c10:	b508      	push	{r3, lr}
 8002c12:	4802      	ldr	r0, [pc, #8]	@ (8002c1c <__tcf_0+0xc>)
 8002c14:	f7ff ffac 	bl	8002b70 <_ZN12FrontendHeapD1Ev>
 8002c18:	bd08      	pop	{r3, pc}
 8002c1a:	bf00      	nop
 8002c1c:	20001568 	.word	0x20001568

08002c20 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8002c20:	b510      	push	{r4, lr}
 8002c22:	4604      	mov	r4, r0
 8002c24:	f7ff ffa4 	bl	8002b70 <_ZN12FrontendHeapD1Ev>
 8002c28:	f643 2164 	movw	r1, #14948	@ 0x3a64
 8002c2c:	4620      	mov	r0, r4
 8002c2e:	f02a fe3e 	bl	802d8ae <_ZdlPvj>
 8002c32:	4620      	mov	r0, r4
 8002c34:	bd10      	pop	{r4, pc}
	...

08002c38 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 8002c38:	b510      	push	{r4, lr}
 8002c3a:	f8bd e008 	ldrh.w	lr, [sp, #8]
 8002c3e:	f8bd c00c 	ldrh.w	ip, [sp, #12]
          maxBlockLines(20)
 8002c42:	4c3c      	ldr	r4, [pc, #240]	@ (8002d34 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0xfc>)
 8002c44:	6004      	str	r4, [r0, #0]
        : dma(dmaInterface),
 8002c46:	6041      	str	r1, [r0, #4]
          lcdRef(display),
 8002c48:	6082      	str	r2, [r0, #8]
          touchController(touchCtrl),
 8002c4a:	60c3      	str	r3, [r0, #12]
          mcuInstrumentation(0),
 8002c4c:	2300      	movs	r3, #0
 8002c4e:	6103      	str	r3, [r0, #16]
          buttonController(0),
 8002c50:	6143      	str	r3, [r0, #20]
          frameBufferAllocator(0),
 8002c52:	6183      	str	r3, [r0, #24]

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
            : startX(0),
 8002c54:	8383      	strh	r3, [r0, #28]
              startY(0),
 8002c56:	83c3      	strh	r3, [r0, #30]
              downX(0),
 8002c58:	8403      	strh	r3, [r0, #32]
              downY(0),
 8002c5a:	8443      	strh	r3, [r0, #34]	@ 0x22
              tickCount(0),
 8002c5c:	8483      	strh	r3, [r0, #36]	@ 0x24
              velocityX(0),
 8002c5e:	84c3      	strh	r3, [r0, #38]	@ 0x26
              velocityY(0),
 8002c60:	8503      	strh	r3, [r0, #40]	@ 0x28
              inProgress(false)
 8002c62:	f880 302a 	strb.w	r3, [r0, #42]	@ 0x2a
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8002c66:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8002c68:	8603      	strh	r3, [r0, #48]	@ 0x30
          nativeDisplayOrientation(ORIENTATION_LANDSCAPE),
 8002c6a:	f880 3034 	strb.w	r3, [r0, #52]	@ 0x34
          taskDelayFunc(0),
 8002c6e:	6383      	str	r3, [r0, #56]	@ 0x38
          frameBuffer0(0),
 8002c70:	63c3      	str	r3, [r0, #60]	@ 0x3c
          frameBuffer1(0),
 8002c72:	6403      	str	r3, [r0, #64]	@ 0x40
          frameBuffer2(0),
 8002c74:	6443      	str	r3, [r0, #68]	@ 0x44
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8002c76:	f880 3048 	strb.w	r3, [r0, #72]	@ 0x48
          fingerSize(1),
 8002c7a:	2201      	movs	r2, #1
 8002c7c:	f880 2049 	strb.w	r2, [r0, #73]	@ 0x49
          lockDMAToPorch(false),
 8002c80:	f880 304a 	strb.w	r3, [r0, #74]	@ 0x4a
          frameBufferUpdatedThisFrame(false),
 8002c84:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
          auxiliaryLCD(0),
 8002c88:	64c3      	str	r3, [r0, #76]	@ 0x4c
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8002c8a:	f8a0 3050 	strh.w	r3, [r0, #80]	@ 0x50
 8002c8e:	f8a0 3052 	strh.w	r3, [r0, #82]	@ 0x52
 8002c92:	f8a0 3054 	strh.w	r3, [r0, #84]	@ 0x54
 8002c96:	f8a0 3056 	strh.w	r3, [r0, #86]	@ 0x56
          useAuxiliaryLCD(false),
 8002c9a:	f880 3058 	strb.w	r3, [r0, #88]	@ 0x58
          listener(0),
 8002c9e:	65c3      	str	r3, [r0, #92]	@ 0x5c
          lastX(0),
 8002ca0:	6603      	str	r3, [r0, #96]	@ 0x60
          lastY(0),
 8002ca2:	6643      	str	r3, [r0, #100]	@ 0x64
          touchSampleRate(1),
 8002ca4:	f880 2068 	strb.w	r2, [r0, #104]	@ 0x68
          mcuLoadPct(0),
 8002ca8:	f880 3069 	strb.w	r3, [r0, #105]	@ 0x69
          vSyncCnt(0),
 8002cac:	f880 306a 	strb.w	r3, [r0, #106]	@ 0x6a
          vSyncForFrame(1),
 8002cb0:	f880 206b 	strb.w	r2, [r0, #107]	@ 0x6b
          vSyncCompensationEnabled(false),
 8002cb4:	f880 306c 	strb.w	r3, [r0, #108]	@ 0x6c
          clientDirty(false),
 8002cb8:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
          swapRequested(false),
 8002cbc:	f880 306e 	strb.w	r3, [r0, #110]	@ 0x6e
          lastTouched(false),
 8002cc0:	f880 306f 	strb.w	r3, [r0, #111]	@ 0x6f
          updateMCULoad(0),
 8002cc4:	f880 3070 	strb.w	r3, [r0, #112]	@ 0x70
          cc_begin(0),
 8002cc8:	6743      	str	r3, [r0, #116]	@ 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8002cca:	f880 3078 	strb.w	r3, [r0, #120]	@ 0x78
          displayOrientationChangeRequested(false),
 8002cce:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
          useDMAAcceleration(true),
 8002cd2:	f880 207a 	strb.w	r2, [r0, #122]	@ 0x7a
          lastRenderMethod(HARDWARE),
 8002cd6:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
          isFrontPorchEntered(false),
 8002cda:	f880 307c 	strb.w	r3, [r0, #124]	@ 0x7c
          numberOfBlocks(4),
 8002cde:	2304      	movs	r3, #4
 8002ce0:	f880 307d 	strb.w	r3, [r0, #125]	@ 0x7d
          maxDrawingHeight(height / numberOfBlocks), // Best guess based on testing (but not ideal in all cases)
 8002ce4:	ea4f 039c 	mov.w	r3, ip, lsr #2
 8002ce8:	f8a0 307e 	strh.w	r3, [r0, #126]	@ 0x7e
          minDrawingHeight(maxDrawingHeight / 3),    // Best guess based on testing (but not ideal in all cases)
 8002cec:	f102 32aa 	add.w	r2, r2, #2863311530	@ 0xaaaaaaaa
 8002cf0:	fba2 2303 	umull	r2, r3, r2, r3
 8002cf4:	085b      	lsrs	r3, r3, #1
 8002cf6:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
          maxBlockLines(20)
 8002cfa:	2314      	movs	r3, #20
 8002cfc:	f8a0 3082 	strh.w	r3, [r0, #130]	@ 0x82
        instance = this;
 8002d00:	4b0d      	ldr	r3, [pc, #52]	@ (8002d38 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x100>)
 8002d02:	6018      	str	r0, [r3, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002d04:	4b0d      	ldr	r3, [pc, #52]	@ (8002d3c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x104>)
 8002d06:	f8a3 e000 	strh.w	lr, [r3]
 8002d0a:	4b0d      	ldr	r3, [pc, #52]	@ (8002d40 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x108>)
 8002d0c:	f8a3 e000 	strh.w	lr, [r3]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8002d10:	4b0c      	ldr	r3, [pc, #48]	@ (8002d44 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x10c>)
 8002d12:	f8a3 c000 	strh.w	ip, [r3]
 8002d16:	4b0c      	ldr	r3, [pc, #48]	@ (8002d48 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x110>)
 8002d18:	f8a3 c000 	strh.w	ip, [r3]
        DISPLAY_ROTATION = rotate0;
 8002d1c:	4b0b      	ldr	r3, [pc, #44]	@ (8002d4c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x114>)
 8002d1e:	2200      	movs	r2, #0
 8002d20:	701a      	strb	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8002d22:	45f4      	cmp	ip, lr
 8002d24:	bf94      	ite	ls
 8002d26:	f04f 0c00 	movls.w	ip, #0
 8002d2a:	f04f 0c01 	movhi.w	ip, #1
 8002d2e:	f880 c034 	strb.w	ip, [r0, #52]	@ 0x34
    }
 8002d32:	bd10      	pop	{r4, pc}
 8002d34:	08032288 	.word	0x08032288
 8002d38:	2000e40c 	.word	0x2000e40c
 8002d3c:	2000e400 	.word	0x2000e400
 8002d40:	2000e406 	.word	0x2000e406
 8002d44:	2000e402 	.word	0x2000e402
 8002d48:	2000e408 	.word	0x2000e408
 8002d4c:	2000e404 	.word	0x2000e404

08002d50 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 8002d50:	b510      	push	{r4, lr}
 8002d52:	4604      	mov	r4, r0
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002d54:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 8002d58:	b158      	cbz	r0, 8002d72 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x22>
 8002d5a:	6803      	ldr	r3, [r0, #0]
 8002d5c:	68db      	ldr	r3, [r3, #12]
 8002d5e:	4798      	blx	r3
 8002d60:	b138      	cbz	r0, 8002d72 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002d62:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 8002d66:	6803      	ldr	r3, [r0, #0]
 8002d68:	689b      	ldr	r3, [r3, #8]
 8002d6a:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002d6c:	2300      	movs	r3, #0
 8002d6e:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
        }
    }
 8002d72:	bd10      	pop	{r4, pc}

08002d74 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    virtual void handlePendingScreenTransition()
 8002d74:	b508      	push	{r3, lr}
        evaluatePendingScreenTransition();
 8002d76:	f7ff ffeb 	bl	8002d50 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 8002d7a:	bd08      	pop	{r3, pc}

08002d7c <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 8002d7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002d7e:	4604      	mov	r4, r0
                     app(model, *this)
 8002d80:	3014      	adds	r0, #20
 8002d82:	f104 072c 	add.w	r7, r4, #44	@ 0x2c
 8002d86:	f504 5663 	add.w	r6, r4, #14528	@ 0x38c0
 8002d8a:	362c      	adds	r6, #44	@ 0x2c
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
        : MVPHeap(presenters, views, transitions, app)
 8002d8c:	f504 5564 	add.w	r5, r4, #14592	@ 0x3900
 8002d90:	3508      	adds	r5, #8
          frontendApplication(app)
 8002d92:	4b15      	ldr	r3, [pc, #84]	@ (8002de8 <_ZN12FrontendHeapC1Ev+0x6c>)
 8002d94:	6023      	str	r3, [r4, #0]
        : presenterStorage(pres),
 8002d96:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8002d98:	60a7      	str	r7, [r4, #8]
          transitionStorage(tra),
 8002d9a:	60e6      	str	r6, [r4, #12]
          frontendApplication(app)
 8002d9c:	6125      	str	r5, [r4, #16]
 8002d9e:	4b13      	ldr	r3, [pc, #76]	@ (8002dec <_ZN12FrontendHeapC1Ev+0x70>)
 8002da0:	6023      	str	r3, [r4, #0]
 8002da2:	4b13      	ldr	r3, [pc, #76]	@ (8002df0 <_ZN12FrontendHeapC1Ev+0x74>)
 8002da4:	6023      	str	r3, [r4, #0]
 8002da6:	f00f fdad 	bl	8012904 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002daa:	4b12      	ldr	r3, [pc, #72]	@ (8002df4 <_ZN12FrontendHeapC1Ev+0x78>)
 8002dac:	6163      	str	r3, [r4, #20]
 8002dae:	4638      	mov	r0, r7
 8002db0:	f00f fda8 	bl	8012904 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002db4:	4b10      	ldr	r3, [pc, #64]	@ (8002df8 <_ZN12FrontendHeapC1Ev+0x7c>)
 8002db6:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8002db8:	4630      	mov	r0, r6
 8002dba:	f00f fda3 	bl	8012904 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002dbe:	f504 5340 	add.w	r3, r4, #12288	@ 0x3000
 8002dc2:	4a0e      	ldr	r2, [pc, #56]	@ (8002dfc <_ZN12FrontendHeapC1Ev+0x80>)
 8002dc4:	f8c3 28ec 	str.w	r2, [r3, #2284]	@ 0x8ec
 8002dc8:	f504 5664 	add.w	r6, r4, #14592	@ 0x3900
 8002dcc:	3604      	adds	r6, #4
 8002dce:	4630      	mov	r0, r6
 8002dd0:	f007 fb84 	bl	800a4dc <_ZN5ModelC1Ev>
 8002dd4:	4622      	mov	r2, r4
 8002dd6:	4631      	mov	r1, r6
 8002dd8:	4628      	mov	r0, r5
 8002dda:	f007 fb75 	bl	800a4c8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
        app.gotoScreen2ScreenNoTransition();
 8002dde:	4628      	mov	r0, r5
 8002de0:	f001 fd44 	bl	800486c <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
    {
        gotoStartScreen(app);
    }
 8002de4:	4620      	mov	r0, r4
 8002de6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002de8:	0802ff8c 	.word	0x0802ff8c
 8002dec:	08030104 	.word	0x08030104
 8002df0:	080301b4 	.word	0x080301b4
 8002df4:	08030118 	.word	0x08030118
 8002df8:	0803014c 	.word	0x0803014c
 8002dfc:	08030180 	.word	0x08030180

08002e00 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 8002e00:	b508      	push	{r3, lr}
        static FrontendHeap instance;
 8002e02:	4b0c      	ldr	r3, [pc, #48]	@ (8002e34 <_ZN12FrontendHeap11getInstanceEv+0x34>)
 8002e04:	681b      	ldr	r3, [r3, #0]
 8002e06:	f3bf 8f5b 	dmb	ish
 8002e0a:	f013 0f01 	tst.w	r3, #1
 8002e0e:	d001      	beq.n	8002e14 <_ZN12FrontendHeap11getInstanceEv+0x14>
    }
 8002e10:	4809      	ldr	r0, [pc, #36]	@ (8002e38 <_ZN12FrontendHeap11getInstanceEv+0x38>)
 8002e12:	bd08      	pop	{r3, pc}
        static FrontendHeap instance;
 8002e14:	4807      	ldr	r0, [pc, #28]	@ (8002e34 <_ZN12FrontendHeap11getInstanceEv+0x34>)
 8002e16:	f02a fd4c 	bl	802d8b2 <__cxa_guard_acquire>
 8002e1a:	2800      	cmp	r0, #0
 8002e1c:	d0f8      	beq.n	8002e10 <_ZN12FrontendHeap11getInstanceEv+0x10>
 8002e1e:	4806      	ldr	r0, [pc, #24]	@ (8002e38 <_ZN12FrontendHeap11getInstanceEv+0x38>)
 8002e20:	f7ff ffac 	bl	8002d7c <_ZN12FrontendHeapC1Ev>
 8002e24:	4805      	ldr	r0, [pc, #20]	@ (8002e3c <_ZN12FrontendHeap11getInstanceEv+0x3c>)
 8002e26:	f02b fca7 	bl	802e778 <atexit>
 8002e2a:	4802      	ldr	r0, [pc, #8]	@ (8002e34 <_ZN12FrontendHeap11getInstanceEv+0x34>)
 8002e2c:	f02a fd4d 	bl	802d8ca <__cxa_guard_release>
 8002e30:	e7ee      	b.n	8002e10 <_ZN12FrontendHeap11getInstanceEv+0x10>
 8002e32:	bf00      	nop
 8002e34:	20001564 	.word	0x20001564
 8002e38:	20001568 	.word	0x20001568
 8002e3c:	08002c11 	.word	0x08002c11

08002e40 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 800);

void touchgfx_init()
{
 8002e40:	b530      	push	{r4, r5, lr}
 8002e42:	b083      	sub	sp, #12
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8002e44:	f001 fb9e 	bl	8004584 <_ZN14BitmapDatabase11getInstanceEv>
 8002e48:	4605      	mov	r5, r0
 8002e4a:	f001 fb9f 	bl	800458c <_ZN14BitmapDatabase15getInstanceSizeEv>
 8002e4e:	4601      	mov	r1, r0
 8002e50:	2400      	movs	r4, #0
 8002e52:	9400      	str	r4, [sp, #0]
 8002e54:	4623      	mov	r3, r4
 8002e56:	4622      	mov	r2, r4
 8002e58:	4628      	mov	r0, r5
 8002e5a:	f01b fc95 	bl	801e788 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8002e5e:	4b09      	ldr	r3, [pc, #36]	@ (8002e84 <touchgfx_init+0x44>)
 8002e60:	4a09      	ldr	r2, [pc, #36]	@ (8002e88 <touchgfx_init+0x48>)
 8002e62:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8002e64:	4620      	mov	r0, r4
 8002e66:	f007 fab3 	bl	800a3d0 <_ZN8touchgfx5Texts11setLanguageEt>
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
 8002e6a:	4b08      	ldr	r3, [pc, #32]	@ (8002e8c <touchgfx_init+0x4c>)
 8002e6c:	4a08      	ldr	r2, [pc, #32]	@ (8002e90 <touchgfx_init+0x50>)
 8002e6e:	609a      	str	r2, [r3, #8]

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
 8002e70:	4808      	ldr	r0, [pc, #32]	@ (8002e94 <touchgfx_init+0x54>)
 8002e72:	f01b fbf1 	bl	801e658 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 8002e76:	f7ff ffc3 	bl	8002e00 <_ZN12FrontendHeap11getInstanceEv>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8002e7a:	4807      	ldr	r0, [pc, #28]	@ (8002e98 <touchgfx_init+0x58>)
 8002e7c:	f7ff f85c 	bl	8001f38 <_ZN11TouchGFXHAL10initializeEv>
}
 8002e80:	b003      	add	sp, #12
 8002e82:	bd30      	pop	{r4, r5, pc}
 8002e84:	2000e470 	.word	0x2000e470
 8002e88:	20000714 	.word	0x20000714
 8002e8c:	20000734 	.word	0x20000734
 8002e90:	20000718 	.word	0x20000718
 8002e94:	20000030 	.word	0x20000030
 8002e98:	20000690 	.word	0x20000690

08002e9c <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8002e9c:	4770      	bx	lr
	...

08002ea0 <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 8002ea0:	b508      	push	{r3, lr}
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8002ea2:	4802      	ldr	r0, [pc, #8]	@ (8002eac <touchgfx_taskEntry+0xc>)
 8002ea4:	f010 f843 	bl	8012f2e <_ZN8touchgfx3HAL9taskEntryEv>
}
 8002ea8:	bd08      	pop	{r3, pc}
 8002eaa:	bf00      	nop
 8002eac:	20000690 	.word	0x20000690

08002eb0 <_Z41__static_initialization_and_destruction_0ii>:
 8002eb0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002eb4:	b083      	sub	sp, #12
 8002eb6:	4604      	mov	r4, r0
 8002eb8:	460d      	mov	r5, r1
 8002eba:	2801      	cmp	r0, #1
 8002ebc:	d007      	beq.n	8002ece <_Z41__static_initialization_and_destruction_0ii+0x1e>
static TouchGFXHAL hal(dma, display, tc, 480, 800);
 8002ebe:	b91c      	cbnz	r4, 8002ec8 <_Z41__static_initialization_and_destruction_0ii+0x18>
 8002ec0:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002ec4:	429d      	cmp	r5, r3
 8002ec6:	d02a      	beq.n	8002f1e <_Z41__static_initialization_and_destruction_0ii+0x6e>
}
 8002ec8:	b003      	add	sp, #12
 8002eca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002ece:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002ed2:	4299      	cmp	r1, r3
 8002ed4:	d1f3      	bne.n	8002ebe <_Z41__static_initialization_and_destruction_0ii+0xe>
class TouchController
 8002ed6:	4f21      	ldr	r7, [pc, #132]	@ (8002f5c <_Z41__static_initialization_and_destruction_0ii+0xac>)
 8002ed8:	4b21      	ldr	r3, [pc, #132]	@ (8002f60 <_Z41__static_initialization_and_destruction_0ii+0xb0>)
 8002eda:	603b      	str	r3, [r7, #0]
{
public:
    STM32TouchController() {}
 8002edc:	4b21      	ldr	r3, [pc, #132]	@ (8002f64 <_Z41__static_initialization_and_destruction_0ii+0xb4>)
 8002ede:	603b      	str	r3, [r7, #0]
static STM32DMA dma;
 8002ee0:	f8df 80b8 	ldr.w	r8, [pc, #184]	@ 8002f9c <_Z41__static_initialization_and_destruction_0ii+0xec>
 8002ee4:	4640      	mov	r0, r8
 8002ee6:	f7ff fa79 	bl	80023dc <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8002eea:	f8df 90a4 	ldr.w	r9, [pc, #164]	@ 8002f90 <_Z41__static_initialization_and_destruction_0ii+0xe0>
 8002eee:	4648      	mov	r0, r9
 8002ef0:	f020 fd50 	bl	8023994 <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
 8002ef4:	481c      	ldr	r0, [pc, #112]	@ (8002f68 <_Z41__static_initialization_and_destruction_0ii+0xb8>)
 8002ef6:	f019 f835 	bl	801bf64 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        touchgfx::HAL(dma, display, tc, width, height)
 8002efa:	4e1c      	ldr	r6, [pc, #112]	@ (8002f6c <_Z41__static_initialization_and_destruction_0ii+0xbc>)
 8002efc:	f44f 7348 	mov.w	r3, #800	@ 0x320
 8002f00:	9301      	str	r3, [sp, #4]
 8002f02:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 8002f06:	9300      	str	r3, [sp, #0]
 8002f08:	463b      	mov	r3, r7
 8002f0a:	464a      	mov	r2, r9
 8002f0c:	4641      	mov	r1, r8
 8002f0e:	4630      	mov	r0, r6
 8002f10:	f7ff fe92 	bl	8002c38 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 8002f14:	4b16      	ldr	r3, [pc, #88]	@ (8002f70 <_Z41__static_initialization_and_destruction_0ii+0xc0>)
 8002f16:	6033      	str	r3, [r6, #0]
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8002f18:	4b16      	ldr	r3, [pc, #88]	@ (8002f74 <_Z41__static_initialization_and_destruction_0ii+0xc4>)
 8002f1a:	6033      	str	r3, [r6, #0]
    }
 8002f1c:	e7cf      	b.n	8002ebe <_Z41__static_initialization_and_destruction_0ii+0xe>
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8002f1e:	4b13      	ldr	r3, [pc, #76]	@ (8002f6c <_Z41__static_initialization_and_destruction_0ii+0xbc>)
 8002f20:	4a14      	ldr	r2, [pc, #80]	@ (8002f74 <_Z41__static_initialization_and_destruction_0ii+0xc4>)
 8002f22:	601a      	str	r2, [r3, #0]
class TouchGFXGeneratedHAL : public touchgfx::HAL
 8002f24:	4a12      	ldr	r2, [pc, #72]	@ (8002f70 <_Z41__static_initialization_and_destruction_0ii+0xc0>)
 8002f26:	601a      	str	r2, [r3, #0]
    {
 8002f28:	4a13      	ldr	r2, [pc, #76]	@ (8002f78 <_Z41__static_initialization_and_destruction_0ii+0xc8>)
 8002f2a:	601a      	str	r2, [r3, #0]
    static const touchgfx::FontId LARGE = 1;   // ariali_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002f2c:	4b13      	ldr	r3, [pc, #76]	@ (8002f7c <_Z41__static_initialization_and_destruction_0ii+0xcc>)
 8002f2e:	4a14      	ldr	r2, [pc, #80]	@ (8002f80 <_Z41__static_initialization_and_destruction_0ii+0xd0>)
 8002f30:	601a      	str	r2, [r3, #0]
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
    {
 8002f32:	4a14      	ldr	r2, [pc, #80]	@ (8002f84 <_Z41__static_initialization_and_destruction_0ii+0xd4>)
 8002f34:	601a      	str	r2, [r3, #0]
namespace touchgfx
{
/**
 * Implementation of the VectorFontRenderer interface
 */
class VectorFontRendererImpl : public VectorFontRenderer
 8002f36:	4b0c      	ldr	r3, [pc, #48]	@ (8002f68 <_Z41__static_initialization_and_destruction_0ii+0xb8>)
 8002f38:	4a13      	ldr	r2, [pc, #76]	@ (8002f88 <_Z41__static_initialization_and_destruction_0ii+0xd8>)
 8002f3a:	601a      	str	r2, [r3, #0]
class VectorFontRenderer
{
public:
    /** Virtual destructor. */
    virtual ~VectorFontRenderer()
    {
 8002f3c:	4a13      	ldr	r2, [pc, #76]	@ (8002f8c <_Z41__static_initialization_and_destruction_0ii+0xdc>)
 8002f3e:	601a      	str	r2, [r3, #0]
 *
 * @see LCD
 *
 * @note All coordinates are expected to be in absolute coordinates!
 */
class LCD16bpp : public LCD
 8002f40:	4b13      	ldr	r3, [pc, #76]	@ (8002f90 <_Z41__static_initialization_and_destruction_0ii+0xe0>)
 8002f42:	4a14      	ldr	r2, [pc, #80]	@ (8002f94 <_Z41__static_initialization_and_destruction_0ii+0xe4>)
 8002f44:	601a      	str	r2, [r3, #0]
    {
 8002f46:	4a14      	ldr	r2, [pc, #80]	@ (8002f98 <_Z41__static_initialization_and_destruction_0ii+0xe8>)
 8002f48:	601a      	str	r2, [r3, #0]
static STM32DMA dma;
 8002f4a:	4814      	ldr	r0, [pc, #80]	@ (8002f9c <_Z41__static_initialization_and_destruction_0ii+0xec>)
 8002f4c:	f7ff f9f2 	bl	8002334 <_ZN8STM32DMAD1Ev>
class STM32TouchController : public touchgfx::TouchController
 8002f50:	4b02      	ldr	r3, [pc, #8]	@ (8002f5c <_Z41__static_initialization_and_destruction_0ii+0xac>)
 8002f52:	4a04      	ldr	r2, [pc, #16]	@ (8002f64 <_Z41__static_initialization_and_destruction_0ii+0xb4>)
 8002f54:	601a      	str	r2, [r3, #0]
    {
 8002f56:	4a02      	ldr	r2, [pc, #8]	@ (8002f60 <_Z41__static_initialization_and_destruction_0ii+0xb0>)
 8002f58:	601a      	str	r2, [r3, #0]
}
 8002f5a:	e7b5      	b.n	8002ec8 <_Z41__static_initialization_and_destruction_0ii+0x18>
 8002f5c:	20001560 	.word	0x20001560
 8002f60:	0802f9cc 	.word	0x0802f9cc
 8002f64:	0802f9e4 	.word	0x0802f9e4
 8002f68:	20000718 	.word	0x20000718
 8002f6c:	20000690 	.word	0x20000690
 8002f70:	08030370 	.word	0x08030370
 8002f74:	0802fb74 	.word	0x0802fb74
 8002f78:	08032288 	.word	0x08032288
 8002f7c:	20000030 	.word	0x20000030
 8002f80:	08030624 	.word	0x08030624
 8002f84:	0802ff78 	.word	0x0802ff78
 8002f88:	08033174 	.word	0x08033174
 8002f8c:	0802ffc4 	.word	0x0802ffc4
 8002f90:	20000734 	.word	0x20000734
 8002f94:	080334fc 	.word	0x080334fc
 8002f98:	08033060 	.word	0x08033060
 8002f9c:	200007c0 	.word	0x200007c0

08002fa0 <_GLOBAL__sub_I_touchgfx_init>:
 8002fa0:	b508      	push	{r3, lr}
 8002fa2:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8002fa6:	2001      	movs	r0, #1
 8002fa8:	f7ff ff82 	bl	8002eb0 <_Z41__static_initialization_and_destruction_0ii>
 8002fac:	bd08      	pop	{r3, pc}

08002fae <_GLOBAL__sub_D_touchgfx_init>:
 8002fae:	b508      	push	{r3, lr}
 8002fb0:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8002fb4:	2000      	movs	r0, #0
 8002fb6:	f7ff ff7b 	bl	8002eb0 <_Z41__static_initialization_and_destruction_0ii>
 8002fba:	bd08      	pop	{r3, pc}

08002fbc <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 8002fbc:	b508      	push	{r3, lr}
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 8002fbe:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8002fc2:	b113      	cbz	r3, 8002fca <_ZNK8touchgfx8Drawable17invalidateContentEv+0xe>
        {
            invalidate();
 8002fc4:	6803      	ldr	r3, [r0, #0]
 8002fc6:	695b      	ldr	r3, [r3, #20]
 8002fc8:	4798      	blx	r3
        }
    }
 8002fca:	bd08      	pop	{r3, pc}

08002fcc <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002fcc:	2000      	movs	r0, #0
 8002fce:	4770      	bx	lr

08002fd0 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002fd0:	8081      	strh	r1, [r0, #4]
    }
 8002fd2:	4770      	bx	lr

08002fd4 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002fd4:	80c1      	strh	r1, [r0, #6]
    }
 8002fd6:	4770      	bx	lr

08002fd8 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002fd8:	8101      	strh	r1, [r0, #8]
    }
 8002fda:	4770      	bx	lr

08002fdc <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002fdc:	8141      	strh	r1, [r0, #10]
    }
 8002fde:	4770      	bx	lr

08002fe0 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002fe0:	4770      	bx	lr

08002fe2 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002fe2:	4770      	bx	lr

08002fe4 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002fe4:	4770      	bx	lr

08002fe6 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8002fe6:	4770      	bx	lr

08002fe8 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002fe8:	4770      	bx	lr

08002fea <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8002fea:	b508      	push	{r3, lr}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002fec:	f8b0 c004 	ldrh.w	ip, [r0, #4]
 8002ff0:	eba1 010c 	sub.w	r1, r1, ip
 8002ff4:	f8b0 c006 	ldrh.w	ip, [r0, #6]
 8002ff8:	eba2 020c 	sub.w	r2, r2, ip
 8002ffc:	6803      	ldr	r3, [r0, #0]
 8002ffe:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003000:	b212      	sxth	r2, r2
 8003002:	b209      	sxth	r1, r1
 8003004:	4798      	blx	r3
    }
 8003006:	bd08      	pop	{r3, pc}

08003008 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8003008:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800300c:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800300e:	8403      	strh	r3, [r0, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 8003010:	8443      	strh	r3, [r0, #34]	@ 0x22
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8003012:	6813      	ldr	r3, [r2, #0]
 8003014:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8003016:	6010      	str	r0, [r2, #0]
    }
 8003018:	4770      	bx	lr

0800301a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
        return visible;
 800301a:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800301e:	b11a      	cbz	r2, 8003028 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        return touchable;
 8003020:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 8003024:	b102      	cbz	r2, 8003028 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8003026:	6018      	str	r0, [r3, #0]
        }
    }
 8003028:	4770      	bx	lr

0800302a <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800302a:	2000      	movs	r0, #0
 800302c:	4770      	bx	lr

0800302e <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 800302e:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8003032:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8003034:	2001      	movs	r0, #1
 8003036:	4770      	bx	lr

08003038 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8003038:	4770      	bx	lr

0800303a <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800303a:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
 800303e:	4770      	bx	lr

08003040 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8003040:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
 8003044:	4770      	bx	lr

08003046 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
        return rect.width;
 8003046:	f9b1 c008 	ldrsh.w	ip, [r1, #8]
        return rect.height;
 800304a:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800304e:	2200      	movs	r2, #0
 8003050:	8002      	strh	r2, [r0, #0]
 8003052:	8042      	strh	r2, [r0, #2]
 8003054:	f8a0 c004 	strh.w	ip, [r0, #4]
 8003058:	80c1      	strh	r1, [r0, #6]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 800305a:	4770      	bx	lr

0800305c <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 800305c:	2200      	movs	r2, #0
 800305e:	8002      	strh	r2, [r0, #0]
 8003060:	8042      	strh	r2, [r0, #2]
 8003062:	8082      	strh	r2, [r0, #4]
 8003064:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003066:	4770      	bx	lr

08003068 <_ZN8touchgfx20AbstractPainterColorD1Ev>:
        setColor(color);
    }

    /** Destructor */
    virtual ~AbstractPainterColor()
    {
 8003068:	4b01      	ldr	r3, [pc, #4]	@ (8003070 <_ZN8touchgfx20AbstractPainterColorD1Ev+0x8>)
 800306a:	6003      	str	r3, [r0, #0]
    }
 800306c:	4770      	bx	lr
 800306e:	bf00      	nop
 8003070:	0803047c 	.word	0x0803047c

08003074 <_ZN8touchgfx20AbstractPainterColor8setColorENS_9colortypeE>:
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8003074:	6041      	str	r1, [r0, #4]
    }
 8003076:	4770      	bx	lr

08003078 <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
 8003078:	7701      	strb	r1, [r0, #28]
    }
 800307a:	4770      	bx	lr

0800307c <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
 800307c:	ed80 0a08 	vstr	s0, [r0, #32]
    }
 8003080:	4770      	bx	lr

08003082 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
 8003082:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
 8003086:	4770      	bx	lr

08003088 <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
 8003088:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
 800308c:	4770      	bx	lr

0800308e <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
 800308e:	2001      	movs	r0, #1
 8003090:	4770      	bx	lr

08003092 <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
 8003092:	3098      	adds	r0, #152	@ 0x98
 8003094:	4770      	bx	lr

08003096 <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
 8003096:	308c      	adds	r0, #140	@ 0x8c
 8003098:	4770      	bx	lr

0800309a <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
 800309a:	3084      	adds	r0, #132	@ 0x84
 800309c:	4770      	bx	lr
	...

080030a0 <__tcf_1>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 80030a0:	4b13      	ldr	r3, [pc, #76]	@ (80030f0 <__tcf_1+0x50>)
 80030a2:	4a14      	ldr	r2, [pc, #80]	@ (80030f4 <__tcf_1+0x54>)
 80030a4:	601a      	str	r2, [r3, #0]
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
 80030a6:	4a14      	ldr	r2, [pc, #80]	@ (80030f8 <__tcf_1+0x58>)
 80030a8:	f8c3 2098 	str.w	r2, [r3, #152]	@ 0x98
    {
    }

    /** Destructor */
    virtual ~AbstractPainterLinearGradient()
    {
 80030ac:	4a13      	ldr	r2, [pc, #76]	@ (80030fc <__tcf_1+0x5c>)
 80030ae:	f8c3 2098 	str.w	r2, [r3, #152]	@ 0x98
    {
 80030b2:	4913      	ldr	r1, [pc, #76]	@ (8003100 <__tcf_1+0x60>)
 80030b4:	f8c3 1098 	str.w	r1, [r3, #152]	@ 0x98
 * The PainterRGB565 class allows a shape to be filled with a given color and alpha
 * value. This allows transparent, anti-aliased elements to be drawn.
 *
 * @see AbstractPainter
 */
class PainterRGB565 : public AbstractPainterRGB565, public AbstractPainterColor
 80030b8:	4a12      	ldr	r2, [pc, #72]	@ (8003104 <__tcf_1+0x64>)
 80030ba:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 80030be:	3224      	adds	r2, #36	@ 0x24
 80030c0:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
    {
 80030c4:	4a10      	ldr	r2, [pc, #64]	@ (8003108 <__tcf_1+0x68>)
 80030c6:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 * The AbstractPainterRGB565 class is an abstract class for creating a painter to draw on a
 * RGB565 display using CanvasWidgetRenderer.
 *
 * @see AbstractPainter
 */
class AbstractPainterRGB565 : public AbstractPainter
 80030ca:	4a10      	ldr	r2, [pc, #64]	@ (800310c <__tcf_1+0x6c>)
 80030cc:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 80030d0:	f8c3 1084 	str.w	r1, [r3, #132]	@ 0x84
class CWRVectorRenderer : public VectorRenderer
 80030d4:	4a0e      	ldr	r2, [pc, #56]	@ (8003110 <__tcf_1+0x70>)
 80030d6:	601a      	str	r2, [r3, #0]
    class CanvasWidgetProxy : public CanvasWidget
 80030d8:	4a0e      	ldr	r2, [pc, #56]	@ (8003114 <__tcf_1+0x74>)
 80030da:	659a      	str	r2, [r3, #88]	@ 0x58
class CanvasWidget : public Widget
 80030dc:	4a0e      	ldr	r2, [pc, #56]	@ (8003118 <__tcf_1+0x78>)
 80030de:	659a      	str	r2, [r3, #88]	@ 0x58
class Widget : public Drawable
 80030e0:	4a0e      	ldr	r2, [pc, #56]	@ (800311c <__tcf_1+0x7c>)
 80030e2:	659a      	str	r2, [r3, #88]	@ 0x58
    {
 80030e4:	4a0e      	ldr	r2, [pc, #56]	@ (8003120 <__tcf_1+0x80>)
 80030e6:	659a      	str	r2, [r3, #88]	@ 0x58
class VectorRenderer
{
public:
    /** Virtual destructor. */
    virtual ~VectorRenderer()
    {
 80030e8:	4a0e      	ldr	r2, [pc, #56]	@ (8003124 <__tcf_1+0x84>)
 80030ea:	601a      	str	r2, [r3, #0]

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
 80030ec:	4770      	bx	lr
 80030ee:	bf00      	nop
 80030f0:	20004fd4 	.word	0x20004fd4
 80030f4:	08030548 	.word	0x08030548
 80030f8:	080323e8 	.word	0x080323e8
 80030fc:	080304b0 	.word	0x080304b0
 8003100:	0803045c 	.word	0x0803045c
 8003104:	08032408 	.word	0x08032408
 8003108:	0803047c 	.word	0x0803047c
 800310c:	08030490 	.word	0x08030490
 8003110:	08032454 	.word	0x08032454
 8003114:	080304d0 	.word	0x080304d0
 8003118:	080324a0 	.word	0x080324a0
 800311c:	080302c8 	.word	0x080302c8
 8003120:	0803310c 	.word	0x0803310c
 8003124:	08030330 	.word	0x08030330

08003128 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003128:	4b03      	ldr	r3, [pc, #12]	@ (8003138 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 800312a:	2290      	movs	r2, #144	@ 0x90
 800312c:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 8003130:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8003134:	4770      	bx	lr
 8003136:	bf00      	nop
 8003138:	e000e100 	.word	0xe000e100

0800313c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800313c:	4b03      	ldr	r3, [pc, #12]	@ (800314c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 800313e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8003142:	609a      	str	r2, [r3, #8]
 8003144:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8003148:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(DMA2D_IRQn);
    NVIC_EnableIRQ(LTDC_IRQn);
}
 800314a:	4770      	bx	lr
 800314c:	e000e100 	.word	0xe000e100

08003150 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003150:	4b08      	ldr	r3, [pc, #32]	@ (8003174 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 8003152:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8003156:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800315a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800315e:	f3bf 8f6f 	isb	sy
 8003162:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8003166:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800316a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800316e:	f3bf 8f6f 	isb	sy

void TouchGFXGeneratedHAL::disableInterrupts()
{
    NVIC_DisableIRQ(DMA2D_IRQn);
    NVIC_DisableIRQ(LTDC_IRQn);
}
 8003172:	4770      	bx	lr
 8003174:	e000e100 	.word	0xe000e100

08003178 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 8003178:	4a09      	ldr	r2, [pc, #36]	@ (80031a0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 800317a:	68d3      	ldr	r3, [r2, #12]
 800317c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8003180:	3b01      	subs	r3, #1
 8003182:	b29b      	uxth	r3, r3
 8003184:	4907      	ldr	r1, [pc, #28]	@ (80031a4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8003186:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 8003188:	6911      	ldr	r1, [r2, #16]
 800318a:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800318e:	3901      	subs	r1, #1
 8003190:	4805      	ldr	r0, [pc, #20]	@ (80031a8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
 8003192:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8003194:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8003196:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8003198:	f043 0301 	orr.w	r3, r3, #1
 800319c:	6353      	str	r3, [r2, #52]	@ 0x34
}
 800319e:	4770      	bx	lr
 80031a0:	40016800 	.word	0x40016800
 80031a4:	20004fce 	.word	0x20004fce
 80031a8:	20004fcc 	.word	0x20004fcc

080031ac <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 80031ac:	4b01      	ldr	r3, [pc, #4]	@ (80031b4 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 80031ae:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 80031b2:	4770      	bx	lr
 80031b4:	40016800 	.word	0x40016800

080031b8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80031b8:	4b02      	ldr	r3, [pc, #8]	@ (80031c4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)
 80031ba:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80031be:	2201      	movs	r2, #1
 80031c0:	625a      	str	r2, [r3, #36]	@ 0x24
}
 80031c2:	4770      	bx	lr
 80031c4:	40016800 	.word	0x40016800

080031c8 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv>:
{
    // This function only requires an implementation if single buffering
    // on LTDC display is being used (REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL).

    // The CPSR register (bits 15:0) specify current line of TFT controller.
    uint16_t curr = (uint16_t)(LTDC->CPSR & LTDC_CPSR_CYPOS_Msk);
 80031c8:	4b06      	ldr	r3, [pc, #24]	@ (80031e4 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x1c>)
 80031ca:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 80031cc:	b280      	uxth	r0, r0
    uint16_t backPorchY = (uint16_t)(LTDC->BPCR & LTDC_BPCR_AVBP_Msk) + 1;
 80031ce:	68db      	ldr	r3, [r3, #12]
 80031d0:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80031d4:	3301      	adds	r3, #1

    // The semantics of the getTFTCurrentLine() function is to return a value
    // in the range of 0-totalheight. If we are still in back porch area, return 0.
    return (curr < backPorchY) ? 0 : (curr - backPorchY);
 80031d6:	4298      	cmp	r0, r3
 80031d8:	d302      	bcc.n	80031e0 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x18>
 80031da:	1ac0      	subs	r0, r0, r3
 80031dc:	b280      	uxth	r0, r0
 80031de:	4770      	bx	lr
 80031e0:	2000      	movs	r0, #0
}
 80031e2:	4770      	bx	lr
 80031e4:	40016800 	.word	0x40016800

080031e8 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 80031e8:	4a12      	ldr	r2, [pc, #72]	@ (8003234 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev+0x4c>)
 80031ea:	6002      	str	r2, [r0, #0]
 80031ec:	4a12      	ldr	r2, [pc, #72]	@ (8003238 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev+0x50>)
 80031ee:	f8c0 2098 	str.w	r2, [r0, #152]	@ 0x98
 80031f2:	4a12      	ldr	r2, [pc, #72]	@ (800323c <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev+0x54>)
 80031f4:	f8c0 2098 	str.w	r2, [r0, #152]	@ 0x98
 80031f8:	4911      	ldr	r1, [pc, #68]	@ (8003240 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev+0x58>)
 80031fa:	f8c0 1098 	str.w	r1, [r0, #152]	@ 0x98
 80031fe:	4a11      	ldr	r2, [pc, #68]	@ (8003244 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev+0x5c>)
 8003200:	f8c0 2084 	str.w	r2, [r0, #132]	@ 0x84
 8003204:	3224      	adds	r2, #36	@ 0x24
 8003206:	f8c0 208c 	str.w	r2, [r0, #140]	@ 0x8c
 800320a:	4a0f      	ldr	r2, [pc, #60]	@ (8003248 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev+0x60>)
 800320c:	f8c0 208c 	str.w	r2, [r0, #140]	@ 0x8c
 8003210:	4a0e      	ldr	r2, [pc, #56]	@ (800324c <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev+0x64>)
 8003212:	f8c0 2084 	str.w	r2, [r0, #132]	@ 0x84
 8003216:	f8c0 1084 	str.w	r1, [r0, #132]	@ 0x84
class CWRVectorRenderer : public VectorRenderer
 800321a:	4a0d      	ldr	r2, [pc, #52]	@ (8003250 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev+0x68>)
 800321c:	6002      	str	r2, [r0, #0]
    class CanvasWidgetProxy : public CanvasWidget
 800321e:	4a0d      	ldr	r2, [pc, #52]	@ (8003254 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev+0x6c>)
 8003220:	6582      	str	r2, [r0, #88]	@ 0x58
 8003222:	4a0d      	ldr	r2, [pc, #52]	@ (8003258 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev+0x70>)
 8003224:	6582      	str	r2, [r0, #88]	@ 0x58
 8003226:	4a0d      	ldr	r2, [pc, #52]	@ (800325c <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev+0x74>)
 8003228:	6582      	str	r2, [r0, #88]	@ 0x58
 800322a:	4a0d      	ldr	r2, [pc, #52]	@ (8003260 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev+0x78>)
 800322c:	6582      	str	r2, [r0, #88]	@ 0x58
 800322e:	4a0d      	ldr	r2, [pc, #52]	@ (8003264 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev+0x7c>)
 8003230:	6002      	str	r2, [r0, #0]
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8003232:	4770      	bx	lr
 8003234:	08030548 	.word	0x08030548
 8003238:	080323e8 	.word	0x080323e8
 800323c:	080304b0 	.word	0x080304b0
 8003240:	0803045c 	.word	0x0803045c
 8003244:	08032408 	.word	0x08032408
 8003248:	0803047c 	.word	0x0803047c
 800324c:	08030490 	.word	0x08030490
 8003250:	08032454 	.word	0x08032454
 8003254:	080304d0 	.word	0x080304d0
 8003258:	080324a0 	.word	0x080324a0
 800325c:	080302c8 	.word	0x080302c8
 8003260:	0803310c 	.word	0x0803310c
 8003264:	08030330 	.word	0x08030330

08003268 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 8003268:	4a04      	ldr	r2, [pc, #16]	@ (800327c <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev+0x14>)
 800326a:	6002      	str	r2, [r0, #0]
 800326c:	4a04      	ldr	r2, [pc, #16]	@ (8003280 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev+0x18>)
 800326e:	6002      	str	r2, [r0, #0]
 8003270:	4a04      	ldr	r2, [pc, #16]	@ (8003284 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev+0x1c>)
 8003272:	6002      	str	r2, [r0, #0]
 8003274:	4a04      	ldr	r2, [pc, #16]	@ (8003288 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev+0x20>)
 8003276:	6002      	str	r2, [r0, #0]
 8003278:	4770      	bx	lr
 800327a:	bf00      	nop
 800327c:	080304d0 	.word	0x080304d0
 8003280:	080324a0 	.word	0x080324a0
 8003284:	080302c8 	.word	0x080302c8
 8003288:	0803310c 	.word	0x0803310c

0800328c <_ZN20TouchGFXGeneratedHALD1Ev>:
 800328c:	4a02      	ldr	r2, [pc, #8]	@ (8003298 <_ZN20TouchGFXGeneratedHALD1Ev+0xc>)
 800328e:	6002      	str	r2, [r0, #0]
 8003290:	4a02      	ldr	r2, [pc, #8]	@ (800329c <_ZN20TouchGFXGeneratedHALD1Ev+0x10>)
 8003292:	6002      	str	r2, [r0, #0]
 8003294:	4770      	bx	lr
 8003296:	bf00      	nop
 8003298:	08030370 	.word	0x08030370
 800329c:	08032288 	.word	0x08032288

080032a0 <_ZN8touchgfx20AbstractPainterColorD0Ev>:
    virtual ~AbstractPainterColor()
 80032a0:	b510      	push	{r4, lr}
 80032a2:	4604      	mov	r4, r0
    {
 80032a4:	4b03      	ldr	r3, [pc, #12]	@ (80032b4 <_ZN8touchgfx20AbstractPainterColorD0Ev+0x14>)
 80032a6:	6003      	str	r3, [r0, #0]
    }
 80032a8:	2108      	movs	r1, #8
 80032aa:	f02a fb00 	bl	802d8ae <_ZdlPvj>
 80032ae:	4620      	mov	r0, r4
 80032b0:	bd10      	pop	{r4, pc}
 80032b2:	bf00      	nop
 80032b4:	0803047c 	.word	0x0803047c

080032b8 <_ZN20TouchGFXGeneratedHALD0Ev>:
 80032b8:	b510      	push	{r4, lr}
 80032ba:	4604      	mov	r4, r0
 80032bc:	4b04      	ldr	r3, [pc, #16]	@ (80032d0 <_ZN20TouchGFXGeneratedHALD0Ev+0x18>)
 80032be:	6003      	str	r3, [r0, #0]
 80032c0:	4b04      	ldr	r3, [pc, #16]	@ (80032d4 <_ZN20TouchGFXGeneratedHALD0Ev+0x1c>)
 80032c2:	6003      	str	r3, [r0, #0]
 80032c4:	2184      	movs	r1, #132	@ 0x84
 80032c6:	f02a faf2 	bl	802d8ae <_ZdlPvj>
 80032ca:	4620      	mov	r0, r4
 80032cc:	bd10      	pop	{r4, pc}
 80032ce:	bf00      	nop
 80032d0:	08030370 	.word	0x08030370
 80032d4:	08032288 	.word	0x08032288

080032d8 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
 80032d8:	b510      	push	{r4, lr}
 80032da:	4604      	mov	r4, r0
 80032dc:	4b06      	ldr	r3, [pc, #24]	@ (80032f8 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev+0x20>)
 80032de:	6003      	str	r3, [r0, #0]
 80032e0:	4b06      	ldr	r3, [pc, #24]	@ (80032fc <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev+0x24>)
 80032e2:	6003      	str	r3, [r0, #0]
 80032e4:	4b06      	ldr	r3, [pc, #24]	@ (8003300 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev+0x28>)
 80032e6:	6003      	str	r3, [r0, #0]
 80032e8:	4b06      	ldr	r3, [pc, #24]	@ (8003304 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev+0x2c>)
 80032ea:	6003      	str	r3, [r0, #0]
 80032ec:	212c      	movs	r1, #44	@ 0x2c
 80032ee:	f02a fade 	bl	802d8ae <_ZdlPvj>
 80032f2:	4620      	mov	r0, r4
 80032f4:	bd10      	pop	{r4, pc}
 80032f6:	bf00      	nop
 80032f8:	080304d0 	.word	0x080304d0
 80032fc:	080324a0 	.word	0x080324a0
 8003300:	080302c8 	.word	0x080302c8
 8003304:	0803310c 	.word	0x0803310c

08003308 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8003308:	b510      	push	{r4, lr}
 800330a:	4604      	mov	r4, r0
 800330c:	4b14      	ldr	r3, [pc, #80]	@ (8003360 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev+0x58>)
 800330e:	6003      	str	r3, [r0, #0]
 8003310:	4b14      	ldr	r3, [pc, #80]	@ (8003364 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev+0x5c>)
 8003312:	f8c0 3098 	str.w	r3, [r0, #152]	@ 0x98
 8003316:	4b14      	ldr	r3, [pc, #80]	@ (8003368 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev+0x60>)
 8003318:	f8c0 3098 	str.w	r3, [r0, #152]	@ 0x98
 800331c:	4a13      	ldr	r2, [pc, #76]	@ (800336c <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev+0x64>)
 800331e:	f8c0 2098 	str.w	r2, [r0, #152]	@ 0x98
 8003322:	4b13      	ldr	r3, [pc, #76]	@ (8003370 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev+0x68>)
 8003324:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
 8003328:	3324      	adds	r3, #36	@ 0x24
 800332a:	f8c0 308c 	str.w	r3, [r0, #140]	@ 0x8c
    {
 800332e:	4b11      	ldr	r3, [pc, #68]	@ (8003374 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev+0x6c>)
 8003330:	f8c0 308c 	str.w	r3, [r0, #140]	@ 0x8c
 8003334:	4b10      	ldr	r3, [pc, #64]	@ (8003378 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev+0x70>)
 8003336:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
 800333a:	f8c0 2084 	str.w	r2, [r0, #132]	@ 0x84
class CWRVectorRenderer : public VectorRenderer
 800333e:	4b0f      	ldr	r3, [pc, #60]	@ (800337c <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev+0x74>)
 8003340:	6003      	str	r3, [r0, #0]
    class CanvasWidgetProxy : public CanvasWidget
 8003342:	4b0f      	ldr	r3, [pc, #60]	@ (8003380 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev+0x78>)
 8003344:	6583      	str	r3, [r0, #88]	@ 0x58
 8003346:	4b0f      	ldr	r3, [pc, #60]	@ (8003384 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev+0x7c>)
 8003348:	6583      	str	r3, [r0, #88]	@ 0x58
 800334a:	4b0f      	ldr	r3, [pc, #60]	@ (8003388 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev+0x80>)
 800334c:	6583      	str	r3, [r0, #88]	@ 0x58
 800334e:	4b0f      	ldr	r3, [pc, #60]	@ (800338c <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev+0x84>)
 8003350:	6583      	str	r3, [r0, #88]	@ 0x58
 8003352:	4b0f      	ldr	r3, [pc, #60]	@ (8003390 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev+0x88>)
 8003354:	6003      	str	r3, [r0, #0]
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8003356:	21bc      	movs	r1, #188	@ 0xbc
 8003358:	f02a faa9 	bl	802d8ae <_ZdlPvj>
 800335c:	4620      	mov	r0, r4
 800335e:	bd10      	pop	{r4, pc}
 8003360:	08030548 	.word	0x08030548
 8003364:	080323e8 	.word	0x080323e8
 8003368:	080304b0 	.word	0x080304b0
 800336c:	0803045c 	.word	0x0803045c
 8003370:	08032408 	.word	0x08032408
 8003374:	0803047c 	.word	0x0803047c
 8003378:	08030490 	.word	0x08030490
 800337c:	08032454 	.word	0x08032454
 8003380:	080304d0 	.word	0x080304d0
 8003384:	080324a0 	.word	0x080324a0
 8003388:	080302c8 	.word	0x080302c8
 800338c:	0803310c 	.word	0x0803310c
 8003390:	08030330 	.word	0x08030330

08003394 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
{
 8003394:	b508      	push	{r3, lr}
    return HAL::beginFrame();
 8003396:	f00f fd9d 	bl	8012ed4 <_ZN8touchgfx3HAL10beginFrameEv>
}
 800339a:	bd08      	pop	{r3, pc}

0800339c <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
{
 800339c:	b508      	push	{r3, lr}
    HAL::endFrame();
 800339e:	f00f fda5 	bl	8012eec <_ZN8touchgfx3HAL8endFrameEv>
}
 80033a2:	bd08      	pop	{r3, pc}

080033a4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:
{
 80033a4:	b508      	push	{r3, lr}
    HAL::flushFrameBuffer(rect);
 80033a6:	f00f fd5e 	bl	8012e66 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
}
 80033aa:	bd08      	pop	{r3, pc}

080033ac <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
{
 80033ac:	b508      	push	{r3, lr}
    return HAL::blockCopy(dest, src, numBytes);
 80033ae:	f00f fede 	bl	801316e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
}
 80033b2:	bd08      	pop	{r3, pc}

080033b4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
    virtual void flushFrameBuffer()
 80033b4:	b508      	push	{r3, lr}
        HAL::flushFrameBuffer();
 80033b6:	f00f fd50 	bl	8012e5a <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 80033ba:	bd08      	pop	{r3, pc}

080033bc <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 80033bc:	b538      	push	{r3, r4, r5, lr}
 80033be:	4605      	mov	r5, r0
 80033c0:	460c      	mov	r4, r1
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 80033c2:	2903      	cmp	r1, #3
 80033c4:	d829      	bhi.n	800341a <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 80033c6:	e8df f001 	tbb	[pc, r1]
 80033ca:	0602      	.short	0x0602
 80033cc:	0219      	.short	0x0219
            refreshStrategy = s;
 80033ce:	f885 1048 	strb.w	r1, [r5, #72]	@ 0x48
            return true;
 80033d2:	2001      	movs	r0, #1
    }
 80033d4:	bd38      	pop	{r3, r4, r5, pc}
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 80033d6:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 80033d8:	b173      	cbz	r3, 80033f8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x3c>
 80033da:	6803      	ldr	r3, [r0, #0]
 80033dc:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 80033e0:	4798      	blx	r3
 80033e2:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80033e6:	4298      	cmp	r0, r3
 80033e8:	d006      	beq.n	80033f8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x3c>
 80033ea:	4b0f      	ldr	r3, [pc, #60]	@ (8003428 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6c>)
 80033ec:	781b      	ldrb	r3, [r3, #0]
 80033ee:	b91b      	cbnz	r3, 80033f8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x3c>
                refreshStrategy = s;
 80033f0:	f885 4048 	strb.w	r4, [r5, #72]	@ 0x48
                return true;
 80033f4:	2001      	movs	r0, #1
 80033f6:	e7ed      	b.n	80033d4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
            return false;
 80033f8:	2000      	movs	r0, #0
 80033fa:	e7eb      	b.n	80033d4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
            if (getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 80033fc:	6803      	ldr	r3, [r0, #0]
 80033fe:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8003402:	4798      	blx	r3
 8003404:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8003408:	4298      	cmp	r0, r3
 800340a:	d008      	beq.n	800341e <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x62>
 800340c:	4b06      	ldr	r3, [pc, #24]	@ (8003428 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6c>)
 800340e:	781b      	ldrb	r3, [r3, #0]
 8003410:	b93b      	cbnz	r3, 8003422 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x66>
                refreshStrategy = s;
 8003412:	f885 4048 	strb.w	r4, [r5, #72]	@ 0x48
                return true;
 8003416:	2001      	movs	r0, #1
 8003418:	e7dc      	b.n	80033d4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
            return false;
 800341a:	2000      	movs	r0, #0
 800341c:	e7da      	b.n	80033d4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 800341e:	2000      	movs	r0, #0
 8003420:	e7d8      	b.n	80033d4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 8003422:	2000      	movs	r0, #0
 8003424:	e7d6      	b.n	80033d4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 8003426:	bf00      	nop
 8003428:	2000e40a 	.word	0x2000e40a

0800342c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 800342c:	b538      	push	{r3, r4, r5, lr}
 800342e:	4604      	mov	r4, r0
    HAL::initialize();
 8003430:	f00f fd69 	bl	8012f06 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8003434:	6823      	ldr	r3, [r4, #0]
 8003436:	6e9d      	ldr	r5, [r3, #104]	@ 0x68
 8003438:	f017 fb04 	bl	801aa44 <_ZN8touchgfx11Application11getInstanceEv>
 800343c:	4601      	mov	r1, r0
 800343e:	4620      	mov	r0, r4
 8003440:	47a8      	blx	r5
        taskDelayFunc = delayF;
 8003442:	4b08      	ldr	r3, [pc, #32]	@ (8003464 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x38>)
 8003444:	63a3      	str	r3, [r4, #56]	@ 0x38
    if (!setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL))
 8003446:	2101      	movs	r1, #1
 8003448:	4620      	mov	r0, r4
 800344a:	f7ff ffb7 	bl	80033bc <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>
 800344e:	b900      	cbnz	r0, 8003452 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x26>
        while (1);
 8003450:	e7fe      	b.n	8003450 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x24>
    setFrameBufferStartAddresses((void*)frameBuf, (void*)0, (void*)0);
 8003452:	6823      	ldr	r3, [r4, #0]
 8003454:	f8d3 508c 	ldr.w	r5, [r3, #140]	@ 0x8c
 8003458:	2300      	movs	r3, #0
 800345a:	461a      	mov	r2, r3
 800345c:	4902      	ldr	r1, [pc, #8]	@ (8003468 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x3c>)
 800345e:	4620      	mov	r0, r4
 8003460:	47a8      	blx	r5
}
 8003462:	bd38      	pop	{r3, r4, r5, pc}
 8003464:	080022fd 	.word	0x080022fd
 8003468:	c0000000 	.word	0xc0000000

0800346c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 800346c:	b538      	push	{r3, r4, r5, lr}
 800346e:	4605      	mov	r5, r0
        : widgetWidth(0)
 8003470:	4b13      	ldr	r3, [pc, #76]	@ (80034c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8003472:	6003      	str	r3, [r0, #0]
 8003474:	2300      	movs	r3, #0
 8003476:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8003478:	4b12      	ldr	r3, [pc, #72]	@ (80034c4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 800347a:	6003      	str	r3, [r0, #0]
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800347c:	4b12      	ldr	r3, [pc, #72]	@ (80034c8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 800347e:	681b      	ldr	r3, [r3, #0]
 8003480:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8003484:	b10a      	cbz	r2, 800348a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1e>
 8003486:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8003488:	b900      	cbnz	r0, 800348c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x20>
        return instance->lcdRef;
 800348a:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 800348c:	6803      	ldr	r3, [r0, #0]
 800348e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003490:	4798      	blx	r3
 8003492:	fab0 f480 	clz	r4, r0
 8003496:	0964      	lsrs	r4, r4, #5
        return instance;
 8003498:	4b0b      	ldr	r3, [pc, #44]	@ (80034c8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 800349a:	681b      	ldr	r3, [r3, #0]
        return auxiliaryLCD;
 800349c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
 800349e:	b130      	cbz	r0, 80034ae <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x42>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80034a0:	6803      	ldr	r3, [r0, #0]
 80034a2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80034a4:	4798      	blx	r3
 80034a6:	2800      	cmp	r0, #0
 80034a8:	bf08      	it	eq
 80034aa:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 80034ae:	b10c      	cbz	r4, 80034b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x48>
    }
 80034b0:	4628      	mov	r0, r5
 80034b2:	bd38      	pop	{r3, r4, r5, pc}
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 80034b4:	4b05      	ldr	r3, [pc, #20]	@ (80034cc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 80034b6:	4a06      	ldr	r2, [pc, #24]	@ (80034d0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x64>)
 80034b8:	212c      	movs	r1, #44	@ 0x2c
 80034ba:	4806      	ldr	r0, [pc, #24]	@ (80034d4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x68>)
 80034bc:	f02b f93e 	bl	802e73c <__assert_func>
 80034c0:	0803045c 	.word	0x0803045c
 80034c4:	08030490 	.word	0x08030490
 80034c8:	2000e40c 	.word	0x2000e40c
 80034cc:	080301c0 	.word	0x080301c0
 80034d0:	08030220 	.word	0x08030220
 80034d4:	0803025c 	.word	0x0803025c

080034d8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>:
    /**
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
 80034d8:	b538      	push	{r3, r4, r5, lr}
 80034da:	4604      	mov	r4, r0
 80034dc:	460d      	mov	r5, r1
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80034de:	f7ff ffc5 	bl	800346c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
    {
 80034e2:	4b05      	ldr	r3, [pc, #20]	@ (80034f8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE+0x20>)
 80034e4:	60a3      	str	r3, [r4, #8]
        : color(0)
 80034e6:	2300      	movs	r3, #0
 80034e8:	60e3      	str	r3, [r4, #12]
        painterColor = color;
 80034ea:	60e5      	str	r5, [r4, #12]
 80034ec:	4b03      	ldr	r3, [pc, #12]	@ (80034fc <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE+0x24>)
 80034ee:	6023      	str	r3, [r4, #0]
 80034f0:	3324      	adds	r3, #36	@ 0x24
 80034f2:	60a3      	str	r3, [r4, #8]
    {
    }
 80034f4:	4620      	mov	r0, r4
 80034f6:	bd38      	pop	{r3, r4, r5, pc}
 80034f8:	0803047c 	.word	0x0803047c
 80034fc:	08032408 	.word	0x08032408

08003500 <_ZN8touchgfx17CWRVectorRendererC1Ev>:
class CWRVectorRenderer : public VectorRenderer
 8003500:	b510      	push	{r4, lr}
 8003502:	4604      	mov	r4, r0
class VectorRenderer
 8003504:	4b0d      	ldr	r3, [pc, #52]	@ (800353c <_ZN8touchgfx17CWRVectorRendererC1Ev+0x3c>)
 8003506:	6003      	str	r3, [r0, #0]
 8003508:	4b0d      	ldr	r3, [pc, #52]	@ (8003540 <_ZN8touchgfx17CWRVectorRendererC1Ev+0x40>)
 800350a:	6003      	str	r3, [r0, #0]
        : x(0), y(0), width(0), height(0)
 800350c:	2300      	movs	r3, #0
 800350e:	8083      	strh	r3, [r0, #4]
 8003510:	80c3      	strh	r3, [r0, #6]
 8003512:	8103      	strh	r3, [r0, #8]
 8003514:	8143      	strh	r3, [r0, #10]
 8003516:	8183      	strh	r3, [r0, #12]
 8003518:	81c3      	strh	r3, [r0, #14]
 800351a:	8203      	strh	r3, [r0, #16]
 800351c:	8243      	strh	r3, [r0, #18]
 800351e:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8003520:	8503      	strh	r3, [r0, #40]	@ 0x28
 8003522:	8543      	strh	r3, [r0, #42]	@ 0x2a
 8003524:	8583      	strh	r3, [r0, #44]	@ 0x2c
 8003526:	3034      	adds	r0, #52	@ 0x34
 8003528:	f019 f801 	bl	801c52e <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
 800352c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8003530:	f012 f896 	bl	8015660 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8003534:	4b03      	ldr	r3, [pc, #12]	@ (8003544 <_ZN8touchgfx17CWRVectorRendererC1Ev+0x44>)
 8003536:	65a3      	str	r3, [r4, #88]	@ 0x58
class CWRVectorRenderer : public VectorRenderer
 8003538:	4620      	mov	r0, r4
 800353a:	bd10      	pop	{r4, pc}
 800353c:	08030330 	.word	0x08030330
 8003540:	08032454 	.word	0x08032454
 8003544:	080304d0 	.word	0x080304d0

08003548 <_ZN8touchgfx23CWRVectorRendererRGB565C1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8003548:	b538      	push	{r3, r4, r5, lr}
 800354a:	4604      	mov	r4, r0
 800354c:	f7ff ffd8 	bl	8003500 <_ZN8touchgfx17CWRVectorRendererC1Ev>
 8003550:	4620      	mov	r0, r4
 8003552:	4b15      	ldr	r3, [pc, #84]	@ (80035a8 <_ZN8touchgfx23CWRVectorRendererRGB565C1Ev+0x60>)
 8003554:	f840 3b84 	str.w	r3, [r0], #132
        : color(col)
 8003558:	2500      	movs	r5, #0
 800355a:	4629      	mov	r1, r5
 800355c:	f7ff ffbc 	bl	80034d8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
        : widgetWidth(0)
 8003560:	4b12      	ldr	r3, [pc, #72]	@ (80035ac <_ZN8touchgfx23CWRVectorRendererRGB565C1Ev+0x64>)
 8003562:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 8003566:	f8a4 509c 	strh.w	r5, [r4, #156]	@ 0x9c
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
 800356a:	4b11      	ldr	r3, [pc, #68]	@ (80035b0 <_ZN8touchgfx23CWRVectorRendererRGB565C1Ev+0x68>)
 800356c:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 8003570:	f8a4 50a0 	strh.w	r5, [r4, #160]	@ 0xa0
 8003574:	2364      	movs	r3, #100	@ 0x64
 8003576:	f8a4 30a2 	strh.w	r3, [r4, #162]	@ 0xa2
 800357a:	f8c4 50a4 	str.w	r5, [r4, #164]	@ 0xa4
 800357e:	f884 50a8 	strb.w	r5, [r4, #168]	@ 0xa8
 8003582:	f884 50a9 	strb.w	r5, [r4, #169]	@ 0xa9
 8003586:	f884 50aa 	strb.w	r5, [r4, #170]	@ 0xaa
 800358a:	2300      	movs	r3, #0
 800358c:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
 8003590:	f8c4 30b0 	str.w	r3, [r4, #176]	@ 0xb0
 8003594:	f8c4 30b4 	str.w	r3, [r4, #180]	@ 0xb4
 8003598:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
 800359c:	4b05      	ldr	r3, [pc, #20]	@ (80035b4 <_ZN8touchgfx23CWRVectorRendererRGB565C1Ev+0x6c>)
 800359e:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 80035a2:	4620      	mov	r0, r4
 80035a4:	bd38      	pop	{r3, r4, r5, pc}
 80035a6:	bf00      	nop
 80035a8:	08030548 	.word	0x08030548
 80035ac:	0803045c 	.word	0x0803045c
 80035b0:	080304b0 	.word	0x080304b0
 80035b4:	080323e8 	.word	0x080323e8

080035b8 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
{
 80035b8:	b508      	push	{r3, lr}
    static CWRVectorRendererRGB565 renderer;
 80035ba:	4b0c      	ldr	r3, [pc, #48]	@ (80035ec <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x34>)
 80035bc:	681b      	ldr	r3, [r3, #0]
 80035be:	f3bf 8f5b 	dmb	ish
 80035c2:	f013 0f01 	tst.w	r3, #1
 80035c6:	d001      	beq.n	80035cc <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x14>
}
 80035c8:	4809      	ldr	r0, [pc, #36]	@ (80035f0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x38>)
 80035ca:	bd08      	pop	{r3, pc}
    static CWRVectorRendererRGB565 renderer;
 80035cc:	4807      	ldr	r0, [pc, #28]	@ (80035ec <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x34>)
 80035ce:	f02a f970 	bl	802d8b2 <__cxa_guard_acquire>
 80035d2:	2800      	cmp	r0, #0
 80035d4:	d0f8      	beq.n	80035c8 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10>
 80035d6:	4806      	ldr	r0, [pc, #24]	@ (80035f0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x38>)
 80035d8:	f7ff ffb6 	bl	8003548 <_ZN8touchgfx23CWRVectorRendererRGB565C1Ev>
 80035dc:	4805      	ldr	r0, [pc, #20]	@ (80035f4 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x3c>)
 80035de:	f02b f8cb 	bl	802e778 <atexit>
 80035e2:	4802      	ldr	r0, [pc, #8]	@ (80035ec <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x34>)
 80035e4:	f02a f971 	bl	802d8ca <__cxa_guard_release>
 80035e8:	e7ee      	b.n	80035c8 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10>
 80035ea:	bf00      	nop
 80035ec:	20004fd0 	.word	0x20004fd0
 80035f0:	20004fd4 	.word	0x20004fd4
 80035f4:	080030a1 	.word	0x080030a1

080035f8 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 80035f8:	4901      	ldr	r1, [pc, #4]	@ (8003600 <vApplicationIdleHook+0x8>)
 80035fa:	2000      	movs	r0, #0
 80035fc:	f00e bce6 	b.w	8011fcc <vTaskSetApplicationTaskTag>
 8003600:	080021dd 	.word	0x080021dd

08003604 <StartSPITask>:
 * @brief  OTM8009A delay
 * @param  Delay: Delay in ms
 */

void StartSPITask(void *argument)
{
 8003604:	b508      	push	{r3, lr}
  /* Infinite loop */
  for (;;)
  {
    loop();
 8003606:	f7fd fa27 	bl	8000a58 <loop>
    osDelay(4);
 800360a:	2004      	movs	r0, #4
 800360c:	f00c fc06 	bl	800fe1c <osDelay>
  for (;;)
 8003610:	e7f9      	b.n	8003606 <StartSPITask+0x2>
 8003612:	bf00      	nop

08003614 <StartDefaultTask>:
 * @param  argument: Not used
 * @retval None
 */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8003614:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for (;;)
  {
    osDelay(100);
 8003616:	2064      	movs	r0, #100	@ 0x64
 8003618:	f00c fc00 	bl	800fe1c <osDelay>
  for (;;)
 800361c:	e7fb      	b.n	8003616 <StartDefaultTask+0x2>
 800361e:	bf00      	nop

08003620 <SystemClock_Config>:
{
 8003620:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8003622:	2400      	movs	r4, #0
{
 8003624:	b097      	sub	sp, #92	@ 0x5c
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8003626:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800362a:	e9cd 4403 	strd	r4, r4, [sp, #12]
 800362e:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 8003632:	4a21      	ldr	r2, [pc, #132]	@ (80036b8 <SystemClock_Config+0x98>)
 8003634:	9401      	str	r4, [sp, #4]
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8003636:	940a      	str	r4, [sp, #40]	@ 0x28
 8003638:	940d      	str	r4, [sp, #52]	@ 0x34
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800363a:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 800363c:	6c11      	ldr	r1, [r2, #64]	@ 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800363e:	4b1f      	ldr	r3, [pc, #124]	@ (80036bc <SystemClock_Config+0x9c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8003640:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 8003644:	6411      	str	r1, [r2, #64]	@ 0x40
 8003646:	6c12      	ldr	r2, [r2, #64]	@ 0x40
 8003648:	f002 5280 	and.w	r2, r2, #268435456	@ 0x10000000
 800364c:	9201      	str	r2, [sp, #4]
 800364e:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8003650:	9402      	str	r4, [sp, #8]
 8003652:	681a      	ldr	r2, [r3, #0]
 8003654:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 8003658:	601a      	str	r2, [r3, #0]
 800365a:	681b      	ldr	r3, [r3, #0]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 800365c:	940f      	str	r4, [sp, #60]	@ 0x3c
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800365e:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8003662:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
 8003664:	2203      	movs	r2, #3
 8003666:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 800366a:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800366e:	2201      	movs	r2, #1
 8003670:	2310      	movs	r3, #16
 8003672:	e9cd 230b 	strd	r2, r3, [sp, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLM = 8;
 8003676:	2208      	movs	r2, #8
  RCC_OscInitStruct.PLL.PLLN = 180;
 8003678:	23b4      	movs	r3, #180	@ 0xb4
 800367a:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800367e:	2202      	movs	r2, #2
 8003680:	2304      	movs	r3, #4
 8003682:	e9cd 2312 	strd	r2, r3, [sp, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8003686:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLR = 6;
 8003688:	2306      	movs	r3, #6
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800368a:	a808      	add	r0, sp, #32
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800368c:	9902      	ldr	r1, [sp, #8]
  RCC_OscInitStruct.PLL.PLLR = 6;
 800368e:	9314      	str	r3, [sp, #80]	@ 0x50
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8003690:	950e      	str	r5, [sp, #56]	@ 0x38
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8003692:	f00b fad9 	bl	800ec48 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8003696:	f00a fc51 	bl	800df3c <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV16;
 800369a:	f44f 53e0 	mov.w	r3, #7168	@ 0x1c00
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800369e:	220f      	movs	r2, #15
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80036a0:	a803      	add	r0, sp, #12
 80036a2:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80036a4:	e9cd 5404 	strd	r5, r4, [sp, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV16;
 80036a8:	e9cd 3306 	strd	r3, r3, [sp, #24]
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80036ac:	9203      	str	r2, [sp, #12]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80036ae:	f00b f893 	bl	800e7d8 <HAL_RCC_ClockConfig>
}
 80036b2:	b017      	add	sp, #92	@ 0x5c
 80036b4:	bd30      	pop	{r4, r5, pc}
 80036b6:	bf00      	nop
 80036b8:	40023800 	.word	0x40023800
 80036bc:	40007000 	.word	0x40007000

080036c0 <main>:
{
 80036c0:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80036c4:	2400      	movs	r4, #0
{
 80036c6:	b0bb      	sub	sp, #236	@ 0xec
  HAL_Init();
 80036c8:	f008 f990 	bl	800b9ec <HAL_Init>
  SystemClock_Config();
 80036cc:	f7ff ffa8 	bl	8003620 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80036d0:	e9cd 442d 	strd	r4, r4, [sp, #180]	@ 0xb4
 80036d4:	e9cd 442f 	strd	r4, r4, [sp, #188]	@ 0xbc
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80036d8:	4dba      	ldr	r5, [pc, #744]	@ (80039c4 <main+0x304>)
 80036da:	9403      	str	r4, [sp, #12]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80036dc:	9431      	str	r4, [sp, #196]	@ 0xc4
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80036de:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOG, SDW_RST_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80036e0:	48b9      	ldr	r0, [pc, #740]	@ (80039c8 <main+0x308>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80036e2:	f043 0310 	orr.w	r3, r3, #16
 80036e6:	632b      	str	r3, [r5, #48]	@ 0x30
 80036e8:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 80036ea:	f003 0310 	and.w	r3, r3, #16
 80036ee:	9303      	str	r3, [sp, #12]
 80036f0:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80036f2:	9404      	str	r4, [sp, #16]
 80036f4:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 80036f6:	f043 0302 	orr.w	r3, r3, #2
 80036fa:	632b      	str	r3, [r5, #48]	@ 0x30
 80036fc:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 80036fe:	f003 0302 	and.w	r3, r3, #2
 8003702:	9304      	str	r3, [sp, #16]
 8003704:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8003706:	9405      	str	r4, [sp, #20]
 8003708:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 800370a:	f043 0301 	orr.w	r3, r3, #1
 800370e:	632b      	str	r3, [r5, #48]	@ 0x30
 8003710:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 8003712:	f003 0301 	and.w	r3, r3, #1
 8003716:	9305      	str	r3, [sp, #20]
 8003718:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 800371a:	9406      	str	r4, [sp, #24]
 800371c:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 800371e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003722:	632b      	str	r3, [r5, #48]	@ 0x30
 8003724:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 8003726:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800372a:	9306      	str	r3, [sp, #24]
 800372c:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800372e:	9407      	str	r4, [sp, #28]
 8003730:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 8003732:	f043 0308 	orr.w	r3, r3, #8
 8003736:	632b      	str	r3, [r5, #48]	@ 0x30
 8003738:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 800373a:	f003 0308 	and.w	r3, r3, #8
 800373e:	9307      	str	r3, [sp, #28]
 8003740:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8003742:	9408      	str	r4, [sp, #32]
 8003744:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 8003746:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800374a:	632b      	str	r3, [r5, #48]	@ 0x30
 800374c:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 800374e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003752:	9308      	str	r3, [sp, #32]
 8003754:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8003756:	9409      	str	r4, [sp, #36]	@ 0x24
 8003758:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 800375a:	f043 0320 	orr.w	r3, r3, #32
 800375e:	632b      	str	r3, [r5, #48]	@ 0x30
 8003760:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 8003762:	f003 0320 	and.w	r3, r3, #32
 8003766:	9309      	str	r3, [sp, #36]	@ 0x24
 8003768:	9b09      	ldr	r3, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOK_CLK_ENABLE();
 800376a:	940a      	str	r4, [sp, #40]	@ 0x28
 800376c:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 800376e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8003772:	632b      	str	r3, [r5, #48]	@ 0x30
 8003774:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 8003776:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800377a:	930a      	str	r3, [sp, #40]	@ 0x28
 800377c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800377e:	940b      	str	r4, [sp, #44]	@ 0x2c
 8003780:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 8003782:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003786:	632b      	str	r3, [r5, #48]	@ 0x30
 8003788:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 800378a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800378e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003790:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8003792:	940c      	str	r4, [sp, #48]	@ 0x30
 8003794:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 8003796:	f043 0304 	orr.w	r3, r3, #4
 800379a:	632b      	str	r3, [r5, #48]	@ 0x30
 800379c:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 800379e:	f003 0304 	and.w	r3, r3, #4
 80037a2:	930c      	str	r3, [sp, #48]	@ 0x30
 80037a4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80037a6:	940d      	str	r4, [sp, #52]	@ 0x34
 80037a8:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 80037aa:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80037ae:	632b      	str	r3, [r5, #48]	@ 0x30
 80037b0:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 80037b2:	f403 7300 	and.w	r3, r3, #512	@ 0x200
  HAL_GPIO_WritePin(GPIOG, SDW_RST_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80037b6:	4622      	mov	r2, r4
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80037b8:	930d      	str	r3, [sp, #52]	@ 0x34
  HAL_GPIO_WritePin(GPIOG, SDW_RST_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80037ba:	f44f 5140 	mov.w	r1, #12288	@ 0x3000
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80037be:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
  HAL_GPIO_WritePin(GPIOG, SDW_RST_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80037c0:	f009 fc5c 	bl	800d07c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, LED3_Pin|LED2_Pin, GPIO_PIN_SET);
 80037c4:	4881      	ldr	r0, [pc, #516]	@ (80039cc <main+0x30c>)
 80037c6:	2201      	movs	r2, #1
 80037c8:	2130      	movs	r1, #48	@ 0x30
 80037ca:	f009 fc57 	bl	800d07c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LED4_GPIO_Port, LED4_Pin, GPIO_PIN_SET);
 80037ce:	4880      	ldr	r0, [pc, #512]	@ (80039d0 <main+0x310>)
 80037d0:	2201      	movs	r2, #1
 80037d2:	2108      	movs	r1, #8
 80037d4:	f009 fc52 	bl	800d07c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_SET);
 80037d8:	487b      	ldr	r0, [pc, #492]	@ (80039c8 <main+0x308>)
 80037da:	2140      	movs	r1, #64	@ 0x40
 80037dc:	2201      	movs	r2, #1
 80037de:	f009 fc4d 	bl	800d07c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, FRAME_RATE_Pin|VSYNC_FREQ_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 80037e2:	487c      	ldr	r0, [pc, #496]	@ (80039d4 <main+0x314>)
 80037e4:	4622      	mov	r2, r4
 80037e6:	2146      	movs	r1, #70	@ 0x46
 80037e8:	f009 fc48 	bl	800d07c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOH, LCD_RST_Pin|SDW_CS_Pin, GPIO_PIN_RESET);
 80037ec:	4622      	mov	r2, r4
 80037ee:	487a      	ldr	r0, [pc, #488]	@ (80039d8 <main+0x318>)
 80037f0:	21c0      	movs	r1, #192	@ 0xc0
 80037f2:	f009 fc43 	bl	800d07c <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80037f6:	2601      	movs	r6, #1
  GPIO_InitStruct.Pin = SDW_RST_Pin|LED1_Pin;
 80037f8:	f44f 5301 	mov.w	r3, #8256	@ 0x2040
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80037fc:	4872      	ldr	r0, [pc, #456]	@ (80039c8 <main+0x308>)
 80037fe:	a92d      	add	r1, sp, #180	@ 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003800:	2703      	movs	r7, #3
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003802:	e9cd 362d 	strd	r3, r6, [sp, #180]	@ 0xb4
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
 8003806:	f44f 5980 	mov.w	r9, #4096	@ 0x1000
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800380a:	e9cd 442f 	strd	r4, r4, [sp, #188]	@ 0xbc
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800380e:	f009 fa25 	bl	800cc5c <HAL_GPIO_Init>
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8003812:	486d      	ldr	r0, [pc, #436]	@ (80039c8 <main+0x308>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003814:	9730      	str	r7, [sp, #192]	@ 0xc0
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8003816:	a92d      	add	r1, sp, #180	@ 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003818:	e9cd 962d 	strd	r9, r6, [sp, #180]	@ 0xb4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800381c:	942f      	str	r4, [sp, #188]	@ 0xbc
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 800381e:	f009 fa1d 	bl	800cc5c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LED3_Pin|LED2_Pin;
 8003822:	2330      	movs	r3, #48	@ 0x30
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8003824:	4869      	ldr	r0, [pc, #420]	@ (80039cc <main+0x30c>)
  GPIO_InitStruct.Pin = LED3_Pin|LED2_Pin;
 8003826:	932d      	str	r3, [sp, #180]	@ 0xb4
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8003828:	a92d      	add	r1, sp, #180	@ 0xb4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800382a:	e9cd 642e 	strd	r6, r4, [sp, #184]	@ 0xb8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800382e:	9430      	str	r4, [sp, #192]	@ 0xc0
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8003830:	f009 fa14 	bl	800cc5c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LED4_Pin;
 8003834:	2308      	movs	r3, #8
  HAL_GPIO_Init(LED4_GPIO_Port, &GPIO_InitStruct);
 8003836:	4866      	ldr	r0, [pc, #408]	@ (80039d0 <main+0x310>)
  GPIO_InitStruct.Pin = LED4_Pin;
 8003838:	932d      	str	r3, [sp, #180]	@ 0xb4
  HAL_GPIO_Init(LED4_GPIO_Port, &GPIO_InitStruct);
 800383a:	a92d      	add	r1, sp, #180	@ 0xb4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800383c:	e9cd 642e 	strd	r6, r4, [sp, #184]	@ 0xb8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003840:	9430      	str	r4, [sp, #192]	@ 0xc0
  HAL_GPIO_Init(LED4_GPIO_Port, &GPIO_InitStruct);
 8003842:	f009 fa0b 	bl	800cc5c <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8003846:	f04f 0c20 	mov.w	ip, #32
 800384a:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
  HAL_GPIO_Init(TP_IRQ_GPIO_Port, &GPIO_InitStruct);
 800384e:	4863      	ldr	r0, [pc, #396]	@ (80039dc <main+0x31c>)
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8003850:	962f      	str	r6, [sp, #188]	@ 0xbc
  HAL_GPIO_Init(TP_IRQ_GPIO_Port, &GPIO_InitStruct);
 8003852:	a92d      	add	r1, sp, #180	@ 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8003854:	e9cd c32d 	strd	ip, r3, [sp, #180]	@ 0xb4
  HAL_GPIO_Init(TP_IRQ_GPIO_Port, &GPIO_InitStruct);
 8003858:	f009 fa00 	bl	800cc5c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|VSYNC_FREQ_Pin|RENDER_TIME_Pin;
 800385c:	2346      	movs	r3, #70	@ 0x46
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800385e:	485d      	ldr	r0, [pc, #372]	@ (80039d4 <main+0x314>)
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|VSYNC_FREQ_Pin|RENDER_TIME_Pin;
 8003860:	932d      	str	r3, [sp, #180]	@ 0xb4
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003862:	a92d      	add	r1, sp, #180	@ 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003864:	9730      	str	r7, [sp, #192]	@ 0xc0
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003866:	e9cd 642e 	strd	r6, r4, [sp, #184]	@ 0xb8
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800386a:	f009 f9f7 	bl	800cc5c <HAL_GPIO_Init>
  HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
 800386e:	4859      	ldr	r0, [pc, #356]	@ (80039d4 <main+0x314>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003870:	942f      	str	r4, [sp, #188]	@ 0xbc
  HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8003872:	a92d      	add	r1, sp, #180	@ 0xb4
  GPIO_InitStruct.Pin = LCD_RST_Pin;
 8003874:	f04f 0880 	mov.w	r8, #128	@ 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8003878:	e9cd 642d 	strd	r6, r4, [sp, #180]	@ 0xb4
  HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
 800387c:	f009 f9ee 	bl	800cc5c <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_RST_GPIO_Port, &GPIO_InitStruct);
 8003880:	4855      	ldr	r0, [pc, #340]	@ (80039d8 <main+0x318>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003882:	9730      	str	r7, [sp, #192]	@ 0xc0
  HAL_GPIO_Init(LCD_RST_GPIO_Port, &GPIO_InitStruct);
 8003884:	a92d      	add	r1, sp, #180	@ 0xb4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003886:	e9cd 642e 	strd	r6, r4, [sp, #184]	@ 0xb8
  GPIO_InitStruct.Pin = LCD_RST_Pin;
 800388a:	f8cd 80b4 	str.w	r8, [sp, #180]	@ 0xb4
  HAL_GPIO_Init(LCD_RST_GPIO_Port, &GPIO_InitStruct);
 800388e:	f009 f9e5 	bl	800cc5c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = SDW_CS_Pin;
 8003892:	2340      	movs	r3, #64	@ 0x40
  HAL_GPIO_Init(SDW_CS_GPIO_Port, &GPIO_InitStruct);
 8003894:	4850      	ldr	r0, [pc, #320]	@ (80039d8 <main+0x318>)
  GPIO_InitStruct.Pin = SDW_CS_Pin;
 8003896:	932d      	str	r3, [sp, #180]	@ 0xb4
  HAL_GPIO_Init(SDW_CS_GPIO_Port, &GPIO_InitStruct);
 8003898:	a92d      	add	r1, sp, #180	@ 0xb4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800389a:	e9cd 642e 	strd	r6, r4, [sp, #184]	@ 0xb8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800389e:	9430      	str	r4, [sp, #192]	@ 0xc0
  HAL_GPIO_Init(SDW_CS_GPIO_Port, &GPIO_InitStruct);
 80038a0:	f009 f9dc 	bl	800cc5c <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 5, 0);
 80038a4:	4622      	mov	r2, r4
 80038a6:	2105      	movs	r1, #5
 80038a8:	2017      	movs	r0, #23
 80038aa:	f008 f8ef 	bl	800ba8c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 80038ae:	2017      	movs	r0, #23
 80038b0:	f008 f928 	bl	800bb04 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_DMA1_CLK_ENABLE();
 80038b4:	9402      	str	r4, [sp, #8]
 80038b6:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 80038b8:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80038bc:	632b      	str	r3, [r5, #48]	@ 0x30
 80038be:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
  hdma2d.Instance = DMA2D;
 80038c0:	4d47      	ldr	r5, [pc, #284]	@ (80039e0 <main+0x320>)
  __HAL_RCC_DMA1_CLK_ENABLE();
 80038c2:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
  HAL_NVIC_SetPriority(DMA1_Stream3_IRQn, 3, 0);
 80038c6:	4639      	mov	r1, r7
 80038c8:	4622      	mov	r2, r4
  __HAL_RCC_DMA1_CLK_ENABLE();
 80038ca:	9302      	str	r3, [sp, #8]
  HAL_NVIC_SetPriority(DMA1_Stream3_IRQn, 3, 0);
 80038cc:	200e      	movs	r0, #14
  __HAL_RCC_DMA1_CLK_ENABLE();
 80038ce:	9b02      	ldr	r3, [sp, #8]
  HAL_NVIC_SetPriority(DMA1_Stream3_IRQn, 3, 0);
 80038d0:	f008 f8dc 	bl	800ba8c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream3_IRQn);
 80038d4:	200e      	movs	r0, #14
 80038d6:	f008 f915 	bl	800bb04 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DMA1_Stream4_IRQn, 3, 0);
 80038da:	4622      	mov	r2, r4
 80038dc:	4639      	mov	r1, r7
 80038de:	200f      	movs	r0, #15
 80038e0:	f008 f8d4 	bl	800ba8c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
 80038e4:	200f      	movs	r0, #15
 80038e6:	f008 f90d 	bl	800bb04 <HAL_NVIC_EnableIRQ>
  hspi2.Init.Mode = SPI_MODE_MASTER;
 80038ea:	f8df e110 	ldr.w	lr, [pc, #272]	@ 80039fc <main+0x33c>
  hspi2.Instance = SPI2;
 80038ee:	483d      	ldr	r0, [pc, #244]	@ (80039e4 <main+0x324>)
  hspi2.Init.Mode = SPI_MODE_MASTER;
 80038f0:	f44f 7382 	mov.w	r3, #260	@ 0x104
  hspi2.Init.NSS = SPI_NSS_SOFT;
 80038f4:	f44f 7a00 	mov.w	sl, #512	@ 0x200
  hspi2.Init.CRCPolynomial = 10;
 80038f8:	270a      	movs	r7, #10
  hspi2.Init.Mode = SPI_MODE_MASTER;
 80038fa:	e9c0 e300 	strd	lr, r3, [r0]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 80038fe:	f8c0 a018 	str.w	sl, [r0, #24]
  hspi2.Init.CRCPolynomial = 10;
 8003902:	62c7      	str	r7, [r0, #44]	@ 0x2c
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 8003904:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 8003908:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 800390c:	e9c0 4407 	strd	r4, r4, [r0, #28]
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8003910:	e9c0 4409 	strd	r4, r4, [r0, #36]	@ 0x24
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 8003914:	f00b fc90 	bl	800f238 <HAL_SPI_Init>
  setup();
 8003918:	f7fc feee 	bl	80006f8 <setup>
  hcrc.Instance = CRC;
 800391c:	4832      	ldr	r0, [pc, #200]	@ (80039e8 <main+0x328>)
 800391e:	4b33      	ldr	r3, [pc, #204]	@ (80039ec <main+0x32c>)
 8003920:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8003922:	f008 f90f 	bl	800bb44 <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 8003926:	4b32      	ldr	r3, [pc, #200]	@ (80039f0 <main+0x330>)
 8003928:	602b      	str	r3, [r5, #0]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800392a:	4628      	mov	r0, r5
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 800392c:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8003930:	e9c5 440a 	strd	r4, r4, [r5, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8003934:	e9c5 440c 	strd	r4, r4, [r5, #48]	@ 0x30
  hdma2d.Init.OutputOffset = 0;
 8003938:	60ec      	str	r4, [r5, #12]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800393a:	f008 fb5b 	bl	800bff4 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 800393e:	4631      	mov	r1, r6
 8003940:	4628      	mov	r0, r5
 8003942:	f008 fc1d 	bl	800c180 <HAL_DMA2D_ConfigLayer>
  HAL_GPIO_WritePin(LCD_RST_GPIO_Port, LCD_RST_Pin, GPIO_PIN_RESET);
 8003946:	4622      	mov	r2, r4
 8003948:	4641      	mov	r1, r8
 800394a:	4823      	ldr	r0, [pc, #140]	@ (80039d8 <main+0x318>)
  hdsi.Instance = DSI;
 800394c:	4d29      	ldr	r5, [pc, #164]	@ (80039f4 <main+0x334>)
  HAL_GPIO_WritePin(LCD_RST_GPIO_Port, LCD_RST_Pin, GPIO_PIN_RESET);
 800394e:	f009 fb95 	bl	800d07c <HAL_GPIO_WritePin>
  HAL_Delay(20); /* wait 20 ms */
 8003952:	2014      	movs	r0, #20
 8003954:	f008 f876 	bl	800ba44 <HAL_Delay>
  HAL_GPIO_WritePin(LCD_RST_GPIO_Port, LCD_RST_Pin, GPIO_PIN_SET);
 8003958:	4632      	mov	r2, r6
 800395a:	4641      	mov	r1, r8
 800395c:	481e      	ldr	r0, [pc, #120]	@ (80039d8 <main+0x318>)
 800395e:	f009 fb8d 	bl	800d07c <HAL_GPIO_WritePin>
  HAL_Delay(10);
 8003962:	4638      	mov	r0, r7
 8003964:	f008 f86e 	bl	800ba44 <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 8003968:	2224      	movs	r2, #36	@ 0x24
 800396a:	4621      	mov	r1, r4
 800396c:	a817      	add	r0, sp, #92	@ 0x5c
  DSI_PLLInitTypeDef PLLInit = {0};
 800396e:	9410      	str	r4, [sp, #64]	@ 0x40
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 8003970:	f02b f8eb 	bl	802eb4a <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 8003974:	2234      	movs	r2, #52	@ 0x34
 8003976:	4621      	mov	r1, r4
 8003978:	a82d      	add	r0, sp, #180	@ 0xb4
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 800397a:	e9cd 4411 	strd	r4, r4, [sp, #68]	@ 0x44
 800397e:	e9cd 4413 	strd	r4, r4, [sp, #76]	@ 0x4c
 8003982:	e9cd 4415 	strd	r4, r4, [sp, #84]	@ 0x54
  DSI_LPCmdTypeDef LPCmd = {0};
 8003986:	f02b f8e0 	bl	802eb4a <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 800398a:	222c      	movs	r2, #44	@ 0x2c
 800398c:	4621      	mov	r1, r4
 800398e:	eb0d 0008 	add.w	r0, sp, r8
 8003992:	f02b f8da 	bl	802eb4a <memset>
  hdsi.Instance = DSI;
 8003996:	4b18      	ldr	r3, [pc, #96]	@ (80039f8 <main+0x338>)
 8003998:	602b      	str	r3, [r5, #0]
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 800399a:	2702      	movs	r7, #2
  PLLInit.PLLNDIV = 125;
 800399c:	237d      	movs	r3, #125	@ 0x7d
  hdsi.Init.TXEscapeCkdiv = 4;
 800399e:	f04f 0b04 	mov.w	fp, #4
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80039a2:	a90e      	add	r1, sp, #56	@ 0x38
 80039a4:	4628      	mov	r0, r5
  PLLInit.PLLNDIV = 125;
 80039a6:	930e      	str	r3, [sp, #56]	@ 0x38
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 80039a8:	970f      	str	r7, [sp, #60]	@ 0x3c
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 80039aa:	606c      	str	r4, [r5, #4]
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 80039ac:	60ee      	str	r6, [r5, #12]
  hdsi.Init.TXEscapeCkdiv = 4;
 80039ae:	f8c5 b008 	str.w	fp, [r5, #8]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80039b2:	f008 fc9f 	bl	800c2f4 <HAL_DSI_Init>
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80039b6:	a917      	add	r1, sp, #92	@ 0x5c
 80039b8:	4628      	mov	r0, r5
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 80039ba:	e9cd 6417 	strd	r6, r4, [sp, #92]	@ 0x5c
  HostTimeouts.HighSpeedReadTimeout = 0;
 80039be:	e9cd 4419 	strd	r4, r4, [sp, #100]	@ 0x64
 80039c2:	e01d      	b.n	8003a00 <main+0x340>
 80039c4:	40023800 	.word	0x40023800
 80039c8:	40021800 	.word	0x40021800
 80039cc:	40020c00 	.word	0x40020c00
 80039d0:	40022800 	.word	0x40022800
 80039d4:	40020000 	.word	0x40020000
 80039d8:	40021c00 	.word	0x40021c00
 80039dc:	40022400 	.word	0x40022400
 80039e0:	20005350 	.word	0x20005350
 80039e4:	20005194 	.word	0x20005194
 80039e8:	20005390 	.word	0x20005390
 80039ec:	40023000 	.word	0x40023000
 80039f0:	4002b000 	.word	0x4002b000
 80039f4:	20005334 	.word	0x20005334
 80039f8:	40016c00 	.word	0x40016c00
 80039fc:	40003800 	.word	0x40003800
  HostTimeouts.HighSpeedWriteTimeout = 0;
 8003a00:	e9cd 441b 	strd	r4, r4, [sp, #108]	@ 0x6c
  HostTimeouts.LowPowerWriteTimeout = 0;
 8003a04:	e9cd 441d 	strd	r4, r4, [sp, #116]	@ 0x74
  HostTimeouts.BTATimeout = 0;
 8003a08:	941f      	str	r4, [sp, #124]	@ 0x7c
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 8003a0a:	f008 ff01 	bl	800c810 <HAL_DSI_ConfigHostTimeouts>
  PhyTimings.ClockLaneLP2HSTime = 33;
 8003a0e:	221c      	movs	r2, #28
 8003a10:	2321      	movs	r3, #33	@ 0x21
 8003a12:	e9cd 2311 	strd	r2, r3, [sp, #68]	@ 0x44
  PhyTimings.DataLaneLP2HSTime = 25;
 8003a16:	200f      	movs	r0, #15
 8003a18:	2319      	movs	r3, #25
 8003a1a:	e9cd 0313 	strd	r0, r3, [sp, #76]	@ 0x4c
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8003a1e:	a911      	add	r1, sp, #68	@ 0x44
 8003a20:	4628      	mov	r0, r5
  PhyTimings.StopWaitTime = 0;
 8003a22:	e9cd 4415 	strd	r4, r4, [sp, #84]	@ 0x54
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8003a26:	f008 feb3 	bl	800c790 <HAL_DSI_ConfigPhyTimer>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 8003a2a:	4659      	mov	r1, fp
 8003a2c:	4628      	mov	r0, r5
 8003a2e:	f008 fe9b 	bl	800c768 <HAL_DSI_ConfigFlowControl>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 8003a32:	f242 7110 	movw	r1, #10000	@ 0x2710
 8003a36:	4628      	mov	r0, r5
 8003a38:	f009 f8f6 	bl	800cc28 <HAL_DSI_SetLowPowerRXFilter>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 8003a3c:	4621      	mov	r1, r4
 8003a3e:	4628      	mov	r0, r5
 8003a40:	f008 fbf4 	bl	800c22c <HAL_DSI_ConfigErrorMonitor>
  LPCmd.LPGenShortWriteNoP = DSI_LP_GSW0P_ENABLE;
 8003a44:	f44f 7380 	mov.w	r3, #256	@ 0x100
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8003a48:	f44f 6e80 	mov.w	lr, #1024	@ 0x400
  LPCmd.LPGenShortWriteNoP = DSI_LP_GSW0P_ENABLE;
 8003a4c:	932d      	str	r3, [sp, #180]	@ 0xb4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8003a4e:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8003a52:	e9cd e32f 	strd	lr, r3, [sp, #188]	@ 0xbc
  LPCmd.LPGenShortReadOneP = DSI_LP_GSR1P_ENABLE;
 8003a56:	f8cd 90c4 	str.w	r9, [sp, #196]	@ 0xc4
  LPCmd.LPGenLongWrite = DSI_LP_GLW_ENABLE;
 8003a5a:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 8003a5e:	f44f 5900 	mov.w	r9, #8192	@ 0x2000
 8003a62:	e9cd 9332 	strd	r9, r3, [sp, #200]	@ 0xc8
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 8003a66:	f8cd a0b8 	str.w	sl, [sp, #184]	@ 0xb8
  LPCmd.LPDcsShortWriteOneP = DSI_LP_DSW1P_ENABLE;
 8003a6a:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8003a6e:	f44f 3a80 	mov.w	sl, #65536	@ 0x10000
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_ENABLE;
 8003a72:	f44f 2280 	mov.w	r2, #262144	@ 0x40000
  LPCmd.LPDcsShortWriteOneP = DSI_LP_DSW1P_ENABLE;
 8003a76:	e9cd a334 	strd	sl, r3, [sp, #208]	@ 0xd0
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_ENABLE;
 8003a7a:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 8003a7e:	e9cd 2336 	strd	r2, r3, [sp, #216]	@ 0xd8
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8003a82:	a92d      	add	r1, sp, #180	@ 0xb4
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8003a84:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8003a88:	4628      	mov	r0, r5
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 8003a8a:	9739      	str	r7, [sp, #228]	@ 0xe4
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8003a8c:	9338      	str	r3, [sp, #224]	@ 0xe0
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8003a8e:	f008 fe35 	bl	800c6fc <HAL_DSI_ConfigCommand>
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8003a92:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
  CmdCfg.VSPolarity = DSI_VSYNC_ACTIVE_LOW;
 8003a96:	e9cd b725 	strd	fp, r7, [sp, #148]	@ 0x94
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8003a9a:	eb0d 0108 	add.w	r1, sp, r8
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8003a9e:	2710      	movs	r7, #16
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8003aa0:	4628      	mov	r0, r5
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8003aa2:	e9cd 3722 	strd	r3, r7, [sp, #136]	@ 0x88
  CmdCfg.ColorCoding = DSI_RGB565;
 8003aa6:	e9cd 4420 	strd	r4, r4, [sp, #128]	@ 0x80
  CmdCfg.VSyncPol = DSI_VSYNC_FALLING;
 8003aaa:	e9cd 4427 	strd	r4, r4, [sp, #156]	@ 0x9c
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 8003aae:	e9cd 4629 	strd	r4, r6, [sp, #164]	@ 0xa4
  CmdCfg.TearingEffectPolarity = DSI_TE_RISING_EDGE;
 8003ab2:	9424      	str	r4, [sp, #144]	@ 0x90
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8003ab4:	f008 fdac 	bl	800c610 <HAL_DSI_ConfigAdaptedCommandMode>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 8003ab8:	4621      	mov	r1, r4
 8003aba:	4628      	mov	r0, r5
 8003abc:	f008 fd94 	bl	800c5e8 <HAL_DSI_SetGenericVCID>
  HAL_DSI_Start(&hdsi);
 8003ac0:	4628      	mov	r0, r5
 8003ac2:	f008 ff0f 	bl	800c8e4 <HAL_DSI_Start>
  if (OTM8009A_ReadID() == OTM8009A_ID)
 8003ac6:	f007 fc37 	bl	800b338 <OTM8009A_ReadID>
 8003aca:	2840      	cmp	r0, #64	@ 0x40
 8003acc:	f040 80ec 	bne.w	8003ca8 <main+0x5e8>
    lcd_is_OTM8009A = 1;
 8003ad0:	4f81      	ldr	r7, [pc, #516]	@ (8003cd8 <main+0x618>)
 8003ad2:	703e      	strb	r6, [r7, #0]
  HAL_DSI_Stop(&hdsi);
 8003ad4:	4881      	ldr	r0, [pc, #516]	@ (8003cdc <main+0x61c>)
  hltdc.Instance = LTDC;
 8003ad6:	4d82      	ldr	r5, [pc, #520]	@ (8003ce0 <main+0x620>)
  HAL_DSI_Stop(&hdsi);
 8003ad8:	f008 ff2c 	bl	800c934 <HAL_DSI_Stop>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8003adc:	4881      	ldr	r0, [pc, #516]	@ (8003ce4 <main+0x624>)
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 8003ade:	4b82      	ldr	r3, [pc, #520]	@ (8003ce8 <main+0x628>)
 8003ae0:	2400      	movs	r4, #0
 8003ae2:	e9c0 3400 	strd	r3, r4, [r0]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8003ae6:	2304      	movs	r3, #4
 8003ae8:	60c3      	str	r3, [r0, #12]
  SdramTiming.SelfRefreshTime = 4;
 8003aea:	932f      	str	r3, [sp, #188]	@ 0xbc
  SdramTiming.ExitSelfRefreshDelay = 7;
 8003aec:	2307      	movs	r3, #7
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8003aee:	2220      	movs	r2, #32
  SdramTiming.ExitSelfRefreshDelay = 7;
 8003af0:	932e      	str	r3, [sp, #184]	@ 0xb8
  SdramTiming.RowCycleDelay = 7;
 8003af2:	9330      	str	r3, [sp, #192]	@ 0xc0
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8003af4:	2340      	movs	r3, #64	@ 0x40
 8003af6:	e9c0 2304 	strd	r2, r3, [r0, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8003afa:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 8003afe:	f44f 5e80 	mov.w	lr, #4096	@ 0x1000
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8003b02:	6183      	str	r3, [r0, #24]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 8003b04:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 8003b08:	e9c0 e309 	strd	lr, r3, [r0, #36]	@ 0x24
  SdramTiming.LoadToActiveDelay = 2;
 8003b0c:	2602      	movs	r6, #2
  SdramTiming.WriteRecoveryTime = 3;
 8003b0e:	2303      	movs	r3, #3
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8003b10:	a92d      	add	r1, sp, #180	@ 0xb4
  SdramTiming.WriteRecoveryTime = 3;
 8003b12:	9331      	str	r3, [sp, #196]	@ 0xc4
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 8003b14:	e9c0 4407 	strd	r4, r4, [r0, #28]
  SdramTiming.RCDDelay = 2;
 8003b18:	e9cd 6632 	strd	r6, r6, [sp, #200]	@ 0xc8
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8003b1c:	6084      	str	r4, [r0, #8]
  SdramTiming.LoadToActiveDelay = 2;
 8003b1e:	962d      	str	r6, [sp, #180]	@ 0xb4
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8003b20:	f00b fa7e 	bl	800f020 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit();
 8003b24:	f007 ff3a 	bl	800b99c <BSP_SDRAM_DeInit>
  if (BSP_SDRAM_Init() != SDRAM_OK)
 8003b28:	f007 fee8 	bl	800b8fc <BSP_SDRAM_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8003b2c:	2234      	movs	r2, #52	@ 0x34
 8003b2e:	4621      	mov	r1, r4
 8003b30:	a820      	add	r0, sp, #128	@ 0x80
 8003b32:	f02b f80a 	bl	802eb4a <memset>
  hltdc.Init.HorizontalSync = 1;
 8003b36:	2301      	movs	r3, #1
  hltdc.Init.VerticalSync = 1;
 8003b38:	e9c5 3305 	strd	r3, r3, [r5, #20]
  hltdc.Instance = LTDC;
 8003b3c:	4b6b      	ldr	r3, [pc, #428]	@ (8003cec <main+0x62c>)
 8003b3e:	602b      	str	r3, [r5, #0]
  hltdc.Init.AccumulatedActiveH = 802;
 8003b40:	f44f 79f1 	mov.w	r9, #482	@ 0x1e2
 8003b44:	f240 3322 	movw	r3, #802	@ 0x322
 8003b48:	e9c5 9309 	strd	r9, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 803;
 8003b4c:	f240 1ae3 	movw	sl, #483	@ 0x1e3
 8003b50:	f240 3323 	movw	r3, #803	@ 0x323
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8003b54:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 803;
 8003b56:	e9c5 a30b 	strd	sl, r3, [r5, #44]	@ 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8003b5a:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8003b5e:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.AccumulatedVBP = 2;
 8003b62:	e9c5 6607 	strd	r6, r6, [r5, #28]
  hltdc.Init.Backcolor.Blue = 0;
 8003b66:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 8003b68:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8003b6c:	f00a f83a 	bl	800dbe4 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
 8003b70:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 8003b74:	9321      	str	r3, [sp, #132]	@ 0x84
  pLayerCfg.ImageWidth = 480;
 8003b76:	932a      	str	r3, [sp, #168]	@ 0xa8
  pLayerCfg.WindowY1 = 800;
 8003b78:	f44f 7348 	mov.w	r3, #800	@ 0x320
 8003b7c:	9323      	str	r3, [sp, #140]	@ 0x8c
  pLayerCfg.ImageHeight = 800;
 8003b7e:	932b      	str	r3, [sp, #172]	@ 0xac
  pLayerCfg.Alpha = 255;
 8003b80:	23ff      	movs	r3, #255	@ 0xff
 8003b82:	9325      	str	r3, [sp, #148]	@ 0x94
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8003b84:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 8003b88:	2305      	movs	r3, #5
 8003b8a:	e9cd 0327 	strd	r0, r3, [sp, #156]	@ 0x9c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8003b8e:	a920      	add	r1, sp, #128	@ 0x80
  pLayerCfg.FBStartAdress = 0xC0000000;
 8003b90:	f04f 4340 	mov.w	r3, #3221225472	@ 0xc0000000
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8003b94:	4622      	mov	r2, r4
 8003b96:	4628      	mov	r0, r5
  pLayerCfg.FBStartAdress = 0xC0000000;
 8003b98:	9329      	str	r3, [sp, #164]	@ 0xa4
  pLayerCfg.WindowX0 = 0;
 8003b9a:	9420      	str	r4, [sp, #128]	@ 0x80
  pLayerCfg.WindowY0 = 0;
 8003b9c:	9422      	str	r4, [sp, #136]	@ 0x88
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8003b9e:	9624      	str	r6, [sp, #144]	@ 0x90
  pLayerCfg.Alpha0 = 0;
 8003ba0:	9426      	str	r4, [sp, #152]	@ 0x98
  pLayerCfg.Backcolor.Blue = 0;
 8003ba2:	f8ad 40b0 	strh.w	r4, [sp, #176]	@ 0xb0
  pLayerCfg.Backcolor.Red = 0;
 8003ba6:	f88d 40b2 	strb.w	r4, [sp, #178]	@ 0xb2
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8003baa:	f00a f8f3 	bl	800dd94 <HAL_LTDC_ConfigLayer>
  __HAL_LTDC_DISABLE(&hltdc);
 8003bae:	682a      	ldr	r2, [r5, #0]
  HAL_DSI_Start(&hdsi);
 8003bb0:	484a      	ldr	r0, [pc, #296]	@ (8003cdc <main+0x61c>)
  __HAL_LTDC_DISABLE(&hltdc);
 8003bb2:	6993      	ldr	r3, [r2, #24]
 8003bb4:	f023 0301 	bic.w	r3, r3, #1
 8003bb8:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 8003bba:	f008 fe93 	bl	800c8e4 <HAL_DSI_Start>
  if (lcd_is_OTM8009A)
 8003bbe:	783f      	ldrb	r7, [r7, #0]
 8003bc0:	2f00      	cmp	r7, #0
 8003bc2:	d065      	beq.n	8003c90 <main+0x5d0>
    OTM8009A_Init(OTM8009A_FORMAT_RBG565, OTM8009A_ORIENTATION_PORTRAIT);
 8003bc4:	4621      	mov	r1, r4
 8003bc6:	4630      	mov	r0, r6
 8003bc8:	f007 f972 	bl	800aeb0 <OTM8009A_Init>
    HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPOFF, 0x00);
 8003bcc:	4843      	ldr	r0, [pc, #268]	@ (8003cdc <main+0x61c>)
 8003bce:	9400      	str	r4, [sp, #0]
 8003bd0:	2328      	movs	r3, #40	@ 0x28
 8003bd2:	2215      	movs	r2, #21
 8003bd4:	4621      	mov	r1, r4
 8003bd6:	f008 fee9 	bl	800c9ac <HAL_DSI_ShortWrite>
  LPCmd.LPGenShortWriteNoP = DSI_LP_GSW0P_DISABLE;
 8003bda:	2400      	movs	r4, #0
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8003bdc:	a92d      	add	r1, sp, #180	@ 0xb4
 8003bde:	483f      	ldr	r0, [pc, #252]	@ (8003cdc <main+0x61c>)
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 8003be0:	9437      	str	r4, [sp, #220]	@ 0xdc
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 8003be2:	e9cd 442d 	strd	r4, r4, [sp, #180]	@ 0xb4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 8003be6:	e9cd 442f 	strd	r4, r4, [sp, #188]	@ 0xbc
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 8003bea:	e9cd 4431 	strd	r4, r4, [sp, #196]	@ 0xc4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 8003bee:	e9cd 4433 	strd	r4, r4, [sp, #204]	@ 0xcc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 8003bf2:	e9cd 4435 	strd	r4, r4, [sp, #212]	@ 0xd4
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8003bf6:	f008 fd81 	bl	800c6fc <HAL_DSI_ConfigCommand>
  __HAL_LTDC_ENABLE(&hltdc);
 8003bfa:	6829      	ldr	r1, [r5, #0]
  hqspi.Instance = QUADSPI;
 8003bfc:	483c      	ldr	r0, [pc, #240]	@ (8003cf0 <main+0x630>)
  __HAL_LTDC_ENABLE(&hltdc);
 8003bfe:	698b      	ldr	r3, [r1, #24]
  hqspi.Init.ClockPrescaler = 1;
 8003c00:	2201      	movs	r2, #1
  __HAL_LTDC_ENABLE(&hltdc);
 8003c02:	4313      	orrs	r3, r2
 8003c04:	618b      	str	r3, [r1, #24]
  hqspi.Instance = QUADSPI;
 8003c06:	4b3b      	ldr	r3, [pc, #236]	@ (8003cf4 <main+0x634>)
 8003c08:	6003      	str	r3, [r0, #0]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8003c0a:	2310      	movs	r3, #16
  hqspi.Init.FlashSize = 27;
 8003c0c:	211b      	movs	r1, #27
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8003c0e:	60c3      	str	r3, [r0, #12]
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 8003c10:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8003c14:	e9c0 1304 	strd	r1, r3, [r0, #16]
  hqspi.Init.FifoThreshold = 1;
 8003c18:	e9c0 2201 	strd	r2, r2, [r0, #4]
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 8003c1c:	e9c0 4406 	strd	r4, r4, [r0, #24]
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 8003c20:	6204      	str	r4, [r0, #32]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 8003c22:	f00a fa6d 	bl	800e100 <HAL_QSPI_Init>
  BSP_QSPI_DeInit();
 8003c26:	f007 fd2d 	bl	800b684 <BSP_QSPI_DeInit>
  if (BSP_QSPI_Init() != QSPI_OK)
 8003c2a:	f007 fc1b 	bl	800b464 <BSP_QSPI_Init>
  if (BSP_QSPI_EnableMemoryMappedMode() != QSPI_OK)
 8003c2e:	f007 fb93 	bl	800b358 <BSP_QSPI_EnableMemoryMappedMode>
  hi2c1.Instance = I2C1;
 8003c32:	4831      	ldr	r0, [pc, #196]	@ (8003cf8 <main+0x638>)
 8003c34:	4931      	ldr	r1, [pc, #196]	@ (8003cfc <main+0x63c>)
  hi2c1.Init.ClockSpeed = 400000;
 8003c36:	4a32      	ldr	r2, [pc, #200]	@ (8003d00 <main+0x640>)
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8003c38:	6204      	str	r4, [r0, #32]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8003c3a:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
  hi2c1.Init.ClockSpeed = 400000;
 8003c3e:	e9c0 1200 	strd	r1, r2, [r0]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8003c42:	e9c0 3404 	strd	r3, r4, [r0, #16]
  hi2c1.Init.OwnAddress1 = 0;
 8003c46:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8003c4a:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8003c4e:	f009 fc41 	bl	800d4d4 <HAL_I2C_Init>
  MX_TouchGFX_Init();
 8003c52:	f7fd fedd 	bl	8001a10 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8003c56:	f7fd fed9 	bl	8001a0c <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 8003c5a:	f00c f86d 	bl	800fd38 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8003c5e:	4a29      	ldr	r2, [pc, #164]	@ (8003d04 <main+0x644>)
 8003c60:	4829      	ldr	r0, [pc, #164]	@ (8003d08 <main+0x648>)
 8003c62:	4621      	mov	r1, r4
 8003c64:	f00c f894 	bl	800fd90 <osThreadNew>
 8003c68:	4b28      	ldr	r3, [pc, #160]	@ (8003d0c <main+0x64c>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8003c6a:	4a29      	ldr	r2, [pc, #164]	@ (8003d10 <main+0x650>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8003c6c:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8003c6e:	4621      	mov	r1, r4
 8003c70:	4828      	ldr	r0, [pc, #160]	@ (8003d14 <main+0x654>)
 8003c72:	f00c f88d 	bl	800fd90 <osThreadNew>
 8003c76:	4b28      	ldr	r3, [pc, #160]	@ (8003d18 <main+0x658>)
  SPITaskHandle = osThreadNew(StartSPITask, NULL, &SPITask_attributes);
 8003c78:	4a28      	ldr	r2, [pc, #160]	@ (8003d1c <main+0x65c>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8003c7a:	4605      	mov	r5, r0
  SPITaskHandle = osThreadNew(StartSPITask, NULL, &SPITask_attributes);
 8003c7c:	4621      	mov	r1, r4
 8003c7e:	4828      	ldr	r0, [pc, #160]	@ (8003d20 <main+0x660>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8003c80:	601d      	str	r5, [r3, #0]
  SPITaskHandle = osThreadNew(StartSPITask, NULL, &SPITask_attributes);
 8003c82:	f00c f885 	bl	800fd90 <osThreadNew>
 8003c86:	4b27      	ldr	r3, [pc, #156]	@ (8003d24 <main+0x664>)
 8003c88:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8003c8a:	f00c f867 	bl	800fd5c <osKernelStart>
  while (1)
 8003c8e:	e7fe      	b.n	8003c8e <main+0x5ce>
    NT35510_Init(NT35510_FORMAT_RBG565, NT35510_ORIENTATION_PORTRAIT);
 8003c90:	4639      	mov	r1, r7
 8003c92:	4630      	mov	r0, r6
 8003c94:	f006 ff9a 	bl	800abcc <NT35510_Init>
    HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, NT35510_CMD_DISPOFF, 0x00);
 8003c98:	9700      	str	r7, [sp, #0]
 8003c9a:	2328      	movs	r3, #40	@ 0x28
 8003c9c:	2215      	movs	r2, #21
 8003c9e:	4639      	mov	r1, r7
 8003ca0:	480e      	ldr	r0, [pc, #56]	@ (8003cdc <main+0x61c>)
 8003ca2:	f008 fe83 	bl	800c9ac <HAL_DSI_ShortWrite>
 8003ca6:	e798      	b.n	8003bda <main+0x51a>
    CmdCfg.CommandSize = 200;
 8003ca8:	23c8      	movs	r3, #200	@ 0xc8
    if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8003caa:	a920      	add	r1, sp, #128	@ 0x80
 8003cac:	4628      	mov	r0, r5
    CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8003cae:	9723      	str	r7, [sp, #140]	@ 0x8c
    CmdCfg.CommandSize = 200;
 8003cb0:	9322      	str	r3, [sp, #136]	@ 0x88
    CmdCfg.ColorCoding = DSI_RGB565;
 8003cb2:	e9cd 4420 	strd	r4, r4, [sp, #128]	@ 0x80
    CmdCfg.HSPolarity = DSI_HSYNC_ACTIVE_HIGH;
 8003cb6:	e9cd 4424 	strd	r4, r4, [sp, #144]	@ 0x90
    CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 8003cba:	e9cd 4426 	strd	r4, r4, [sp, #152]	@ 0x98
    CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 8003cbe:	e9cd 4629 	strd	r4, r6, [sp, #164]	@ 0xa4
    CmdCfg.VSyncPol = DSI_VSYNC_RISING;
 8003cc2:	f8cd 80a0 	str.w	r8, [sp, #160]	@ 0xa0
    if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8003cc6:	f008 fca3 	bl	800c610 <HAL_DSI_ConfigAdaptedCommandMode>
    if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 8003cca:	4621      	mov	r1, r4
 8003ccc:	4628      	mov	r0, r5
 8003cce:	f008 fc8b 	bl	800c5e8 <HAL_DSI_SetGenericVCID>
 8003cd2:	4f01      	ldr	r7, [pc, #4]	@ (8003cd8 <main+0x618>)
 8003cd4:	e6fe      	b.n	8003ad4 <main+0x414>
 8003cd6:	bf00      	nop
 8003cd8:	20005094 	.word	0x20005094
 8003cdc:	20005334 	.word	0x20005334
 8003ce0:	20005238 	.word	0x20005238
 8003ce4:	200050a0 	.word	0x200050a0
 8003ce8:	a0000140 	.word	0xa0000140
 8003cec:	40016800 	.word	0x40016800
 8003cf0:	200051ec 	.word	0x200051ec
 8003cf4:	a0001000 	.word	0xa0001000
 8003cf8:	200052e0 	.word	0x200052e0
 8003cfc:	40005400 	.word	0x40005400
 8003d00:	00061a80 	.word	0x00061a80
 8003d04:	080305f8 	.word	0x080305f8
 8003d08:	08003615 	.word	0x08003615
 8003d0c:	2000509c 	.word	0x2000509c
 8003d10:	080305d4 	.word	0x080305d4
 8003d14:	08001a21 	.word	0x08001a21
 8003d18:	20005098 	.word	0x20005098
 8003d1c:	080305b0 	.word	0x080305b0
 8003d20:	08003605 	.word	0x08003605
 8003d24:	20005090 	.word	0x20005090

08003d28 <OTM8009A_IO_Delay>:
  HAL_Delay(Delay);
 8003d28:	f007 be8c 	b.w	800ba44 <HAL_Delay>

08003d2c <NT35510_IO_Delay>:
__weak void NT35510_IO_Delay(uint32_t Delay)
 8003d2c:	f007 be8a 	b.w	800ba44 <HAL_Delay>

08003d30 <DSI_IO_WriteCmd>:
{
 8003d30:	b500      	push	{lr}
  if (NbrParams <= 1)
 8003d32:	2801      	cmp	r0, #1
{
 8003d34:	b083      	sub	sp, #12
  if (NbrParams <= 1)
 8003d36:	d90b      	bls.n	8003d50 <DSI_IO_WriteCmd+0x20>
    HAL_DSI_LongWrite(&hdsi, LCD_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
 8003d38:	5c0a      	ldrb	r2, [r1, r0]
 8003d3a:	4603      	mov	r3, r0
 8003d3c:	e9cd 2100 	strd	r2, r1, [sp]
 8003d40:	4809      	ldr	r0, [pc, #36]	@ (8003d68 <DSI_IO_WriteCmd+0x38>)
 8003d42:	2239      	movs	r2, #57	@ 0x39
 8003d44:	2100      	movs	r1, #0
 8003d46:	f008 fe5d 	bl	800ca04 <HAL_DSI_LongWrite>
}
 8003d4a:	b003      	add	sp, #12
 8003d4c:	f85d fb04 	ldr.w	pc, [sp], #4
    HAL_DSI_ShortWrite(&hdsi, LCD_ID, DSI_DCS_SHORT_PKT_WRITE_P1, pParams[0], pParams[1]);
 8003d50:	784a      	ldrb	r2, [r1, #1]
 8003d52:	780b      	ldrb	r3, [r1, #0]
 8003d54:	4804      	ldr	r0, [pc, #16]	@ (8003d68 <DSI_IO_WriteCmd+0x38>)
 8003d56:	9200      	str	r2, [sp, #0]
 8003d58:	2100      	movs	r1, #0
 8003d5a:	2215      	movs	r2, #21
 8003d5c:	f008 fe26 	bl	800c9ac <HAL_DSI_ShortWrite>
}
 8003d60:	b003      	add	sp, #12
 8003d62:	f85d fb04 	ldr.w	pc, [sp], #4
 8003d66:	bf00      	nop
 8003d68:	20005334 	.word	0x20005334

08003d6c <DSI_IO_ReadCmd>:
{
 8003d6c:	b500      	push	{lr}
 8003d6e:	b085      	sub	sp, #20
 8003d70:	4613      	mov	r3, r2
  if (HAL_DSI_Read(&hdsi, LCD_ID, pData, Size, DSI_DCS_SHORT_PKT_READ, Reg, pData) != HAL_OK)
 8003d72:	2206      	movs	r2, #6
 8003d74:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8003d78:	9200      	str	r2, [sp, #0]
 8003d7a:	4805      	ldr	r0, [pc, #20]	@ (8003d90 <DSI_IO_ReadCmd+0x24>)
 8003d7c:	460a      	mov	r2, r1
 8003d7e:	2100      	movs	r1, #0
 8003d80:	f008 feaa 	bl	800cad8 <HAL_DSI_Read>
}
 8003d84:	fab0 f080 	clz	r0, r0
 8003d88:	0940      	lsrs	r0, r0, #5
 8003d8a:	b005      	add	sp, #20
 8003d8c:	f85d fb04 	ldr.w	pc, [sp], #4
 8003d90:	20005334 	.word	0x20005334

08003d94 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6)
 8003d94:	4b03      	ldr	r3, [pc, #12]	@ (8003da4 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8003d96:	6802      	ldr	r2, [r0, #0]
 8003d98:	429a      	cmp	r2, r3
 8003d9a:	d000      	beq.n	8003d9e <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8003d9c:	4770      	bx	lr
    HAL_IncTick();
 8003d9e:	f007 be3f 	b.w	800ba20 <HAL_IncTick>
 8003da2:	bf00      	nop
 8003da4:	40001000 	.word	0x40001000

08003da8 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8003da8:	4770      	bx	lr
 8003daa:	bf00      	nop

08003dac <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8003dac:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003dae:	4b0e      	ldr	r3, [pc, #56]	@ (8003de8 <HAL_MspInit+0x3c>)
 8003db0:	2200      	movs	r2, #0
 8003db2:	9200      	str	r2, [sp, #0]
 8003db4:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 8003db6:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 8003dba:	6459      	str	r1, [r3, #68]	@ 0x44
 8003dbc:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8003dbe:	f400 4080 	and.w	r0, r0, #16384	@ 0x4000
 8003dc2:	9000      	str	r0, [sp, #0]
 8003dc4:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8003dc6:	9201      	str	r2, [sp, #4]
 8003dc8:	6c18      	ldr	r0, [r3, #64]	@ 0x40
 8003dca:	f040 5080 	orr.w	r0, r0, #268435456	@ 0x10000000
 8003dce:	6418      	str	r0, [r3, #64]	@ 0x40
 8003dd0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003dd2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003dd6:	9301      	str	r3, [sp, #4]
 8003dd8:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8003dda:	210f      	movs	r1, #15
 8003ddc:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8003de0:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8003de2:	f007 be53 	b.w	800ba8c <HAL_NVIC_SetPriority>
 8003de6:	bf00      	nop
 8003de8:	40023800 	.word	0x40023800

08003dec <HAL_CRC_MspInit>:
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8003dec:	4b0b      	ldr	r3, [pc, #44]	@ (8003e1c <HAL_CRC_MspInit+0x30>)
 8003dee:	6802      	ldr	r2, [r0, #0]
 8003df0:	429a      	cmp	r2, r3
 8003df2:	d000      	beq.n	8003df6 <HAL_CRC_MspInit+0xa>
 8003df4:	4770      	bx	lr
{
 8003df6:	b082      	sub	sp, #8
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8003df8:	2200      	movs	r2, #0
 8003dfa:	9201      	str	r2, [sp, #4]
 8003dfc:	f8d3 2830 	ldr.w	r2, [r3, #2096]	@ 0x830
 8003e00:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8003e04:	f8c3 2830 	str.w	r2, [r3, #2096]	@ 0x830
 8003e08:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8003e0c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003e0e:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8003e12:	9301      	str	r3, [sp, #4]
 8003e14:	9b01      	ldr	r3, [sp, #4]

    /* USER CODE END CRC_MspInit 1 */

  }

}
 8003e16:	b002      	add	sp, #8
 8003e18:	4770      	bx	lr
 8003e1a:	bf00      	nop
 8003e1c:	40023000 	.word	0x40023000

08003e20 <HAL_DMA2D_MspInit>:
  * @param hdma2d: DMA2D handle pointer
  * @retval None
  */
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8003e20:	4b0e      	ldr	r3, [pc, #56]	@ (8003e5c <HAL_DMA2D_MspInit+0x3c>)
 8003e22:	6802      	ldr	r2, [r0, #0]
 8003e24:	429a      	cmp	r2, r3
 8003e26:	d000      	beq.n	8003e2a <HAL_DMA2D_MspInit+0xa>
 8003e28:	4770      	bx	lr
{
 8003e2a:	b500      	push	{lr}
 8003e2c:	b083      	sub	sp, #12
  {
    /* USER CODE BEGIN DMA2D_MspInit 0 */

    /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8003e2e:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
 8003e32:	2200      	movs	r2, #0
 8003e34:	9201      	str	r2, [sp, #4]
 8003e36:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8003e38:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8003e3c:	6319      	str	r1, [r3, #48]	@ 0x30
 8003e3e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003e40:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8003e44:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8003e46:	205a      	movs	r0, #90	@ 0x5a
 8003e48:	2105      	movs	r1, #5
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8003e4a:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8003e4c:	f007 fe1e 	bl	800ba8c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8003e50:	205a      	movs	r0, #90	@ 0x5a

    /* USER CODE END DMA2D_MspInit 1 */

  }

}
 8003e52:	b003      	add	sp, #12
 8003e54:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8003e58:	f007 be54 	b.w	800bb04 <HAL_NVIC_EnableIRQ>
 8003e5c:	4002b000 	.word	0x4002b000

08003e60 <HAL_DSI_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hdsi: DSI handle pointer
  * @retval None
  */
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 8003e60:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hdsi->Instance==DSI)
 8003e62:	4b1b      	ldr	r3, [pc, #108]	@ (8003ed0 <HAL_DSI_MspInit+0x70>)
 8003e64:	6802      	ldr	r2, [r0, #0]
{
 8003e66:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003e68:	2400      	movs	r4, #0
  if(hdsi->Instance==DSI)
 8003e6a:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003e6c:	e9cd 4402 	strd	r4, r4, [sp, #8]
 8003e70:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8003e74:	9406      	str	r4, [sp, #24]
  if(hdsi->Instance==DSI)
 8003e76:	d001      	beq.n	8003e7c <HAL_DSI_MspInit+0x1c>

    /* USER CODE END DSI_MspInit 1 */

  }

}
 8003e78:	b008      	add	sp, #32
 8003e7a:	bd10      	pop	{r4, pc}
    __HAL_RCC_DSI_CLK_ENABLE();
 8003e7c:	f503 434c 	add.w	r3, r3, #52224	@ 0xcc00
 8003e80:	9400      	str	r4, [sp, #0]
 8003e82:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8003e84:	4813      	ldr	r0, [pc, #76]	@ (8003ed4 <HAL_DSI_MspInit+0x74>)
    __HAL_RCC_DSI_CLK_ENABLE();
 8003e86:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 8003e8a:	645a      	str	r2, [r3, #68]	@ 0x44
 8003e8c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8003e8e:	f002 6200 	and.w	r2, r2, #134217728	@ 0x8000000
 8003e92:	9200      	str	r2, [sp, #0]
 8003e94:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8003e96:	9401      	str	r4, [sp, #4]
 8003e98:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8003e9a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003e9e:	631a      	str	r2, [r3, #48]	@ 0x30
 8003ea0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003ea2:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8003ea6:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8003ea8:	2204      	movs	r2, #4
 8003eaa:	2302      	movs	r3, #2
 8003eac:	e9cd 2302 	strd	r2, r3, [sp, #8]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8003eb0:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 8003eb2:	230d      	movs	r3, #13
 8003eb4:	9306      	str	r3, [sp, #24]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8003eb6:	9a01      	ldr	r2, [sp, #4]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8003eb8:	f008 fed0 	bl	800cc5c <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(DSI_IRQn, 5, 0);
 8003ebc:	4622      	mov	r2, r4
 8003ebe:	2105      	movs	r1, #5
 8003ec0:	205c      	movs	r0, #92	@ 0x5c
 8003ec2:	f007 fde3 	bl	800ba8c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 8003ec6:	205c      	movs	r0, #92	@ 0x5c
 8003ec8:	f007 fe1c 	bl	800bb04 <HAL_NVIC_EnableIRQ>
}
 8003ecc:	b008      	add	sp, #32
 8003ece:	bd10      	pop	{r4, pc}
 8003ed0:	40016c00 	.word	0x40016c00
 8003ed4:	40022400 	.word	0x40022400

08003ed8 <HAL_I2C_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8003ed8:	b530      	push	{r4, r5, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C1)
 8003eda:	4b1f      	ldr	r3, [pc, #124]	@ (8003f58 <HAL_I2C_MspInit+0x80>)
 8003edc:	6802      	ldr	r2, [r0, #0]
{
 8003ede:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003ee0:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C1)
 8003ee2:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003ee4:	e9cd 4402 	strd	r4, r4, [sp, #8]
 8003ee8:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8003eec:	9406      	str	r4, [sp, #24]
  if(hi2c->Instance==I2C1)
 8003eee:	d001      	beq.n	8003ef4 <HAL_I2C_MspInit+0x1c>
    HAL_Delay(100);
    /* USER CODE END I2C1_MspInit 1 */

  }

}
 8003ef0:	b009      	add	sp, #36	@ 0x24
 8003ef2:	bd30      	pop	{r4, r5, pc}
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003ef4:	4d19      	ldr	r5, [pc, #100]	@ (8003f5c <HAL_I2C_MspInit+0x84>)
 8003ef6:	9400      	str	r4, [sp, #0]
 8003ef8:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003efa:	4819      	ldr	r0, [pc, #100]	@ (8003f60 <HAL_I2C_MspInit+0x88>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003efc:	f043 0302 	orr.w	r3, r3, #2
 8003f00:	632b      	str	r3, [r5, #48]	@ 0x30
 8003f02:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 8003f04:	f003 0302 	and.w	r3, r3, #2
 8003f08:	9300      	str	r3, [sp, #0]
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8003f0a:	f44f 7240 	mov.w	r2, #768	@ 0x300
 8003f0e:	2312      	movs	r3, #18
 8003f10:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8003f14:	2201      	movs	r2, #1
 8003f16:	2303      	movs	r3, #3
 8003f18:	e9cd 2304 	strd	r2, r3, [sp, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003f1c:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8003f1e:	2304      	movs	r3, #4
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003f20:	9a00      	ldr	r2, [sp, #0]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8003f22:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003f24:	f008 fe9a 	bl	800cc5c <HAL_GPIO_Init>
    __HAL_RCC_I2C1_CLK_ENABLE();
 8003f28:	9401      	str	r4, [sp, #4]
 8003f2a:	6c2b      	ldr	r3, [r5, #64]	@ 0x40
 8003f2c:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8003f30:	642b      	str	r3, [r5, #64]	@ 0x40
 8003f32:	6c2b      	ldr	r3, [r5, #64]	@ 0x40
 8003f34:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8003f38:	9301      	str	r3, [sp, #4]
 8003f3a:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_I2C1_FORCE_RESET();
 8003f3c:	6a2b      	ldr	r3, [r5, #32]
 8003f3e:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8003f42:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C1_RELEASE_RESET();
 8003f44:	6a2b      	ldr	r3, [r5, #32]
 8003f46:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
    HAL_Delay(100);
 8003f4a:	2064      	movs	r0, #100	@ 0x64
    __HAL_RCC_I2C1_RELEASE_RESET();
 8003f4c:	622b      	str	r3, [r5, #32]
    HAL_Delay(100);
 8003f4e:	f007 fd79 	bl	800ba44 <HAL_Delay>
}
 8003f52:	b009      	add	sp, #36	@ 0x24
 8003f54:	bd30      	pop	{r4, r5, pc}
 8003f56:	bf00      	nop
 8003f58:	40005400 	.word	0x40005400
 8003f5c:	40023800 	.word	0x40023800
 8003f60:	40020400 	.word	0x40020400

08003f64 <HAL_LTDC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hltdc: LTDC handle pointer
  * @retval None
  */
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8003f64:	b510      	push	{r4, lr}
 8003f66:	4604      	mov	r4, r0
 8003f68:	b090      	sub	sp, #64	@ 0x40
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8003f6a:	223c      	movs	r2, #60	@ 0x3c
 8003f6c:	2100      	movs	r1, #0
 8003f6e:	a801      	add	r0, sp, #4
 8003f70:	f02a fdeb 	bl	802eb4a <memset>
  if(hltdc->Instance==LTDC)
 8003f74:	4b15      	ldr	r3, [pc, #84]	@ (8003fcc <HAL_LTDC_MspInit+0x68>)
 8003f76:	6822      	ldr	r2, [r4, #0]
 8003f78:	429a      	cmp	r2, r3
 8003f7a:	d001      	beq.n	8003f80 <HAL_LTDC_MspInit+0x1c>

    /* USER CODE END LTDC_MspInit 1 */

  }

}
 8003f7c:	b010      	add	sp, #64	@ 0x40
 8003f7e:	bd10      	pop	{r4, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8003f80:	2408      	movs	r4, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 144;
 8003f82:	2190      	movs	r1, #144	@ 0x90
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 2;
 8003f84:	2202      	movs	r2, #2
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_4;
 8003f86:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8003f8a:	a801      	add	r0, sp, #4
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8003f8c:	9401      	str	r4, [sp, #4]
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 144;
 8003f8e:	9105      	str	r1, [sp, #20]
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 2;
 8003f90:	9208      	str	r2, [sp, #32]
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_4;
 8003f92:	930b      	str	r3, [sp, #44]	@ 0x2c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8003f94:	f00a fcf0 	bl	800e978 <HAL_RCCEx_PeriphCLKConfig>
 8003f98:	b9a0      	cbnz	r0, 8003fc4 <HAL_LTDC_MspInit+0x60>
    __HAL_RCC_LTDC_CLK_ENABLE();
 8003f9a:	2200      	movs	r2, #0
 8003f9c:	4b0c      	ldr	r3, [pc, #48]	@ (8003fd0 <HAL_LTDC_MspInit+0x6c>)
 8003f9e:	9200      	str	r2, [sp, #0]
 8003fa0:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 8003fa2:	f041 6180 	orr.w	r1, r1, #67108864	@ 0x4000000
 8003fa6:	6459      	str	r1, [r3, #68]	@ 0x44
 8003fa8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003faa:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8003fae:	9300      	str	r3, [sp, #0]
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8003fb0:	2105      	movs	r1, #5
 8003fb2:	2058      	movs	r0, #88	@ 0x58
    __HAL_RCC_LTDC_CLK_ENABLE();
 8003fb4:	9b00      	ldr	r3, [sp, #0]
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8003fb6:	f007 fd69 	bl	800ba8c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8003fba:	2058      	movs	r0, #88	@ 0x58
 8003fbc:	f007 fda2 	bl	800bb04 <HAL_NVIC_EnableIRQ>
}
 8003fc0:	b010      	add	sp, #64	@ 0x40
 8003fc2:	bd10      	pop	{r4, pc}
      Error_Handler();
 8003fc4:	f7ff fef0 	bl	8003da8 <Error_Handler>
 8003fc8:	e7e7      	b.n	8003f9a <HAL_LTDC_MspInit+0x36>
 8003fca:	bf00      	nop
 8003fcc:	40016800 	.word	0x40016800
 8003fd0:	40023800 	.word	0x40023800

08003fd4 <HAL_QSPI_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hqspi: QSPI handle pointer
  * @retval None
  */
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 8003fd4:	b5f0      	push	{r4, r5, r6, r7, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hqspi->Instance==QUADSPI)
 8003fd6:	4b29      	ldr	r3, [pc, #164]	@ (800407c <HAL_QSPI_MspInit+0xa8>)
 8003fd8:	6802      	ldr	r2, [r0, #0]
{
 8003fda:	b08b      	sub	sp, #44	@ 0x2c
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003fdc:	2400      	movs	r4, #0
  if(hqspi->Instance==QUADSPI)
 8003fde:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003fe0:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8003fe4:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8003fe8:	9408      	str	r4, [sp, #32]
  if(hqspi->Instance==QUADSPI)
 8003fea:	d001      	beq.n	8003ff0 <HAL_QSPI_MspInit+0x1c>

    /* USER CODE END QUADSPI_MspInit 1 */

  }

}
 8003fec:	b00b      	add	sp, #44	@ 0x2c
 8003fee:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_QSPI_CLK_ENABLE();
 8003ff0:	4b23      	ldr	r3, [pc, #140]	@ (8004080 <HAL_QSPI_MspInit+0xac>)
 8003ff2:	9401      	str	r4, [sp, #4]
 8003ff4:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003ff6:	4823      	ldr	r0, [pc, #140]	@ (8004084 <HAL_QSPI_MspInit+0xb0>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8003ff8:	f042 0202 	orr.w	r2, r2, #2
 8003ffc:	639a      	str	r2, [r3, #56]	@ 0x38
 8003ffe:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8004000:	f002 0202 	and.w	r2, r2, #2
 8004004:	9201      	str	r2, [sp, #4]
 8004006:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8004008:	9402      	str	r4, [sp, #8]
 800400a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800400c:	f042 0202 	orr.w	r2, r2, #2
 8004010:	631a      	str	r2, [r3, #48]	@ 0x30
 8004012:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004014:	f002 0202 	and.w	r2, r2, #2
 8004018:	9202      	str	r2, [sp, #8]
 800401a:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800401c:	9403      	str	r4, [sp, #12]
 800401e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004020:	f042 0220 	orr.w	r2, r2, #32
 8004024:	631a      	str	r2, [r3, #48]	@ 0x30
 8004026:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004028:	f003 0320 	and.w	r3, r3, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 800402c:	2240      	movs	r2, #64	@ 0x40
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800402e:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004030:	2503      	movs	r5, #3
 8004032:	260a      	movs	r6, #10
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8004034:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8004036:	2302      	movs	r3, #2
 8004038:	e9cd 2304 	strd	r2, r3, [sp, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800403c:	2702      	movs	r7, #2
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800403e:	9b03      	ldr	r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004040:	e9cd 5607 	strd	r5, r6, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8004044:	f008 fe0a 	bl	800cc5c <HAL_GPIO_Init>
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004048:	f44f 6398 	mov.w	r3, #1216	@ 0x4c0
 800404c:	e9cd 3704 	strd	r3, r7, [sp, #16]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8004050:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8004052:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8004054:	480c      	ldr	r0, [pc, #48]	@ (8004088 <HAL_QSPI_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8004056:	9308      	str	r3, [sp, #32]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004058:	e9cd 4506 	strd	r4, r5, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800405c:	f008 fdfe 	bl	800cc5c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_8;
 8004060:	f44f 7340 	mov.w	r3, #768	@ 0x300
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8004064:	4808      	ldr	r0, [pc, #32]	@ (8004088 <HAL_QSPI_MspInit+0xb4>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004066:	9705      	str	r7, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8004068:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800406a:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 800406e:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_8;
 8004070:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8004072:	f008 fdf3 	bl	800cc5c <HAL_GPIO_Init>
}
 8004076:	b00b      	add	sp, #44	@ 0x2c
 8004078:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800407a:	bf00      	nop
 800407c:	a0001000 	.word	0xa0001000
 8004080:	40023800 	.word	0x40023800
 8004084:	40020400 	.word	0x40020400
 8004088:	40021400 	.word	0x40021400

0800408c <HAL_QSPI_MspDeInit>:
  * This function freeze the hardware resources used in this example
  * @param hqspi: QSPI handle pointer
  * @retval None
  */
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
 800408c:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 800408e:	6802      	ldr	r2, [r0, #0]
 8004090:	4b09      	ldr	r3, [pc, #36]	@ (80040b8 <HAL_QSPI_MspDeInit+0x2c>)
 8004092:	429a      	cmp	r2, r3
 8004094:	d000      	beq.n	8004098 <HAL_QSPI_MspDeInit+0xc>
    /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

    /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 8004096:	bd08      	pop	{r3, pc}
    __HAL_RCC_QSPI_CLK_DISABLE();
 8004098:	4a08      	ldr	r2, [pc, #32]	@ (80040bc <HAL_QSPI_MspDeInit+0x30>)
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 800409a:	4809      	ldr	r0, [pc, #36]	@ (80040c0 <HAL_QSPI_MspDeInit+0x34>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 800409c:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 800409e:	f023 0302 	bic.w	r3, r3, #2
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 80040a2:	2140      	movs	r1, #64	@ 0x40
    __HAL_RCC_QSPI_CLK_DISABLE();
 80040a4:	6393      	str	r3, [r2, #56]	@ 0x38
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 80040a6:	f008 ff11 	bl	800cecc <HAL_GPIO_DeInit>
}
 80040aa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_9
 80040ae:	4805      	ldr	r0, [pc, #20]	@ (80040c4 <HAL_QSPI_MspDeInit+0x38>)
 80040b0:	f44f 61f8 	mov.w	r1, #1984	@ 0x7c0
 80040b4:	f008 bf0a 	b.w	800cecc <HAL_GPIO_DeInit>
 80040b8:	a0001000 	.word	0xa0001000
 80040bc:	40023800 	.word	0x40023800
 80040c0:	40020400 	.word	0x40020400
 80040c4:	40021400 	.word	0x40021400

080040c8 <HAL_SPI_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hspi: SPI handle pointer
  * @retval None
  */
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80040c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI2)
 80040cc:	4b41      	ldr	r3, [pc, #260]	@ (80041d4 <HAL_SPI_MspInit+0x10c>)
 80040ce:	6802      	ldr	r2, [r0, #0]
{
 80040d0:	b08a      	sub	sp, #40	@ 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80040d2:	2400      	movs	r4, #0
  if(hspi->Instance==SPI2)
 80040d4:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80040d6:	e9cd 4404 	strd	r4, r4, [sp, #16]
 80040da:	e9cd 4406 	strd	r4, r4, [sp, #24]
 80040de:	9408      	str	r4, [sp, #32]
  if(hspi->Instance==SPI2)
 80040e0:	d002      	beq.n	80040e8 <HAL_SPI_MspInit+0x20>

    /* USER CODE END SPI2_MspInit 1 */

  }

}
 80040e2:	b00a      	add	sp, #40	@ 0x28
 80040e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_SPI2_CLK_ENABLE();
 80040e8:	f503 3300 	add.w	r3, r3, #131072	@ 0x20000
 80040ec:	9401      	str	r4, [sp, #4]
 80040ee:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
    hdma_spi2_rx.Instance = DMA1_Stream3;
 80040f0:	4e39      	ldr	r6, [pc, #228]	@ (80041d8 <HAL_SPI_MspInit+0x110>)
    __HAL_RCC_SPI2_CLK_ENABLE();
 80040f2:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80040f6:	641a      	str	r2, [r3, #64]	@ 0x40
 80040f8:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80040fa:	f402 4280 	and.w	r2, r2, #16384	@ 0x4000
 80040fe:	9201      	str	r2, [sp, #4]
 8004100:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8004102:	9402      	str	r4, [sp, #8]
 8004104:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004106:	f042 0208 	orr.w	r2, r2, #8
 800410a:	631a      	str	r2, [r3, #48]	@ 0x30
 800410c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800410e:	f002 0208 	and.w	r2, r2, #8
 8004112:	9202      	str	r2, [sp, #8]
 8004114:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8004116:	9403      	str	r4, [sp, #12]
 8004118:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800411a:	f042 0202 	orr.w	r2, r2, #2
 800411e:	631a      	str	r2, [r3, #48]	@ 0x30
 8004120:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004122:	f003 0302 	and.w	r3, r3, #2
 8004126:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Pin = SDW_SCK_Pin;
 8004128:	2208      	movs	r2, #8
 800412a:	2302      	movs	r3, #2
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800412c:	f04f 0803 	mov.w	r8, #3
 8004130:	2705      	movs	r7, #5
    HAL_GPIO_Init(SDW_SCK_GPIO_Port, &GPIO_InitStruct);
 8004132:	a904      	add	r1, sp, #16
 8004134:	4605      	mov	r5, r0
 8004136:	4829      	ldr	r0, [pc, #164]	@ (80041dc <HAL_SPI_MspInit+0x114>)
    GPIO_InitStruct.Pin = SDW_SCK_Pin;
 8004138:	e9cd 2304 	strd	r2, r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800413c:	e9cd 8707 	strd	r8, r7, [sp, #28]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8004140:	9b03      	ldr	r3, [sp, #12]
    HAL_GPIO_Init(SDW_SCK_GPIO_Port, &GPIO_InitStruct);
 8004142:	f008 fd8b 	bl	800cc5c <HAL_GPIO_Init>
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004146:	f44f 4240 	mov.w	r2, #49152	@ 0xc000
 800414a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800414c:	4824      	ldr	r0, [pc, #144]	@ (80041e0 <HAL_SPI_MspInit+0x118>)
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800414e:	f8cd 801c 	str.w	r8, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8004152:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004154:	e9cd 2304 	strd	r2, r3, [sp, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004158:	9406      	str	r4, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 800415a:	9708      	str	r7, [sp, #32]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800415c:	f008 fd7e 	bl	800cc5c <HAL_GPIO_Init>
    hdma_spi2_rx.Instance = DMA1_Stream3;
 8004160:	4a20      	ldr	r2, [pc, #128]	@ (80041e4 <HAL_SPI_MspInit+0x11c>)
    hdma_spi2_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8004162:	6274      	str	r4, [r6, #36]	@ 0x24
    hdma_spi2_rx.Init.MemInc = DMA_MINC_ENABLE;
 8004164:	f44f 6380 	mov.w	r3, #1024	@ 0x400
    if (HAL_DMA_Init(&hdma_spi2_rx) != HAL_OK)
 8004168:	4630      	mov	r0, r6
    hdma_spi2_rx.Init.Channel = DMA_CHANNEL_0;
 800416a:	e9c6 2400 	strd	r2, r4, [r6]
    hdma_spi2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 800416e:	e9c6 4402 	strd	r4, r4, [r6, #8]
    hdma_spi2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8004172:	e9c6 4405 	strd	r4, r4, [r6, #20]
    hdma_spi2_rx.Init.Priority = DMA_PRIORITY_LOW;
 8004176:	e9c6 4407 	strd	r4, r4, [r6, #28]
    hdma_spi2_rx.Init.MemInc = DMA_MINC_ENABLE;
 800417a:	6133      	str	r3, [r6, #16]
    if (HAL_DMA_Init(&hdma_spi2_rx) != HAL_OK)
 800417c:	f007 fcf6 	bl	800bb6c <HAL_DMA_Init>
 8004180:	bb10      	cbnz	r0, 80041c8 <HAL_SPI_MspInit+0x100>
    hdma_spi2_tx.Instance = DMA1_Stream4;
 8004182:	4c19      	ldr	r4, [pc, #100]	@ (80041e8 <HAL_SPI_MspInit+0x120>)
 8004184:	4919      	ldr	r1, [pc, #100]	@ (80041ec <HAL_SPI_MspInit+0x124>)
    __HAL_LINKDMA(hspi,hdmarx,hdma_spi2_rx);
 8004186:	64ee      	str	r6, [r5, #76]	@ 0x4c
    hdma_spi2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8004188:	2240      	movs	r2, #64	@ 0x40
    hdma_spi2_tx.Init.Channel = DMA_CHANNEL_0;
 800418a:	2300      	movs	r3, #0
    hdma_spi2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 800418c:	60a2      	str	r2, [r4, #8]
    if (HAL_DMA_Init(&hdma_spi2_tx) != HAL_OK)
 800418e:	4620      	mov	r0, r4
    hdma_spi2_tx.Init.MemInc = DMA_MINC_ENABLE;
 8004190:	f44f 6280 	mov.w	r2, #1024	@ 0x400
    hdma_spi2_tx.Init.Channel = DMA_CHANNEL_0;
 8004194:	e9c4 1300 	strd	r1, r3, [r4]
    hdma_spi2_tx.Init.MemInc = DMA_MINC_ENABLE;
 8004198:	e9c4 3203 	strd	r3, r2, [r4, #12]
    hdma_spi2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 800419c:	e9c4 3305 	strd	r3, r3, [r4, #20]
    hdma_spi2_tx.Init.Priority = DMA_PRIORITY_LOW;
 80041a0:	e9c4 3307 	strd	r3, r3, [r4, #28]
    __HAL_LINKDMA(hspi,hdmarx,hdma_spi2_rx);
 80041a4:	63b5      	str	r5, [r6, #56]	@ 0x38
    hdma_spi2_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80041a6:	6263      	str	r3, [r4, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_spi2_tx) != HAL_OK)
 80041a8:	f007 fce0 	bl	800bb6c <HAL_DMA_Init>
 80041ac:	b978      	cbnz	r0, 80041ce <HAL_SPI_MspInit+0x106>
    HAL_NVIC_SetPriority(SPI2_IRQn, 3, 0);
 80041ae:	2200      	movs	r2, #0
 80041b0:	2103      	movs	r1, #3
 80041b2:	2024      	movs	r0, #36	@ 0x24
    __HAL_LINKDMA(hspi,hdmatx,hdma_spi2_tx);
 80041b4:	64ac      	str	r4, [r5, #72]	@ 0x48
 80041b6:	63a5      	str	r5, [r4, #56]	@ 0x38
    HAL_NVIC_SetPriority(SPI2_IRQn, 3, 0);
 80041b8:	f007 fc68 	bl	800ba8c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI2_IRQn);
 80041bc:	2024      	movs	r0, #36	@ 0x24
 80041be:	f007 fca1 	bl	800bb04 <HAL_NVIC_EnableIRQ>
}
 80041c2:	b00a      	add	sp, #40	@ 0x28
 80041c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 80041c8:	f7ff fdee 	bl	8003da8 <Error_Handler>
 80041cc:	e7d9      	b.n	8004182 <HAL_SPI_MspInit+0xba>
      Error_Handler();
 80041ce:	f7ff fdeb 	bl	8003da8 <Error_Handler>
 80041d2:	e7ec      	b.n	80041ae <HAL_SPI_MspInit+0xe6>
 80041d4:	40003800 	.word	0x40003800
 80041d8:	20005134 	.word	0x20005134
 80041dc:	40020c00 	.word	0x40020c00
 80041e0:	40020400 	.word	0x40020400
 80041e4:	40026058 	.word	0x40026058
 80041e8:	200050d4 	.word	0x200050d4
 80041ec:	40026070 	.word	0x40026070

080041f0 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80041f0:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 80041f2:	4b31      	ldr	r3, [pc, #196]	@ (80042b8 <HAL_SDRAM_MspInit+0xc8>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80041f4:	b089      	sub	sp, #36	@ 0x24
  if (FMC_Initialized) {
 80041f6:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 80041f8:	2200      	movs	r2, #0
 80041fa:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 80041fc:	2c00      	cmp	r4, #0
 80041fe:	d159      	bne.n	80042b4 <HAL_SDRAM_MspInit+0xc4>
  __HAL_RCC_FMC_CLK_ENABLE();
 8004200:	4a2e      	ldr	r2, [pc, #184]	@ (80042bc <HAL_SDRAM_MspInit+0xcc>)
 8004202:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8004204:	2101      	movs	r1, #1
 8004206:	6019      	str	r1, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8004208:	6b93      	ldr	r3, [r2, #56]	@ 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800420a:	482d      	ldr	r0, [pc, #180]	@ (80042c0 <HAL_SDRAM_MspInit+0xd0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 800420c:	430b      	orrs	r3, r1
 800420e:	6393      	str	r3, [r2, #56]	@ 0x38
 8004210:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8004212:	400b      	ands	r3, r1
 8004214:	9301      	str	r3, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004216:	2603      	movs	r6, #3
 8004218:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 800421a:	f64f 7283 	movw	r2, #65411	@ 0xff83
  __HAL_RCC_FMC_CLK_ENABLE();
 800421e:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8004220:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8004222:	2302      	movs	r3, #2
 8004224:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004228:	2702      	movs	r7, #2
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800422a:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800422e:	f008 fd15 	bl	800cc5c <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004232:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8004236:	4823      	ldr	r0, [pc, #140]	@ (80042c4 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8004238:	9506      	str	r5, [sp, #24]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800423a:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800423c:	e9cd 3702 	strd	r3, r7, [sp, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004240:	e9cd 4604 	strd	r4, r6, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8004244:	f008 fd0a 	bl	800cc5c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8004248:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800424c:	481e      	ldr	r0, [pc, #120]	@ (80042c8 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 800424e:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8004250:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004252:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8004256:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800425a:	f008 fcff 	bl	800cc5c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 800425e:	f240 63ff 	movw	r3, #1791	@ 0x6ff
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8004262:	481a      	ldr	r0, [pc, #104]	@ (80042cc <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8004264:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8004266:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004268:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800426c:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8004270:	f008 fcf4 	bl	800cc5c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8004274:	f64f 033f 	movw	r3, #63551	@ 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8004278:	4815      	ldr	r0, [pc, #84]	@ (80042d0 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 800427a:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800427c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800427e:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8004282:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8004286:	f008 fce9 	bl	800cc5c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 800428a:	f44f 437f 	mov.w	r3, #65280	@ 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800428e:	4811      	ldr	r0, [pc, #68]	@ (80042d4 <HAL_SDRAM_MspInit+0xe4>)
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8004290:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8004292:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004294:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8004298:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800429c:	f008 fcde 	bl	800cc5c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2;
 80042a0:	230d      	movs	r3, #13
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80042a2:	480d      	ldr	r0, [pc, #52]	@ (80042d8 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80042a4:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80042a6:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80042a8:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80042ac:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2;
 80042ae:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80042b0:	f008 fcd4 	bl	800cc5c <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80042b4:	b009      	add	sp, #36	@ 0x24
 80042b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80042b8:	2000539c 	.word	0x2000539c
 80042bc:	40023800 	.word	0x40023800
 80042c0:	40021000 	.word	0x40021000
 80042c4:	40021800 	.word	0x40021800
 80042c8:	40020c00 	.word	0x40020c00
 80042cc:	40022000 	.word	0x40022000
 80042d0:	40021400 	.word	0x40021400
 80042d4:	40021c00 	.word	0x40021c00
 80042d8:	40020800 	.word	0x40020800

080042dc <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 80042dc:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 80042de:	4b17      	ldr	r3, [pc, #92]	@ (800433c <HAL_SDRAM_MspDeInit+0x60>)
 80042e0:	681a      	ldr	r2, [r3, #0]
 80042e2:	b102      	cbz	r2, 80042e6 <HAL_SDRAM_MspDeInit+0xa>
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 80042e4:	bd08      	pop	{r3, pc}
  __HAL_RCC_FMC_CLK_DISABLE();
 80042e6:	4a16      	ldr	r2, [pc, #88]	@ (8004340 <HAL_SDRAM_MspDeInit+0x64>)
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 80042e8:	4816      	ldr	r0, [pc, #88]	@ (8004344 <HAL_SDRAM_MspDeInit+0x68>)
  FMC_DeInitialized = 1;
 80042ea:	2101      	movs	r1, #1
 80042ec:	6019      	str	r1, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 80042ee:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 80042f0:	f023 0301 	bic.w	r3, r3, #1
 80042f4:	6393      	str	r3, [r2, #56]	@ 0x38
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 80042f6:	f64f 7183 	movw	r1, #65411	@ 0xff83
 80042fa:	f008 fde7 	bl	800cecc <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 80042fe:	4812      	ldr	r0, [pc, #72]	@ (8004348 <HAL_SDRAM_MspDeInit+0x6c>)
 8004300:	f248 1133 	movw	r1, #33075	@ 0x8133
 8004304:	f008 fde2 	bl	800cecc <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8004308:	4810      	ldr	r0, [pc, #64]	@ (800434c <HAL_SDRAM_MspDeInit+0x70>)
 800430a:	f24c 7103 	movw	r1, #50947	@ 0xc703
 800430e:	f008 fddd 	bl	800cecc <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8004312:	480f      	ldr	r0, [pc, #60]	@ (8004350 <HAL_SDRAM_MspDeInit+0x74>)
 8004314:	f240 61ff 	movw	r1, #1791	@ 0x6ff
 8004318:	f008 fdd8 	bl	800cecc <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 800431c:	480d      	ldr	r0, [pc, #52]	@ (8004354 <HAL_SDRAM_MspDeInit+0x78>)
 800431e:	f64f 013f 	movw	r1, #63551	@ 0xf83f
 8004322:	f008 fdd3 	bl	800cecc <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8004326:	480c      	ldr	r0, [pc, #48]	@ (8004358 <HAL_SDRAM_MspDeInit+0x7c>)
 8004328:	f44f 417f 	mov.w	r1, #65280	@ 0xff00
 800432c:	f008 fdce 	bl	800cecc <HAL_GPIO_DeInit>
}
 8004330:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2);
 8004334:	4809      	ldr	r0, [pc, #36]	@ (800435c <HAL_SDRAM_MspDeInit+0x80>)
 8004336:	210d      	movs	r1, #13
 8004338:	f008 bdc8 	b.w	800cecc <HAL_GPIO_DeInit>
 800433c:	20005398 	.word	0x20005398
 8004340:	40023800 	.word	0x40023800
 8004344:	40021000 	.word	0x40021000
 8004348:	40021800 	.word	0x40021800
 800434c:	40020c00 	.word	0x40020c00
 8004350:	40022000 	.word	0x40022000
 8004354:	40021400 	.word	0x40021400
 8004358:	40021c00 	.word	0x40021c00
 800435c:	40020800 	.word	0x40020800

08004360 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8004360:	b570      	push	{r4, r5, r6, lr}
 8004362:	b088      	sub	sp, #32
  uint32_t              pFLatency;

  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8004364:	4b23      	ldr	r3, [pc, #140]	@ (80043f4 <HAL_InitTick+0x94>)
 8004366:	2200      	movs	r2, #0
 8004368:	9202      	str	r2, [sp, #8]
 800436a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800436c:	f042 0210 	orr.w	r2, r2, #16
 8004370:	641a      	str	r2, [r3, #64]	@ 0x40
 8004372:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004374:	f003 0310 	and.w	r3, r3, #16
 8004378:	9302      	str	r3, [sp, #8]
{
 800437a:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800437c:	a901      	add	r1, sp, #4
 800437e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8004380:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8004382:	f00a fad7 	bl	800e934 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8004386:	9b06      	ldr	r3, [sp, #24]
 8004388:	b9d3      	cbnz	r3, 80043c0 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 800438a:	f00a fac3 	bl	800e914 <HAL_RCC_GetPCLK1Freq>
 800438e:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8004390:	4a19      	ldr	r2, [pc, #100]	@ (80043f8 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8004392:	4c1a      	ldr	r4, [pc, #104]	@ (80043fc <HAL_InitTick+0x9c>)
 8004394:	491a      	ldr	r1, [pc, #104]	@ (8004400 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8004396:	fba2 2303 	umull	r2, r3, r2, r3
 800439a:	0c9b      	lsrs	r3, r3, #18
 800439c:	3b01      	subs	r3, #1
   * ClockDivision = 0
   * Counter direction = Up
   */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 800439e:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 80043a0:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 80043a4:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80043a6:	f240 33e7 	movw	r3, #999	@ 0x3e7
  htim6.Init.ClockDivision = 0;
 80043aa:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80043ac:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80043ae:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80043b0:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 80043b2:	f00b fa79 	bl	800f8a8 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 80043b6:	4606      	mov	r6, r0
 80043b8:	b130      	cbz	r0, 80043c8 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 80043ba:	4630      	mov	r0, r6
 80043bc:	b008      	add	sp, #32
 80043be:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 80043c0:	f00a faa8 	bl	800e914 <HAL_RCC_GetPCLK1Freq>
 80043c4:	0043      	lsls	r3, r0, #1
 80043c6:	e7e3      	b.n	8004390 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 80043c8:	4620      	mov	r0, r4
 80043ca:	f00b fb05 	bl	800f9d8 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 80043ce:	4606      	mov	r6, r0
 80043d0:	2800      	cmp	r0, #0
 80043d2:	d1f2      	bne.n	80043ba <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80043d4:	2036      	movs	r0, #54	@ 0x36
 80043d6:	f007 fb95 	bl	800bb04 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80043da:	2d0f      	cmp	r5, #15
 80043dc:	d901      	bls.n	80043e2 <HAL_InitTick+0x82>
        status = HAL_ERROR;
 80043de:	2601      	movs	r6, #1
 80043e0:	e7eb      	b.n	80043ba <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 80043e2:	4632      	mov	r2, r6
 80043e4:	4629      	mov	r1, r5
 80043e6:	2036      	movs	r0, #54	@ 0x36
 80043e8:	f007 fb50 	bl	800ba8c <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 80043ec:	4b05      	ldr	r3, [pc, #20]	@ (8004404 <HAL_InitTick+0xa4>)
 80043ee:	601d      	str	r5, [r3, #0]
 80043f0:	e7e3      	b.n	80043ba <HAL_InitTick+0x5a>
 80043f2:	bf00      	nop
 80043f4:	40023800 	.word	0x40023800
 80043f8:	431bde83 	.word	0x431bde83
 80043fc:	200053a0 	.word	0x200053a0
 8004400:	40001000 	.word	0x40001000
 8004404:	20000040 	.word	0x20000040

08004408 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8004408:	4770      	bx	lr
 800440a:	bf00      	nop

0800440c <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800440c:	e7fe      	b.n	800440c <HardFault_Handler>
 800440e:	bf00      	nop

08004410 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8004410:	e7fe      	b.n	8004410 <MemManage_Handler>
 8004412:	bf00      	nop

08004414 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8004414:	e7fe      	b.n	8004414 <BusFault_Handler>
 8004416:	bf00      	nop

08004418 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8004418:	e7fe      	b.n	8004418 <UsageFault_Handler>
 800441a:	bf00      	nop

0800441c <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 800441c:	4770      	bx	lr
 800441e:	bf00      	nop

08004420 <DMA1_Stream3_IRQHandler>:
void DMA1_Stream3_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Stream3_IRQn 0 */

  /* USER CODE END DMA1_Stream3_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi2_rx);
 8004420:	4801      	ldr	r0, [pc, #4]	@ (8004428 <DMA1_Stream3_IRQHandler+0x8>)
 8004422:	f007 bd11 	b.w	800be48 <HAL_DMA_IRQHandler>
 8004426:	bf00      	nop
 8004428:	20005134 	.word	0x20005134

0800442c <DMA1_Stream4_IRQHandler>:
void DMA1_Stream4_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Stream4_IRQn 0 */

  /* USER CODE END DMA1_Stream4_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi2_tx);
 800442c:	4801      	ldr	r0, [pc, #4]	@ (8004434 <DMA1_Stream4_IRQHandler+0x8>)
 800442e:	f007 bd0b 	b.w	800be48 <HAL_DMA_IRQHandler>
 8004432:	bf00      	nop
 8004434:	200050d4 	.word	0x200050d4

08004438 <EXTI9_5_IRQHandler>:
void EXTI9_5_IRQHandler(void)
{
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(TP_IRQ_Pin);
 8004438:	2020      	movs	r0, #32
 800443a:	f008 be2d 	b.w	800d098 <HAL_GPIO_EXTI_IRQHandler>
 800443e:	bf00      	nop

08004440 <SPI2_IRQHandler>:
void SPI2_IRQHandler(void)
{
  /* USER CODE BEGIN SPI2_IRQn 0 */

  /* USER CODE END SPI2_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi2);
 8004440:	4801      	ldr	r0, [pc, #4]	@ (8004448 <SPI2_IRQHandler+0x8>)
 8004442:	f00b b9a5 	b.w	800f790 <HAL_SPI_IRQHandler>
 8004446:	bf00      	nop
 8004448:	20005194 	.word	0x20005194

0800444c <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 800444c:	4801      	ldr	r0, [pc, #4]	@ (8004454 <TIM6_DAC_IRQHandler+0x8>)
 800444e:	f00b bb05 	b.w	800fa5c <HAL_TIM_IRQHandler>
 8004452:	bf00      	nop
 8004454:	200053a0 	.word	0x200053a0

08004458 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8004458:	4801      	ldr	r0, [pc, #4]	@ (8004460 <LTDC_IRQHandler+0x8>)
 800445a:	f009 bc39 	b.w	800dcd0 <HAL_LTDC_IRQHandler>
 800445e:	bf00      	nop
 8004460:	20005238 	.word	0x20005238

08004464 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8004464:	4801      	ldr	r0, [pc, #4]	@ (800446c <DMA2D_IRQHandler+0x8>)
 8004466:	f007 bdf7 	b.w	800c058 <HAL_DMA2D_IRQHandler>
 800446a:	bf00      	nop
 800446c:	20005350 	.word	0x20005350

08004470 <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 8004470:	4801      	ldr	r0, [pc, #4]	@ (8004478 <DSI_IRQHandler+0x8>)
 8004472:	f008 b843 	b.w	800c4fc <HAL_DSI_IRQHandler>
 8004476:	bf00      	nop
 8004478:	20005334 	.word	0x20005334

0800447c <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 800447c:	2001      	movs	r0, #1
 800447e:	4770      	bx	lr

08004480 <_kill>:

int _kill(int pid, int sig)
{
 8004480:	b508      	push	{r3, lr}
	errno = EINVAL;
 8004482:	f02a fc5b 	bl	802ed3c <__errno>
 8004486:	2316      	movs	r3, #22
 8004488:	6003      	str	r3, [r0, #0]
	return -1;
}
 800448a:	f04f 30ff 	mov.w	r0, #4294967295
 800448e:	bd08      	pop	{r3, pc}

08004490 <_exit>:

void _exit (int status)
{
 8004490:	b508      	push	{r3, lr}
	errno = EINVAL;
 8004492:	f02a fc53 	bl	802ed3c <__errno>
 8004496:	2316      	movs	r3, #22
 8004498:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 800449a:	e7fe      	b.n	800449a <_exit+0xa>

0800449c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800449c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800449e:	1e16      	subs	r6, r2, #0
 80044a0:	dd07      	ble.n	80044b2 <_read+0x16>
 80044a2:	460c      	mov	r4, r1
 80044a4:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 80044a6:	f3af 8000 	nop.w
 80044aa:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80044ae:	42a5      	cmp	r5, r4
 80044b0:	d1f9      	bne.n	80044a6 <_read+0xa>
	}

return len;
}
 80044b2:	4630      	mov	r0, r6
 80044b4:	bd70      	pop	{r4, r5, r6, pc}
 80044b6:	bf00      	nop

080044b8 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80044b8:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80044ba:	1e16      	subs	r6, r2, #0
 80044bc:	dd07      	ble.n	80044ce <_write+0x16>
 80044be:	460c      	mov	r4, r1
 80044c0:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 80044c2:	f814 0b01 	ldrb.w	r0, [r4], #1
 80044c6:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80044ca:	42ac      	cmp	r4, r5
 80044cc:	d1f9      	bne.n	80044c2 <_write+0xa>
	}
	return len;
}
 80044ce:	4630      	mov	r0, r6
 80044d0:	bd70      	pop	{r4, r5, r6, pc}
 80044d2:	bf00      	nop

080044d4 <_close>:

int _close(int file)
{
	return -1;
}
 80044d4:	f04f 30ff 	mov.w	r0, #4294967295
 80044d8:	4770      	bx	lr
 80044da:	bf00      	nop

080044dc <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80044dc:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80044e0:	604b      	str	r3, [r1, #4]
	return 0;
}
 80044e2:	2000      	movs	r0, #0
 80044e4:	4770      	bx	lr
 80044e6:	bf00      	nop

080044e8 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80044e8:	2001      	movs	r0, #1
 80044ea:	4770      	bx	lr

080044ec <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80044ec:	2000      	movs	r0, #0
 80044ee:	4770      	bx	lr

080044f0 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80044f0:	4a0b      	ldr	r2, [pc, #44]	@ (8004520 <_sbrk+0x30>)
{
 80044f2:	b508      	push	{r3, lr}
 80044f4:	4603      	mov	r3, r0
	if (heap_end == 0)
 80044f6:	6810      	ldr	r0, [r2, #0]
 80044f8:	b128      	cbz	r0, 8004506 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 80044fa:	4403      	add	r3, r0
 80044fc:	4669      	mov	r1, sp
 80044fe:	428b      	cmp	r3, r1
 8004500:	d807      	bhi.n	8004512 <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8004502:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8004504:	bd08      	pop	{r3, pc}
		heap_end = &end;
 8004506:	4807      	ldr	r0, [pc, #28]	@ (8004524 <_sbrk+0x34>)
 8004508:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 800450a:	4403      	add	r3, r0
 800450c:	4669      	mov	r1, sp
 800450e:	428b      	cmp	r3, r1
 8004510:	d9f7      	bls.n	8004502 <_sbrk+0x12>
		errno = ENOMEM;
 8004512:	f02a fc13 	bl	802ed3c <__errno>
 8004516:	230c      	movs	r3, #12
 8004518:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 800451a:	f04f 30ff 	mov.w	r0, #4294967295
}
 800451e:	bd08      	pop	{r3, pc}
 8004520:	200053e8 	.word	0x200053e8
 8004524:	2000f150 	.word	0x2000f150

08004528 <_ZN23ApplicationFontProviderD1Ev>:
 8004528:	4a02      	ldr	r2, [pc, #8]	@ (8004534 <_ZN23ApplicationFontProviderD1Ev+0xc>)
 800452a:	6002      	str	r2, [r0, #0]
 800452c:	4a02      	ldr	r2, [pc, #8]	@ (8004538 <_ZN23ApplicationFontProviderD1Ev+0x10>)
 800452e:	6002      	str	r2, [r0, #0]
 8004530:	4770      	bx	lr
 8004532:	bf00      	nop
 8004534:	08030624 	.word	0x08030624
 8004538:	0802ff78 	.word	0x0802ff78

0800453c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800453c:	b508      	push	{r3, lr}
    switch (typography)
 800453e:	2901      	cmp	r1, #1
 8004540:	d008      	beq.n	8004554 <_ZN23ApplicationFontProvider7getFontEt+0x18>
 8004542:	2902      	cmp	r1, #2
 8004544:	d00a      	beq.n	800455c <_ZN23ApplicationFontProvider7getFontEt+0x20>
 8004546:	b109      	cbz	r1, 800454c <_ZN23ApplicationFontProvider7getFontEt+0x10>
 8004548:	2000      	movs	r0, #0
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 800454a:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800454c:	f005 ffa8 	bl	800a4a0 <_ZN17TypedTextDatabase8getFontsEv>
 8004550:	6800      	ldr	r0, [r0, #0]
 8004552:	e7fa      	b.n	800454a <_ZN23ApplicationFontProvider7getFontEt+0xe>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8004554:	f005 ffa4 	bl	800a4a0 <_ZN17TypedTextDatabase8getFontsEv>
 8004558:	6840      	ldr	r0, [r0, #4]
 800455a:	e7f6      	b.n	800454a <_ZN23ApplicationFontProvider7getFontEt+0xe>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800455c:	f005 ffa0 	bl	800a4a0 <_ZN17TypedTextDatabase8getFontsEv>
 8004560:	6880      	ldr	r0, [r0, #8]
 8004562:	e7f2      	b.n	800454a <_ZN23ApplicationFontProvider7getFontEt+0xe>

08004564 <_ZN23ApplicationFontProviderD0Ev>:
 8004564:	b510      	push	{r4, lr}
 8004566:	4604      	mov	r4, r0
 8004568:	4b04      	ldr	r3, [pc, #16]	@ (800457c <_ZN23ApplicationFontProviderD0Ev+0x18>)
 800456a:	6003      	str	r3, [r0, #0]
 800456c:	4b04      	ldr	r3, [pc, #16]	@ (8004580 <_ZN23ApplicationFontProviderD0Ev+0x1c>)
 800456e:	6003      	str	r3, [r0, #0]
 8004570:	2104      	movs	r1, #4
 8004572:	f029 f99c 	bl	802d8ae <_ZdlPvj>
 8004576:	4620      	mov	r0, r4
 8004578:	bd10      	pop	{r4, pc}
 800457a:	bf00      	nop
 800457c:	08030624 	.word	0x08030624
 8004580:	0802ff78 	.word	0x0802ff78

08004584 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8004584:	4800      	ldr	r0, [pc, #0]	@ (8004588 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8004586:	4770      	bx	lr
 8004588:	08030630 	.word	0x08030630

0800458c <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 800458c:	2004      	movs	r0, #4
 800458e:	4770      	bx	lr

08004590 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
 8004590:	b169      	cbz	r1, 80045ae <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8004592:	b510      	push	{r4, lr}
 8004594:	b082      	sub	sp, #8
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
 8004596:	2300      	movs	r3, #0
 8004598:	9301      	str	r3, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800459a:	f88d 3003 	strb.w	r3, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800459e:	6803      	ldr	r3, [r0, #0]
 80045a0:	689c      	ldr	r4, [r3, #8]
 80045a2:	f10d 0303 	add.w	r3, sp, #3
 80045a6:	aa01      	add	r2, sp, #4
 80045a8:	47a0      	blx	r4
        return glyph;
    }
 80045aa:	b002      	add	sp, #8
 80045ac:	bd10      	pop	{r4, pc}
            return 0;
 80045ae:	2000      	movs	r0, #0
    }
 80045b0:	4770      	bx	lr

080045b2 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80045b2:	89c0      	ldrh	r0, [r0, #14]
 80045b4:	4770      	bx	lr

080045b6 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80045b6:	8a00      	ldrh	r0, [r0, #16]
 80045b8:	4770      	bx	lr

080045ba <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 80045ba:	88c0      	ldrh	r0, [r0, #6]
 80045bc:	4770      	bx	lr

080045be <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 80045be:	8880      	ldrh	r0, [r0, #4]
 80045c0:	4770      	bx	lr

080045c2 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80045c2:	7a80      	ldrb	r0, [r0, #10]
    }
 80045c4:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 80045c8:	4770      	bx	lr

080045ca <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80045ca:	7a80      	ldrb	r0, [r0, #10]
    }
 80045cc:	09c0      	lsrs	r0, r0, #7
 80045ce:	4770      	bx	lr

080045d0 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 80045d0:	2000      	movs	r0, #0
 80045d2:	4770      	bx	lr

080045d4 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 80045d4:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 80045dc <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 80045d8:	4770      	bx	lr
 80045da:	bf00      	nop
 80045dc:	00000000 	.word	0x00000000

080045e0 <_ZN8touchgfx9TypedTextD1Ev>:
    {
 80045e0:	4b01      	ldr	r3, [pc, #4]	@ (80045e8 <_ZN8touchgfx9TypedTextD1Ev+0x8>)
 80045e2:	6003      	str	r3, [r0, #0]
    }
 80045e4:	4770      	bx	lr
 80045e6:	bf00      	nop
 80045e8:	08030688 	.word	0x08030688

080045ec <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80045ec:	b510      	push	{r4, lr}
 80045ee:	4604      	mov	r4, r0
    {
 80045f0:	4b03      	ldr	r3, [pc, #12]	@ (8004600 <_ZN8touchgfx9TypedTextD0Ev+0x14>)
 80045f2:	6003      	str	r3, [r0, #0]
    }
 80045f4:	2108      	movs	r1, #8
 80045f6:	f029 f95a 	bl	802d8ae <_ZdlPvj>
 80045fa:	4620      	mov	r0, r4
 80045fc:	bd10      	pop	{r4, pc}
 80045fe:	bf00      	nop
 8004600:	08030688 	.word	0x08030688

08004604 <_ZN8touchgfx10TransitionD1Ev>:
    {
    }

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
    {
 8004604:	4b01      	ldr	r3, [pc, #4]	@ (800460c <_ZN8touchgfx10TransitionD1Ev+0x8>)
 8004606:	6003      	str	r3, [r0, #0]
    }
 8004608:	4770      	bx	lr
 800460a:	bf00      	nop
 800460c:	08030d2c 	.word	0x08030d2c

08004610 <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
    {
    }
 8004610:	4770      	bx	lr

08004612 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8004612:	4770      	bx	lr

08004614 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8004614:	4770      	bx	lr

08004616 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8004616:	6041      	str	r1, [r0, #4]
    }
 8004618:	4770      	bx	lr

0800461a <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 800461a:	2301      	movs	r3, #1
 800461c:	7203      	strb	r3, [r0, #8]
    }
 800461e:	4770      	bx	lr

08004620 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE1EED1Ev>:
{
/**
 * A Transition that slides the new screen over the previous \e from the given direction.
 */
template <Direction templateDirection>
class CoverTransition : public Transition
 8004620:	4a02      	ldr	r2, [pc, #8]	@ (800462c <_ZN8touchgfx15CoverTransitionILNS_9DirectionE1EED1Ev+0xc>)
 8004622:	6002      	str	r2, [r0, #0]
    {
 8004624:	4a02      	ldr	r2, [pc, #8]	@ (8004630 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE1EED1Ev+0x10>)
 8004626:	6002      	str	r2, [r0, #0]
 8004628:	4770      	bx	lr
 800462a:	bf00      	nop
 800462c:	08030d74 	.word	0x08030d74
 8004630:	08030d2c 	.word	0x08030d2c

08004634 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8004634:	4a02      	ldr	r2, [pc, #8]	@ (8004640 <_ZN8touchgfx12NoTransitionD1Ev+0xc>)
 8004636:	6002      	str	r2, [r0, #0]
 8004638:	4a02      	ldr	r2, [pc, #8]	@ (8004644 <_ZN8touchgfx12NoTransitionD1Ev+0x10>)
 800463a:	6002      	str	r2, [r0, #0]
 800463c:	4770      	bx	lr
 800463e:	bf00      	nop
 8004640:	08030d50 	.word	0x08030d50
 8004644:	08030d2c 	.word	0x08030d2c

08004648 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE1EE4initEv>:

            d = d->getNextSibling();
        }
    }

    virtual void init()
 8004648:	b538      	push	{r3, r4, r5, lr}
 800464a:	4605      	mov	r5, r0
    {
        Transition::init();

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
 800464c:	6840      	ldr	r0, [r0, #4]
 800464e:	6803      	ldr	r3, [r0, #0]
 8004650:	69db      	ldr	r3, [r3, #28]
 8004652:	4798      	blx	r3
 8004654:	4604      	mov	r4, r0
        while (d)
 8004656:	e00a      	b.n	800466e <_ZN8touchgfx15CoverTransitionILNS_9DirectionE1EE4initEv+0x26>
        return rect.y;
 8004658:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
            case WEST:
                d->setX(d->getX() - targetValue);
                break;
            case NORTH:
            case SOUTH:
                d->setY(d->getY() - targetValue);
 800465c:	b289      	uxth	r1, r1
 800465e:	89ab      	ldrh	r3, [r5, #12]
 8004660:	1ac9      	subs	r1, r1, r3
 8004662:	6823      	ldr	r3, [r4, #0]
 8004664:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8004666:	b209      	sxth	r1, r1
 8004668:	4620      	mov	r0, r4
 800466a:	4798      	blx	r3
        return nextSibling;
 800466c:	69a4      	ldr	r4, [r4, #24]
        while (d)
 800466e:	2c00      	cmp	r4, #0
 8004670:	d1f2      	bne.n	8004658 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE1EE4initEv+0x10>
                break;
            }

            d = d->getNextSibling();
        }
    }
 8004672:	bd38      	pop	{r3, r4, r5, pc}

08004674 <_ZN8touchgfx12NoTransitionD0Ev>:
 8004674:	b510      	push	{r4, lr}
 8004676:	4604      	mov	r4, r0
 8004678:	4b04      	ldr	r3, [pc, #16]	@ (800468c <_ZN8touchgfx12NoTransitionD0Ev+0x18>)
 800467a:	6003      	str	r3, [r0, #0]
 800467c:	4b04      	ldr	r3, [pc, #16]	@ (8004690 <_ZN8touchgfx12NoTransitionD0Ev+0x1c>)
 800467e:	6003      	str	r3, [r0, #0]
 8004680:	210c      	movs	r1, #12
 8004682:	f029 f914 	bl	802d8ae <_ZdlPvj>
 8004686:	4620      	mov	r0, r4
 8004688:	bd10      	pop	{r4, pc}
 800468a:	bf00      	nop
 800468c:	08030d50 	.word	0x08030d50
 8004690:	08030d2c 	.word	0x08030d2c

08004694 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 8004694:	b510      	push	{r4, lr}
 8004696:	4604      	mov	r4, r0
    {
 8004698:	4b03      	ldr	r3, [pc, #12]	@ (80046a8 <_ZN8touchgfx10TransitionD0Ev+0x14>)
 800469a:	6003      	str	r3, [r0, #0]
    }
 800469c:	210c      	movs	r1, #12
 800469e:	f029 f906 	bl	802d8ae <_ZdlPvj>
 80046a2:	4620      	mov	r0, r4
 80046a4:	bd10      	pop	{r4, pc}
 80046a6:	bf00      	nop
 80046a8:	08030d2c 	.word	0x08030d2c

080046ac <_ZN8touchgfx15CoverTransitionILNS_9DirectionE1EED0Ev>:
class CoverTransition : public Transition
 80046ac:	b510      	push	{r4, lr}
 80046ae:	4604      	mov	r4, r0
 80046b0:	4b04      	ldr	r3, [pc, #16]	@ (80046c4 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE1EED0Ev+0x18>)
 80046b2:	6003      	str	r3, [r0, #0]
    {
 80046b4:	4b04      	ldr	r3, [pc, #16]	@ (80046c8 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE1EED0Ev+0x1c>)
 80046b6:	6003      	str	r3, [r0, #0]
 80046b8:	2110      	movs	r1, #16
 80046ba:	f029 f8f8 	bl	802d8ae <_ZdlPvj>
 80046be:	4620      	mov	r0, r4
 80046c0:	bd10      	pop	{r4, pc}
 80046c2:	bf00      	nop
 80046c4:	08030d74 	.word	0x08030d74
 80046c8:	08030d2c 	.word	0x08030d2c

080046cc <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80046cc:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 80046ce:	f016 f9b9 	bl	801aa44 <_ZN8touchgfx11Application11getInstanceEv>
 80046d2:	6803      	ldr	r3, [r0, #0]
 80046d4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80046d6:	4798      	blx	r3
    }
 80046d8:	bd08      	pop	{r3, pc}

080046da <_ZN8touchgfx15CoverTransitionILNS_9DirectionE1EE10invalidateEv>:

    virtual void invalidate()
 80046da:	b508      	push	{r3, lr}
    {
        // The last step when finalizing a transition (see MVPApplication::finalizeTransition)
        // is to call invalidate on the transition. For the CoverTransition we want to erase any
        // invalidated areas that might have been added when setting up the new screen, which
        // is the first step of finalizing a transition (see MVPApplication::finalizeTransition).
        Application::getInstance()->clearCachedAreas();
 80046dc:	f016 f9b2 	bl	801aa44 <_ZN8touchgfx11Application11getInstanceEv>
 80046e0:	6803      	ldr	r3, [r0, #0]
 80046e2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80046e4:	4798      	blx	r3
    }
 80046e6:	bd08      	pop	{r3, pc}

080046e8 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE1EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80046e8:	b570      	push	{r4, r5, r6, lr}
 80046ea:	b082      	sub	sp, #8
 80046ec:	4604      	mov	r4, r0
        animationCounter++;
 80046ee:	7a80      	ldrb	r0, [r0, #10]
 80046f0:	3001      	adds	r0, #1
 80046f2:	b2c0      	uxtb	r0, r0
 80046f4:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80046f6:	7a63      	ldrb	r3, [r4, #9]
 80046f8:	4298      	cmp	r0, r3
 80046fa:	d905      	bls.n	8004708 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE1EE15handleTickEventEv+0x20>
            done = true;
 80046fc:	2301      	movs	r3, #1
 80046fe:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8004700:	2300      	movs	r3, #0
 8004702:	72a3      	strb	r3, [r4, #10]
    }
 8004704:	b002      	add	sp, #8
 8004706:	bd70      	pop	{r4, r5, r6, pc}
        const int16_t oldValue = calculatedValue;
 8004708:	f9b4 600e 	ldrsh.w	r6, [r4, #14]
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800470c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004710:	2100      	movs	r1, #0
 8004712:	f018 fc65 	bl	801cfe0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 8004716:	81e0      	strh	r0, [r4, #14]
        if ((calculatedValue % 2) != 0)
 8004718:	b283      	uxth	r3, r0
 800471a:	f010 0f01 	tst.w	r0, #1
 800471e:	d004      	beq.n	800472a <_ZN8touchgfx15CoverTransitionILNS_9DirectionE1EE15handleTickEventEv+0x42>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8004720:	2800      	cmp	r0, #0
 8004722:	dd2d      	ble.n	8004780 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE1EE15handleTickEventEv+0x98>
 8004724:	2201      	movs	r2, #1
 8004726:	4413      	add	r3, r2
 8004728:	81e3      	strh	r3, [r4, #14]
        const int16_t relativeValue = calculatedValue - oldValue;
 800472a:	89e5      	ldrh	r5, [r4, #14]
 800472c:	1bad      	subs	r5, r5, r6
 800472e:	b2ad      	uxth	r5, r5
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8004730:	7aa3      	ldrb	r3, [r4, #10]
 8004732:	2b01      	cmp	r3, #1
 8004734:	d027      	beq.n	8004786 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE1EE15handleTickEventEv+0x9e>
        : x(0), y(0), width(0), height(0)
 8004736:	2300      	movs	r3, #0
 8004738:	f8ad 3000 	strh.w	r3, [sp]
 800473c:	f8ad 3002 	strh.w	r3, [sp, #2]
 8004740:	f8ad 3004 	strh.w	r3, [sp, #4]
 8004744:	f8ad 3006 	strh.w	r3, [sp, #6]
            rect.y = HAL::DISPLAY_HEIGHT + calculatedValue;
 8004748:	89e3      	ldrh	r3, [r4, #14]
 800474a:	4a1a      	ldr	r2, [pc, #104]	@ (80047b4 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE1EE15handleTickEventEv+0xcc>)
 800474c:	8812      	ldrh	r2, [r2, #0]
 800474e:	441a      	add	r2, r3
 8004750:	f8ad 2002 	strh.w	r2, [sp, #2]
            rect.width = HAL::DISPLAY_WIDTH;
 8004754:	4a18      	ldr	r2, [pc, #96]	@ (80047b8 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE1EE15handleTickEventEv+0xd0>)
 8004756:	f9b2 2000 	ldrsh.w	r2, [r2]
 800475a:	f8ad 2004 	strh.w	r2, [sp, #4]
            rect.height = -calculatedValue;
 800475e:	425b      	negs	r3, r3
 8004760:	f8ad 3006 	strh.w	r3, [sp, #6]
        Application::getInstance()->invalidateArea(rect);
 8004764:	f016 f96e 	bl	801aa44 <_ZN8touchgfx11Application11getInstanceEv>
 8004768:	6803      	ldr	r3, [r0, #0]
 800476a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800476c:	aa02      	add	r2, sp, #8
 800476e:	e912 0006 	ldmdb	r2, {r1, r2}
 8004772:	4798      	blx	r3
        Drawable* d = screenContainer->getFirstChild();
 8004774:	6860      	ldr	r0, [r4, #4]
 8004776:	6803      	ldr	r3, [r0, #0]
 8004778:	69db      	ldr	r3, [r3, #28]
 800477a:	4798      	blx	r3
 800477c:	4604      	mov	r4, r0
        while (d)
 800477e:	e015      	b.n	80047ac <_ZN8touchgfx15CoverTransitionILNS_9DirectionE1EE15handleTickEventEv+0xc4>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8004780:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8004784:	e7cf      	b.n	8004726 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE1EE15handleTickEventEv+0x3e>
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8004786:	4b0d      	ldr	r3, [pc, #52]	@ (80047bc <_ZN8touchgfx15CoverTransitionILNS_9DirectionE1EE15handleTickEventEv+0xd4>)
 8004788:	781b      	ldrb	r3, [r3, #0]
 800478a:	2b00      	cmp	r3, #0
 800478c:	d0d3      	beq.n	8004736 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE1EE15handleTickEventEv+0x4e>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800478e:	f016 f959 	bl	801aa44 <_ZN8touchgfx11Application11getInstanceEv>
 8004792:	f016 f95d 	bl	801aa50 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
 8004796:	e7ce      	b.n	8004736 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE1EE15handleTickEventEv+0x4e>
        return rect.y;
 8004798:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
                d->setY(d->getY() + relativeValue);
 800479c:	fa15 f181 	uxtah	r1, r5, r1
 80047a0:	6823      	ldr	r3, [r4, #0]
 80047a2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80047a4:	b209      	sxth	r1, r1
 80047a6:	4620      	mov	r0, r4
 80047a8:	4798      	blx	r3
        return nextSibling;
 80047aa:	69a4      	ldr	r4, [r4, #24]
        while (d)
 80047ac:	2c00      	cmp	r4, #0
 80047ae:	d1f3      	bne.n	8004798 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE1EE15handleTickEventEv+0xb0>
 80047b0:	e7a8      	b.n	8004704 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE1EE15handleTickEventEv+0x1c>
 80047b2:	bf00      	nop
 80047b4:	2000e402 	.word	0x2000e402
 80047b8:	2000e400 	.word	0x2000e400
 80047bc:	2000e40a 	.word	0x2000e40a

080047c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen4_screen/Screen4View.hpp>
#include <gui/screen4_screen/Screen4Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80047c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80047c2:	4604      	mov	r4, r0
 80047c4:	460e      	mov	r6, r1
 80047c6:	4617      	mov	r7, r2
          pendingScreenTransitionCallback(0)
 80047c8:	f016 fa26 	bl	801ac18 <_ZN8touchgfx11ApplicationC1Ev>
 80047cc:	4b21      	ldr	r3, [pc, #132]	@ (8004854 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x94>)
 80047ce:	6023      	str	r3, [r4, #0]
        : currentPresenter(0),
 80047d0:	2500      	movs	r5, #0
 80047d2:	f8c4 513c 	str.w	r5, [r4, #316]	@ 0x13c
          pendingScreenTransitionCallback(0)
 80047d6:	f8c4 5140 	str.w	r5, [r4, #320]	@ 0x140
        instance = this;
 80047da:	4b1f      	ldr	r3, [pc, #124]	@ (8004858 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x98>)
 80047dc:	601c      	str	r4, [r3, #0]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 80047de:	4b1f      	ldr	r3, [pc, #124]	@ (800485c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x9c>)
 80047e0:	6023      	str	r3, [r4, #0]
class GenericCallback<void>
 80047e2:	4b1f      	ldr	r3, [pc, #124]	@ (8004860 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa0>)
 80047e4:	f8c4 3144 	str.w	r3, [r4, #324]	@ 0x144
        : pobject(0), pmemfun(0)
 80047e8:	4b1e      	ldr	r3, [pc, #120]	@ (8004864 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa4>)
 80047ea:	f8c4 3144 	str.w	r3, [r4, #324]	@ 0x144
 80047ee:	f8c4 5148 	str.w	r5, [r4, #328]	@ 0x148
 80047f2:	f8c4 514c 	str.w	r5, [r4, #332]	@ 0x14c
 80047f6:	f8c4 5150 	str.w	r5, [r4, #336]	@ 0x150
      frontendHeap(heap),
 80047fa:	f8c4 7154 	str.w	r7, [r4, #340]	@ 0x154
      model(m)
 80047fe:	f8c4 6158 	str.w	r6, [r4, #344]	@ 0x158
        return instance;
 8004802:	4e19      	ldr	r6, [pc, #100]	@ (8004868 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa8>)
 8004804:	6830      	ldr	r0, [r6, #0]
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8004806:	6803      	ldr	r3, [r0, #0]
 8004808:	689b      	ldr	r3, [r3, #8]
 800480a:	4629      	mov	r1, r5
 800480c:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 800480e:	4628      	mov	r0, r5
 8004810:	f005 fdde 	bl	800a3d0 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8004814:	6833      	ldr	r3, [r6, #0]
 8004816:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800481a:	b10a      	cbz	r2, 8004820 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>
 800481c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800481e:	b900      	cbnz	r0, 8004822 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x62>
        return instance->lcdRef;
 8004820:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8004822:	f020 ff60 	bl	80256e6 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8004826:	4b10      	ldr	r3, [pc, #64]	@ (8004868 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa8>)
 8004828:	681b      	ldr	r3, [r3, #0]
 800482a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800482e:	b10a      	cbz	r2, 8004834 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x74>
 8004830:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8004832:	b900      	cbnz	r0, 8004836 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x76>
        return instance->lcdRef;
 8004834:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8004836:	f020 ffd1 	bl	80257dc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800483a:	4b0b      	ldr	r3, [pc, #44]	@ (8004868 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa8>)
 800483c:	681b      	ldr	r3, [r3, #0]
 800483e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8004842:	b10a      	cbz	r2, 8004848 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x88>
 8004844:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8004846:	b900      	cbnz	r0, 800484a <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8a>
        return instance->lcdRef;
 8004848:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 800484a:	f020 ffd3 	bl	80257f4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 800484e:	4620      	mov	r0, r4
 8004850:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004852:	bf00      	nop
 8004854:	0802fff0 	.word	0x0802fff0
 8004858:	2000e460 	.word	0x2000e460
 800485c:	0803005c 	.word	0x0803005c
 8004860:	0802ffd8 	.word	0x0802ffd8
 8004864:	08030044 	.word	0x08030044
 8004868:	2000e40c 	.word	0x2000e40c

0800486c <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>:
 */

// Screen2

void FrontendApplicationBase::gotoScreen2ScreenNoTransition()
{
 800486c:	b410      	push	{r4}
 800486e:	b089      	sub	sp, #36	@ 0x24
 8004870:	4603      	mov	r3, r0
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen2ScreenNoTransitionImpl);
 8004872:	4a10      	ldr	r2, [pc, #64]	@ (80048b4 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv+0x48>)
 8004874:	9206      	str	r2, [sp, #24]
 8004876:	2200      	movs	r2, #0
 8004878:	9207      	str	r2, [sp, #28]
 800487a:	46ec      	mov	ip, sp
 800487c:	aa08      	add	r2, sp, #32
 800487e:	e912 0003 	ldmdb	r2, {r0, r1}
 8004882:	e88c 0003 	stmia.w	ip, {r0, r1}
class GenericCallback<void>
 8004886:	4c0c      	ldr	r4, [pc, #48]	@ (80048b8 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv+0x4c>)
 8004888:	9402      	str	r4, [sp, #8]
        : pobject(pObject), pmemfun(pmemfun_0)
 800488a:	4a0c      	ldr	r2, [pc, #48]	@ (80048bc <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv+0x50>)
 800488c:	9202      	str	r2, [sp, #8]
 800488e:	9303      	str	r3, [sp, #12]
 8004890:	aa04      	add	r2, sp, #16
 8004892:	e882 0003 	stmia.w	r2, {r0, r1}
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004896:	f8c3 3148 	str.w	r3, [r3, #328]	@ 0x148
 800489a:	f503 7ca6 	add.w	ip, r3, #332	@ 0x14c
 800489e:	e88c 0003 	stmia.w	ip, {r0, r1}
    {
 80048a2:	9402      	str	r4, [sp, #8]
    pendingScreenTransitionCallback = &transitionCallback;
 80048a4:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 80048a8:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 80048ac:	b009      	add	sp, #36	@ 0x24
 80048ae:	f85d 4b04 	ldr.w	r4, [sp], #4
 80048b2:	4770      	bx	lr
 80048b4:	08004b65 	.word	0x08004b65
 80048b8:	0802ffd8 	.word	0x0802ffd8
 80048bc:	08030044 	.word	0x08030044

080048c0 <_ZN23FrontendApplicationBase37gotoScreen2ScreenCoverTransitionSouthEv>:
{
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoScreen2ScreenCoverTransitionSouth()
{
 80048c0:	b410      	push	{r4}
 80048c2:	b089      	sub	sp, #36	@ 0x24
 80048c4:	4603      	mov	r3, r0
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen2ScreenCoverTransitionSouthImpl);
 80048c6:	4a10      	ldr	r2, [pc, #64]	@ (8004908 <_ZN23FrontendApplicationBase37gotoScreen2ScreenCoverTransitionSouthEv+0x48>)
 80048c8:	9206      	str	r2, [sp, #24]
 80048ca:	2200      	movs	r2, #0
 80048cc:	9207      	str	r2, [sp, #28]
 80048ce:	46ec      	mov	ip, sp
 80048d0:	aa08      	add	r2, sp, #32
 80048d2:	e912 0003 	ldmdb	r2, {r0, r1}
 80048d6:	e88c 0003 	stmia.w	ip, {r0, r1}
class GenericCallback<void>
 80048da:	4c0c      	ldr	r4, [pc, #48]	@ (800490c <_ZN23FrontendApplicationBase37gotoScreen2ScreenCoverTransitionSouthEv+0x4c>)
 80048dc:	9402      	str	r4, [sp, #8]
        : pobject(pObject), pmemfun(pmemfun_0)
 80048de:	4a0c      	ldr	r2, [pc, #48]	@ (8004910 <_ZN23FrontendApplicationBase37gotoScreen2ScreenCoverTransitionSouthEv+0x50>)
 80048e0:	9202      	str	r2, [sp, #8]
 80048e2:	9303      	str	r3, [sp, #12]
 80048e4:	aa04      	add	r2, sp, #16
 80048e6:	e882 0003 	stmia.w	r2, {r0, r1}
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80048ea:	f8c3 3148 	str.w	r3, [r3, #328]	@ 0x148
 80048ee:	f503 7ca6 	add.w	ip, r3, #332	@ 0x14c
 80048f2:	e88c 0003 	stmia.w	ip, {r0, r1}
    {
 80048f6:	9402      	str	r4, [sp, #8]
    pendingScreenTransitionCallback = &transitionCallback;
 80048f8:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 80048fc:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 8004900:	b009      	add	sp, #36	@ 0x24
 8004902:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004906:	4770      	bx	lr
 8004908:	08004cfd 	.word	0x08004cfd
 800490c:	0802ffd8 	.word	0x0802ffd8
 8004910:	08030044 	.word	0x08030044

08004914 <_ZN23FrontendApplicationBase37gotoScreen1ScreenCoverTransitionSouthEv>:
}

// Screen1

void FrontendApplicationBase::gotoScreen1ScreenCoverTransitionSouth()
{
 8004914:	b410      	push	{r4}
 8004916:	b089      	sub	sp, #36	@ 0x24
 8004918:	4603      	mov	r3, r0
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenCoverTransitionSouthImpl);
 800491a:	4a10      	ldr	r2, [pc, #64]	@ (800495c <_ZN23FrontendApplicationBase37gotoScreen1ScreenCoverTransitionSouthEv+0x48>)
 800491c:	9206      	str	r2, [sp, #24]
 800491e:	2200      	movs	r2, #0
 8004920:	9207      	str	r2, [sp, #28]
 8004922:	46ec      	mov	ip, sp
 8004924:	aa08      	add	r2, sp, #32
 8004926:	e912 0003 	ldmdb	r2, {r0, r1}
 800492a:	e88c 0003 	stmia.w	ip, {r0, r1}
class GenericCallback<void>
 800492e:	4c0c      	ldr	r4, [pc, #48]	@ (8004960 <_ZN23FrontendApplicationBase37gotoScreen1ScreenCoverTransitionSouthEv+0x4c>)
 8004930:	9402      	str	r4, [sp, #8]
        : pobject(pObject), pmemfun(pmemfun_0)
 8004932:	4a0c      	ldr	r2, [pc, #48]	@ (8004964 <_ZN23FrontendApplicationBase37gotoScreen1ScreenCoverTransitionSouthEv+0x50>)
 8004934:	9202      	str	r2, [sp, #8]
 8004936:	9303      	str	r3, [sp, #12]
 8004938:	aa04      	add	r2, sp, #16
 800493a:	e882 0003 	stmia.w	r2, {r0, r1}
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800493e:	f8c3 3148 	str.w	r3, [r3, #328]	@ 0x148
 8004942:	f503 7ca6 	add.w	ip, r3, #332	@ 0x14c
 8004946:	e88c 0003 	stmia.w	ip, {r0, r1}
    {
 800494a:	9402      	str	r4, [sp, #8]
    pendingScreenTransitionCallback = &transitionCallback;
 800494c:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 8004950:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 8004954:	b009      	add	sp, #36	@ 0x24
 8004956:	f85d 4b04 	ldr.w	r4, [sp], #4
 800495a:	4770      	bx	lr
 800495c:	08004e99 	.word	0x08004e99
 8004960:	0802ffd8 	.word	0x0802ffd8
 8004964:	08030044 	.word	0x08030044

08004968 <_ZN23FrontendApplicationBase37gotoScreen3ScreenCoverTransitionSouthEv>:
}

// Screen3

void FrontendApplicationBase::gotoScreen3ScreenCoverTransitionSouth()
{
 8004968:	b410      	push	{r4}
 800496a:	b089      	sub	sp, #36	@ 0x24
 800496c:	4603      	mov	r3, r0
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen3ScreenCoverTransitionSouthImpl);
 800496e:	4a10      	ldr	r2, [pc, #64]	@ (80049b0 <_ZN23FrontendApplicationBase37gotoScreen3ScreenCoverTransitionSouthEv+0x48>)
 8004970:	9206      	str	r2, [sp, #24]
 8004972:	2200      	movs	r2, #0
 8004974:	9207      	str	r2, [sp, #28]
 8004976:	46ec      	mov	ip, sp
 8004978:	aa08      	add	r2, sp, #32
 800497a:	e912 0003 	ldmdb	r2, {r0, r1}
 800497e:	e88c 0003 	stmia.w	ip, {r0, r1}
class GenericCallback<void>
 8004982:	4c0c      	ldr	r4, [pc, #48]	@ (80049b4 <_ZN23FrontendApplicationBase37gotoScreen3ScreenCoverTransitionSouthEv+0x4c>)
 8004984:	9402      	str	r4, [sp, #8]
        : pobject(pObject), pmemfun(pmemfun_0)
 8004986:	4a0c      	ldr	r2, [pc, #48]	@ (80049b8 <_ZN23FrontendApplicationBase37gotoScreen3ScreenCoverTransitionSouthEv+0x50>)
 8004988:	9202      	str	r2, [sp, #8]
 800498a:	9303      	str	r3, [sp, #12]
 800498c:	aa04      	add	r2, sp, #16
 800498e:	e882 0003 	stmia.w	r2, {r0, r1}
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004992:	f8c3 3148 	str.w	r3, [r3, #328]	@ 0x148
 8004996:	f503 7ca6 	add.w	ip, r3, #332	@ 0x14c
 800499a:	e88c 0003 	stmia.w	ip, {r0, r1}
    {
 800499e:	9402      	str	r4, [sp, #8]
    pendingScreenTransitionCallback = &transitionCallback;
 80049a0:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 80049a4:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 80049a8:	b009      	add	sp, #36	@ 0x24
 80049aa:	f85d 4b04 	ldr.w	r4, [sp], #4
 80049ae:	4770      	bx	lr
 80049b0:	08005035 	.word	0x08005035
 80049b4:	0802ffd8 	.word	0x0802ffd8
 80049b8:	08030044 	.word	0x08030044

080049bc <_ZN23FrontendApplicationBase37gotoScreen4ScreenCoverTransitionSouthEv>:
}

// Screen4

void FrontendApplicationBase::gotoScreen4ScreenCoverTransitionSouth()
{
 80049bc:	b410      	push	{r4}
 80049be:	b089      	sub	sp, #36	@ 0x24
 80049c0:	4603      	mov	r3, r0
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen4ScreenCoverTransitionSouthImpl);
 80049c2:	4a10      	ldr	r2, [pc, #64]	@ (8004a04 <_ZN23FrontendApplicationBase37gotoScreen4ScreenCoverTransitionSouthEv+0x48>)
 80049c4:	9206      	str	r2, [sp, #24]
 80049c6:	2200      	movs	r2, #0
 80049c8:	9207      	str	r2, [sp, #28]
 80049ca:	46ec      	mov	ip, sp
 80049cc:	aa08      	add	r2, sp, #32
 80049ce:	e912 0003 	ldmdb	r2, {r0, r1}
 80049d2:	e88c 0003 	stmia.w	ip, {r0, r1}
class GenericCallback<void>
 80049d6:	4c0c      	ldr	r4, [pc, #48]	@ (8004a08 <_ZN23FrontendApplicationBase37gotoScreen4ScreenCoverTransitionSouthEv+0x4c>)
 80049d8:	9402      	str	r4, [sp, #8]
        : pobject(pObject), pmemfun(pmemfun_0)
 80049da:	4a0c      	ldr	r2, [pc, #48]	@ (8004a0c <_ZN23FrontendApplicationBase37gotoScreen4ScreenCoverTransitionSouthEv+0x50>)
 80049dc:	9202      	str	r2, [sp, #8]
 80049de:	9303      	str	r3, [sp, #12]
 80049e0:	aa04      	add	r2, sp, #16
 80049e2:	e882 0003 	stmia.w	r2, {r0, r1}
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80049e6:	f8c3 3148 	str.w	r3, [r3, #328]	@ 0x148
 80049ea:	f503 7ca6 	add.w	ip, r3, #332	@ 0x14c
 80049ee:	e88c 0003 	stmia.w	ip, {r0, r1}
    {
 80049f2:	9402      	str	r4, [sp, #8]
    pendingScreenTransitionCallback = &transitionCallback;
 80049f4:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 80049f8:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 80049fc:	b009      	add	sp, #36	@ 0x24
 80049fe:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004a02:	4770      	bx	lr
 8004a04:	080051d1 	.word	0x080051d1
 8004a08:	0802ffd8 	.word	0x0802ffd8
 8004a0c:	08030044 	.word	0x08030044

08004a10 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8004a10:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004a14:	4607      	mov	r7, r0
 8004a16:	4688      	mov	r8, r1
 8004a18:	4615      	mov	r5, r2
 8004a1a:	4699      	mov	r9, r3
 8004a1c:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004a20:	6890      	ldr	r0, [r2, #8]
 8004a22:	6803      	ldr	r3, [r0, #0]
 8004a24:	6a1b      	ldr	r3, [r3, #32]
 8004a26:	4798      	blx	r3
 8004a28:	f5b0 7fde 	cmp.w	r0, #444	@ 0x1bc
 8004a2c:	d377      	bcc.n	8004b1e <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x10e>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004a2e:	6868      	ldr	r0, [r5, #4]
 8004a30:	6803      	ldr	r3, [r0, #0]
 8004a32:	6a1b      	ldr	r3, [r3, #32]
 8004a34:	4798      	blx	r3
 8004a36:	280f      	cmp	r0, #15
 8004a38:	d977      	bls.n	8004b2a <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x11a>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004a3a:	68e8      	ldr	r0, [r5, #12]
 8004a3c:	6803      	ldr	r3, [r0, #0]
 8004a3e:	6a1b      	ldr	r3, [r3, #32]
 8004a40:	4798      	blx	r3
 8004a42:	280b      	cmp	r0, #11
 8004a44:	d977      	bls.n	8004b36 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x126>
    Application::getInstance()->clearAllTimerWidgets();
 8004a46:	f015 fffd 	bl	801aa44 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8004a4a:	3004      	adds	r0, #4
 8004a4c:	f016 f847 	bl	801aade <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
 8004a50:	f8d9 0000 	ldr.w	r0, [r9]
 8004a54:	b110      	cbz	r0, 8004a5c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x4c>
        (*currentTrans)->tearDown();
 8004a56:	6803      	ldr	r3, [r0, #0]
 8004a58:	68db      	ldr	r3, [r3, #12]
 8004a5a:	4798      	blx	r3
    if (*currentTrans)
 8004a5c:	f8d9 0000 	ldr.w	r0, [r9]
 8004a60:	b110      	cbz	r0, 8004a68 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
        (*currentTrans)->~Transition();
 8004a62:	6803      	ldr	r3, [r0, #0]
 8004a64:	681b      	ldr	r3, [r3, #0]
 8004a66:	4798      	blx	r3
    if (*currentScreen)
 8004a68:	6838      	ldr	r0, [r7, #0]
 8004a6a:	b110      	cbz	r0, 8004a72 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x62>
        (*currentScreen)->tearDownScreen();
 8004a6c:	6803      	ldr	r3, [r0, #0]
 8004a6e:	695b      	ldr	r3, [r3, #20]
 8004a70:	4798      	blx	r3
    if (*currentPresenter)
 8004a72:	f8d8 0000 	ldr.w	r0, [r8]
 8004a76:	b110      	cbz	r0, 8004a7e <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x6e>
        (*currentPresenter)->deactivate();
 8004a78:	6803      	ldr	r3, [r0, #0]
 8004a7a:	685b      	ldr	r3, [r3, #4]
 8004a7c:	4798      	blx	r3
    if (*currentScreen)
 8004a7e:	6838      	ldr	r0, [r7, #0]
 8004a80:	b110      	cbz	r0, 8004a88 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x78>
        (*currentScreen)->~Screen();
 8004a82:	6803      	ldr	r3, [r0, #0]
 8004a84:	681b      	ldr	r3, [r3, #0]
 8004a86:	4798      	blx	r3
    if (*currentPresenter)
 8004a88:	f8d8 0000 	ldr.w	r0, [r8]
 8004a8c:	b110      	cbz	r0, 8004a94 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x84>
        (*currentPresenter)->~Presenter();
 8004a8e:	6803      	ldr	r3, [r0, #0]
 8004a90:	689b      	ldr	r3, [r3, #8]
 8004a92:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004a94:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8004a96:	6803      	ldr	r3, [r0, #0]
 8004a98:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004a9a:	2100      	movs	r1, #0
 8004a9c:	4798      	blx	r3
 8004a9e:	4604      	mov	r4, r0
        : screenContainer(0), done(false)
 8004aa0:	4b29      	ldr	r3, [pc, #164]	@ (8004b48 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 8004aa2:	6003      	str	r3, [r0, #0]
 8004aa4:	f04f 0b00 	mov.w	fp, #0
 8004aa8:	f8c0 b004 	str.w	fp, [r0, #4]
 8004aac:	f880 b008 	strb.w	fp, [r0, #8]
 8004ab0:	4b26      	ldr	r3, [pc, #152]	@ (8004b4c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13c>)
 8004ab2:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004ab4:	68a8      	ldr	r0, [r5, #8]
 8004ab6:	6803      	ldr	r3, [r0, #0]
 8004ab8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004aba:	4659      	mov	r1, fp
 8004abc:	4798      	blx	r3
 8004abe:	4606      	mov	r6, r0
 8004ac0:	f005 fec2 	bl	800a848 <_ZN11Screen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004ac4:	6868      	ldr	r0, [r5, #4]
 8004ac6:	6803      	ldr	r3, [r0, #0]
 8004ac8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004aca:	4659      	mov	r1, fp
 8004acc:	4798      	blx	r3
 8004ace:	4605      	mov	r5, r0
 8004ad0:	4631      	mov	r1, r6
 8004ad2:	f005 fe39 	bl	800a748 <_ZN16Screen2PresenterC1ER11Screen2View>
    *currentTrans = newTransition;
 8004ad6:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8004ada:	f8c8 5000 	str.w	r5, [r8]
    *currentScreen = newScreen;
 8004ade:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 8004ae0:	2d00      	cmp	r5, #0
 8004ae2:	d02e      	beq.n	8004b42 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x132>
 8004ae4:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8004ae6:	f8ca 3000 	str.w	r3, [sl]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8004aea:	f8c5 a008 	str.w	sl, [r5, #8]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8004aee:	63f5      	str	r5, [r6, #60]	@ 0x3c
    newScreen->setupScreen();
 8004af0:	6833      	ldr	r3, [r6, #0]
 8004af2:	68db      	ldr	r3, [r3, #12]
 8004af4:	4630      	mov	r0, r6
 8004af6:	4798      	blx	r3
    newPresenter->activate();
 8004af8:	682b      	ldr	r3, [r5, #0]
 8004afa:	681b      	ldr	r3, [r3, #0]
 8004afc:	4628      	mov	r0, r5
 8004afe:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004b00:	4621      	mov	r1, r4
 8004b02:	4630      	mov	r0, r6
 8004b04:	f018 fa66 	bl	801cfd4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004b08:	6823      	ldr	r3, [r4, #0]
 8004b0a:	691b      	ldr	r3, [r3, #16]
 8004b0c:	4620      	mov	r0, r4
 8004b0e:	4798      	blx	r3
    newTransition->invalidate();
 8004b10:	6823      	ldr	r3, [r4, #0]
 8004b12:	695b      	ldr	r3, [r3, #20]
 8004b14:	4620      	mov	r0, r4
 8004b16:	4798      	blx	r3
    newScreen->bind(*newPresenter);

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
}
 8004b18:	4628      	mov	r0, r5
 8004b1a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004b1e:	4b0c      	ldr	r3, [pc, #48]	@ (8004b50 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x140>)
 8004b20:	4a0c      	ldr	r2, [pc, #48]	@ (8004b54 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x144>)
 8004b22:	21a3      	movs	r1, #163	@ 0xa3
 8004b24:	480c      	ldr	r0, [pc, #48]	@ (8004b58 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x148>)
 8004b26:	f029 fe09 	bl	802e73c <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004b2a:	4b0c      	ldr	r3, [pc, #48]	@ (8004b5c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x14c>)
 8004b2c:	4a09      	ldr	r2, [pc, #36]	@ (8004b54 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x144>)
 8004b2e:	21a4      	movs	r1, #164	@ 0xa4
 8004b30:	4809      	ldr	r0, [pc, #36]	@ (8004b58 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x148>)
 8004b32:	f029 fe03 	bl	802e73c <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004b36:	4b0a      	ldr	r3, [pc, #40]	@ (8004b60 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x150>)
 8004b38:	4a06      	ldr	r2, [pc, #24]	@ (8004b54 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x144>)
 8004b3a:	21a5      	movs	r1, #165	@ 0xa5
 8004b3c:	4806      	ldr	r0, [pc, #24]	@ (8004b58 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x148>)
 8004b3e:	f029 fdfd 	bl	802e73c <__assert_func>
    model->bind(newPresenter);
 8004b42:	462b      	mov	r3, r5
 8004b44:	e7cf      	b.n	8004ae6 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xd6>
 8004b46:	bf00      	nop
 8004b48:	08030d2c 	.word	0x08030d2c
 8004b4c:	08030d50 	.word	0x08030d50
 8004b50:	08030690 	.word	0x08030690
 8004b54:	08030720 	.word	0x08030720
 8004b58:	080307f4 	.word	0x080307f4
 8004b5c:	0803083c 	.word	0x0803083c
 8004b60:	080308e0 	.word	0x080308e0

08004b64 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv>:
{
 8004b64:	b500      	push	{lr}
 8004b66:	b083      	sub	sp, #12
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004b68:	f8d0 3158 	ldr.w	r3, [r0, #344]	@ 0x158
 8004b6c:	9300      	str	r3, [sp, #0]
 8004b6e:	4b05      	ldr	r3, [pc, #20]	@ (8004b84 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x20>)
 8004b70:	f8d0 2154 	ldr.w	r2, [r0, #340]	@ 0x154
 8004b74:	f500 719e 	add.w	r1, r0, #316	@ 0x13c
 8004b78:	4803      	ldr	r0, [pc, #12]	@ (8004b88 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x24>)
 8004b7a:	f7ff ff49 	bl	8004a10 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8004b7e:	b003      	add	sp, #12
 8004b80:	f85d fb04 	ldr.w	pc, [sp], #4
 8004b84:	2000e454 	.word	0x2000e454
 8004b88:	2000e450 	.word	0x2000e450

08004b8c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8004b8c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004b90:	4607      	mov	r7, r0
 8004b92:	4688      	mov	r8, r1
 8004b94:	4615      	mov	r5, r2
 8004b96:	4699      	mov	r9, r3
 8004b98:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004b9c:	6890      	ldr	r0, [r2, #8]
 8004b9e:	6803      	ldr	r3, [r0, #0]
 8004ba0:	6a1b      	ldr	r3, [r3, #32]
 8004ba2:	4798      	blx	r3
 8004ba4:	f5b0 7fde 	cmp.w	r0, #444	@ 0x1bc
 8004ba8:	f0c0 8084 	bcc.w	8004cb4 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004bac:	6868      	ldr	r0, [r5, #4]
 8004bae:	6803      	ldr	r3, [r0, #0]
 8004bb0:	6a1b      	ldr	r3, [r3, #32]
 8004bb2:	4798      	blx	r3
 8004bb4:	280f      	cmp	r0, #15
 8004bb6:	f240 8083 	bls.w	8004cc0 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004bba:	68e8      	ldr	r0, [r5, #12]
 8004bbc:	6803      	ldr	r3, [r0, #0]
 8004bbe:	6a1b      	ldr	r3, [r3, #32]
 8004bc0:	4798      	blx	r3
 8004bc2:	280f      	cmp	r0, #15
 8004bc4:	f240 8082 	bls.w	8004ccc <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x140>
    Application::getInstance()->clearAllTimerWidgets();
 8004bc8:	f015 ff3c 	bl	801aa44 <_ZN8touchgfx11Application11getInstanceEv>
 8004bcc:	3004      	adds	r0, #4
 8004bce:	f015 ff86 	bl	801aade <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
 8004bd2:	f8d9 0000 	ldr.w	r0, [r9]
 8004bd6:	b110      	cbz	r0, 8004bde <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x52>
        (*currentTrans)->tearDown();
 8004bd8:	6803      	ldr	r3, [r0, #0]
 8004bda:	68db      	ldr	r3, [r3, #12]
 8004bdc:	4798      	blx	r3
    if (*currentTrans)
 8004bde:	f8d9 0000 	ldr.w	r0, [r9]
 8004be2:	b110      	cbz	r0, 8004bea <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x5e>
        (*currentTrans)->~Transition();
 8004be4:	6803      	ldr	r3, [r0, #0]
 8004be6:	681b      	ldr	r3, [r3, #0]
 8004be8:	4798      	blx	r3
    if (*currentScreen)
 8004bea:	6838      	ldr	r0, [r7, #0]
 8004bec:	b110      	cbz	r0, 8004bf4 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x68>
        (*currentScreen)->tearDownScreen();
 8004bee:	6803      	ldr	r3, [r0, #0]
 8004bf0:	695b      	ldr	r3, [r3, #20]
 8004bf2:	4798      	blx	r3
    if (*currentPresenter)
 8004bf4:	f8d8 0000 	ldr.w	r0, [r8]
 8004bf8:	b110      	cbz	r0, 8004c00 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x74>
        (*currentPresenter)->deactivate();
 8004bfa:	6803      	ldr	r3, [r0, #0]
 8004bfc:	685b      	ldr	r3, [r3, #4]
 8004bfe:	4798      	blx	r3
    if (*currentScreen)
 8004c00:	6838      	ldr	r0, [r7, #0]
 8004c02:	b110      	cbz	r0, 8004c0a <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7e>
        (*currentScreen)->~Screen();
 8004c04:	6803      	ldr	r3, [r0, #0]
 8004c06:	681b      	ldr	r3, [r3, #0]
 8004c08:	4798      	blx	r3
    if (*currentPresenter)
 8004c0a:	f8d8 0000 	ldr.w	r0, [r8]
 8004c0e:	b110      	cbz	r0, 8004c16 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8a>
        (*currentPresenter)->~Presenter();
 8004c10:	6803      	ldr	r3, [r0, #0]
 8004c12:	689b      	ldr	r3, [r3, #8]
 8004c14:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004c16:	68e8      	ldr	r0, [r5, #12]
 8004c18:	6803      	ldr	r3, [r0, #0]
 8004c1a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004c1c:	2100      	movs	r1, #0
 8004c1e:	4798      	blx	r3
 8004c20:	4604      	mov	r4, r0
 8004c22:	4b2e      	ldr	r3, [pc, #184]	@ (8004cdc <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x150>)
 8004c24:	6003      	str	r3, [r0, #0]
 8004c26:	f04f 0b00 	mov.w	fp, #0
 8004c2a:	f8c0 b004 	str.w	fp, [r0, #4]
 8004c2e:	f880 b008 	strb.w	fp, [r0, #8]
          calculatedValue(0)
 8004c32:	4b2b      	ldr	r3, [pc, #172]	@ (8004ce0 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x154>)
 8004c34:	6003      	str	r3, [r0, #0]
          animationSteps(transitionSteps),
 8004c36:	2314      	movs	r3, #20
 8004c38:	7243      	strb	r3, [r0, #9]
          animationCounter(0),
 8004c3a:	f880 b00a 	strb.w	fp, [r0, #10]
          calculatedValue(0)
 8004c3e:	f8a0 b00e 	strh.w	fp, [r0, #14]
            targetValue = -HAL::DISPLAY_HEIGHT;
 8004c42:	4b28      	ldr	r3, [pc, #160]	@ (8004ce4 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x158>)
 8004c44:	881b      	ldrh	r3, [r3, #0]
 8004c46:	425b      	negs	r3, r3
 8004c48:	8183      	strh	r3, [r0, #12]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004c4a:	68a8      	ldr	r0, [r5, #8]
 8004c4c:	6803      	ldr	r3, [r0, #0]
 8004c4e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004c50:	4659      	mov	r1, fp
 8004c52:	4798      	blx	r3
 8004c54:	4606      	mov	r6, r0
 8004c56:	f005 fdf7 	bl	800a848 <_ZN11Screen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004c5a:	6868      	ldr	r0, [r5, #4]
 8004c5c:	6803      	ldr	r3, [r0, #0]
 8004c5e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004c60:	4659      	mov	r1, fp
 8004c62:	4798      	blx	r3
 8004c64:	4605      	mov	r5, r0
 8004c66:	4631      	mov	r1, r6
 8004c68:	f005 fd6e 	bl	800a748 <_ZN16Screen2PresenterC1ER11Screen2View>
    *currentTrans = newTransition;
 8004c6c:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8004c70:	f8c8 5000 	str.w	r5, [r8]
    *currentScreen = newScreen;
 8004c74:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 8004c76:	2d00      	cmp	r5, #0
 8004c78:	d02e      	beq.n	8004cd8 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x14c>
 8004c7a:	1d2b      	adds	r3, r5, #4
 8004c7c:	f8ca 3000 	str.w	r3, [sl]
 8004c80:	f8c5 a008 	str.w	sl, [r5, #8]
 8004c84:	63f5      	str	r5, [r6, #60]	@ 0x3c
    newScreen->setupScreen();
 8004c86:	6833      	ldr	r3, [r6, #0]
 8004c88:	68db      	ldr	r3, [r3, #12]
 8004c8a:	4630      	mov	r0, r6
 8004c8c:	4798      	blx	r3
    newPresenter->activate();
 8004c8e:	682b      	ldr	r3, [r5, #0]
 8004c90:	681b      	ldr	r3, [r3, #0]
 8004c92:	4628      	mov	r0, r5
 8004c94:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004c96:	4621      	mov	r1, r4
 8004c98:	4630      	mov	r0, r6
 8004c9a:	f018 f99b 	bl	801cfd4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004c9e:	6823      	ldr	r3, [r4, #0]
 8004ca0:	691b      	ldr	r3, [r3, #16]
 8004ca2:	4620      	mov	r0, r4
 8004ca4:	4798      	blx	r3
    newTransition->invalidate();
 8004ca6:	6823      	ldr	r3, [r4, #0]
 8004ca8:	695b      	ldr	r3, [r3, #20]
 8004caa:	4620      	mov	r0, r4
 8004cac:	4798      	blx	r3
}
 8004cae:	4628      	mov	r0, r5
 8004cb0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004cb4:	4b0c      	ldr	r3, [pc, #48]	@ (8004ce8 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x15c>)
 8004cb6:	4a0d      	ldr	r2, [pc, #52]	@ (8004cec <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x160>)
 8004cb8:	21a3      	movs	r1, #163	@ 0xa3
 8004cba:	480d      	ldr	r0, [pc, #52]	@ (8004cf0 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x164>)
 8004cbc:	f029 fd3e 	bl	802e73c <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004cc0:	4b0c      	ldr	r3, [pc, #48]	@ (8004cf4 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x168>)
 8004cc2:	4a0a      	ldr	r2, [pc, #40]	@ (8004cec <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x160>)
 8004cc4:	21a4      	movs	r1, #164	@ 0xa4
 8004cc6:	480a      	ldr	r0, [pc, #40]	@ (8004cf0 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x164>)
 8004cc8:	f029 fd38 	bl	802e73c <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004ccc:	4b0a      	ldr	r3, [pc, #40]	@ (8004cf8 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x16c>)
 8004cce:	4a07      	ldr	r2, [pc, #28]	@ (8004cec <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x160>)
 8004cd0:	21a5      	movs	r1, #165	@ 0xa5
 8004cd2:	4807      	ldr	r0, [pc, #28]	@ (8004cf0 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x164>)
 8004cd4:	f029 fd32 	bl	802e73c <__assert_func>
    model->bind(newPresenter);
 8004cd8:	462b      	mov	r3, r5
 8004cda:	e7cf      	b.n	8004c7c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xf0>
 8004cdc:	08030d2c 	.word	0x08030d2c
 8004ce0:	08030d74 	.word	0x08030d74
 8004ce4:	2000e402 	.word	0x2000e402
 8004ce8:	08030690 	.word	0x08030690
 8004cec:	08030984 	.word	0x08030984
 8004cf0:	080307f4 	.word	0x080307f4
 8004cf4:	0803083c 	.word	0x0803083c
 8004cf8:	080308e0 	.word	0x080308e0

08004cfc <_ZN23FrontendApplicationBase41gotoScreen2ScreenCoverTransitionSouthImplEv>:
{
 8004cfc:	b500      	push	{lr}
 8004cfe:	b083      	sub	sp, #12
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::CoverTransition<SOUTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004d00:	f8d0 3158 	ldr.w	r3, [r0, #344]	@ 0x158
 8004d04:	9300      	str	r3, [sp, #0]
 8004d06:	4b05      	ldr	r3, [pc, #20]	@ (8004d1c <_ZN23FrontendApplicationBase41gotoScreen2ScreenCoverTransitionSouthImplEv+0x20>)
 8004d08:	f8d0 2154 	ldr.w	r2, [r0, #340]	@ 0x154
 8004d0c:	f500 719e 	add.w	r1, r0, #316	@ 0x13c
 8004d10:	4803      	ldr	r0, [pc, #12]	@ (8004d20 <_ZN23FrontendApplicationBase41gotoScreen2ScreenCoverTransitionSouthImplEv+0x24>)
 8004d12:	f7ff ff3b 	bl	8004b8c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8004d16:	b003      	add	sp, #12
 8004d18:	f85d fb04 	ldr.w	pc, [sp], #4
 8004d1c:	2000e454 	.word	0x2000e454
 8004d20:	2000e450 	.word	0x2000e450

08004d24 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8004d24:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004d28:	4607      	mov	r7, r0
 8004d2a:	4688      	mov	r8, r1
 8004d2c:	4615      	mov	r5, r2
 8004d2e:	4699      	mov	r9, r3
 8004d30:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004d34:	6890      	ldr	r0, [r2, #8]
 8004d36:	6803      	ldr	r3, [r0, #0]
 8004d38:	6a1b      	ldr	r3, [r3, #32]
 8004d3a:	4798      	blx	r3
 8004d3c:	f243 4357 	movw	r3, #13399	@ 0x3457
 8004d40:	4298      	cmp	r0, r3
 8004d42:	f240 8084 	bls.w	8004e4e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12a>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004d46:	6868      	ldr	r0, [r5, #4]
 8004d48:	6803      	ldr	r3, [r0, #0]
 8004d4a:	6a1b      	ldr	r3, [r3, #32]
 8004d4c:	4798      	blx	r3
 8004d4e:	280f      	cmp	r0, #15
 8004d50:	f240 8083 	bls.w	8004e5a <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x136>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004d54:	68e8      	ldr	r0, [r5, #12]
 8004d56:	6803      	ldr	r3, [r0, #0]
 8004d58:	6a1b      	ldr	r3, [r3, #32]
 8004d5a:	4798      	blx	r3
 8004d5c:	280f      	cmp	r0, #15
 8004d5e:	f240 8082 	bls.w	8004e66 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x142>
    Application::getInstance()->clearAllTimerWidgets();
 8004d62:	f015 fe6f 	bl	801aa44 <_ZN8touchgfx11Application11getInstanceEv>
 8004d66:	3004      	adds	r0, #4
 8004d68:	f015 feb9 	bl	801aade <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
 8004d6c:	f8d9 0000 	ldr.w	r0, [r9]
 8004d70:	b110      	cbz	r0, 8004d78 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x54>
        (*currentTrans)->tearDown();
 8004d72:	6803      	ldr	r3, [r0, #0]
 8004d74:	68db      	ldr	r3, [r3, #12]
 8004d76:	4798      	blx	r3
    if (*currentTrans)
 8004d78:	f8d9 0000 	ldr.w	r0, [r9]
 8004d7c:	b110      	cbz	r0, 8004d84 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x60>
        (*currentTrans)->~Transition();
 8004d7e:	6803      	ldr	r3, [r0, #0]
 8004d80:	681b      	ldr	r3, [r3, #0]
 8004d82:	4798      	blx	r3
    if (*currentScreen)
 8004d84:	6838      	ldr	r0, [r7, #0]
 8004d86:	b110      	cbz	r0, 8004d8e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x6a>
        (*currentScreen)->tearDownScreen();
 8004d88:	6803      	ldr	r3, [r0, #0]
 8004d8a:	695b      	ldr	r3, [r3, #20]
 8004d8c:	4798      	blx	r3
    if (*currentPresenter)
 8004d8e:	f8d8 0000 	ldr.w	r0, [r8]
 8004d92:	b110      	cbz	r0, 8004d9a <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x76>
        (*currentPresenter)->deactivate();
 8004d94:	6803      	ldr	r3, [r0, #0]
 8004d96:	685b      	ldr	r3, [r3, #4]
 8004d98:	4798      	blx	r3
    if (*currentScreen)
 8004d9a:	6838      	ldr	r0, [r7, #0]
 8004d9c:	b110      	cbz	r0, 8004da4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x80>
        (*currentScreen)->~Screen();
 8004d9e:	6803      	ldr	r3, [r0, #0]
 8004da0:	681b      	ldr	r3, [r3, #0]
 8004da2:	4798      	blx	r3
    if (*currentPresenter)
 8004da4:	f8d8 0000 	ldr.w	r0, [r8]
 8004da8:	b110      	cbz	r0, 8004db0 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8c>
        (*currentPresenter)->~Presenter();
 8004daa:	6803      	ldr	r3, [r0, #0]
 8004dac:	689b      	ldr	r3, [r3, #8]
 8004dae:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004db0:	68e8      	ldr	r0, [r5, #12]
 8004db2:	6803      	ldr	r3, [r0, #0]
 8004db4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004db6:	2100      	movs	r1, #0
 8004db8:	4798      	blx	r3
 8004dba:	4604      	mov	r4, r0
 8004dbc:	4b2e      	ldr	r3, [pc, #184]	@ (8004e78 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x154>)
 8004dbe:	6003      	str	r3, [r0, #0]
 8004dc0:	f04f 0b00 	mov.w	fp, #0
 8004dc4:	f8c0 b004 	str.w	fp, [r0, #4]
 8004dc8:	f880 b008 	strb.w	fp, [r0, #8]
          calculatedValue(0)
 8004dcc:	4b2b      	ldr	r3, [pc, #172]	@ (8004e7c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x158>)
 8004dce:	6003      	str	r3, [r0, #0]
          animationSteps(transitionSteps),
 8004dd0:	2314      	movs	r3, #20
 8004dd2:	7243      	strb	r3, [r0, #9]
          animationCounter(0),
 8004dd4:	f880 b00a 	strb.w	fp, [r0, #10]
          calculatedValue(0)
 8004dd8:	f8a0 b00e 	strh.w	fp, [r0, #14]
            targetValue = -HAL::DISPLAY_HEIGHT;
 8004ddc:	4b28      	ldr	r3, [pc, #160]	@ (8004e80 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x15c>)
 8004dde:	881b      	ldrh	r3, [r3, #0]
 8004de0:	425b      	negs	r3, r3
 8004de2:	8183      	strh	r3, [r0, #12]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004de4:	68a8      	ldr	r0, [r5, #8]
 8004de6:	6803      	ldr	r3, [r0, #0]
 8004de8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004dea:	4659      	mov	r1, fp
 8004dec:	4798      	blx	r3
 8004dee:	4606      	mov	r6, r0
 8004df0:	f005 fc3c 	bl	800a66c <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004df4:	6868      	ldr	r0, [r5, #4]
 8004df6:	6803      	ldr	r3, [r0, #0]
 8004df8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004dfa:	4659      	mov	r1, fp
 8004dfc:	4798      	blx	r3
 8004dfe:	4605      	mov	r5, r0
 8004e00:	4631      	mov	r1, r6
 8004e02:	f005 fc05 	bl	800a610 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8004e06:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8004e0a:	f8c8 5000 	str.w	r5, [r8]
    *currentScreen = newScreen;
 8004e0e:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 8004e10:	2d00      	cmp	r5, #0
 8004e12:	d02e      	beq.n	8004e72 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x14e>
 8004e14:	1d2b      	adds	r3, r5, #4
 8004e16:	f8ca 3000 	str.w	r3, [sl]
 8004e1a:	f8c5 a008 	str.w	sl, [r5, #8]
 8004e1e:	63f5      	str	r5, [r6, #60]	@ 0x3c
    newScreen->setupScreen();
 8004e20:	6833      	ldr	r3, [r6, #0]
 8004e22:	68db      	ldr	r3, [r3, #12]
 8004e24:	4630      	mov	r0, r6
 8004e26:	4798      	blx	r3
    newPresenter->activate();
 8004e28:	682b      	ldr	r3, [r5, #0]
 8004e2a:	681b      	ldr	r3, [r3, #0]
 8004e2c:	4628      	mov	r0, r5
 8004e2e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004e30:	4621      	mov	r1, r4
 8004e32:	4630      	mov	r0, r6
 8004e34:	f018 f8ce 	bl	801cfd4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004e38:	6823      	ldr	r3, [r4, #0]
 8004e3a:	691b      	ldr	r3, [r3, #16]
 8004e3c:	4620      	mov	r0, r4
 8004e3e:	4798      	blx	r3
    newTransition->invalidate();
 8004e40:	6823      	ldr	r3, [r4, #0]
 8004e42:	695b      	ldr	r3, [r3, #20]
 8004e44:	4620      	mov	r0, r4
 8004e46:	4798      	blx	r3
}
 8004e48:	4628      	mov	r0, r5
 8004e4a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004e4e:	4b0d      	ldr	r3, [pc, #52]	@ (8004e84 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x160>)
 8004e50:	4a0d      	ldr	r2, [pc, #52]	@ (8004e88 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x164>)
 8004e52:	21a3      	movs	r1, #163	@ 0xa3
 8004e54:	480d      	ldr	r0, [pc, #52]	@ (8004e8c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x168>)
 8004e56:	f029 fc71 	bl	802e73c <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004e5a:	4b0d      	ldr	r3, [pc, #52]	@ (8004e90 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x16c>)
 8004e5c:	4a0a      	ldr	r2, [pc, #40]	@ (8004e88 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x164>)
 8004e5e:	21a4      	movs	r1, #164	@ 0xa4
 8004e60:	480a      	ldr	r0, [pc, #40]	@ (8004e8c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x168>)
 8004e62:	f029 fc6b 	bl	802e73c <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004e66:	4b0b      	ldr	r3, [pc, #44]	@ (8004e94 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x170>)
 8004e68:	4a07      	ldr	r2, [pc, #28]	@ (8004e88 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x164>)
 8004e6a:	21a5      	movs	r1, #165	@ 0xa5
 8004e6c:	4807      	ldr	r0, [pc, #28]	@ (8004e8c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x168>)
 8004e6e:	f029 fc65 	bl	802e73c <__assert_func>
    model->bind(newPresenter);
 8004e72:	462b      	mov	r3, r5
 8004e74:	e7cf      	b.n	8004e16 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xf2>
 8004e76:	bf00      	nop
 8004e78:	08030d2c 	.word	0x08030d2c
 8004e7c:	08030d74 	.word	0x08030d74
 8004e80:	2000e402 	.word	0x2000e402
 8004e84:	08030690 	.word	0x08030690
 8004e88:	08030a6c 	.word	0x08030a6c
 8004e8c:	080307f4 	.word	0x080307f4
 8004e90:	0803083c 	.word	0x0803083c
 8004e94:	080308e0 	.word	0x080308e0

08004e98 <_ZN23FrontendApplicationBase41gotoScreen1ScreenCoverTransitionSouthImplEv>:
{
 8004e98:	b500      	push	{lr}
 8004e9a:	b083      	sub	sp, #12
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::CoverTransition<SOUTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004e9c:	f8d0 3158 	ldr.w	r3, [r0, #344]	@ 0x158
 8004ea0:	9300      	str	r3, [sp, #0]
 8004ea2:	4b05      	ldr	r3, [pc, #20]	@ (8004eb8 <_ZN23FrontendApplicationBase41gotoScreen1ScreenCoverTransitionSouthImplEv+0x20>)
 8004ea4:	f8d0 2154 	ldr.w	r2, [r0, #340]	@ 0x154
 8004ea8:	f500 719e 	add.w	r1, r0, #316	@ 0x13c
 8004eac:	4803      	ldr	r0, [pc, #12]	@ (8004ebc <_ZN23FrontendApplicationBase41gotoScreen1ScreenCoverTransitionSouthImplEv+0x24>)
 8004eae:	f7ff ff39 	bl	8004d24 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8004eb2:	b003      	add	sp, #12
 8004eb4:	f85d fb04 	ldr.w	pc, [sp], #4
 8004eb8:	2000e454 	.word	0x2000e454
 8004ebc:	2000e450 	.word	0x2000e450

08004ec0 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8004ec0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004ec4:	4607      	mov	r7, r0
 8004ec6:	4688      	mov	r8, r1
 8004ec8:	4615      	mov	r5, r2
 8004eca:	4699      	mov	r9, r3
 8004ecc:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004ed0:	6890      	ldr	r0, [r2, #8]
 8004ed2:	6803      	ldr	r3, [r0, #0]
 8004ed4:	6a1b      	ldr	r3, [r3, #32]
 8004ed6:	4798      	blx	r3
 8004ed8:	f643 03b7 	movw	r3, #14519	@ 0x38b7
 8004edc:	4298      	cmp	r0, r3
 8004ede:	f240 8084 	bls.w	8004fea <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12a>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004ee2:	6868      	ldr	r0, [r5, #4]
 8004ee4:	6803      	ldr	r3, [r0, #0]
 8004ee6:	6a1b      	ldr	r3, [r3, #32]
 8004ee8:	4798      	blx	r3
 8004eea:	280f      	cmp	r0, #15
 8004eec:	f240 8083 	bls.w	8004ff6 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x136>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004ef0:	68e8      	ldr	r0, [r5, #12]
 8004ef2:	6803      	ldr	r3, [r0, #0]
 8004ef4:	6a1b      	ldr	r3, [r3, #32]
 8004ef6:	4798      	blx	r3
 8004ef8:	280f      	cmp	r0, #15
 8004efa:	f240 8082 	bls.w	8005002 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x142>
    Application::getInstance()->clearAllTimerWidgets();
 8004efe:	f015 fda1 	bl	801aa44 <_ZN8touchgfx11Application11getInstanceEv>
 8004f02:	3004      	adds	r0, #4
 8004f04:	f015 fdeb 	bl	801aade <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
 8004f08:	f8d9 0000 	ldr.w	r0, [r9]
 8004f0c:	b110      	cbz	r0, 8004f14 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x54>
        (*currentTrans)->tearDown();
 8004f0e:	6803      	ldr	r3, [r0, #0]
 8004f10:	68db      	ldr	r3, [r3, #12]
 8004f12:	4798      	blx	r3
    if (*currentTrans)
 8004f14:	f8d9 0000 	ldr.w	r0, [r9]
 8004f18:	b110      	cbz	r0, 8004f20 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x60>
        (*currentTrans)->~Transition();
 8004f1a:	6803      	ldr	r3, [r0, #0]
 8004f1c:	681b      	ldr	r3, [r3, #0]
 8004f1e:	4798      	blx	r3
    if (*currentScreen)
 8004f20:	6838      	ldr	r0, [r7, #0]
 8004f22:	b110      	cbz	r0, 8004f2a <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x6a>
        (*currentScreen)->tearDownScreen();
 8004f24:	6803      	ldr	r3, [r0, #0]
 8004f26:	695b      	ldr	r3, [r3, #20]
 8004f28:	4798      	blx	r3
    if (*currentPresenter)
 8004f2a:	f8d8 0000 	ldr.w	r0, [r8]
 8004f2e:	b110      	cbz	r0, 8004f36 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x76>
        (*currentPresenter)->deactivate();
 8004f30:	6803      	ldr	r3, [r0, #0]
 8004f32:	685b      	ldr	r3, [r3, #4]
 8004f34:	4798      	blx	r3
    if (*currentScreen)
 8004f36:	6838      	ldr	r0, [r7, #0]
 8004f38:	b110      	cbz	r0, 8004f40 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x80>
        (*currentScreen)->~Screen();
 8004f3a:	6803      	ldr	r3, [r0, #0]
 8004f3c:	681b      	ldr	r3, [r3, #0]
 8004f3e:	4798      	blx	r3
    if (*currentPresenter)
 8004f40:	f8d8 0000 	ldr.w	r0, [r8]
 8004f44:	b110      	cbz	r0, 8004f4c <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8c>
        (*currentPresenter)->~Presenter();
 8004f46:	6803      	ldr	r3, [r0, #0]
 8004f48:	689b      	ldr	r3, [r3, #8]
 8004f4a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004f4c:	68e8      	ldr	r0, [r5, #12]
 8004f4e:	6803      	ldr	r3, [r0, #0]
 8004f50:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004f52:	2100      	movs	r1, #0
 8004f54:	4798      	blx	r3
 8004f56:	4604      	mov	r4, r0
 8004f58:	4b2e      	ldr	r3, [pc, #184]	@ (8005014 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x154>)
 8004f5a:	6003      	str	r3, [r0, #0]
 8004f5c:	f04f 0b00 	mov.w	fp, #0
 8004f60:	f8c0 b004 	str.w	fp, [r0, #4]
 8004f64:	f880 b008 	strb.w	fp, [r0, #8]
          calculatedValue(0)
 8004f68:	4b2b      	ldr	r3, [pc, #172]	@ (8005018 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x158>)
 8004f6a:	6003      	str	r3, [r0, #0]
          animationSteps(transitionSteps),
 8004f6c:	2314      	movs	r3, #20
 8004f6e:	7243      	strb	r3, [r0, #9]
          animationCounter(0),
 8004f70:	f880 b00a 	strb.w	fp, [r0, #10]
          calculatedValue(0)
 8004f74:	f8a0 b00e 	strh.w	fp, [r0, #14]
            targetValue = -HAL::DISPLAY_HEIGHT;
 8004f78:	4b28      	ldr	r3, [pc, #160]	@ (800501c <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x15c>)
 8004f7a:	881b      	ldrh	r3, [r3, #0]
 8004f7c:	425b      	negs	r3, r3
 8004f7e:	8183      	strh	r3, [r0, #12]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004f80:	68a8      	ldr	r0, [r5, #8]
 8004f82:	6803      	ldr	r3, [r0, #0]
 8004f84:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004f86:	4659      	mov	r1, fp
 8004f88:	4798      	blx	r3
 8004f8a:	4606      	mov	r6, r0
 8004f8c:	f005 fd36 	bl	800a9fc <_ZN11Screen3ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004f90:	6868      	ldr	r0, [r5, #4]
 8004f92:	6803      	ldr	r3, [r0, #0]
 8004f94:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004f96:	4659      	mov	r1, fp
 8004f98:	4798      	blx	r3
 8004f9a:	4605      	mov	r5, r0
 8004f9c:	4631      	mov	r1, r6
 8004f9e:	f005 fcd3 	bl	800a948 <_ZN16Screen3PresenterC1ER11Screen3View>
    *currentTrans = newTransition;
 8004fa2:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8004fa6:	f8c8 5000 	str.w	r5, [r8]
    *currentScreen = newScreen;
 8004faa:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 8004fac:	2d00      	cmp	r5, #0
 8004fae:	d02e      	beq.n	800500e <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x14e>
 8004fb0:	1d2b      	adds	r3, r5, #4
 8004fb2:	f8ca 3000 	str.w	r3, [sl]
 8004fb6:	f8c5 a008 	str.w	sl, [r5, #8]
 8004fba:	63f5      	str	r5, [r6, #60]	@ 0x3c
    newScreen->setupScreen();
 8004fbc:	6833      	ldr	r3, [r6, #0]
 8004fbe:	68db      	ldr	r3, [r3, #12]
 8004fc0:	4630      	mov	r0, r6
 8004fc2:	4798      	blx	r3
    newPresenter->activate();
 8004fc4:	682b      	ldr	r3, [r5, #0]
 8004fc6:	681b      	ldr	r3, [r3, #0]
 8004fc8:	4628      	mov	r0, r5
 8004fca:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004fcc:	4621      	mov	r1, r4
 8004fce:	4630      	mov	r0, r6
 8004fd0:	f018 f800 	bl	801cfd4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004fd4:	6823      	ldr	r3, [r4, #0]
 8004fd6:	691b      	ldr	r3, [r3, #16]
 8004fd8:	4620      	mov	r0, r4
 8004fda:	4798      	blx	r3
    newTransition->invalidate();
 8004fdc:	6823      	ldr	r3, [r4, #0]
 8004fde:	695b      	ldr	r3, [r3, #20]
 8004fe0:	4620      	mov	r0, r4
 8004fe2:	4798      	blx	r3
}
 8004fe4:	4628      	mov	r0, r5
 8004fe6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004fea:	4b0d      	ldr	r3, [pc, #52]	@ (8005020 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x160>)
 8004fec:	4a0d      	ldr	r2, [pc, #52]	@ (8005024 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x164>)
 8004fee:	21a3      	movs	r1, #163	@ 0xa3
 8004ff0:	480d      	ldr	r0, [pc, #52]	@ (8005028 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x168>)
 8004ff2:	f029 fba3 	bl	802e73c <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004ff6:	4b0d      	ldr	r3, [pc, #52]	@ (800502c <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x16c>)
 8004ff8:	4a0a      	ldr	r2, [pc, #40]	@ (8005024 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x164>)
 8004ffa:	21a4      	movs	r1, #164	@ 0xa4
 8004ffc:	480a      	ldr	r0, [pc, #40]	@ (8005028 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x168>)
 8004ffe:	f029 fb9d 	bl	802e73c <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005002:	4b0b      	ldr	r3, [pc, #44]	@ (8005030 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x170>)
 8005004:	4a07      	ldr	r2, [pc, #28]	@ (8005024 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x164>)
 8005006:	21a5      	movs	r1, #165	@ 0xa5
 8005008:	4807      	ldr	r0, [pc, #28]	@ (8005028 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x168>)
 800500a:	f029 fb97 	bl	802e73c <__assert_func>
    model->bind(newPresenter);
 800500e:	462b      	mov	r3, r5
 8005010:	e7cf      	b.n	8004fb2 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xf2>
 8005012:	bf00      	nop
 8005014:	08030d2c 	.word	0x08030d2c
 8005018:	08030d74 	.word	0x08030d74
 800501c:	2000e402 	.word	0x2000e402
 8005020:	08030690 	.word	0x08030690
 8005024:	08030b54 	.word	0x08030b54
 8005028:	080307f4 	.word	0x080307f4
 800502c:	0803083c 	.word	0x0803083c
 8005030:	080308e0 	.word	0x080308e0

08005034 <_ZN23FrontendApplicationBase41gotoScreen3ScreenCoverTransitionSouthImplEv>:
{
 8005034:	b500      	push	{lr}
 8005036:	b083      	sub	sp, #12
    touchgfx::makeTransition<Screen3View, Screen3Presenter, touchgfx::CoverTransition<SOUTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005038:	f8d0 3158 	ldr.w	r3, [r0, #344]	@ 0x158
 800503c:	9300      	str	r3, [sp, #0]
 800503e:	4b05      	ldr	r3, [pc, #20]	@ (8005054 <_ZN23FrontendApplicationBase41gotoScreen3ScreenCoverTransitionSouthImplEv+0x20>)
 8005040:	f8d0 2154 	ldr.w	r2, [r0, #340]	@ 0x154
 8005044:	f500 719e 	add.w	r1, r0, #316	@ 0x13c
 8005048:	4803      	ldr	r0, [pc, #12]	@ (8005058 <_ZN23FrontendApplicationBase41gotoScreen3ScreenCoverTransitionSouthImplEv+0x24>)
 800504a:	f7ff ff39 	bl	8004ec0 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800504e:	b003      	add	sp, #12
 8005050:	f85d fb04 	ldr.w	pc, [sp], #4
 8005054:	2000e454 	.word	0x2000e454
 8005058:	2000e450 	.word	0x2000e450

0800505c <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800505c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005060:	4607      	mov	r7, r0
 8005062:	4688      	mov	r8, r1
 8005064:	4615      	mov	r5, r2
 8005066:	4699      	mov	r9, r3
 8005068:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800506c:	6890      	ldr	r0, [r2, #8]
 800506e:	6803      	ldr	r3, [r0, #0]
 8005070:	6a1b      	ldr	r3, [r3, #32]
 8005072:	4798      	blx	r3
 8005074:	f243 739f 	movw	r3, #14239	@ 0x379f
 8005078:	4298      	cmp	r0, r3
 800507a:	f240 8084 	bls.w	8005186 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12a>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800507e:	6868      	ldr	r0, [r5, #4]
 8005080:	6803      	ldr	r3, [r0, #0]
 8005082:	6a1b      	ldr	r3, [r3, #32]
 8005084:	4798      	blx	r3
 8005086:	280f      	cmp	r0, #15
 8005088:	f240 8083 	bls.w	8005192 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x136>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800508c:	68e8      	ldr	r0, [r5, #12]
 800508e:	6803      	ldr	r3, [r0, #0]
 8005090:	6a1b      	ldr	r3, [r3, #32]
 8005092:	4798      	blx	r3
 8005094:	280f      	cmp	r0, #15
 8005096:	f240 8082 	bls.w	800519e <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x142>
    Application::getInstance()->clearAllTimerWidgets();
 800509a:	f015 fcd3 	bl	801aa44 <_ZN8touchgfx11Application11getInstanceEv>
 800509e:	3004      	adds	r0, #4
 80050a0:	f015 fd1d 	bl	801aade <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
 80050a4:	f8d9 0000 	ldr.w	r0, [r9]
 80050a8:	b110      	cbz	r0, 80050b0 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x54>
        (*currentTrans)->tearDown();
 80050aa:	6803      	ldr	r3, [r0, #0]
 80050ac:	68db      	ldr	r3, [r3, #12]
 80050ae:	4798      	blx	r3
    if (*currentTrans)
 80050b0:	f8d9 0000 	ldr.w	r0, [r9]
 80050b4:	b110      	cbz	r0, 80050bc <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x60>
        (*currentTrans)->~Transition();
 80050b6:	6803      	ldr	r3, [r0, #0]
 80050b8:	681b      	ldr	r3, [r3, #0]
 80050ba:	4798      	blx	r3
    if (*currentScreen)
 80050bc:	6838      	ldr	r0, [r7, #0]
 80050be:	b110      	cbz	r0, 80050c6 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x6a>
        (*currentScreen)->tearDownScreen();
 80050c0:	6803      	ldr	r3, [r0, #0]
 80050c2:	695b      	ldr	r3, [r3, #20]
 80050c4:	4798      	blx	r3
    if (*currentPresenter)
 80050c6:	f8d8 0000 	ldr.w	r0, [r8]
 80050ca:	b110      	cbz	r0, 80050d2 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x76>
        (*currentPresenter)->deactivate();
 80050cc:	6803      	ldr	r3, [r0, #0]
 80050ce:	685b      	ldr	r3, [r3, #4]
 80050d0:	4798      	blx	r3
    if (*currentScreen)
 80050d2:	6838      	ldr	r0, [r7, #0]
 80050d4:	b110      	cbz	r0, 80050dc <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x80>
        (*currentScreen)->~Screen();
 80050d6:	6803      	ldr	r3, [r0, #0]
 80050d8:	681b      	ldr	r3, [r3, #0]
 80050da:	4798      	blx	r3
    if (*currentPresenter)
 80050dc:	f8d8 0000 	ldr.w	r0, [r8]
 80050e0:	b110      	cbz	r0, 80050e8 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8c>
        (*currentPresenter)->~Presenter();
 80050e2:	6803      	ldr	r3, [r0, #0]
 80050e4:	689b      	ldr	r3, [r3, #8]
 80050e6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80050e8:	68e8      	ldr	r0, [r5, #12]
 80050ea:	6803      	ldr	r3, [r0, #0]
 80050ec:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80050ee:	2100      	movs	r1, #0
 80050f0:	4798      	blx	r3
 80050f2:	4604      	mov	r4, r0
 80050f4:	4b2e      	ldr	r3, [pc, #184]	@ (80051b0 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x154>)
 80050f6:	6003      	str	r3, [r0, #0]
 80050f8:	f04f 0b00 	mov.w	fp, #0
 80050fc:	f8c0 b004 	str.w	fp, [r0, #4]
 8005100:	f880 b008 	strb.w	fp, [r0, #8]
          calculatedValue(0)
 8005104:	4b2b      	ldr	r3, [pc, #172]	@ (80051b4 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x158>)
 8005106:	6003      	str	r3, [r0, #0]
          animationSteps(transitionSteps),
 8005108:	2314      	movs	r3, #20
 800510a:	7243      	strb	r3, [r0, #9]
          animationCounter(0),
 800510c:	f880 b00a 	strb.w	fp, [r0, #10]
          calculatedValue(0)
 8005110:	f8a0 b00e 	strh.w	fp, [r0, #14]
            targetValue = -HAL::DISPLAY_HEIGHT;
 8005114:	4b28      	ldr	r3, [pc, #160]	@ (80051b8 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x15c>)
 8005116:	881b      	ldrh	r3, [r3, #0]
 8005118:	425b      	negs	r3, r3
 800511a:	8183      	strh	r3, [r0, #12]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800511c:	68a8      	ldr	r0, [r5, #8]
 800511e:	6803      	ldr	r3, [r0, #0]
 8005120:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005122:	4659      	mov	r1, fp
 8005124:	4798      	blx	r3
 8005126:	4606      	mov	r6, r0
 8005128:	f005 fce8 	bl	800aafc <_ZN11Screen4ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800512c:	6868      	ldr	r0, [r5, #4]
 800512e:	6803      	ldr	r3, [r0, #0]
 8005130:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005132:	4659      	mov	r1, fp
 8005134:	4798      	blx	r3
 8005136:	4605      	mov	r5, r0
 8005138:	4631      	mov	r1, r6
 800513a:	f005 fcb1 	bl	800aaa0 <_ZN16Screen4PresenterC1ER11Screen4View>
    *currentTrans = newTransition;
 800513e:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8005142:	f8c8 5000 	str.w	r5, [r8]
    *currentScreen = newScreen;
 8005146:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 8005148:	2d00      	cmp	r5, #0
 800514a:	d02e      	beq.n	80051aa <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x14e>
 800514c:	1d2b      	adds	r3, r5, #4
 800514e:	f8ca 3000 	str.w	r3, [sl]
 8005152:	f8c5 a008 	str.w	sl, [r5, #8]
 8005156:	63f5      	str	r5, [r6, #60]	@ 0x3c
    newScreen->setupScreen();
 8005158:	6833      	ldr	r3, [r6, #0]
 800515a:	68db      	ldr	r3, [r3, #12]
 800515c:	4630      	mov	r0, r6
 800515e:	4798      	blx	r3
    newPresenter->activate();
 8005160:	682b      	ldr	r3, [r5, #0]
 8005162:	681b      	ldr	r3, [r3, #0]
 8005164:	4628      	mov	r0, r5
 8005166:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005168:	4621      	mov	r1, r4
 800516a:	4630      	mov	r0, r6
 800516c:	f017 ff32 	bl	801cfd4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005170:	6823      	ldr	r3, [r4, #0]
 8005172:	691b      	ldr	r3, [r3, #16]
 8005174:	4620      	mov	r0, r4
 8005176:	4798      	blx	r3
    newTransition->invalidate();
 8005178:	6823      	ldr	r3, [r4, #0]
 800517a:	695b      	ldr	r3, [r3, #20]
 800517c:	4620      	mov	r0, r4
 800517e:	4798      	blx	r3
}
 8005180:	4628      	mov	r0, r5
 8005182:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005186:	4b0d      	ldr	r3, [pc, #52]	@ (80051bc <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x160>)
 8005188:	4a0d      	ldr	r2, [pc, #52]	@ (80051c0 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x164>)
 800518a:	21a3      	movs	r1, #163	@ 0xa3
 800518c:	480d      	ldr	r0, [pc, #52]	@ (80051c4 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x168>)
 800518e:	f029 fad5 	bl	802e73c <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005192:	4b0d      	ldr	r3, [pc, #52]	@ (80051c8 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x16c>)
 8005194:	4a0a      	ldr	r2, [pc, #40]	@ (80051c0 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x164>)
 8005196:	21a4      	movs	r1, #164	@ 0xa4
 8005198:	480a      	ldr	r0, [pc, #40]	@ (80051c4 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x168>)
 800519a:	f029 facf 	bl	802e73c <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800519e:	4b0b      	ldr	r3, [pc, #44]	@ (80051cc <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x170>)
 80051a0:	4a07      	ldr	r2, [pc, #28]	@ (80051c0 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x164>)
 80051a2:	21a5      	movs	r1, #165	@ 0xa5
 80051a4:	4807      	ldr	r0, [pc, #28]	@ (80051c4 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x168>)
 80051a6:	f029 fac9 	bl	802e73c <__assert_func>
    model->bind(newPresenter);
 80051aa:	462b      	mov	r3, r5
 80051ac:	e7cf      	b.n	800514e <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xf2>
 80051ae:	bf00      	nop
 80051b0:	08030d2c 	.word	0x08030d2c
 80051b4:	08030d74 	.word	0x08030d74
 80051b8:	2000e402 	.word	0x2000e402
 80051bc:	08030690 	.word	0x08030690
 80051c0:	08030c3c 	.word	0x08030c3c
 80051c4:	080307f4 	.word	0x080307f4
 80051c8:	0803083c 	.word	0x0803083c
 80051cc:	080308e0 	.word	0x080308e0

080051d0 <_ZN23FrontendApplicationBase41gotoScreen4ScreenCoverTransitionSouthImplEv>:

void FrontendApplicationBase::gotoScreen4ScreenCoverTransitionSouthImpl()
{
 80051d0:	b500      	push	{lr}
 80051d2:	b083      	sub	sp, #12
    touchgfx::makeTransition<Screen4View, Screen4Presenter, touchgfx::CoverTransition<SOUTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80051d4:	f8d0 3158 	ldr.w	r3, [r0, #344]	@ 0x158
 80051d8:	9300      	str	r3, [sp, #0]
 80051da:	4b05      	ldr	r3, [pc, #20]	@ (80051f0 <_ZN23FrontendApplicationBase41gotoScreen4ScreenCoverTransitionSouthImplEv+0x20>)
 80051dc:	f8d0 2154 	ldr.w	r2, [r0, #340]	@ 0x154
 80051e0:	f500 719e 	add.w	r1, r0, #316	@ 0x13c
 80051e4:	4803      	ldr	r0, [pc, #12]	@ (80051f4 <_ZN23FrontendApplicationBase41gotoScreen4ScreenCoverTransitionSouthImplEv+0x24>)
 80051e6:	f7ff ff39 	bl	800505c <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_15CoverTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 80051ea:	b003      	add	sp, #12
 80051ec:	f85d fb04 	ldr.w	pc, [sp], #4
 80051f0:	2000e454 	.word	0x2000e454
 80051f4:	2000e450 	.word	0x2000e450

080051f8 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80051f8:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 80051fa:	4770      	bx	lr

080051fc <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80051fc:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 80051fe:	4770      	bx	lr

08005200 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8005200:	4a03      	ldr	r2, [pc, #12]	@ (8005210 <_ZN8touchgfx13GeneratedFontD1Ev+0x10>)
 8005202:	6002      	str	r2, [r0, #0]
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 8005204:	4a03      	ldr	r2, [pc, #12]	@ (8005214 <_ZN8touchgfx13GeneratedFontD1Ev+0x14>)
 8005206:	6002      	str	r2, [r0, #0]
    {
 8005208:	4a03      	ldr	r2, [pc, #12]	@ (8005218 <_ZN8touchgfx13GeneratedFontD1Ev+0x18>)
 800520a:	6002      	str	r2, [r0, #0]
 800520c:	4770      	bx	lr
 800520e:	bf00      	nop
 8005210:	08030d98 	.word	0x08030d98
 8005214:	08033188 	.word	0x08033188
 8005218:	08031cd0 	.word	0x08031cd0

0800521c <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    // Read dataOffset as 16bit, as it may be unaligned
    volatile const uint16_t* dataOffset = (const uint16_t*)((const uint8_t*)glyph + offsetof(GlyphNode, dataOffset));
    uint32_t offset = dataOffset[0];
 800521c:	880b      	ldrh	r3, [r1, #0]
 800521e:	b29b      	uxth	r3, r3
    offset |= dataOffset[1] << 16;
 8005220:	884a      	ldrh	r2, [r1, #2]
 8005222:	ea43 4302 	orr.w	r3, r3, r2, lsl #16

    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 8005226:	69c0      	ldr	r0, [r0, #28]
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8005228:	888a      	ldrh	r2, [r1, #4]
 800522a:	0ad2      	lsrs	r2, r2, #11
 800522c:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
    return pixels + offset;
}
 8005230:	4418      	add	r0, r3
 8005232:	4770      	bx	lr

08005234 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
 8005234:	4694      	mov	ip, r2
 8005236:	b1e2      	cbz	r2, 8005272 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
 8005238:	7b13      	ldrb	r3, [r2, #12]
 800523a:	b1e3      	cbz	r3, 8005276 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x42>
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800523c:	6a02      	ldr	r2, [r0, #32]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800523e:	f89c 000d 	ldrb.w	r0, [ip, #13]
 8005242:	0200      	lsls	r0, r0, #8
 8005244:	f400 60e0 	and.w	r0, r0, #1792	@ 0x700
 8005248:	f89c c00b 	ldrb.w	ip, [ip, #11]
 800524c:	ea40 000c 	orr.w	r0, r0, ip
 8005250:	eb02 0280 	add.w	r2, r2, r0, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005254:	b15b      	cbz	r3, 800526e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3a>
    {
        if (prevChar == kerndata->unicodePrevChar)
 8005256:	8810      	ldrh	r0, [r2, #0]
 8005258:	4288      	cmp	r0, r1
 800525a:	d005      	beq.n	8005268 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x34>
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
 800525c:	4288      	cmp	r0, r1
 800525e:	d80c      	bhi.n	800527a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x46>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005260:	3b01      	subs	r3, #1
 8005262:	b29b      	uxth	r3, r3
 8005264:	3204      	adds	r2, #4
 8005266:	e7f5      	b.n	8005254 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
            return kerndata->distance;
 8005268:	f992 0002 	ldrsb.w	r0, [r2, #2]
 800526c:	4770      	bx	lr
        {
            break;
        }
    }
    return 0;
 800526e:	2000      	movs	r0, #0
 8005270:	4770      	bx	lr
        return 0;
 8005272:	2000      	movs	r0, #0
 8005274:	4770      	bx	lr
 8005276:	2000      	movs	r0, #0
 8005278:	4770      	bx	lr
    return 0;
 800527a:	2000      	movs	r0, #0
}
 800527c:	4770      	bx	lr
	...

08005280 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8005280:	b510      	push	{r4, lr}
 8005282:	4604      	mov	r4, r0
 8005284:	4b05      	ldr	r3, [pc, #20]	@ (800529c <_ZN8touchgfx13GeneratedFontD0Ev+0x1c>)
 8005286:	6003      	str	r3, [r0, #0]
 8005288:	4b05      	ldr	r3, [pc, #20]	@ (80052a0 <_ZN8touchgfx13GeneratedFontD0Ev+0x20>)
 800528a:	6003      	str	r3, [r0, #0]
    {
 800528c:	4b05      	ldr	r3, [pc, #20]	@ (80052a4 <_ZN8touchgfx13GeneratedFontD0Ev+0x24>)
 800528e:	6003      	str	r3, [r0, #0]
 8005290:	212c      	movs	r1, #44	@ 0x2c
 8005292:	f028 fb0c 	bl	802d8ae <_ZdlPvj>
 8005296:	4620      	mov	r0, r4
 8005298:	bd10      	pop	{r4, pc}
 800529a:	bf00      	nop
 800529c:	08030d98 	.word	0x08030d98
 80052a0:	08033188 	.word	0x08033188
 80052a4:	08031cd0 	.word	0x08031cd0

080052a8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80052a8:	b530      	push	{r4, r5, lr}
 80052aa:	b08b      	sub	sp, #44	@ 0x2c
 80052ac:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80052ae:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 80052b2:	9508      	str	r5, [sp, #32]
 80052b4:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 80052b8:	9507      	str	r5, [sp, #28]
 80052ba:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 80052be:	9506      	str	r5, [sp, #24]
 80052c0:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 80052c4:	9505      	str	r5, [sp, #20]
 80052c6:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 80052ca:	9504      	str	r5, [sp, #16]
 80052cc:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 80052d0:	9503      	str	r5, [sp, #12]
 80052d2:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 80052d6:	9502      	str	r5, [sp, #8]
 80052d8:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 80052dc:	9501      	str	r5, [sp, #4]
 80052de:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 80052e2:	9500      	str	r5, [sp, #0]
 80052e4:	f017 f9e0 	bl	801c6a8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 80052e8:	4b06      	ldr	r3, [pc, #24]	@ (8005304 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 80052ea:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 80052ec:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80052ee:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 80052f0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80052f2:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 80052f4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80052f6:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 80052f8:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80052fa:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 80052fc:	4620      	mov	r0, r4
 80052fe:	b00b      	add	sp, #44	@ 0x2c
 8005300:	bd30      	pop	{r4, r5, pc}
 8005302:	bf00      	nop
 8005304:	08030d98 	.word	0x08030d98

08005308 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8005308:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800530a:	4770      	bx	lr

0800530c <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800530c:	4770      	bx	lr

0800530e <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 800530e:	4770      	bx	lr

08005310 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8005310:	4770      	bx	lr

08005312 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8005312:	4770      	bx	lr

08005314 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8005314:	4770      	bx	lr

08005316 <_ZN8touchgfx17AbstractDataGraph8setAlphaEh>:
     *
     * @note All graph elements have to take this alpha into consideration.
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8005316:	f880 102c 	strb.w	r1, [r0, #44]	@ 0x2c
    }
 800531a:	4770      	bx	lr

0800531c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>:
     * @param  min The minimum x value.
     * @param  max The maximum x value.
     *
     * @note The graph as well as the area above and below are automatically redrawn (invalidated).
     */
    virtual void setGraphRangeX(int min, int max)
 800531c:	b510      	push	{r4, lr}
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int int2scaledX(int i) const
    {
        return int2scaled(i, xScale);
 800531e:	6b04      	ldr	r4, [r0, #48]	@ 0x30
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8005320:	6803      	ldr	r3, [r0, #0]
 8005322:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8005326:	fb04 f202 	mul.w	r2, r4, r2
 800532a:	fb04 f101 	mul.w	r1, r4, r1
 800532e:	4798      	blx	r3
    }
 8005330:	bd10      	pop	{r4, pc}

08005332 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff>:
    virtual void setGraphRangeX(float min, float max)
 8005332:	b508      	push	{r3, lr}
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8005334:	6803      	ldr	r3, [r0, #0]
 8005336:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
     *
     * @return The product of the two numbers, rounded to nearest integer value.
     */
    FORCE_INLINE_FUNCTION static int float2scaled(float f, int scale)
    {
        const float fs = f * (float)scale;
 800533a:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
 800533e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005342:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 8005346:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800534a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800534e:	da2c      	bge.n	80053aa <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x78>
        {
            return (int)(fs + 0.5f);
        }
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8005350:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8005354:	ee17 2a10 	vmov	r2, s14
 8005358:	1e51      	subs	r1, r2, #1
 800535a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800535e:	ee30 0a47 	vsub.f32	s0, s0, s14
 8005362:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8005366:	ee30 0a07 	vadd.f32	s0, s0, s14
 800536a:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800536e:	ee10 2a10 	vmov	r2, s0
 8005372:	4411      	add	r1, r2
        const float fs = f * (float)scale;
 8005374:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 8005378:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 800537c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005380:	da1c      	bge.n	80053bc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x8a>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8005382:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8005386:	ee17 2a90 	vmov	r2, s15
 800538a:	3a01      	subs	r2, #1
 800538c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005390:	ee70 0ae7 	vsub.f32	s1, s1, s15
 8005394:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 8005398:	ee70 0aa7 	vadd.f32	s1, s1, s15
 800539c:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 80053a0:	ee10 ca90 	vmov	ip, s1
 80053a4:	4462      	add	r2, ip
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80053a6:	4798      	blx	r3
    }
 80053a8:	bd08      	pop	{r3, pc}
            return (int)(fs + 0.5f);
 80053aa:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 80053ae:	ee30 0a07 	vadd.f32	s0, s0, s14
 80053b2:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80053b6:	ee17 1a10 	vmov	r1, s14
 80053ba:	e7db      	b.n	8005374 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x42>
 80053bc:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80053c0:	ee70 0aa7 	vadd.f32	s1, s1, s15
 80053c4:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80053c8:	ee17 2a90 	vmov	r2, s15
 80053cc:	e7eb      	b.n	80053a6 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x74>

080053ce <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi>:
    virtual void setGraphRangeXAuto(bool showYaxis = true, int margin = 0)
 80053ce:	b510      	push	{r4, lr}
        return int2scaled(i, xScale);
 80053d0:	6b04      	ldr	r4, [r0, #48]	@ 0x30
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 80053d2:	6803      	ldr	r3, [r0, #0]
 80053d4:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 80053d8:	fb04 f202 	mul.w	r2, r4, r2
 80053dc:	4798      	blx	r3
    }
 80053de:	bd10      	pop	{r4, pc}

080053e0 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf>:
    virtual void setGraphRangeXAuto(bool showYaxis, float margin)
 80053e0:	b508      	push	{r3, lr}
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 80053e2:	6803      	ldr	r3, [r0, #0]
 80053e4:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
        const float fs = f * (float)scale;
 80053e8:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
 80053ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80053f0:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 80053f4:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80053f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80053fc:	da13      	bge.n	8005426 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x46>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80053fe:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8005402:	ee17 2a90 	vmov	r2, s15
 8005406:	3a01      	subs	r2, #1
 8005408:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800540c:	ee30 0a67 	vsub.f32	s0, s0, s15
 8005410:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 8005414:	ee30 0a27 	vadd.f32	s0, s0, s15
 8005418:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800541c:	ee10 ca10 	vmov	ip, s0
 8005420:	4462      	add	r2, ip
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8005422:	4798      	blx	r3
    }
 8005424:	bd08      	pop	{r3, pc}
            return (int)(fs + 0.5f);
 8005426:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800542a:	ee30 0a27 	vadd.f32	s0, s0, s15
 800542e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8005432:	ee17 2a90 	vmov	r2, s15
 8005436:	e7f4      	b.n	8005422 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x42>

08005438 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>:
    virtual void setGraphRangeY(int min, int max)
 8005438:	b510      	push	{r4, lr}
        return int2scaled(i, yScale);
 800543a:	6b44      	ldr	r4, [r0, #52]	@ 0x34
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 800543c:	6803      	ldr	r3, [r0, #0]
 800543e:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 8005442:	fb04 f202 	mul.w	r2, r4, r2
 8005446:	fb04 f101 	mul.w	r1, r4, r1
 800544a:	4798      	blx	r3
    }
 800544c:	bd10      	pop	{r4, pc}

0800544e <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>:
    virtual void setGraphRangeY(float min, float max)
 800544e:	b508      	push	{r3, lr}
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8005450:	6803      	ldr	r3, [r0, #0]
 8005452:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
        const float fs = f * (float)scale;
 8005456:	edd0 7a0d 	vldr	s15, [r0, #52]	@ 0x34
 800545a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800545e:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 8005462:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8005466:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800546a:	da2c      	bge.n	80054c6 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x78>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800546c:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8005470:	ee17 2a10 	vmov	r2, s14
 8005474:	1e51      	subs	r1, r2, #1
 8005476:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800547a:	ee30 0a47 	vsub.f32	s0, s0, s14
 800547e:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8005482:	ee30 0a07 	vadd.f32	s0, s0, s14
 8005486:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800548a:	ee10 2a10 	vmov	r2, s0
 800548e:	4411      	add	r1, r2
        const float fs = f * (float)scale;
 8005490:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 8005494:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 8005498:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800549c:	da1c      	bge.n	80054d8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x8a>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800549e:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80054a2:	ee17 2a90 	vmov	r2, s15
 80054a6:	3a01      	subs	r2, #1
 80054a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80054ac:	ee70 0ae7 	vsub.f32	s1, s1, s15
 80054b0:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 80054b4:	ee70 0aa7 	vadd.f32	s1, s1, s15
 80054b8:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 80054bc:	ee10 ca90 	vmov	ip, s1
 80054c0:	4462      	add	r2, ip
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80054c2:	4798      	blx	r3
    }
 80054c4:	bd08      	pop	{r3, pc}
            return (int)(fs + 0.5f);
 80054c6:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 80054ca:	ee30 0a07 	vadd.f32	s0, s0, s14
 80054ce:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80054d2:	ee17 1a10 	vmov	r1, s14
 80054d6:	e7db      	b.n	8005490 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x42>
 80054d8:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80054dc:	ee70 0aa7 	vadd.f32	s1, s1, s15
 80054e0:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80054e4:	ee17 2a90 	vmov	r2, s15
 80054e8:	e7eb      	b.n	80054c2 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x74>

080054ea <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi>:
    virtual void setGraphRangeYAuto(bool showXaxis = true, int margin = 0)
 80054ea:	b510      	push	{r4, lr}
        return int2scaled(i, yScale);
 80054ec:	6b44      	ldr	r4, [r0, #52]	@ 0x34
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 80054ee:	6803      	ldr	r3, [r0, #0]
 80054f0:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 80054f4:	fb04 f202 	mul.w	r2, r4, r2
 80054f8:	4798      	blx	r3
    }
 80054fa:	bd10      	pop	{r4, pc}

080054fc <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf>:
    virtual void setGraphRangeYAuto(bool showXaxis, float margin)
 80054fc:	b508      	push	{r3, lr}
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 80054fe:	6803      	ldr	r3, [r0, #0]
 8005500:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
        const float fs = f * (float)scale;
 8005504:	edd0 7a0d 	vldr	s15, [r0, #52]	@ 0x34
 8005508:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800550c:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 8005510:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8005514:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005518:	da13      	bge.n	8005542 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x46>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800551a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800551e:	ee17 2a90 	vmov	r2, s15
 8005522:	3a01      	subs	r2, #1
 8005524:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005528:	ee30 0a67 	vsub.f32	s0, s0, s15
 800552c:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 8005530:	ee30 0a27 	vadd.f32	s0, s0, s15
 8005534:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8005538:	ee10 ca10 	vmov	ip, s0
 800553c:	4462      	add	r2, ip
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 800553e:	4798      	blx	r3
    }
 8005540:	bd08      	pop	{r3, pc}
            return (int)(fs + 0.5f);
 8005542:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8005546:	ee30 0a27 	vadd.f32	s0, s0, s15
 800554a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800554e:	ee17 2a90 	vmov	r2, s15
 8005552:	e7f4      	b.n	800553e <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x42>

08005554 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv>:
        return scaled2intX(graphRangeMinX);
 8005554:	f8d0 312c 	ldr.w	r3, [r0, #300]	@ 0x12c
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int scaled2intX(int i) const
    {
        return scaled2int(i, xScale);
 8005558:	6b02      	ldr	r2, [r0, #48]	@ 0x30
        if (i >= 0)
 800555a:	2b00      	cmp	r3, #0
 800555c:	da0b      	bge.n	8005576 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv+0x22>
        return -(((-i * 2 + scale - 1) / scale) / 2);
 800555e:	ebc3 70c3 	rsb	r0, r3, r3, lsl #31
 8005562:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8005566:	3801      	subs	r0, #1
 8005568:	fb90 f0f2 	sdiv	r0, r0, r2
 800556c:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8005570:	1040      	asrs	r0, r0, #1
 8005572:	4240      	negs	r0, r0
    }
 8005574:	4770      	bx	lr
            return ((i * 2 + scale) / scale) / 2;
 8005576:	eb02 0043 	add.w	r0, r2, r3, lsl #1
 800557a:	fb90 f0f2 	sdiv	r0, r0, r2
 800557e:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8005582:	1040      	asrs	r0, r0, #1
 8005584:	4770      	bx	lr

08005586 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv>:
        return scaled2floatX(graphRangeMinX);
 8005586:	ed90 0a4b 	vldr	s0, [r0, #300]	@ 0x12c
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION float scaled2floatX(int i) const
    {
        return scaled2float(i, xScale);
 800558a:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
        return (float)i / (float)scale;
 800558e:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8005592:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8005596:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800559a:	4770      	bx	lr

0800559c <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv>:
    }
 800559c:	f8d0 012c 	ldr.w	r0, [r0, #300]	@ 0x12c
 80055a0:	4770      	bx	lr

080055a2 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv>:
        return scaled2intX(graphRangeMaxX);
 80055a2:	f8d0 3130 	ldr.w	r3, [r0, #304]	@ 0x130
        return scaled2int(i, xScale);
 80055a6:	6b02      	ldr	r2, [r0, #48]	@ 0x30
        if (i >= 0)
 80055a8:	2b00      	cmp	r3, #0
 80055aa:	da0b      	bge.n	80055c4 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv+0x22>
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80055ac:	ebc3 70c3 	rsb	r0, r3, r3, lsl #31
 80055b0:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80055b4:	3801      	subs	r0, #1
 80055b6:	fb90 f0f2 	sdiv	r0, r0, r2
 80055ba:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80055be:	1040      	asrs	r0, r0, #1
 80055c0:	4240      	negs	r0, r0
    }
 80055c2:	4770      	bx	lr
            return ((i * 2 + scale) / scale) / 2;
 80055c4:	eb02 0043 	add.w	r0, r2, r3, lsl #1
 80055c8:	fb90 f0f2 	sdiv	r0, r0, r2
 80055cc:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80055d0:	1040      	asrs	r0, r0, #1
 80055d2:	4770      	bx	lr

080055d4 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv>:
        return scaled2floatX(graphRangeMaxX);
 80055d4:	ed90 0a4c 	vldr	s0, [r0, #304]	@ 0x130
        return scaled2float(i, xScale);
 80055d8:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
        return (float)i / (float)scale;
 80055dc:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 80055e0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80055e4:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80055e8:	4770      	bx	lr

080055ea <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv>:
    }
 80055ea:	f8d0 0130 	ldr.w	r0, [r0, #304]	@ 0x130
 80055ee:	4770      	bx	lr

080055f0 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv>:
        return scaled2intY(graphRangeMinY);
 80055f0:	f8d0 3134 	ldr.w	r3, [r0, #308]	@ 0x134
        return scaled2int(i, yScale);
 80055f4:	6b42      	ldr	r2, [r0, #52]	@ 0x34
        if (i >= 0)
 80055f6:	2b00      	cmp	r3, #0
 80055f8:	da0b      	bge.n	8005612 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv+0x22>
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80055fa:	ebc3 70c3 	rsb	r0, r3, r3, lsl #31
 80055fe:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8005602:	3801      	subs	r0, #1
 8005604:	fb90 f0f2 	sdiv	r0, r0, r2
 8005608:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800560c:	1040      	asrs	r0, r0, #1
 800560e:	4240      	negs	r0, r0
    }
 8005610:	4770      	bx	lr
            return ((i * 2 + scale) / scale) / 2;
 8005612:	eb02 0043 	add.w	r0, r2, r3, lsl #1
 8005616:	fb90 f0f2 	sdiv	r0, r0, r2
 800561a:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800561e:	1040      	asrs	r0, r0, #1
 8005620:	4770      	bx	lr

08005622 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv>:
        return scaled2floatY(graphRangeMinY);
 8005622:	ed90 0a4d 	vldr	s0, [r0, #308]	@ 0x134
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION float scaled2floatY(int i) const
    {
        return scaled2float(i, yScale);
 8005626:	edd0 7a0d 	vldr	s15, [r0, #52]	@ 0x34
        return (float)i / (float)scale;
 800562a:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 800562e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8005632:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8005636:	4770      	bx	lr

08005638 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv>:
    }
 8005638:	f8d0 0134 	ldr.w	r0, [r0, #308]	@ 0x134
 800563c:	4770      	bx	lr

0800563e <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv>:
        return scaled2intY(graphRangeMaxY);
 800563e:	f8d0 3138 	ldr.w	r3, [r0, #312]	@ 0x138
        return scaled2int(i, yScale);
 8005642:	6b42      	ldr	r2, [r0, #52]	@ 0x34
        if (i >= 0)
 8005644:	2b00      	cmp	r3, #0
 8005646:	da0b      	bge.n	8005660 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv+0x22>
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8005648:	ebc3 70c3 	rsb	r0, r3, r3, lsl #31
 800564c:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8005650:	3801      	subs	r0, #1
 8005652:	fb90 f0f2 	sdiv	r0, r0, r2
 8005656:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800565a:	1040      	asrs	r0, r0, #1
 800565c:	4240      	negs	r0, r0
    }
 800565e:	4770      	bx	lr
            return ((i * 2 + scale) / scale) / 2;
 8005660:	eb02 0043 	add.w	r0, r2, r3, lsl #1
 8005664:	fb90 f0f2 	sdiv	r0, r0, r2
 8005668:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800566c:	1040      	asrs	r0, r0, #1
 800566e:	4770      	bx	lr

08005670 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv>:
        return scaled2floatY(graphRangeMaxY);
 8005670:	ed90 0a4e 	vldr	s0, [r0, #312]	@ 0x138
        return scaled2float(i, yScale);
 8005674:	edd0 7a0d 	vldr	s15, [r0, #52]	@ 0x34
        return (float)i / (float)scale;
 8005678:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 800567c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8005680:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8005684:	4770      	bx	lr

08005686 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv>:
    }
 8005686:	f8d0 0138 	ldr.w	r0, [r0, #312]	@ 0x138
 800568a:	4770      	bx	lr

0800568c <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv>:
     * @return The given data converted to a new scale.
     */
    static int convertToNewScale(int value, int oldScale, int newScale);

    /** Invalidate content. */
    virtual void invalidateContent() const
 800568c:	b508      	push	{r3, lr}
    {
        if (alpha > 0)
 800568e:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8005692:	b12b      	cbz	r3, 80056a0 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv+0x14>
        if (visible)
 8005694:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8005698:	b113      	cbz	r3, 80056a0 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv+0x14>
            invalidate();
 800569a:	6803      	ldr	r3, [r0, #0]
 800569c:	695b      	ldr	r3, [r3, #20]
 800569e:	4798      	blx	r3
        {
            Container::invalidateContent();
        }
    }
 80056a0:	bd08      	pop	{r3, pc}

080056a2 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>:
     * @see getScale
     *
     * @note The current xAxisFactor, xAxisOffet and xGraphRange values are updated to reflect the
     *       new scale being set.
     */
    virtual void setScale(int scale, bool updateData = false)
 80056a2:	b570      	push	{r4, r5, r6, lr}
 80056a4:	4604      	mov	r4, r0
 80056a6:	460d      	mov	r5, r1
 80056a8:	4616      	mov	r6, r2
    {
        setScaleX(scale, updateData);
 80056aa:	6803      	ldr	r3, [r0, #0]
 80056ac:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80056b0:	4798      	blx	r3
        setScaleY(scale, updateData);
 80056b2:	6823      	ldr	r3, [r4, #0]
 80056b4:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80056b8:	4632      	mov	r2, r6
 80056ba:	4629      	mov	r1, r5
 80056bc:	4620      	mov	r0, r4
 80056be:	4798      	blx	r3
    }
 80056c0:	bd70      	pop	{r4, r5, r6, pc}

080056c2 <_ZNK8touchgfx16DynamicDataGraph8getScaleEv>:
     *
     * @return The scaling factor.
     *
     * @see setScale
     */
    virtual int getScale() const
 80056c2:	b508      	push	{r3, lr}
    {
        return getScaleY();
 80056c4:	6803      	ldr	r3, [r0, #0]
 80056c6:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80056ca:	4798      	blx	r3
    }
 80056cc:	bd08      	pop	{r3, pc}

080056ce <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMinEv>:
    /**
     * Gets the minimum x coordinate for the graph.
     *
     * @return The minimum x coordinate .
     */
    virtual int getGraphRangeXMin() const
 80056ce:	b508      	push	{r3, lr}
    {
        return getGraphRangeXMinScaled();
 80056d0:	6803      	ldr	r3, [r0, #0]
 80056d2:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 80056d6:	4798      	blx	r3
    }
 80056d8:	bd08      	pop	{r3, pc}

080056da <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMaxEv>:
    /**
     * Gets the maximum x coordinate for the graph.
     *
     * @return The maximum x coordinate .
     */
    virtual int getGraphRangeXMax() const
 80056da:	b508      	push	{r3, lr}
    {
        return getGraphRangeXMaxScaled();
 80056dc:	6803      	ldr	r3, [r0, #0]
 80056de:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80056e2:	4798      	blx	r3
    }
 80056e4:	bd08      	pop	{r3, pc}

080056e6 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi>:

    virtual void setGraphRangeYAutoScaled(bool showXaxis, int margin);

    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
 80056e6:	b510      	push	{r4, lr}
    {
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 80056e8:	6803      	ldr	r3, [r0, #0]
 80056ea:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
        return scaled2int(i, xScale);
 80056ee:	6b04      	ldr	r4, [r0, #48]	@ 0x30
        if (i >= 0)
 80056f0:	2a00      	cmp	r2, #0
 80056f2:	da11      	bge.n	8005718 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x32>
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80056f4:	ebc2 72c2 	rsb	r2, r2, r2, lsl #31
 80056f8:	eb04 0142 	add.w	r1, r4, r2, lsl #1
 80056fc:	3901      	subs	r1, #1
 80056fe:	fb91 f1f4 	sdiv	r1, r1, r4
 8005702:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8005706:	1049      	asrs	r1, r1, #1
 8005708:	4249      	negs	r1, r1
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 800570a:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	@ 0x11e
 800570e:	3a01      	subs	r2, #1
 8005710:	440a      	add	r2, r1
 8005712:	4249      	negs	r1, r1
 8005714:	4798      	blx	r3
    }
 8005716:	bd10      	pop	{r4, pc}
            return ((i * 2 + scale) / scale) / 2;
 8005718:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800571c:	fb92 f1f4 	sdiv	r1, r2, r4
 8005720:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8005724:	1049      	asrs	r1, r1, #1
 8005726:	e7f0      	b.n	800570a <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x24>

08005728 <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(int scale))
 8005728:	b508      	push	{r3, lr}
    {
        setXAxisFactor(scale);
 800572a:	6803      	ldr	r3, [r0, #0]
 800572c:	f8d3 313c 	ldr.w	r3, [r3, #316]	@ 0x13c
 8005730:	4798      	blx	r3
    }
 8005732:	bd08      	pop	{r3, pc}

08005734 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi>:
     * Set x coordinate axis factor value. This is the real x value increment between two data
     * points added to the graph.
     *
     * @param  factor The x axis factor.
     */
    virtual void setXAxisFactor(int factor)
 8005734:	b508      	push	{r3, lr}
        return int2scaled(i, xScale);
 8005736:	6b02      	ldr	r2, [r0, #48]	@ 0x30
    {
        setXAxisFactorScaled(int2scaledX(factor));
 8005738:	6803      	ldr	r3, [r0, #0]
 800573a:	f8d3 3148 	ldr.w	r3, [r3, #328]	@ 0x148
 800573e:	fb02 f101 	mul.w	r1, r2, r1
 8005742:	4798      	blx	r3
    }
 8005744:	bd08      	pop	{r3, pc}

08005746 <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEf>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(float scale))
 8005746:	b508      	push	{r3, lr}
    {
        setXAxisFactor(scale);
 8005748:	6803      	ldr	r3, [r0, #0]
 800574a:	f8d3 3144 	ldr.w	r3, [r3, #324]	@ 0x144
 800574e:	4798      	blx	r3
    }
 8005750:	bd08      	pop	{r3, pc}

08005752 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf>:

    /// @endcond

    /** @copydoc setXAxisFactor(int) */
    virtual void setXAxisFactor(float factor)
 8005752:	b508      	push	{r3, lr}
    {
        setXAxisFactorScaled(float2scaledX(factor));
 8005754:	6803      	ldr	r3, [r0, #0]
 8005756:	f8d3 3148 	ldr.w	r3, [r3, #328]	@ 0x148
        const float fs = f * (float)scale;
 800575a:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
 800575e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005762:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 8005766:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800576a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800576e:	da13      	bge.n	8005798 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x46>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8005770:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8005774:	ee17 2a90 	vmov	r2, s15
 8005778:	1e51      	subs	r1, r2, #1
 800577a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800577e:	ee30 0a67 	vsub.f32	s0, s0, s15
 8005782:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 8005786:	ee30 0a27 	vadd.f32	s0, s0, s15
 800578a:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800578e:	ee10 2a10 	vmov	r2, s0
 8005792:	4411      	add	r1, r2
        setXAxisFactorScaled(float2scaledX(factor));
 8005794:	4798      	blx	r3
    }
 8005796:	bd08      	pop	{r3, pc}
            return (int)(fs + 0.5f);
 8005798:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800579c:	ee30 0a27 	vadd.f32	s0, s0, s15
 80057a0:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80057a4:	ee17 1a90 	vmov	r1, s15
 80057a8:	e7f4      	b.n	8005794 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x42>

080057aa <_ZN8touchgfx16DynamicDataGraph20setXAxisFactorScaledEi>:
     *
     * @see setXAxisFactorScaled,setXAxisFactor
     */
    virtual void setXAxisFactorScaled(int factor)
    {
        xAxisFactor = factor;
 80057aa:	f8c0 113c 	str.w	r1, [r0, #316]	@ 0x13c
    }
 80057ae:	4770      	bx	lr

080057b0 <_ZNK8touchgfx16DynamicDataGraph18getXAxisScaleAsIntEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsInt()", virtual int getXAxisScaleAsInt() const)
 80057b0:	b508      	push	{r3, lr}
    {
        return getXAxisFactorAsInt();
 80057b2:	6803      	ldr	r3, [r0, #0]
 80057b4:	f8d3 3150 	ldr.w	r3, [r3, #336]	@ 0x150
 80057b8:	4798      	blx	r3
    }
 80057ba:	bd08      	pop	{r3, pc}

080057bc <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv>:
     * Get x coordinate axis factor value. This is the real x value increment between two data
     * points added to the graph.
     *
     * @return The x axis factor.
     */
    virtual int getXAxisFactorAsInt() const
 80057bc:	b510      	push	{r4, lr}
 80057be:	4604      	mov	r4, r0
    {
        return scaled2intX(getXAxisFactorScaled());
 80057c0:	6803      	ldr	r3, [r0, #0]
 80057c2:	f8d3 315c 	ldr.w	r3, [r3, #348]	@ 0x15c
 80057c6:	4798      	blx	r3
        return scaled2int(i, xScale);
 80057c8:	6b23      	ldr	r3, [r4, #48]	@ 0x30
        if (i >= 0)
 80057ca:	2800      	cmp	r0, #0
 80057cc:	da0b      	bge.n	80057e6 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x2a>
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80057ce:	ebc0 70c0 	rsb	r0, r0, r0, lsl #31
 80057d2:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80057d6:	3801      	subs	r0, #1
 80057d8:	fb90 f0f3 	sdiv	r0, r0, r3
 80057dc:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80057e0:	1040      	asrs	r0, r0, #1
 80057e2:	4240      	negs	r0, r0
    }
 80057e4:	bd10      	pop	{r4, pc}
            return ((i * 2 + scale) / scale) / 2;
 80057e6:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80057ea:	fb90 f0f3 	sdiv	r0, r0, r3
 80057ee:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80057f2:	1040      	asrs	r0, r0, #1
 80057f4:	e7f6      	b.n	80057e4 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x28>

080057f6 <_ZNK8touchgfx16DynamicDataGraph20getXAxisScaleAsFloatEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsFloat()", virtual float getXAxisScaleAsFloat() const)
 80057f6:	b508      	push	{r3, lr}
    {
        return getXAxisFactorAsFloat();
 80057f8:	6803      	ldr	r3, [r0, #0]
 80057fa:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 80057fe:	4798      	blx	r3
    }
 8005800:	bd08      	pop	{r3, pc}

08005802 <_ZNK8touchgfx16DynamicDataGraph21getXAxisFactorAsFloatEv>:

    /// @endcond

    /** @copydoc getXAxisFactorAsInt() */
    virtual float getXAxisFactorAsFloat() const
 8005802:	b510      	push	{r4, lr}
 8005804:	4604      	mov	r4, r0
    {
        return scaled2floatX(getXAxisFactorScaled());
 8005806:	6803      	ldr	r3, [r0, #0]
 8005808:	f8d3 315c 	ldr.w	r3, [r3, #348]	@ 0x15c
 800580c:	4798      	blx	r3
 800580e:	ee07 0a90 	vmov	s15, r0
        return scaled2float(i, xScale);
 8005812:	ed94 0a0c 	vldr	s0, [r4, #48]	@ 0x30
        return (float)i / (float)scale;
 8005816:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800581a:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
    }
 800581e:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8005822:	bd10      	pop	{r4, pc}

08005824 <_ZNK8touchgfx16DynamicDataGraph20getXAxisFactorScaledEv>:
     * @see getXAxisFactorAsInt, getXAxisFactorAsFloat, setXAxisFactor
     */
    virtual int getXAxisFactorScaled() const
    {
        return xAxisFactor;
    }
 8005824:	f8d0 013c 	ldr.w	r0, [r0, #316]	@ 0x13c
 8005828:	4770      	bx	lr

0800582a <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi>:
     * Set x coordinate axis offset value. This is the real x value of the first data point
     * added to the graph (i.e. the data point at index 0).
     *
     * @param  offset The x axis offset.
     */
    virtual void setXAxisOffset(int offset)
 800582a:	b508      	push	{r3, lr}
        return int2scaled(i, xScale);
 800582c:	6b02      	ldr	r2, [r0, #48]	@ 0x30
    {
        setXAxisOffsetScaled(int2scaledX(offset));
 800582e:	6803      	ldr	r3, [r0, #0]
 8005830:	f8d3 3168 	ldr.w	r3, [r3, #360]	@ 0x168
 8005834:	fb02 f101 	mul.w	r1, r2, r1
 8005838:	4798      	blx	r3
    }
 800583a:	bd08      	pop	{r3, pc}

0800583c <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf>:

    /** @copydoc setXAxisOffset(int) */
    virtual void setXAxisOffset(float offset)
 800583c:	b508      	push	{r3, lr}
    {
        setXAxisOffsetScaled(float2scaledX(offset));
 800583e:	6803      	ldr	r3, [r0, #0]
 8005840:	f8d3 3168 	ldr.w	r3, [r3, #360]	@ 0x168
        const float fs = f * (float)scale;
 8005844:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
 8005848:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800584c:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 8005850:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8005854:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005858:	da13      	bge.n	8005882 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x46>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800585a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800585e:	ee17 2a90 	vmov	r2, s15
 8005862:	1e51      	subs	r1, r2, #1
 8005864:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005868:	ee30 0a67 	vsub.f32	s0, s0, s15
 800586c:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 8005870:	ee30 0a27 	vadd.f32	s0, s0, s15
 8005874:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8005878:	ee10 2a10 	vmov	r2, s0
 800587c:	4411      	add	r1, r2
        setXAxisOffsetScaled(float2scaledX(offset));
 800587e:	4798      	blx	r3
    }
 8005880:	bd08      	pop	{r3, pc}
            return (int)(fs + 0.5f);
 8005882:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8005886:	ee30 0a27 	vadd.f32	s0, s0, s15
 800588a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800588e:	ee17 1a90 	vmov	r1, s15
 8005892:	e7f4      	b.n	800587e <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x42>

08005894 <_ZN8touchgfx16DynamicDataGraph20setXAxisOffsetScaledEi>:
     *
     * @see setXAxisOffset, getXAxisOffsetScaled
     */
    virtual void setXAxisOffsetScaled(int offset)
    {
        xAxisOffset = offset;
 8005894:	f8c0 1140 	str.w	r1, [r0, #320]	@ 0x140
    }
 8005898:	4770      	bx	lr

0800589a <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv>:
     * Get x coordinate axis offset value. This is the real x value of the first data point
     * added to the graph (i.e. the data point at index 0).
     *
     * @return The x axis offset.
     */
    virtual int getXAxisOffsetAsInt() const
 800589a:	b510      	push	{r4, lr}
 800589c:	4604      	mov	r4, r0
    {
        return scaled2intX(getXAxisOffsetScaled());
 800589e:	6803      	ldr	r3, [r0, #0]
 80058a0:	f8d3 3174 	ldr.w	r3, [r3, #372]	@ 0x174
 80058a4:	4798      	blx	r3
        return scaled2int(i, xScale);
 80058a6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
        if (i >= 0)
 80058a8:	2800      	cmp	r0, #0
 80058aa:	da0b      	bge.n	80058c4 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x2a>
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80058ac:	ebc0 70c0 	rsb	r0, r0, r0, lsl #31
 80058b0:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80058b4:	3801      	subs	r0, #1
 80058b6:	fb90 f0f3 	sdiv	r0, r0, r3
 80058ba:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80058be:	1040      	asrs	r0, r0, #1
 80058c0:	4240      	negs	r0, r0
    }
 80058c2:	bd10      	pop	{r4, pc}
            return ((i * 2 + scale) / scale) / 2;
 80058c4:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80058c8:	fb90 f0f3 	sdiv	r0, r0, r3
 80058cc:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80058d0:	1040      	asrs	r0, r0, #1
 80058d2:	e7f6      	b.n	80058c2 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x28>

080058d4 <_ZNK8touchgfx16DynamicDataGraph21getXAxisOffsetAsFloatEv>:

    /** @copydoc getXAxisOffsetAsInt() */
    virtual float getXAxisOffsetAsFloat() const
 80058d4:	b510      	push	{r4, lr}
 80058d6:	4604      	mov	r4, r0
    {
        return scaled2floatX(getXAxisOffsetScaled());
 80058d8:	6803      	ldr	r3, [r0, #0]
 80058da:	f8d3 3174 	ldr.w	r3, [r3, #372]	@ 0x174
 80058de:	4798      	blx	r3
 80058e0:	ee07 0a90 	vmov	s15, r0
        return scaled2float(i, xScale);
 80058e4:	ed94 0a0c 	vldr	s0, [r4, #48]	@ 0x30
        return (float)i / (float)scale;
 80058e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80058ec:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
    }
 80058f0:	ee87 0a80 	vdiv.f32	s0, s15, s0
 80058f4:	bd10      	pop	{r4, pc}

080058f6 <_ZNK8touchgfx16DynamicDataGraph20getXAxisOffsetScaledEv>:
     * @see getXAxisOffsetAsInt, getXAxisOffsetAsFloat, setXAxisOffsetScaled, setXAxisOffset
     */
    virtual int getXAxisOffsetScaled() const
    {
        return xAxisOffset;
    }
 80058f6:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 80058fa:	4770      	bx	lr

080058fc <_ZNK8touchgfx16DynamicDataGraph9dataIndexEs>:
     * @return The index in the yValues array.
     */
    virtual int16_t dataIndex(int16_t screenIndex) const
    {
        return screenIndex;
    }
 80058fc:	4608      	mov	r0, r1
 80058fe:	4770      	bx	lr

08005900 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii>:
    virtual int32_t indexToGlobalIndex(int16_t index) const
    {
        return (int32_t)index;
    }

    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
 8005900:	b510      	push	{r4, lr}
 8005902:	4604      	mov	r4, r0
    {
        // Value is also index for these types of graphs.
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8005904:	6803      	ldr	r3, [r0, #0]
 8005906:	f8d3 3184 	ldr.w	r3, [r3, #388]	@ 0x184
        return scaled2int(i, xScale);
 800590a:	6b02      	ldr	r2, [r0, #48]	@ 0x30
        if (i >= 0)
 800590c:	2900      	cmp	r1, #0
 800590e:	da14      	bge.n	800593a <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x3a>
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8005910:	ebc1 71c1 	rsb	r1, r1, r1, lsl #31
 8005914:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8005918:	3901      	subs	r1, #1
 800591a:	fb91 f1f2 	sdiv	r1, r1, r2
 800591e:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8005922:	1049      	asrs	r1, r1, #1
 8005924:	4249      	negs	r1, r1
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8005926:	b209      	sxth	r1, r1
 8005928:	4620      	mov	r0, r4
 800592a:	4798      	blx	r3
 800592c:	f8d4 213c 	ldr.w	r2, [r4, #316]	@ 0x13c
 8005930:	f8d4 3140 	ldr.w	r3, [r4, #320]	@ 0x140
    }
 8005934:	fb02 3000 	mla	r0, r2, r0, r3
 8005938:	bd10      	pop	{r4, pc}
            return ((i * 2 + scale) / scale) / 2;
 800593a:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 800593e:	fb91 f1f2 	sdiv	r1, r1, r2
 8005942:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8005946:	1049      	asrs	r1, r1, #1
 8005948:	e7ed      	b.n	8005926 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x26>

0800594a <_ZNK8touchgfx16DynamicDataGraph9getScaleXEv>:
    virtual void setScaleX(int scale, bool updateData = false);

    virtual int getScaleX() const
    {
        return AbstractDataGraph::getScaleX();
    }
 800594a:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 800594c:	4770      	bx	lr

0800594e <_ZNK8touchgfx16DynamicDataGraph9getScaleYEv>:
    virtual void setScaleY(int scale, bool updateData = false);

    virtual int getScaleY() const
    {
        return AbstractDataGraph::getScaleY();
    }
 800594e:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 8005950:	4770      	bx	lr

08005952 <_ZN8touchgfx16DynamicDataGraph19setXAxisScaleScaledEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactorScaled()", virtual void setXAxisScaleScaled(int scale))
 8005952:	b508      	push	{r3, lr}
    {
        setXAxisFactorScaled(scale);
 8005954:	6803      	ldr	r3, [r0, #0]
 8005956:	f8d3 3148 	ldr.w	r3, [r3, #328]	@ 0x148
 800595a:	4798      	blx	r3
    }
 800595c:	bd08      	pop	{r3, pc}

0800595e <_ZNK8touchgfx16DynamicDataGraph19getXAxisScaleScaledEv>:

    /// @endcond

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorScaled()", virtual int getXAxisScaleScaled() const)
 800595e:	b508      	push	{r3, lr}
    {
        return getXAxisFactorScaled();
 8005960:	6803      	ldr	r3, [r0, #0]
 8005962:	f8d3 315c 	ldr.w	r3, [r3, #348]	@ 0x15c
 8005966:	4798      	blx	r3
    }
 8005968:	bd08      	pop	{r3, pc}

0800596a <_ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es>:

    /// @endcond

    virtual CWRUtil::Q5 indexToScreenXQ5(int16_t index) const
 800596a:	b508      	push	{r3, lr}
        return int2scaled(i, xScale);
 800596c:	6b02      	ldr	r2, [r0, #48]	@ 0x30
    {
        return valueToScreenXQ5(int2scaledX(index));
 800596e:	6803      	ldr	r3, [r0, #0]
 8005970:	f8d3 3114 	ldr.w	r3, [r3, #276]	@ 0x114
 8005974:	fb02 f101 	mul.w	r1, r2, r1
 8005978:	4798      	blx	r3
    }
 800597a:	bd08      	pop	{r3, pc}

0800597c <_ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es>:

    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 800597c:	b570      	push	{r4, r5, r6, lr}
 800597e:	4604      	mov	r4, r0
    {
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8005980:	6803      	ldr	r3, [r0, #0]
 8005982:	f8d3 5118 	ldr.w	r5, [r3, #280]	@ 0x118
 8005986:	f8d0 6144 	ldr.w	r6, [r0, #324]	@ 0x144
 800598a:	f8d3 3180 	ldr.w	r3, [r3, #384]	@ 0x180
 800598e:	4798      	blx	r3
 8005990:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 8005994:	4620      	mov	r0, r4
 8005996:	47a8      	blx	r5
    }
 8005998:	bd70      	pop	{r4, r5, r6, pc}

0800599a <_ZNK8touchgfx21GraphWrapAndClearData18indexToGlobalIndexEs>:

    virtual void clear();

    virtual int32_t indexToGlobalIndex(int16_t index) const
    {
        return (this->dataCounter - this->usedCapacity) + index;
 800599a:	f8d0 3148 	ldr.w	r3, [r0, #328]	@ 0x148
 800599e:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	@ 0x11e
 80059a2:	1a9b      	subs	r3, r3, r2
    }
 80059a4:	1858      	adds	r0, r3, r1
 80059a6:	4770      	bx	lr

080059a8 <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>:
     *
     * @see getColor
     */
    virtual void setColor(colortype newColor)
    {
        color = newColor;
 80059a8:	62c1      	str	r1, [r0, #44]	@ 0x2c
    }
 80059aa:	4770      	bx	lr

080059ac <_ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv>:
     * @see setColor
     */
    virtual colortype getColor() const
    {
        return color;
    }
 80059ac:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 80059ae:	4770      	bx	lr

080059b0 <_ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE>:

    virtual bool drawCanvasWidget(const Rect&) const
    {
        return true;
    }
 80059b0:	2001      	movs	r0, #1
 80059b2:	4770      	bx	lr

080059b4 <_ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE>:
    void normalizeRect(Rect& r) const;

private:
    virtual void setPainter(AbstractPainter& /*painter*/)
    {
    }
 80059b4:	4770      	bx	lr

080059b6 <_ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs>:
        return lineWidth;
    }

    virtual void invalidateGraphPointAt(int16_t)
    {
    }
 80059b6:	4770      	bx	lr

080059b8 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
     *
     * @return The correctly scaled major interval.
     */
    virtual int getCorrectlyScaledMajorInterval(const AbstractDataGraph* graph) const
    {
        return majorGrid == 0 ? 0 : majorGrid->getCorrectlyScaledGridInterval(graph);
 80059b8:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 80059ba:	b128      	cbz	r0, 80059c8 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0x10>
    virtual int getCorrectlyScaledMajorInterval(const AbstractDataGraph* graph) const
 80059bc:	b508      	push	{r3, lr}
        return majorGrid == 0 ? 0 : majorGrid->getCorrectlyScaledGridInterval(graph);
 80059be:	6803      	ldr	r3, [r0, #0]
 80059c0:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80059c4:	4798      	blx	r3
    }
 80059c6:	bd08      	pop	{r3, pc}
        return majorGrid == 0 ? 0 : majorGrid->getCorrectlyScaledGridInterval(graph);
 80059c8:	2000      	movs	r0, #0
    }
 80059ca:	4770      	bx	lr

080059cc <_ZNK8touchgfx17GraphElementGridX13enclosingAreaEPKNS_17AbstractDataGraphE>:
    {
        return convertToGraphScaleX(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 80059cc:	b500      	push	{lr}
        return topPadding;
 80059ce:	f9b2 c114 	ldrsh.w	ip, [r2, #276]	@ 0x114
        return rect.width;
 80059d2:	f9b2 e040 	ldrsh.w	lr, [r2, #64]	@ 0x40
        return rect.height;
 80059d6:	f9b2 1042 	ldrsh.w	r1, [r2, #66]	@ 0x42
        return graphArea.getHeight() - (topPadding + bottomPadding);
 80059da:	b289      	uxth	r1, r1
 80059dc:	f8b2 211a 	ldrh.w	r2, [r2, #282]	@ 0x11a
 80059e0:	fa12 f28c 	uxtah	r2, r2, ip
 80059e4:	b292      	uxth	r2, r2
 80059e6:	1a8a      	subs	r2, r1, r2
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80059e8:	2100      	movs	r1, #0
 80059ea:	8001      	strh	r1, [r0, #0]
 80059ec:	f8a0 c002 	strh.w	ip, [r0, #2]
 80059f0:	f8a0 e004 	strh.w	lr, [r0, #4]
 80059f4:	80c2      	strh	r2, [r0, #6]
    {
        return Rect(0, graph->getGraphAreaPaddingTop(), graph->getGraphAreaWidthIncludingPadding(), graph->getGraphAreaHeight());
    }
 80059f6:	f85d fb04 	ldr.w	pc, [sp], #4

080059fa <_ZNK8touchgfx17GraphElementGridX8lineRectEssss>:
 80059fa:	f9bd c000 	ldrsh.w	ip, [sp]
 80059fe:	f8a0 c000 	strh.w	ip, [r0]
 8005a02:	8042      	strh	r2, [r0, #2]
 8005a04:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8005a08:	8082      	strh	r2, [r0, #4]
 8005a0a:	80c3      	strh	r3, [r0, #6]

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
    {
        return Rect(pos, start, width, length);
    }
 8005a0c:	4770      	bx	lr

08005a0e <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8005a0e:	b508      	push	{r3, lr}
 8005a10:	4608      	mov	r0, r1
    {
        return graph->getGraphRangeXMinScaled();
 8005a12:	680b      	ldr	r3, [r1, #0]
 8005a14:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 8005a18:	4798      	blx	r3
    }
 8005a1a:	bd08      	pop	{r3, pc}

08005a1c <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8005a1c:	b508      	push	{r3, lr}
 8005a1e:	4608      	mov	r0, r1
    {
        return graph->getGraphRangeXMaxScaled();
 8005a20:	680b      	ldr	r3, [r1, #0]
 8005a22:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8005a26:	4798      	blx	r3
    }
 8005a28:	bd08      	pop	{r3, pc}

08005a2a <_ZNK8touchgfx17GraphElementGridX17getGraphAreaStartEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8005a2a:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	@ 0x114
 8005a2e:	4770      	bx	lr

08005a30 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8005a30:	f9b1 0042 	ldrsh.w	r0, [r1, #66]	@ 0x42
 8005a34:	b280      	uxth	r0, r0
 8005a36:	f8b1 3114 	ldrh.w	r3, [r1, #276]	@ 0x114
 8005a3a:	f8b1 211a 	ldrh.w	r2, [r1, #282]	@ 0x11a
 8005a3e:	4413      	add	r3, r2
 8005a40:	b29b      	uxth	r3, r3
 8005a42:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8005a44:	b200      	sxth	r0, r0
 8005a46:	4770      	bx	lr

08005a48 <_ZNK8touchgfx17GraphElementGridX20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8005a48:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	@ 0x116
 8005a4c:	4770      	bx	lr

08005a4e <_ZNK8touchgfx17GraphElementGridX18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return rect.width;
 8005a4e:	f9b1 0040 	ldrsh.w	r0, [r1, #64]	@ 0x40
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8005a52:	b280      	uxth	r0, r0
 8005a54:	f8b1 3116 	ldrh.w	r3, [r1, #278]	@ 0x116
 8005a58:	f8b1 2118 	ldrh.w	r2, [r1, #280]	@ 0x118
 8005a5c:	4413      	add	r3, r2
 8005a5e:	b29b      	uxth	r3, r3
 8005a60:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8005a62:	b200      	sxth	r0, r0
 8005a64:	4770      	bx	lr

08005a66 <_ZNK8touchgfx17GraphElementGridX15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8005a66:	b508      	push	{r3, lr}
 8005a68:	4608      	mov	r0, r1
        return graph->valueToScreenXQ5(x);
 8005a6a:	680b      	ldr	r3, [r1, #0]
 8005a6c:	f8d3 3114 	ldr.w	r3, [r3, #276]	@ 0x114
 8005a70:	4611      	mov	r1, r2
 8005a72:	4798      	blx	r3
    {
        return valueToScreenXQ5(graph, value);
    }
 8005a74:	bd08      	pop	{r3, pc}

08005a76 <_ZNK8touchgfx17GraphElementGridY13enclosingAreaEPKNS_17AbstractDataGraphE>:
    {
        return convertToGraphScaleY(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8005a76:	b500      	push	{lr}
        return leftPadding;
 8005a78:	f9b2 e116 	ldrsh.w	lr, [r2, #278]	@ 0x116
 8005a7c:	f9b2 1040 	ldrsh.w	r1, [r2, #64]	@ 0x40
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8005a80:	b289      	uxth	r1, r1
 8005a82:	f8b2 c118 	ldrh.w	ip, [r2, #280]	@ 0x118
 8005a86:	fa1c fc8e 	uxtah	ip, ip, lr
 8005a8a:	fa1f fc8c 	uxth.w	ip, ip
 8005a8e:	eba1 010c 	sub.w	r1, r1, ip
        return rect.height;
 8005a92:	f9b2 2042 	ldrsh.w	r2, [r2, #66]	@ 0x42
 8005a96:	f8a0 e000 	strh.w	lr, [r0]
 8005a9a:	f04f 0c00 	mov.w	ip, #0
 8005a9e:	f8a0 c002 	strh.w	ip, [r0, #2]
 8005aa2:	8081      	strh	r1, [r0, #4]
 8005aa4:	80c2      	strh	r2, [r0, #6]
    {
        return Rect(graph->getGraphAreaPaddingLeft(), 0, graph->getGraphAreaWidth(), graph->getGraphAreaHeightIncludingPadding());
    }
 8005aa6:	f85d fb04 	ldr.w	pc, [sp], #4

08005aaa <_ZNK8touchgfx17GraphElementGridY8lineRectEssss>:
 8005aaa:	8002      	strh	r2, [r0, #0]
 8005aac:	f9bd 2000 	ldrsh.w	r2, [sp]
 8005ab0:	8042      	strh	r2, [r0, #2]
 8005ab2:	8083      	strh	r3, [r0, #4]
 8005ab4:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8005ab8:	80c3      	strh	r3, [r0, #6]

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
    {
        return Rect(start, pos, length, width);
    }
 8005aba:	4770      	bx	lr

08005abc <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8005abc:	b508      	push	{r3, lr}
 8005abe:	4608      	mov	r0, r1
    {
        return graph->getGraphRangeYMinScaled();
 8005ac0:	680b      	ldr	r3, [r1, #0]
 8005ac2:	f8d3 30ec 	ldr.w	r3, [r3, #236]	@ 0xec
 8005ac6:	4798      	blx	r3
    }
 8005ac8:	bd08      	pop	{r3, pc}

08005aca <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8005aca:	b508      	push	{r3, lr}
 8005acc:	4608      	mov	r0, r1
    {
        return graph->getGraphRangeYMaxScaled();
 8005ace:	680b      	ldr	r3, [r1, #0]
 8005ad0:	f8d3 30f8 	ldr.w	r3, [r3, #248]	@ 0xf8
 8005ad4:	4798      	blx	r3
    }
 8005ad6:	bd08      	pop	{r3, pc}

08005ad8 <_ZNK8touchgfx17GraphElementGridY17getGraphAreaStartEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8005ad8:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	@ 0x116
 8005adc:	4770      	bx	lr

08005ade <_ZNK8touchgfx17GraphElementGridY18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
        return rect.width;
 8005ade:	f9b1 0040 	ldrsh.w	r0, [r1, #64]	@ 0x40
 8005ae2:	b280      	uxth	r0, r0
 8005ae4:	f8b1 3116 	ldrh.w	r3, [r1, #278]	@ 0x116
 8005ae8:	f8b1 2118 	ldrh.w	r2, [r1, #280]	@ 0x118
 8005aec:	4413      	add	r3, r2
 8005aee:	b29b      	uxth	r3, r3
 8005af0:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8005af2:	b200      	sxth	r0, r0
 8005af4:	4770      	bx	lr

08005af6 <_ZNK8touchgfx17GraphElementGridY20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8005af6:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	@ 0x114
 8005afa:	4770      	bx	lr

08005afc <_ZNK8touchgfx17GraphElementGridY18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return rect.height;
 8005afc:	f9b1 0042 	ldrsh.w	r0, [r1, #66]	@ 0x42
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8005b00:	b280      	uxth	r0, r0
 8005b02:	f8b1 3114 	ldrh.w	r3, [r1, #276]	@ 0x114
 8005b06:	f8b1 211a 	ldrh.w	r2, [r1, #282]	@ 0x11a
 8005b0a:	4413      	add	r3, r2
 8005b0c:	b29b      	uxth	r3, r3
 8005b0e:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8005b10:	b200      	sxth	r0, r0
 8005b12:	4770      	bx	lr

08005b14 <_ZNK8touchgfx17GraphElementGridY15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8005b14:	b508      	push	{r3, lr}
 8005b16:	4608      	mov	r0, r1
        return graph->valueToScreenYQ5(y);
 8005b18:	680b      	ldr	r3, [r1, #0]
 8005b1a:	f8d3 3118 	ldr.w	r3, [r3, #280]	@ 0x118
 8005b1e:	4611      	mov	r1, r2
 8005b20:	4798      	blx	r3
    {
        return valueToScreenYQ5(graph, value);
    }
 8005b22:	bd08      	pop	{r3, pc}

08005b24 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>:
class View : public Screen
 8005b24:	4a04      	ldr	r2, [pc, #16]	@ (8005b38 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev+0x14>)
 8005b26:	6002      	str	r2, [r0, #0]
    {
 8005b28:	4a04      	ldr	r2, [pc, #16]	@ (8005b3c <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev+0x18>)
 8005b2a:	6002      	str	r2, [r0, #0]
class Container : public Drawable
 8005b2c:	4a04      	ldr	r2, [pc, #16]	@ (8005b40 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev+0x1c>)
 8005b2e:	6042      	str	r2, [r0, #4]
    {
 8005b30:	4a04      	ldr	r2, [pc, #16]	@ (8005b44 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev+0x20>)
 8005b32:	6042      	str	r2, [r0, #4]
 8005b34:	4770      	bx	lr
 8005b36:	bf00      	nop
 8005b38:	08031300 	.word	0x08031300
 8005b3c:	0803322c 	.word	0x0803322c
 8005b40:	080321ec 	.word	0x080321ec
 8005b44:	0803310c 	.word	0x0803310c

08005b48 <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 8005b48:	4770      	bx	lr
	...

08005b4c <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005b4c:	4a02      	ldr	r2, [pc, #8]	@ (8005b58 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev+0xc>)
 8005b4e:	6002      	str	r2, [r0, #0]
    }
 8005b50:	4a02      	ldr	r2, [pc, #8]	@ (8005b5c <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev+0x10>)
 8005b52:	6002      	str	r2, [r0, #0]
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005b54:	4770      	bx	lr
 8005b56:	bf00      	nop
 8005b58:	080314cc 	.word	0x080314cc
 8005b5c:	080312e8 	.word	0x080312e8

08005b60 <_ZN8touchgfx17GraphWrapAndClearILs120EED1Ev>:
 * be created as new values are added.
 *
 * @tparam CAPACITY The maximum number of data points on the graph.
 */
template <int16_t CAPACITY>
class GraphWrapAndClear : public GraphWrapAndClearData
 8005b60:	4a0e      	ldr	r2, [pc, #56]	@ (8005b9c <_ZN8touchgfx17GraphWrapAndClearILs120EED1Ev+0x3c>)
 8005b62:	6002      	str	r2, [r0, #0]
class GraphWrapAndClearData : public DynamicDataGraph
 8005b64:	4a0e      	ldr	r2, [pc, #56]	@ (8005ba0 <_ZN8touchgfx17GraphWrapAndClearILs120EED1Ev+0x40>)
 8005b66:	6002      	str	r2, [r0, #0]
class DynamicDataGraph : public AbstractDataGraph
 8005b68:	4a0e      	ldr	r2, [pc, #56]	@ (8005ba4 <_ZN8touchgfx17GraphWrapAndClearILs120EED1Ev+0x44>)
 8005b6a:	6002      	str	r2, [r0, #0]
class AbstractDataGraph : public Container
 8005b6c:	4a0e      	ldr	r2, [pc, #56]	@ (8005ba8 <_ZN8touchgfx17GraphWrapAndClearILs120EED1Ev+0x48>)
 8005b6e:	6002      	str	r2, [r0, #0]
 8005b70:	490e      	ldr	r1, [pc, #56]	@ (8005bac <_ZN8touchgfx17GraphWrapAndClearILs120EED1Ev+0x4c>)
 8005b72:	f8c0 10e8 	str.w	r1, [r0, #232]	@ 0xe8
 8005b76:	4a0e      	ldr	r2, [pc, #56]	@ (8005bb0 <_ZN8touchgfx17GraphWrapAndClearILs120EED1Ev+0x50>)
 8005b78:	f8c0 20e8 	str.w	r2, [r0, #232]	@ 0xe8
 8005b7c:	f8c0 10bc 	str.w	r1, [r0, #188]	@ 0xbc
 8005b80:	f8c0 20bc 	str.w	r2, [r0, #188]	@ 0xbc
 8005b84:	f8c0 1090 	str.w	r1, [r0, #144]	@ 0x90
 8005b88:	f8c0 2090 	str.w	r2, [r0, #144]	@ 0x90
 8005b8c:	6641      	str	r1, [r0, #100]	@ 0x64
 8005b8e:	6642      	str	r2, [r0, #100]	@ 0x64
 8005b90:	6381      	str	r1, [r0, #56]	@ 0x38
 8005b92:	6382      	str	r2, [r0, #56]	@ 0x38
 8005b94:	6001      	str	r1, [r0, #0]
 8005b96:	6002      	str	r2, [r0, #0]
class GraphWrapAndClear : public GraphWrapAndClearData
 8005b98:	4770      	bx	lr
 8005b9a:	bf00      	nop
 8005b9c:	08031334 	.word	0x08031334
 8005ba0:	08032af8 	.word	0x08032af8
 8005ba4:	08032518 	.word	0x08032518
 8005ba8:	080326b0 	.word	0x080326b0
 8005bac:	080321ec 	.word	0x080321ec
 8005bb0:	0803310c 	.word	0x0803310c

08005bb4 <_ZN8touchgfx17GraphElementGridYD1Ev>:
class GraphElementGridY : public GraphElementGridBase
 8005bb4:	4a07      	ldr	r2, [pc, #28]	@ (8005bd4 <_ZN8touchgfx17GraphElementGridYD1Ev+0x20>)
 8005bb6:	6002      	str	r2, [r0, #0]
class GraphElementGridBase : public AbstractGraphElementNoCWR
 8005bb8:	4a07      	ldr	r2, [pc, #28]	@ (8005bd8 <_ZN8touchgfx17GraphElementGridYD1Ev+0x24>)
 8005bba:	6002      	str	r2, [r0, #0]
class AbstractGraphElementNoCWR : public AbstractGraphElement
 8005bbc:	4a07      	ldr	r2, [pc, #28]	@ (8005bdc <_ZN8touchgfx17GraphElementGridYD1Ev+0x28>)
 8005bbe:	6002      	str	r2, [r0, #0]
class AbstractGraphElement : public CanvasWidget
 8005bc0:	4a07      	ldr	r2, [pc, #28]	@ (8005be0 <_ZN8touchgfx17GraphElementGridYD1Ev+0x2c>)
 8005bc2:	6002      	str	r2, [r0, #0]
 8005bc4:	4a07      	ldr	r2, [pc, #28]	@ (8005be4 <_ZN8touchgfx17GraphElementGridYD1Ev+0x30>)
 8005bc6:	6002      	str	r2, [r0, #0]
 8005bc8:	4a07      	ldr	r2, [pc, #28]	@ (8005be8 <_ZN8touchgfx17GraphElementGridYD1Ev+0x34>)
 8005bca:	6002      	str	r2, [r0, #0]
 8005bcc:	4a07      	ldr	r2, [pc, #28]	@ (8005bec <_ZN8touchgfx17GraphElementGridYD1Ev+0x38>)
 8005bce:	6002      	str	r2, [r0, #0]
class GraphElementGridY : public GraphElementGridBase
 8005bd0:	4770      	bx	lr
 8005bd2:	bf00      	nop
 8005bd4:	080311a8 	.word	0x080311a8
 8005bd8:	0803285c 	.word	0x0803285c
 8005bdc:	08031068 	.word	0x08031068
 8005be0:	08030fec 	.word	0x08030fec
 8005be4:	080324a0 	.word	0x080324a0
 8005be8:	080302c8 	.word	0x080302c8
 8005bec:	0803310c 	.word	0x0803310c

08005bf0 <_ZN8touchgfx17GraphElementGridXD1Ev>:
class GraphElementGridX : public GraphElementGridBase
 8005bf0:	4a07      	ldr	r2, [pc, #28]	@ (8005c10 <_ZN8touchgfx17GraphElementGridXD1Ev+0x20>)
 8005bf2:	6002      	str	r2, [r0, #0]
class GraphElementGridBase : public AbstractGraphElementNoCWR
 8005bf4:	4a07      	ldr	r2, [pc, #28]	@ (8005c14 <_ZN8touchgfx17GraphElementGridXD1Ev+0x24>)
 8005bf6:	6002      	str	r2, [r0, #0]
class AbstractGraphElementNoCWR : public AbstractGraphElement
 8005bf8:	4a07      	ldr	r2, [pc, #28]	@ (8005c18 <_ZN8touchgfx17GraphElementGridXD1Ev+0x28>)
 8005bfa:	6002      	str	r2, [r0, #0]
class AbstractGraphElement : public CanvasWidget
 8005bfc:	4a07      	ldr	r2, [pc, #28]	@ (8005c1c <_ZN8touchgfx17GraphElementGridXD1Ev+0x2c>)
 8005bfe:	6002      	str	r2, [r0, #0]
 8005c00:	4a07      	ldr	r2, [pc, #28]	@ (8005c20 <_ZN8touchgfx17GraphElementGridXD1Ev+0x30>)
 8005c02:	6002      	str	r2, [r0, #0]
 8005c04:	4a07      	ldr	r2, [pc, #28]	@ (8005c24 <_ZN8touchgfx17GraphElementGridXD1Ev+0x34>)
 8005c06:	6002      	str	r2, [r0, #0]
 8005c08:	4a07      	ldr	r2, [pc, #28]	@ (8005c28 <_ZN8touchgfx17GraphElementGridXD1Ev+0x38>)
 8005c0a:	6002      	str	r2, [r0, #0]
class GraphElementGridX : public GraphElementGridBase
 8005c0c:	4770      	bx	lr
 8005c0e:	bf00      	nop
 8005c10:	080310f0 	.word	0x080310f0
 8005c14:	0803285c 	.word	0x0803285c
 8005c18:	08031068 	.word	0x08031068
 8005c1c:	08030fec 	.word	0x08030fec
 8005c20:	080324a0 	.word	0x080324a0
 8005c24:	080302c8 	.word	0x080302c8
 8005c28:	0803310c 	.word	0x0803310c

08005c2c <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005c2c:	b510      	push	{r4, lr}
 8005c2e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005c30:	6844      	ldr	r4, [r0, #4]
 8005c32:	68c2      	ldr	r2, [r0, #12]
 8005c34:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005c38:	f012 0f01 	tst.w	r2, #1
 8005c3c:	d102      	bne.n	8005c44 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x18>
 8005c3e:	689b      	ldr	r3, [r3, #8]
 8005c40:	4798      	blx	r3
    }
 8005c42:	bd10      	pop	{r4, pc}
 8005c44:	ea4f 0c62 	mov.w	ip, r2, asr #1
        (pobject->*pmemfun)(t1);
 8005c48:	f854 200c 	ldr.w	r2, [r4, ip]
 8005c4c:	689b      	ldr	r3, [r3, #8]
 8005c4e:	58d3      	ldr	r3, [r2, r3]
 8005c50:	e7f6      	b.n	8005c40 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x14>

08005c52 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005c52:	6843      	ldr	r3, [r0, #4]
 8005c54:	b14b      	cbz	r3, 8005c6a <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x18>
 8005c56:	6883      	ldr	r3, [r0, #8]
 8005c58:	b10b      	cbz	r3, 8005c5e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
 8005c5a:	2001      	movs	r0, #1
 8005c5c:	4770      	bx	lr
 8005c5e:	68c3      	ldr	r3, [r0, #12]
 8005c60:	f013 0f01 	tst.w	r3, #1
 8005c64:	d003      	beq.n	8005c6e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x1c>
 8005c66:	2001      	movs	r0, #1
 8005c68:	4770      	bx	lr
 8005c6a:	2000      	movs	r0, #0
 8005c6c:	4770      	bx	lr
 8005c6e:	2000      	movs	r0, #0
    }
 8005c70:	4770      	bx	lr
	...

08005c74 <_ZN8touchgfx4ViewI16Screen1PresenterED0Ev>:
 8005c74:	b510      	push	{r4, lr}
 8005c76:	4604      	mov	r4, r0
 8005c78:	4b06      	ldr	r3, [pc, #24]	@ (8005c94 <_ZN8touchgfx4ViewI16Screen1PresenterED0Ev+0x20>)
 8005c7a:	6003      	str	r3, [r0, #0]
 8005c7c:	4b06      	ldr	r3, [pc, #24]	@ (8005c98 <_ZN8touchgfx4ViewI16Screen1PresenterED0Ev+0x24>)
 8005c7e:	6003      	str	r3, [r0, #0]
 8005c80:	4b06      	ldr	r3, [pc, #24]	@ (8005c9c <_ZN8touchgfx4ViewI16Screen1PresenterED0Ev+0x28>)
 8005c82:	6043      	str	r3, [r0, #4]
 8005c84:	4b06      	ldr	r3, [pc, #24]	@ (8005ca0 <_ZN8touchgfx4ViewI16Screen1PresenterED0Ev+0x2c>)
 8005c86:	6043      	str	r3, [r0, #4]
 8005c88:	2140      	movs	r1, #64	@ 0x40
 8005c8a:	f027 fe10 	bl	802d8ae <_ZdlPvj>
 8005c8e:	4620      	mov	r0, r4
 8005c90:	bd10      	pop	{r4, pc}
 8005c92:	bf00      	nop
 8005c94:	08031300 	.word	0x08031300
 8005c98:	0803322c 	.word	0x0803322c
 8005c9c:	080321ec 	.word	0x080321ec
 8005ca0:	0803310c 	.word	0x0803310c

08005ca4 <_ZN8touchgfx17GraphElementGridXD0Ev>:
 8005ca4:	b510      	push	{r4, lr}
 8005ca6:	4604      	mov	r4, r0
 8005ca8:	4b09      	ldr	r3, [pc, #36]	@ (8005cd0 <_ZN8touchgfx17GraphElementGridXD0Ev+0x2c>)
 8005caa:	6003      	str	r3, [r0, #0]
class GraphElementGridBase : public AbstractGraphElementNoCWR
 8005cac:	4b09      	ldr	r3, [pc, #36]	@ (8005cd4 <_ZN8touchgfx17GraphElementGridXD0Ev+0x30>)
 8005cae:	6003      	str	r3, [r0, #0]
class AbstractGraphElementNoCWR : public AbstractGraphElement
 8005cb0:	4b09      	ldr	r3, [pc, #36]	@ (8005cd8 <_ZN8touchgfx17GraphElementGridXD0Ev+0x34>)
 8005cb2:	6003      	str	r3, [r0, #0]
class AbstractGraphElement : public CanvasWidget
 8005cb4:	4b09      	ldr	r3, [pc, #36]	@ (8005cdc <_ZN8touchgfx17GraphElementGridXD0Ev+0x38>)
 8005cb6:	6003      	str	r3, [r0, #0]
 8005cb8:	4b09      	ldr	r3, [pc, #36]	@ (8005ce0 <_ZN8touchgfx17GraphElementGridXD0Ev+0x3c>)
 8005cba:	6003      	str	r3, [r0, #0]
 8005cbc:	4b09      	ldr	r3, [pc, #36]	@ (8005ce4 <_ZN8touchgfx17GraphElementGridXD0Ev+0x40>)
 8005cbe:	6003      	str	r3, [r0, #0]
 8005cc0:	4b09      	ldr	r3, [pc, #36]	@ (8005ce8 <_ZN8touchgfx17GraphElementGridXD0Ev+0x44>)
 8005cc2:	6003      	str	r3, [r0, #0]
class GraphElementGridX : public GraphElementGridBase
 8005cc4:	2140      	movs	r1, #64	@ 0x40
 8005cc6:	f027 fdf2 	bl	802d8ae <_ZdlPvj>
 8005cca:	4620      	mov	r0, r4
 8005ccc:	bd10      	pop	{r4, pc}
 8005cce:	bf00      	nop
 8005cd0:	080310f0 	.word	0x080310f0
 8005cd4:	0803285c 	.word	0x0803285c
 8005cd8:	08031068 	.word	0x08031068
 8005cdc:	08030fec 	.word	0x08030fec
 8005ce0:	080324a0 	.word	0x080324a0
 8005ce4:	080302c8 	.word	0x080302c8
 8005ce8:	0803310c 	.word	0x0803310c

08005cec <_ZN8touchgfx17GraphElementGridYD0Ev>:
class GraphElementGridY : public GraphElementGridBase
 8005cec:	b510      	push	{r4, lr}
 8005cee:	4604      	mov	r4, r0
 8005cf0:	4b09      	ldr	r3, [pc, #36]	@ (8005d18 <_ZN8touchgfx17GraphElementGridYD0Ev+0x2c>)
 8005cf2:	6003      	str	r3, [r0, #0]
class GraphElementGridBase : public AbstractGraphElementNoCWR
 8005cf4:	4b09      	ldr	r3, [pc, #36]	@ (8005d1c <_ZN8touchgfx17GraphElementGridYD0Ev+0x30>)
 8005cf6:	6003      	str	r3, [r0, #0]
class AbstractGraphElementNoCWR : public AbstractGraphElement
 8005cf8:	4b09      	ldr	r3, [pc, #36]	@ (8005d20 <_ZN8touchgfx17GraphElementGridYD0Ev+0x34>)
 8005cfa:	6003      	str	r3, [r0, #0]
class AbstractGraphElement : public CanvasWidget
 8005cfc:	4b09      	ldr	r3, [pc, #36]	@ (8005d24 <_ZN8touchgfx17GraphElementGridYD0Ev+0x38>)
 8005cfe:	6003      	str	r3, [r0, #0]
 8005d00:	4b09      	ldr	r3, [pc, #36]	@ (8005d28 <_ZN8touchgfx17GraphElementGridYD0Ev+0x3c>)
 8005d02:	6003      	str	r3, [r0, #0]
 8005d04:	4b09      	ldr	r3, [pc, #36]	@ (8005d2c <_ZN8touchgfx17GraphElementGridYD0Ev+0x40>)
 8005d06:	6003      	str	r3, [r0, #0]
 8005d08:	4b09      	ldr	r3, [pc, #36]	@ (8005d30 <_ZN8touchgfx17GraphElementGridYD0Ev+0x44>)
 8005d0a:	6003      	str	r3, [r0, #0]
class GraphElementGridY : public GraphElementGridBase
 8005d0c:	2140      	movs	r1, #64	@ 0x40
 8005d0e:	f027 fdce 	bl	802d8ae <_ZdlPvj>
 8005d12:	4620      	mov	r0, r4
 8005d14:	bd10      	pop	{r4, pc}
 8005d16:	bf00      	nop
 8005d18:	080311a8 	.word	0x080311a8
 8005d1c:	0803285c 	.word	0x0803285c
 8005d20:	08031068 	.word	0x08031068
 8005d24:	08030fec 	.word	0x08030fec
 8005d28:	080324a0 	.word	0x080324a0
 8005d2c:	080302c8 	.word	0x080302c8
 8005d30:	0803310c 	.word	0x0803310c

08005d34 <_ZN8touchgfx17GraphWrapAndClearILs120EED0Ev>:
 8005d34:	b510      	push	{r4, lr}
 8005d36:	4604      	mov	r4, r0
 8005d38:	4b10      	ldr	r3, [pc, #64]	@ (8005d7c <_ZN8touchgfx17GraphWrapAndClearILs120EED0Ev+0x48>)
 8005d3a:	6003      	str	r3, [r0, #0]
class GraphWrapAndClearData : public DynamicDataGraph
 8005d3c:	4b10      	ldr	r3, [pc, #64]	@ (8005d80 <_ZN8touchgfx17GraphWrapAndClearILs120EED0Ev+0x4c>)
 8005d3e:	6003      	str	r3, [r0, #0]
class DynamicDataGraph : public AbstractDataGraph
 8005d40:	4b10      	ldr	r3, [pc, #64]	@ (8005d84 <_ZN8touchgfx17GraphWrapAndClearILs120EED0Ev+0x50>)
 8005d42:	6003      	str	r3, [r0, #0]
class AbstractDataGraph : public Container
 8005d44:	4b10      	ldr	r3, [pc, #64]	@ (8005d88 <_ZN8touchgfx17GraphWrapAndClearILs120EED0Ev+0x54>)
 8005d46:	6003      	str	r3, [r0, #0]
 8005d48:	4a10      	ldr	r2, [pc, #64]	@ (8005d8c <_ZN8touchgfx17GraphWrapAndClearILs120EED0Ev+0x58>)
 8005d4a:	f8c0 20e8 	str.w	r2, [r0, #232]	@ 0xe8
 8005d4e:	4b10      	ldr	r3, [pc, #64]	@ (8005d90 <_ZN8touchgfx17GraphWrapAndClearILs120EED0Ev+0x5c>)
 8005d50:	f8c0 30e8 	str.w	r3, [r0, #232]	@ 0xe8
 8005d54:	f8c0 20bc 	str.w	r2, [r0, #188]	@ 0xbc
 8005d58:	f8c0 30bc 	str.w	r3, [r0, #188]	@ 0xbc
 8005d5c:	f8c0 2090 	str.w	r2, [r0, #144]	@ 0x90
 8005d60:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90
 8005d64:	6642      	str	r2, [r0, #100]	@ 0x64
 8005d66:	6643      	str	r3, [r0, #100]	@ 0x64
 8005d68:	6382      	str	r2, [r0, #56]	@ 0x38
 8005d6a:	6383      	str	r3, [r0, #56]	@ 0x38
 8005d6c:	6002      	str	r2, [r0, #0]
 8005d6e:	6003      	str	r3, [r0, #0]
class GraphWrapAndClear : public GraphWrapAndClearData
 8005d70:	f44f 714b 	mov.w	r1, #812	@ 0x32c
 8005d74:	f027 fd9b 	bl	802d8ae <_ZdlPvj>
 8005d78:	4620      	mov	r0, r4
 8005d7a:	bd10      	pop	{r4, pc}
 8005d7c:	08031334 	.word	0x08031334
 8005d80:	08032af8 	.word	0x08032af8
 8005d84:	08032518 	.word	0x08032518
 8005d88:	080326b0 	.word	0x080326b0
 8005d8c:	080321ec 	.word	0x080321ec
 8005d90:	0803310c 	.word	0x0803310c

08005d94 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005d94:	b510      	push	{r4, lr}
 8005d96:	4604      	mov	r4, r0
 8005d98:	4b04      	ldr	r3, [pc, #16]	@ (8005dac <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev+0x18>)
 8005d9a:	6003      	str	r3, [r0, #0]
    }
 8005d9c:	4b04      	ldr	r3, [pc, #16]	@ (8005db0 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev+0x1c>)
 8005d9e:	6003      	str	r3, [r0, #0]
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005da0:	2110      	movs	r1, #16
 8005da2:	f027 fd84 	bl	802d8ae <_ZdlPvj>
 8005da6:	4620      	mov	r0, r4
 8005da8:	bd10      	pop	{r4, pc}
 8005daa:	bf00      	nop
 8005dac:	080314cc 	.word	0x080314cc
 8005db0:	080312e8 	.word	0x080312e8

08005db4 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs>:
    virtual int indexToDataPointYScaled(int16_t index) const
 8005db4:	b510      	push	{r4, lr}
        assert(index >= 0 && index < usedCapacity);
 8005db6:	2900      	cmp	r1, #0
 8005db8:	db0c      	blt.n	8005dd4 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x20>
 8005dba:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	@ 0x11e
 8005dbe:	428b      	cmp	r3, r1
 8005dc0:	dd08      	ble.n	8005dd4 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x20>
        return yValues[dataIndex(index)];
 8005dc2:	f8d0 4144 	ldr.w	r4, [r0, #324]	@ 0x144
 8005dc6:	6803      	ldr	r3, [r0, #0]
 8005dc8:	f8d3 3180 	ldr.w	r3, [r3, #384]	@ 0x180
 8005dcc:	4798      	blx	r3
    }
 8005dce:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 8005dd2:	bd10      	pop	{r4, pc}
        assert(index >= 0 && index < usedCapacity);
 8005dd4:	4b03      	ldr	r3, [pc, #12]	@ (8005de4 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x30>)
 8005dd6:	4a04      	ldr	r2, [pc, #16]	@ (8005de8 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x34>)
 8005dd8:	f240 6139 	movw	r1, #1593	@ 0x639
 8005ddc:	4803      	ldr	r0, [pc, #12]	@ (8005dec <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x38>)
 8005dde:	f028 fcad 	bl	802e73c <__assert_func>
 8005de2:	bf00      	nop
 8005de4:	08030df8 	.word	0x08030df8
 8005de8:	08030e1c 	.word	0x08030e1c
 8005dec:	08030e6c 	.word	0x08030e6c

08005df0 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs>:
    virtual int indexToDataPointXScaled(int16_t index) const
 8005df0:	b510      	push	{r4, lr}
        assert(index >= 0 && index < usedCapacity);
 8005df2:	2900      	cmp	r1, #0
 8005df4:	db0f      	blt.n	8005e16 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x26>
 8005df6:	4604      	mov	r4, r0
 8005df8:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	@ 0x11e
 8005dfc:	428b      	cmp	r3, r1
 8005dfe:	dd0a      	ble.n	8005e16 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x26>
        return (indexToGlobalIndex(index) * xAxisFactor) + xAxisOffset;
 8005e00:	6803      	ldr	r3, [r0, #0]
 8005e02:	f8d3 3184 	ldr.w	r3, [r3, #388]	@ 0x184
 8005e06:	4798      	blx	r3
 8005e08:	f8d4 213c 	ldr.w	r2, [r4, #316]	@ 0x13c
 8005e0c:	f8d4 3140 	ldr.w	r3, [r4, #320]	@ 0x140
    }
 8005e10:	fb02 3000 	mla	r0, r2, r0, r3
 8005e14:	bd10      	pop	{r4, pc}
        assert(index >= 0 && index < usedCapacity);
 8005e16:	4b03      	ldr	r3, [pc, #12]	@ (8005e24 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x34>)
 8005e18:	4a03      	ldr	r2, [pc, #12]	@ (8005e28 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x38>)
 8005e1a:	f240 6133 	movw	r1, #1587	@ 0x633
 8005e1e:	4803      	ldr	r0, [pc, #12]	@ (8005e2c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x3c>)
 8005e20:	f028 fc8c 	bl	802e73c <__assert_func>
 8005e24:	08030df8 	.word	0x08030df8
 8005e28:	08030ecc 	.word	0x08030ecc
 8005e2c:	08030e6c 	.word	0x08030e6c

08005e30 <_ZNK8touchgfx17GraphElementGridX30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8005e30:	b538      	push	{r3, r4, r5, lr}
 8005e32:	4603      	mov	r3, r0
 8005e34:	4608      	mov	r0, r1
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8005e36:	6b5c      	ldr	r4, [r3, #52]	@ 0x34
 8005e38:	6b1d      	ldr	r5, [r3, #48]	@ 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8005e3a:	680b      	ldr	r3, [r1, #0]
 8005e3c:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8005e40:	4798      	blx	r3
 8005e42:	4602      	mov	r2, r0
 8005e44:	4629      	mov	r1, r5
 8005e46:	4620      	mov	r0, r4
 8005e48:	f010 f84e 	bl	8015ee8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
    }
 8005e4c:	bd38      	pop	{r3, r4, r5, pc}

08005e4e <_ZNK8touchgfx17GraphElementGridY30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8005e4e:	b538      	push	{r3, r4, r5, lr}
 8005e50:	4603      	mov	r3, r0
 8005e52:	4608      	mov	r0, r1
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8005e54:	6b5c      	ldr	r4, [r3, #52]	@ 0x34
 8005e56:	6b1d      	ldr	r5, [r3, #48]	@ 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8005e58:	680b      	ldr	r3, [r1, #0]
 8005e5a:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8005e5e:	4798      	blx	r3
 8005e60:	4602      	mov	r2, r0
 8005e62:	4629      	mov	r1, r5
 8005e64:	4620      	mov	r0, r4
 8005e66:	f010 f83f 	bl	8015ee8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
    }
 8005e6a:	bd38      	pop	{r3, r4, r5, pc}

08005e6c <_ZN15Screen1ViewBaseD1Ev>:
Screen1ViewBase::~Screen1ViewBase()
 8005e6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005e6e:	4604      	mov	r4, r0
 8005e70:	4b5b      	ldr	r3, [pc, #364]	@ (8005fe0 <_ZN15Screen1ViewBaseD1Ev+0x174>)
 8005e72:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005e74:	f013 f914 	bl	80190a0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8005e78:	f504 5340 	add.w	r3, r4, #12288	@ 0x3000
 8005e7c:	4a59      	ldr	r2, [pc, #356]	@ (8005fe4 <_ZN15Screen1ViewBaseD1Ev+0x178>)
 8005e7e:	f8c3 2448 	str.w	r2, [r3, #1096]	@ 0x448
    }
 8005e82:	4a59      	ldr	r2, [pc, #356]	@ (8005fe8 <_ZN15Screen1ViewBaseD1Ev+0x17c>)
 8005e84:	f8c3 2448 	str.w	r2, [r3, #1096]	@ 0x448
 * images can be reused across several buttons. The ButtonWithLabel will then allow a
 * text to be superimposed on top of the red button.
 *
 * @see Button
 */
class ButtonWithLabel : public Button
 8005e88:	4b58      	ldr	r3, [pc, #352]	@ (8005fec <_ZN15Screen1ViewBaseD1Ev+0x180>)
 8005e8a:	f8c4 3520 	str.w	r3, [r4, #1312]	@ 0x520
    {
 8005e8e:	4e58      	ldr	r6, [pc, #352]	@ (8005ff0 <_ZN15Screen1ViewBaseD1Ev+0x184>)
 8005e90:	f8c4 6554 	str.w	r6, [r4, #1364]	@ 0x554
{
/**
 * A button with two images. One image showing the unpressed button and one image showing the
 * pressed state.
 */
class Button : public AbstractButton
 8005e94:	4b57      	ldr	r3, [pc, #348]	@ (8005ff4 <_ZN15Screen1ViewBaseD1Ev+0x188>)
 8005e96:	f8c4 3520 	str.w	r3, [r4, #1312]	@ 0x520
/**
 * This class defines an abstract interface for button-like elements. A button is a clickable
 * element that has two states: pressed and released. A button also has an action that
 * is executed when the button goes from state pressed to state released.
 */
class AbstractButton : public Widget
 8005e9a:	4b57      	ldr	r3, [pc, #348]	@ (8005ff8 <_ZN15Screen1ViewBaseD1Ev+0x18c>)
 8005e9c:	f8c4 3520 	str.w	r3, [r4, #1312]	@ 0x520
 8005ea0:	4a56      	ldr	r2, [pc, #344]	@ (8005ffc <_ZN15Screen1ViewBaseD1Ev+0x190>)
 8005ea2:	f8c4 2520 	str.w	r2, [r4, #1312]	@ 0x520
 8005ea6:	4b56      	ldr	r3, [pc, #344]	@ (8006000 <_ZN15Screen1ViewBaseD1Ev+0x194>)
 8005ea8:	f8c4 3520 	str.w	r3, [r4, #1312]	@ 0x520
class PainterRGB565 : public AbstractPainterRGB565, public AbstractPainterColor
 8005eac:	4955      	ldr	r1, [pc, #340]	@ (8006004 <_ZN15Screen1ViewBaseD1Ev+0x198>)
 8005eae:	f8c4 150c 	str.w	r1, [r4, #1292]	@ 0x50c
 8005eb2:	3124      	adds	r1, #36	@ 0x24
 8005eb4:	f8c4 1514 	str.w	r1, [r4, #1300]	@ 0x514
    {
 8005eb8:	4953      	ldr	r1, [pc, #332]	@ (8006008 <_ZN15Screen1ViewBaseD1Ev+0x19c>)
 8005eba:	f8c4 1514 	str.w	r1, [r4, #1300]	@ 0x514
class AbstractPainterRGB565 : public AbstractPainter
 8005ebe:	4953      	ldr	r1, [pc, #332]	@ (800600c <_ZN15Screen1ViewBaseD1Ev+0x1a0>)
 8005ec0:	f8c4 150c 	str.w	r1, [r4, #1292]	@ 0x50c
    {
 8005ec4:	4952      	ldr	r1, [pc, #328]	@ (8006010 <_ZN15Screen1ViewBaseD1Ev+0x1a4>)
 8005ec6:	f8c4 150c 	str.w	r1, [r4, #1292]	@ 0x50c
 * GraphElementLine will draw a line with a given thickness through the data points in the graph.
 *
 * @note The Line is drawn using Canvas Widget Renderer which is slower but produces much nicer
 *       graphics.
 */
class GraphElementLine : public AbstractGraphElement
 8005eca:	4952      	ldr	r1, [pc, #328]	@ (8006014 <_ZN15Screen1ViewBaseD1Ev+0x1a8>)
 8005ecc:	f8c4 14dc 	str.w	r1, [r4, #1244]	@ 0x4dc
class AbstractGraphElement : public CanvasWidget
 8005ed0:	4851      	ldr	r0, [pc, #324]	@ (8006018 <_ZN15Screen1ViewBaseD1Ev+0x1ac>)
 8005ed2:	f8c4 04dc 	str.w	r0, [r4, #1244]	@ 0x4dc
 8005ed6:	4951      	ldr	r1, [pc, #324]	@ (800601c <_ZN15Screen1ViewBaseD1Ev+0x1b0>)
 8005ed8:	f8c4 14dc 	str.w	r1, [r4, #1244]	@ 0x4dc
 8005edc:	f8c4 24dc 	str.w	r2, [r4, #1244]	@ 0x4dc
 8005ee0:	f8c4 34dc 	str.w	r3, [r4, #1244]	@ 0x4dc

/**
 * GraphLabelsY will draw labels along the Y axis at given intervals. By combining two
 * GraphLabelsY it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsY : public GraphLabelsBase
 8005ee4:	4d4e      	ldr	r5, [pc, #312]	@ (8006020 <_ZN15Screen1ViewBaseD1Ev+0x1b4>)
 8005ee6:	f8c4 5490 	str.w	r5, [r4, #1168]	@ 0x490
class GraphLabelsBase : public AbstractGraphDecoration
 8005eea:	f8df c16c 	ldr.w	ip, [pc, #364]	@ 8006058 <_ZN15Screen1ViewBaseD1Ev+0x1ec>
 8005eee:	f8c4 c490 	str.w	ip, [r4, #1168]	@ 0x490
 8005ef2:	f8c4 64c8 	str.w	r6, [r4, #1224]	@ 0x4c8
class AbstractGraphDecoration : public AbstractGraphElementNoCWR
 8005ef6:	4f4b      	ldr	r7, [pc, #300]	@ (8006024 <_ZN15Screen1ViewBaseD1Ev+0x1b8>)
 8005ef8:	f8c4 7490 	str.w	r7, [r4, #1168]	@ 0x490
class AbstractGraphElementNoCWR : public AbstractGraphElement
 8005efc:	4d4a      	ldr	r5, [pc, #296]	@ (8006028 <_ZN15Screen1ViewBaseD1Ev+0x1bc>)
 8005efe:	f8c4 5490 	str.w	r5, [r4, #1168]	@ 0x490
class AbstractGraphElement : public CanvasWidget
 8005f02:	f8c4 0490 	str.w	r0, [r4, #1168]	@ 0x490
 8005f06:	f8c4 1490 	str.w	r1, [r4, #1168]	@ 0x490
 8005f0a:	f8c4 2490 	str.w	r2, [r4, #1168]	@ 0x490
 8005f0e:	f8c4 3490 	str.w	r3, [r4, #1168]	@ 0x490
class GraphLabelsX : public GraphLabelsBase
 8005f12:	f8df e148 	ldr.w	lr, [pc, #328]	@ 800605c <_ZN15Screen1ViewBaseD1Ev+0x1f0>
 8005f16:	f8c4 e444 	str.w	lr, [r4, #1092]	@ 0x444
class GraphLabelsBase : public AbstractGraphDecoration
 8005f1a:	f8c4 c444 	str.w	ip, [r4, #1092]	@ 0x444
 8005f1e:	f8c4 647c 	str.w	r6, [r4, #1148]	@ 0x47c
class AbstractGraphDecoration : public AbstractGraphElementNoCWR
 8005f22:	f8c4 7444 	str.w	r7, [r4, #1092]	@ 0x444
class AbstractGraphElementNoCWR : public AbstractGraphElement
 8005f26:	f8c4 5444 	str.w	r5, [r4, #1092]	@ 0x444
class AbstractGraphElement : public CanvasWidget
 8005f2a:	f8c4 0444 	str.w	r0, [r4, #1092]	@ 0x444
 8005f2e:	f8c4 1444 	str.w	r1, [r4, #1092]	@ 0x444
 8005f32:	f8c4 2444 	str.w	r2, [r4, #1092]	@ 0x444
 8005f36:	f8c4 3444 	str.w	r3, [r4, #1092]	@ 0x444
class GraphElementGridY : public GraphElementGridBase
 8005f3a:	4e3c      	ldr	r6, [pc, #240]	@ (800602c <_ZN15Screen1ViewBaseD1Ev+0x1c0>)
 8005f3c:	f8c4 6404 	str.w	r6, [r4, #1028]	@ 0x404
class GraphElementGridBase : public AbstractGraphElementNoCWR
 8005f40:	4e3b      	ldr	r6, [pc, #236]	@ (8006030 <_ZN15Screen1ViewBaseD1Ev+0x1c4>)
 8005f42:	f8c4 6404 	str.w	r6, [r4, #1028]	@ 0x404
class AbstractGraphElementNoCWR : public AbstractGraphElement
 8005f46:	f8c4 5404 	str.w	r5, [r4, #1028]	@ 0x404
class AbstractGraphElement : public CanvasWidget
 8005f4a:	f8c4 0404 	str.w	r0, [r4, #1028]	@ 0x404
 8005f4e:	f8c4 1404 	str.w	r1, [r4, #1028]	@ 0x404
 8005f52:	f8c4 2404 	str.w	r2, [r4, #1028]	@ 0x404
 8005f56:	f8c4 3404 	str.w	r3, [r4, #1028]	@ 0x404
class GraphElementGridX : public GraphElementGridBase
 8005f5a:	4f36      	ldr	r7, [pc, #216]	@ (8006034 <_ZN15Screen1ViewBaseD1Ev+0x1c8>)
 8005f5c:	f8c4 73c4 	str.w	r7, [r4, #964]	@ 0x3c4
class GraphElementGridBase : public AbstractGraphElementNoCWR
 8005f60:	f8c4 63c4 	str.w	r6, [r4, #964]	@ 0x3c4
class AbstractGraphElementNoCWR : public AbstractGraphElement
 8005f64:	f8c4 53c4 	str.w	r5, [r4, #964]	@ 0x3c4
class AbstractGraphElement : public CanvasWidget
 8005f68:	f8c4 03c4 	str.w	r0, [r4, #964]	@ 0x3c4
 8005f6c:	f8c4 13c4 	str.w	r1, [r4, #964]	@ 0x3c4
 8005f70:	f8c4 23c4 	str.w	r2, [r4, #964]	@ 0x3c4
 8005f74:	f8c4 33c4 	str.w	r3, [r4, #964]	@ 0x3c4
 8005f78:	492f      	ldr	r1, [pc, #188]	@ (8006038 <_ZN15Screen1ViewBaseD1Ev+0x1cc>)
 8005f7a:	f8c4 1098 	str.w	r1, [r4, #152]	@ 0x98
class GraphWrapAndClearData : public DynamicDataGraph
 8005f7e:	492f      	ldr	r1, [pc, #188]	@ (800603c <_ZN15Screen1ViewBaseD1Ev+0x1d0>)
 8005f80:	f8c4 1098 	str.w	r1, [r4, #152]	@ 0x98
class DynamicDataGraph : public AbstractDataGraph
 8005f84:	492e      	ldr	r1, [pc, #184]	@ (8006040 <_ZN15Screen1ViewBaseD1Ev+0x1d4>)
 8005f86:	f8c4 1098 	str.w	r1, [r4, #152]	@ 0x98
class AbstractDataGraph : public Container
 8005f8a:	492e      	ldr	r1, [pc, #184]	@ (8006044 <_ZN15Screen1ViewBaseD1Ev+0x1d8>)
 8005f8c:	f8c4 1098 	str.w	r1, [r4, #152]	@ 0x98
 8005f90:	492d      	ldr	r1, [pc, #180]	@ (8006048 <_ZN15Screen1ViewBaseD1Ev+0x1dc>)
 8005f92:	f8c4 1180 	str.w	r1, [r4, #384]	@ 0x180
 8005f96:	f8c4 3180 	str.w	r3, [r4, #384]	@ 0x180
 8005f9a:	f8c4 1154 	str.w	r1, [r4, #340]	@ 0x154
 8005f9e:	f8c4 3154 	str.w	r3, [r4, #340]	@ 0x154
 8005fa2:	f8c4 1128 	str.w	r1, [r4, #296]	@ 0x128
 8005fa6:	f8c4 3128 	str.w	r3, [r4, #296]	@ 0x128
 8005faa:	f8c4 10fc 	str.w	r1, [r4, #252]	@ 0xfc
 8005fae:	f8c4 30fc 	str.w	r3, [r4, #252]	@ 0xfc
 8005fb2:	f8c4 10d0 	str.w	r1, [r4, #208]	@ 0xd0
 8005fb6:	f8c4 30d0 	str.w	r3, [r4, #208]	@ 0xd0
 8005fba:	f8c4 1098 	str.w	r1, [r4, #152]	@ 0x98
 8005fbe:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
namespace touchgfx
{
/**
 * Simple widget capable of showing a rectangle of a specific color and an optional alpha.
 */
class Box : public Widget
 8005fc2:	4822      	ldr	r0, [pc, #136]	@ (800604c <_ZN15Screen1ViewBaseD1Ev+0x1e0>)
 8005fc4:	66e0      	str	r0, [r4, #108]	@ 0x6c
 8005fc6:	66e2      	str	r2, [r4, #108]	@ 0x6c
 8005fc8:	66e3      	str	r3, [r4, #108]	@ 0x6c
 8005fca:	6420      	str	r0, [r4, #64]	@ 0x40
 8005fcc:	6422      	str	r2, [r4, #64]	@ 0x40
 8005fce:	6423      	str	r3, [r4, #64]	@ 0x40
 8005fd0:	4a1f      	ldr	r2, [pc, #124]	@ (8006050 <_ZN15Screen1ViewBaseD1Ev+0x1e4>)
 8005fd2:	6022      	str	r2, [r4, #0]
 8005fd4:	4a1f      	ldr	r2, [pc, #124]	@ (8006054 <_ZN15Screen1ViewBaseD1Ev+0x1e8>)
 8005fd6:	6022      	str	r2, [r4, #0]
 8005fd8:	6061      	str	r1, [r4, #4]
 8005fda:	6063      	str	r3, [r4, #4]
}
 8005fdc:	4620      	mov	r0, r4
 8005fde:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005fe0:	080314e4 	.word	0x080314e4
 8005fe4:	080314cc 	.word	0x080314cc
 8005fe8:	080312e8 	.word	0x080312e8
 8005fec:	08032fdc 	.word	0x08032fdc
 8005ff0:	08030688 	.word	0x08030688
 8005ff4:	08032e6c 	.word	0x08032e6c
 8005ff8:	08032c90 	.word	0x08032c90
 8005ffc:	080302c8 	.word	0x080302c8
 8006000:	0803310c 	.word	0x0803310c
 8006004:	08032408 	.word	0x08032408
 8006008:	0803047c 	.word	0x0803047c
 800600c:	08030490 	.word	0x08030490
 8006010:	0803045c 	.word	0x0803045c
 8006014:	080327e0 	.word	0x080327e0
 8006018:	08030fec 	.word	0x08030fec
 800601c:	080324a0 	.word	0x080324a0
 8006020:	080329b8 	.word	0x080329b8
 8006024:	08031260 	.word	0x08031260
 8006028:	08031068 	.word	0x08031068
 800602c:	080311a8 	.word	0x080311a8
 8006030:	0803285c 	.word	0x0803285c
 8006034:	080310f0 	.word	0x080310f0
 8006038:	08031334 	.word	0x08031334
 800603c:	08032af8 	.word	0x08032af8
 8006040:	08032518 	.word	0x08032518
 8006044:	080326b0 	.word	0x080326b0
 8006048:	080321ec 	.word	0x080321ec
 800604c:	08032e04 	.word	0x08032e04
 8006050:	08031300 	.word	0x08031300
 8006054:	0803322c 	.word	0x0803322c
 8006058:	08032a58 	.word	0x08032a58
 800605c:	08032918 	.word	0x08032918

08006060 <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
 8006060:	b510      	push	{r4, lr}
 8006062:	4604      	mov	r4, r0
}
 8006064:	f7ff ff02 	bl	8005e6c <_ZN15Screen1ViewBaseD1Ev>
 8006068:	f243 4158 	movw	r1, #13400	@ 0x3458
 800606c:	4620      	mov	r0, r4
 800606e:	f027 fc1e 	bl	802d8ae <_ZdlPvj>
 8006072:	4620      	mov	r0, r4
 8006074:	bd10      	pop	{r4, pc}

08006076 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel2)
 8006076:	f500 60a4 	add.w	r0, r0, #1312	@ 0x520
 800607a:	4288      	cmp	r0, r1
 800607c:	d000      	beq.n	8006080 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa>
 800607e:	4770      	bx	lr
{
 8006080:	b508      	push	{r3, lr}
    virtual ~Screen1ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006082:	f014 fcdf 	bl	801aa44 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel2 clicked change screen to Screen2
        //Go to Screen2 with screen transition towards South
        application().gotoScreen2ScreenCoverTransitionSouth();
 8006086:	f7fe fc1b 	bl	80048c0 <_ZN23FrontendApplicationBase37gotoScreen2ScreenCoverTransitionSouthEv>
    }
}
 800608a:	bd08      	pop	{r3, pc}

0800608c <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 800608c:	b538      	push	{r3, r4, r5, lr}
 800608e:	4604      	mov	r4, r0
 8006090:	4615      	mov	r5, r2
        setX(x);
 8006092:	6803      	ldr	r3, [r0, #0]
 8006094:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006096:	4798      	blx	r3
        setY(y);
 8006098:	6823      	ldr	r3, [r4, #0]
 800609a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800609c:	4629      	mov	r1, r5
 800609e:	4620      	mov	r0, r4
 80060a0:	4798      	blx	r3
    }
 80060a2:	bd38      	pop	{r3, r4, r5, pc}

080060a4 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
    void setWidthHeight(int16_t width, int16_t height)
 80060a4:	b538      	push	{r3, r4, r5, lr}
 80060a6:	4604      	mov	r4, r0
 80060a8:	4615      	mov	r5, r2
        setWidth(width);
 80060aa:	6803      	ldr	r3, [r0, #0]
 80060ac:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80060ae:	4798      	blx	r3
        setHeight(height);
 80060b0:	6823      	ldr	r3, [r4, #0]
 80060b2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80060b4:	4629      	mov	r1, r5
 80060b6:	4620      	mov	r0, r4
 80060b8:	4798      	blx	r3
    }
 80060ba:	bd38      	pop	{r3, r4, r5, pc}

080060bc <_ZN8touchgfx6WidgetC1Ev>:
          visible(true)
 80060bc:	4a0b      	ldr	r2, [pc, #44]	@ (80060ec <_ZN8touchgfx6WidgetC1Ev+0x30>)
 80060be:	6002      	str	r2, [r0, #0]
        : x(0), y(0), width(0), height(0)
 80060c0:	2200      	movs	r2, #0
 80060c2:	8082      	strh	r2, [r0, #4]
 80060c4:	80c2      	strh	r2, [r0, #6]
 80060c6:	8102      	strh	r2, [r0, #8]
 80060c8:	8142      	strh	r2, [r0, #10]
 80060ca:	8182      	strh	r2, [r0, #12]
 80060cc:	81c2      	strh	r2, [r0, #14]
 80060ce:	8202      	strh	r2, [r0, #16]
 80060d0:	8242      	strh	r2, [r0, #18]
          parent(0),
 80060d2:	6142      	str	r2, [r0, #20]
          nextSibling(0),
 80060d4:	6182      	str	r2, [r0, #24]
          nextDrawChainElement(0),
 80060d6:	61c2      	str	r2, [r0, #28]
          cachedAbsX(0),
 80060d8:	8402      	strh	r2, [r0, #32]
          cachedAbsY(0),
 80060da:	8442      	strh	r2, [r0, #34]	@ 0x22
          touchable(false),
 80060dc:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
          visible(true)
 80060e0:	2201      	movs	r2, #1
 80060e2:	f880 2025 	strb.w	r2, [r0, #37]	@ 0x25
 80060e6:	4a02      	ldr	r2, [pc, #8]	@ (80060f0 <_ZN8touchgfx6WidgetC1Ev+0x34>)
 80060e8:	6002      	str	r2, [r0, #0]
 80060ea:	4770      	bx	lr
 80060ec:	0803310c 	.word	0x0803310c
 80060f0:	080302c8 	.word	0x080302c8

080060f4 <_ZN8touchgfx3BoxC1Ev>:
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 80060f4:	b510      	push	{r4, lr}
 80060f6:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 80060f8:	2226      	movs	r2, #38	@ 0x26
 80060fa:	2100      	movs	r1, #0
 80060fc:	f028 fd25 	bl	802eb4a <memset>
 8006100:	4620      	mov	r0, r4
 8006102:	f7ff ffdb 	bl	80060bc <_ZN8touchgfx6WidgetC1Ev>
 8006106:	4b04      	ldr	r3, [pc, #16]	@ (8006118 <_ZN8touchgfx3BoxC1Ev+0x24>)
 8006108:	6023      	str	r3, [r4, #0]
 800610a:	23ff      	movs	r3, #255	@ 0xff
 800610c:	f884 3026 	strb.w	r3, [r4, #38]	@ 0x26
        : color(col)
 8006110:	2300      	movs	r3, #0
 8006112:	62a3      	str	r3, [r4, #40]	@ 0x28
    {
    }
 8006114:	4620      	mov	r0, r4
 8006116:	bd10      	pop	{r4, pc}
 8006118:	08032e04 	.word	0x08032e04

0800611c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>:
     * @param  factor2 The second factor.
     * @param  divisor The divisor.
     *
     * @return factor1 * factor2 / divisor as a Q5
     */
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 800611c:	b530      	push	{r4, r5, lr}
 800611e:	b083      	sub	sp, #12
 8006120:	4615      	mov	r5, r2
    {
        int32_t remainder;
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8006122:	ab01      	add	r3, sp, #4
 8006124:	f016 fbe0 	bl	801c8e8 <_ZN8touchgfx6muldivElllRl>
        if (result >= 0)
 8006128:	2800      	cmp	r0, #0
 800612a:	db08      	blt.n	800613e <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x22>
        return Q5((int)(value * (int)Rasterizer::POLY_BASE_SIZE));
 800612c:	0144      	lsls	r4, r0, #5
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 800612e:	462a      	mov	r2, r5
 8006130:	9901      	ldr	r1, [sp, #4]
 8006132:	2020      	movs	r0, #32
 8006134:	f016 fbf7 	bl	801c926 <_ZN8touchgfx6muldivElll>
        explicit Q5(int i)
 8006138:	4420      	add	r0, r4
        {
            return toQ5(result) + muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
        }
        return toQ5(result) - muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
    }
 800613a:	b003      	add	sp, #12
 800613c:	bd30      	pop	{r4, r5, pc}
        return Q5((int)(value * (int)Rasterizer::POLY_BASE_SIZE));
 800613e:	0144      	lsls	r4, r0, #5
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8006140:	462a      	mov	r2, r5
 8006142:	9901      	ldr	r1, [sp, #4]
 8006144:	2020      	movs	r0, #32
 8006146:	f016 fbee 	bl	801c926 <_ZN8touchgfx6muldivElll>
        explicit Q5(int i)
 800614a:	1a20      	subs	r0, r4, r0
 800614c:	e7f5      	b.n	800613a <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x1e>

0800614e <_ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 800614e:	b510      	push	{r4, lr}
 8006150:	4602      	mov	r2, r0
 8006152:	4608      	mov	r0, r1
        return rect.height;
 8006154:	f9b2 1042 	ldrsh.w	r1, [r2, #66]	@ 0x42
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8006158:	b289      	uxth	r1, r1
 800615a:	f9b2 3114 	ldrsh.w	r3, [r2, #276]	@ 0x114
 800615e:	f8b2 411a 	ldrh.w	r4, [r2, #282]	@ 0x11a
 8006162:	fa14 f483 	uxtah	r4, r4, r3
 8006166:	b2a4      	uxth	r4, r4
 8006168:	1b09      	subs	r1, r1, r4
 800616a:	b209      	sxth	r1, r1
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 800616c:	18cc      	adds	r4, r1, r3
 800616e:	3c01      	subs	r4, #1
        return Q5((int)(value * (int)Rasterizer::POLY_BASE_SIZE));
 8006170:	0164      	lsls	r4, r4, #5
 8006172:	f8d2 3134 	ldr.w	r3, [r2, #308]	@ 0x134
 8006176:	f8d2 2138 	ldr.w	r2, [r2, #312]	@ 0x138
 800617a:	1ad2      	subs	r2, r2, r3
 800617c:	3901      	subs	r1, #1
 800617e:	1ac0      	subs	r0, r0, r3
 8006180:	f7ff ffcc 	bl	800611c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
    }
 8006184:	1a20      	subs	r0, r4, r0
 8006186:	bd10      	pop	{r4, pc}

08006188 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenXQ5(int x) const
 8006188:	b510      	push	{r4, lr}
 800618a:	4604      	mov	r4, r0
 800618c:	468c      	mov	ip, r1
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 800618e:	f8d0 012c 	ldr.w	r0, [r0, #300]	@ 0x12c
        return rect.width;
 8006192:	f9b4 1040 	ldrsh.w	r1, [r4, #64]	@ 0x40
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8006196:	b289      	uxth	r1, r1
 8006198:	f8b4 3116 	ldrh.w	r3, [r4, #278]	@ 0x116
 800619c:	f8b4 2118 	ldrh.w	r2, [r4, #280]	@ 0x118
 80061a0:	4413      	add	r3, r2
 80061a2:	b29b      	uxth	r3, r3
 80061a4:	1ac9      	subs	r1, r1, r3
 80061a6:	b209      	sxth	r1, r1
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 80061a8:	f8d4 2130 	ldr.w	r2, [r4, #304]	@ 0x130
 80061ac:	1a12      	subs	r2, r2, r0
 80061ae:	3901      	subs	r1, #1
 80061b0:	ebac 0000 	sub.w	r0, ip, r0
 80061b4:	f7ff ffb2 	bl	800611c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 80061b8:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	@ 0x116
    }
 80061bc:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 80061c0:	bd10      	pop	{r4, pc}
	...

080061c4 <_ZN8touchgfx16DynamicDataGraphC1EsPi>:
    DynamicDataGraph(int16_t capacity, int* values)
 80061c4:	b570      	push	{r4, r5, r6, lr}
 80061c6:	4604      	mov	r4, r0
 80061c8:	460d      	mov	r5, r1
 80061ca:	4616      	mov	r6, r2
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 80061cc:	f00f fe28 	bl	8015e20 <_ZN8touchgfx17AbstractDataGraphC1Es>
 80061d0:	4b0a      	ldr	r3, [pc, #40]	@ (80061fc <_ZN8touchgfx16DynamicDataGraphC1EsPi+0x38>)
 80061d2:	6023      	str	r3, [r4, #0]
 80061d4:	2301      	movs	r3, #1
 80061d6:	f8c4 313c 	str.w	r3, [r4, #316]	@ 0x13c
 80061da:	2100      	movs	r1, #0
 80061dc:	f8c4 1140 	str.w	r1, [r4, #320]	@ 0x140
 80061e0:	f8c4 6144 	str.w	r6, [r4, #324]	@ 0x144
 80061e4:	f8c4 1148 	str.w	r1, [r4, #328]	@ 0x148
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 80061e8:	3d01      	subs	r5, #1
        return int2scaled(i, xScale);
 80061ea:	6b22      	ldr	r2, [r4, #48]	@ 0x30
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80061ec:	fb05 f202 	mul.w	r2, r5, r2
 80061f0:	4620      	mov	r0, r4
 80061f2:	f00f fa82 	bl	80156fa <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii>
    }
 80061f6:	4620      	mov	r0, r4
 80061f8:	bd70      	pop	{r4, r5, r6, pc}
 80061fa:	bf00      	nop
 80061fc:	08032518 	.word	0x08032518

08006200 <_ZN8touchgfx20GraphElementGridBaseC1Ev>:
    GraphElementGridBase()
 8006200:	b510      	push	{r4, lr}
 8006202:	4604      	mov	r4, r0
        : CanvasWidget()
 8006204:	f00f fa2c 	bl	8015660 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8006208:	4b08      	ldr	r3, [pc, #32]	@ (800622c <_ZN8touchgfx20GraphElementGridBaseC1Ev+0x2c>)
 800620a:	6023      	str	r3, [r4, #0]
        : color(0)
 800620c:	4b08      	ldr	r3, [pc, #32]	@ (8006230 <_ZN8touchgfx20GraphElementGridBaseC1Ev+0x30>)
 800620e:	6023      	str	r3, [r4, #0]
 8006210:	2300      	movs	r3, #0
 8006212:	62e3      	str	r3, [r4, #44]	@ 0x2c
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8006214:	4a07      	ldr	r2, [pc, #28]	@ (8006234 <_ZN8touchgfx20GraphElementGridBaseC1Ev+0x34>)
 8006216:	6022      	str	r2, [r4, #0]
 8006218:	2201      	movs	r2, #1
 800621a:	6322      	str	r2, [r4, #48]	@ 0x30
 800621c:	210a      	movs	r1, #10
 800621e:	6361      	str	r1, [r4, #52]	@ 0x34
 8006220:	f884 2038 	strb.w	r2, [r4, #56]	@ 0x38
 8006224:	63e3      	str	r3, [r4, #60]	@ 0x3c
    }
 8006226:	4620      	mov	r0, r4
 8006228:	bd10      	pop	{r4, pc}
 800622a:	bf00      	nop
 800622c:	08030fec 	.word	0x08030fec
 8006230:	08031068 	.word	0x08031068
 8006234:	0803285c 	.word	0x0803285c

08006238 <_ZN8touchgfx15GraphLabelsBaseC1Ev>:
    GraphLabelsBase()
 8006238:	b510      	push	{r4, lr}
 800623a:	4604      	mov	r4, r0
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 800623c:	2230      	movs	r2, #48	@ 0x30
 800623e:	2100      	movs	r1, #0
 8006240:	f028 fc83 	bl	802eb4a <memset>
        : CanvasWidget()
 8006244:	4620      	mov	r0, r4
 8006246:	f00f fa0b 	bl	8015660 <_ZN8touchgfx12CanvasWidgetC1Ev>
 800624a:	4b0e      	ldr	r3, [pc, #56]	@ (8006284 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x4c>)
 800624c:	6023      	str	r3, [r4, #0]
        : color(0)
 800624e:	4b0e      	ldr	r3, [pc, #56]	@ (8006288 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x50>)
 8006250:	6023      	str	r3, [r4, #0]
 8006252:	2300      	movs	r3, #0
 8006254:	62e3      	str	r3, [r4, #44]	@ 0x2c
class AbstractGraphDecoration : public AbstractGraphElementNoCWR
 8006256:	4a0d      	ldr	r2, [pc, #52]	@ (800628c <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x54>)
 8006258:	6022      	str	r2, [r4, #0]
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 800625a:	4a0d      	ldr	r2, [pc, #52]	@ (8006290 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x58>)
 800625c:	6022      	str	r2, [r4, #0]
 800625e:	2201      	movs	r2, #1
 8006260:	6322      	str	r2, [r4, #48]	@ 0x30
 8006262:	6363      	str	r3, [r4, #52]	@ 0x34
        : typedTextId(id)
 8006264:	4a0b      	ldr	r2, [pc, #44]	@ (8006294 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x5c>)
 8006266:	63a2      	str	r2, [r4, #56]	@ 0x38
 8006268:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800626c:	87a2      	strh	r2, [r4, #60]	@ 0x3c
 800626e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8006272:	f8a4 3042 	strh.w	r3, [r4, #66]	@ 0x42
 8006276:	222e      	movs	r2, #46	@ 0x2e
 8006278:	f8a4 2044 	strh.w	r2, [r4, #68]	@ 0x44
 800627c:	64a3      	str	r3, [r4, #72]	@ 0x48
    }
 800627e:	4620      	mov	r0, r4
 8006280:	bd10      	pop	{r4, pc}
 8006282:	bf00      	nop
 8006284:	08030fec 	.word	0x08030fec
 8006288:	08031068 	.word	0x08031068
 800628c:	08031260 	.word	0x08031260
 8006290:	08032a58 	.word	0x08032a58
 8006294:	08030688 	.word	0x08030688

08006298 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
        painterColor = color;
 8006298:	60c1      	str	r1, [r0, #12]
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static uint16_t getNativeColor(colortype color)
    {
        return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
 800629a:	0a0b      	lsrs	r3, r1, #8
 800629c:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 80062a0:	094a      	lsrs	r2, r1, #5
 80062a2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80062a6:	4313      	orrs	r3, r2
 80062a8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80062ac:	430b      	orrs	r3, r1

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80062ae:	8203      	strh	r3, [r0, #16]
    }
 80062b0:	4770      	bx	lr

080062b2 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
    virtual void setColor(colortype color)
 80062b2:	f1a0 0008 	sub.w	r0, r0, #8
 80062b6:	e7ef      	b.n	8006298 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>

080062b8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 80062b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80062ba:	4604      	mov	r4, r0
        return typedTextId < numberOfTypedTexts;
 80062bc:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 80062be:	4b19      	ldr	r3, [pc, #100]	@ (8006324 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
 80062c0:	881b      	ldrh	r3, [r3, #0]
    {
        if (typedText.hasValidId())
 80062c2:	428b      	cmp	r3, r1
 80062c4:	d92a      	bls.n	800631c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x64>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80062c6:	4b18      	ldr	r3, [pc, #96]	@ (8006328 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 80062c8:	681b      	ldr	r3, [r3, #0]
 80062ca:	b30b      	cbz	r3, 8006310 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x58>
        return fonts[typedTexts[typedTextId].fontIdx];
 80062cc:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80062d0:	4b16      	ldr	r3, [pc, #88]	@ (800632c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 80062d2:	681b      	ldr	r3, [r3, #0]
 80062d4:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 80062d8:	4b15      	ldr	r3, [pc, #84]	@ (8006330 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 80062da:	6818      	ldr	r0, [r3, #0]
 80062dc:	f004 f8ba 	bl	800a454 <_ZNK8touchgfx5Texts7getTextEt>
 80062e0:	4607      	mov	r7, r0
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80062e2:	6833      	ldr	r3, [r6, #0]
 80062e4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80062e6:	4630      	mov	r0, r6
 80062e8:	4798      	blx	r3
 80062ea:	4605      	mov	r5, r0
 80062ec:	6833      	ldr	r3, [r6, #0]
 80062ee:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80062f0:	4639      	mov	r1, r7
 80062f2:	4630      	mov	r0, r6
 80062f4:	4798      	blx	r3
 80062f6:	fb15 f500 	smulbb	r5, r5, r0
 80062fa:	b2ad      	uxth	r5, r5
 80062fc:	6833      	ldr	r3, [r6, #0]
 80062fe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006300:	4639      	mov	r1, r7
 8006302:	4630      	mov	r0, r6
 8006304:	4798      	blx	r3
 8006306:	fa15 f080 	uxtah	r0, r5, r0
 800630a:	f8a4 0046 	strh.w	r0, [r4, #70]	@ 0x46
 800630e:	e008      	b.n	8006322 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6a>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006310:	4b08      	ldr	r3, [pc, #32]	@ (8006334 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8006312:	4a09      	ldr	r2, [pc, #36]	@ (8006338 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8006314:	216c      	movs	r1, #108	@ 0x6c
 8006316:	4809      	ldr	r0, [pc, #36]	@ (800633c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8006318:	f028 fa10 	bl	802e73c <__assert_func>
        }
        else
        {
            textHeightIncludingSpacing = 0;
 800631c:	2300      	movs	r3, #0
 800631e:	f8a0 3046 	strh.w	r3, [r0, #70]	@ 0x46
        }
    }
 8006322:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006324:	2000e468 	.word	0x2000e468
 8006328:	2000e464 	.word	0x2000e464
 800632c:	2000e46c 	.word	0x2000e46c
 8006330:	2000e470 	.word	0x2000e470
 8006334:	08030f1c 	.word	0x08030f1c
 8006338:	08030f60 	.word	0x08030f60
 800633c:	08030f9c 	.word	0x08030f9c

08006340 <_ZN8touchgfx3absIiEET_S1_>:
 */
template <typename T>
T abs(T d)
{
    return (d < 0) ? -d : d;
}
 8006340:	2800      	cmp	r0, #0
 8006342:	bfb8      	it	lt
 8006344:	4240      	neglt	r0, r0
 8006346:	4770      	bx	lr

08006348 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8006348:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800634c:	b095      	sub	sp, #84	@ 0x54
 800634e:	4604      	mov	r4, r0
        : presenter(0)
 8006350:	f016 fc94 	bl	801cc7c <_ZN8touchgfx6ScreenC1Ev>
 8006354:	4bc4      	ldr	r3, [pc, #784]	@ (8006668 <_ZN15Screen1ViewBaseC1Ev+0x320>)
 8006356:	6023      	str	r3, [r4, #0]
 8006358:	2600      	movs	r6, #0
 800635a:	63e6      	str	r6, [r4, #60]	@ 0x3c
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
 800635c:	46a2      	mov	sl, r4
 800635e:	4bc3      	ldr	r3, [pc, #780]	@ (800666c <_ZN15Screen1ViewBaseC1Ev+0x324>)
 8006360:	f84a 3b40 	str.w	r3, [sl], #64
 8006364:	4650      	mov	r0, sl
 8006366:	f7ff fec5 	bl	80060f4 <_ZN8touchgfx3BoxC1Ev>
 800636a:	f104 086c 	add.w	r8, r4, #108	@ 0x6c
 800636e:	4640      	mov	r0, r8
 8006370:	f7ff fec0 	bl	80060f4 <_ZN8touchgfx3BoxC1Ev>
{
public:
    GraphWrapAndClear()
        : GraphWrapAndClearData(CAPACITY, y)
 8006374:	f104 0598 	add.w	r5, r4, #152	@ 0x98
        : DynamicDataGraph(capacity, values)
 8006378:	f504 72f2 	add.w	r2, r4, #484	@ 0x1e4
 800637c:	2178      	movs	r1, #120	@ 0x78
 800637e:	4628      	mov	r0, r5
 8006380:	f7ff ff20 	bl	80061c4 <_ZN8touchgfx16DynamicDataGraphC1EsPi>
 8006384:	4bba      	ldr	r3, [pc, #744]	@ (8006670 <_ZN15Screen1ViewBaseC1Ev+0x328>)
 8006386:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
        : GraphWrapAndClearData(CAPACITY, y)
 800638a:	4bba      	ldr	r3, [pc, #744]	@ (8006674 <_ZN15Screen1ViewBaseC1Ev+0x32c>)
 800638c:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
class GraphElementGridX : public GraphElementGridBase
 8006390:	f504 7971 	add.w	r9, r4, #964	@ 0x3c4
 8006394:	4648      	mov	r0, r9
 8006396:	f7ff ff33 	bl	8006200 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800639a:	4bb7      	ldr	r3, [pc, #732]	@ (8006678 <_ZN15Screen1ViewBaseC1Ev+0x330>)
 800639c:	f8c4 33c4 	str.w	r3, [r4, #964]	@ 0x3c4
class GraphElementGridY : public GraphElementGridBase
 80063a0:	f204 4b04 	addw	fp, r4, #1028	@ 0x404
 80063a4:	4658      	mov	r0, fp
 80063a6:	f7ff ff2b 	bl	8006200 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80063aa:	4bb4      	ldr	r3, [pc, #720]	@ (800667c <_ZN15Screen1ViewBaseC1Ev+0x334>)
 80063ac:	f8c4 3404 	str.w	r3, [r4, #1028]	@ 0x404
class GraphLabelsX : public GraphLabelsBase
 80063b0:	f204 4344 	addw	r3, r4, #1092	@ 0x444
 80063b4:	9305      	str	r3, [sp, #20]
 80063b6:	4618      	mov	r0, r3
 80063b8:	f7ff ff3e 	bl	8006238 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 80063bc:	4bb0      	ldr	r3, [pc, #704]	@ (8006680 <_ZN15Screen1ViewBaseC1Ev+0x338>)
 80063be:	f8c4 3444 	str.w	r3, [r4, #1092]	@ 0x444
class GraphLabelsY : public GraphLabelsBase
 80063c2:	f504 6392 	add.w	r3, r4, #1168	@ 0x490
 80063c6:	9306      	str	r3, [sp, #24]
 80063c8:	4618      	mov	r0, r3
 80063ca:	f7ff ff35 	bl	8006238 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 80063ce:	4bad      	ldr	r3, [pc, #692]	@ (8006684 <_ZN15Screen1ViewBaseC1Ev+0x33c>)
 80063d0:	f8c4 3490 	str.w	r3, [r4, #1168]	@ 0x490
        : CanvasWidget()
 80063d4:	f204 43dc 	addw	r3, r4, #1244	@ 0x4dc
 80063d8:	9307      	str	r3, [sp, #28]
 80063da:	4618      	mov	r0, r3
 80063dc:	f00f f940 	bl	8015660 <_ZN8touchgfx12CanvasWidgetC1Ev>
 80063e0:	4ba9      	ldr	r3, [pc, #676]	@ (8006688 <_ZN15Screen1ViewBaseC1Ev+0x340>)
 80063e2:	f8c4 34dc 	str.w	r3, [r4, #1244]	@ 0x4dc
{
public:
    GraphElementLine()
        : lineWidth(2)
 80063e6:	4ba9      	ldr	r3, [pc, #676]	@ (800668c <_ZN15Screen1ViewBaseC1Ev+0x344>)
 80063e8:	f8c4 34dc 	str.w	r3, [r4, #1244]	@ 0x4dc
 80063ec:	2302      	movs	r3, #2
 80063ee:	f884 3508 	strb.w	r3, [r4, #1288]	@ 0x508
 80063f2:	f204 530c 	addw	r3, r4, #1292	@ 0x50c
 80063f6:	4631      	mov	r1, r6
 80063f8:	9303      	str	r3, [sp, #12]
 80063fa:	4618      	mov	r0, r3
 80063fc:	f7fd f86c 	bl	80034d8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8006400:	f504 67a4 	add.w	r7, r4, #1312	@ 0x520
 8006404:	4638      	mov	r0, r7
 8006406:	f011 ff85 	bl	8018314 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800640a:	4ba1      	ldr	r3, [pc, #644]	@ (8006690 <_ZN15Screen1ViewBaseC1Ev+0x348>)
 800640c:	930a      	str	r3, [sp, #40]	@ 0x28
 800640e:	960b      	str	r6, [sp, #44]	@ 0x2c
 8006410:	aa08      	add	r2, sp, #32
 8006412:	ab0a      	add	r3, sp, #40	@ 0x28
 8006414:	e893 0003 	ldmia.w	r3, {r0, r1}
 8006418:	e882 0003 	stmia.w	r2, {r0, r1}
class GenericCallback<T1, void, void>
 800641c:	f504 5340 	add.w	r3, r4, #12288	@ 0x3000
 8006420:	499c      	ldr	r1, [pc, #624]	@ (8006694 <_ZN15Screen1ViewBaseC1Ev+0x34c>)
 8006422:	f8c3 1448 	str.w	r1, [r3, #1096]	@ 0x448
        : pobject(pObject), pmemfun(pmemfun_1)
 8006426:	499c      	ldr	r1, [pc, #624]	@ (8006698 <_ZN15Screen1ViewBaseC1Ev+0x350>)
 8006428:	f8c3 1448 	str.w	r1, [r3, #1096]	@ 0x448
 800642c:	f8c3 444c 	str.w	r4, [r3, #1100]	@ 0x44c
 8006430:	f503 638a 	add.w	r3, r3, #1104	@ 0x450
 8006434:	e892 0003 	ldmia.w	r2, {r0, r1}
 8006438:	e883 0003 	stmia.w	r3, {r0, r1}
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800643c:	f642 61e0 	movw	r1, #12000	@ 0x2ee0
 8006440:	f504 60ad 	add.w	r0, r4, #1384	@ 0x568
 8006444:	f012 fe22 	bl	801908c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
        setXY(x, y);
 8006448:	4632      	mov	r2, r6
 800644a:	4631      	mov	r1, r6
 800644c:	4650      	mov	r0, sl
 800644e:	f7ff fe1d 	bl	800608c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8006452:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8006456:	f44f 7148 	mov.w	r1, #800	@ 0x320
 800645a:	4650      	mov	r0, sl
 800645c:	f7ff fe22 	bl	80060a4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8006460:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
 8006464:	66a2      	str	r2, [r4, #104]	@ 0x68
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8006466:	1d22      	adds	r2, r4, #4
 8006468:	4651      	mov	r1, sl
 800646a:	4692      	mov	sl, r2
 800646c:	4610      	mov	r0, r2
 800646e:	f00c fa5b 	bl	8012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setXY(x, y);
 8006472:	4632      	mov	r2, r6
 8006474:	4631      	mov	r1, r6
 8006476:	4640      	mov	r0, r8
 8006478:	f7ff fe08 	bl	800608c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800647c:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8006480:	f44f 7148 	mov.w	r1, #800	@ 0x320
 8006484:	4640      	mov	r0, r8
 8006486:	f7ff fe0d 	bl	80060a4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800648a:	f04f 32ff 	mov.w	r2, #4294967295
 800648e:	f8c4 2094 	str.w	r2, [r4, #148]	@ 0x94
 8006492:	4641      	mov	r1, r8
 8006494:	f8cd a010 	str.w	sl, [sp, #16]
 8006498:	4650      	mov	r0, sl
 800649a:	f00c fa45 	bl	8012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setXY(x, y);
 800649e:	2246      	movs	r2, #70	@ 0x46
 80064a0:	4631      	mov	r1, r6
 80064a2:	4628      	mov	r0, r5
 80064a4:	f7ff fdf2 	bl	800608c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80064a8:	f240 1297 	movw	r2, #407	@ 0x197
 80064ac:	f44f 7148 	mov.w	r1, #800	@ 0x320
 80064b0:	4628      	mov	r0, r5
 80064b2:	f7ff fdf7 	bl	80060a4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    dynamicGraph1.setScale(1);
 80064b6:	4632      	mov	r2, r6
 80064b8:	2101      	movs	r1, #1
 80064ba:	4628      	mov	r0, r5
 80064bc:	f7ff f8f1 	bl	80056a2 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph1.setGraphAreaMargin(10, 68, 0, 30);
 80064c0:	231e      	movs	r3, #30
 80064c2:	9300      	str	r3, [sp, #0]
 80064c4:	4633      	mov	r3, r6
 80064c6:	2244      	movs	r2, #68	@ 0x44
 80064c8:	210a      	movs	r1, #10
 80064ca:	4628      	mov	r0, r5
 80064cc:	f00f fc59 	bl	8015d82 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph1.setGraphAreaPadding(0, 0, 0, 0);
 80064d0:	9600      	str	r6, [sp, #0]
 80064d2:	4633      	mov	r3, r6
 80064d4:	4632      	mov	r2, r6
 80064d6:	4631      	mov	r1, r6
 80064d8:	4628      	mov	r0, r5
 80064da:	f00f fb55 	bl	8015b88 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
        return int2scaled(i, yScale);
 80064de:	f8d4 20cc 	ldr.w	r2, [r4, #204]	@ 0xcc
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80064e2:	f8d4 3098 	ldr.w	r3, [r4, #152]	@ 0x98
 80064e6:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 80064ea:	f44f 71c8 	mov.w	r1, #400	@ 0x190
 80064ee:	fb01 f202 	mul.w	r2, r1, r2
 80064f2:	4631      	mov	r1, r6
 80064f4:	4628      	mov	r0, r5
 80064f6:	4798      	blx	r3
 80064f8:	f8df 81a0 	ldr.w	r8, [pc, #416]	@ 800669c <_ZN15Screen1ViewBaseC1Ev+0x354>
        color = newColor;
 80064fc:	f8c4 83f0 	str.w	r8, [r4, #1008]	@ 0x3f0
        setIntervalScaled(abs(interval) * dataScale);
 8006500:	201b      	movs	r0, #27
 8006502:	f7ff ff1d 	bl	8006340 <_ZN8touchgfx3absIiEET_S1_>
 8006506:	f8d4 a3f4 	ldr.w	sl, [r4, #1012]	@ 0x3f4
        gridInterval = abs(interval);
 800650a:	fb0a f000 	mul.w	r0, sl, r0
 800650e:	f7ff ff17 	bl	8006340 <_ZN8touchgfx3absIiEET_S1_>
 8006512:	f8c4 03f8 	str.w	r0, [r4, #1016]	@ 0x3f8
        lineWidth = width;
 8006516:	2601      	movs	r6, #1
 8006518:	f884 63fc 	strb.w	r6, [r4, #1020]	@ 0x3fc
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800651c:	4632      	mov	r2, r6
 800651e:	4651      	mov	r1, sl
 8006520:	f00f fce2 	bl	8015ee8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 8006524:	f8c4 03f8 	str.w	r0, [r4, #1016]	@ 0x3f8
        dataScale = scale;
 8006528:	f8c4 63f4 	str.w	r6, [r4, #1012]	@ 0x3f4
    dynamicGraph1.addGraphElement(dynamicGraph1MajorXAxisGrid);
 800652c:	4649      	mov	r1, r9
 800652e:	4628      	mov	r0, r5
 8006530:	f00f fb35 	bl	8015b9e <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        color = newColor;
 8006534:	f8c4 8430 	str.w	r8, [r4, #1072]	@ 0x430
        setIntervalScaled(abs(interval) * dataScale);
 8006538:	2028      	movs	r0, #40	@ 0x28
 800653a:	f7ff ff01 	bl	8006340 <_ZN8touchgfx3absIiEET_S1_>
 800653e:	f8d4 9434 	ldr.w	r9, [r4, #1076]	@ 0x434
        gridInterval = abs(interval);
 8006542:	fb09 f000 	mul.w	r0, r9, r0
 8006546:	f7ff fefb 	bl	8006340 <_ZN8touchgfx3absIiEET_S1_>
 800654a:	f8c4 0438 	str.w	r0, [r4, #1080]	@ 0x438
        lineWidth = width;
 800654e:	f884 643c 	strb.w	r6, [r4, #1084]	@ 0x43c
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8006552:	4632      	mov	r2, r6
 8006554:	4649      	mov	r1, r9
 8006556:	f00f fcc7 	bl	8015ee8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800655a:	f8c4 0438 	str.w	r0, [r4, #1080]	@ 0x438
        dataScale = scale;
 800655e:	f8c4 6434 	str.w	r6, [r4, #1076]	@ 0x434
    dynamicGraph1.addGraphElement(dynamicGraph1MajorYAxisGrid);
 8006562:	4659      	mov	r1, fp
 8006564:	4628      	mov	r0, r5
 8006566:	f00f fb1a 	bl	8015b9e <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        setIntervalScaled(AbstractDataGraph::int2scaled(interval, dataScale));
 800656a:	f8d4 a474 	ldr.w	sl, [r4, #1140]	@ 0x474
        return i * scale;
 800656e:	f04f 0b32 	mov.w	fp, #50	@ 0x32
        labelInterval = abs(interval);
 8006572:	fb0b f00a 	mul.w	r0, fp, sl
 8006576:	f7ff fee3 	bl	8006340 <_ZN8touchgfx3absIiEET_S1_>
 800657a:	f8c4 0478 	str.w	r0, [r4, #1144]	@ 0x478
        : typedTextId(id)
 800657e:	f8df 9120 	ldr.w	r9, [pc, #288]	@ 80066a0 <_ZN15Screen1ViewBaseC1Ev+0x358>
 8006582:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 8006586:	2309      	movs	r3, #9
 8006588:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
class TypedText
 800658c:	f8a4 3480 	strh.w	r3, [r4, #1152]	@ 0x480
        color = newColor;
 8006590:	f8c4 8470 	str.w	r8, [r4, #1136]	@ 0x470
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8006594:	4632      	mov	r2, r6
 8006596:	4651      	mov	r1, sl
 8006598:	f00f fca6 	bl	8015ee8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800659c:	f8c4 0478 	str.w	r0, [r4, #1144]	@ 0x478
        dataScale = scale;
 80065a0:	f8c4 6474 	str.w	r6, [r4, #1140]	@ 0x474
    dynamicGraph1.addBottomElement(dynamicGraph1MajorXAxisLabel);
 80065a4:	9905      	ldr	r1, [sp, #20]
 80065a6:	4628      	mov	r0, r5
 80065a8:	f00f fb1d 	bl	8015be6 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>
        setIntervalScaled(AbstractDataGraph::int2scaled(interval, dataScale));
 80065ac:	f8d4 a4c0 	ldr.w	sl, [r4, #1216]	@ 0x4c0
        labelInterval = abs(interval);
 80065b0:	fb0b f00a 	mul.w	r0, fp, sl
 80065b4:	f7ff fec4 	bl	8006340 <_ZN8touchgfx3absIiEET_S1_>
 80065b8:	f8c4 04c4 	str.w	r0, [r4, #1220]	@ 0x4c4
        : typedTextId(id)
 80065bc:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
 80065c0:	230d      	movs	r3, #13
 80065c2:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
class TypedText
 80065c6:	f8a4 34cc 	strh.w	r3, [r4, #1228]	@ 0x4cc
 80065ca:	f8c4 84bc 	str.w	r8, [r4, #1212]	@ 0x4bc
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 80065ce:	4632      	mov	r2, r6
 80065d0:	4651      	mov	r1, sl
 80065d2:	f00f fc89 	bl	8015ee8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 80065d6:	f8c4 04c4 	str.w	r0, [r4, #1220]	@ 0x4c4
        dataScale = scale;
 80065da:	f8c4 64c0 	str.w	r6, [r4, #1216]	@ 0x4c0
    dynamicGraph1.addLeftElement(dynamicGraph1MajorYAxisLabel);
 80065de:	9906      	ldr	r1, [sp, #24]
 80065e0:	4628      	mov	r0, r5
 80065e2:	f00f faee 	bl	8015bc2 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
    dynamicGraph1Line1Painter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 80065e6:	f04f 417f 	mov.w	r1, #4278190080	@ 0xff000000
 80065ea:	f8dd 800c 	ldr.w	r8, [sp, #12]
 80065ee:	4640      	mov	r0, r8
 80065f0:	f7ff fe52 	bl	8006298 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
        canvasPainter = &painter;
 80065f4:	f8c4 8504 	str.w	r8, [r4, #1284]	@ 0x504
     *
     * @see getLineWidth
     */
    FORCE_INLINE_FUNCTION void setLineWidth(uint8_t width)
    {
        lineWidth = width;
 80065f8:	2303      	movs	r3, #3
 80065fa:	f884 3508 	strb.w	r3, [r4, #1288]	@ 0x508
    dynamicGraph1.addGraphElement(dynamicGraph1Line1);
 80065fe:	9907      	ldr	r1, [sp, #28]
 8006600:	4628      	mov	r0, r5
 8006602:	f00f facc 	bl	8015b9e <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
 8006606:	4629      	mov	r1, r5
 8006608:	9d04      	ldr	r5, [sp, #16]
 800660a:	4628      	mov	r0, r5
 800660c:	f00c f98c 	bl	8012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(672, 20);
 8006610:	2214      	movs	r2, #20
 8006612:	f44f 7128 	mov.w	r1, #672	@ 0x2a0
 8006616:	4638      	mov	r0, r7
 8006618:	f7ff fd38 	bl	800608c <_ZN8touchgfx8Drawable5setXYEss>
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 800661c:	f8ad 6040 	strh.w	r6, [sp, #64]	@ 0x40
 8006620:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_ACTION_ID));
 8006624:	aa11      	add	r2, sp, #68	@ 0x44
 8006626:	a910      	add	r1, sp, #64	@ 0x40
 8006628:	4638      	mov	r0, r7
 800662a:	f011 fc0a 	bl	8017e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        : typedTextId(id)
 800662e:	f8cd 9048 	str.w	r9, [sp, #72]	@ 0x48
 8006632:	230a      	movs	r3, #10
 8006634:	f8ad 304c 	strh.w	r3, [sp, #76]	@ 0x4c
class TypedText
 8006638:	f8a4 3558 	strh.w	r3, [r4, #1368]	@ 0x558
        updateTextPosition();
 800663c:	4638      	mov	r0, r7
 800663e:	f7ff fe3b 	bl	80062b8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8006642:	f04f 33ff 	mov.w	r3, #4294967295
 8006646:	f8c4 355c 	str.w	r3, [r4, #1372]	@ 0x55c
        colorPressed = col;
 800664a:	f8c4 3560 	str.w	r3, [r4, #1376]	@ 0x560
    buttonWithLabel2.setAction(buttonCallback);
 800664e:	f504 5351 	add.w	r3, r4, #13376	@ 0x3440
 8006652:	3308      	adds	r3, #8
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8006654:	f8c4 3548 	str.w	r3, [r4, #1352]	@ 0x548
 8006658:	4639      	mov	r1, r7
 800665a:	4628      	mov	r0, r5
 800665c:	f00c f964 	bl	8012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006660:	4620      	mov	r0, r4
 8006662:	b015      	add	sp, #84	@ 0x54
 8006664:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006668:	08031300 	.word	0x08031300
 800666c:	080314e4 	.word	0x080314e4
 8006670:	08032af8 	.word	0x08032af8
 8006674:	08031334 	.word	0x08031334
 8006678:	080310f0 	.word	0x080310f0
 800667c:	080311a8 	.word	0x080311a8
 8006680:	08032918 	.word	0x08032918
 8006684:	080329b8 	.word	0x080329b8
 8006688:	08030fec 	.word	0x08030fec
 800668c:	080327e0 	.word	0x080327e0
 8006690:	08006077 	.word	0x08006077
 8006694:	080312e8 	.word	0x080312e8
 8006698:	080314cc 	.word	0x080314cc
 800669c:	ff1497c5 	.word	0xff1497c5
 80066a0:	08030688 	.word	0x08030688

080066a4 <_ZN8touchgfx4ViewI16Screen2PresenterED1Ev>:
class View : public Screen
 80066a4:	4a04      	ldr	r2, [pc, #16]	@ (80066b8 <_ZN8touchgfx4ViewI16Screen2PresenterED1Ev+0x14>)
 80066a6:	6002      	str	r2, [r0, #0]
    {
 80066a8:	4a04      	ldr	r2, [pc, #16]	@ (80066bc <_ZN8touchgfx4ViewI16Screen2PresenterED1Ev+0x18>)
 80066aa:	6002      	str	r2, [r0, #0]
 80066ac:	4a04      	ldr	r2, [pc, #16]	@ (80066c0 <_ZN8touchgfx4ViewI16Screen2PresenterED1Ev+0x1c>)
 80066ae:	6042      	str	r2, [r0, #4]
    {
 80066b0:	4a04      	ldr	r2, [pc, #16]	@ (80066c4 <_ZN8touchgfx4ViewI16Screen2PresenterED1Ev+0x20>)
 80066b2:	6042      	str	r2, [r0, #4]
 80066b4:	4770      	bx	lr
 80066b6:	bf00      	nop
 80066b8:	08031518 	.word	0x08031518
 80066bc:	0803322c 	.word	0x0803322c
 80066c0:	080321ec 	.word	0x080321ec
 80066c4:	0803310c 	.word	0x0803310c

080066c8 <_ZN15Screen2ViewBaseD1Ev>:
    buttonWithLabel1_1.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabel1_1.setAction(buttonCallback);
    add(buttonWithLabel1_1);
}

Screen2ViewBase::~Screen2ViewBase()
 80066c8:	b4f0      	push	{r4, r5, r6, r7}
 80066ca:	4a26      	ldr	r2, [pc, #152]	@ (8006764 <_ZN15Screen2ViewBaseD1Ev+0x9c>)
 80066cc:	6002      	str	r2, [r0, #0]
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80066ce:	4a26      	ldr	r2, [pc, #152]	@ (8006768 <_ZN15Screen2ViewBaseD1Ev+0xa0>)
 80066d0:	f8c0 219c 	str.w	r2, [r0, #412]	@ 0x19c
    }
 80066d4:	4a25      	ldr	r2, [pc, #148]	@ (800676c <_ZN15Screen2ViewBaseD1Ev+0xa4>)
 80066d6:	f8c0 219c 	str.w	r2, [r0, #412]	@ 0x19c
class ButtonWithLabel : public Button
 80066da:	4f25      	ldr	r7, [pc, #148]	@ (8006770 <_ZN15Screen2ViewBaseD1Ev+0xa8>)
 80066dc:	f8c0 7154 	str.w	r7, [r0, #340]	@ 0x154
    {
 80066e0:	4e24      	ldr	r6, [pc, #144]	@ (8006774 <_ZN15Screen2ViewBaseD1Ev+0xac>)
 80066e2:	f8c0 6188 	str.w	r6, [r0, #392]	@ 0x188
 80066e6:	4d24      	ldr	r5, [pc, #144]	@ (8006778 <_ZN15Screen2ViewBaseD1Ev+0xb0>)
 80066e8:	f8c0 5154 	str.w	r5, [r0, #340]	@ 0x154
class AbstractButton : public Widget
 80066ec:	4c23      	ldr	r4, [pc, #140]	@ (800677c <_ZN15Screen2ViewBaseD1Ev+0xb4>)
 80066ee:	f8c0 4154 	str.w	r4, [r0, #340]	@ 0x154
 80066f2:	4923      	ldr	r1, [pc, #140]	@ (8006780 <_ZN15Screen2ViewBaseD1Ev+0xb8>)
 80066f4:	f8c0 1154 	str.w	r1, [r0, #340]	@ 0x154
 80066f8:	4a22      	ldr	r2, [pc, #136]	@ (8006784 <_ZN15Screen2ViewBaseD1Ev+0xbc>)
 80066fa:	f8c0 2154 	str.w	r2, [r0, #340]	@ 0x154
 80066fe:	f8c0 710c 	str.w	r7, [r0, #268]	@ 0x10c
 8006702:	f8c0 6140 	str.w	r6, [r0, #320]	@ 0x140
 8006706:	f8c0 510c 	str.w	r5, [r0, #268]	@ 0x10c
 800670a:	f8c0 410c 	str.w	r4, [r0, #268]	@ 0x10c
 800670e:	f8c0 110c 	str.w	r1, [r0, #268]	@ 0x10c
 8006712:	f8c0 210c 	str.w	r2, [r0, #268]	@ 0x10c
 8006716:	f8c0 70c4 	str.w	r7, [r0, #196]	@ 0xc4
 800671a:	f8c0 60f8 	str.w	r6, [r0, #248]	@ 0xf8
 800671e:	f8c0 50c4 	str.w	r5, [r0, #196]	@ 0xc4
 8006722:	f8c0 40c4 	str.w	r4, [r0, #196]	@ 0xc4
 8006726:	f8c0 10c4 	str.w	r1, [r0, #196]	@ 0xc4
 800672a:	f8c0 20c4 	str.w	r2, [r0, #196]	@ 0xc4
 * algorithm used. The rendering algorithm can be changed dynamically. Please note that
 * scaling images is done at runtime and may require a lot of calculations.
 *
 * @note Note that this widget does not support 1 bit per pixel color depth.
 */
class ScalableImage : public Image
 800672e:	4c16      	ldr	r4, [pc, #88]	@ (8006788 <_ZN15Screen2ViewBaseD1Ev+0xc0>)
 8006730:	f8c0 4098 	str.w	r4, [r0, #152]	@ 0x98
 * is handled by the Image Converter as part of compiling the project. Each image is
 * assigned a unique BITMAP identifier which.
 *
 * @see Bitmap
 */
class Image : public Widget
 8006734:	4c15      	ldr	r4, [pc, #84]	@ (800678c <_ZN15Screen2ViewBaseD1Ev+0xc4>)
 8006736:	f8c0 4098 	str.w	r4, [r0, #152]	@ 0x98
 800673a:	f8c0 1098 	str.w	r1, [r0, #152]	@ 0x98
 800673e:	f8c0 2098 	str.w	r2, [r0, #152]	@ 0x98
class Box : public Widget
 8006742:	4c13      	ldr	r4, [pc, #76]	@ (8006790 <_ZN15Screen2ViewBaseD1Ev+0xc8>)
 8006744:	66c4      	str	r4, [r0, #108]	@ 0x6c
 8006746:	66c1      	str	r1, [r0, #108]	@ 0x6c
 8006748:	66c2      	str	r2, [r0, #108]	@ 0x6c
 800674a:	6404      	str	r4, [r0, #64]	@ 0x40
 800674c:	6401      	str	r1, [r0, #64]	@ 0x40
 800674e:	6402      	str	r2, [r0, #64]	@ 0x40
 8006750:	4910      	ldr	r1, [pc, #64]	@ (8006794 <_ZN15Screen2ViewBaseD1Ev+0xcc>)
 8006752:	6001      	str	r1, [r0, #0]
 8006754:	4910      	ldr	r1, [pc, #64]	@ (8006798 <_ZN15Screen2ViewBaseD1Ev+0xd0>)
 8006756:	6001      	str	r1, [r0, #0]
 8006758:	4910      	ldr	r1, [pc, #64]	@ (800679c <_ZN15Screen2ViewBaseD1Ev+0xd4>)
 800675a:	6041      	str	r1, [r0, #4]
 800675c:	6042      	str	r2, [r0, #4]
{

}
 800675e:	bcf0      	pop	{r4, r5, r6, r7}
 8006760:	4770      	bx	lr
 8006762:	bf00      	nop
 8006764:	08031564 	.word	0x08031564
 8006768:	0803154c 	.word	0x0803154c
 800676c:	080312e8 	.word	0x080312e8
 8006770:	08032fdc 	.word	0x08032fdc
 8006774:	08030688 	.word	0x08030688
 8006778:	08032e6c 	.word	0x08032e6c
 800677c:	08032c90 	.word	0x08032c90
 8006780:	080302c8 	.word	0x080302c8
 8006784:	0803310c 	.word	0x0803310c
 8006788:	08032d00 	.word	0x08032d00
 800678c:	08032f70 	.word	0x08032f70
 8006790:	08032e04 	.word	0x08032e04
 8006794:	08031518 	.word	0x08031518
 8006798:	0803322c 	.word	0x0803322c
 800679c:	080321ec 	.word	0x080321ec

080067a0 <_ZN15Screen2ViewBase11setupScreenEv>:

void Screen2ViewBase::setupScreen()
{

}
 80067a0:	4770      	bx	lr
	...

080067a4 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80067a4:	4a02      	ldr	r2, [pc, #8]	@ (80067b0 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvED1Ev+0xc>)
 80067a6:	6002      	str	r2, [r0, #0]
    }
 80067a8:	4a02      	ldr	r2, [pc, #8]	@ (80067b4 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvED1Ev+0x10>)
 80067aa:	6002      	str	r2, [r0, #0]
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80067ac:	4770      	bx	lr
 80067ae:	bf00      	nop
 80067b0:	0803154c 	.word	0x0803154c
 80067b4:	080312e8 	.word	0x080312e8

080067b8 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80067b8:	b510      	push	{r4, lr}
 80067ba:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80067bc:	6844      	ldr	r4, [r0, #4]
 80067be:	68c2      	ldr	r2, [r0, #12]
 80067c0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80067c4:	f012 0f01 	tst.w	r2, #1
 80067c8:	d102      	bne.n	80067d0 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x18>
 80067ca:	689b      	ldr	r3, [r3, #8]
 80067cc:	4798      	blx	r3
    }
 80067ce:	bd10      	pop	{r4, pc}
 80067d0:	ea4f 0c62 	mov.w	ip, r2, asr #1
        (pobject->*pmemfun)(t1);
 80067d4:	f854 200c 	ldr.w	r2, [r4, ip]
 80067d8:	689b      	ldr	r3, [r3, #8]
 80067da:	58d3      	ldr	r3, [r2, r3]
 80067dc:	e7f6      	b.n	80067cc <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x14>

080067de <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80067de:	6843      	ldr	r3, [r0, #4]
 80067e0:	b14b      	cbz	r3, 80067f6 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x18>
 80067e2:	6883      	ldr	r3, [r0, #8]
 80067e4:	b10b      	cbz	r3, 80067ea <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
 80067e6:	2001      	movs	r0, #1
 80067e8:	4770      	bx	lr
 80067ea:	68c3      	ldr	r3, [r0, #12]
 80067ec:	f013 0f01 	tst.w	r3, #1
 80067f0:	d003      	beq.n	80067fa <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x1c>
 80067f2:	2001      	movs	r0, #1
 80067f4:	4770      	bx	lr
 80067f6:	2000      	movs	r0, #0
 80067f8:	4770      	bx	lr
 80067fa:	2000      	movs	r0, #0
    }
 80067fc:	4770      	bx	lr
	...

08006800 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006800:	b510      	push	{r4, lr}
 8006802:	4604      	mov	r4, r0
 8006804:	4b04      	ldr	r3, [pc, #16]	@ (8006818 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvED0Ev+0x18>)
 8006806:	6003      	str	r3, [r0, #0]
    }
 8006808:	4b04      	ldr	r3, [pc, #16]	@ (800681c <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvED0Ev+0x1c>)
 800680a:	6003      	str	r3, [r0, #0]
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800680c:	2110      	movs	r1, #16
 800680e:	f027 f84e 	bl	802d8ae <_ZdlPvj>
 8006812:	4620      	mov	r0, r4
 8006814:	bd10      	pop	{r4, pc}
 8006816:	bf00      	nop
 8006818:	0803154c 	.word	0x0803154c
 800681c:	080312e8 	.word	0x080312e8

08006820 <_ZN8touchgfx4ViewI16Screen2PresenterED0Ev>:
 8006820:	b510      	push	{r4, lr}
 8006822:	4604      	mov	r4, r0
 8006824:	4b06      	ldr	r3, [pc, #24]	@ (8006840 <_ZN8touchgfx4ViewI16Screen2PresenterED0Ev+0x20>)
 8006826:	6003      	str	r3, [r0, #0]
 8006828:	4b06      	ldr	r3, [pc, #24]	@ (8006844 <_ZN8touchgfx4ViewI16Screen2PresenterED0Ev+0x24>)
 800682a:	6003      	str	r3, [r0, #0]
 800682c:	4b06      	ldr	r3, [pc, #24]	@ (8006848 <_ZN8touchgfx4ViewI16Screen2PresenterED0Ev+0x28>)
 800682e:	6043      	str	r3, [r0, #4]
 8006830:	4b06      	ldr	r3, [pc, #24]	@ (800684c <_ZN8touchgfx4ViewI16Screen2PresenterED0Ev+0x2c>)
 8006832:	6043      	str	r3, [r0, #4]
 8006834:	2140      	movs	r1, #64	@ 0x40
 8006836:	f027 f83a 	bl	802d8ae <_ZdlPvj>
 800683a:	4620      	mov	r0, r4
 800683c:	bd10      	pop	{r4, pc}
 800683e:	bf00      	nop
 8006840:	08031518 	.word	0x08031518
 8006844:	0803322c 	.word	0x0803322c
 8006848:	080321ec 	.word	0x080321ec
 800684c:	0803310c 	.word	0x0803310c

08006850 <_ZN15Screen2ViewBaseD0Ev>:
Screen2ViewBase::~Screen2ViewBase()
 8006850:	b510      	push	{r4, lr}
 8006852:	4604      	mov	r4, r0
}
 8006854:	f7ff ff38 	bl	80066c8 <_ZN15Screen2ViewBaseD1Ev>
 8006858:	f44f 71d6 	mov.w	r1, #428	@ 0x1ac
 800685c:	4620      	mov	r0, r4
 800685e:	f027 f826 	bl	802d8ae <_ZdlPvj>
 8006862:	4620      	mov	r0, r4
 8006864:	bd10      	pop	{r4, pc}

08006866 <_ZN15Screen2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006866:	b538      	push	{r3, r4, r5, lr}
 8006868:	4604      	mov	r4, r0
 800686a:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 800686c:	f100 03c4 	add.w	r3, r0, #196	@ 0xc4
 8006870:	428b      	cmp	r3, r1
 8006872:	d008      	beq.n	8006886 <_ZN15Screen2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x20>
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Screen1
        //Go to Screen1 with screen transition towards South
        application().gotoScreen1ScreenCoverTransitionSouth();
    }
    if (&src == &buttonWithLabel1_2)
 8006874:	f504 7386 	add.w	r3, r4, #268	@ 0x10c
 8006878:	42ab      	cmp	r3, r5
 800687a:	d009      	beq.n	8006890 <_ZN15Screen2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2a>
        //Interaction2
        //When buttonWithLabel1_2 clicked change screen to Screen3
        //Go to Screen3 with screen transition towards South
        application().gotoScreen3ScreenCoverTransitionSouth();
    }
    if (&src == &buttonWithLabel1_1)
 800687c:	f504 74aa 	add.w	r4, r4, #340	@ 0x154
 8006880:	42ac      	cmp	r4, r5
 8006882:	d00a      	beq.n	800689a <_ZN15Screen2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x34>
        //Interaction3
        //When buttonWithLabel1_1 clicked change screen to Screen4
        //Go to Screen4 with screen transition towards South
        application().gotoScreen4ScreenCoverTransitionSouth();
    }
}
 8006884:	bd38      	pop	{r3, r4, r5, pc}
    virtual ~Screen2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006886:	f014 f8dd 	bl	801aa44 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoScreen1ScreenCoverTransitionSouth();
 800688a:	f7fe f843 	bl	8004914 <_ZN23FrontendApplicationBase37gotoScreen1ScreenCoverTransitionSouthEv>
 800688e:	e7f1      	b.n	8006874 <_ZN15Screen2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
 8006890:	f014 f8d8 	bl	801aa44 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoScreen3ScreenCoverTransitionSouth();
 8006894:	f7fe f868 	bl	8004968 <_ZN23FrontendApplicationBase37gotoScreen3ScreenCoverTransitionSouthEv>
 8006898:	e7f0      	b.n	800687c <_ZN15Screen2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
 800689a:	f014 f8d3 	bl	801aa44 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoScreen4ScreenCoverTransitionSouth();
 800689e:	f7fe f88d 	bl	80049bc <_ZN23FrontendApplicationBase37gotoScreen4ScreenCoverTransitionSouthEv>
}
 80068a2:	e7ef      	b.n	8006884 <_ZN15Screen2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1e>

080068a4 <_ZN15Screen2ViewBaseC1Ev>:
Screen2ViewBase::Screen2ViewBase() :
 80068a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80068a8:	b095      	sub	sp, #84	@ 0x54
 80068aa:	4604      	mov	r4, r0
        : presenter(0)
 80068ac:	f016 f9e6 	bl	801cc7c <_ZN8touchgfx6ScreenC1Ev>
 80068b0:	4b79      	ldr	r3, [pc, #484]	@ (8006a98 <_ZN15Screen2ViewBaseC1Ev+0x1f4>)
 80068b2:	6023      	str	r3, [r4, #0]
 80068b4:	2500      	movs	r5, #0
 80068b6:	63e5      	str	r5, [r4, #60]	@ 0x3c
    buttonCallback(this, &Screen2ViewBase::buttonCallbackHandler)
 80068b8:	4626      	mov	r6, r4
 80068ba:	4b78      	ldr	r3, [pc, #480]	@ (8006a9c <_ZN15Screen2ViewBaseC1Ev+0x1f8>)
 80068bc:	f846 3b40 	str.w	r3, [r6], #64
 80068c0:	4630      	mov	r0, r6
 80068c2:	f7ff fc17 	bl	80060f4 <_ZN8touchgfx3BoxC1Ev>
 80068c6:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
 80068ca:	9301      	str	r3, [sp, #4]
 80068cc:	4618      	mov	r0, r3
 80068ce:	f7ff fc11 	bl	80060f4 <_ZN8touchgfx3BoxC1Ev>
 80068d2:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 80068d6:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80068da:	f8ad 3010 	strh.w	r3, [sp, #16]
 80068de:	a904      	add	r1, sp, #16
 80068e0:	4640      	mov	r0, r8
 80068e2:	f010 fd0f 	bl	8017304 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80068e6:	f104 0bc4 	add.w	fp, r4, #196	@ 0xc4
 80068ea:	4658      	mov	r0, fp
 80068ec:	f011 fd12 	bl	8018314 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80068f0:	f504 7a86 	add.w	sl, r4, #268	@ 0x10c
 80068f4:	4650      	mov	r0, sl
 80068f6:	f011 fd0d 	bl	8018314 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80068fa:	f504 79aa 	add.w	r9, r4, #340	@ 0x154
 80068fe:	4648      	mov	r0, r9
 8006900:	f011 fd08 	bl	8018314 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006904:	4b66      	ldr	r3, [pc, #408]	@ (8006aa0 <_ZN15Screen2ViewBaseC1Ev+0x1fc>)
 8006906:	9305      	str	r3, [sp, #20]
 8006908:	9506      	str	r5, [sp, #24]
 800690a:	ab02      	add	r3, sp, #8
 800690c:	aa05      	add	r2, sp, #20
 800690e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8006912:	e883 0003 	stmia.w	r3, {r0, r1}
class GenericCallback<T1, void, void>
 8006916:	4a63      	ldr	r2, [pc, #396]	@ (8006aa4 <_ZN15Screen2ViewBaseC1Ev+0x200>)
 8006918:	f8c4 219c 	str.w	r2, [r4, #412]	@ 0x19c
        : pobject(pObject), pmemfun(pmemfun_1)
 800691c:	4a62      	ldr	r2, [pc, #392]	@ (8006aa8 <_ZN15Screen2ViewBaseC1Ev+0x204>)
 800691e:	f8c4 219c 	str.w	r2, [r4, #412]	@ 0x19c
 8006922:	f8c4 41a0 	str.w	r4, [r4, #416]	@ 0x1a0
 8006926:	f504 72d2 	add.w	r2, r4, #420	@ 0x1a4
 800692a:	e882 0003 	stmia.w	r2, {r0, r1}
        setXY(x, y);
 800692e:	462a      	mov	r2, r5
 8006930:	4630      	mov	r0, r6
 8006932:	f7ff fbab 	bl	800608c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8006936:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 800693a:	f44f 7148 	mov.w	r1, #800	@ 0x320
 800693e:	4630      	mov	r0, r6
 8006940:	f7ff fbb0 	bl	80060a4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8006944:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
        color = newColor;
 8006948:	66a3      	str	r3, [r4, #104]	@ 0x68
        container.add(d);
 800694a:	1d27      	adds	r7, r4, #4
 800694c:	4631      	mov	r1, r6
 800694e:	4638      	mov	r0, r7
 8006950:	f00b ffea 	bl	8012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setXY(x, y);
 8006954:	462a      	mov	r2, r5
 8006956:	4629      	mov	r1, r5
 8006958:	9e01      	ldr	r6, [sp, #4]
 800695a:	4630      	mov	r0, r6
 800695c:	f7ff fb96 	bl	800608c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8006960:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8006964:	f44f 7148 	mov.w	r1, #800	@ 0x320
 8006968:	9601      	str	r6, [sp, #4]
 800696a:	4630      	mov	r0, r6
 800696c:	f7ff fb9a 	bl	80060a4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8006970:	f04f 36ff 	mov.w	r6, #4294967295
 8006974:	f8c4 6094 	str.w	r6, [r4, #148]	@ 0x94
 8006978:	9901      	ldr	r1, [sp, #4]
 800697a:	4638      	mov	r0, r7
 800697c:	f00b ffd4 	bl	8012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006980:	2303      	movs	r3, #3
 8006982:	f8ad 301c 	strh.w	r3, [sp, #28]
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_IMAGE_ID));
 8006986:	a907      	add	r1, sp, #28
 8006988:	4640      	mov	r0, r8
 800698a:	f011 fb8b 	bl	80180a4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 800698e:	462a      	mov	r2, r5
 8006990:	210d      	movs	r1, #13
 8006992:	4640      	mov	r0, r8
 8006994:	f7ff fb7a 	bl	800608c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8006998:	f240 1223 	movw	r2, #291	@ 0x123
 800699c:	f240 3113 	movw	r1, #787	@ 0x313
 80069a0:	4640      	mov	r0, r8
 80069a2:	f7ff fb7f 	bl	80060a4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80069a6:	4629      	mov	r1, r5
 80069a8:	4640      	mov	r0, r8
 80069aa:	f010 fc66 	bl	801727a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80069ae:	4641      	mov	r1, r8
 80069b0:	4638      	mov	r0, r7
 80069b2:	f00b ffb9 	bl	8012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(305, 321);
 80069b6:	f240 1241 	movw	r2, #321	@ 0x141
 80069ba:	f240 1131 	movw	r1, #305	@ 0x131
 80069be:	4658      	mov	r0, fp
 80069c0:	f7ff fb64 	bl	800608c <_ZN8touchgfx8Drawable5setXYEss>
 80069c4:	f8ad 5020 	strh.w	r5, [sp, #32]
 80069c8:	f8ad 5024 	strh.w	r5, [sp, #36]	@ 0x24
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUNDED_NORMAL_ID));
 80069cc:	aa09      	add	r2, sp, #36	@ 0x24
 80069ce:	a908      	add	r1, sp, #32
 80069d0:	4658      	mov	r0, fp
 80069d2:	f011 fa36 	bl	8017e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        : typedTextId(id)
 80069d6:	4b35      	ldr	r3, [pc, #212]	@ (8006aac <_ZN15Screen2ViewBaseC1Ev+0x208>)
 80069d8:	930a      	str	r3, [sp, #40]	@ 0x28
 80069da:	230c      	movs	r3, #12
 80069dc:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
class TypedText
 80069e0:	f8a4 30fc 	strh.w	r3, [r4, #252]	@ 0xfc
        updateTextPosition();
 80069e4:	4658      	mov	r0, fp
 80069e6:	f7ff fc67 	bl	80062b8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 80069ea:	f8c4 6100 	str.w	r6, [r4, #256]	@ 0x100
        colorPressed = col;
 80069ee:	f8c4 6104 	str.w	r6, [r4, #260]	@ 0x104
    buttonWithLabel1.setAction(buttonCallback);
 80069f2:	f504 78ce 	add.w	r8, r4, #412	@ 0x19c
        action = &callback;
 80069f6:	f8c4 80ec 	str.w	r8, [r4, #236]	@ 0xec
 80069fa:	4659      	mov	r1, fp
 80069fc:	4638      	mov	r0, r7
 80069fe:	f00b ff93 	bl	8012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1_2.setXY(73, 321);
 8006a02:	f240 1241 	movw	r2, #321	@ 0x141
 8006a06:	2149      	movs	r1, #73	@ 0x49
 8006a08:	4650      	mov	r0, sl
 8006a0a:	f7ff fb3f 	bl	800608c <_ZN8touchgfx8Drawable5setXYEss>
 8006a0e:	f8ad 5030 	strh.w	r5, [sp, #48]	@ 0x30
 8006a12:	f8ad 5034 	strh.w	r5, [sp, #52]	@ 0x34
    buttonWithLabel1_2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUNDED_NORMAL_ID));
 8006a16:	aa0d      	add	r2, sp, #52	@ 0x34
 8006a18:	a90c      	add	r1, sp, #48	@ 0x30
 8006a1a:	4650      	mov	r0, sl
 8006a1c:	f011 fa11 	bl	8017e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        : typedTextId(id)
 8006a20:	4b22      	ldr	r3, [pc, #136]	@ (8006aac <_ZN15Screen2ViewBaseC1Ev+0x208>)
 8006a22:	930e      	str	r3, [sp, #56]	@ 0x38
 8006a24:	2307      	movs	r3, #7
 8006a26:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
class TypedText
 8006a2a:	f8a4 3144 	strh.w	r3, [r4, #324]	@ 0x144
        updateTextPosition();
 8006a2e:	4650      	mov	r0, sl
 8006a30:	f7ff fc42 	bl	80062b8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8006a34:	f8c4 6148 	str.w	r6, [r4, #328]	@ 0x148
        colorPressed = col;
 8006a38:	f8c4 614c 	str.w	r6, [r4, #332]	@ 0x14c
 8006a3c:	f8c4 8134 	str.w	r8, [r4, #308]	@ 0x134
 8006a40:	4651      	mov	r1, sl
 8006a42:	4638      	mov	r0, r7
 8006a44:	f00b ff70 	bl	8012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1_1.setXY(541, 321);
 8006a48:	f240 1241 	movw	r2, #321	@ 0x141
 8006a4c:	f240 211d 	movw	r1, #541	@ 0x21d
 8006a50:	4648      	mov	r0, r9
 8006a52:	f7ff fb1b 	bl	800608c <_ZN8touchgfx8Drawable5setXYEss>
 8006a56:	f8ad 5040 	strh.w	r5, [sp, #64]	@ 0x40
 8006a5a:	f8ad 5044 	strh.w	r5, [sp, #68]	@ 0x44
    buttonWithLabel1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUNDED_NORMAL_ID));
 8006a5e:	aa11      	add	r2, sp, #68	@ 0x44
 8006a60:	a910      	add	r1, sp, #64	@ 0x40
 8006a62:	4648      	mov	r0, r9
 8006a64:	f011 f9ed 	bl	8017e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        : typedTextId(id)
 8006a68:	4b10      	ldr	r3, [pc, #64]	@ (8006aac <_ZN15Screen2ViewBaseC1Ev+0x208>)
 8006a6a:	9312      	str	r3, [sp, #72]	@ 0x48
 8006a6c:	230b      	movs	r3, #11
 8006a6e:	f8ad 304c 	strh.w	r3, [sp, #76]	@ 0x4c
class TypedText
 8006a72:	f8a4 318c 	strh.w	r3, [r4, #396]	@ 0x18c
        updateTextPosition();
 8006a76:	4648      	mov	r0, r9
 8006a78:	f7ff fc1e 	bl	80062b8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8006a7c:	f8c4 6190 	str.w	r6, [r4, #400]	@ 0x190
        colorPressed = col;
 8006a80:	f8c4 6194 	str.w	r6, [r4, #404]	@ 0x194
 8006a84:	f8c4 817c 	str.w	r8, [r4, #380]	@ 0x17c
 8006a88:	4649      	mov	r1, r9
 8006a8a:	4638      	mov	r0, r7
 8006a8c:	f00b ff4c 	bl	8012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006a90:	4620      	mov	r0, r4
 8006a92:	b015      	add	sp, #84	@ 0x54
 8006a94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006a98:	08031518 	.word	0x08031518
 8006a9c:	08031564 	.word	0x08031564
 8006aa0:	08006867 	.word	0x08006867
 8006aa4:	080312e8 	.word	0x080312e8
 8006aa8:	0803154c 	.word	0x0803154c
 8006aac:	08030688 	.word	0x08030688

08006ab0 <_ZN8touchgfx4ViewI16Screen3PresenterED1Ev>:
class View : public Screen
 8006ab0:	4a04      	ldr	r2, [pc, #16]	@ (8006ac4 <_ZN8touchgfx4ViewI16Screen3PresenterED1Ev+0x14>)
 8006ab2:	6002      	str	r2, [r0, #0]
    {
 8006ab4:	4a04      	ldr	r2, [pc, #16]	@ (8006ac8 <_ZN8touchgfx4ViewI16Screen3PresenterED1Ev+0x18>)
 8006ab6:	6002      	str	r2, [r0, #0]
 8006ab8:	4a04      	ldr	r2, [pc, #16]	@ (8006acc <_ZN8touchgfx4ViewI16Screen3PresenterED1Ev+0x1c>)
 8006aba:	6042      	str	r2, [r0, #4]
    {
 8006abc:	4a04      	ldr	r2, [pc, #16]	@ (8006ad0 <_ZN8touchgfx4ViewI16Screen3PresenterED1Ev+0x20>)
 8006abe:	6042      	str	r2, [r0, #4]
 8006ac0:	4770      	bx	lr
 8006ac2:	bf00      	nop
 8006ac4:	08031598 	.word	0x08031598
 8006ac8:	0803322c 	.word	0x0803322c
 8006acc:	080321ec 	.word	0x080321ec
 8006ad0:	0803310c 	.word	0x0803310c

08006ad4 <_ZN15Screen3ViewBase11setupScreenEv>:
}

void Screen3ViewBase::setupScreen()
{

}
 8006ad4:	4770      	bx	lr
	...

08006ad8 <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006ad8:	4a02      	ldr	r2, [pc, #8]	@ (8006ae4 <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvED1Ev+0xc>)
 8006ada:	6002      	str	r2, [r0, #0]
    }
 8006adc:	4a02      	ldr	r2, [pc, #8]	@ (8006ae8 <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvED1Ev+0x10>)
 8006ade:	6002      	str	r2, [r0, #0]
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006ae0:	4770      	bx	lr
 8006ae2:	bf00      	nop
 8006ae4:	08031764 	.word	0x08031764
 8006ae8:	080312e8 	.word	0x080312e8

08006aec <_ZN8touchgfx17GraphWrapAndClearILs400EED1Ev>:
class GraphWrapAndClear : public GraphWrapAndClearData
 8006aec:	4a0e      	ldr	r2, [pc, #56]	@ (8006b28 <_ZN8touchgfx17GraphWrapAndClearILs400EED1Ev+0x3c>)
 8006aee:	6002      	str	r2, [r0, #0]
class GraphWrapAndClearData : public DynamicDataGraph
 8006af0:	4a0e      	ldr	r2, [pc, #56]	@ (8006b2c <_ZN8touchgfx17GraphWrapAndClearILs400EED1Ev+0x40>)
 8006af2:	6002      	str	r2, [r0, #0]
class DynamicDataGraph : public AbstractDataGraph
 8006af4:	4a0e      	ldr	r2, [pc, #56]	@ (8006b30 <_ZN8touchgfx17GraphWrapAndClearILs400EED1Ev+0x44>)
 8006af6:	6002      	str	r2, [r0, #0]
class AbstractDataGraph : public Container
 8006af8:	4a0e      	ldr	r2, [pc, #56]	@ (8006b34 <_ZN8touchgfx17GraphWrapAndClearILs400EED1Ev+0x48>)
 8006afa:	6002      	str	r2, [r0, #0]
 8006afc:	490e      	ldr	r1, [pc, #56]	@ (8006b38 <_ZN8touchgfx17GraphWrapAndClearILs400EED1Ev+0x4c>)
 8006afe:	f8c0 10e8 	str.w	r1, [r0, #232]	@ 0xe8
 8006b02:	4a0e      	ldr	r2, [pc, #56]	@ (8006b3c <_ZN8touchgfx17GraphWrapAndClearILs400EED1Ev+0x50>)
 8006b04:	f8c0 20e8 	str.w	r2, [r0, #232]	@ 0xe8
 8006b08:	f8c0 10bc 	str.w	r1, [r0, #188]	@ 0xbc
 8006b0c:	f8c0 20bc 	str.w	r2, [r0, #188]	@ 0xbc
 8006b10:	f8c0 1090 	str.w	r1, [r0, #144]	@ 0x90
 8006b14:	f8c0 2090 	str.w	r2, [r0, #144]	@ 0x90
 8006b18:	6641      	str	r1, [r0, #100]	@ 0x64
 8006b1a:	6642      	str	r2, [r0, #100]	@ 0x64
 8006b1c:	6381      	str	r1, [r0, #56]	@ 0x38
 8006b1e:	6382      	str	r2, [r0, #56]	@ 0x38
 8006b20:	6001      	str	r1, [r0, #0]
 8006b22:	6002      	str	r2, [r0, #0]
class GraphWrapAndClear : public GraphWrapAndClearData
 8006b24:	4770      	bx	lr
 8006b26:	bf00      	nop
 8006b28:	080315cc 	.word	0x080315cc
 8006b2c:	08032af8 	.word	0x08032af8
 8006b30:	08032518 	.word	0x08032518
 8006b34:	080326b0 	.word	0x080326b0
 8006b38:	080321ec 	.word	0x080321ec
 8006b3c:	0803310c 	.word	0x0803310c

08006b40 <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006b40:	b510      	push	{r4, lr}
 8006b42:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006b44:	6844      	ldr	r4, [r0, #4]
 8006b46:	68c2      	ldr	r2, [r0, #12]
 8006b48:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006b4c:	f012 0f01 	tst.w	r2, #1
 8006b50:	d102      	bne.n	8006b58 <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x18>
 8006b52:	689b      	ldr	r3, [r3, #8]
 8006b54:	4798      	blx	r3
    }
 8006b56:	bd10      	pop	{r4, pc}
 8006b58:	ea4f 0c62 	mov.w	ip, r2, asr #1
        (pobject->*pmemfun)(t1);
 8006b5c:	f854 200c 	ldr.w	r2, [r4, ip]
 8006b60:	689b      	ldr	r3, [r3, #8]
 8006b62:	58d3      	ldr	r3, [r2, r3]
 8006b64:	e7f6      	b.n	8006b54 <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x14>

08006b66 <_ZNK8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006b66:	6843      	ldr	r3, [r0, #4]
 8006b68:	b14b      	cbz	r3, 8006b7e <_ZNK8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x18>
 8006b6a:	6883      	ldr	r3, [r0, #8]
 8006b6c:	b10b      	cbz	r3, 8006b72 <_ZNK8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
 8006b6e:	2001      	movs	r0, #1
 8006b70:	4770      	bx	lr
 8006b72:	68c3      	ldr	r3, [r0, #12]
 8006b74:	f013 0f01 	tst.w	r3, #1
 8006b78:	d003      	beq.n	8006b82 <_ZNK8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x1c>
 8006b7a:	2001      	movs	r0, #1
 8006b7c:	4770      	bx	lr
 8006b7e:	2000      	movs	r0, #0
 8006b80:	4770      	bx	lr
 8006b82:	2000      	movs	r0, #0
    }
 8006b84:	4770      	bx	lr
	...

08006b88 <_ZN8touchgfx4ViewI16Screen3PresenterED0Ev>:
 8006b88:	b510      	push	{r4, lr}
 8006b8a:	4604      	mov	r4, r0
 8006b8c:	4b06      	ldr	r3, [pc, #24]	@ (8006ba8 <_ZN8touchgfx4ViewI16Screen3PresenterED0Ev+0x20>)
 8006b8e:	6003      	str	r3, [r0, #0]
 8006b90:	4b06      	ldr	r3, [pc, #24]	@ (8006bac <_ZN8touchgfx4ViewI16Screen3PresenterED0Ev+0x24>)
 8006b92:	6003      	str	r3, [r0, #0]
 8006b94:	4b06      	ldr	r3, [pc, #24]	@ (8006bb0 <_ZN8touchgfx4ViewI16Screen3PresenterED0Ev+0x28>)
 8006b96:	6043      	str	r3, [r0, #4]
 8006b98:	4b06      	ldr	r3, [pc, #24]	@ (8006bb4 <_ZN8touchgfx4ViewI16Screen3PresenterED0Ev+0x2c>)
 8006b9a:	6043      	str	r3, [r0, #4]
 8006b9c:	2140      	movs	r1, #64	@ 0x40
 8006b9e:	f026 fe86 	bl	802d8ae <_ZdlPvj>
 8006ba2:	4620      	mov	r0, r4
 8006ba4:	bd10      	pop	{r4, pc}
 8006ba6:	bf00      	nop
 8006ba8:	08031598 	.word	0x08031598
 8006bac:	0803322c 	.word	0x0803322c
 8006bb0:	080321ec 	.word	0x080321ec
 8006bb4:	0803310c 	.word	0x0803310c

08006bb8 <_ZN8touchgfx17GraphWrapAndClearILs400EED0Ev>:
 8006bb8:	b510      	push	{r4, lr}
 8006bba:	4604      	mov	r4, r0
 8006bbc:	4b10      	ldr	r3, [pc, #64]	@ (8006c00 <_ZN8touchgfx17GraphWrapAndClearILs400EED0Ev+0x48>)
 8006bbe:	6003      	str	r3, [r0, #0]
class GraphWrapAndClearData : public DynamicDataGraph
 8006bc0:	4b10      	ldr	r3, [pc, #64]	@ (8006c04 <_ZN8touchgfx17GraphWrapAndClearILs400EED0Ev+0x4c>)
 8006bc2:	6003      	str	r3, [r0, #0]
class DynamicDataGraph : public AbstractDataGraph
 8006bc4:	4b10      	ldr	r3, [pc, #64]	@ (8006c08 <_ZN8touchgfx17GraphWrapAndClearILs400EED0Ev+0x50>)
 8006bc6:	6003      	str	r3, [r0, #0]
class AbstractDataGraph : public Container
 8006bc8:	4b10      	ldr	r3, [pc, #64]	@ (8006c0c <_ZN8touchgfx17GraphWrapAndClearILs400EED0Ev+0x54>)
 8006bca:	6003      	str	r3, [r0, #0]
 8006bcc:	4a10      	ldr	r2, [pc, #64]	@ (8006c10 <_ZN8touchgfx17GraphWrapAndClearILs400EED0Ev+0x58>)
 8006bce:	f8c0 20e8 	str.w	r2, [r0, #232]	@ 0xe8
 8006bd2:	4b10      	ldr	r3, [pc, #64]	@ (8006c14 <_ZN8touchgfx17GraphWrapAndClearILs400EED0Ev+0x5c>)
 8006bd4:	f8c0 30e8 	str.w	r3, [r0, #232]	@ 0xe8
 8006bd8:	f8c0 20bc 	str.w	r2, [r0, #188]	@ 0xbc
 8006bdc:	f8c0 30bc 	str.w	r3, [r0, #188]	@ 0xbc
 8006be0:	f8c0 2090 	str.w	r2, [r0, #144]	@ 0x90
 8006be4:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90
 8006be8:	6642      	str	r2, [r0, #100]	@ 0x64
 8006bea:	6643      	str	r3, [r0, #100]	@ 0x64
 8006bec:	6382      	str	r2, [r0, #56]	@ 0x38
 8006bee:	6383      	str	r3, [r0, #56]	@ 0x38
 8006bf0:	6002      	str	r2, [r0, #0]
 8006bf2:	6003      	str	r3, [r0, #0]
class GraphWrapAndClear : public GraphWrapAndClearData
 8006bf4:	f240 718c 	movw	r1, #1932	@ 0x78c
 8006bf8:	f026 fe59 	bl	802d8ae <_ZdlPvj>
 8006bfc:	4620      	mov	r0, r4
 8006bfe:	bd10      	pop	{r4, pc}
 8006c00:	080315cc 	.word	0x080315cc
 8006c04:	08032af8 	.word	0x08032af8
 8006c08:	08032518 	.word	0x08032518
 8006c0c:	080326b0 	.word	0x080326b0
 8006c10:	080321ec 	.word	0x080321ec
 8006c14:	0803310c 	.word	0x0803310c

08006c18 <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006c18:	b510      	push	{r4, lr}
 8006c1a:	4604      	mov	r4, r0
 8006c1c:	4b04      	ldr	r3, [pc, #16]	@ (8006c30 <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvED0Ev+0x18>)
 8006c1e:	6003      	str	r3, [r0, #0]
    }
 8006c20:	4b04      	ldr	r3, [pc, #16]	@ (8006c34 <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvED0Ev+0x1c>)
 8006c22:	6003      	str	r3, [r0, #0]
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006c24:	2110      	movs	r1, #16
 8006c26:	f026 fe42 	bl	802d8ae <_ZdlPvj>
 8006c2a:	4620      	mov	r0, r4
 8006c2c:	bd10      	pop	{r4, pc}
 8006c2e:	bf00      	nop
 8006c30:	08031764 	.word	0x08031764
 8006c34:	080312e8 	.word	0x080312e8

08006c38 <_ZN15Screen3ViewBaseD1Ev>:
Screen3ViewBase::~Screen3ViewBase()
 8006c38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006c3a:	4604      	mov	r4, r0
 8006c3c:	4b5b      	ldr	r3, [pc, #364]	@ (8006dac <_ZN15Screen3ViewBaseD1Ev+0x174>)
 8006c3e:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006c40:	f012 fa2e 	bl	80190a0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8006c44:	f504 5340 	add.w	r3, r4, #12288	@ 0x3000
 8006c48:	4a59      	ldr	r2, [pc, #356]	@ (8006db0 <_ZN15Screen3ViewBaseD1Ev+0x178>)
 8006c4a:	f8c3 28a8 	str.w	r2, [r3, #2216]	@ 0x8a8
    }
 8006c4e:	4a59      	ldr	r2, [pc, #356]	@ (8006db4 <_ZN15Screen3ViewBaseD1Ev+0x17c>)
 8006c50:	f8c3 28a8 	str.w	r2, [r3, #2216]	@ 0x8a8
class ButtonWithLabel : public Button
 8006c54:	4b58      	ldr	r3, [pc, #352]	@ (8006db8 <_ZN15Screen3ViewBaseD1Ev+0x180>)
 8006c56:	f8c4 3980 	str.w	r3, [r4, #2432]	@ 0x980
    {
 8006c5a:	4e58      	ldr	r6, [pc, #352]	@ (8006dbc <_ZN15Screen3ViewBaseD1Ev+0x184>)
 8006c5c:	f8c4 69b4 	str.w	r6, [r4, #2484]	@ 0x9b4
 8006c60:	4b57      	ldr	r3, [pc, #348]	@ (8006dc0 <_ZN15Screen3ViewBaseD1Ev+0x188>)
 8006c62:	f8c4 3980 	str.w	r3, [r4, #2432]	@ 0x980
class AbstractButton : public Widget
 8006c66:	4b57      	ldr	r3, [pc, #348]	@ (8006dc4 <_ZN15Screen3ViewBaseD1Ev+0x18c>)
 8006c68:	f8c4 3980 	str.w	r3, [r4, #2432]	@ 0x980
 8006c6c:	4a56      	ldr	r2, [pc, #344]	@ (8006dc8 <_ZN15Screen3ViewBaseD1Ev+0x190>)
 8006c6e:	f8c4 2980 	str.w	r2, [r4, #2432]	@ 0x980
 8006c72:	4b56      	ldr	r3, [pc, #344]	@ (8006dcc <_ZN15Screen3ViewBaseD1Ev+0x194>)
 8006c74:	f8c4 3980 	str.w	r3, [r4, #2432]	@ 0x980
class PainterRGB565 : public AbstractPainterRGB565, public AbstractPainterColor
 8006c78:	4955      	ldr	r1, [pc, #340]	@ (8006dd0 <_ZN15Screen3ViewBaseD1Ev+0x198>)
 8006c7a:	f8c4 196c 	str.w	r1, [r4, #2412]	@ 0x96c
 8006c7e:	3124      	adds	r1, #36	@ 0x24
 8006c80:	f8c4 1974 	str.w	r1, [r4, #2420]	@ 0x974
    {
 8006c84:	4953      	ldr	r1, [pc, #332]	@ (8006dd4 <_ZN15Screen3ViewBaseD1Ev+0x19c>)
 8006c86:	f8c4 1974 	str.w	r1, [r4, #2420]	@ 0x974
 8006c8a:	4953      	ldr	r1, [pc, #332]	@ (8006dd8 <_ZN15Screen3ViewBaseD1Ev+0x1a0>)
 8006c8c:	f8c4 196c 	str.w	r1, [r4, #2412]	@ 0x96c
 8006c90:	4952      	ldr	r1, [pc, #328]	@ (8006ddc <_ZN15Screen3ViewBaseD1Ev+0x1a4>)
 8006c92:	f8c4 196c 	str.w	r1, [r4, #2412]	@ 0x96c
class GraphElementLine : public AbstractGraphElement
 8006c96:	4952      	ldr	r1, [pc, #328]	@ (8006de0 <_ZN15Screen3ViewBaseD1Ev+0x1a8>)
 8006c98:	f8c4 193c 	str.w	r1, [r4, #2364]	@ 0x93c
class AbstractGraphElement : public CanvasWidget
 8006c9c:	4851      	ldr	r0, [pc, #324]	@ (8006de4 <_ZN15Screen3ViewBaseD1Ev+0x1ac>)
 8006c9e:	f8c4 093c 	str.w	r0, [r4, #2364]	@ 0x93c
class CanvasWidget : public Widget
 8006ca2:	4951      	ldr	r1, [pc, #324]	@ (8006de8 <_ZN15Screen3ViewBaseD1Ev+0x1b0>)
 8006ca4:	f8c4 193c 	str.w	r1, [r4, #2364]	@ 0x93c
 8006ca8:	f8c4 293c 	str.w	r2, [r4, #2364]	@ 0x93c
 8006cac:	f8c4 393c 	str.w	r3, [r4, #2364]	@ 0x93c
class GraphLabelsY : public GraphLabelsBase
 8006cb0:	4d4e      	ldr	r5, [pc, #312]	@ (8006dec <_ZN15Screen3ViewBaseD1Ev+0x1b4>)
 8006cb2:	f8c4 58f0 	str.w	r5, [r4, #2288]	@ 0x8f0
class GraphLabelsBase : public AbstractGraphDecoration
 8006cb6:	f8df c16c 	ldr.w	ip, [pc, #364]	@ 8006e24 <_ZN15Screen3ViewBaseD1Ev+0x1ec>
 8006cba:	f8c4 c8f0 	str.w	ip, [r4, #2288]	@ 0x8f0
 8006cbe:	f8c4 6928 	str.w	r6, [r4, #2344]	@ 0x928
class AbstractGraphDecoration : public AbstractGraphElementNoCWR
 8006cc2:	4f4b      	ldr	r7, [pc, #300]	@ (8006df0 <_ZN15Screen3ViewBaseD1Ev+0x1b8>)
 8006cc4:	f8c4 78f0 	str.w	r7, [r4, #2288]	@ 0x8f0
class AbstractGraphElementNoCWR : public AbstractGraphElement
 8006cc8:	4d4a      	ldr	r5, [pc, #296]	@ (8006df4 <_ZN15Screen3ViewBaseD1Ev+0x1bc>)
 8006cca:	f8c4 58f0 	str.w	r5, [r4, #2288]	@ 0x8f0
class AbstractGraphElement : public CanvasWidget
 8006cce:	f8c4 08f0 	str.w	r0, [r4, #2288]	@ 0x8f0
 8006cd2:	f8c4 18f0 	str.w	r1, [r4, #2288]	@ 0x8f0
 8006cd6:	f8c4 28f0 	str.w	r2, [r4, #2288]	@ 0x8f0
 8006cda:	f8c4 38f0 	str.w	r3, [r4, #2288]	@ 0x8f0
class GraphLabelsX : public GraphLabelsBase
 8006cde:	f8df e148 	ldr.w	lr, [pc, #328]	@ 8006e28 <_ZN15Screen3ViewBaseD1Ev+0x1f0>
 8006ce2:	f8c4 e8a4 	str.w	lr, [r4, #2212]	@ 0x8a4
class GraphLabelsBase : public AbstractGraphDecoration
 8006ce6:	f8c4 c8a4 	str.w	ip, [r4, #2212]	@ 0x8a4
 8006cea:	f8c4 68dc 	str.w	r6, [r4, #2268]	@ 0x8dc
class AbstractGraphDecoration : public AbstractGraphElementNoCWR
 8006cee:	f8c4 78a4 	str.w	r7, [r4, #2212]	@ 0x8a4
class AbstractGraphElementNoCWR : public AbstractGraphElement
 8006cf2:	f8c4 58a4 	str.w	r5, [r4, #2212]	@ 0x8a4
class AbstractGraphElement : public CanvasWidget
 8006cf6:	f8c4 08a4 	str.w	r0, [r4, #2212]	@ 0x8a4
 8006cfa:	f8c4 18a4 	str.w	r1, [r4, #2212]	@ 0x8a4
 8006cfe:	f8c4 28a4 	str.w	r2, [r4, #2212]	@ 0x8a4
 8006d02:	f8c4 38a4 	str.w	r3, [r4, #2212]	@ 0x8a4
class GraphElementGridY : public GraphElementGridBase
 8006d06:	4e3c      	ldr	r6, [pc, #240]	@ (8006df8 <_ZN15Screen3ViewBaseD1Ev+0x1c0>)
 8006d08:	f8c4 6864 	str.w	r6, [r4, #2148]	@ 0x864
class GraphElementGridBase : public AbstractGraphElementNoCWR
 8006d0c:	4e3b      	ldr	r6, [pc, #236]	@ (8006dfc <_ZN15Screen3ViewBaseD1Ev+0x1c4>)
 8006d0e:	f8c4 6864 	str.w	r6, [r4, #2148]	@ 0x864
class AbstractGraphElementNoCWR : public AbstractGraphElement
 8006d12:	f8c4 5864 	str.w	r5, [r4, #2148]	@ 0x864
class AbstractGraphElement : public CanvasWidget
 8006d16:	f8c4 0864 	str.w	r0, [r4, #2148]	@ 0x864
 8006d1a:	f8c4 1864 	str.w	r1, [r4, #2148]	@ 0x864
 8006d1e:	f8c4 2864 	str.w	r2, [r4, #2148]	@ 0x864
 8006d22:	f8c4 3864 	str.w	r3, [r4, #2148]	@ 0x864
class GraphElementGridX : public GraphElementGridBase
 8006d26:	4f36      	ldr	r7, [pc, #216]	@ (8006e00 <_ZN15Screen3ViewBaseD1Ev+0x1c8>)
 8006d28:	f8c4 7824 	str.w	r7, [r4, #2084]	@ 0x824
class GraphElementGridBase : public AbstractGraphElementNoCWR
 8006d2c:	f8c4 6824 	str.w	r6, [r4, #2084]	@ 0x824
class AbstractGraphElementNoCWR : public AbstractGraphElement
 8006d30:	f8c4 5824 	str.w	r5, [r4, #2084]	@ 0x824
class AbstractGraphElement : public CanvasWidget
 8006d34:	f8c4 0824 	str.w	r0, [r4, #2084]	@ 0x824
 8006d38:	f8c4 1824 	str.w	r1, [r4, #2084]	@ 0x824
 8006d3c:	f8c4 2824 	str.w	r2, [r4, #2084]	@ 0x824
 8006d40:	f8c4 3824 	str.w	r3, [r4, #2084]	@ 0x824
 8006d44:	492f      	ldr	r1, [pc, #188]	@ (8006e04 <_ZN15Screen3ViewBaseD1Ev+0x1cc>)
 8006d46:	f8c4 1098 	str.w	r1, [r4, #152]	@ 0x98
class GraphWrapAndClearData : public DynamicDataGraph
 8006d4a:	492f      	ldr	r1, [pc, #188]	@ (8006e08 <_ZN15Screen3ViewBaseD1Ev+0x1d0>)
 8006d4c:	f8c4 1098 	str.w	r1, [r4, #152]	@ 0x98
class DynamicDataGraph : public AbstractDataGraph
 8006d50:	492e      	ldr	r1, [pc, #184]	@ (8006e0c <_ZN15Screen3ViewBaseD1Ev+0x1d4>)
 8006d52:	f8c4 1098 	str.w	r1, [r4, #152]	@ 0x98
class AbstractDataGraph : public Container
 8006d56:	492e      	ldr	r1, [pc, #184]	@ (8006e10 <_ZN15Screen3ViewBaseD1Ev+0x1d8>)
 8006d58:	f8c4 1098 	str.w	r1, [r4, #152]	@ 0x98
 8006d5c:	492d      	ldr	r1, [pc, #180]	@ (8006e14 <_ZN15Screen3ViewBaseD1Ev+0x1dc>)
 8006d5e:	f8c4 1180 	str.w	r1, [r4, #384]	@ 0x180
 8006d62:	f8c4 3180 	str.w	r3, [r4, #384]	@ 0x180
 8006d66:	f8c4 1154 	str.w	r1, [r4, #340]	@ 0x154
 8006d6a:	f8c4 3154 	str.w	r3, [r4, #340]	@ 0x154
 8006d6e:	f8c4 1128 	str.w	r1, [r4, #296]	@ 0x128
 8006d72:	f8c4 3128 	str.w	r3, [r4, #296]	@ 0x128
 8006d76:	f8c4 10fc 	str.w	r1, [r4, #252]	@ 0xfc
 8006d7a:	f8c4 30fc 	str.w	r3, [r4, #252]	@ 0xfc
 8006d7e:	f8c4 10d0 	str.w	r1, [r4, #208]	@ 0xd0
 8006d82:	f8c4 30d0 	str.w	r3, [r4, #208]	@ 0xd0
 8006d86:	f8c4 1098 	str.w	r1, [r4, #152]	@ 0x98
 8006d8a:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
class Box : public Widget
 8006d8e:	4822      	ldr	r0, [pc, #136]	@ (8006e18 <_ZN15Screen3ViewBaseD1Ev+0x1e0>)
 8006d90:	66e0      	str	r0, [r4, #108]	@ 0x6c
 8006d92:	66e2      	str	r2, [r4, #108]	@ 0x6c
 8006d94:	66e3      	str	r3, [r4, #108]	@ 0x6c
 8006d96:	6420      	str	r0, [r4, #64]	@ 0x40
 8006d98:	6422      	str	r2, [r4, #64]	@ 0x40
 8006d9a:	6423      	str	r3, [r4, #64]	@ 0x40
 8006d9c:	4a1f      	ldr	r2, [pc, #124]	@ (8006e1c <_ZN15Screen3ViewBaseD1Ev+0x1e4>)
 8006d9e:	6022      	str	r2, [r4, #0]
 8006da0:	4a1f      	ldr	r2, [pc, #124]	@ (8006e20 <_ZN15Screen3ViewBaseD1Ev+0x1e8>)
 8006da2:	6022      	str	r2, [r4, #0]
 8006da4:	6061      	str	r1, [r4, #4]
 8006da6:	6063      	str	r3, [r4, #4]
}
 8006da8:	4620      	mov	r0, r4
 8006daa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006dac:	0803177c 	.word	0x0803177c
 8006db0:	08031764 	.word	0x08031764
 8006db4:	080312e8 	.word	0x080312e8
 8006db8:	08032fdc 	.word	0x08032fdc
 8006dbc:	08030688 	.word	0x08030688
 8006dc0:	08032e6c 	.word	0x08032e6c
 8006dc4:	08032c90 	.word	0x08032c90
 8006dc8:	080302c8 	.word	0x080302c8
 8006dcc:	0803310c 	.word	0x0803310c
 8006dd0:	08032408 	.word	0x08032408
 8006dd4:	0803047c 	.word	0x0803047c
 8006dd8:	08030490 	.word	0x08030490
 8006ddc:	0803045c 	.word	0x0803045c
 8006de0:	080327e0 	.word	0x080327e0
 8006de4:	08030fec 	.word	0x08030fec
 8006de8:	080324a0 	.word	0x080324a0
 8006dec:	080329b8 	.word	0x080329b8
 8006df0:	08031260 	.word	0x08031260
 8006df4:	08031068 	.word	0x08031068
 8006df8:	080311a8 	.word	0x080311a8
 8006dfc:	0803285c 	.word	0x0803285c
 8006e00:	080310f0 	.word	0x080310f0
 8006e04:	080315cc 	.word	0x080315cc
 8006e08:	08032af8 	.word	0x08032af8
 8006e0c:	08032518 	.word	0x08032518
 8006e10:	080326b0 	.word	0x080326b0
 8006e14:	080321ec 	.word	0x080321ec
 8006e18:	08032e04 	.word	0x08032e04
 8006e1c:	08031598 	.word	0x08031598
 8006e20:	0803322c 	.word	0x0803322c
 8006e24:	08032a58 	.word	0x08032a58
 8006e28:	08032918 	.word	0x08032918

08006e2c <_ZN15Screen3ViewBaseD0Ev>:
Screen3ViewBase::~Screen3ViewBase()
 8006e2c:	b510      	push	{r4, lr}
 8006e2e:	4604      	mov	r4, r0
}
 8006e30:	f7ff ff02 	bl	8006c38 <_ZN15Screen3ViewBaseD1Ev>
 8006e34:	f643 01b8 	movw	r1, #14520	@ 0x38b8
 8006e38:	4620      	mov	r0, r4
 8006e3a:	f026 fd38 	bl	802d8ae <_ZdlPvj>
 8006e3e:	4620      	mov	r0, r4
 8006e40:	bd10      	pop	{r4, pc}

08006e42 <_ZN15Screen3ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen3ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel1)
 8006e42:	f500 6018 	add.w	r0, r0, #2432	@ 0x980
 8006e46:	4288      	cmp	r0, r1
 8006e48:	d000      	beq.n	8006e4c <_ZN15Screen3ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa>
 8006e4a:	4770      	bx	lr
{
 8006e4c:	b508      	push	{r3, lr}
    virtual ~Screen3ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006e4e:	f013 fdf9 	bl	801aa44 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Screen2
        //Go to Screen2 with screen transition towards South
        application().gotoScreen2ScreenCoverTransitionSouth();
 8006e52:	f7fd fd35 	bl	80048c0 <_ZN23FrontendApplicationBase37gotoScreen2ScreenCoverTransitionSouthEv>
    }
}
 8006e56:	bd08      	pop	{r3, pc}

08006e58 <_ZN15Screen3ViewBaseC1Ev>:
Screen3ViewBase::Screen3ViewBase() :
 8006e58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006e5c:	b095      	sub	sp, #84	@ 0x54
 8006e5e:	4604      	mov	r4, r0
        : presenter(0)
 8006e60:	f015 ff0c 	bl	801cc7c <_ZN8touchgfx6ScreenC1Ev>
 8006e64:	4bc5      	ldr	r3, [pc, #788]	@ (800717c <_ZN15Screen3ViewBaseC1Ev+0x324>)
 8006e66:	6023      	str	r3, [r4, #0]
 8006e68:	2500      	movs	r5, #0
 8006e6a:	63e5      	str	r5, [r4, #60]	@ 0x3c
    buttonCallback(this, &Screen3ViewBase::buttonCallbackHandler)
 8006e6c:	46a0      	mov	r8, r4
 8006e6e:	4bc4      	ldr	r3, [pc, #784]	@ (8007180 <_ZN15Screen3ViewBaseC1Ev+0x328>)
 8006e70:	f848 3b40 	str.w	r3, [r8], #64
 8006e74:	4640      	mov	r0, r8
 8006e76:	f7ff f93d 	bl	80060f4 <_ZN8touchgfx3BoxC1Ev>
 8006e7a:	f104 076c 	add.w	r7, r4, #108	@ 0x6c
 8006e7e:	4638      	mov	r0, r7
 8006e80:	f7ff f938 	bl	80060f4 <_ZN8touchgfx3BoxC1Ev>
        : GraphWrapAndClearData(CAPACITY, y)
 8006e84:	f104 0698 	add.w	r6, r4, #152	@ 0x98
        : DynamicDataGraph(capacity, values)
 8006e88:	f504 72f2 	add.w	r2, r4, #484	@ 0x1e4
 8006e8c:	f44f 71c8 	mov.w	r1, #400	@ 0x190
 8006e90:	4630      	mov	r0, r6
 8006e92:	f7ff f997 	bl	80061c4 <_ZN8touchgfx16DynamicDataGraphC1EsPi>
 8006e96:	4bbb      	ldr	r3, [pc, #748]	@ (8007184 <_ZN15Screen3ViewBaseC1Ev+0x32c>)
 8006e98:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
        : GraphWrapAndClearData(CAPACITY, y)
 8006e9c:	4bba      	ldr	r3, [pc, #744]	@ (8007188 <_ZN15Screen3ViewBaseC1Ev+0x330>)
 8006e9e:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
class GraphElementGridX : public GraphElementGridBase
 8006ea2:	f604 0a24 	addw	sl, r4, #2084	@ 0x824
 8006ea6:	4650      	mov	r0, sl
 8006ea8:	f7ff f9aa 	bl	8006200 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8006eac:	4bb7      	ldr	r3, [pc, #732]	@ (800718c <_ZN15Screen3ViewBaseC1Ev+0x334>)
 8006eae:	f8c4 3824 	str.w	r3, [r4, #2084]	@ 0x824
class GraphElementGridY : public GraphElementGridBase
 8006eb2:	f604 0b64 	addw	fp, r4, #2148	@ 0x864
 8006eb6:	4658      	mov	r0, fp
 8006eb8:	f7ff f9a2 	bl	8006200 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8006ebc:	4bb4      	ldr	r3, [pc, #720]	@ (8007190 <_ZN15Screen3ViewBaseC1Ev+0x338>)
 8006ebe:	f8c4 3864 	str.w	r3, [r4, #2148]	@ 0x864
class GraphLabelsX : public GraphLabelsBase
 8006ec2:	f604 03a4 	addw	r3, r4, #2212	@ 0x8a4
 8006ec6:	9305      	str	r3, [sp, #20]
 8006ec8:	4618      	mov	r0, r3
 8006eca:	f7ff f9b5 	bl	8006238 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 8006ece:	4bb1      	ldr	r3, [pc, #708]	@ (8007194 <_ZN15Screen3ViewBaseC1Ev+0x33c>)
 8006ed0:	f8c4 38a4 	str.w	r3, [r4, #2212]	@ 0x8a4
class GraphLabelsY : public GraphLabelsBase
 8006ed4:	f504 630f 	add.w	r3, r4, #2288	@ 0x8f0
 8006ed8:	9306      	str	r3, [sp, #24]
 8006eda:	4618      	mov	r0, r3
 8006edc:	f7ff f9ac 	bl	8006238 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 8006ee0:	4bad      	ldr	r3, [pc, #692]	@ (8007198 <_ZN15Screen3ViewBaseC1Ev+0x340>)
 8006ee2:	f8c4 38f0 	str.w	r3, [r4, #2288]	@ 0x8f0
        : CanvasWidget()
 8006ee6:	f604 133c 	addw	r3, r4, #2364	@ 0x93c
 8006eea:	9307      	str	r3, [sp, #28]
 8006eec:	4618      	mov	r0, r3
 8006eee:	f00e fbb7 	bl	8015660 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8006ef2:	4baa      	ldr	r3, [pc, #680]	@ (800719c <_ZN15Screen3ViewBaseC1Ev+0x344>)
 8006ef4:	f8c4 393c 	str.w	r3, [r4, #2364]	@ 0x93c
        : lineWidth(2)
 8006ef8:	4ba9      	ldr	r3, [pc, #676]	@ (80071a0 <_ZN15Screen3ViewBaseC1Ev+0x348>)
 8006efa:	f8c4 393c 	str.w	r3, [r4, #2364]	@ 0x93c
 8006efe:	f04f 0302 	mov.w	r3, #2
 8006f02:	f884 3968 	strb.w	r3, [r4, #2408]	@ 0x968
 8006f06:	f604 126c 	addw	r2, r4, #2412	@ 0x96c
 8006f0a:	4629      	mov	r1, r5
 8006f0c:	9203      	str	r2, [sp, #12]
 8006f0e:	4610      	mov	r0, r2
 8006f10:	f7fc fae2 	bl	80034d8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8006f14:	f504 6918 	add.w	r9, r4, #2432	@ 0x980
 8006f18:	4648      	mov	r0, r9
 8006f1a:	f011 f9fb 	bl	8018314 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006f1e:	4ba1      	ldr	r3, [pc, #644]	@ (80071a4 <_ZN15Screen3ViewBaseC1Ev+0x34c>)
 8006f20:	930a      	str	r3, [sp, #40]	@ 0x28
 8006f22:	950b      	str	r5, [sp, #44]	@ 0x2c
 8006f24:	aa08      	add	r2, sp, #32
 8006f26:	ab0a      	add	r3, sp, #40	@ 0x28
 8006f28:	e893 0003 	ldmia.w	r3, {r0, r1}
 8006f2c:	e882 0003 	stmia.w	r2, {r0, r1}
class GenericCallback<T1, void, void>
 8006f30:	f504 5340 	add.w	r3, r4, #12288	@ 0x3000
 8006f34:	499c      	ldr	r1, [pc, #624]	@ (80071a8 <_ZN15Screen3ViewBaseC1Ev+0x350>)
 8006f36:	f8c3 18a8 	str.w	r1, [r3, #2216]	@ 0x8a8
        : pobject(pObject), pmemfun(pmemfun_1)
 8006f3a:	499c      	ldr	r1, [pc, #624]	@ (80071ac <_ZN15Screen3ViewBaseC1Ev+0x354>)
 8006f3c:	f8c3 18a8 	str.w	r1, [r3, #2216]	@ 0x8a8
 8006f40:	f8c3 48ac 	str.w	r4, [r3, #2220]	@ 0x8ac
 8006f44:	f503 630b 	add.w	r3, r3, #2224	@ 0x8b0
 8006f48:	e892 0003 	ldmia.w	r2, {r0, r1}
 8006f4c:	e883 0003 	stmia.w	r3, {r0, r1}
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006f50:	f642 61e0 	movw	r1, #12000	@ 0x2ee0
 8006f54:	f604 10c8 	addw	r0, r4, #2504	@ 0x9c8
 8006f58:	f012 f898 	bl	801908c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
        setXY(x, y);
 8006f5c:	462a      	mov	r2, r5
 8006f5e:	4629      	mov	r1, r5
 8006f60:	4640      	mov	r0, r8
 8006f62:	f7ff f893 	bl	800608c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8006f66:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8006f6a:	f44f 7148 	mov.w	r1, #800	@ 0x320
 8006f6e:	4640      	mov	r0, r8
 8006f70:	f7ff f898 	bl	80060a4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
        color = newColor;
 8006f74:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
 8006f78:	66a2      	str	r2, [r4, #104]	@ 0x68
        container.add(d);
 8006f7a:	1d22      	adds	r2, r4, #4
 8006f7c:	4641      	mov	r1, r8
 8006f7e:	4690      	mov	r8, r2
 8006f80:	4610      	mov	r0, r2
 8006f82:	f00b fcd1 	bl	8012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setXY(x, y);
 8006f86:	462a      	mov	r2, r5
 8006f88:	4629      	mov	r1, r5
 8006f8a:	4638      	mov	r0, r7
 8006f8c:	f7ff f87e 	bl	800608c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8006f90:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8006f94:	f44f 7148 	mov.w	r1, #800	@ 0x320
 8006f98:	4638      	mov	r0, r7
 8006f9a:	f7ff f883 	bl	80060a4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8006f9e:	f04f 32ff 	mov.w	r2, #4294967295
 8006fa2:	f8c4 2094 	str.w	r2, [r4, #148]	@ 0x94
 8006fa6:	4639      	mov	r1, r7
 8006fa8:	f8cd 8010 	str.w	r8, [sp, #16]
 8006fac:	4640      	mov	r0, r8
 8006fae:	f00b fcbb 	bl	8012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setXY(x, y);
 8006fb2:	223e      	movs	r2, #62	@ 0x3e
 8006fb4:	4629      	mov	r1, r5
 8006fb6:	4630      	mov	r0, r6
 8006fb8:	f7ff f868 	bl	800608c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8006fbc:	f240 1297 	movw	r2, #407	@ 0x197
 8006fc0:	f44f 7148 	mov.w	r1, #800	@ 0x320
 8006fc4:	4630      	mov	r0, r6
 8006fc6:	f7ff f86d 	bl	80060a4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    dynamicGraph1.setScale(1000);
 8006fca:	462a      	mov	r2, r5
 8006fcc:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8006fd0:	4630      	mov	r0, r6
 8006fd2:	f7fe fb66 	bl	80056a2 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph1.setGraphAreaMargin(10, 68, 0, 30);
 8006fd6:	271e      	movs	r7, #30
 8006fd8:	9700      	str	r7, [sp, #0]
 8006fda:	462b      	mov	r3, r5
 8006fdc:	2244      	movs	r2, #68	@ 0x44
 8006fde:	210a      	movs	r1, #10
 8006fe0:	4630      	mov	r0, r6
 8006fe2:	f00e fece 	bl	8015d82 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph1.setGraphAreaPadding(0, 0, 0, 0);
 8006fe6:	9500      	str	r5, [sp, #0]
 8006fe8:	462b      	mov	r3, r5
 8006fea:	462a      	mov	r2, r5
 8006fec:	4629      	mov	r1, r5
 8006fee:	4630      	mov	r0, r6
 8006ff0:	f00e fdca 	bl	8015b88 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
        return int2scaled(i, yScale);
 8006ff4:	f8d4 20cc 	ldr.w	r2, [r4, #204]	@ 0xcc
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8006ff8:	f8d4 3098 	ldr.w	r3, [r4, #152]	@ 0x98
 8006ffc:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 8007000:	0092      	lsls	r2, r2, #2
 8007002:	4629      	mov	r1, r5
 8007004:	4630      	mov	r0, r6
 8007006:	4798      	blx	r3
        color = newColor;
 8007008:	4b69      	ldr	r3, [pc, #420]	@ (80071b0 <_ZN15Screen3ViewBaseC1Ev+0x358>)
 800700a:	f8c4 3850 	str.w	r3, [r4, #2128]	@ 0x850
        setIntervalScaled(abs(interval) * dataScale);
 800700e:	4638      	mov	r0, r7
 8007010:	f7ff f996 	bl	8006340 <_ZN8touchgfx3absIiEET_S1_>
 8007014:	f8d4 8854 	ldr.w	r8, [r4, #2132]	@ 0x854
        gridInterval = abs(interval);
 8007018:	fb08 f000 	mul.w	r0, r8, r0
 800701c:	f7ff f990 	bl	8006340 <_ZN8touchgfx3absIiEET_S1_>
 8007020:	f8c4 0858 	str.w	r0, [r4, #2136]	@ 0x858
        lineWidth = width;
 8007024:	2701      	movs	r7, #1
 8007026:	f884 785c 	strb.w	r7, [r4, #2140]	@ 0x85c
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800702a:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 800702e:	4641      	mov	r1, r8
 8007030:	f00e ff5a 	bl	8015ee8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 8007034:	f8c4 0858 	str.w	r0, [r4, #2136]	@ 0x858
        dataScale = scale;
 8007038:	f44f 787a 	mov.w	r8, #1000	@ 0x3e8
 800703c:	f8c4 8854 	str.w	r8, [r4, #2132]	@ 0x854
    dynamicGraph1.addGraphElement(dynamicGraph1MajorXAxisGrid);
 8007040:	4651      	mov	r1, sl
 8007042:	4630      	mov	r0, r6
 8007044:	f00e fdab 	bl	8015b9e <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        color = newColor;
 8007048:	4b59      	ldr	r3, [pc, #356]	@ (80071b0 <_ZN15Screen3ViewBaseC1Ev+0x358>)
 800704a:	f8c4 3890 	str.w	r3, [r4, #2192]	@ 0x890
        setIntervalScaled(abs(interval) * dataScale);
 800704e:	4638      	mov	r0, r7
 8007050:	f7ff f976 	bl	8006340 <_ZN8touchgfx3absIiEET_S1_>
 8007054:	f8d4 a894 	ldr.w	sl, [r4, #2196]	@ 0x894
        gridInterval = abs(interval);
 8007058:	fb0a f000 	mul.w	r0, sl, r0
 800705c:	f7ff f970 	bl	8006340 <_ZN8touchgfx3absIiEET_S1_>
 8007060:	f8c4 0898 	str.w	r0, [r4, #2200]	@ 0x898
        lineWidth = width;
 8007064:	f884 789c 	strb.w	r7, [r4, #2204]	@ 0x89c
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8007068:	4642      	mov	r2, r8
 800706a:	4651      	mov	r1, sl
 800706c:	f00e ff3c 	bl	8015ee8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 8007070:	f8c4 0898 	str.w	r0, [r4, #2200]	@ 0x898
        dataScale = scale;
 8007074:	f8c4 8894 	str.w	r8, [r4, #2196]	@ 0x894
    dynamicGraph1.addGraphElement(dynamicGraph1MajorYAxisGrid);
 8007078:	4659      	mov	r1, fp
 800707a:	4630      	mov	r0, r6
 800707c:	f00e fd8f 	bl	8015b9e <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        setIntervalScaled(AbstractDataGraph::int2scaled(interval, dataScale));
 8007080:	f8d4 b8d4 	ldr.w	fp, [r4, #2260]	@ 0x8d4
        labelInterval = abs(interval);
 8007084:	2032      	movs	r0, #50	@ 0x32
 8007086:	fb00 f00b 	mul.w	r0, r0, fp
 800708a:	f7ff f959 	bl	8006340 <_ZN8touchgfx3absIiEET_S1_>
 800708e:	f8c4 08d8 	str.w	r0, [r4, #2264]	@ 0x8d8
        : typedTextId(id)
 8007092:	f8df a120 	ldr.w	sl, [pc, #288]	@ 80071b4 <_ZN15Screen3ViewBaseC1Ev+0x35c>
 8007096:	f8cd a030 	str.w	sl, [sp, #48]	@ 0x30
 800709a:	f8ad 5034 	strh.w	r5, [sp, #52]	@ 0x34
class TypedText
 800709e:	f8a4 58e0 	strh.w	r5, [r4, #2272]	@ 0x8e0
        color = newColor;
 80070a2:	4b43      	ldr	r3, [pc, #268]	@ (80071b0 <_ZN15Screen3ViewBaseC1Ev+0x358>)
 80070a4:	f8c4 38d0 	str.w	r3, [r4, #2256]	@ 0x8d0
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 80070a8:	4642      	mov	r2, r8
 80070aa:	4659      	mov	r1, fp
 80070ac:	f00e ff1c 	bl	8015ee8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 80070b0:	f8c4 08d8 	str.w	r0, [r4, #2264]	@ 0x8d8
        dataScale = scale;
 80070b4:	f8c4 88d4 	str.w	r8, [r4, #2260]	@ 0x8d4
    dynamicGraph1.addBottomElement(dynamicGraph1MajorXAxisLabel);
 80070b8:	9905      	ldr	r1, [sp, #20]
 80070ba:	4630      	mov	r0, r6
 80070bc:	f00e fd93 	bl	8015be6 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>
        setIntervalScaled(AbstractDataGraph::int2scaled(interval, dataScale));
 80070c0:	f8d4 5920 	ldr.w	r5, [r4, #2336]	@ 0x920
        labelInterval = abs(interval);
 80070c4:	4628      	mov	r0, r5
 80070c6:	f7ff f93b 	bl	8006340 <_ZN8touchgfx3absIiEET_S1_>
 80070ca:	f8c4 0924 	str.w	r0, [r4, #2340]	@ 0x924
        : typedTextId(id)
 80070ce:	f8cd a038 	str.w	sl, [sp, #56]	@ 0x38
 80070d2:	f8ad 703c 	strh.w	r7, [sp, #60]	@ 0x3c
class TypedText
 80070d6:	f8a4 792c 	strh.w	r7, [r4, #2348]	@ 0x92c
 80070da:	4b35      	ldr	r3, [pc, #212]	@ (80071b0 <_ZN15Screen3ViewBaseC1Ev+0x358>)
 80070dc:	f8c4 391c 	str.w	r3, [r4, #2332]	@ 0x91c
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 80070e0:	4642      	mov	r2, r8
 80070e2:	4629      	mov	r1, r5
 80070e4:	f00e ff00 	bl	8015ee8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 80070e8:	f8c4 0924 	str.w	r0, [r4, #2340]	@ 0x924
        dataScale = scale;
 80070ec:	f8c4 8920 	str.w	r8, [r4, #2336]	@ 0x920
    dynamicGraph1.addLeftElement(dynamicGraph1MajorYAxisLabel);
 80070f0:	9906      	ldr	r1, [sp, #24]
 80070f2:	4630      	mov	r0, r6
 80070f4:	f00e fd65 	bl	8015bc2 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
    dynamicGraph1Line1Painter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 80070f8:	f04f 417f 	mov.w	r1, #4278190080	@ 0xff000000
 80070fc:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8007100:	4640      	mov	r0, r8
 8007102:	f7ff f8c9 	bl	8006298 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
        canvasPainter = &painter;
 8007106:	f8c4 8964 	str.w	r8, [r4, #2404]	@ 0x964
        lineWidth = width;
 800710a:	f04f 0302 	mov.w	r3, #2
 800710e:	f884 3968 	strb.w	r3, [r4, #2408]	@ 0x968
    dynamicGraph1.addGraphElement(dynamicGraph1Line1);
 8007112:	9907      	ldr	r1, [sp, #28]
 8007114:	4630      	mov	r0, r6
 8007116:	f00e fd42 	bl	8015b9e <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
 800711a:	4631      	mov	r1, r6
 800711c:	9d04      	ldr	r5, [sp, #16]
 800711e:	4628      	mov	r0, r5
 8007120:	f00b fc02 	bl	8012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(684, 6);
 8007124:	2206      	movs	r2, #6
 8007126:	f44f 712b 	mov.w	r1, #684	@ 0x2ac
 800712a:	4648      	mov	r0, r9
 800712c:	f7fe ffae 	bl	800608c <_ZN8touchgfx8Drawable5setXYEss>
 8007130:	f8ad 7040 	strh.w	r7, [sp, #64]	@ 0x40
 8007134:	f8ad 7044 	strh.w	r7, [sp, #68]	@ 0x44
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_ACTION_ID));
 8007138:	aa11      	add	r2, sp, #68	@ 0x44
 800713a:	a910      	add	r1, sp, #64	@ 0x40
 800713c:	4648      	mov	r0, r9
 800713e:	f010 fe80 	bl	8017e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        : typedTextId(id)
 8007142:	f8cd a048 	str.w	sl, [sp, #72]	@ 0x48
 8007146:	2308      	movs	r3, #8
 8007148:	f8ad 304c 	strh.w	r3, [sp, #76]	@ 0x4c
class TypedText
 800714c:	f8a4 39b8 	strh.w	r3, [r4, #2488]	@ 0x9b8
        updateTextPosition();
 8007150:	4648      	mov	r0, r9
 8007152:	f7ff f8b1 	bl	80062b8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8007156:	f04f 33ff 	mov.w	r3, #4294967295
 800715a:	f8c4 39bc 	str.w	r3, [r4, #2492]	@ 0x9bc
        colorPressed = col;
 800715e:	f8c4 39c0 	str.w	r3, [r4, #2496]	@ 0x9c0
    buttonWithLabel1.setAction(buttonCallback);
 8007162:	f504 5362 	add.w	r3, r4, #14464	@ 0x3880
 8007166:	3328      	adds	r3, #40	@ 0x28
        action = &callback;
 8007168:	f8c4 39a8 	str.w	r3, [r4, #2472]	@ 0x9a8
 800716c:	4649      	mov	r1, r9
 800716e:	4628      	mov	r0, r5
 8007170:	f00b fbda 	bl	8012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007174:	4620      	mov	r0, r4
 8007176:	b015      	add	sp, #84	@ 0x54
 8007178:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800717c:	08031598 	.word	0x08031598
 8007180:	0803177c 	.word	0x0803177c
 8007184:	08032af8 	.word	0x08032af8
 8007188:	080315cc 	.word	0x080315cc
 800718c:	080310f0 	.word	0x080310f0
 8007190:	080311a8 	.word	0x080311a8
 8007194:	08032918 	.word	0x08032918
 8007198:	080329b8 	.word	0x080329b8
 800719c:	08030fec 	.word	0x08030fec
 80071a0:	080327e0 	.word	0x080327e0
 80071a4:	08006e43 	.word	0x08006e43
 80071a8:	080312e8 	.word	0x080312e8
 80071ac:	08031764 	.word	0x08031764
 80071b0:	ff1497c5 	.word	0xff1497c5
 80071b4:	08030688 	.word	0x08030688

080071b8 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 80071b8:	b530      	push	{r4, r5, lr}
 80071ba:	b085      	sub	sp, #20
 80071bc:	4604      	mov	r4, r0
        rect.width = width;
 80071be:	8101      	strh	r1, [r0, #8]
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 80071c0:	466d      	mov	r5, sp
 80071c2:	6803      	ldr	r3, [r0, #0]
 80071c4:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80071c8:	4601      	mov	r1, r0
 80071ca:	4628      	mov	r0, r5
 80071cc:	4798      	blx	r3
 80071ce:	343c      	adds	r4, #60	@ 0x3c
 80071d0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80071d4:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80071d8:	b005      	add	sp, #20
 80071da:	bd30      	pop	{r4, r5, pc}

080071dc <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80071dc:	b530      	push	{r4, r5, lr}
 80071de:	b085      	sub	sp, #20
 80071e0:	4604      	mov	r4, r0
        rect.height = height;
 80071e2:	8141      	strh	r1, [r0, #10]
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80071e4:	466d      	mov	r5, sp
 80071e6:	6803      	ldr	r3, [r0, #0]
 80071e8:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80071ec:	4601      	mov	r1, r0
 80071ee:	4628      	mov	r0, r5
 80071f0:	4798      	blx	r3
 80071f2:	343c      	adds	r4, #60	@ 0x3c
 80071f4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80071f8:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80071fc:	b005      	add	sp, #20
 80071fe:	bd30      	pop	{r4, r5, pc}

08007200 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8007200:	2200      	movs	r2, #0
 8007202:	8002      	strh	r2, [r0, #0]
 8007204:	8042      	strh	r2, [r0, #2]
 8007206:	8082      	strh	r2, [r0, #4]
 8007208:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 800720a:	4770      	bx	lr

0800720c <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800720c:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
 8007210:	4770      	bx	lr

08007212 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8007212:	b538      	push	{r3, r4, r5, lr}
 8007214:	4604      	mov	r4, r0
 8007216:	4615      	mov	r5, r2
    {
        setX(x);
 8007218:	6803      	ldr	r3, [r0, #0]
 800721a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800721c:	4798      	blx	r3
        setBaselineY(baselineY);
 800721e:	6823      	ldr	r3, [r4, #0]
 8007220:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8007222:	4629      	mov	r1, r5
 8007224:	4620      	mov	r0, r4
 8007226:	4798      	blx	r3
    }
 8007228:	bd38      	pop	{r3, r4, r5, pc}

0800722a <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 800722a:	2000      	movs	r0, #0
 800722c:	4770      	bx	lr

0800722e <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    {
    }

    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
 800722e:	b508      	push	{r3, lr}
        if (visible)
 8007230:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8007234:	b113      	cbz	r3, 800723c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xe>
            invalidate();
 8007236:	6803      	ldr	r3, [r0, #0]
 8007238:	695b      	ldr	r3, [r3, #20]
 800723a:	4798      	blx	r3
    {
        Widget::invalidateContent();
    }
 800723c:	bd08      	pop	{r3, pc}

0800723e <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800723e:	2200      	movs	r2, #0
 8007240:	8002      	strh	r2, [r0, #0]
 8007242:	8042      	strh	r2, [r0, #2]
 8007244:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8007248:	8081      	strh	r1, [r0, #4]
 800724a:	80c1      	strh	r1, [r0, #6]
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 800724c:	6082      	str	r2, [r0, #8]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
 800724e:	4770      	bx	lr

08007250 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8007250:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 8007252:	4770      	bx	lr

08007254 <_ZN8touchgfx4ViewI16Screen4PresenterED1Ev>:
class View : public Screen
 8007254:	4a04      	ldr	r2, [pc, #16]	@ (8007268 <_ZN8touchgfx4ViewI16Screen4PresenterED1Ev+0x14>)
 8007256:	6002      	str	r2, [r0, #0]
    {
 8007258:	4a04      	ldr	r2, [pc, #16]	@ (800726c <_ZN8touchgfx4ViewI16Screen4PresenterED1Ev+0x18>)
 800725a:	6002      	str	r2, [r0, #0]
 800725c:	4a04      	ldr	r2, [pc, #16]	@ (8007270 <_ZN8touchgfx4ViewI16Screen4PresenterED1Ev+0x1c>)
 800725e:	6042      	str	r2, [r0, #4]
    {
 8007260:	4a04      	ldr	r2, [pc, #16]	@ (8007274 <_ZN8touchgfx4ViewI16Screen4PresenterED1Ev+0x20>)
 8007262:	6042      	str	r2, [r0, #4]
 8007264:	4770      	bx	lr
 8007266:	bf00      	nop
 8007268:	080318d0 	.word	0x080318d0
 800726c:	0803322c 	.word	0x0803322c
 8007270:	080321ec 	.word	0x080321ec
 8007274:	0803310c 	.word	0x0803310c

08007278 <_ZN15Screen4ViewBase11setupScreenEv>:
}

void Screen4ViewBase::setupScreen()
{

}
 8007278:	4770      	bx	lr
	...

0800727c <_ZN8touchgfx8CallbackI15Screen4ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800727c:	4a02      	ldr	r2, [pc, #8]	@ (8007288 <_ZN8touchgfx8CallbackI15Screen4ViewBaseRKNS_14AbstractButtonEvvED1Ev+0xc>)
 800727e:	6002      	str	r2, [r0, #0]
    }
 8007280:	4a02      	ldr	r2, [pc, #8]	@ (800728c <_ZN8touchgfx8CallbackI15Screen4ViewBaseRKNS_14AbstractButtonEvvED1Ev+0x10>)
 8007282:	6002      	str	r2, [r0, #0]
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007284:	4770      	bx	lr
 8007286:	bf00      	nop
 8007288:	08031a9c 	.word	0x08031a9c
 800728c:	080312e8 	.word	0x080312e8

08007290 <_ZN8touchgfx17GraphWrapAndClearILs100EED1Ev>:
class GraphWrapAndClear : public GraphWrapAndClearData
 8007290:	4a0e      	ldr	r2, [pc, #56]	@ (80072cc <_ZN8touchgfx17GraphWrapAndClearILs100EED1Ev+0x3c>)
 8007292:	6002      	str	r2, [r0, #0]
class GraphWrapAndClearData : public DynamicDataGraph
 8007294:	4a0e      	ldr	r2, [pc, #56]	@ (80072d0 <_ZN8touchgfx17GraphWrapAndClearILs100EED1Ev+0x40>)
 8007296:	6002      	str	r2, [r0, #0]
class DynamicDataGraph : public AbstractDataGraph
 8007298:	4a0e      	ldr	r2, [pc, #56]	@ (80072d4 <_ZN8touchgfx17GraphWrapAndClearILs100EED1Ev+0x44>)
 800729a:	6002      	str	r2, [r0, #0]
class AbstractDataGraph : public Container
 800729c:	4a0e      	ldr	r2, [pc, #56]	@ (80072d8 <_ZN8touchgfx17GraphWrapAndClearILs100EED1Ev+0x48>)
 800729e:	6002      	str	r2, [r0, #0]
 80072a0:	490e      	ldr	r1, [pc, #56]	@ (80072dc <_ZN8touchgfx17GraphWrapAndClearILs100EED1Ev+0x4c>)
 80072a2:	f8c0 10e8 	str.w	r1, [r0, #232]	@ 0xe8
 80072a6:	4a0e      	ldr	r2, [pc, #56]	@ (80072e0 <_ZN8touchgfx17GraphWrapAndClearILs100EED1Ev+0x50>)
 80072a8:	f8c0 20e8 	str.w	r2, [r0, #232]	@ 0xe8
 80072ac:	f8c0 10bc 	str.w	r1, [r0, #188]	@ 0xbc
 80072b0:	f8c0 20bc 	str.w	r2, [r0, #188]	@ 0xbc
 80072b4:	f8c0 1090 	str.w	r1, [r0, #144]	@ 0x90
 80072b8:	f8c0 2090 	str.w	r2, [r0, #144]	@ 0x90
 80072bc:	6641      	str	r1, [r0, #100]	@ 0x64
 80072be:	6642      	str	r2, [r0, #100]	@ 0x64
 80072c0:	6381      	str	r1, [r0, #56]	@ 0x38
 80072c2:	6382      	str	r2, [r0, #56]	@ 0x38
 80072c4:	6001      	str	r1, [r0, #0]
 80072c6:	6002      	str	r2, [r0, #0]
class GraphWrapAndClear : public GraphWrapAndClearData
 80072c8:	4770      	bx	lr
 80072ca:	bf00      	nop
 80072cc:	08031904 	.word	0x08031904
 80072d0:	08032af8 	.word	0x08032af8
 80072d4:	08032518 	.word	0x08032518
 80072d8:	080326b0 	.word	0x080326b0
 80072dc:	080321ec 	.word	0x080321ec
 80072e0:	0803310c 	.word	0x0803310c

080072e4 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80072e4:	4a06      	ldr	r2, [pc, #24]	@ (8007300 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev+0x1c>)
 80072e6:	6002      	str	r2, [r0, #0]
class TextAreaWithWildcardBase : public TextArea
 80072e8:	4a06      	ldr	r2, [pc, #24]	@ (8007304 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev+0x20>)
 80072ea:	6002      	str	r2, [r0, #0]
class TextArea : public Widget
 80072ec:	4a06      	ldr	r2, [pc, #24]	@ (8007308 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev+0x24>)
 80072ee:	6002      	str	r2, [r0, #0]
    {
 80072f0:	4a06      	ldr	r2, [pc, #24]	@ (800730c <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev+0x28>)
 80072f2:	6282      	str	r2, [r0, #40]	@ 0x28
 80072f4:	4a06      	ldr	r2, [pc, #24]	@ (8007310 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev+0x2c>)
 80072f6:	6002      	str	r2, [r0, #0]
 80072f8:	4a06      	ldr	r2, [pc, #24]	@ (8007314 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev+0x30>)
 80072fa:	6002      	str	r2, [r0, #0]
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80072fc:	4770      	bx	lr
 80072fe:	bf00      	nop
 8007300:	08031840 	.word	0x08031840
 8007304:	08032ee0 	.word	0x08032ee0
 8007308:	08032d74 	.word	0x08032d74
 800730c:	08030688 	.word	0x08030688
 8007310:	080302c8 	.word	0x080302c8
 8007314:	0803310c 	.word	0x0803310c

08007318 <_ZN8touchgfx8CallbackI15Screen4ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007318:	b510      	push	{r4, lr}
 800731a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800731c:	6844      	ldr	r4, [r0, #4]
 800731e:	68c2      	ldr	r2, [r0, #12]
 8007320:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007324:	f012 0f01 	tst.w	r2, #1
 8007328:	d102      	bne.n	8007330 <_ZN8touchgfx8CallbackI15Screen4ViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x18>
 800732a:	689b      	ldr	r3, [r3, #8]
 800732c:	4798      	blx	r3
    }
 800732e:	bd10      	pop	{r4, pc}
 8007330:	ea4f 0c62 	mov.w	ip, r2, asr #1
        (pobject->*pmemfun)(t1);
 8007334:	f854 200c 	ldr.w	r2, [r4, ip]
 8007338:	689b      	ldr	r3, [r3, #8]
 800733a:	58d3      	ldr	r3, [r2, r3]
 800733c:	e7f6      	b.n	800732c <_ZN8touchgfx8CallbackI15Screen4ViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x14>

0800733e <_ZNK8touchgfx8CallbackI15Screen4ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800733e:	6843      	ldr	r3, [r0, #4]
 8007340:	b14b      	cbz	r3, 8007356 <_ZNK8touchgfx8CallbackI15Screen4ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x18>
 8007342:	6883      	ldr	r3, [r0, #8]
 8007344:	b10b      	cbz	r3, 800734a <_ZNK8touchgfx8CallbackI15Screen4ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
 8007346:	2001      	movs	r0, #1
 8007348:	4770      	bx	lr
 800734a:	68c3      	ldr	r3, [r0, #12]
 800734c:	f013 0f01 	tst.w	r3, #1
 8007350:	d003      	beq.n	800735a <_ZNK8touchgfx8CallbackI15Screen4ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x1c>
 8007352:	2001      	movs	r0, #1
 8007354:	4770      	bx	lr
 8007356:	2000      	movs	r0, #0
 8007358:	4770      	bx	lr
 800735a:	2000      	movs	r0, #0
    }
 800735c:	4770      	bx	lr
	...

08007360 <_ZN8touchgfx4ViewI16Screen4PresenterED0Ev>:
 8007360:	b510      	push	{r4, lr}
 8007362:	4604      	mov	r4, r0
 8007364:	4b06      	ldr	r3, [pc, #24]	@ (8007380 <_ZN8touchgfx4ViewI16Screen4PresenterED0Ev+0x20>)
 8007366:	6003      	str	r3, [r0, #0]
 8007368:	4b06      	ldr	r3, [pc, #24]	@ (8007384 <_ZN8touchgfx4ViewI16Screen4PresenterED0Ev+0x24>)
 800736a:	6003      	str	r3, [r0, #0]
 800736c:	4b06      	ldr	r3, [pc, #24]	@ (8007388 <_ZN8touchgfx4ViewI16Screen4PresenterED0Ev+0x28>)
 800736e:	6043      	str	r3, [r0, #4]
 8007370:	4b06      	ldr	r3, [pc, #24]	@ (800738c <_ZN8touchgfx4ViewI16Screen4PresenterED0Ev+0x2c>)
 8007372:	6043      	str	r3, [r0, #4]
 8007374:	2140      	movs	r1, #64	@ 0x40
 8007376:	f026 fa9a 	bl	802d8ae <_ZdlPvj>
 800737a:	4620      	mov	r0, r4
 800737c:	bd10      	pop	{r4, pc}
 800737e:	bf00      	nop
 8007380:	080318d0 	.word	0x080318d0
 8007384:	0803322c 	.word	0x0803322c
 8007388:	080321ec 	.word	0x080321ec
 800738c:	0803310c 	.word	0x0803310c

08007390 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8007390:	b510      	push	{r4, lr}
 8007392:	4604      	mov	r4, r0
 8007394:	4b08      	ldr	r3, [pc, #32]	@ (80073b8 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev+0x28>)
 8007396:	6003      	str	r3, [r0, #0]
class TextAreaWithWildcardBase : public TextArea
 8007398:	4b08      	ldr	r3, [pc, #32]	@ (80073bc <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev+0x2c>)
 800739a:	6003      	str	r3, [r0, #0]
 800739c:	4b08      	ldr	r3, [pc, #32]	@ (80073c0 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev+0x30>)
 800739e:	6003      	str	r3, [r0, #0]
 80073a0:	4b08      	ldr	r3, [pc, #32]	@ (80073c4 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev+0x34>)
 80073a2:	6283      	str	r3, [r0, #40]	@ 0x28
 80073a4:	4b08      	ldr	r3, [pc, #32]	@ (80073c8 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev+0x38>)
 80073a6:	6003      	str	r3, [r0, #0]
 80073a8:	4b08      	ldr	r3, [pc, #32]	@ (80073cc <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev+0x3c>)
 80073aa:	6003      	str	r3, [r0, #0]
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80073ac:	214c      	movs	r1, #76	@ 0x4c
 80073ae:	f026 fa7e 	bl	802d8ae <_ZdlPvj>
 80073b2:	4620      	mov	r0, r4
 80073b4:	bd10      	pop	{r4, pc}
 80073b6:	bf00      	nop
 80073b8:	08031840 	.word	0x08031840
 80073bc:	08032ee0 	.word	0x08032ee0
 80073c0:	08032d74 	.word	0x08032d74
 80073c4:	08030688 	.word	0x08030688
 80073c8:	080302c8 	.word	0x080302c8
 80073cc:	0803310c 	.word	0x0803310c

080073d0 <_ZN8touchgfx17GraphWrapAndClearILs100EED0Ev>:
 80073d0:	b510      	push	{r4, lr}
 80073d2:	4604      	mov	r4, r0
 80073d4:	4b10      	ldr	r3, [pc, #64]	@ (8007418 <_ZN8touchgfx17GraphWrapAndClearILs100EED0Ev+0x48>)
 80073d6:	6003      	str	r3, [r0, #0]
class GraphWrapAndClearData : public DynamicDataGraph
 80073d8:	4b10      	ldr	r3, [pc, #64]	@ (800741c <_ZN8touchgfx17GraphWrapAndClearILs100EED0Ev+0x4c>)
 80073da:	6003      	str	r3, [r0, #0]
class DynamicDataGraph : public AbstractDataGraph
 80073dc:	4b10      	ldr	r3, [pc, #64]	@ (8007420 <_ZN8touchgfx17GraphWrapAndClearILs100EED0Ev+0x50>)
 80073de:	6003      	str	r3, [r0, #0]
class AbstractDataGraph : public Container
 80073e0:	4b10      	ldr	r3, [pc, #64]	@ (8007424 <_ZN8touchgfx17GraphWrapAndClearILs100EED0Ev+0x54>)
 80073e2:	6003      	str	r3, [r0, #0]
 80073e4:	4a10      	ldr	r2, [pc, #64]	@ (8007428 <_ZN8touchgfx17GraphWrapAndClearILs100EED0Ev+0x58>)
 80073e6:	f8c0 20e8 	str.w	r2, [r0, #232]	@ 0xe8
 80073ea:	4b10      	ldr	r3, [pc, #64]	@ (800742c <_ZN8touchgfx17GraphWrapAndClearILs100EED0Ev+0x5c>)
 80073ec:	f8c0 30e8 	str.w	r3, [r0, #232]	@ 0xe8
 80073f0:	f8c0 20bc 	str.w	r2, [r0, #188]	@ 0xbc
 80073f4:	f8c0 30bc 	str.w	r3, [r0, #188]	@ 0xbc
 80073f8:	f8c0 2090 	str.w	r2, [r0, #144]	@ 0x90
 80073fc:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90
 8007400:	6642      	str	r2, [r0, #100]	@ 0x64
 8007402:	6643      	str	r3, [r0, #100]	@ 0x64
 8007404:	6382      	str	r2, [r0, #56]	@ 0x38
 8007406:	6383      	str	r3, [r0, #56]	@ 0x38
 8007408:	6002      	str	r2, [r0, #0]
 800740a:	6003      	str	r3, [r0, #0]
class GraphWrapAndClear : public GraphWrapAndClearData
 800740c:	f44f 7137 	mov.w	r1, #732	@ 0x2dc
 8007410:	f026 fa4d 	bl	802d8ae <_ZdlPvj>
 8007414:	4620      	mov	r0, r4
 8007416:	bd10      	pop	{r4, pc}
 8007418:	08031904 	.word	0x08031904
 800741c:	08032af8 	.word	0x08032af8
 8007420:	08032518 	.word	0x08032518
 8007424:	080326b0 	.word	0x080326b0
 8007428:	080321ec 	.word	0x080321ec
 800742c:	0803310c 	.word	0x0803310c

08007430 <_ZN8touchgfx8CallbackI15Screen4ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007430:	b510      	push	{r4, lr}
 8007432:	4604      	mov	r4, r0
 8007434:	4b04      	ldr	r3, [pc, #16]	@ (8007448 <_ZN8touchgfx8CallbackI15Screen4ViewBaseRKNS_14AbstractButtonEvvED0Ev+0x18>)
 8007436:	6003      	str	r3, [r0, #0]
    }
 8007438:	4b04      	ldr	r3, [pc, #16]	@ (800744c <_ZN8touchgfx8CallbackI15Screen4ViewBaseRKNS_14AbstractButtonEvvED0Ev+0x1c>)
 800743a:	6003      	str	r3, [r0, #0]
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800743c:	2110      	movs	r1, #16
 800743e:	f026 fa36 	bl	802d8ae <_ZdlPvj>
 8007442:	4620      	mov	r0, r4
 8007444:	bd10      	pop	{r4, pc}
 8007446:	bf00      	nop
 8007448:	08031a9c 	.word	0x08031a9c
 800744c:	080312e8 	.word	0x080312e8

08007450 <_ZN8touchgfx8TextArea12setBaselineYEs>:
    virtual void setBaselineY(int16_t baselineY)
 8007450:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8007452:	6803      	ldr	r3, [r0, #0]
 8007454:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007456:	4b12      	ldr	r3, [pc, #72]	@ (80074a0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8007458:	681b      	ldr	r3, [r3, #0]
 800745a:	b1a3      	cbz	r3, 8007486 <_ZN8touchgfx8TextArea12setBaselineYEs+0x36>
 800745c:	4604      	mov	r4, r0
 800745e:	b28e      	uxth	r6, r1
        return typedTextId < numberOfTypedTexts;
 8007460:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8007462:	4910      	ldr	r1, [pc, #64]	@ (80074a4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8007464:	8809      	ldrh	r1, [r1, #0]
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007466:	428a      	cmp	r2, r1
 8007468:	d213      	bcs.n	8007492 <_ZN8touchgfx8TextArea12setBaselineYEs+0x42>
        return fonts[typedTexts[typedTextId].fontIdx];
 800746a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800746e:	4b0e      	ldr	r3, [pc, #56]	@ (80074a8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8007470:	681b      	ldr	r3, [r3, #0]
 8007472:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8007476:	6803      	ldr	r3, [r0, #0]
 8007478:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800747a:	4798      	blx	r3
 800747c:	1a31      	subs	r1, r6, r0
 800747e:	b209      	sxth	r1, r1
 8007480:	4620      	mov	r0, r4
 8007482:	47a8      	blx	r5
    }
 8007484:	bd70      	pop	{r4, r5, r6, pc}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007486:	4b09      	ldr	r3, [pc, #36]	@ (80074ac <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8007488:	4a09      	ldr	r2, [pc, #36]	@ (80074b0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800748a:	216c      	movs	r1, #108	@ 0x6c
 800748c:	4809      	ldr	r0, [pc, #36]	@ (80074b4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 800748e:	f027 f955 	bl	802e73c <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007492:	4b09      	ldr	r3, [pc, #36]	@ (80074b8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8007494:	4a06      	ldr	r2, [pc, #24]	@ (80074b0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8007496:	216d      	movs	r1, #109	@ 0x6d
 8007498:	4806      	ldr	r0, [pc, #24]	@ (80074b4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 800749a:	f027 f94f 	bl	802e73c <__assert_func>
 800749e:	bf00      	nop
 80074a0:	2000e464 	.word	0x2000e464
 80074a4:	2000e468 	.word	0x2000e468
 80074a8:	2000e46c 	.word	0x2000e46c
 80074ac:	08030f1c 	.word	0x08030f1c
 80074b0:	08030f60 	.word	0x08030f60
 80074b4:	08030f9c 	.word	0x08030f9c
 80074b8:	080317a8 	.word	0x080317a8

080074bc <_ZN15Screen4ViewBaseD1Ev>:
Screen4ViewBase::~Screen4ViewBase()
 80074bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80074be:	4604      	mov	r4, r0
 80074c0:	4b68      	ldr	r3, [pc, #416]	@ (8007664 <_ZN15Screen4ViewBaseD1Ev+0x1a8>)
 80074c2:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80074c4:	f011 fdec 	bl	80190a0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 80074c8:	f504 5340 	add.w	r3, r4, #12288	@ 0x3000
 80074cc:	4a66      	ldr	r2, [pc, #408]	@ (8007668 <_ZN15Screen4ViewBaseD1Ev+0x1ac>)
 80074ce:	f8c3 2600 	str.w	r2, [r3, #1536]	@ 0x600
    }
 80074d2:	4a66      	ldr	r2, [pc, #408]	@ (800766c <_ZN15Screen4ViewBaseD1Ev+0x1b0>)
 80074d4:	f8c3 2600 	str.w	r2, [r3, #1536]	@ 0x600
 80074d8:	4b65      	ldr	r3, [pc, #404]	@ (8007670 <_ZN15Screen4ViewBaseD1Ev+0x1b4>)
 80074da:	f8c4 3564 	str.w	r3, [r4, #1380]	@ 0x564
 80074de:	4b65      	ldr	r3, [pc, #404]	@ (8007674 <_ZN15Screen4ViewBaseD1Ev+0x1b8>)
 80074e0:	f8c4 3564 	str.w	r3, [r4, #1380]	@ 0x564
 80074e4:	4a64      	ldr	r2, [pc, #400]	@ (8007678 <_ZN15Screen4ViewBaseD1Ev+0x1bc>)
 80074e6:	f8c4 2564 	str.w	r2, [r4, #1380]	@ 0x564
 80074ea:	4b64      	ldr	r3, [pc, #400]	@ (800767c <_ZN15Screen4ViewBaseD1Ev+0x1c0>)
 80074ec:	f8c4 3564 	str.w	r3, [r4, #1380]	@ 0x564
 80074f0:	4963      	ldr	r1, [pc, #396]	@ (8007680 <_ZN15Screen4ViewBaseD1Ev+0x1c4>)
 80074f2:	f8c4 1518 	str.w	r1, [r4, #1304]	@ 0x518
class TextAreaWithWildcardBase : public TextArea
 80074f6:	4963      	ldr	r1, [pc, #396]	@ (8007684 <_ZN15Screen4ViewBaseD1Ev+0x1c8>)
 80074f8:	f8c4 1518 	str.w	r1, [r4, #1304]	@ 0x518
class TextArea : public Widget
 80074fc:	4962      	ldr	r1, [pc, #392]	@ (8007688 <_ZN15Screen4ViewBaseD1Ev+0x1cc>)
 80074fe:	f8c4 1518 	str.w	r1, [r4, #1304]	@ 0x518
    {
 8007502:	4e62      	ldr	r6, [pc, #392]	@ (800768c <_ZN15Screen4ViewBaseD1Ev+0x1d0>)
 8007504:	f8c4 6540 	str.w	r6, [r4, #1344]	@ 0x540
 8007508:	f8c4 2518 	str.w	r2, [r4, #1304]	@ 0x518
 800750c:	f8c4 3518 	str.w	r3, [r4, #1304]	@ 0x518
class ButtonWithLabel : public Button
 8007510:	495f      	ldr	r1, [pc, #380]	@ (8007690 <_ZN15Screen4ViewBaseD1Ev+0x1d4>)
 8007512:	f8c4 14d0 	str.w	r1, [r4, #1232]	@ 0x4d0
 8007516:	f8c4 6504 	str.w	r6, [r4, #1284]	@ 0x504
 800751a:	495e      	ldr	r1, [pc, #376]	@ (8007694 <_ZN15Screen4ViewBaseD1Ev+0x1d8>)
 800751c:	f8c4 14d0 	str.w	r1, [r4, #1232]	@ 0x4d0
class AbstractButton : public Widget
 8007520:	495d      	ldr	r1, [pc, #372]	@ (8007698 <_ZN15Screen4ViewBaseD1Ev+0x1dc>)
 8007522:	f8c4 14d0 	str.w	r1, [r4, #1232]	@ 0x4d0
 8007526:	f8c4 24d0 	str.w	r2, [r4, #1232]	@ 0x4d0
 800752a:	f8c4 34d0 	str.w	r3, [r4, #1232]	@ 0x4d0
 800752e:	495b      	ldr	r1, [pc, #364]	@ (800769c <_ZN15Screen4ViewBaseD1Ev+0x1e0>)
 8007530:	f8c4 14bc 	str.w	r1, [r4, #1212]	@ 0x4bc
 8007534:	3124      	adds	r1, #36	@ 0x24
 8007536:	f8c4 14c4 	str.w	r1, [r4, #1220]	@ 0x4c4
 800753a:	4959      	ldr	r1, [pc, #356]	@ (80076a0 <_ZN15Screen4ViewBaseD1Ev+0x1e4>)
 800753c:	f8c4 14c4 	str.w	r1, [r4, #1220]	@ 0x4c4
 8007540:	4958      	ldr	r1, [pc, #352]	@ (80076a4 <_ZN15Screen4ViewBaseD1Ev+0x1e8>)
 8007542:	f8c4 14bc 	str.w	r1, [r4, #1212]	@ 0x4bc
 8007546:	4958      	ldr	r1, [pc, #352]	@ (80076a8 <_ZN15Screen4ViewBaseD1Ev+0x1ec>)
 8007548:	f8c4 14bc 	str.w	r1, [r4, #1212]	@ 0x4bc
class GraphElementLine : public AbstractGraphElement
 800754c:	4957      	ldr	r1, [pc, #348]	@ (80076ac <_ZN15Screen4ViewBaseD1Ev+0x1f0>)
 800754e:	f8c4 148c 	str.w	r1, [r4, #1164]	@ 0x48c
class AbstractGraphElement : public CanvasWidget
 8007552:	4857      	ldr	r0, [pc, #348]	@ (80076b0 <_ZN15Screen4ViewBaseD1Ev+0x1f4>)
 8007554:	f8c4 048c 	str.w	r0, [r4, #1164]	@ 0x48c
class CanvasWidget : public Widget
 8007558:	4956      	ldr	r1, [pc, #344]	@ (80076b4 <_ZN15Screen4ViewBaseD1Ev+0x1f8>)
 800755a:	f8c4 148c 	str.w	r1, [r4, #1164]	@ 0x48c
 800755e:	f8c4 248c 	str.w	r2, [r4, #1164]	@ 0x48c
 8007562:	f8c4 348c 	str.w	r3, [r4, #1164]	@ 0x48c
class GraphLabelsY : public GraphLabelsBase
 8007566:	4d54      	ldr	r5, [pc, #336]	@ (80076b8 <_ZN15Screen4ViewBaseD1Ev+0x1fc>)
 8007568:	f8c4 5440 	str.w	r5, [r4, #1088]	@ 0x440
class GraphLabelsBase : public AbstractGraphDecoration
 800756c:	f8df c180 	ldr.w	ip, [pc, #384]	@ 80076f0 <_ZN15Screen4ViewBaseD1Ev+0x234>
 8007570:	f8c4 c440 	str.w	ip, [r4, #1088]	@ 0x440
 8007574:	f8c4 6478 	str.w	r6, [r4, #1144]	@ 0x478
class AbstractGraphDecoration : public AbstractGraphElementNoCWR
 8007578:	4f50      	ldr	r7, [pc, #320]	@ (80076bc <_ZN15Screen4ViewBaseD1Ev+0x200>)
 800757a:	f8c4 7440 	str.w	r7, [r4, #1088]	@ 0x440
class AbstractGraphElementNoCWR : public AbstractGraphElement
 800757e:	4d50      	ldr	r5, [pc, #320]	@ (80076c0 <_ZN15Screen4ViewBaseD1Ev+0x204>)
 8007580:	f8c4 5440 	str.w	r5, [r4, #1088]	@ 0x440
class AbstractGraphElement : public CanvasWidget
 8007584:	f8c4 0440 	str.w	r0, [r4, #1088]	@ 0x440
 8007588:	f8c4 1440 	str.w	r1, [r4, #1088]	@ 0x440
 800758c:	f8c4 2440 	str.w	r2, [r4, #1088]	@ 0x440
 8007590:	f8c4 3440 	str.w	r3, [r4, #1088]	@ 0x440
class GraphLabelsX : public GraphLabelsBase
 8007594:	f8df e15c 	ldr.w	lr, [pc, #348]	@ 80076f4 <_ZN15Screen4ViewBaseD1Ev+0x238>
 8007598:	f8c4 e3f4 	str.w	lr, [r4, #1012]	@ 0x3f4
class GraphLabelsBase : public AbstractGraphDecoration
 800759c:	f8c4 c3f4 	str.w	ip, [r4, #1012]	@ 0x3f4
 80075a0:	f8c4 642c 	str.w	r6, [r4, #1068]	@ 0x42c
class AbstractGraphDecoration : public AbstractGraphElementNoCWR
 80075a4:	f8c4 73f4 	str.w	r7, [r4, #1012]	@ 0x3f4
class AbstractGraphElementNoCWR : public AbstractGraphElement
 80075a8:	f8c4 53f4 	str.w	r5, [r4, #1012]	@ 0x3f4
class AbstractGraphElement : public CanvasWidget
 80075ac:	f8c4 03f4 	str.w	r0, [r4, #1012]	@ 0x3f4
 80075b0:	f8c4 13f4 	str.w	r1, [r4, #1012]	@ 0x3f4
 80075b4:	f8c4 23f4 	str.w	r2, [r4, #1012]	@ 0x3f4
 80075b8:	f8c4 33f4 	str.w	r3, [r4, #1012]	@ 0x3f4
class GraphElementGridY : public GraphElementGridBase
 80075bc:	4e41      	ldr	r6, [pc, #260]	@ (80076c4 <_ZN15Screen4ViewBaseD1Ev+0x208>)
 80075be:	f8c4 63b4 	str.w	r6, [r4, #948]	@ 0x3b4
class GraphElementGridBase : public AbstractGraphElementNoCWR
 80075c2:	4e41      	ldr	r6, [pc, #260]	@ (80076c8 <_ZN15Screen4ViewBaseD1Ev+0x20c>)
 80075c4:	f8c4 63b4 	str.w	r6, [r4, #948]	@ 0x3b4
class AbstractGraphElementNoCWR : public AbstractGraphElement
 80075c8:	f8c4 53b4 	str.w	r5, [r4, #948]	@ 0x3b4
class AbstractGraphElement : public CanvasWidget
 80075cc:	f8c4 03b4 	str.w	r0, [r4, #948]	@ 0x3b4
 80075d0:	f8c4 13b4 	str.w	r1, [r4, #948]	@ 0x3b4
 80075d4:	f8c4 23b4 	str.w	r2, [r4, #948]	@ 0x3b4
 80075d8:	f8c4 33b4 	str.w	r3, [r4, #948]	@ 0x3b4
class GraphElementGridX : public GraphElementGridBase
 80075dc:	4f3b      	ldr	r7, [pc, #236]	@ (80076cc <_ZN15Screen4ViewBaseD1Ev+0x210>)
 80075de:	f8c4 7374 	str.w	r7, [r4, #884]	@ 0x374
class GraphElementGridBase : public AbstractGraphElementNoCWR
 80075e2:	f8c4 6374 	str.w	r6, [r4, #884]	@ 0x374
class AbstractGraphElementNoCWR : public AbstractGraphElement
 80075e6:	f8c4 5374 	str.w	r5, [r4, #884]	@ 0x374
class AbstractGraphElement : public CanvasWidget
 80075ea:	f8c4 0374 	str.w	r0, [r4, #884]	@ 0x374
 80075ee:	f8c4 1374 	str.w	r1, [r4, #884]	@ 0x374
 80075f2:	f8c4 2374 	str.w	r2, [r4, #884]	@ 0x374
 80075f6:	f8c4 3374 	str.w	r3, [r4, #884]	@ 0x374
 80075fa:	4935      	ldr	r1, [pc, #212]	@ (80076d0 <_ZN15Screen4ViewBaseD1Ev+0x214>)
 80075fc:	f8c4 1098 	str.w	r1, [r4, #152]	@ 0x98
class GraphWrapAndClearData : public DynamicDataGraph
 8007600:	4934      	ldr	r1, [pc, #208]	@ (80076d4 <_ZN15Screen4ViewBaseD1Ev+0x218>)
 8007602:	f8c4 1098 	str.w	r1, [r4, #152]	@ 0x98
class DynamicDataGraph : public AbstractDataGraph
 8007606:	4934      	ldr	r1, [pc, #208]	@ (80076d8 <_ZN15Screen4ViewBaseD1Ev+0x21c>)
 8007608:	f8c4 1098 	str.w	r1, [r4, #152]	@ 0x98
class AbstractDataGraph : public Container
 800760c:	4933      	ldr	r1, [pc, #204]	@ (80076dc <_ZN15Screen4ViewBaseD1Ev+0x220>)
 800760e:	f8c4 1098 	str.w	r1, [r4, #152]	@ 0x98
 8007612:	4933      	ldr	r1, [pc, #204]	@ (80076e0 <_ZN15Screen4ViewBaseD1Ev+0x224>)
 8007614:	f8c4 1180 	str.w	r1, [r4, #384]	@ 0x180
 8007618:	f8c4 3180 	str.w	r3, [r4, #384]	@ 0x180
 800761c:	f8c4 1154 	str.w	r1, [r4, #340]	@ 0x154
 8007620:	f8c4 3154 	str.w	r3, [r4, #340]	@ 0x154
 8007624:	f8c4 1128 	str.w	r1, [r4, #296]	@ 0x128
 8007628:	f8c4 3128 	str.w	r3, [r4, #296]	@ 0x128
 800762c:	f8c4 10fc 	str.w	r1, [r4, #252]	@ 0xfc
 8007630:	f8c4 30fc 	str.w	r3, [r4, #252]	@ 0xfc
 8007634:	f8c4 10d0 	str.w	r1, [r4, #208]	@ 0xd0
 8007638:	f8c4 30d0 	str.w	r3, [r4, #208]	@ 0xd0
 800763c:	f8c4 1098 	str.w	r1, [r4, #152]	@ 0x98
 8007640:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
class Box : public Widget
 8007644:	4827      	ldr	r0, [pc, #156]	@ (80076e4 <_ZN15Screen4ViewBaseD1Ev+0x228>)
 8007646:	66e0      	str	r0, [r4, #108]	@ 0x6c
 8007648:	66e2      	str	r2, [r4, #108]	@ 0x6c
 800764a:	66e3      	str	r3, [r4, #108]	@ 0x6c
 800764c:	6420      	str	r0, [r4, #64]	@ 0x40
 800764e:	6422      	str	r2, [r4, #64]	@ 0x40
 8007650:	6423      	str	r3, [r4, #64]	@ 0x40
 8007652:	4a25      	ldr	r2, [pc, #148]	@ (80076e8 <_ZN15Screen4ViewBaseD1Ev+0x22c>)
 8007654:	6022      	str	r2, [r4, #0]
 8007656:	4a25      	ldr	r2, [pc, #148]	@ (80076ec <_ZN15Screen4ViewBaseD1Ev+0x230>)
 8007658:	6022      	str	r2, [r4, #0]
 800765a:	6061      	str	r1, [r4, #4]
 800765c:	6063      	str	r3, [r4, #4]
}
 800765e:	4620      	mov	r0, r4
 8007660:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007662:	bf00      	nop
 8007664:	08031ab4 	.word	0x08031ab4
 8007668:	08031a9c 	.word	0x08031a9c
 800766c:	080312e8 	.word	0x080312e8
 8007670:	08032d00 	.word	0x08032d00
 8007674:	08032f70 	.word	0x08032f70
 8007678:	080302c8 	.word	0x080302c8
 800767c:	0803310c 	.word	0x0803310c
 8007680:	08031840 	.word	0x08031840
 8007684:	08032ee0 	.word	0x08032ee0
 8007688:	08032d74 	.word	0x08032d74
 800768c:	08030688 	.word	0x08030688
 8007690:	08032fdc 	.word	0x08032fdc
 8007694:	08032e6c 	.word	0x08032e6c
 8007698:	08032c90 	.word	0x08032c90
 800769c:	08032408 	.word	0x08032408
 80076a0:	0803047c 	.word	0x0803047c
 80076a4:	08030490 	.word	0x08030490
 80076a8:	0803045c 	.word	0x0803045c
 80076ac:	080327e0 	.word	0x080327e0
 80076b0:	08030fec 	.word	0x08030fec
 80076b4:	080324a0 	.word	0x080324a0
 80076b8:	080329b8 	.word	0x080329b8
 80076bc:	08031260 	.word	0x08031260
 80076c0:	08031068 	.word	0x08031068
 80076c4:	080311a8 	.word	0x080311a8
 80076c8:	0803285c 	.word	0x0803285c
 80076cc:	080310f0 	.word	0x080310f0
 80076d0:	08031904 	.word	0x08031904
 80076d4:	08032af8 	.word	0x08032af8
 80076d8:	08032518 	.word	0x08032518
 80076dc:	080326b0 	.word	0x080326b0
 80076e0:	080321ec 	.word	0x080321ec
 80076e4:	08032e04 	.word	0x08032e04
 80076e8:	080318d0 	.word	0x080318d0
 80076ec:	0803322c 	.word	0x0803322c
 80076f0:	08032a58 	.word	0x08032a58
 80076f4:	08032918 	.word	0x08032918

080076f8 <_ZN15Screen4ViewBaseD0Ev>:
Screen4ViewBase::~Screen4ViewBase()
 80076f8:	b510      	push	{r4, lr}
 80076fa:	4604      	mov	r4, r0
}
 80076fc:	f7ff fede 	bl	80074bc <_ZN15Screen4ViewBaseD1Ev>
 8007700:	f243 6110 	movw	r1, #13840	@ 0x3610
 8007704:	4620      	mov	r0, r4
 8007706:	f026 f8d2 	bl	802d8ae <_ZdlPvj>
 800770a:	4620      	mov	r0, r4
 800770c:	bd10      	pop	{r4, pc}

0800770e <_ZN15Screen4ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen4ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel1)
 800770e:	f500 609a 	add.w	r0, r0, #1232	@ 0x4d0
 8007712:	4288      	cmp	r0, r1
 8007714:	d000      	beq.n	8007718 <_ZN15Screen4ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa>
 8007716:	4770      	bx	lr
{
 8007718:	b508      	push	{r3, lr}
    virtual ~Screen4ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800771a:	f013 f993 	bl	801aa44 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Screen2
        //Go to Screen2 with screen transition towards South
        application().gotoScreen2ScreenCoverTransitionSouth();
 800771e:	f7fd f8cf 	bl	80048c0 <_ZN23FrontendApplicationBase37gotoScreen2ScreenCoverTransitionSouthEv>
    }
}
 8007722:	bd08      	pop	{r3, pc}

08007724 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8007724:	b510      	push	{r4, lr}
 8007726:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8007728:	2226      	movs	r2, #38	@ 0x26
 800772a:	2100      	movs	r1, #0
 800772c:	f027 fa0d 	bl	802eb4a <memset>
 8007730:	4620      	mov	r0, r4
 8007732:	f7fe fcc3 	bl	80060bc <_ZN8touchgfx6WidgetC1Ev>
 8007736:	4b0d      	ldr	r3, [pc, #52]	@ (800776c <_ZN8touchgfx8TextAreaC1Ev+0x48>)
 8007738:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 800773a:	4b0d      	ldr	r3, [pc, #52]	@ (8007770 <_ZN8touchgfx8TextAreaC1Ev+0x4c>)
 800773c:	62a3      	str	r3, [r4, #40]	@ 0x28
 800773e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8007742:	85a2      	strh	r2, [r4, #44]	@ 0x2c
        : color(col)
 8007744:	2300      	movs	r3, #0
 8007746:	6323      	str	r3, [r4, #48]	@ 0x30
 8007748:	86a3      	strh	r3, [r4, #52]	@ 0x34
 800774a:	f884 2036 	strb.w	r2, [r4, #54]	@ 0x36
 800774e:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
 8007752:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
 8007756:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800775a:	87a3      	strh	r3, [r4, #60]	@ 0x3c
 800775c:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800775e:	f8a4 2040 	strh.w	r2, [r4, #64]	@ 0x40
 8007762:	f8a4 2042 	strh.w	r2, [r4, #66]	@ 0x42
              text(0)
 8007766:	6463      	str	r3, [r4, #68]	@ 0x44
    }
 8007768:	4620      	mov	r0, r4
 800776a:	bd10      	pop	{r4, pc}
 800776c:	08032d74 	.word	0x08032d74
 8007770:	08030688 	.word	0x08030688

08007774 <_ZN15Screen4ViewBaseC1Ev>:
Screen4ViewBase::Screen4ViewBase() :
 8007774:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007778:	b09f      	sub	sp, #124	@ 0x7c
 800777a:	4604      	mov	r4, r0
        : presenter(0)
 800777c:	f015 fa7e 	bl	801cc7c <_ZN8touchgfx6ScreenC1Ev>
 8007780:	4bea      	ldr	r3, [pc, #936]	@ (8007b2c <_ZN15Screen4ViewBaseC1Ev+0x3b8>)
 8007782:	6023      	str	r3, [r4, #0]
 8007784:	2600      	movs	r6, #0
 8007786:	63e6      	str	r6, [r4, #60]	@ 0x3c
    buttonCallback(this, &Screen4ViewBase::buttonCallbackHandler)
 8007788:	4627      	mov	r7, r4
 800778a:	4be9      	ldr	r3, [pc, #932]	@ (8007b30 <_ZN15Screen4ViewBaseC1Ev+0x3bc>)
 800778c:	f847 3b40 	str.w	r3, [r7], #64
 8007790:	4638      	mov	r0, r7
 8007792:	f7fe fcaf 	bl	80060f4 <_ZN8touchgfx3BoxC1Ev>
 8007796:	f104 0b6c 	add.w	fp, r4, #108	@ 0x6c
 800779a:	4658      	mov	r0, fp
 800779c:	f7fe fcaa 	bl	80060f4 <_ZN8touchgfx3BoxC1Ev>
        : GraphWrapAndClearData(CAPACITY, y)
 80077a0:	f104 0598 	add.w	r5, r4, #152	@ 0x98
        : DynamicDataGraph(capacity, values)
 80077a4:	f504 72f2 	add.w	r2, r4, #484	@ 0x1e4
 80077a8:	2164      	movs	r1, #100	@ 0x64
 80077aa:	4628      	mov	r0, r5
 80077ac:	f7fe fd0a 	bl	80061c4 <_ZN8touchgfx16DynamicDataGraphC1EsPi>
 80077b0:	4be0      	ldr	r3, [pc, #896]	@ (8007b34 <_ZN15Screen4ViewBaseC1Ev+0x3c0>)
 80077b2:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
        : GraphWrapAndClearData(CAPACITY, y)
 80077b6:	4be0      	ldr	r3, [pc, #896]	@ (8007b38 <_ZN15Screen4ViewBaseC1Ev+0x3c4>)
 80077b8:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
class GraphElementGridX : public GraphElementGridBase
 80077bc:	f504 7a5d 	add.w	sl, r4, #884	@ 0x374
 80077c0:	4650      	mov	r0, sl
 80077c2:	f7fe fd1d 	bl	8006200 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80077c6:	4bdd      	ldr	r3, [pc, #884]	@ (8007b3c <_ZN15Screen4ViewBaseC1Ev+0x3c8>)
 80077c8:	f8c4 3374 	str.w	r3, [r4, #884]	@ 0x374
class GraphElementGridY : public GraphElementGridBase
 80077cc:	f504 736d 	add.w	r3, r4, #948	@ 0x3b4
 80077d0:	9303      	str	r3, [sp, #12]
 80077d2:	4618      	mov	r0, r3
 80077d4:	f7fe fd14 	bl	8006200 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80077d8:	4bd9      	ldr	r3, [pc, #868]	@ (8007b40 <_ZN15Screen4ViewBaseC1Ev+0x3cc>)
 80077da:	f8c4 33b4 	str.w	r3, [r4, #948]	@ 0x3b4
class GraphLabelsX : public GraphLabelsBase
 80077de:	f504 737d 	add.w	r3, r4, #1012	@ 0x3f4
 80077e2:	9304      	str	r3, [sp, #16]
 80077e4:	4618      	mov	r0, r3
 80077e6:	f7fe fd27 	bl	8006238 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 80077ea:	4bd6      	ldr	r3, [pc, #856]	@ (8007b44 <_ZN15Screen4ViewBaseC1Ev+0x3d0>)
 80077ec:	f8c4 33f4 	str.w	r3, [r4, #1012]	@ 0x3f4
class GraphLabelsY : public GraphLabelsBase
 80077f0:	f504 6388 	add.w	r3, r4, #1088	@ 0x440
 80077f4:	9305      	str	r3, [sp, #20]
 80077f6:	4618      	mov	r0, r3
 80077f8:	f7fe fd1e 	bl	8006238 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 80077fc:	4bd2      	ldr	r3, [pc, #840]	@ (8007b48 <_ZN15Screen4ViewBaseC1Ev+0x3d4>)
 80077fe:	f8c4 3440 	str.w	r3, [r4, #1088]	@ 0x440
        : CanvasWidget()
 8007802:	f204 438c 	addw	r3, r4, #1164	@ 0x48c
 8007806:	9306      	str	r3, [sp, #24]
 8007808:	4618      	mov	r0, r3
 800780a:	f00d ff29 	bl	8015660 <_ZN8touchgfx12CanvasWidgetC1Ev>
 800780e:	4bcf      	ldr	r3, [pc, #828]	@ (8007b4c <_ZN15Screen4ViewBaseC1Ev+0x3d8>)
 8007810:	f8c4 348c 	str.w	r3, [r4, #1164]	@ 0x48c
        : lineWidth(2)
 8007814:	4bce      	ldr	r3, [pc, #824]	@ (8007b50 <_ZN15Screen4ViewBaseC1Ev+0x3dc>)
 8007816:	f8c4 348c 	str.w	r3, [r4, #1164]	@ 0x48c
 800781a:	2302      	movs	r3, #2
 800781c:	f884 34b8 	strb.w	r3, [r4, #1208]	@ 0x4b8
 8007820:	f204 49bc 	addw	r9, r4, #1212	@ 0x4bc
 8007824:	4631      	mov	r1, r6
 8007826:	4648      	mov	r0, r9
 8007828:	f7fb fe56 	bl	80034d8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 800782c:	f504 639a 	add.w	r3, r4, #1232	@ 0x4d0
 8007830:	9302      	str	r3, [sp, #8]
 8007832:	4618      	mov	r0, r3
 8007834:	f010 fd6e 	bl	8018314 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : TextArea()
 8007838:	f504 60a3 	add.w	r0, r4, #1304	@ 0x518
 800783c:	f7ff ff72 	bl	8007724 <_ZN8touchgfx8TextAreaC1Ev>
 8007840:	4bc4      	ldr	r3, [pc, #784]	@ (8007b54 <_ZN15Screen4ViewBaseC1Ev+0x3e0>)
 8007842:	f8c4 3518 	str.w	r3, [r4, #1304]	@ 0x518
        : TextAreaWithWildcardBase(), wc1(0)
 8007846:	4bc4      	ldr	r3, [pc, #784]	@ (8007b58 <_ZN15Screen4ViewBaseC1Ev+0x3e4>)
 8007848:	f8c4 3518 	str.w	r3, [r4, #1304]	@ 0x518
 800784c:	f8c4 6560 	str.w	r6, [r4, #1376]	@ 0x560
 8007850:	f204 5364 	addw	r3, r4, #1380	@ 0x564
 8007854:	461a      	mov	r2, r3
 8007856:	9307      	str	r3, [sp, #28]
 8007858:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800785c:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8007860:	a90e      	add	r1, sp, #56	@ 0x38
 8007862:	4610      	mov	r0, r2
 8007864:	f00f fd4e 	bl	8017304 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007868:	4bbc      	ldr	r3, [pc, #752]	@ (8007b5c <_ZN15Screen4ViewBaseC1Ev+0x3e8>)
 800786a:	930f      	str	r3, [sp, #60]	@ 0x3c
 800786c:	9610      	str	r6, [sp, #64]	@ 0x40
 800786e:	aa0c      	add	r2, sp, #48	@ 0x30
 8007870:	ab0f      	add	r3, sp, #60	@ 0x3c
 8007872:	e893 0003 	ldmia.w	r3, {r0, r1}
 8007876:	e882 0003 	stmia.w	r2, {r0, r1}
class GenericCallback<T1, void, void>
 800787a:	f504 5340 	add.w	r3, r4, #12288	@ 0x3000
 800787e:	49b8      	ldr	r1, [pc, #736]	@ (8007b60 <_ZN15Screen4ViewBaseC1Ev+0x3ec>)
 8007880:	f8c3 1600 	str.w	r1, [r3, #1536]	@ 0x600
        : pobject(pObject), pmemfun(pmemfun_1)
 8007884:	49b7      	ldr	r1, [pc, #732]	@ (8007b64 <_ZN15Screen4ViewBaseC1Ev+0x3f0>)
 8007886:	f8c3 1600 	str.w	r1, [r3, #1536]	@ 0x600
 800788a:	f8c3 4604 	str.w	r4, [r3, #1540]	@ 0x604
 800788e:	f503 63c1 	add.w	r3, r3, #1544	@ 0x608
 8007892:	e892 0003 	ldmia.w	r2, {r0, r1}
 8007896:	e883 0003 	stmia.w	r3, {r0, r1}
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800789a:	f642 61e0 	movw	r1, #12000	@ 0x2ee0
 800789e:	f504 60e4 	add.w	r0, r4, #1824	@ 0x720
 80078a2:	f011 fbf3 	bl	801908c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
        setXY(x, y);
 80078a6:	4632      	mov	r2, r6
 80078a8:	4631      	mov	r1, r6
 80078aa:	4638      	mov	r0, r7
 80078ac:	f7fe fbee 	bl	800608c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80078b0:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 80078b4:	f44f 7148 	mov.w	r1, #800	@ 0x320
 80078b8:	4638      	mov	r0, r7
 80078ba:	f7fe fbf3 	bl	80060a4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
        color = newColor;
 80078be:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80078c2:	66a3      	str	r3, [r4, #104]	@ 0x68
        container.add(d);
 80078c4:	f104 0804 	add.w	r8, r4, #4
 80078c8:	4639      	mov	r1, r7
 80078ca:	4640      	mov	r0, r8
 80078cc:	f00b f82c 	bl	8012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setXY(x, y);
 80078d0:	4632      	mov	r2, r6
 80078d2:	4631      	mov	r1, r6
 80078d4:	4658      	mov	r0, fp
 80078d6:	f7fe fbd9 	bl	800608c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80078da:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 80078de:	f44f 7148 	mov.w	r1, #800	@ 0x320
 80078e2:	4658      	mov	r0, fp
 80078e4:	f7fe fbde 	bl	80060a4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
        : color(col)
 80078e8:	f04f 33ff 	mov.w	r3, #4294967295
 80078ec:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
 80078f0:	4659      	mov	r1, fp
 80078f2:	4640      	mov	r0, r8
 80078f4:	f00b f818 	bl	8012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setXY(x, y);
 80078f8:	2241      	movs	r2, #65	@ 0x41
 80078fa:	4631      	mov	r1, r6
 80078fc:	4628      	mov	r0, r5
 80078fe:	f7fe fbc5 	bl	800608c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8007902:	f240 1297 	movw	r2, #407	@ 0x197
 8007906:	f44f 7148 	mov.w	r1, #800	@ 0x320
 800790a:	4628      	mov	r0, r5
 800790c:	f7fe fbca 	bl	80060a4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    dynamicGraph1.setScale(1);
 8007910:	4632      	mov	r2, r6
 8007912:	2101      	movs	r1, #1
 8007914:	4628      	mov	r0, r5
 8007916:	f7fd fec4 	bl	80056a2 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph1.setGraphAreaMargin(10, 68, 0, 30);
 800791a:	231e      	movs	r3, #30
 800791c:	9300      	str	r3, [sp, #0]
 800791e:	4633      	mov	r3, r6
 8007920:	2244      	movs	r2, #68	@ 0x44
 8007922:	210a      	movs	r1, #10
 8007924:	4628      	mov	r0, r5
 8007926:	f00e fa2c 	bl	8015d82 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph1.setGraphAreaPadding(0, 0, 0, 0);
 800792a:	9600      	str	r6, [sp, #0]
 800792c:	4633      	mov	r3, r6
 800792e:	4632      	mov	r2, r6
 8007930:	4631      	mov	r1, r6
 8007932:	4628      	mov	r0, r5
 8007934:	f00e f928 	bl	8015b88 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
        return int2scaled(i, yScale);
 8007938:	f8d4 20cc 	ldr.w	r2, [r4, #204]	@ 0xcc
        return i * scale;
 800793c:	eb02 0182 	add.w	r1, r2, r2, lsl #2
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8007940:	f8d4 3098 	ldr.w	r3, [r4, #152]	@ 0x98
 8007944:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 8007948:	2064      	movs	r0, #100	@ 0x64
 800794a:	fb00 f202 	mul.w	r2, r0, r2
 800794e:	00c9      	lsls	r1, r1, #3
 8007950:	4628      	mov	r0, r5
 8007952:	4798      	blx	r3
 8007954:	4f84      	ldr	r7, [pc, #528]	@ (8007b68 <_ZN15Screen4ViewBaseC1Ev+0x3f4>)
        color = newColor;
 8007956:	f8c4 73a0 	str.w	r7, [r4, #928]	@ 0x3a0
        setIntervalScaled(abs(interval) * dataScale);
 800795a:	200a      	movs	r0, #10
 800795c:	f7fe fcf0 	bl	8006340 <_ZN8touchgfx3absIiEET_S1_>
 8007960:	f8d4 b3a4 	ldr.w	fp, [r4, #932]	@ 0x3a4
        gridInterval = abs(interval);
 8007964:	fb0b f000 	mul.w	r0, fp, r0
 8007968:	f7fe fcea 	bl	8006340 <_ZN8touchgfx3absIiEET_S1_>
 800796c:	f8c4 03a8 	str.w	r0, [r4, #936]	@ 0x3a8
        lineWidth = width;
 8007970:	2601      	movs	r6, #1
 8007972:	f884 63ac 	strb.w	r6, [r4, #940]	@ 0x3ac
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8007976:	4632      	mov	r2, r6
 8007978:	4659      	mov	r1, fp
 800797a:	f00e fab5 	bl	8015ee8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800797e:	f8c4 03a8 	str.w	r0, [r4, #936]	@ 0x3a8
        dataScale = scale;
 8007982:	f8c4 63a4 	str.w	r6, [r4, #932]	@ 0x3a4
    dynamicGraph1.addGraphElement(dynamicGraph1MajorXAxisGrid);
 8007986:	4651      	mov	r1, sl
 8007988:	4628      	mov	r0, r5
 800798a:	f00e f908 	bl	8015b9e <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        color = newColor;
 800798e:	f8c4 73e0 	str.w	r7, [r4, #992]	@ 0x3e0
        setIntervalScaled(abs(interval) * dataScale);
 8007992:	2006      	movs	r0, #6
 8007994:	f7fe fcd4 	bl	8006340 <_ZN8touchgfx3absIiEET_S1_>
 8007998:	f8d4 a3e4 	ldr.w	sl, [r4, #996]	@ 0x3e4
        gridInterval = abs(interval);
 800799c:	fb0a f000 	mul.w	r0, sl, r0
 80079a0:	f7fe fcce 	bl	8006340 <_ZN8touchgfx3absIiEET_S1_>
 80079a4:	f8c4 03e8 	str.w	r0, [r4, #1000]	@ 0x3e8
        lineWidth = width;
 80079a8:	f884 63ec 	strb.w	r6, [r4, #1004]	@ 0x3ec
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80079ac:	4632      	mov	r2, r6
 80079ae:	4651      	mov	r1, sl
 80079b0:	f00e fa9a 	bl	8015ee8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 80079b4:	f8c4 03e8 	str.w	r0, [r4, #1000]	@ 0x3e8
        dataScale = scale;
 80079b8:	f8c4 63e4 	str.w	r6, [r4, #996]	@ 0x3e4
    dynamicGraph1.addGraphElement(dynamicGraph1MajorYAxisGrid);
 80079bc:	9903      	ldr	r1, [sp, #12]
 80079be:	4628      	mov	r0, r5
 80079c0:	f00e f8ed 	bl	8015b9e <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        setIntervalScaled(AbstractDataGraph::int2scaled(interval, dataScale));
 80079c4:	f8d4 a424 	ldr.w	sl, [r4, #1060]	@ 0x424
        return i * scale;
 80079c8:	eb0a 008a 	add.w	r0, sl, sl, lsl #2
        labelInterval = abs(interval);
 80079cc:	40b0      	lsls	r0, r6
 80079ce:	f7fe fcb7 	bl	8006340 <_ZN8touchgfx3absIiEET_S1_>
 80079d2:	f8c4 0428 	str.w	r0, [r4, #1064]	@ 0x428
 80079d6:	f8df b1a0 	ldr.w	fp, [pc, #416]	@ 8007b78 <_ZN15Screen4ViewBaseC1Ev+0x404>
 80079da:	f8cd b044 	str.w	fp, [sp, #68]	@ 0x44
 80079de:	2305      	movs	r3, #5
 80079e0:	f8ad 3048 	strh.w	r3, [sp, #72]	@ 0x48
class TypedText
 80079e4:	f8a4 3430 	strh.w	r3, [r4, #1072]	@ 0x430
        color = newColor;
 80079e8:	f8c4 7420 	str.w	r7, [r4, #1056]	@ 0x420
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 80079ec:	4632      	mov	r2, r6
 80079ee:	4651      	mov	r1, sl
 80079f0:	f00e fa7a 	bl	8015ee8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 80079f4:	f8c4 0428 	str.w	r0, [r4, #1064]	@ 0x428
        dataScale = scale;
 80079f8:	f8c4 6424 	str.w	r6, [r4, #1060]	@ 0x424
    dynamicGraph1.addBottomElement(dynamicGraph1MajorXAxisLabel);
 80079fc:	9904      	ldr	r1, [sp, #16]
 80079fe:	4628      	mov	r0, r5
 8007a00:	f00e f8f1 	bl	8015be6 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>
        setIntervalScaled(AbstractDataGraph::int2scaled(interval, dataScale));
 8007a04:	f8d4 a470 	ldr.w	sl, [r4, #1136]	@ 0x470
 8007a08:	eb0a 008a 	add.w	r0, sl, sl, lsl #2
        labelInterval = abs(interval);
 8007a0c:	40b0      	lsls	r0, r6
 8007a0e:	f7fe fc97 	bl	8006340 <_ZN8touchgfx3absIiEET_S1_>
 8007a12:	f8c4 0474 	str.w	r0, [r4, #1140]	@ 0x474
        : typedTextId(id)
 8007a16:	f8cd b04c 	str.w	fp, [sp, #76]	@ 0x4c
 8007a1a:	2306      	movs	r3, #6
 8007a1c:	f8ad 3050 	strh.w	r3, [sp, #80]	@ 0x50
class TypedText
 8007a20:	f8a4 347c 	strh.w	r3, [r4, #1148]	@ 0x47c
 8007a24:	f8c4 746c 	str.w	r7, [r4, #1132]	@ 0x46c
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8007a28:	4632      	mov	r2, r6
 8007a2a:	4651      	mov	r1, sl
 8007a2c:	f00e fa5c 	bl	8015ee8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 8007a30:	f8c4 0474 	str.w	r0, [r4, #1140]	@ 0x474
        dataScale = scale;
 8007a34:	f8c4 6470 	str.w	r6, [r4, #1136]	@ 0x470
    dynamicGraph1.addLeftElement(dynamicGraph1MajorYAxisLabel);
 8007a38:	9905      	ldr	r1, [sp, #20]
 8007a3a:	4628      	mov	r0, r5
 8007a3c:	f00e f8c1 	bl	8015bc2 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
    dynamicGraph1Line1Painter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 8007a40:	f04f 417f 	mov.w	r1, #4278190080	@ 0xff000000
 8007a44:	4648      	mov	r0, r9
 8007a46:	f7fe fc27 	bl	8006298 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
        canvasPainter = &painter;
 8007a4a:	f8c4 94b4 	str.w	r9, [r4, #1204]	@ 0x4b4
        lineWidth = width;
 8007a4e:	2303      	movs	r3, #3
 8007a50:	f884 34b8 	strb.w	r3, [r4, #1208]	@ 0x4b8
    dynamicGraph1.addGraphElement(dynamicGraph1Line1);
 8007a54:	9906      	ldr	r1, [sp, #24]
 8007a56:	4628      	mov	r0, r5
 8007a58:	f00e f8a1 	bl	8015b9e <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        const float fs = f * (float)scale;
 8007a5c:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8007a60:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007a64:	ed9f 7a41 	vldr	s14, [pc, #260]	@ 8007b6c <_ZN15Screen4ViewBaseC1Ev+0x3f8>
 8007a68:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007a6c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007a70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007a74:	f281 8726 	bge.w	80098c4 <_ZN15Screen4ViewBaseC1Ev+0x2150>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8007a78:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007a7c:	ee17 3a10 	vmov	r3, s14
 8007a80:	1e59      	subs	r1, r3, #1
 8007a82:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8007a86:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8007a8a:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8007a8e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007a92:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007a96:	ee17 3a90 	vmov	r3, s15
 8007a9a:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8007a9c:	4628      	mov	r0, r5
 8007a9e:	f00e fa7d 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007aa2:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8007aa6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007aaa:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8007b70 <_ZN15Screen4ViewBaseC1Ev+0x3fc>
 8007aae:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007ab2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007ab6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007aba:	f281 870d 	bge.w	80098d8 <_ZN15Screen4ViewBaseC1Ev+0x2164>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8007abe:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007ac2:	ee17 3a10 	vmov	r3, s14
 8007ac6:	1e59      	subs	r1, r3, #1
 8007ac8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8007acc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8007ad0:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8007ad4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007ad8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007adc:	ee17 3a90 	vmov	r3, s15
 8007ae0:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8007ae2:	4628      	mov	r0, r5
 8007ae4:	f00e fa5a 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007ae8:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8007aec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007af0:	ed9f 7a20 	vldr	s14, [pc, #128]	@ 8007b74 <_ZN15Screen4ViewBaseC1Ev+0x400>
 8007af4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007af8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007afc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007b00:	f281 86f4 	bge.w	80098ec <_ZN15Screen4ViewBaseC1Ev+0x2178>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8007b04:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007b08:	ee17 3a10 	vmov	r3, s14
 8007b0c:	1e59      	subs	r1, r3, #1
 8007b0e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8007b12:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8007b16:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8007b1a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007b1e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007b22:	ee17 3a90 	vmov	r3, s15
 8007b26:	4419      	add	r1, r3
 8007b28:	e044      	b.n	8007bb4 <_ZN15Screen4ViewBaseC1Ev+0x440>
 8007b2a:	bf00      	nop
 8007b2c:	080318d0 	.word	0x080318d0
 8007b30:	08031ab4 	.word	0x08031ab4
 8007b34:	08032af8 	.word	0x08032af8
 8007b38:	08031904 	.word	0x08031904
 8007b3c:	080310f0 	.word	0x080310f0
 8007b40:	080311a8 	.word	0x080311a8
 8007b44:	08032918 	.word	0x08032918
 8007b48:	080329b8 	.word	0x080329b8
 8007b4c:	08030fec 	.word	0x08030fec
 8007b50:	080327e0 	.word	0x080327e0
 8007b54:	08032ee0 	.word	0x08032ee0
 8007b58:	08031840 	.word	0x08031840
 8007b5c:	0800770f 	.word	0x0800770f
 8007b60:	080312e8 	.word	0x080312e8
 8007b64:	08031a9c 	.word	0x08031a9c
 8007b68:	ff1497c5 	.word	0xff1497c5
 8007b6c:	4272cb29 	.word	0x4272cb29
 8007b70:	428de6a7 	.word	0x428de6a7
 8007b74:	42a20d14 	.word	0x42a20d14
 8007b78:	08030688 	.word	0x08030688
 8007b7c:	42b22202 	.word	0x42b22202
 8007b80:	42bb6005 	.word	0x42bb6005
 8007b84:	42bc94e4 	.word	0x42bc94e4
 8007b88:	42b661ad 	.word	0x42b661ad
 8007b8c:	42ab09df 	.word	0x42ab09df
 8007b90:	429ddde7 	.word	0x429ddde7
 8007b94:	429265ed 	.word	0x429265ed
 8007b98:	428b8152 	.word	0x428b8152
 8007b9c:	428ab1fd 	.word	0x428ab1fd
 8007ba0:	428fbfb7 	.word	0x428fbfb7
 8007ba4:	4298ca2e 	.word	0x4298ca2e
 8007ba8:	42a2c51b 	.word	0x42a2c51b
 8007bac:	42aa3fc8 	.word	0x42aa3fc8
 8007bb0:	42ac46e3 	.word	0x42ac46e3
        return addDataPointScaled(float2scaledY(y));
 8007bb4:	4628      	mov	r0, r5
 8007bb6:	f00e f9f1 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007bba:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8007bbe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007bc2:	ed1f 7a12 	vldr	s14, [pc, #-72]	@ 8007b7c <_ZN15Screen4ViewBaseC1Ev+0x408>
 8007bc6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007bca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007bce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007bd2:	f281 8695 	bge.w	8009900 <_ZN15Screen4ViewBaseC1Ev+0x218c>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8007bd6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007bda:	ee17 3a10 	vmov	r3, s14
 8007bde:	1e59      	subs	r1, r3, #1
 8007be0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8007be4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8007be8:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8007bec:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007bf0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007bf4:	ee17 3a90 	vmov	r3, s15
 8007bf8:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8007bfa:	4628      	mov	r0, r5
 8007bfc:	f00e f9ce 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007c00:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8007c04:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007c08:	ed1f 7a23 	vldr	s14, [pc, #-140]	@ 8007b80 <_ZN15Screen4ViewBaseC1Ev+0x40c>
 8007c0c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007c10:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007c14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007c18:	f281 867c 	bge.w	8009914 <_ZN15Screen4ViewBaseC1Ev+0x21a0>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8007c1c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007c20:	ee17 3a10 	vmov	r3, s14
 8007c24:	1e59      	subs	r1, r3, #1
 8007c26:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8007c2a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8007c2e:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8007c32:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007c36:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007c3a:	ee17 3a90 	vmov	r3, s15
 8007c3e:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8007c40:	4628      	mov	r0, r5
 8007c42:	f00e f9ab 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007c46:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8007c4a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007c4e:	ed1f 7a33 	vldr	s14, [pc, #-204]	@ 8007b84 <_ZN15Screen4ViewBaseC1Ev+0x410>
 8007c52:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007c56:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007c5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007c5e:	f281 8663 	bge.w	8009928 <_ZN15Screen4ViewBaseC1Ev+0x21b4>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8007c62:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007c66:	ee17 3a10 	vmov	r3, s14
 8007c6a:	1e59      	subs	r1, r3, #1
 8007c6c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8007c70:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8007c74:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8007c78:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007c7c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007c80:	ee17 3a90 	vmov	r3, s15
 8007c84:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8007c86:	4628      	mov	r0, r5
 8007c88:	f00e f988 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007c8c:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8007c90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007c94:	ed1f 7a44 	vldr	s14, [pc, #-272]	@ 8007b88 <_ZN15Screen4ViewBaseC1Ev+0x414>
 8007c98:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007c9c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007ca0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007ca4:	f281 864a 	bge.w	800993c <_ZN15Screen4ViewBaseC1Ev+0x21c8>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8007ca8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007cac:	ee17 3a10 	vmov	r3, s14
 8007cb0:	1e59      	subs	r1, r3, #1
 8007cb2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8007cb6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8007cba:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8007cbe:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007cc2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007cc6:	ee17 3a90 	vmov	r3, s15
 8007cca:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8007ccc:	4628      	mov	r0, r5
 8007cce:	f00e f965 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007cd2:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8007cd6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007cda:	ed1f 7a54 	vldr	s14, [pc, #-336]	@ 8007b8c <_ZN15Screen4ViewBaseC1Ev+0x418>
 8007cde:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007ce2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007ce6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007cea:	f281 8631 	bge.w	8009950 <_ZN15Screen4ViewBaseC1Ev+0x21dc>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8007cee:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007cf2:	ee17 3a10 	vmov	r3, s14
 8007cf6:	1e59      	subs	r1, r3, #1
 8007cf8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8007cfc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8007d00:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8007d04:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007d08:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007d0c:	ee17 3a90 	vmov	r3, s15
 8007d10:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8007d12:	4628      	mov	r0, r5
 8007d14:	f00e f942 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007d18:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8007d1c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007d20:	ed1f 7a65 	vldr	s14, [pc, #-404]	@ 8007b90 <_ZN15Screen4ViewBaseC1Ev+0x41c>
 8007d24:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007d28:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007d2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007d30:	f281 8618 	bge.w	8009964 <_ZN15Screen4ViewBaseC1Ev+0x21f0>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8007d34:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007d38:	ee17 3a10 	vmov	r3, s14
 8007d3c:	1e59      	subs	r1, r3, #1
 8007d3e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8007d42:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8007d46:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8007d4a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007d4e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007d52:	ee17 3a90 	vmov	r3, s15
 8007d56:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8007d58:	4628      	mov	r0, r5
 8007d5a:	f00e f91f 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007d5e:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8007d62:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007d66:	ed1f 7a75 	vldr	s14, [pc, #-468]	@ 8007b94 <_ZN15Screen4ViewBaseC1Ev+0x420>
 8007d6a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007d6e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007d72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007d76:	f281 85ff 	bge.w	8009978 <_ZN15Screen4ViewBaseC1Ev+0x2204>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8007d7a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007d7e:	ee17 3a10 	vmov	r3, s14
 8007d82:	1e59      	subs	r1, r3, #1
 8007d84:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8007d88:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8007d8c:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8007d90:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007d94:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007d98:	ee17 3a90 	vmov	r3, s15
 8007d9c:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8007d9e:	4628      	mov	r0, r5
 8007da0:	f00e f8fc 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007da4:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8007da8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007dac:	ed1f 7a86 	vldr	s14, [pc, #-536]	@ 8007b98 <_ZN15Screen4ViewBaseC1Ev+0x424>
 8007db0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007db4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007db8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007dbc:	f281 85e6 	bge.w	800998c <_ZN15Screen4ViewBaseC1Ev+0x2218>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8007dc0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007dc4:	ee17 3a10 	vmov	r3, s14
 8007dc8:	1e59      	subs	r1, r3, #1
 8007dca:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8007dce:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8007dd2:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8007dd6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007dda:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007dde:	ee17 3a90 	vmov	r3, s15
 8007de2:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8007de4:	4628      	mov	r0, r5
 8007de6:	f00e f8d9 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007dea:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8007dee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007df2:	ed1f 7a96 	vldr	s14, [pc, #-600]	@ 8007b9c <_ZN15Screen4ViewBaseC1Ev+0x428>
 8007df6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007dfa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007dfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007e02:	f281 85cd 	bge.w	80099a0 <_ZN15Screen4ViewBaseC1Ev+0x222c>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8007e06:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007e0a:	ee17 3a10 	vmov	r3, s14
 8007e0e:	1e59      	subs	r1, r3, #1
 8007e10:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8007e14:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8007e18:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8007e1c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007e20:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007e24:	ee17 3a90 	vmov	r3, s15
 8007e28:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8007e2a:	4628      	mov	r0, r5
 8007e2c:	f00e f8b6 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007e30:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8007e34:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007e38:	ed1f 7aa7 	vldr	s14, [pc, #-668]	@ 8007ba0 <_ZN15Screen4ViewBaseC1Ev+0x42c>
 8007e3c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007e40:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007e44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007e48:	f281 85b4 	bge.w	80099b4 <_ZN15Screen4ViewBaseC1Ev+0x2240>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8007e4c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007e50:	ee17 3a10 	vmov	r3, s14
 8007e54:	1e59      	subs	r1, r3, #1
 8007e56:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8007e5a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8007e5e:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8007e62:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007e66:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007e6a:	ee17 3a90 	vmov	r3, s15
 8007e6e:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8007e70:	4628      	mov	r0, r5
 8007e72:	f00e f893 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007e76:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8007e7a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007e7e:	ed1f 7ab7 	vldr	s14, [pc, #-732]	@ 8007ba4 <_ZN15Screen4ViewBaseC1Ev+0x430>
 8007e82:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007e86:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007e8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007e8e:	f281 859b 	bge.w	80099c8 <_ZN15Screen4ViewBaseC1Ev+0x2254>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8007e92:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007e96:	ee17 3a10 	vmov	r3, s14
 8007e9a:	1e59      	subs	r1, r3, #1
 8007e9c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8007ea0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8007ea4:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8007ea8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007eac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007eb0:	ee17 3a90 	vmov	r3, s15
 8007eb4:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8007eb6:	4628      	mov	r0, r5
 8007eb8:	f00e f870 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007ebc:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8007ec0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007ec4:	ed1f 7ac8 	vldr	s14, [pc, #-800]	@ 8007ba8 <_ZN15Screen4ViewBaseC1Ev+0x434>
 8007ec8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007ecc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007ed0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007ed4:	f281 8582 	bge.w	80099dc <_ZN15Screen4ViewBaseC1Ev+0x2268>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8007ed8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007edc:	ee17 3a10 	vmov	r3, s14
 8007ee0:	1e59      	subs	r1, r3, #1
 8007ee2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8007ee6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8007eea:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8007eee:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007ef2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007ef6:	ee17 3a90 	vmov	r3, s15
 8007efa:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8007efc:	4628      	mov	r0, r5
 8007efe:	f00e f84d 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007f02:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8007f06:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007f0a:	ed1f 7ad8 	vldr	s14, [pc, #-864]	@ 8007bac <_ZN15Screen4ViewBaseC1Ev+0x438>
 8007f0e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007f12:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007f16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007f1a:	f281 8569 	bge.w	80099f0 <_ZN15Screen4ViewBaseC1Ev+0x227c>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8007f1e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007f22:	ee17 3a10 	vmov	r3, s14
 8007f26:	1e59      	subs	r1, r3, #1
 8007f28:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8007f2c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8007f30:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8007f34:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007f38:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007f3c:	ee17 3a90 	vmov	r3, s15
 8007f40:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8007f42:	4628      	mov	r0, r5
 8007f44:	f00e f82a 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007f48:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8007f4c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007f50:	ed1f 7ae9 	vldr	s14, [pc, #-932]	@ 8007bb0 <_ZN15Screen4ViewBaseC1Ev+0x43c>
 8007f54:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007f58:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007f5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007f60:	f281 8550 	bge.w	8009a04 <_ZN15Screen4ViewBaseC1Ev+0x2290>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8007f64:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007f68:	ee17 3a10 	vmov	r3, s14
 8007f6c:	1e59      	subs	r1, r3, #1
 8007f6e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8007f72:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8007f76:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8007f7a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007f7e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007f82:	ee17 3a90 	vmov	r3, s15
 8007f86:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8007f88:	4628      	mov	r0, r5
 8007f8a:	f00e f807 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007f8e:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8007f92:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007f96:	ed9f 7af7 	vldr	s14, [pc, #988]	@ 8008374 <_ZN15Screen4ViewBaseC1Ev+0xc00>
 8007f9a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007f9e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007fa2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007fa6:	f281 8537 	bge.w	8009a18 <_ZN15Screen4ViewBaseC1Ev+0x22a4>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8007faa:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007fae:	ee17 3a10 	vmov	r3, s14
 8007fb2:	1e59      	subs	r1, r3, #1
 8007fb4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8007fb8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8007fbc:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8007fc0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007fc4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007fc8:	ee17 3a90 	vmov	r3, s15
 8007fcc:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8007fce:	4628      	mov	r0, r5
 8007fd0:	f00d ffe4 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007fd4:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8007fd8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007fdc:	ed9f 7ae6 	vldr	s14, [pc, #920]	@ 8008378 <_ZN15Screen4ViewBaseC1Ev+0xc04>
 8007fe0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007fe4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007fe8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007fec:	f281 851e 	bge.w	8009a2c <_ZN15Screen4ViewBaseC1Ev+0x22b8>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8007ff0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007ff4:	ee17 3a10 	vmov	r3, s14
 8007ff8:	1e59      	subs	r1, r3, #1
 8007ffa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8007ffe:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008002:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008006:	ee77 7a87 	vadd.f32	s15, s15, s14
 800800a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800800e:	ee17 3a90 	vmov	r3, s15
 8008012:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008014:	4628      	mov	r0, r5
 8008016:	f00d ffc1 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800801a:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 800801e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008022:	ed9f 7ad6 	vldr	s14, [pc, #856]	@ 800837c <_ZN15Screen4ViewBaseC1Ev+0xc08>
 8008026:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800802a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800802e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008032:	f281 8505 	bge.w	8009a40 <_ZN15Screen4ViewBaseC1Ev+0x22cc>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008036:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800803a:	ee17 3a10 	vmov	r3, s14
 800803e:	1e59      	subs	r1, r3, #1
 8008040:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008044:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008048:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 800804c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008050:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008054:	ee17 3a90 	vmov	r3, s15
 8008058:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 800805a:	4628      	mov	r0, r5
 800805c:	f00d ff9e 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008060:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008064:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008068:	ed9f 7ac5 	vldr	s14, [pc, #788]	@ 8008380 <_ZN15Screen4ViewBaseC1Ev+0xc0c>
 800806c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008070:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008074:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008078:	f281 84ec 	bge.w	8009a54 <_ZN15Screen4ViewBaseC1Ev+0x22e0>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800807c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008080:	ee17 3a10 	vmov	r3, s14
 8008084:	1e59      	subs	r1, r3, #1
 8008086:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800808a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800808e:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008092:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008096:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800809a:	ee17 3a90 	vmov	r3, s15
 800809e:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 80080a0:	4628      	mov	r0, r5
 80080a2:	f00d ff7b 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80080a6:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 80080aa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80080ae:	ed9f 7ab5 	vldr	s14, [pc, #724]	@ 8008384 <_ZN15Screen4ViewBaseC1Ev+0xc10>
 80080b2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80080b6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80080ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80080be:	f281 84d3 	bge.w	8009a68 <_ZN15Screen4ViewBaseC1Ev+0x22f4>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80080c2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80080c6:	ee17 3a10 	vmov	r3, s14
 80080ca:	1e59      	subs	r1, r3, #1
 80080cc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80080d0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80080d4:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80080d8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80080dc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80080e0:	ee17 3a90 	vmov	r3, s15
 80080e4:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 80080e6:	4628      	mov	r0, r5
 80080e8:	f00d ff58 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80080ec:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 80080f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80080f4:	ed9f 7aa4 	vldr	s14, [pc, #656]	@ 8008388 <_ZN15Screen4ViewBaseC1Ev+0xc14>
 80080f8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80080fc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008100:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008104:	f281 84ba 	bge.w	8009a7c <_ZN15Screen4ViewBaseC1Ev+0x2308>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008108:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800810c:	ee17 3a10 	vmov	r3, s14
 8008110:	1e59      	subs	r1, r3, #1
 8008112:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008116:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800811a:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 800811e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008122:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008126:	ee17 3a90 	vmov	r3, s15
 800812a:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 800812c:	4628      	mov	r0, r5
 800812e:	f00d ff35 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008132:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008136:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800813a:	ed9f 7a94 	vldr	s14, [pc, #592]	@ 800838c <_ZN15Screen4ViewBaseC1Ev+0xc18>
 800813e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008142:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008146:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800814a:	f281 84a1 	bge.w	8009a90 <_ZN15Screen4ViewBaseC1Ev+0x231c>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800814e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008152:	ee17 3a10 	vmov	r3, s14
 8008156:	1e59      	subs	r1, r3, #1
 8008158:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800815c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008160:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008164:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008168:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800816c:	ee17 3a90 	vmov	r3, s15
 8008170:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008172:	4628      	mov	r0, r5
 8008174:	f00d ff12 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008178:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 800817c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008180:	ed9f 7a83 	vldr	s14, [pc, #524]	@ 8008390 <_ZN15Screen4ViewBaseC1Ev+0xc1c>
 8008184:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008188:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800818c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008190:	f281 8488 	bge.w	8009aa4 <_ZN15Screen4ViewBaseC1Ev+0x2330>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008194:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008198:	ee17 3a10 	vmov	r3, s14
 800819c:	1e59      	subs	r1, r3, #1
 800819e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80081a2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80081a6:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80081aa:	ee77 7a87 	vadd.f32	s15, s15, s14
 80081ae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80081b2:	ee17 3a90 	vmov	r3, s15
 80081b6:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 80081b8:	4628      	mov	r0, r5
 80081ba:	f00d feef 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80081be:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 80081c2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80081c6:	ed9f 7a73 	vldr	s14, [pc, #460]	@ 8008394 <_ZN15Screen4ViewBaseC1Ev+0xc20>
 80081ca:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80081ce:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80081d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80081d6:	f281 846f 	bge.w	8009ab8 <_ZN15Screen4ViewBaseC1Ev+0x2344>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80081da:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80081de:	ee17 3a10 	vmov	r3, s14
 80081e2:	1e59      	subs	r1, r3, #1
 80081e4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80081e8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80081ec:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80081f0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80081f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80081f8:	ee17 3a90 	vmov	r3, s15
 80081fc:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 80081fe:	4628      	mov	r0, r5
 8008200:	f00d fecc 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008204:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008208:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800820c:	ed9f 7a62 	vldr	s14, [pc, #392]	@ 8008398 <_ZN15Screen4ViewBaseC1Ev+0xc24>
 8008210:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008214:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008218:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800821c:	f281 8456 	bge.w	8009acc <_ZN15Screen4ViewBaseC1Ev+0x2358>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008220:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008224:	ee17 3a10 	vmov	r3, s14
 8008228:	1e59      	subs	r1, r3, #1
 800822a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800822e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008232:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008236:	ee77 7a87 	vadd.f32	s15, s15, s14
 800823a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800823e:	ee17 3a90 	vmov	r3, s15
 8008242:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008244:	4628      	mov	r0, r5
 8008246:	f00d fea9 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800824a:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 800824e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008252:	ed9f 7a52 	vldr	s14, [pc, #328]	@ 800839c <_ZN15Screen4ViewBaseC1Ev+0xc28>
 8008256:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800825a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800825e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008262:	f281 843d 	bge.w	8009ae0 <_ZN15Screen4ViewBaseC1Ev+0x236c>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008266:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800826a:	ee17 3a10 	vmov	r3, s14
 800826e:	1e59      	subs	r1, r3, #1
 8008270:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008274:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008278:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 800827c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008280:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008284:	ee17 3a90 	vmov	r3, s15
 8008288:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 800828a:	4628      	mov	r0, r5
 800828c:	f00d fe86 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008290:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008294:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008298:	ed9f 7a41 	vldr	s14, [pc, #260]	@ 80083a0 <_ZN15Screen4ViewBaseC1Ev+0xc2c>
 800829c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80082a0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80082a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80082a8:	f281 8424 	bge.w	8009af4 <_ZN15Screen4ViewBaseC1Ev+0x2380>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80082ac:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80082b0:	ee17 3a10 	vmov	r3, s14
 80082b4:	1e59      	subs	r1, r3, #1
 80082b6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80082ba:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80082be:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80082c2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80082c6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80082ca:	ee17 3a90 	vmov	r3, s15
 80082ce:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 80082d0:	4628      	mov	r0, r5
 80082d2:	f00d fe63 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80082d6:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 80082da:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80082de:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 80083a4 <_ZN15Screen4ViewBaseC1Ev+0xc30>
 80082e2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80082e6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80082ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80082ee:	f281 840b 	bge.w	8009b08 <_ZN15Screen4ViewBaseC1Ev+0x2394>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80082f2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80082f6:	ee17 3a10 	vmov	r3, s14
 80082fa:	1e59      	subs	r1, r3, #1
 80082fc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008300:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008304:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008308:	ee77 7a87 	vadd.f32	s15, s15, s14
 800830c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008310:	ee17 3a90 	vmov	r3, s15
 8008314:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008316:	4628      	mov	r0, r5
 8008318:	f00d fe40 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800831c:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008320:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008324:	ed9f 7a20 	vldr	s14, [pc, #128]	@ 80083a8 <_ZN15Screen4ViewBaseC1Ev+0xc34>
 8008328:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800832c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008330:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008334:	f281 83f2 	bge.w	8009b1c <_ZN15Screen4ViewBaseC1Ev+0x23a8>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008338:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800833c:	ee17 3a10 	vmov	r3, s14
 8008340:	1e59      	subs	r1, r3, #1
 8008342:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008346:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800834a:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 800834e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008352:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008356:	ee17 3a90 	vmov	r3, s15
 800835a:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 800835c:	4628      	mov	r0, r5
 800835e:	f00d fe1d 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008362:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008366:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800836a:	ed9f 7a10 	vldr	s14, [pc, #64]	@ 80083ac <_ZN15Screen4ViewBaseC1Ev+0xc38>
 800836e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8008372:	e039      	b.n	80083e8 <_ZN15Screen4ViewBaseC1Ev+0xc74>
 8008374:	42a728d6 	.word	0x42a728d6
 8008378:	429aec2a 	.word	0x429aec2a
 800837c:	42895a6d 	.word	0x42895a6d
 8008380:	426b3911 	.word	0x426b3911
 8008384:	424700ba 	.word	0x424700ba
 8008388:	422d2993 	.word	0x422d2993
 800838c:	4222a745 	.word	0x4222a745
 8008390:	42291b06 	.word	0x42291b06
 8008394:	423e770d 	.word	0x423e770d
 8008398:	425d8435 	.word	0x425d8435
 800839c:	427f28a7 	.word	0x427f28a7
 80083a0:	428e0fee 	.word	0x428e0fee
 80083a4:	42975c20 	.word	0x42975c20
 80083a8:	429a14dd 	.word	0x429a14dd
 80083ac:	42969904 	.word	0x42969904
 80083b0:	428ee886 	.word	0x428ee886
 80083b4:	42861b62 	.word	0x42861b62
 80083b8:	427f26b2 	.word	0x427f26b2
 80083bc:	427c36f0 	.word	0x427c36f0
 80083c0:	42832cd2 	.word	0x42832cd2
 80083c4:	428e86d1 	.word	0x428e86d1
 80083c8:	429e34f1 	.word	0x429e34f1
 80083cc:	42af00e0 	.word	0x42af00e0
 80083d0:	42bd3573 	.word	0x42bd3573
 80083d4:	42c582de 	.word	0x42c582de
 80083d8:	42c5cc9c 	.word	0x42c5cc9c
 80083dc:	42bdae94 	.word	0x42bdae94
 80083e0:	42ae98d6 	.word	0x42ae98d6
 80083e4:	429b7b27 	.word	0x429b7b27
        if (fs >= 0)
 80083e8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80083ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80083f0:	f281 839e 	bge.w	8009b30 <_ZN15Screen4ViewBaseC1Ev+0x23bc>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80083f4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80083f8:	ee17 3a10 	vmov	r3, s14
 80083fc:	1e59      	subs	r1, r3, #1
 80083fe:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008402:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008406:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 800840a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800840e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008412:	ee17 3a90 	vmov	r3, s15
 8008416:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008418:	4628      	mov	r0, r5
 800841a:	f00d fdbf 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800841e:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008422:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008426:	ed1f 7a1e 	vldr	s14, [pc, #-120]	@ 80083b0 <_ZN15Screen4ViewBaseC1Ev+0xc3c>
 800842a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800842e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008432:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008436:	f281 8385 	bge.w	8009b44 <_ZN15Screen4ViewBaseC1Ev+0x23d0>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800843a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800843e:	ee17 3a10 	vmov	r3, s14
 8008442:	1e59      	subs	r1, r3, #1
 8008444:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008448:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800844c:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008450:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008454:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008458:	ee17 3a90 	vmov	r3, s15
 800845c:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 800845e:	4628      	mov	r0, r5
 8008460:	f00d fd9c 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008464:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008468:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800846c:	ed1f 7a2f 	vldr	s14, [pc, #-188]	@ 80083b4 <_ZN15Screen4ViewBaseC1Ev+0xc40>
 8008470:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008474:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008478:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800847c:	f281 836c 	bge.w	8009b58 <_ZN15Screen4ViewBaseC1Ev+0x23e4>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008480:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008484:	ee17 3a10 	vmov	r3, s14
 8008488:	1e59      	subs	r1, r3, #1
 800848a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800848e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008492:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008496:	ee77 7a87 	vadd.f32	s15, s15, s14
 800849a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800849e:	ee17 3a90 	vmov	r3, s15
 80084a2:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 80084a4:	4628      	mov	r0, r5
 80084a6:	f00d fd79 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80084aa:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 80084ae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80084b2:	ed1f 7a3f 	vldr	s14, [pc, #-252]	@ 80083b8 <_ZN15Screen4ViewBaseC1Ev+0xc44>
 80084b6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80084ba:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80084be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80084c2:	f281 8353 	bge.w	8009b6c <_ZN15Screen4ViewBaseC1Ev+0x23f8>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80084c6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80084ca:	ee17 3a10 	vmov	r3, s14
 80084ce:	1e59      	subs	r1, r3, #1
 80084d0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80084d4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80084d8:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80084dc:	ee77 7a87 	vadd.f32	s15, s15, s14
 80084e0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80084e4:	ee17 3a90 	vmov	r3, s15
 80084e8:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 80084ea:	4628      	mov	r0, r5
 80084ec:	f00d fd56 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80084f0:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 80084f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80084f8:	ed1f 7a50 	vldr	s14, [pc, #-320]	@ 80083bc <_ZN15Screen4ViewBaseC1Ev+0xc48>
 80084fc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008500:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008504:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008508:	f281 8346 	bge.w	8009b98 <_ZN15Screen4ViewBaseC1Ev+0x2424>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800850c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008510:	ee17 3a10 	vmov	r3, s14
 8008514:	1e59      	subs	r1, r3, #1
 8008516:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800851a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800851e:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008522:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008526:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800852a:	ee17 3a90 	vmov	r3, s15
 800852e:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008530:	4628      	mov	r0, r5
 8008532:	f00d fd33 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008536:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 800853a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800853e:	ed1f 7a60 	vldr	s14, [pc, #-384]	@ 80083c0 <_ZN15Screen4ViewBaseC1Ev+0xc4c>
 8008542:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008546:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800854a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800854e:	f281 832d 	bge.w	8009bac <_ZN15Screen4ViewBaseC1Ev+0x2438>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008552:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008556:	ee17 3a10 	vmov	r3, s14
 800855a:	1e59      	subs	r1, r3, #1
 800855c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008560:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008564:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008568:	ee77 7a87 	vadd.f32	s15, s15, s14
 800856c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008570:	ee17 3a90 	vmov	r3, s15
 8008574:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008576:	4628      	mov	r0, r5
 8008578:	f00d fd10 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800857c:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008580:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008584:	ed1f 7a71 	vldr	s14, [pc, #-452]	@ 80083c4 <_ZN15Screen4ViewBaseC1Ev+0xc50>
 8008588:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800858c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008590:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008594:	f281 8314 	bge.w	8009bc0 <_ZN15Screen4ViewBaseC1Ev+0x244c>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008598:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800859c:	ee17 3a10 	vmov	r3, s14
 80085a0:	1e59      	subs	r1, r3, #1
 80085a2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80085a6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80085aa:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80085ae:	ee77 7a87 	vadd.f32	s15, s15, s14
 80085b2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80085b6:	ee17 3a90 	vmov	r3, s15
 80085ba:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 80085bc:	4628      	mov	r0, r5
 80085be:	f00d fced 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80085c2:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 80085c6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80085ca:	ed1f 7a81 	vldr	s14, [pc, #-516]	@ 80083c8 <_ZN15Screen4ViewBaseC1Ev+0xc54>
 80085ce:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80085d2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80085d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80085da:	f281 82fb 	bge.w	8009bd4 <_ZN15Screen4ViewBaseC1Ev+0x2460>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80085de:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80085e2:	ee17 3a10 	vmov	r3, s14
 80085e6:	1e59      	subs	r1, r3, #1
 80085e8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80085ec:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80085f0:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80085f4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80085f8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80085fc:	ee17 3a90 	vmov	r3, s15
 8008600:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008602:	4628      	mov	r0, r5
 8008604:	f00d fcca 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008608:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 800860c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008610:	ed1f 7a92 	vldr	s14, [pc, #-584]	@ 80083cc <_ZN15Screen4ViewBaseC1Ev+0xc58>
 8008614:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008618:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800861c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008620:	f281 82e2 	bge.w	8009be8 <_ZN15Screen4ViewBaseC1Ev+0x2474>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008624:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008628:	ee17 3a10 	vmov	r3, s14
 800862c:	1e59      	subs	r1, r3, #1
 800862e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008632:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008636:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 800863a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800863e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008642:	ee17 3a90 	vmov	r3, s15
 8008646:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008648:	4628      	mov	r0, r5
 800864a:	f00d fca7 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800864e:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008652:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008656:	ed1f 7aa2 	vldr	s14, [pc, #-648]	@ 80083d0 <_ZN15Screen4ViewBaseC1Ev+0xc5c>
 800865a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800865e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008662:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008666:	f281 82c9 	bge.w	8009bfc <_ZN15Screen4ViewBaseC1Ev+0x2488>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800866a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800866e:	ee17 3a10 	vmov	r3, s14
 8008672:	1e59      	subs	r1, r3, #1
 8008674:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008678:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800867c:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008680:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008684:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008688:	ee17 3a90 	vmov	r3, s15
 800868c:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 800868e:	4628      	mov	r0, r5
 8008690:	f00d fc84 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008694:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008698:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800869c:	ed1f 7ab3 	vldr	s14, [pc, #-716]	@ 80083d4 <_ZN15Screen4ViewBaseC1Ev+0xc60>
 80086a0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80086a4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80086a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80086ac:	f281 82b0 	bge.w	8009c10 <_ZN15Screen4ViewBaseC1Ev+0x249c>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80086b0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80086b4:	ee17 3a10 	vmov	r3, s14
 80086b8:	1e59      	subs	r1, r3, #1
 80086ba:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80086be:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80086c2:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80086c6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80086ca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80086ce:	ee17 3a90 	vmov	r3, s15
 80086d2:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 80086d4:	4628      	mov	r0, r5
 80086d6:	f00d fc61 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80086da:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 80086de:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80086e2:	ed1f 7ac3 	vldr	s14, [pc, #-780]	@ 80083d8 <_ZN15Screen4ViewBaseC1Ev+0xc64>
 80086e6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80086ea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80086ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80086f2:	f281 8297 	bge.w	8009c24 <_ZN15Screen4ViewBaseC1Ev+0x24b0>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80086f6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80086fa:	ee17 3a10 	vmov	r3, s14
 80086fe:	1e59      	subs	r1, r3, #1
 8008700:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008704:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008708:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 800870c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008710:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008714:	ee17 3a90 	vmov	r3, s15
 8008718:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 800871a:	4628      	mov	r0, r5
 800871c:	f00d fc3e 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008720:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008724:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008728:	ed1f 7ad4 	vldr	s14, [pc, #-848]	@ 80083dc <_ZN15Screen4ViewBaseC1Ev+0xc68>
 800872c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008730:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008734:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008738:	f281 827e 	bge.w	8009c38 <_ZN15Screen4ViewBaseC1Ev+0x24c4>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800873c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008740:	ee17 3a10 	vmov	r3, s14
 8008744:	1e59      	subs	r1, r3, #1
 8008746:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800874a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800874e:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008752:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008756:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800875a:	ee17 3a90 	vmov	r3, s15
 800875e:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008760:	4628      	mov	r0, r5
 8008762:	f00d fc1b 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008766:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 800876a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800876e:	ed1f 7ae4 	vldr	s14, [pc, #-912]	@ 80083e0 <_ZN15Screen4ViewBaseC1Ev+0xc6c>
 8008772:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008776:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800877a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800877e:	f281 8265 	bge.w	8009c4c <_ZN15Screen4ViewBaseC1Ev+0x24d8>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008782:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008786:	ee17 3a10 	vmov	r3, s14
 800878a:	1e59      	subs	r1, r3, #1
 800878c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008790:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008794:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008798:	ee77 7a87 	vadd.f32	s15, s15, s14
 800879c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80087a0:	ee17 3a90 	vmov	r3, s15
 80087a4:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 80087a6:	4628      	mov	r0, r5
 80087a8:	f00d fbf8 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80087ac:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 80087b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80087b4:	ed1f 7af5 	vldr	s14, [pc, #-980]	@ 80083e4 <_ZN15Screen4ViewBaseC1Ev+0xc70>
 80087b8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80087bc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80087c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80087c4:	f281 824c 	bge.w	8009c60 <_ZN15Screen4ViewBaseC1Ev+0x24ec>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80087c8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80087cc:	ee17 3a10 	vmov	r3, s14
 80087d0:	1e59      	subs	r1, r3, #1
 80087d2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80087d6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80087da:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80087de:	ee77 7a87 	vadd.f32	s15, s15, s14
 80087e2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80087e6:	ee17 3a90 	vmov	r3, s15
 80087ea:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 80087ec:	4628      	mov	r0, r5
 80087ee:	f00d fbd5 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80087f2:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 80087f6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80087fa:	ed9f 7af7 	vldr	s14, [pc, #988]	@ 8008bd8 <_ZN15Screen4ViewBaseC1Ev+0x1464>
 80087fe:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008802:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008806:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800880a:	f281 8233 	bge.w	8009c74 <_ZN15Screen4ViewBaseC1Ev+0x2500>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800880e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008812:	ee17 3a10 	vmov	r3, s14
 8008816:	1e59      	subs	r1, r3, #1
 8008818:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800881c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008820:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008824:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008828:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800882c:	ee17 3a90 	vmov	r3, s15
 8008830:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008832:	4628      	mov	r0, r5
 8008834:	f00d fbb2 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008838:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 800883c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008840:	ed9f 7ae6 	vldr	s14, [pc, #920]	@ 8008bdc <_ZN15Screen4ViewBaseC1Ev+0x1468>
 8008844:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008848:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800884c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008850:	f281 821a 	bge.w	8009c88 <_ZN15Screen4ViewBaseC1Ev+0x2514>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008854:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008858:	ee17 3a10 	vmov	r3, s14
 800885c:	1e59      	subs	r1, r3, #1
 800885e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008862:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008866:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 800886a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800886e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008872:	ee17 3a90 	vmov	r3, s15
 8008876:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008878:	4628      	mov	r0, r5
 800887a:	f00d fb8f 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800887e:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008882:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008886:	ed9f 7ad6 	vldr	s14, [pc, #856]	@ 8008be0 <_ZN15Screen4ViewBaseC1Ev+0x146c>
 800888a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800888e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008892:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008896:	f281 8201 	bge.w	8009c9c <_ZN15Screen4ViewBaseC1Ev+0x2528>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800889a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800889e:	ee17 3a10 	vmov	r3, s14
 80088a2:	1e59      	subs	r1, r3, #1
 80088a4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80088a8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80088ac:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80088b0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80088b4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80088b8:	ee17 3a90 	vmov	r3, s15
 80088bc:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 80088be:	4628      	mov	r0, r5
 80088c0:	f00d fb6c 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80088c4:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 80088c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80088cc:	ed9f 7ac5 	vldr	s14, [pc, #788]	@ 8008be4 <_ZN15Screen4ViewBaseC1Ev+0x1470>
 80088d0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80088d4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80088d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80088dc:	f281 81e8 	bge.w	8009cb0 <_ZN15Screen4ViewBaseC1Ev+0x253c>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80088e0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80088e4:	ee17 3a10 	vmov	r3, s14
 80088e8:	1e59      	subs	r1, r3, #1
 80088ea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80088ee:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80088f2:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80088f6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80088fa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80088fe:	ee17 3a90 	vmov	r3, s15
 8008902:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008904:	4628      	mov	r0, r5
 8008906:	f00d fb49 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800890a:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 800890e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008912:	ed9f 7ab5 	vldr	s14, [pc, #724]	@ 8008be8 <_ZN15Screen4ViewBaseC1Ev+0x1474>
 8008916:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800891a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800891e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008922:	f281 81cf 	bge.w	8009cc4 <_ZN15Screen4ViewBaseC1Ev+0x2550>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008926:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800892a:	ee17 3a10 	vmov	r3, s14
 800892e:	1e59      	subs	r1, r3, #1
 8008930:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008934:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008938:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 800893c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008940:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008944:	ee17 3a90 	vmov	r3, s15
 8008948:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 800894a:	4628      	mov	r0, r5
 800894c:	f00d fb26 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008950:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008954:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008958:	ed9f 7aa4 	vldr	s14, [pc, #656]	@ 8008bec <_ZN15Screen4ViewBaseC1Ev+0x1478>
 800895c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008960:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008964:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008968:	f281 81b6 	bge.w	8009cd8 <_ZN15Screen4ViewBaseC1Ev+0x2564>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800896c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008970:	ee17 3a10 	vmov	r3, s14
 8008974:	1e59      	subs	r1, r3, #1
 8008976:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800897a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800897e:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008982:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008986:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800898a:	ee17 3a90 	vmov	r3, s15
 800898e:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008990:	4628      	mov	r0, r5
 8008992:	f00d fb03 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008996:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 800899a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800899e:	ed9f 7a94 	vldr	s14, [pc, #592]	@ 8008bf0 <_ZN15Screen4ViewBaseC1Ev+0x147c>
 80089a2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80089a6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80089aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80089ae:	f281 819d 	bge.w	8009cec <_ZN15Screen4ViewBaseC1Ev+0x2578>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80089b2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80089b6:	ee17 3a10 	vmov	r3, s14
 80089ba:	1e59      	subs	r1, r3, #1
 80089bc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80089c0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80089c4:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80089c8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80089cc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80089d0:	ee17 3a90 	vmov	r3, s15
 80089d4:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 80089d6:	4628      	mov	r0, r5
 80089d8:	f00d fae0 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80089dc:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 80089e0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80089e4:	ed9f 7a83 	vldr	s14, [pc, #524]	@ 8008bf4 <_ZN15Screen4ViewBaseC1Ev+0x1480>
 80089e8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80089ec:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80089f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80089f4:	f281 8184 	bge.w	8009d00 <_ZN15Screen4ViewBaseC1Ev+0x258c>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80089f8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80089fc:	ee17 3a10 	vmov	r3, s14
 8008a00:	1e59      	subs	r1, r3, #1
 8008a02:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008a06:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008a0a:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008a0e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008a12:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008a16:	ee17 3a90 	vmov	r3, s15
 8008a1a:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008a1c:	4628      	mov	r0, r5
 8008a1e:	f00d fabd 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008a22:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008a26:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008a2a:	ed9f 7a73 	vldr	s14, [pc, #460]	@ 8008bf8 <_ZN15Screen4ViewBaseC1Ev+0x1484>
 8008a2e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008a32:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008a36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008a3a:	f281 816b 	bge.w	8009d14 <_ZN15Screen4ViewBaseC1Ev+0x25a0>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008a3e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008a42:	ee17 3a10 	vmov	r3, s14
 8008a46:	1e59      	subs	r1, r3, #1
 8008a48:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008a4c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008a50:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008a54:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008a58:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008a5c:	ee17 3a90 	vmov	r3, s15
 8008a60:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008a62:	4628      	mov	r0, r5
 8008a64:	f00d fa9a 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008a68:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008a6c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008a70:	ed9f 7a62 	vldr	s14, [pc, #392]	@ 8008bfc <_ZN15Screen4ViewBaseC1Ev+0x1488>
 8008a74:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008a78:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008a7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008a80:	f281 8152 	bge.w	8009d28 <_ZN15Screen4ViewBaseC1Ev+0x25b4>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008a84:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008a88:	ee17 3a10 	vmov	r3, s14
 8008a8c:	1e59      	subs	r1, r3, #1
 8008a8e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008a92:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008a96:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008a9a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008a9e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008aa2:	ee17 3a90 	vmov	r3, s15
 8008aa6:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008aa8:	4628      	mov	r0, r5
 8008aaa:	f00d fa77 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008aae:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008ab2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008ab6:	ed9f 7a52 	vldr	s14, [pc, #328]	@ 8008c00 <_ZN15Screen4ViewBaseC1Ev+0x148c>
 8008aba:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008abe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008ac2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008ac6:	f281 8139 	bge.w	8009d3c <_ZN15Screen4ViewBaseC1Ev+0x25c8>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008aca:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008ace:	ee17 3a10 	vmov	r3, s14
 8008ad2:	1e59      	subs	r1, r3, #1
 8008ad4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008ad8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008adc:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008ae0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008ae4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008ae8:	ee17 3a90 	vmov	r3, s15
 8008aec:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008aee:	4628      	mov	r0, r5
 8008af0:	f00d fa54 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008af4:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008af8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008afc:	ed9f 7a41 	vldr	s14, [pc, #260]	@ 8008c04 <_ZN15Screen4ViewBaseC1Ev+0x1490>
 8008b00:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008b04:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008b08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008b0c:	f281 8120 	bge.w	8009d50 <_ZN15Screen4ViewBaseC1Ev+0x25dc>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008b10:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008b14:	ee17 3a10 	vmov	r3, s14
 8008b18:	1e59      	subs	r1, r3, #1
 8008b1a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008b1e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008b22:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008b26:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008b2a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008b2e:	ee17 3a90 	vmov	r3, s15
 8008b32:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008b34:	4628      	mov	r0, r5
 8008b36:	f00d fa31 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008b3a:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008b3e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008b42:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8008c08 <_ZN15Screen4ViewBaseC1Ev+0x1494>
 8008b46:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008b4a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008b4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008b52:	f281 8107 	bge.w	8009d64 <_ZN15Screen4ViewBaseC1Ev+0x25f0>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008b56:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008b5a:	ee17 3a10 	vmov	r3, s14
 8008b5e:	1e59      	subs	r1, r3, #1
 8008b60:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008b64:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008b68:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008b6c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008b70:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008b74:	ee17 3a90 	vmov	r3, s15
 8008b78:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008b7a:	4628      	mov	r0, r5
 8008b7c:	f00d fa0e 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008b80:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008b84:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008b88:	ed9f 7a20 	vldr	s14, [pc, #128]	@ 8008c0c <_ZN15Screen4ViewBaseC1Ev+0x1498>
 8008b8c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008b90:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008b94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008b98:	f281 80ee 	bge.w	8009d78 <_ZN15Screen4ViewBaseC1Ev+0x2604>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008b9c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008ba0:	ee17 3a10 	vmov	r3, s14
 8008ba4:	1e59      	subs	r1, r3, #1
 8008ba6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008baa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008bae:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008bb2:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008bb6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008bba:	ee17 3a90 	vmov	r3, s15
 8008bbe:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008bc0:	4628      	mov	r0, r5
 8008bc2:	f00d f9eb 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008bc6:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008bca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008bce:	ed9f 7a10 	vldr	s14, [pc, #64]	@ 8008c10 <_ZN15Screen4ViewBaseC1Ev+0x149c>
 8008bd2:	ee67 7a87 	vmul.f32	s15, s15, s14
 8008bd6:	e039      	b.n	8008c4c <_ZN15Screen4ViewBaseC1Ev+0x14d8>
 8008bd8:	428814a1 	.word	0x428814a1
 8008bdc:	427024db 	.word	0x427024db
 8008be0:	425c6890 	.word	0x425c6890
 8008be4:	42575857 	.word	0x42575857
 8008be8:	425fbfa7 	.word	0x425fbfa7
 8008bec:	42713607 	.word	0x42713607
 8008bf0:	4282a5a7 	.word	0x4282a5a7
 8008bf4:	428a989f 	.word	0x428a989f
 8008bf8:	428dbcad 	.word	0x428dbcad
 8008bfc:	428abc85 	.word	0x428abc85
 8008c00:	4281fe22 	.word	0x4281fe22
 8008c04:	426b1a73 	.word	0x426b1a73
 8008c08:	425137fb 	.word	0x425137fb
 8008c0c:	423d7281 	.word	0x423d7281
 8008c10:	4235daf9 	.word	0x4235daf9
 8008c14:	423decea 	.word	0x423decea
 8008c18:	4255a3a0 	.word	0x4255a3a0
 8008c1c:	42796745 	.word	0x42796745
 8008c20:	42916bcb 	.word	0x42916bcb
 8008c24:	42a52192 	.word	0x42a52192
 8008c28:	42b4384b 	.word	0x42b4384b
 8008c2c:	42bc254b 	.word	0x42bc254b
 8008c30:	42bc0377 	.word	0x42bc0377
 8008c34:	42b4c0b1 	.word	0x42b4c0b1
 8008c38:	42a8da73 	.word	0x42a8da73
 8008c3c:	429bba74 	.word	0x429bba74
 8008c40:	4290dba9 	.word	0x4290dba9
 8008c44:	428aed5e 	.word	0x428aed5e
 8008c48:	428b2ac2 	.word	0x428b2ac2
        if (fs >= 0)
 8008c4c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008c50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008c54:	f281 809a 	bge.w	8009d8c <_ZN15Screen4ViewBaseC1Ev+0x2618>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008c58:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008c5c:	ee17 3a10 	vmov	r3, s14
 8008c60:	1e59      	subs	r1, r3, #1
 8008c62:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008c66:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008c6a:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008c6e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008c72:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008c76:	ee17 3a90 	vmov	r3, s15
 8008c7a:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008c7c:	4628      	mov	r0, r5
 8008c7e:	f00d f98d 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008c82:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008c86:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008c8a:	ed1f 7a1e 	vldr	s14, [pc, #-120]	@ 8008c14 <_ZN15Screen4ViewBaseC1Ev+0x14a0>
 8008c8e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008c92:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008c96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008c9a:	f281 8081 	bge.w	8009da0 <_ZN15Screen4ViewBaseC1Ev+0x262c>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008c9e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008ca2:	ee17 3a10 	vmov	r3, s14
 8008ca6:	1e59      	subs	r1, r3, #1
 8008ca8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008cac:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008cb0:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008cb4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008cb8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008cbc:	ee17 3a90 	vmov	r3, s15
 8008cc0:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008cc2:	4628      	mov	r0, r5
 8008cc4:	f00d f96a 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008cc8:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008ccc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008cd0:	ed1f 7a2f 	vldr	s14, [pc, #-188]	@ 8008c18 <_ZN15Screen4ViewBaseC1Ev+0x14a4>
 8008cd4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008cd8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008cdc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008ce0:	f281 8068 	bge.w	8009db4 <_ZN15Screen4ViewBaseC1Ev+0x2640>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008ce4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008ce8:	ee17 3a10 	vmov	r3, s14
 8008cec:	1e59      	subs	r1, r3, #1
 8008cee:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008cf2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008cf6:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008cfa:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008cfe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008d02:	ee17 3a90 	vmov	r3, s15
 8008d06:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008d08:	4628      	mov	r0, r5
 8008d0a:	f00d f947 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008d0e:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008d12:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008d16:	ed1f 7a3f 	vldr	s14, [pc, #-252]	@ 8008c1c <_ZN15Screen4ViewBaseC1Ev+0x14a8>
 8008d1a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008d1e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008d22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008d26:	f281 804f 	bge.w	8009dc8 <_ZN15Screen4ViewBaseC1Ev+0x2654>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008d2a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008d2e:	ee17 3a10 	vmov	r3, s14
 8008d32:	1e59      	subs	r1, r3, #1
 8008d34:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008d38:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008d3c:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008d40:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008d44:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008d48:	ee17 3a90 	vmov	r3, s15
 8008d4c:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008d4e:	4628      	mov	r0, r5
 8008d50:	f00d f924 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008d54:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008d58:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008d5c:	ed1f 7a50 	vldr	s14, [pc, #-320]	@ 8008c20 <_ZN15Screen4ViewBaseC1Ev+0x14ac>
 8008d60:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008d64:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008d68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008d6c:	f281 8036 	bge.w	8009ddc <_ZN15Screen4ViewBaseC1Ev+0x2668>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008d70:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008d74:	ee17 3a10 	vmov	r3, s14
 8008d78:	1e59      	subs	r1, r3, #1
 8008d7a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008d7e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008d82:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008d86:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008d8a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008d8e:	ee17 3a90 	vmov	r3, s15
 8008d92:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008d94:	4628      	mov	r0, r5
 8008d96:	f00d f901 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008d9a:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008d9e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008da2:	ed1f 7a60 	vldr	s14, [pc, #-384]	@ 8008c24 <_ZN15Screen4ViewBaseC1Ev+0x14b0>
 8008da6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008daa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008dae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008db2:	f281 801d 	bge.w	8009df0 <_ZN15Screen4ViewBaseC1Ev+0x267c>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008db6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008dba:	ee17 3a10 	vmov	r3, s14
 8008dbe:	1e59      	subs	r1, r3, #1
 8008dc0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008dc4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008dc8:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008dcc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008dd0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008dd4:	ee17 3a90 	vmov	r3, s15
 8008dd8:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008dda:	4628      	mov	r0, r5
 8008ddc:	f00d f8de 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008de0:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008de4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008de8:	ed1f 7a71 	vldr	s14, [pc, #-452]	@ 8008c28 <_ZN15Screen4ViewBaseC1Ev+0x14b4>
 8008dec:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008df0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008df4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008df8:	f281 8004 	bge.w	8009e04 <_ZN15Screen4ViewBaseC1Ev+0x2690>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008dfc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008e00:	ee17 3a10 	vmov	r3, s14
 8008e04:	1e59      	subs	r1, r3, #1
 8008e06:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008e0a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008e0e:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008e12:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008e16:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008e1a:	ee17 3a90 	vmov	r3, s15
 8008e1e:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008e20:	4628      	mov	r0, r5
 8008e22:	f00d f8bb 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008e26:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008e2a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008e2e:	ed1f 7a81 	vldr	s14, [pc, #-516]	@ 8008c2c <_ZN15Screen4ViewBaseC1Ev+0x14b8>
 8008e32:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008e36:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008e3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008e3e:	f280 87eb 	bge.w	8009e18 <_ZN15Screen4ViewBaseC1Ev+0x26a4>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008e42:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008e46:	ee17 3a10 	vmov	r3, s14
 8008e4a:	1e59      	subs	r1, r3, #1
 8008e4c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008e50:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008e54:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008e58:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008e5c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008e60:	ee17 3a90 	vmov	r3, s15
 8008e64:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008e66:	4628      	mov	r0, r5
 8008e68:	f00d f898 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008e6c:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008e70:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008e74:	ed1f 7a92 	vldr	s14, [pc, #-584]	@ 8008c30 <_ZN15Screen4ViewBaseC1Ev+0x14bc>
 8008e78:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008e7c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008e80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008e84:	f280 87d2 	bge.w	8009e2c <_ZN15Screen4ViewBaseC1Ev+0x26b8>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008e88:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008e8c:	ee17 3a10 	vmov	r3, s14
 8008e90:	1e59      	subs	r1, r3, #1
 8008e92:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008e96:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008e9a:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008e9e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008ea2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008ea6:	ee17 3a90 	vmov	r3, s15
 8008eaa:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008eac:	4628      	mov	r0, r5
 8008eae:	f00d f875 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008eb2:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008eb6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008eba:	ed1f 7aa2 	vldr	s14, [pc, #-648]	@ 8008c34 <_ZN15Screen4ViewBaseC1Ev+0x14c0>
 8008ebe:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008ec2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008ec6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008eca:	f280 87b9 	bge.w	8009e40 <_ZN15Screen4ViewBaseC1Ev+0x26cc>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008ece:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008ed2:	ee17 3a10 	vmov	r3, s14
 8008ed6:	1e59      	subs	r1, r3, #1
 8008ed8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008edc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008ee0:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008ee4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008ee8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008eec:	ee17 3a90 	vmov	r3, s15
 8008ef0:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008ef2:	4628      	mov	r0, r5
 8008ef4:	f00d f852 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008ef8:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008efc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008f00:	ed1f 7ab3 	vldr	s14, [pc, #-716]	@ 8008c38 <_ZN15Screen4ViewBaseC1Ev+0x14c4>
 8008f04:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008f08:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008f0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008f10:	f280 87a0 	bge.w	8009e54 <_ZN15Screen4ViewBaseC1Ev+0x26e0>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008f14:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008f18:	ee17 3a10 	vmov	r3, s14
 8008f1c:	1e59      	subs	r1, r3, #1
 8008f1e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008f22:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008f26:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008f2a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008f2e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008f32:	ee17 3a90 	vmov	r3, s15
 8008f36:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008f38:	4628      	mov	r0, r5
 8008f3a:	f00d f82f 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008f3e:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008f42:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008f46:	ed1f 7ac3 	vldr	s14, [pc, #-780]	@ 8008c3c <_ZN15Screen4ViewBaseC1Ev+0x14c8>
 8008f4a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008f4e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008f52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008f56:	f280 8787 	bge.w	8009e68 <_ZN15Screen4ViewBaseC1Ev+0x26f4>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008f5a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008f5e:	ee17 3a10 	vmov	r3, s14
 8008f62:	1e59      	subs	r1, r3, #1
 8008f64:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008f68:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008f6c:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008f70:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008f74:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008f78:	ee17 3a90 	vmov	r3, s15
 8008f7c:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008f7e:	4628      	mov	r0, r5
 8008f80:	f00d f80c 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008f84:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008f88:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008f8c:	ed1f 7ad4 	vldr	s14, [pc, #-848]	@ 8008c40 <_ZN15Screen4ViewBaseC1Ev+0x14cc>
 8008f90:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008f94:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008f98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008f9c:	f280 876e 	bge.w	8009e7c <_ZN15Screen4ViewBaseC1Ev+0x2708>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008fa0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008fa4:	ee17 3a10 	vmov	r3, s14
 8008fa8:	1e59      	subs	r1, r3, #1
 8008faa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008fae:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008fb2:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008fb6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008fba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008fbe:	ee17 3a90 	vmov	r3, s15
 8008fc2:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8008fc4:	4628      	mov	r0, r5
 8008fc6:	f00c ffe9 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008fca:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8008fce:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008fd2:	ed1f 7ae4 	vldr	s14, [pc, #-912]	@ 8008c44 <_ZN15Screen4ViewBaseC1Ev+0x14d0>
 8008fd6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008fda:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008fde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008fe2:	f280 8755 	bge.w	8009e90 <_ZN15Screen4ViewBaseC1Ev+0x271c>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8008fe6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008fea:	ee17 3a10 	vmov	r3, s14
 8008fee:	1e59      	subs	r1, r3, #1
 8008ff0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008ff4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008ff8:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8008ffc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009000:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009004:	ee17 3a90 	vmov	r3, s15
 8009008:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 800900a:	4628      	mov	r0, r5
 800900c:	f00c ffc6 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009010:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8009014:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009018:	ed1f 7af5 	vldr	s14, [pc, #-980]	@ 8008c48 <_ZN15Screen4ViewBaseC1Ev+0x14d4>
 800901c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009020:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009024:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009028:	f280 873c 	bge.w	8009ea4 <_ZN15Screen4ViewBaseC1Ev+0x2730>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800902c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009030:	ee17 3a10 	vmov	r3, s14
 8009034:	1e59      	subs	r1, r3, #1
 8009036:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800903a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800903e:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8009042:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009046:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800904a:	ee17 3a90 	vmov	r3, s15
 800904e:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8009050:	4628      	mov	r0, r5
 8009052:	f00c ffa3 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009056:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 800905a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800905e:	ed9f 7af7 	vldr	s14, [pc, #988]	@ 800943c <_ZN15Screen4ViewBaseC1Ev+0x1cc8>
 8009062:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009066:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800906a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800906e:	f280 8723 	bge.w	8009eb8 <_ZN15Screen4ViewBaseC1Ev+0x2744>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8009072:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009076:	ee17 3a10 	vmov	r3, s14
 800907a:	1e59      	subs	r1, r3, #1
 800907c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8009080:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8009084:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8009088:	ee77 7a87 	vadd.f32	s15, s15, s14
 800908c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009090:	ee17 3a90 	vmov	r3, s15
 8009094:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8009096:	4628      	mov	r0, r5
 8009098:	f00c ff80 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800909c:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 80090a0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80090a4:	ed9f 7ae6 	vldr	s14, [pc, #920]	@ 8009440 <_ZN15Screen4ViewBaseC1Ev+0x1ccc>
 80090a8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80090ac:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80090b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80090b4:	f280 870a 	bge.w	8009ecc <_ZN15Screen4ViewBaseC1Ev+0x2758>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80090b8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80090bc:	ee17 3a10 	vmov	r3, s14
 80090c0:	1e59      	subs	r1, r3, #1
 80090c2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80090c6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80090ca:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80090ce:	ee77 7a87 	vadd.f32	s15, s15, s14
 80090d2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80090d6:	ee17 3a90 	vmov	r3, s15
 80090da:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 80090dc:	4628      	mov	r0, r5
 80090de:	f00c ff5d 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80090e2:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 80090e6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80090ea:	ed9f 7ad6 	vldr	s14, [pc, #856]	@ 8009444 <_ZN15Screen4ViewBaseC1Ev+0x1cd0>
 80090ee:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80090f2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80090f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80090fa:	f280 86f1 	bge.w	8009ee0 <_ZN15Screen4ViewBaseC1Ev+0x276c>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80090fe:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009102:	ee17 3a10 	vmov	r3, s14
 8009106:	1e59      	subs	r1, r3, #1
 8009108:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800910c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8009110:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8009114:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009118:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800911c:	ee17 3a90 	vmov	r3, s15
 8009120:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8009122:	4628      	mov	r0, r5
 8009124:	f00c ff3a 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009128:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 800912c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009130:	ed9f 7ac5 	vldr	s14, [pc, #788]	@ 8009448 <_ZN15Screen4ViewBaseC1Ev+0x1cd4>
 8009134:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009138:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800913c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009140:	f280 86d8 	bge.w	8009ef4 <_ZN15Screen4ViewBaseC1Ev+0x2780>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8009144:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009148:	ee17 3a10 	vmov	r3, s14
 800914c:	1e59      	subs	r1, r3, #1
 800914e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8009152:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8009156:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 800915a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800915e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009162:	ee17 3a90 	vmov	r3, s15
 8009166:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8009168:	4628      	mov	r0, r5
 800916a:	f00c ff17 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800916e:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8009172:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009176:	ed9f 7ab5 	vldr	s14, [pc, #724]	@ 800944c <_ZN15Screen4ViewBaseC1Ev+0x1cd8>
 800917a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800917e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009182:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009186:	f280 86bf 	bge.w	8009f08 <_ZN15Screen4ViewBaseC1Ev+0x2794>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800918a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800918e:	ee17 3a10 	vmov	r3, s14
 8009192:	1e59      	subs	r1, r3, #1
 8009194:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8009198:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800919c:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80091a0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80091a4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80091a8:	ee17 3a90 	vmov	r3, s15
 80091ac:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 80091ae:	4628      	mov	r0, r5
 80091b0:	f00c fef4 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80091b4:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 80091b8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80091bc:	ed9f 7aa4 	vldr	s14, [pc, #656]	@ 8009450 <_ZN15Screen4ViewBaseC1Ev+0x1cdc>
 80091c0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80091c4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80091c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80091cc:	f280 86a6 	bge.w	8009f1c <_ZN15Screen4ViewBaseC1Ev+0x27a8>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80091d0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80091d4:	ee17 3a10 	vmov	r3, s14
 80091d8:	1e59      	subs	r1, r3, #1
 80091da:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80091de:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80091e2:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80091e6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80091ea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80091ee:	ee17 3a90 	vmov	r3, s15
 80091f2:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 80091f4:	4628      	mov	r0, r5
 80091f6:	f00c fed1 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80091fa:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 80091fe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009202:	ed9f 7a94 	vldr	s14, [pc, #592]	@ 8009454 <_ZN15Screen4ViewBaseC1Ev+0x1ce0>
 8009206:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800920a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800920e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009212:	f280 868d 	bge.w	8009f30 <_ZN15Screen4ViewBaseC1Ev+0x27bc>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8009216:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800921a:	ee17 3a10 	vmov	r3, s14
 800921e:	1e59      	subs	r1, r3, #1
 8009220:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8009224:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8009228:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 800922c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009230:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009234:	ee17 3a90 	vmov	r3, s15
 8009238:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 800923a:	4628      	mov	r0, r5
 800923c:	f00c feae 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009240:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8009244:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009248:	ed9f 7a83 	vldr	s14, [pc, #524]	@ 8009458 <_ZN15Screen4ViewBaseC1Ev+0x1ce4>
 800924c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009250:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009254:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009258:	f280 8674 	bge.w	8009f44 <_ZN15Screen4ViewBaseC1Ev+0x27d0>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800925c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009260:	ee17 3a10 	vmov	r3, s14
 8009264:	1e59      	subs	r1, r3, #1
 8009266:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800926a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800926e:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8009272:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009276:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800927a:	ee17 3a90 	vmov	r3, s15
 800927e:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8009280:	4628      	mov	r0, r5
 8009282:	f00c fe8b 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009286:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 800928a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800928e:	ed9f 7a73 	vldr	s14, [pc, #460]	@ 800945c <_ZN15Screen4ViewBaseC1Ev+0x1ce8>
 8009292:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009296:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800929a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800929e:	f280 865b 	bge.w	8009f58 <_ZN15Screen4ViewBaseC1Ev+0x27e4>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80092a2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80092a6:	ee17 3a10 	vmov	r3, s14
 80092aa:	1e59      	subs	r1, r3, #1
 80092ac:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80092b0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80092b4:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80092b8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80092bc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80092c0:	ee17 3a90 	vmov	r3, s15
 80092c4:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 80092c6:	4628      	mov	r0, r5
 80092c8:	f00c fe68 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80092cc:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 80092d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80092d4:	ed9f 7a62 	vldr	s14, [pc, #392]	@ 8009460 <_ZN15Screen4ViewBaseC1Ev+0x1cec>
 80092d8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80092dc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80092e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80092e4:	f280 8642 	bge.w	8009f6c <_ZN15Screen4ViewBaseC1Ev+0x27f8>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80092e8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80092ec:	ee17 3a10 	vmov	r3, s14
 80092f0:	1e59      	subs	r1, r3, #1
 80092f2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80092f6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80092fa:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80092fe:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009302:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009306:	ee17 3a90 	vmov	r3, s15
 800930a:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 800930c:	4628      	mov	r0, r5
 800930e:	f00c fe45 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009312:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8009316:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800931a:	ed9f 7a52 	vldr	s14, [pc, #328]	@ 8009464 <_ZN15Screen4ViewBaseC1Ev+0x1cf0>
 800931e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009322:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009326:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800932a:	f280 8629 	bge.w	8009f80 <_ZN15Screen4ViewBaseC1Ev+0x280c>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800932e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009332:	ee17 3a10 	vmov	r3, s14
 8009336:	1e59      	subs	r1, r3, #1
 8009338:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800933c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8009340:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8009344:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009348:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800934c:	ee17 3a90 	vmov	r3, s15
 8009350:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8009352:	4628      	mov	r0, r5
 8009354:	f00c fe22 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009358:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 800935c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009360:	ed9f 7a41 	vldr	s14, [pc, #260]	@ 8009468 <_ZN15Screen4ViewBaseC1Ev+0x1cf4>
 8009364:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009368:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800936c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009370:	f280 8610 	bge.w	8009f94 <_ZN15Screen4ViewBaseC1Ev+0x2820>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8009374:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009378:	ee17 3a10 	vmov	r3, s14
 800937c:	1e59      	subs	r1, r3, #1
 800937e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8009382:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8009386:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 800938a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800938e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009392:	ee17 3a90 	vmov	r3, s15
 8009396:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8009398:	4628      	mov	r0, r5
 800939a:	f00c fdff 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800939e:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 80093a2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80093a6:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 800946c <_ZN15Screen4ViewBaseC1Ev+0x1cf8>
 80093aa:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80093ae:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80093b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80093b6:	f280 85f7 	bge.w	8009fa8 <_ZN15Screen4ViewBaseC1Ev+0x2834>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80093ba:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80093be:	ee17 3a10 	vmov	r3, s14
 80093c2:	1e59      	subs	r1, r3, #1
 80093c4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80093c8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80093cc:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80093d0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80093d4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80093d8:	ee17 3a90 	vmov	r3, s15
 80093dc:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 80093de:	4628      	mov	r0, r5
 80093e0:	f00c fddc 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80093e4:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 80093e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80093ec:	ed9f 7a20 	vldr	s14, [pc, #128]	@ 8009470 <_ZN15Screen4ViewBaseC1Ev+0x1cfc>
 80093f0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80093f4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80093f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80093fc:	f280 85de 	bge.w	8009fbc <_ZN15Screen4ViewBaseC1Ev+0x2848>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8009400:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009404:	ee17 3a10 	vmov	r3, s14
 8009408:	1e59      	subs	r1, r3, #1
 800940a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800940e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8009412:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8009416:	ee77 7a87 	vadd.f32	s15, s15, s14
 800941a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800941e:	ee17 3a90 	vmov	r3, s15
 8009422:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8009424:	4628      	mov	r0, r5
 8009426:	f00c fdb9 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800942a:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 800942e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009432:	ed9f 7a10 	vldr	s14, [pc, #64]	@ 8009474 <_ZN15Screen4ViewBaseC1Ev+0x1d00>
 8009436:	ee67 7a87 	vmul.f32	s15, s15, s14
 800943a:	e031      	b.n	80094a0 <_ZN15Screen4ViewBaseC1Ev+0x1d2c>
 800943c:	42910ff0 	.word	0x42910ff0
 8009440:	429a7eea 	.word	0x429a7eea
 8009444:	42a44b29 	.word	0x42a44b29
 8009448:	42ab0960 	.word	0x42ab0960
 800944c:	42abf032 	.word	0x42abf032
 8009450:	42a59274 	.word	0x42a59274
 8009454:	429844e0 	.word	0x429844e0
 8009458:	428615df 	.word	0x428615df
 800945c:	4264b1d4 	.word	0x4264b1d4
 8009460:	4241c318 	.word	0x4241c318
 8009464:	422a3bab 	.word	0x422a3bab
 8009468:	4222900c 	.word	0x4222900c
 800946c:	422bc32a 	.word	0x422bc32a
 8009470:	42432fda 	.word	0x42432fda
 8009474:	426332a3 	.word	0x426332a3
 8009478:	42824517 	.word	0x42824517
 800947c:	42900c07 	.word	0x42900c07
 8009480:	42984a28 	.word	0x42984a28
 8009484:	4299e4c2 	.word	0x4299e4c2
 8009488:	42958640 	.word	0x42958640
 800948c:	428d69af 	.word	0x428d69af
 8009490:	4284c312 	.word	0x4284c312
 8009494:	427dd463 	.word	0x427dd463
 8009498:	427cf929 	.word	0x427cf929
 800949c:	4284ad80 	.word	0x4284ad80
        if (fs >= 0)
 80094a0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80094a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80094a8:	f280 8592 	bge.w	8009fd0 <_ZN15Screen4ViewBaseC1Ev+0x285c>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80094ac:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80094b0:	ee17 3a10 	vmov	r3, s14
 80094b4:	1e59      	subs	r1, r3, #1
 80094b6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80094ba:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80094be:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80094c2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80094c6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80094ca:	ee17 3a90 	vmov	r3, s15
 80094ce:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 80094d0:	4628      	mov	r0, r5
 80094d2:	f00c fd63 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80094d6:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 80094da:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80094de:	ed1f 7a1a 	vldr	s14, [pc, #-104]	@ 8009478 <_ZN15Screen4ViewBaseC1Ev+0x1d04>
 80094e2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80094e6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80094ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80094ee:	f280 8579 	bge.w	8009fe4 <_ZN15Screen4ViewBaseC1Ev+0x2870>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80094f2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80094f6:	ee17 3a10 	vmov	r3, s14
 80094fa:	1e59      	subs	r1, r3, #1
 80094fc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8009500:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8009504:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8009508:	ee77 7a87 	vadd.f32	s15, s15, s14
 800950c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009510:	ee17 3a90 	vmov	r3, s15
 8009514:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8009516:	4628      	mov	r0, r5
 8009518:	f00c fd40 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800951c:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8009520:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009524:	ed1f 7a2b 	vldr	s14, [pc, #-172]	@ 800947c <_ZN15Screen4ViewBaseC1Ev+0x1d08>
 8009528:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800952c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009530:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009534:	f280 8560 	bge.w	8009ff8 <_ZN15Screen4ViewBaseC1Ev+0x2884>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8009538:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800953c:	ee17 3a10 	vmov	r3, s14
 8009540:	1e59      	subs	r1, r3, #1
 8009542:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8009546:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800954a:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 800954e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009552:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009556:	ee17 3a90 	vmov	r3, s15
 800955a:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 800955c:	4628      	mov	r0, r5
 800955e:	f00c fd1d 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009562:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8009566:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800956a:	ed1f 7a3b 	vldr	s14, [pc, #-236]	@ 8009480 <_ZN15Screen4ViewBaseC1Ev+0x1d0c>
 800956e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009572:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009576:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800957a:	f280 8547 	bge.w	800a00c <_ZN15Screen4ViewBaseC1Ev+0x2898>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800957e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009582:	ee17 3a10 	vmov	r3, s14
 8009586:	1e59      	subs	r1, r3, #1
 8009588:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800958c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8009590:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8009594:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009598:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800959c:	ee17 3a90 	vmov	r3, s15
 80095a0:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 80095a2:	4628      	mov	r0, r5
 80095a4:	f00c fcfa 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80095a8:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 80095ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80095b0:	ed1f 7a4c 	vldr	s14, [pc, #-304]	@ 8009484 <_ZN15Screen4ViewBaseC1Ev+0x1d10>
 80095b4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80095b8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80095bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80095c0:	f280 852e 	bge.w	800a020 <_ZN15Screen4ViewBaseC1Ev+0x28ac>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80095c4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80095c8:	ee17 3a10 	vmov	r3, s14
 80095cc:	1e59      	subs	r1, r3, #1
 80095ce:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80095d2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80095d6:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80095da:	ee77 7a87 	vadd.f32	s15, s15, s14
 80095de:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80095e2:	ee17 3a90 	vmov	r3, s15
 80095e6:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 80095e8:	4628      	mov	r0, r5
 80095ea:	f00c fcd7 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80095ee:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 80095f2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80095f6:	ed1f 7a5c 	vldr	s14, [pc, #-368]	@ 8009488 <_ZN15Screen4ViewBaseC1Ev+0x1d14>
 80095fa:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80095fe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009602:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009606:	f280 8515 	bge.w	800a034 <_ZN15Screen4ViewBaseC1Ev+0x28c0>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800960a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800960e:	ee17 3a10 	vmov	r3, s14
 8009612:	1e59      	subs	r1, r3, #1
 8009614:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8009618:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800961c:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8009620:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009624:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009628:	ee17 3a90 	vmov	r3, s15
 800962c:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 800962e:	4628      	mov	r0, r5
 8009630:	f00c fcb4 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009634:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8009638:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800963c:	ed1f 7a6d 	vldr	s14, [pc, #-436]	@ 800948c <_ZN15Screen4ViewBaseC1Ev+0x1d18>
 8009640:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009644:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009648:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800964c:	f280 84fc 	bge.w	800a048 <_ZN15Screen4ViewBaseC1Ev+0x28d4>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8009650:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009654:	ee17 3a10 	vmov	r3, s14
 8009658:	1e59      	subs	r1, r3, #1
 800965a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800965e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8009662:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8009666:	ee77 7a87 	vadd.f32	s15, s15, s14
 800966a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800966e:	ee17 3a90 	vmov	r3, s15
 8009672:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8009674:	4628      	mov	r0, r5
 8009676:	f00c fc91 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800967a:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 800967e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009682:	ed1f 7a7d 	vldr	s14, [pc, #-500]	@ 8009490 <_ZN15Screen4ViewBaseC1Ev+0x1d1c>
 8009686:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800968a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800968e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009692:	f280 84e3 	bge.w	800a05c <_ZN15Screen4ViewBaseC1Ev+0x28e8>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8009696:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800969a:	ee17 3a10 	vmov	r3, s14
 800969e:	1e59      	subs	r1, r3, #1
 80096a0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80096a4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80096a8:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80096ac:	ee77 7a87 	vadd.f32	s15, s15, s14
 80096b0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80096b4:	ee17 3a90 	vmov	r3, s15
 80096b8:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 80096ba:	4628      	mov	r0, r5
 80096bc:	f00c fc6e 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80096c0:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 80096c4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80096c8:	ed1f 7a8e 	vldr	s14, [pc, #-568]	@ 8009494 <_ZN15Screen4ViewBaseC1Ev+0x1d20>
 80096cc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80096d0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80096d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80096d8:	f280 84ca 	bge.w	800a070 <_ZN15Screen4ViewBaseC1Ev+0x28fc>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80096dc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80096e0:	ee17 3a10 	vmov	r3, s14
 80096e4:	1e59      	subs	r1, r3, #1
 80096e6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80096ea:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80096ee:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 80096f2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80096f6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80096fa:	ee17 3a90 	vmov	r3, s15
 80096fe:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8009700:	4628      	mov	r0, r5
 8009702:	f00c fc4b 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009706:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 800970a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800970e:	ed1f 7a9e 	vldr	s14, [pc, #-632]	@ 8009498 <_ZN15Screen4ViewBaseC1Ev+0x1d24>
 8009712:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009716:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800971a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800971e:	f280 84b1 	bge.w	800a084 <_ZN15Screen4ViewBaseC1Ev+0x2910>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8009722:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009726:	ee17 3a10 	vmov	r3, s14
 800972a:	1e59      	subs	r1, r3, #1
 800972c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8009730:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8009734:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8009738:	ee77 7a87 	vadd.f32	s15, s15, s14
 800973c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009740:	ee17 3a90 	vmov	r3, s15
 8009744:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 8009746:	4628      	mov	r0, r5
 8009748:	f00c fc28 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800974c:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 8009750:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009754:	ed1f 7aaf 	vldr	s14, [pc, #-700]	@ 800949c <_ZN15Screen4ViewBaseC1Ev+0x1d28>
 8009758:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800975c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009760:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009764:	f280 8498 	bge.w	800a098 <_ZN15Screen4ViewBaseC1Ev+0x2924>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8009768:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800976c:	ee17 3a10 	vmov	r3, s14
 8009770:	1e59      	subs	r1, r3, #1
 8009772:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8009776:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800977a:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 800977e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009782:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009786:	ee17 3a90 	vmov	r3, s15
 800978a:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 800978c:	4628      	mov	r0, r5
 800978e:	f00c fc05 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
 8009792:	4629      	mov	r1, r5
 8009794:	4640      	mov	r0, r8
 8009796:	f009 f8c7 	bl	8012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(666, 15);
 800979a:	f504 659a 	add.w	r5, r4, #1232	@ 0x4d0
 800979e:	220f      	movs	r2, #15
 80097a0:	f240 219a 	movw	r1, #666	@ 0x29a
 80097a4:	4628      	mov	r0, r5
 80097a6:	f7fc fc71 	bl	800608c <_ZN8touchgfx8Drawable5setXYEss>
 80097aa:	2301      	movs	r3, #1
 80097ac:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 80097b0:	f8ad 3058 	strh.w	r3, [sp, #88]	@ 0x58
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_ACTION_ID));
 80097b4:	aa16      	add	r2, sp, #88	@ 0x58
 80097b6:	a915      	add	r1, sp, #84	@ 0x54
 80097b8:	4628      	mov	r0, r5
 80097ba:	f00e fb42 	bl	8017e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        : typedTextId(id)
 80097be:	4ef0      	ldr	r6, [pc, #960]	@ (8009b80 <_ZN15Screen4ViewBaseC1Ev+0x240c>)
 80097c0:	9617      	str	r6, [sp, #92]	@ 0x5c
 80097c2:	2304      	movs	r3, #4
 80097c4:	f8ad 3060 	strh.w	r3, [sp, #96]	@ 0x60
class TypedText
 80097c8:	f8a4 3508 	strh.w	r3, [r4, #1288]	@ 0x508
        updateTextPosition();
 80097cc:	9802      	ldr	r0, [sp, #8]
 80097ce:	f7fc fd73 	bl	80062b8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80097d2:	f04f 33ff 	mov.w	r3, #4294967295
        color = col;
 80097d6:	f8c4 350c 	str.w	r3, [r4, #1292]	@ 0x50c
        colorPressed = col;
 80097da:	f8c4 3510 	str.w	r3, [r4, #1296]	@ 0x510
    buttonWithLabel1.setAction(buttonCallback);
 80097de:	f504 5358 	add.w	r3, r4, #13824	@ 0x3600
        action = &callback;
 80097e2:	f8c4 34f8 	str.w	r3, [r4, #1272]	@ 0x4f8
 80097e6:	4629      	mov	r1, r5
 80097e8:	4640      	mov	r0, r8
 80097ea:	f009 f89d 	bl	8012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setPosition(295, 14, 213, 61);
 80097ee:	f504 65a3 	add.w	r5, r4, #1304	@ 0x518
        setXY(x, y);
 80097f2:	220e      	movs	r2, #14
 80097f4:	f240 1127 	movw	r1, #295	@ 0x127
 80097f8:	4628      	mov	r0, r5
 80097fa:	f7fc fc47 	bl	800608c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80097fe:	223d      	movs	r2, #61	@ 0x3d
 8009800:	21d5      	movs	r1, #213	@ 0xd5
 8009802:	4628      	mov	r0, r5
 8009804:	f7fc fc4e 	bl	80060a4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8009808:	4bde      	ldr	r3, [pc, #888]	@ (8009b84 <_ZN15Screen4ViewBaseC1Ev+0x2410>)
        color = newColor;
 800980a:	f8c4 3548 	str.w	r3, [r4, #1352]	@ 0x548
        linespace = space;
 800980e:	2300      	movs	r3, #0
 8009810:	f8a4 354c 	strh.w	r3, [r4, #1356]	@ 0x54c
        boundingArea = calculateBoundingArea();
 8009814:	af08      	add	r7, sp, #32
 8009816:	f8d4 3518 	ldr.w	r3, [r4, #1304]	@ 0x518
 800981a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800981e:	4629      	mov	r1, r5
 8009820:	4638      	mov	r0, r7
 8009822:	4798      	blx	r3
 8009824:	f204 5354 	addw	r3, r4, #1364	@ 0x554
 8009828:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800982c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9FXO).getText());
 8009830:	f504 67b2 	add.w	r7, r4, #1424	@ 0x590
        : typedTextId(id)
 8009834:	9619      	str	r6, [sp, #100]	@ 0x64
 8009836:	2302      	movs	r3, #2
 8009838:	f8ad 3068 	strh.w	r3, [sp, #104]	@ 0x68
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800983c:	4bd2      	ldr	r3, [pc, #840]	@ (8009b88 <_ZN15Screen4ViewBaseC1Ev+0x2414>)
 800983e:	681b      	ldr	r3, [r3, #0]
 8009840:	2b00      	cmp	r3, #0
 8009842:	f000 8433 	beq.w	800a0ac <_ZN15Screen4ViewBaseC1Ev+0x2938>
        return typedTextId < numberOfTypedTexts;
 8009846:	4bd1      	ldr	r3, [pc, #836]	@ (8009b8c <_ZN15Screen4ViewBaseC1Ev+0x2418>)
 8009848:	881b      	ldrh	r3, [r3, #0]
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800984a:	2b02      	cmp	r3, #2
 800984c:	f240 8434 	bls.w	800a0b8 <_ZN15Screen4ViewBaseC1Ev+0x2944>
        return texts->getText(typedTextId);
 8009850:	2102      	movs	r1, #2
 8009852:	4bcf      	ldr	r3, [pc, #828]	@ (8009b90 <_ZN15Screen4ViewBaseC1Ev+0x241c>)
 8009854:	6818      	ldr	r0, [r3, #0]
 8009856:	f000 fdfd 	bl	800a454 <_ZNK8touchgfx5Texts7getTextEt>
 800985a:	4603      	mov	r3, r0
 800985c:	4acd      	ldr	r2, [pc, #820]	@ (8009b94 <_ZN15Screen4ViewBaseC1Ev+0x2420>)
 800985e:	21c8      	movs	r1, #200	@ 0xc8
 8009860:	4638      	mov	r0, r7
 8009862:	f014 feeb 	bl	801e63c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8009866:	f8c4 7560 	str.w	r7, [r4, #1376]	@ 0x560
        : typedTextId(id)
 800986a:	4ec5      	ldr	r6, [pc, #788]	@ (8009b80 <_ZN15Screen4ViewBaseC1Ev+0x240c>)
 800986c:	961b      	str	r6, [sp, #108]	@ 0x6c
 800986e:	2303      	movs	r3, #3
 8009870:	f8ad 3070 	strh.w	r3, [sp, #112]	@ 0x70
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DNZ7));
 8009874:	a91b      	add	r1, sp, #108	@ 0x6c
 8009876:	4628      	mov	r0, r5
 8009878:	f00e fa88 	bl	8017d8c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    {
 800987c:	961b      	str	r6, [sp, #108]	@ 0x6c
 800987e:	4629      	mov	r1, r5
 8009880:	4640      	mov	r0, r8
 8009882:	f009 f851 	bl	8012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009886:	2302      	movs	r3, #2
 8009888:	f8ad 3074 	strh.w	r3, [sp, #116]	@ 0x74
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_HEART_ID));
 800988c:	f204 5564 	addw	r5, r4, #1380	@ 0x564
 8009890:	a91d      	add	r1, sp, #116	@ 0x74
 8009892:	4628      	mov	r0, r5
 8009894:	f00e fc06 	bl	80180a4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8009898:	2206      	movs	r2, #6
 800989a:	21d1      	movs	r1, #209	@ 0xd1
 800989c:	4628      	mov	r0, r5
 800989e:	f7fc fbf5 	bl	800608c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80098a2:	2242      	movs	r2, #66	@ 0x42
 80098a4:	214c      	movs	r1, #76	@ 0x4c
 80098a6:	4628      	mov	r0, r5
 80098a8:	f7fc fbfc 	bl	80060a4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80098ac:	2100      	movs	r1, #0
 80098ae:	9807      	ldr	r0, [sp, #28]
 80098b0:	f00d fce3 	bl	801727a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80098b4:	4629      	mov	r1, r5
 80098b6:	4640      	mov	r0, r8
 80098b8:	f009 f836 	bl	8012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80098bc:	4620      	mov	r0, r4
 80098be:	b01f      	add	sp, #124	@ 0x7c
 80098c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            return (int)(fs + 0.5f);
 80098c4:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 80098c8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80098cc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80098d0:	ee17 1a90 	vmov	r1, s15
 80098d4:	f7fe b8e2 	b.w	8007a9c <_ZN15Screen4ViewBaseC1Ev+0x328>
 80098d8:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 80098dc:	ee77 7a87 	vadd.f32	s15, s15, s14
 80098e0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80098e4:	ee17 1a90 	vmov	r1, s15
 80098e8:	f7fe b8fb 	b.w	8007ae2 <_ZN15Screen4ViewBaseC1Ev+0x36e>
 80098ec:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 80098f0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80098f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80098f8:	ee17 1a90 	vmov	r1, s15
 80098fc:	f7fe b95a 	b.w	8007bb4 <_ZN15Screen4ViewBaseC1Ev+0x440>
 8009900:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009904:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009908:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800990c:	ee17 1a90 	vmov	r1, s15
 8009910:	f7fe b973 	b.w	8007bfa <_ZN15Screen4ViewBaseC1Ev+0x486>
 8009914:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009918:	ee77 7a87 	vadd.f32	s15, s15, s14
 800991c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009920:	ee17 1a90 	vmov	r1, s15
 8009924:	f7fe b98c 	b.w	8007c40 <_ZN15Screen4ViewBaseC1Ev+0x4cc>
 8009928:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800992c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009930:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009934:	ee17 1a90 	vmov	r1, s15
 8009938:	f7fe b9a5 	b.w	8007c86 <_ZN15Screen4ViewBaseC1Ev+0x512>
 800993c:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009940:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009944:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009948:	ee17 1a90 	vmov	r1, s15
 800994c:	f7fe b9be 	b.w	8007ccc <_ZN15Screen4ViewBaseC1Ev+0x558>
 8009950:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009954:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009958:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800995c:	ee17 1a90 	vmov	r1, s15
 8009960:	f7fe b9d7 	b.w	8007d12 <_ZN15Screen4ViewBaseC1Ev+0x59e>
 8009964:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009968:	ee77 7a87 	vadd.f32	s15, s15, s14
 800996c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009970:	ee17 1a90 	vmov	r1, s15
 8009974:	f7fe b9f0 	b.w	8007d58 <_ZN15Screen4ViewBaseC1Ev+0x5e4>
 8009978:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800997c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009980:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009984:	ee17 1a90 	vmov	r1, s15
 8009988:	f7fe ba09 	b.w	8007d9e <_ZN15Screen4ViewBaseC1Ev+0x62a>
 800998c:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009990:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009994:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009998:	ee17 1a90 	vmov	r1, s15
 800999c:	f7fe ba22 	b.w	8007de4 <_ZN15Screen4ViewBaseC1Ev+0x670>
 80099a0:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 80099a4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80099a8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80099ac:	ee17 1a90 	vmov	r1, s15
 80099b0:	f7fe ba3b 	b.w	8007e2a <_ZN15Screen4ViewBaseC1Ev+0x6b6>
 80099b4:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 80099b8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80099bc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80099c0:	ee17 1a90 	vmov	r1, s15
 80099c4:	f7fe ba54 	b.w	8007e70 <_ZN15Screen4ViewBaseC1Ev+0x6fc>
 80099c8:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 80099cc:	ee77 7a87 	vadd.f32	s15, s15, s14
 80099d0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80099d4:	ee17 1a90 	vmov	r1, s15
 80099d8:	f7fe ba6d 	b.w	8007eb6 <_ZN15Screen4ViewBaseC1Ev+0x742>
 80099dc:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 80099e0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80099e4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80099e8:	ee17 1a90 	vmov	r1, s15
 80099ec:	f7fe ba86 	b.w	8007efc <_ZN15Screen4ViewBaseC1Ev+0x788>
 80099f0:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 80099f4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80099f8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80099fc:	ee17 1a90 	vmov	r1, s15
 8009a00:	f7fe ba9f 	b.w	8007f42 <_ZN15Screen4ViewBaseC1Ev+0x7ce>
 8009a04:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009a08:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009a0c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009a10:	ee17 1a90 	vmov	r1, s15
 8009a14:	f7fe bab8 	b.w	8007f88 <_ZN15Screen4ViewBaseC1Ev+0x814>
 8009a18:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009a1c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009a20:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009a24:	ee17 1a90 	vmov	r1, s15
 8009a28:	f7fe bad1 	b.w	8007fce <_ZN15Screen4ViewBaseC1Ev+0x85a>
 8009a2c:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009a30:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009a34:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009a38:	ee17 1a90 	vmov	r1, s15
 8009a3c:	f7fe baea 	b.w	8008014 <_ZN15Screen4ViewBaseC1Ev+0x8a0>
 8009a40:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009a44:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009a48:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009a4c:	ee17 1a90 	vmov	r1, s15
 8009a50:	f7fe bb03 	b.w	800805a <_ZN15Screen4ViewBaseC1Ev+0x8e6>
 8009a54:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009a58:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009a5c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009a60:	ee17 1a90 	vmov	r1, s15
 8009a64:	f7fe bb1c 	b.w	80080a0 <_ZN15Screen4ViewBaseC1Ev+0x92c>
 8009a68:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009a6c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009a70:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009a74:	ee17 1a90 	vmov	r1, s15
 8009a78:	f7fe bb35 	b.w	80080e6 <_ZN15Screen4ViewBaseC1Ev+0x972>
 8009a7c:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009a80:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009a84:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009a88:	ee17 1a90 	vmov	r1, s15
 8009a8c:	f7fe bb4e 	b.w	800812c <_ZN15Screen4ViewBaseC1Ev+0x9b8>
 8009a90:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009a94:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009a98:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009a9c:	ee17 1a90 	vmov	r1, s15
 8009aa0:	f7fe bb67 	b.w	8008172 <_ZN15Screen4ViewBaseC1Ev+0x9fe>
 8009aa4:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009aa8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009aac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009ab0:	ee17 1a90 	vmov	r1, s15
 8009ab4:	f7fe bb80 	b.w	80081b8 <_ZN15Screen4ViewBaseC1Ev+0xa44>
 8009ab8:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009abc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009ac0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009ac4:	ee17 1a90 	vmov	r1, s15
 8009ac8:	f7fe bb99 	b.w	80081fe <_ZN15Screen4ViewBaseC1Ev+0xa8a>
 8009acc:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009ad0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009ad4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009ad8:	ee17 1a90 	vmov	r1, s15
 8009adc:	f7fe bbb2 	b.w	8008244 <_ZN15Screen4ViewBaseC1Ev+0xad0>
 8009ae0:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009ae4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009ae8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009aec:	ee17 1a90 	vmov	r1, s15
 8009af0:	f7fe bbcb 	b.w	800828a <_ZN15Screen4ViewBaseC1Ev+0xb16>
 8009af4:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009af8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009afc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009b00:	ee17 1a90 	vmov	r1, s15
 8009b04:	f7fe bbe4 	b.w	80082d0 <_ZN15Screen4ViewBaseC1Ev+0xb5c>
 8009b08:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009b0c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009b10:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009b14:	ee17 1a90 	vmov	r1, s15
 8009b18:	f7fe bbfd 	b.w	8008316 <_ZN15Screen4ViewBaseC1Ev+0xba2>
 8009b1c:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009b20:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009b24:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009b28:	ee17 1a90 	vmov	r1, s15
 8009b2c:	f7fe bc16 	b.w	800835c <_ZN15Screen4ViewBaseC1Ev+0xbe8>
 8009b30:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009b34:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009b38:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009b3c:	ee17 1a90 	vmov	r1, s15
 8009b40:	f7fe bc6a 	b.w	8008418 <_ZN15Screen4ViewBaseC1Ev+0xca4>
 8009b44:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009b48:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009b4c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009b50:	ee17 1a90 	vmov	r1, s15
 8009b54:	f7fe bc83 	b.w	800845e <_ZN15Screen4ViewBaseC1Ev+0xcea>
 8009b58:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009b5c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009b60:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009b64:	ee17 1a90 	vmov	r1, s15
 8009b68:	f7fe bc9c 	b.w	80084a4 <_ZN15Screen4ViewBaseC1Ev+0xd30>
 8009b6c:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009b70:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009b74:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009b78:	ee17 1a90 	vmov	r1, s15
 8009b7c:	f7fe bcb5 	b.w	80084ea <_ZN15Screen4ViewBaseC1Ev+0xd76>
 8009b80:	08030688 	.word	0x08030688
 8009b84:	fffa0505 	.word	0xfffa0505
 8009b88:	2000e464 	.word	0x2000e464
 8009b8c:	2000e468 	.word	0x2000e468
 8009b90:	2000e470 	.word	0x2000e470
 8009b94:	08031834 	.word	0x08031834
 8009b98:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009b9c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009ba0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009ba4:	ee17 1a90 	vmov	r1, s15
 8009ba8:	f7fe bcc2 	b.w	8008530 <_ZN15Screen4ViewBaseC1Ev+0xdbc>
 8009bac:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009bb0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009bb4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009bb8:	ee17 1a90 	vmov	r1, s15
 8009bbc:	f7fe bcdb 	b.w	8008576 <_ZN15Screen4ViewBaseC1Ev+0xe02>
 8009bc0:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009bc4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009bc8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009bcc:	ee17 1a90 	vmov	r1, s15
 8009bd0:	f7fe bcf4 	b.w	80085bc <_ZN15Screen4ViewBaseC1Ev+0xe48>
 8009bd4:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009bd8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009bdc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009be0:	ee17 1a90 	vmov	r1, s15
 8009be4:	f7fe bd0d 	b.w	8008602 <_ZN15Screen4ViewBaseC1Ev+0xe8e>
 8009be8:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009bec:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009bf0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009bf4:	ee17 1a90 	vmov	r1, s15
 8009bf8:	f7fe bd26 	b.w	8008648 <_ZN15Screen4ViewBaseC1Ev+0xed4>
 8009bfc:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009c00:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009c04:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009c08:	ee17 1a90 	vmov	r1, s15
 8009c0c:	f7fe bd3f 	b.w	800868e <_ZN15Screen4ViewBaseC1Ev+0xf1a>
 8009c10:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009c14:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009c18:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009c1c:	ee17 1a90 	vmov	r1, s15
 8009c20:	f7fe bd58 	b.w	80086d4 <_ZN15Screen4ViewBaseC1Ev+0xf60>
 8009c24:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009c28:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009c2c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009c30:	ee17 1a90 	vmov	r1, s15
 8009c34:	f7fe bd71 	b.w	800871a <_ZN15Screen4ViewBaseC1Ev+0xfa6>
 8009c38:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009c3c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009c40:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009c44:	ee17 1a90 	vmov	r1, s15
 8009c48:	f7fe bd8a 	b.w	8008760 <_ZN15Screen4ViewBaseC1Ev+0xfec>
 8009c4c:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009c50:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009c54:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009c58:	ee17 1a90 	vmov	r1, s15
 8009c5c:	f7fe bda3 	b.w	80087a6 <_ZN15Screen4ViewBaseC1Ev+0x1032>
 8009c60:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009c64:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009c68:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009c6c:	ee17 1a90 	vmov	r1, s15
 8009c70:	f7fe bdbc 	b.w	80087ec <_ZN15Screen4ViewBaseC1Ev+0x1078>
 8009c74:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009c78:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009c7c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009c80:	ee17 1a90 	vmov	r1, s15
 8009c84:	f7fe bdd5 	b.w	8008832 <_ZN15Screen4ViewBaseC1Ev+0x10be>
 8009c88:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009c8c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009c90:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009c94:	ee17 1a90 	vmov	r1, s15
 8009c98:	f7fe bdee 	b.w	8008878 <_ZN15Screen4ViewBaseC1Ev+0x1104>
 8009c9c:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009ca0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009ca4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009ca8:	ee17 1a90 	vmov	r1, s15
 8009cac:	f7fe be07 	b.w	80088be <_ZN15Screen4ViewBaseC1Ev+0x114a>
 8009cb0:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009cb4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009cb8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009cbc:	ee17 1a90 	vmov	r1, s15
 8009cc0:	f7fe be20 	b.w	8008904 <_ZN15Screen4ViewBaseC1Ev+0x1190>
 8009cc4:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009cc8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009ccc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009cd0:	ee17 1a90 	vmov	r1, s15
 8009cd4:	f7fe be39 	b.w	800894a <_ZN15Screen4ViewBaseC1Ev+0x11d6>
 8009cd8:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009cdc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009ce0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009ce4:	ee17 1a90 	vmov	r1, s15
 8009ce8:	f7fe be52 	b.w	8008990 <_ZN15Screen4ViewBaseC1Ev+0x121c>
 8009cec:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009cf0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009cf4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009cf8:	ee17 1a90 	vmov	r1, s15
 8009cfc:	f7fe be6b 	b.w	80089d6 <_ZN15Screen4ViewBaseC1Ev+0x1262>
 8009d00:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009d04:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009d08:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009d0c:	ee17 1a90 	vmov	r1, s15
 8009d10:	f7fe be84 	b.w	8008a1c <_ZN15Screen4ViewBaseC1Ev+0x12a8>
 8009d14:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009d18:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009d1c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009d20:	ee17 1a90 	vmov	r1, s15
 8009d24:	f7fe be9d 	b.w	8008a62 <_ZN15Screen4ViewBaseC1Ev+0x12ee>
 8009d28:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009d2c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009d30:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009d34:	ee17 1a90 	vmov	r1, s15
 8009d38:	f7fe beb6 	b.w	8008aa8 <_ZN15Screen4ViewBaseC1Ev+0x1334>
 8009d3c:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009d40:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009d44:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009d48:	ee17 1a90 	vmov	r1, s15
 8009d4c:	f7fe becf 	b.w	8008aee <_ZN15Screen4ViewBaseC1Ev+0x137a>
 8009d50:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009d54:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009d58:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009d5c:	ee17 1a90 	vmov	r1, s15
 8009d60:	f7fe bee8 	b.w	8008b34 <_ZN15Screen4ViewBaseC1Ev+0x13c0>
 8009d64:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009d68:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009d6c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009d70:	ee17 1a90 	vmov	r1, s15
 8009d74:	f7fe bf01 	b.w	8008b7a <_ZN15Screen4ViewBaseC1Ev+0x1406>
 8009d78:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009d7c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009d80:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009d84:	ee17 1a90 	vmov	r1, s15
 8009d88:	f7fe bf1a 	b.w	8008bc0 <_ZN15Screen4ViewBaseC1Ev+0x144c>
 8009d8c:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009d90:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009d94:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009d98:	ee17 1a90 	vmov	r1, s15
 8009d9c:	f7fe bf6e 	b.w	8008c7c <_ZN15Screen4ViewBaseC1Ev+0x1508>
 8009da0:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009da4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009da8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009dac:	ee17 1a90 	vmov	r1, s15
 8009db0:	f7fe bf87 	b.w	8008cc2 <_ZN15Screen4ViewBaseC1Ev+0x154e>
 8009db4:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009db8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009dbc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009dc0:	ee17 1a90 	vmov	r1, s15
 8009dc4:	f7fe bfa0 	b.w	8008d08 <_ZN15Screen4ViewBaseC1Ev+0x1594>
 8009dc8:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009dcc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009dd0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009dd4:	ee17 1a90 	vmov	r1, s15
 8009dd8:	f7fe bfb9 	b.w	8008d4e <_ZN15Screen4ViewBaseC1Ev+0x15da>
 8009ddc:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009de0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009de4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009de8:	ee17 1a90 	vmov	r1, s15
 8009dec:	f7fe bfd2 	b.w	8008d94 <_ZN15Screen4ViewBaseC1Ev+0x1620>
 8009df0:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009df4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009df8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009dfc:	ee17 1a90 	vmov	r1, s15
 8009e00:	f7fe bfeb 	b.w	8008dda <_ZN15Screen4ViewBaseC1Ev+0x1666>
 8009e04:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009e08:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009e0c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009e10:	ee17 1a90 	vmov	r1, s15
 8009e14:	f7ff b804 	b.w	8008e20 <_ZN15Screen4ViewBaseC1Ev+0x16ac>
 8009e18:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009e1c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009e20:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009e24:	ee17 1a90 	vmov	r1, s15
 8009e28:	f7ff b81d 	b.w	8008e66 <_ZN15Screen4ViewBaseC1Ev+0x16f2>
 8009e2c:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009e30:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009e34:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009e38:	ee17 1a90 	vmov	r1, s15
 8009e3c:	f7ff b836 	b.w	8008eac <_ZN15Screen4ViewBaseC1Ev+0x1738>
 8009e40:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009e44:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009e48:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009e4c:	ee17 1a90 	vmov	r1, s15
 8009e50:	f7ff b84f 	b.w	8008ef2 <_ZN15Screen4ViewBaseC1Ev+0x177e>
 8009e54:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009e58:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009e5c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009e60:	ee17 1a90 	vmov	r1, s15
 8009e64:	f7ff b868 	b.w	8008f38 <_ZN15Screen4ViewBaseC1Ev+0x17c4>
 8009e68:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009e6c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009e70:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009e74:	ee17 1a90 	vmov	r1, s15
 8009e78:	f7ff b881 	b.w	8008f7e <_ZN15Screen4ViewBaseC1Ev+0x180a>
 8009e7c:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009e80:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009e84:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009e88:	ee17 1a90 	vmov	r1, s15
 8009e8c:	f7ff b89a 	b.w	8008fc4 <_ZN15Screen4ViewBaseC1Ev+0x1850>
 8009e90:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009e94:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009e98:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009e9c:	ee17 1a90 	vmov	r1, s15
 8009ea0:	f7ff b8b3 	b.w	800900a <_ZN15Screen4ViewBaseC1Ev+0x1896>
 8009ea4:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009ea8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009eac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009eb0:	ee17 1a90 	vmov	r1, s15
 8009eb4:	f7ff b8cc 	b.w	8009050 <_ZN15Screen4ViewBaseC1Ev+0x18dc>
 8009eb8:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009ebc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009ec0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009ec4:	ee17 1a90 	vmov	r1, s15
 8009ec8:	f7ff b8e5 	b.w	8009096 <_ZN15Screen4ViewBaseC1Ev+0x1922>
 8009ecc:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009ed0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009ed4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009ed8:	ee17 1a90 	vmov	r1, s15
 8009edc:	f7ff b8fe 	b.w	80090dc <_ZN15Screen4ViewBaseC1Ev+0x1968>
 8009ee0:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009ee4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009ee8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009eec:	ee17 1a90 	vmov	r1, s15
 8009ef0:	f7ff b917 	b.w	8009122 <_ZN15Screen4ViewBaseC1Ev+0x19ae>
 8009ef4:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009ef8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009efc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009f00:	ee17 1a90 	vmov	r1, s15
 8009f04:	f7ff b930 	b.w	8009168 <_ZN15Screen4ViewBaseC1Ev+0x19f4>
 8009f08:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009f0c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009f10:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009f14:	ee17 1a90 	vmov	r1, s15
 8009f18:	f7ff b949 	b.w	80091ae <_ZN15Screen4ViewBaseC1Ev+0x1a3a>
 8009f1c:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009f20:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009f24:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009f28:	ee17 1a90 	vmov	r1, s15
 8009f2c:	f7ff b962 	b.w	80091f4 <_ZN15Screen4ViewBaseC1Ev+0x1a80>
 8009f30:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009f34:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009f38:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009f3c:	ee17 1a90 	vmov	r1, s15
 8009f40:	f7ff b97b 	b.w	800923a <_ZN15Screen4ViewBaseC1Ev+0x1ac6>
 8009f44:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009f48:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009f4c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009f50:	ee17 1a90 	vmov	r1, s15
 8009f54:	f7ff b994 	b.w	8009280 <_ZN15Screen4ViewBaseC1Ev+0x1b0c>
 8009f58:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009f5c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009f60:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009f64:	ee17 1a90 	vmov	r1, s15
 8009f68:	f7ff b9ad 	b.w	80092c6 <_ZN15Screen4ViewBaseC1Ev+0x1b52>
 8009f6c:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009f70:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009f74:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009f78:	ee17 1a90 	vmov	r1, s15
 8009f7c:	f7ff b9c6 	b.w	800930c <_ZN15Screen4ViewBaseC1Ev+0x1b98>
 8009f80:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009f84:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009f88:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009f8c:	ee17 1a90 	vmov	r1, s15
 8009f90:	f7ff b9df 	b.w	8009352 <_ZN15Screen4ViewBaseC1Ev+0x1bde>
 8009f94:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009f98:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009f9c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009fa0:	ee17 1a90 	vmov	r1, s15
 8009fa4:	f7ff b9f8 	b.w	8009398 <_ZN15Screen4ViewBaseC1Ev+0x1c24>
 8009fa8:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009fac:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009fb0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009fb4:	ee17 1a90 	vmov	r1, s15
 8009fb8:	f7ff ba11 	b.w	80093de <_ZN15Screen4ViewBaseC1Ev+0x1c6a>
 8009fbc:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009fc0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009fc4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009fc8:	ee17 1a90 	vmov	r1, s15
 8009fcc:	f7ff ba2a 	b.w	8009424 <_ZN15Screen4ViewBaseC1Ev+0x1cb0>
 8009fd0:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009fd4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009fd8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009fdc:	ee17 1a90 	vmov	r1, s15
 8009fe0:	f7ff ba76 	b.w	80094d0 <_ZN15Screen4ViewBaseC1Ev+0x1d5c>
 8009fe4:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009fe8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009fec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009ff0:	ee17 1a90 	vmov	r1, s15
 8009ff4:	f7ff ba8f 	b.w	8009516 <_ZN15Screen4ViewBaseC1Ev+0x1da2>
 8009ff8:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009ffc:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a000:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a004:	ee17 1a90 	vmov	r1, s15
 800a008:	f7ff baa8 	b.w	800955c <_ZN15Screen4ViewBaseC1Ev+0x1de8>
 800a00c:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800a010:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a014:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a018:	ee17 1a90 	vmov	r1, s15
 800a01c:	f7ff bac1 	b.w	80095a2 <_ZN15Screen4ViewBaseC1Ev+0x1e2e>
 800a020:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800a024:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a028:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a02c:	ee17 1a90 	vmov	r1, s15
 800a030:	f7ff bada 	b.w	80095e8 <_ZN15Screen4ViewBaseC1Ev+0x1e74>
 800a034:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800a038:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a03c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a040:	ee17 1a90 	vmov	r1, s15
 800a044:	f7ff baf3 	b.w	800962e <_ZN15Screen4ViewBaseC1Ev+0x1eba>
 800a048:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800a04c:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a050:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a054:	ee17 1a90 	vmov	r1, s15
 800a058:	f7ff bb0c 	b.w	8009674 <_ZN15Screen4ViewBaseC1Ev+0x1f00>
 800a05c:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800a060:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a064:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a068:	ee17 1a90 	vmov	r1, s15
 800a06c:	f7ff bb25 	b.w	80096ba <_ZN15Screen4ViewBaseC1Ev+0x1f46>
 800a070:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800a074:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a078:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a07c:	ee17 1a90 	vmov	r1, s15
 800a080:	f7ff bb3e 	b.w	8009700 <_ZN15Screen4ViewBaseC1Ev+0x1f8c>
 800a084:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800a088:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a08c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a090:	ee17 1a90 	vmov	r1, s15
 800a094:	f7ff bb57 	b.w	8009746 <_ZN15Screen4ViewBaseC1Ev+0x1fd2>
 800a098:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800a09c:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a0a0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a0a4:	ee17 1a90 	vmov	r1, s15
 800a0a8:	f7ff bb70 	b.w	800978c <_ZN15Screen4ViewBaseC1Ev+0x2018>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800a0ac:	4b05      	ldr	r3, [pc, #20]	@ (800a0c4 <_ZN15Screen4ViewBaseC1Ev+0x2950>)
 800a0ae:	4a06      	ldr	r2, [pc, #24]	@ (800a0c8 <_ZN15Screen4ViewBaseC1Ev+0x2954>)
 800a0b0:	2160      	movs	r1, #96	@ 0x60
 800a0b2:	4806      	ldr	r0, [pc, #24]	@ (800a0cc <_ZN15Screen4ViewBaseC1Ev+0x2958>)
 800a0b4:	f024 fb42 	bl	802e73c <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800a0b8:	4b05      	ldr	r3, [pc, #20]	@ (800a0d0 <_ZN15Screen4ViewBaseC1Ev+0x295c>)
 800a0ba:	4a03      	ldr	r2, [pc, #12]	@ (800a0c8 <_ZN15Screen4ViewBaseC1Ev+0x2954>)
 800a0bc:	2161      	movs	r1, #97	@ 0x61
 800a0be:	4803      	ldr	r0, [pc, #12]	@ (800a0cc <_ZN15Screen4ViewBaseC1Ev+0x2958>)
 800a0c0:	f024 fb3c 	bl	802e73c <__assert_func>
 800a0c4:	08030f1c 	.word	0x08030f1c
 800a0c8:	080317e8 	.word	0x080317e8
 800a0cc:	08030f9c 	.word	0x08030f9c
 800a0d0:	080317a8 	.word	0x080317a8

0800a0d4 <__tcf_0>:
 800a0d4:	4b03      	ldr	r3, [pc, #12]	@ (800a0e4 <__tcf_0+0x10>)
 800a0d6:	4a04      	ldr	r2, [pc, #16]	@ (800a0e8 <__tcf_0+0x14>)
 800a0d8:	601a      	str	r2, [r3, #0]
 800a0da:	4a04      	ldr	r2, [pc, #16]	@ (800a0ec <__tcf_0+0x18>)
 800a0dc:	601a      	str	r2, [r3, #0]
 800a0de:	4a04      	ldr	r2, [pc, #16]	@ (800a0f0 <__tcf_0+0x1c>)
 800a0e0:	601a      	str	r2, [r3, #0]
KEEP extern const touchgfx::KerningNode kerning_ariali_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_ariali_40_4bpp();

touchgfx::GeneratedFont& getFont_ariali_40_4bpp()
{
    static touchgfx::GeneratedFont ariali_40_4bpp(glyphs_ariali_40_4bpp, 19, 46, 40, 0, 0, 4, 1, 0, 2, unicodes_ariali_40_4bpp, kerning_ariali_40_4bpp, 63, 0, 0, 0);
 800a0e2:	4770      	bx	lr
 800a0e4:	200053f0 	.word	0x200053f0
 800a0e8:	08030d98 	.word	0x08030d98
 800a0ec:	08033188 	.word	0x08033188
 800a0f0:	08031cd0 	.word	0x08031cd0

0800a0f4 <_Z22getFont_ariali_40_4bppv>:
 800a0f4:	4b1a      	ldr	r3, [pc, #104]	@ (800a160 <_Z22getFont_ariali_40_4bppv+0x6c>)
 800a0f6:	681b      	ldr	r3, [r3, #0]
 800a0f8:	f3bf 8f5b 	dmb	ish
 800a0fc:	f013 0f01 	tst.w	r3, #1
 800a100:	d001      	beq.n	800a106 <_Z22getFont_ariali_40_4bppv+0x12>
    return ariali_40_4bpp;
}
 800a102:	4818      	ldr	r0, [pc, #96]	@ (800a164 <_Z22getFont_ariali_40_4bppv+0x70>)
 800a104:	4770      	bx	lr
{
 800a106:	b500      	push	{lr}
 800a108:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont ariali_40_4bpp(glyphs_ariali_40_4bpp, 19, 46, 40, 0, 0, 4, 1, 0, 2, unicodes_ariali_40_4bpp, kerning_ariali_40_4bpp, 63, 0, 0, 0);
 800a10a:	4815      	ldr	r0, [pc, #84]	@ (800a160 <_Z22getFont_ariali_40_4bppv+0x6c>)
 800a10c:	f023 fbd1 	bl	802d8b2 <__cxa_guard_acquire>
 800a110:	b918      	cbnz	r0, 800a11a <_Z22getFont_ariali_40_4bppv+0x26>
}
 800a112:	4814      	ldr	r0, [pc, #80]	@ (800a164 <_Z22getFont_ariali_40_4bppv+0x70>)
 800a114:	b00f      	add	sp, #60	@ 0x3c
 800a116:	f85d fb04 	ldr.w	pc, [sp], #4
    static touchgfx::GeneratedFont ariali_40_4bpp(glyphs_ariali_40_4bpp, 19, 46, 40, 0, 0, 4, 1, 0, 2, unicodes_ariali_40_4bpp, kerning_ariali_40_4bpp, 63, 0, 0, 0);
 800a11a:	2300      	movs	r3, #0
 800a11c:	930c      	str	r3, [sp, #48]	@ 0x30
 800a11e:	930b      	str	r3, [sp, #44]	@ 0x2c
 800a120:	930a      	str	r3, [sp, #40]	@ 0x28
 800a122:	223f      	movs	r2, #63	@ 0x3f
 800a124:	9209      	str	r2, [sp, #36]	@ 0x24
 800a126:	4a10      	ldr	r2, [pc, #64]	@ (800a168 <_Z22getFont_ariali_40_4bppv+0x74>)
 800a128:	9208      	str	r2, [sp, #32]
 800a12a:	4a10      	ldr	r2, [pc, #64]	@ (800a16c <_Z22getFont_ariali_40_4bppv+0x78>)
 800a12c:	9207      	str	r2, [sp, #28]
 800a12e:	2202      	movs	r2, #2
 800a130:	9206      	str	r2, [sp, #24]
 800a132:	9305      	str	r3, [sp, #20]
 800a134:	2201      	movs	r2, #1
 800a136:	9204      	str	r2, [sp, #16]
 800a138:	2204      	movs	r2, #4
 800a13a:	9203      	str	r2, [sp, #12]
 800a13c:	9302      	str	r3, [sp, #8]
 800a13e:	9301      	str	r3, [sp, #4]
 800a140:	2328      	movs	r3, #40	@ 0x28
 800a142:	9300      	str	r3, [sp, #0]
 800a144:	232e      	movs	r3, #46	@ 0x2e
 800a146:	2213      	movs	r2, #19
 800a148:	4909      	ldr	r1, [pc, #36]	@ (800a170 <_Z22getFont_ariali_40_4bppv+0x7c>)
 800a14a:	4806      	ldr	r0, [pc, #24]	@ (800a164 <_Z22getFont_ariali_40_4bppv+0x70>)
 800a14c:	f7fb f8ac 	bl	80052a8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a150:	4808      	ldr	r0, [pc, #32]	@ (800a174 <_Z22getFont_ariali_40_4bppv+0x80>)
 800a152:	f024 fb11 	bl	802e778 <atexit>
 800a156:	4802      	ldr	r0, [pc, #8]	@ (800a160 <_Z22getFont_ariali_40_4bppv+0x6c>)
 800a158:	f023 fbb7 	bl	802d8ca <__cxa_guard_release>
 800a15c:	e7d9      	b.n	800a112 <_Z22getFont_ariali_40_4bppv+0x1e>
 800a15e:	bf00      	nop
 800a160:	200053ec 	.word	0x200053ec
 800a164:	200053f0 	.word	0x200053f0
 800a168:	080339dc 	.word	0x080339dc
 800a16c:	08033a24 	.word	0x08033a24
 800a170:	9049de30 	.word	0x9049de30
 800a174:	0800a0d5 	.word	0x0800a0d5

0800a178 <__tcf_0>:
 800a178:	4b03      	ldr	r3, [pc, #12]	@ (800a188 <__tcf_0+0x10>)
 800a17a:	4a04      	ldr	r2, [pc, #16]	@ (800a18c <__tcf_0+0x14>)
 800a17c:	601a      	str	r2, [r3, #0]
 800a17e:	4a04      	ldr	r2, [pc, #16]	@ (800a190 <__tcf_0+0x18>)
 800a180:	601a      	str	r2, [r3, #0]
 800a182:	4a04      	ldr	r2, [pc, #16]	@ (800a194 <__tcf_0+0x1c>)
 800a184:	601a      	str	r2, [r3, #0]
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a186:	4770      	bx	lr
 800a188:	20005420 	.word	0x20005420
 800a18c:	08030d98 	.word	0x08030d98
 800a190:	08033188 	.word	0x08033188
 800a194:	08031cd0 	.word	0x08031cd0

0800a198 <_Z23getFont_verdana_10_4bppv>:
 800a198:	4b18      	ldr	r3, [pc, #96]	@ (800a1fc <_Z23getFont_verdana_10_4bppv+0x64>)
 800a19a:	681b      	ldr	r3, [r3, #0]
 800a19c:	f3bf 8f5b 	dmb	ish
 800a1a0:	f013 0f01 	tst.w	r3, #1
 800a1a4:	d001      	beq.n	800a1aa <_Z23getFont_verdana_10_4bppv+0x12>
    return verdana_10_4bpp;
}
 800a1a6:	4816      	ldr	r0, [pc, #88]	@ (800a200 <_Z23getFont_verdana_10_4bppv+0x68>)
 800a1a8:	4770      	bx	lr
{
 800a1aa:	b500      	push	{lr}
 800a1ac:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a1ae:	4813      	ldr	r0, [pc, #76]	@ (800a1fc <_Z23getFont_verdana_10_4bppv+0x64>)
 800a1b0:	f023 fb7f 	bl	802d8b2 <__cxa_guard_acquire>
 800a1b4:	b918      	cbnz	r0, 800a1be <_Z23getFont_verdana_10_4bppv+0x26>
}
 800a1b6:	4812      	ldr	r0, [pc, #72]	@ (800a200 <_Z23getFont_verdana_10_4bppv+0x68>)
 800a1b8:	b00f      	add	sp, #60	@ 0x3c
 800a1ba:	f85d fb04 	ldr.w	pc, [sp], #4
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a1be:	2300      	movs	r3, #0
 800a1c0:	930c      	str	r3, [sp, #48]	@ 0x30
 800a1c2:	930b      	str	r3, [sp, #44]	@ 0x2c
 800a1c4:	930a      	str	r3, [sp, #40]	@ 0x28
 800a1c6:	223f      	movs	r2, #63	@ 0x3f
 800a1c8:	9209      	str	r2, [sp, #36]	@ 0x24
 800a1ca:	4a0e      	ldr	r2, [pc, #56]	@ (800a204 <_Z23getFont_verdana_10_4bppv+0x6c>)
 800a1cc:	9208      	str	r2, [sp, #32]
 800a1ce:	4a0e      	ldr	r2, [pc, #56]	@ (800a208 <_Z23getFont_verdana_10_4bppv+0x70>)
 800a1d0:	9207      	str	r2, [sp, #28]
 800a1d2:	9306      	str	r3, [sp, #24]
 800a1d4:	9305      	str	r3, [sp, #20]
 800a1d6:	2201      	movs	r2, #1
 800a1d8:	9204      	str	r2, [sp, #16]
 800a1da:	2104      	movs	r1, #4
 800a1dc:	9103      	str	r1, [sp, #12]
 800a1de:	9302      	str	r3, [sp, #8]
 800a1e0:	9301      	str	r3, [sp, #4]
 800a1e2:	230a      	movs	r3, #10
 800a1e4:	9300      	str	r3, [sp, #0]
 800a1e6:	4909      	ldr	r1, [pc, #36]	@ (800a20c <_Z23getFont_verdana_10_4bppv+0x74>)
 800a1e8:	4805      	ldr	r0, [pc, #20]	@ (800a200 <_Z23getFont_verdana_10_4bppv+0x68>)
 800a1ea:	f7fb f85d 	bl	80052a8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a1ee:	4808      	ldr	r0, [pc, #32]	@ (800a210 <_Z23getFont_verdana_10_4bppv+0x78>)
 800a1f0:	f024 fac2 	bl	802e778 <atexit>
 800a1f4:	4801      	ldr	r0, [pc, #4]	@ (800a1fc <_Z23getFont_verdana_10_4bppv+0x64>)
 800a1f6:	f023 fb68 	bl	802d8ca <__cxa_guard_release>
 800a1fa:	e7dc      	b.n	800a1b6 <_Z23getFont_verdana_10_4bppv+0x1e>
 800a1fc:	2000541c 	.word	0x2000541c
 800a200:	20005420 	.word	0x20005420
 800a204:	080339ec 	.word	0x080339ec
 800a208:	08033a28 	.word	0x08033a28
 800a20c:	9049df3c 	.word	0x9049df3c
 800a210:	0800a179 	.word	0x0800a179

0800a214 <__tcf_0>:
 800a214:	4b03      	ldr	r3, [pc, #12]	@ (800a224 <__tcf_0+0x10>)
 800a216:	4a04      	ldr	r2, [pc, #16]	@ (800a228 <__tcf_0+0x14>)
 800a218:	601a      	str	r2, [r3, #0]
 800a21a:	4a04      	ldr	r2, [pc, #16]	@ (800a22c <__tcf_0+0x18>)
 800a21c:	601a      	str	r2, [r3, #0]
 800a21e:	4a04      	ldr	r2, [pc, #16]	@ (800a230 <__tcf_0+0x1c>)
 800a220:	601a      	str	r2, [r3, #0]
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 38, 24, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800a222:	4770      	bx	lr
 800a224:	20005450 	.word	0x20005450
 800a228:	08030d98 	.word	0x08030d98
 800a22c:	08033188 	.word	0x08033188
 800a230:	08031cd0 	.word	0x08031cd0

0800a234 <_Z23getFont_verdana_20_4bppv>:
 800a234:	4b19      	ldr	r3, [pc, #100]	@ (800a29c <_Z23getFont_verdana_20_4bppv+0x68>)
 800a236:	681b      	ldr	r3, [r3, #0]
 800a238:	f3bf 8f5b 	dmb	ish
 800a23c:	f013 0f01 	tst.w	r3, #1
 800a240:	d001      	beq.n	800a246 <_Z23getFont_verdana_20_4bppv+0x12>
    return verdana_20_4bpp;
}
 800a242:	4817      	ldr	r0, [pc, #92]	@ (800a2a0 <_Z23getFont_verdana_20_4bppv+0x6c>)
 800a244:	4770      	bx	lr
{
 800a246:	b500      	push	{lr}
 800a248:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 38, 24, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800a24a:	4814      	ldr	r0, [pc, #80]	@ (800a29c <_Z23getFont_verdana_20_4bppv+0x68>)
 800a24c:	f023 fb31 	bl	802d8b2 <__cxa_guard_acquire>
 800a250:	b918      	cbnz	r0, 800a25a <_Z23getFont_verdana_20_4bppv+0x26>
}
 800a252:	4813      	ldr	r0, [pc, #76]	@ (800a2a0 <_Z23getFont_verdana_20_4bppv+0x6c>)
 800a254:	b00f      	add	sp, #60	@ 0x3c
 800a256:	f85d fb04 	ldr.w	pc, [sp], #4
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 38, 24, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800a25a:	2300      	movs	r3, #0
 800a25c:	930c      	str	r3, [sp, #48]	@ 0x30
 800a25e:	930b      	str	r3, [sp, #44]	@ 0x2c
 800a260:	930a      	str	r3, [sp, #40]	@ 0x28
 800a262:	223f      	movs	r2, #63	@ 0x3f
 800a264:	9209      	str	r2, [sp, #36]	@ 0x24
 800a266:	4a0f      	ldr	r2, [pc, #60]	@ (800a2a4 <_Z23getFont_verdana_20_4bppv+0x70>)
 800a268:	9208      	str	r2, [sp, #32]
 800a26a:	4a0f      	ldr	r2, [pc, #60]	@ (800a2a8 <_Z23getFont_verdana_20_4bppv+0x74>)
 800a26c:	9207      	str	r2, [sp, #28]
 800a26e:	9306      	str	r3, [sp, #24]
 800a270:	9305      	str	r3, [sp, #20]
 800a272:	2201      	movs	r2, #1
 800a274:	9204      	str	r2, [sp, #16]
 800a276:	2204      	movs	r2, #4
 800a278:	9203      	str	r2, [sp, #12]
 800a27a:	9302      	str	r3, [sp, #8]
 800a27c:	9301      	str	r3, [sp, #4]
 800a27e:	2314      	movs	r3, #20
 800a280:	9300      	str	r3, [sp, #0]
 800a282:	2318      	movs	r3, #24
 800a284:	2226      	movs	r2, #38	@ 0x26
 800a286:	4909      	ldr	r1, [pc, #36]	@ (800a2ac <_Z23getFont_verdana_20_4bppv+0x78>)
 800a288:	4805      	ldr	r0, [pc, #20]	@ (800a2a0 <_Z23getFont_verdana_20_4bppv+0x6c>)
 800a28a:	f7fb f80d 	bl	80052a8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a28e:	4808      	ldr	r0, [pc, #32]	@ (800a2b0 <_Z23getFont_verdana_20_4bppv+0x7c>)
 800a290:	f024 fa72 	bl	802e778 <atexit>
 800a294:	4801      	ldr	r0, [pc, #4]	@ (800a29c <_Z23getFont_verdana_20_4bppv+0x68>)
 800a296:	f023 fb18 	bl	802d8ca <__cxa_guard_release>
 800a29a:	e7da      	b.n	800a252 <_Z23getFont_verdana_20_4bppv+0x1e>
 800a29c:	2000544c 	.word	0x2000544c
 800a2a0:	20005450 	.word	0x20005450
 800a2a4:	080339f0 	.word	0x080339f0
 800a2a8:	08033a2c 	.word	0x08033a2c
 800a2ac:	9049df4c 	.word	0x9049df4c
 800a2b0:	0800a215 	.word	0x0800a215

0800a2b4 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
    }
 800a2b4:	2000      	movs	r0, #0
 800a2b6:	4770      	bx	lr

0800a2b8 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 800a2b8:	2000      	movs	r0, #0
 800a2ba:	4770      	bx	lr

0800a2bc <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 800a2bc:	2000      	movs	r0, #0
 800a2be:	4770      	bx	lr

0800a2c0 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800a2c0:	b40e      	push	{r1, r2, r3}
 800a2c2:	b500      	push	{lr}
 800a2c4:	b082      	sub	sp, #8
 800a2c6:	ab03      	add	r3, sp, #12
 800a2c8:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800a2cc:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800a2ce:	2100      	movs	r1, #0
 800a2d0:	f011 fc68 	bl	801bba4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800a2d4:	b002      	add	sp, #8
 800a2d6:	f85d eb04 	ldr.w	lr, [sp], #4
 800a2da:	b003      	add	sp, #12
 800a2dc:	4770      	bx	lr

0800a2de <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800a2de:	b40c      	push	{r2, r3}
 800a2e0:	b500      	push	{lr}
 800a2e2:	b083      	sub	sp, #12
 800a2e4:	ab04      	add	r3, sp, #16
 800a2e6:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800a2ea:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800a2ec:	f011 fc5a 	bl	801bba4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800a2f0:	b003      	add	sp, #12
 800a2f2:	f85d eb04 	ldr.w	lr, [sp], #4
 800a2f6:	b002      	add	sp, #8
 800a2f8:	4770      	bx	lr
	...

0800a2fc <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 800a2fc:	b510      	push	{r4, lr}
 800a2fe:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800a300:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 800a302:	b133      	cbz	r3, 800a312 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800a304:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 800a306:	b143      	cbz	r3, 800a31a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x1e>
            return buffer[pos];
 800a308:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800a30a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800a30e:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 800a310:	b94b      	cbnz	r3, 800a326 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2a>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800a312:	4620      	mov	r0, r4
 800a314:	f013 faec 	bl	801d8f0 <_ZN8touchgfx12TextProvider11getNextCharEv>
}
 800a318:	bd10      	pop	{r4, pc}
            assert(used > 0);
 800a31a:	4b1c      	ldr	r3, [pc, #112]	@ (800a38c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
 800a31c:	4a1c      	ldr	r2, [pc, #112]	@ (800a390 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
 800a31e:	21c5      	movs	r1, #197	@ 0xc5
 800a320:	481c      	ldr	r0, [pc, #112]	@ (800a394 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
 800a322:	f024 fa0b 	bl	802e73c <__assert_func>
        substituteGlyphs();
 800a326:	f013 fbe0 	bl	801daea <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800a32a:	8f20      	ldrh	r0, [r4, #56]	@ 0x38
 800a32c:	2801      	cmp	r0, #1
 800a32e:	d91d      	bls.n	800a36c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>
            const uint16_t index = pos + offset;
 800a330:	8ee1      	ldrh	r1, [r4, #54]	@ 0x36
 800a332:	1c4b      	adds	r3, r1, #1
 800a334:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800a336:	2b09      	cmp	r3, #9
 800a338:	d81e      	bhi.n	800a378 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>
 800a33a:	461a      	mov	r2, r3
 800a33c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800a340:	f8b2 c022 	ldrh.w	ip, [r2, #34]	@ 0x22
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800a344:	f640 123f 	movw	r2, #2367	@ 0x93f
 800a348:	4594      	cmp	ip, r2
 800a34a:	d1e2      	bne.n	800a312 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            assert(used > 0);
 800a34c:	b1b8      	cbz	r0, 800a37e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
            return buffer[pos];
 800a34e:	eb04 0241 	add.w	r2, r4, r1, lsl #1
 800a352:	8c52      	ldrh	r2, [r2, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 800a354:	2b09      	cmp	r3, #9
 800a356:	d900      	bls.n	800a35a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5e>
 800a358:	2300      	movs	r3, #0
 800a35a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800a35e:	845a      	strh	r2, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 800a360:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800a364:	f640 133f 	movw	r3, #2367	@ 0x93f
 800a368:	844b      	strh	r3, [r1, #34]	@ 0x22
        }
 800a36a:	e7d2      	b.n	800a312 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            assert(offset < used);
 800a36c:	4b0a      	ldr	r3, [pc, #40]	@ (800a398 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
 800a36e:	4a0b      	ldr	r2, [pc, #44]	@ (800a39c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xa0>)
 800a370:	21cb      	movs	r1, #203	@ 0xcb
 800a372:	4808      	ldr	r0, [pc, #32]	@ (800a394 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
 800a374:	f024 f9e2 	bl	802e73c <__assert_func>
            return buffer[index < size ? index : index - size];
 800a378:	f1a3 020a 	sub.w	r2, r3, #10
 800a37c:	e7de      	b.n	800a33c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x40>
            assert(used > 0);
 800a37e:	4b03      	ldr	r3, [pc, #12]	@ (800a38c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
 800a380:	4a03      	ldr	r2, [pc, #12]	@ (800a390 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
 800a382:	21c5      	movs	r1, #197	@ 0xc5
 800a384:	4803      	ldr	r0, [pc, #12]	@ (800a394 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
 800a386:	f024 f9d9 	bl	802e73c <__assert_func>
 800a38a:	bf00      	nop
 800a38c:	08031ae0 	.word	0x08031ae0
 800a390:	08031aec 	.word	0x08031aec
 800a394:	08031b98 	.word	0x08031b98
 800a398:	08031be4 	.word	0x08031be4
 800a39c:	08031bf4 	.word	0x08031bf4

0800a3a0 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 800a3a0:	b508      	push	{r3, lr}
    fillInputBuffer();
 800a3a2:	f013 fa6c 	bl	801d87e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 800a3a6:	bd08      	pop	{r3, pc}

0800a3a8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800a3a8:	b500      	push	{lr}
 800a3aa:	b087      	sub	sp, #28
 800a3ac:	f10d 0c08 	add.w	ip, sp, #8
 800a3b0:	e88c 0006 	stmia.w	ip, {r1, r2}
 800a3b4:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 800a3b6:	ab0a      	add	r3, sp, #40	@ 0x28
 800a3b8:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800a3ba:	9301      	str	r3, [sp, #4]
 800a3bc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800a3be:	9300      	str	r3, [sp, #0]
 800a3c0:	9b08      	ldr	r3, [sp, #32]
 800a3c2:	4661      	mov	r1, ip
 800a3c4:	f00f ff06 	bl	801a1d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800a3c8:	b007      	add	sp, #28
 800a3ca:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800a3d0 <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800a3d0:	2800      	cmp	r0, #0
 800a3d2:	d129      	bne.n	800a428 <_ZN8touchgfx5Texts11setLanguageEt+0x58>
{
 800a3d4:	b538      	push	{r3, r4, r5, lr}
 800a3d6:	4602      	mov	r2, r0
    {
        if (languagesArray[id] != 0)
 800a3d8:	4b14      	ldr	r3, [pc, #80]	@ (800a42c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 800a3da:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 800a3de:	b1bc      	cbz	r4, 800a410 <_ZN8touchgfx5Texts11setLanguageEt+0x40>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800a3e0:	6821      	ldr	r1, [r4, #0]
 800a3e2:	4421      	add	r1, r4
 800a3e4:	4812      	ldr	r0, [pc, #72]	@ (800a430 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 800a3e6:	6001      	str	r1, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800a3e8:	6861      	ldr	r1, [r4, #4]
 800a3ea:	4421      	add	r1, r4
 800a3ec:	4811      	ldr	r0, [pc, #68]	@ (800a434 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800a3ee:	6001      	str	r1, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800a3f0:	68a1      	ldr	r1, [r4, #8]
 800a3f2:	440c      	add	r4, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800a3f4:	4b10      	ldr	r3, [pc, #64]	@ (800a438 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 800a3f6:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800a3f8:	f000 f852 	bl	800a4a0 <_ZN17TypedTextDatabase8getFontsEv>
 800a3fc:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800a3fe:	f000 f84d 	bl	800a49c <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800a402:	4b0e      	ldr	r3, [pc, #56]	@ (800a43c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800a404:	601c      	str	r4, [r3, #0]
        fonts = f;
 800a406:	4b0e      	ldr	r3, [pc, #56]	@ (800a440 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800a408:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800a40a:	4b0e      	ldr	r3, [pc, #56]	@ (800a444 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800a40c:	8018      	strh	r0, [r3, #0]
    }
}
 800a40e:	bd38      	pop	{r3, r4, r5, pc}
            currentLanguagePtr = texts_all_languages;
 800a410:	4b07      	ldr	r3, [pc, #28]	@ (800a430 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 800a412:	490d      	ldr	r1, [pc, #52]	@ (800a448 <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
 800a414:	6019      	str	r1, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800a416:	4b07      	ldr	r3, [pc, #28]	@ (800a434 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800a418:	490c      	ldr	r1, [pc, #48]	@ (800a44c <_ZN8touchgfx5Texts11setLanguageEt+0x7c>)
 800a41a:	6019      	str	r1, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800a41c:	4b0c      	ldr	r3, [pc, #48]	@ (800a450 <_ZN8touchgfx5Texts11setLanguageEt+0x80>)
 800a41e:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
    if (currentLanguageTypedText)
 800a422:	2c00      	cmp	r4, #0
 800a424:	d1e6      	bne.n	800a3f4 <_ZN8touchgfx5Texts11setLanguageEt+0x24>
 800a426:	e7f2      	b.n	800a40e <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
 800a428:	4770      	bx	lr
 800a42a:	bf00      	nop
 800a42c:	20005488 	.word	0x20005488
 800a430:	20005480 	.word	0x20005480
 800a434:	2000547c 	.word	0x2000547c
 800a438:	20005484 	.word	0x20005484
 800a43c:	2000e464 	.word	0x2000e464
 800a440:	2000e46c 	.word	0x2000e46c
 800a444:	2000e468 	.word	0x2000e468
 800a448:	9049e198 	.word	0x9049e198
 800a44c:	9049e160 	.word	0x9049e160
 800a450:	9049e218 	.word	0x9049e218

0800a454 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800a454:	4b04      	ldr	r3, [pc, #16]	@ (800a468 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800a456:	681b      	ldr	r3, [r3, #0]
 800a458:	4a04      	ldr	r2, [pc, #16]	@ (800a46c <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800a45a:	6812      	ldr	r2, [r2, #0]
 800a45c:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
 800a460:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800a464:	4770      	bx	lr
 800a466:	bf00      	nop
 800a468:	20005480 	.word	0x20005480
 800a46c:	2000547c 	.word	0x2000547c

0800a470 <_Z41__static_initialization_and_destruction_0ii>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800a470:	2801      	cmp	r0, #1
 800a472:	d000      	beq.n	800a476 <_Z41__static_initialization_and_destruction_0ii+0x6>
 800a474:	4770      	bx	lr
 800a476:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800a47a:	4299      	cmp	r1, r3
 800a47c:	d1fa      	bne.n	800a474 <_Z41__static_initialization_and_destruction_0ii+0x4>
 800a47e:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 800a480:	f7ff fed8 	bl	800a234 <_Z23getFont_verdana_20_4bppv>
};
 800a484:	4c04      	ldr	r4, [pc, #16]	@ (800a498 <_Z41__static_initialization_and_destruction_0ii+0x28>)
 800a486:	6020      	str	r0, [r4, #0]
    &(getFont_ariali_40_4bpp()),
 800a488:	f7ff fe34 	bl	800a0f4 <_Z22getFont_ariali_40_4bppv>
};
 800a48c:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 800a48e:	f7ff fe83 	bl	800a198 <_Z23getFont_verdana_10_4bppv>
};
 800a492:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 800a494:	bd10      	pop	{r4, pc}
 800a496:	bf00      	nop
 800a498:	2000548c 	.word	0x2000548c

0800a49c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}
 800a49c:	200e      	movs	r0, #14
 800a49e:	4770      	bx	lr

0800a4a0 <_ZN17TypedTextDatabase8getFontsEv>:
}
 800a4a0:	4800      	ldr	r0, [pc, #0]	@ (800a4a4 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800a4a2:	4770      	bx	lr
 800a4a4:	2000548c 	.word	0x2000548c

0800a4a8 <_GLOBAL__sub_I_touchgfx_fonts>:
} // namespace TypedTextDatabase
 800a4a8:	b508      	push	{r3, lr}
 800a4aa:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800a4ae:	2001      	movs	r0, #1
 800a4b0:	f7ff ffde 	bl	800a470 <_Z41__static_initialization_and_destruction_0ii>
 800a4b4:	bd08      	pop	{r3, pc}

0800a4b6 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
 800a4b6:	b410      	push	{r4}
    pointArray = 0;
 800a4b8:	2400      	movs	r4, #0
 800a4ba:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
 800a4bc:	600c      	str	r4, [r1, #0]
    commandArray = 0;
 800a4be:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
 800a4c0:	601c      	str	r4, [r3, #0]
}
 800a4c2:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a4c6:	4770      	bx	lr

0800a4c8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800a4c8:	b510      	push	{r4, lr}
 800a4ca:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 800a4cc:	f7fa f978 	bl	80047c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800a4d0:	4b01      	ldr	r3, [pc, #4]	@ (800a4d8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800a4d2:	6023      	str	r3, [r4, #0]
{

}
 800a4d4:	4620      	mov	r0, r4
 800a4d6:	bd10      	pop	{r4, pc}
 800a4d8:	080300b0 	.word	0x080300b0

0800a4dc <_ZN5ModelC1Ev>:
extern  float ecg_measure_val;
extern  float ecg_bpm_val;



Model::Model() : modelListener(0)
 800a4dc:	2200      	movs	r2, #0
 800a4de:	6002      	str	r2, [r0, #0]
{

}
 800a4e0:	4770      	bx	lr
	...

0800a4e4 <_ZN5Model4tickEv>:

void Model::tick()
{
 800a4e4:	b538      	push	{r3, r4, r5, lr}
 800a4e6:	4604      	mov	r4, r0
	modelListener->UpdateGraph(ecg_filtered_val);
 800a4e8:	6800      	ldr	r0, [r0, #0]
 800a4ea:	6803      	ldr	r3, [r0, #0]
 800a4ec:	689b      	ldr	r3, [r3, #8]
 800a4ee:	4a12      	ldr	r2, [pc, #72]	@ (800a538 <_ZN5Model4tickEv+0x54>)
 800a4f0:	ed92 0a00 	vldr	s0, [r2]
 800a4f4:	4798      	blx	r3
	modelListener->UpdateGraphRaw(ecg_measure_val);
 800a4f6:	6820      	ldr	r0, [r4, #0]
 800a4f8:	6803      	ldr	r3, [r0, #0]
 800a4fa:	68db      	ldr	r3, [r3, #12]
 800a4fc:	4a0f      	ldr	r2, [pc, #60]	@ (800a53c <_ZN5Model4tickEv+0x58>)
 800a4fe:	ed92 0a00 	vldr	s0, [r2]
 800a502:	4798      	blx	r3
	modelListener->UpdateGraphBPM(ecg_bpm_val*100);
 800a504:	6820      	ldr	r0, [r4, #0]
 800a506:	4d0e      	ldr	r5, [pc, #56]	@ (800a540 <_ZN5Model4tickEv+0x5c>)
 800a508:	ed95 0a00 	vldr	s0, [r5]
 800a50c:	6803      	ldr	r3, [r0, #0]
 800a50e:	691b      	ldr	r3, [r3, #16]
 800a510:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 800a544 <_ZN5Model4tickEv+0x60>
 800a514:	ee20 0a27 	vmul.f32	s0, s0, s15
 800a518:	4798      	blx	r3
	modelListener->UpdateBPMText((int)ecg_bpm_val*100);
 800a51a:	6820      	ldr	r0, [r4, #0]
 800a51c:	edd5 7a00 	vldr	s15, [r5]
 800a520:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a524:	6803      	ldr	r3, [r0, #0]
 800a526:	695b      	ldr	r3, [r3, #20]
 800a528:	2164      	movs	r1, #100	@ 0x64
 800a52a:	ee17 2a90 	vmov	r2, s15
 800a52e:	fb01 f202 	mul.w	r2, r1, r2
 800a532:	4611      	mov	r1, r2
 800a534:	4798      	blx	r3



}
 800a536:	bd38      	pop	{r3, r4, r5, pc}
 800a538:	20000360 	.word	0x20000360
 800a53c:	20000364 	.word	0x20000364
 800a540:	2000035c 	.word	0x2000035c
 800a544:	42c80000 	.word	0x42c80000

0800a548 <_ZN8touchgfx9Presenter8activateEv>:
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
    {
    }
 800a548:	4770      	bx	lr

0800a54a <_ZN8touchgfx9Presenter10deactivateEv>:
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
    {
    }
 800a54a:	4770      	bx	lr

0800a54c <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
    {
 800a54c:	4b01      	ldr	r3, [pc, #4]	@ (800a554 <_ZN8touchgfx9PresenterD1Ev+0x8>)
 800a54e:	6003      	str	r3, [r0, #0]
    }
 800a550:	4770      	bx	lr
 800a552:	bf00      	nop
 800a554:	08031d34 	.word	0x08031d34

0800a558 <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 800a558:	4b01      	ldr	r3, [pc, #4]	@ (800a560 <_ZN13ModelListenerD1Ev+0x8>)
 800a55a:	6003      	str	r3, [r0, #0]
 800a55c:	4770      	bx	lr
 800a55e:	bf00      	nop
 800a560:	08031d4c 	.word	0x08031d4c

0800a564 <_ZN13ModelListener11UpdateGraphEf>:
    }
    virtual void UpdateGraph(float value){}
 800a564:	4770      	bx	lr

0800a566 <_ZN13ModelListener14UpdateGraphRawEf>:
    virtual void UpdateGraphRaw(float value){}
 800a566:	4770      	bx	lr

0800a568 <_ZN13ModelListener14UpdateGraphBPMEf>:
    virtual void UpdateGraphBPM(float value){}
 800a568:	4770      	bx	lr

0800a56a <_ZN13ModelListener13UpdateBPMTextEi>:
    virtual void UpdateBPMText(int bpm) {};
 800a56a:	4770      	bx	lr

0800a56c <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
 800a56c:	4a04      	ldr	r2, [pc, #16]	@ (800a580 <_ZN16Screen1PresenterD1Ev+0x14>)
 800a56e:	6002      	str	r2, [r0, #0]
 800a570:	321c      	adds	r2, #28
 800a572:	6042      	str	r2, [r0, #4]
    virtual ~ModelListener() {}
 800a574:	4a03      	ldr	r2, [pc, #12]	@ (800a584 <_ZN16Screen1PresenterD1Ev+0x18>)
 800a576:	6042      	str	r2, [r0, #4]
    {
 800a578:	4a03      	ldr	r2, [pc, #12]	@ (800a588 <_ZN16Screen1PresenterD1Ev+0x1c>)
 800a57a:	6002      	str	r2, [r0, #0]
 800a57c:	4770      	bx	lr
 800a57e:	bf00      	nop
 800a580:	08031d6c 	.word	0x08031d6c
 800a584:	08031d4c 	.word	0x08031d4c
 800a588:	08031d34 	.word	0x08031d34

0800a58c <_ZThn4_N16Screen1PresenterD1Ev>:
 800a58c:	f1a0 0004 	sub.w	r0, r0, #4
 800a590:	e7ec      	b.n	800a56c <_ZN16Screen1PresenterD1Ev>
 800a592:	bf00      	nop

0800a594 <_ZN16Screen1Presenter8activateEv>:
}

void Screen1Presenter::activate()
{

}
 800a594:	4770      	bx	lr

0800a596 <_ZN16Screen1Presenter10deactivateEv>:

void Screen1Presenter::deactivate()
{

}
 800a596:	4770      	bx	lr

0800a598 <_ZN16Screen1Presenter11UpdateGraphEf>:


void Screen1Presenter::UpdateGraph(float value)
{
 800a598:	b508      	push	{r3, lr}
	view.UpdateGraph(value);
 800a59a:	68c0      	ldr	r0, [r0, #12]
 800a59c:	6803      	ldr	r3, [r0, #0]
 800a59e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a5a0:	4798      	blx	r3

}
 800a5a2:	bd08      	pop	{r3, pc}

0800a5a4 <_ZThn4_N16Screen1Presenter11UpdateGraphEf>:

    virtual void UpdateGraph(float value) override;
 800a5a4:	f1a0 0004 	sub.w	r0, r0, #4
 800a5a8:	f7ff bff6 	b.w	800a598 <_ZN16Screen1Presenter11UpdateGraphEf>

0800a5ac <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 800a5ac:	b510      	push	{r4, lr}
 800a5ae:	4604      	mov	r4, r0
    {
 800a5b0:	4b03      	ldr	r3, [pc, #12]	@ (800a5c0 <_ZN8touchgfx9PresenterD0Ev+0x14>)
 800a5b2:	6003      	str	r3, [r0, #0]
    }
 800a5b4:	2104      	movs	r1, #4
 800a5b6:	f023 f97a 	bl	802d8ae <_ZdlPvj>
 800a5ba:	4620      	mov	r0, r4
 800a5bc:	bd10      	pop	{r4, pc}
 800a5be:	bf00      	nop
 800a5c0:	08031d34 	.word	0x08031d34

0800a5c4 <_ZN13ModelListenerD0Ev>:
 800a5c4:	b510      	push	{r4, lr}
 800a5c6:	4604      	mov	r4, r0
 800a5c8:	4b03      	ldr	r3, [pc, #12]	@ (800a5d8 <_ZN13ModelListenerD0Ev+0x14>)
 800a5ca:	6003      	str	r3, [r0, #0]
 800a5cc:	2108      	movs	r1, #8
 800a5ce:	f023 f96e 	bl	802d8ae <_ZdlPvj>
 800a5d2:	4620      	mov	r0, r4
 800a5d4:	bd10      	pop	{r4, pc}
 800a5d6:	bf00      	nop
 800a5d8:	08031d4c 	.word	0x08031d4c

0800a5dc <_ZN16Screen1PresenterD0Ev>:
    virtual ~Screen1Presenter() {}
 800a5dc:	b510      	push	{r4, lr}
 800a5de:	4604      	mov	r4, r0
 800a5e0:	4b06      	ldr	r3, [pc, #24]	@ (800a5fc <_ZN16Screen1PresenterD0Ev+0x20>)
 800a5e2:	6003      	str	r3, [r0, #0]
 800a5e4:	331c      	adds	r3, #28
 800a5e6:	6043      	str	r3, [r0, #4]
 800a5e8:	4b05      	ldr	r3, [pc, #20]	@ (800a600 <_ZN16Screen1PresenterD0Ev+0x24>)
 800a5ea:	6043      	str	r3, [r0, #4]
    {
 800a5ec:	4b05      	ldr	r3, [pc, #20]	@ (800a604 <_ZN16Screen1PresenterD0Ev+0x28>)
 800a5ee:	6003      	str	r3, [r0, #0]
 800a5f0:	2110      	movs	r1, #16
 800a5f2:	f023 f95c 	bl	802d8ae <_ZdlPvj>
 800a5f6:	4620      	mov	r0, r4
 800a5f8:	bd10      	pop	{r4, pc}
 800a5fa:	bf00      	nop
 800a5fc:	08031d6c 	.word	0x08031d6c
 800a600:	08031d4c 	.word	0x08031d4c
 800a604:	08031d34 	.word	0x08031d34

0800a608 <_ZThn4_N16Screen1PresenterD0Ev>:
 800a608:	f1a0 0004 	sub.w	r0, r0, #4
 800a60c:	e7e6      	b.n	800a5dc <_ZN16Screen1PresenterD0Ev>
 800a60e:	bf00      	nop

0800a610 <_ZN16Screen1PresenterC1ER11Screen1View>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
    {
 800a610:	4a05      	ldr	r2, [pc, #20]	@ (800a628 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 800a612:	6002      	str	r2, [r0, #0]
    ModelListener() : model(0) {}
 800a614:	4a05      	ldr	r2, [pc, #20]	@ (800a62c <_ZN16Screen1PresenterC1ER11Screen1View+0x1c>)
 800a616:	6042      	str	r2, [r0, #4]
 800a618:	2200      	movs	r2, #0
 800a61a:	6082      	str	r2, [r0, #8]
    : view(v)
 800a61c:	4a04      	ldr	r2, [pc, #16]	@ (800a630 <_ZN16Screen1PresenterC1ER11Screen1View+0x20>)
 800a61e:	6002      	str	r2, [r0, #0]
 800a620:	321c      	adds	r2, #28
 800a622:	6042      	str	r2, [r0, #4]
 800a624:	60c1      	str	r1, [r0, #12]
}
 800a626:	4770      	bx	lr
 800a628:	08031d34 	.word	0x08031d34
 800a62c:	08031d4c 	.word	0x08031d4c
 800a630:	08031d6c 	.word	0x08031d6c

0800a634 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 800a634:	4770      	bx	lr
	...

0800a638 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 800a638:	b510      	push	{r4, lr}
 800a63a:	4604      	mov	r4, r0
 800a63c:	4b02      	ldr	r3, [pc, #8]	@ (800a648 <_ZN11Screen1ViewD1Ev+0x10>)
 800a63e:	6003      	str	r3, [r0, #0]
 800a640:	f7fb fc14 	bl	8005e6c <_ZN15Screen1ViewBaseD1Ev>
 800a644:	4620      	mov	r0, r4
 800a646:	bd10      	pop	{r4, pc}
 800a648:	08031da8 	.word	0x08031da8

0800a64c <_ZN11Screen1ViewD0Ev>:
 800a64c:	b510      	push	{r4, lr}
 800a64e:	4604      	mov	r4, r0
 800a650:	4b05      	ldr	r3, [pc, #20]	@ (800a668 <_ZN11Screen1ViewD0Ev+0x1c>)
 800a652:	6003      	str	r3, [r0, #0]
 800a654:	f7fb fc0a 	bl	8005e6c <_ZN15Screen1ViewBaseD1Ev>
 800a658:	f243 4158 	movw	r1, #13400	@ 0x3458
 800a65c:	4620      	mov	r0, r4
 800a65e:	f023 f926 	bl	802d8ae <_ZdlPvj>
 800a662:	4620      	mov	r0, r4
 800a664:	bd10      	pop	{r4, pc}
 800a666:	bf00      	nop
 800a668:	08031da8 	.word	0x08031da8

0800a66c <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 800a66c:	b510      	push	{r4, lr}
 800a66e:	4604      	mov	r4, r0
 800a670:	f7fb fe6a 	bl	8006348 <_ZN15Screen1ViewBaseC1Ev>
 800a674:	4b01      	ldr	r3, [pc, #4]	@ (800a67c <_ZN11Screen1ViewC1Ev+0x10>)
 800a676:	6023      	str	r3, [r4, #0]
}
 800a678:	4620      	mov	r0, r4
 800a67a:	bd10      	pop	{r4, pc}
 800a67c:	08031da8 	.word	0x08031da8

0800a680 <_ZN11Screen1View11setupScreenEv>:
{
 800a680:	b508      	push	{r3, lr}
    Screen1ViewBase::setupScreen();
 800a682:	f7fb fa61 	bl	8005b48 <_ZN15Screen1ViewBase11setupScreenEv>
}
 800a686:	bd08      	pop	{r3, pc}

0800a688 <_ZN11Screen1View11UpdateGraphEf>:

void  Screen1View:: UpdateGraph(float value){
 800a688:	b510      	push	{r4, lr}
 800a68a:	4604      	mov	r4, r0
	dynamicGraph1.addDataPoint(value);
 800a68c:	3098      	adds	r0, #152	@ 0x98
        const float fs = f * (float)scale;
 800a68e:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 800a692:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a696:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 800a69a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800a69e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a6a2:	da18      	bge.n	800a6d6 <_ZN11Screen1View11UpdateGraphEf+0x4e>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800a6a4:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800a6a8:	ee17 3a90 	vmov	r3, s15
 800a6ac:	1e59      	subs	r1, r3, #1
 800a6ae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a6b2:	ee30 0a67 	vsub.f32	s0, s0, s15
 800a6b6:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 800a6ba:	ee30 0a27 	vadd.f32	s0, s0, s15
 800a6be:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800a6c2:	ee10 3a10 	vmov	r3, s0
 800a6c6:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 800a6c8:	f00b fc68 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
	dynamicGraph1.invalidate();
 800a6cc:	f104 0098 	add.w	r0, r4, #152	@ 0x98
 800a6d0:	f011 fb92 	bl	801bdf8 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800a6d4:	bd10      	pop	{r4, pc}
            return (int)(fs + 0.5f);
 800a6d6:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800a6da:	ee30 0a27 	vadd.f32	s0, s0, s15
 800a6de:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800a6e2:	ee17 1a90 	vmov	r1, s15
 800a6e6:	e7ef      	b.n	800a6c8 <_ZN11Screen1View11UpdateGraphEf+0x40>

0800a6e8 <_ZN16Screen2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen2Presenter() {}
 800a6e8:	4a04      	ldr	r2, [pc, #16]	@ (800a6fc <_ZN16Screen2PresenterD1Ev+0x14>)
 800a6ea:	6002      	str	r2, [r0, #0]
 800a6ec:	3218      	adds	r2, #24
 800a6ee:	6042      	str	r2, [r0, #4]
    virtual ~ModelListener() {}
 800a6f0:	4a03      	ldr	r2, [pc, #12]	@ (800a700 <_ZN16Screen2PresenterD1Ev+0x18>)
 800a6f2:	6042      	str	r2, [r0, #4]
    {
 800a6f4:	4a03      	ldr	r2, [pc, #12]	@ (800a704 <_ZN16Screen2PresenterD1Ev+0x1c>)
 800a6f6:	6002      	str	r2, [r0, #0]
 800a6f8:	4770      	bx	lr
 800a6fa:	bf00      	nop
 800a6fc:	08031de0 	.word	0x08031de0
 800a700:	08031d4c 	.word	0x08031d4c
 800a704:	08031d34 	.word	0x08031d34

0800a708 <_ZThn4_N16Screen2PresenterD1Ev>:
 800a708:	f1a0 0004 	sub.w	r0, r0, #4
 800a70c:	e7ec      	b.n	800a6e8 <_ZN16Screen2PresenterD1Ev>
 800a70e:	bf00      	nop

0800a710 <_ZN16Screen2Presenter8activateEv>:
}

void Screen2Presenter::activate()
{

}
 800a710:	4770      	bx	lr

0800a712 <_ZN16Screen2Presenter10deactivateEv>:

void Screen2Presenter::deactivate()
{

}
 800a712:	4770      	bx	lr

0800a714 <_ZN16Screen2PresenterD0Ev>:
 800a714:	b510      	push	{r4, lr}
 800a716:	4604      	mov	r4, r0
 800a718:	4b06      	ldr	r3, [pc, #24]	@ (800a734 <_ZN16Screen2PresenterD0Ev+0x20>)
 800a71a:	6003      	str	r3, [r0, #0]
 800a71c:	3318      	adds	r3, #24
 800a71e:	6043      	str	r3, [r0, #4]
 800a720:	4b05      	ldr	r3, [pc, #20]	@ (800a738 <_ZN16Screen2PresenterD0Ev+0x24>)
 800a722:	6043      	str	r3, [r0, #4]
 800a724:	4b05      	ldr	r3, [pc, #20]	@ (800a73c <_ZN16Screen2PresenterD0Ev+0x28>)
 800a726:	6003      	str	r3, [r0, #0]
 800a728:	2110      	movs	r1, #16
 800a72a:	f023 f8c0 	bl	802d8ae <_ZdlPvj>
 800a72e:	4620      	mov	r0, r4
 800a730:	bd10      	pop	{r4, pc}
 800a732:	bf00      	nop
 800a734:	08031de0 	.word	0x08031de0
 800a738:	08031d4c 	.word	0x08031d4c
 800a73c:	08031d34 	.word	0x08031d34

0800a740 <_ZThn4_N16Screen2PresenterD0Ev>:
 800a740:	f1a0 0004 	sub.w	r0, r0, #4
 800a744:	e7e6      	b.n	800a714 <_ZN16Screen2PresenterD0Ev>
 800a746:	bf00      	nop

0800a748 <_ZN16Screen2PresenterC1ER11Screen2View>:
    {
 800a748:	4a05      	ldr	r2, [pc, #20]	@ (800a760 <_ZN16Screen2PresenterC1ER11Screen2View+0x18>)
 800a74a:	6002      	str	r2, [r0, #0]
    ModelListener() : model(0) {}
 800a74c:	4a05      	ldr	r2, [pc, #20]	@ (800a764 <_ZN16Screen2PresenterC1ER11Screen2View+0x1c>)
 800a74e:	6042      	str	r2, [r0, #4]
 800a750:	2200      	movs	r2, #0
 800a752:	6082      	str	r2, [r0, #8]
    : view(v)
 800a754:	4a04      	ldr	r2, [pc, #16]	@ (800a768 <_ZN16Screen2PresenterC1ER11Screen2View+0x20>)
 800a756:	6002      	str	r2, [r0, #0]
 800a758:	3218      	adds	r2, #24
 800a75a:	6042      	str	r2, [r0, #4]
 800a75c:	60c1      	str	r1, [r0, #12]
}
 800a75e:	4770      	bx	lr
 800a760:	08031d34 	.word	0x08031d34
 800a764:	08031d4c 	.word	0x08031d4c
 800a768:	08031de0 	.word	0x08031de0

0800a76c <_ZN11Screen2View14tearDownScreenEv>:
}

void Screen2View::tearDownScreen()
{
    Screen2ViewBase::tearDownScreen();
}
 800a76c:	4770      	bx	lr
	...

0800a770 <_ZN8touchgfx8CallbackI11Screen2ViewRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800a770:	4a02      	ldr	r2, [pc, #8]	@ (800a77c <_ZN8touchgfx8CallbackI11Screen2ViewRKNS_14AbstractButtonEvvED1Ev+0xc>)
 800a772:	6002      	str	r2, [r0, #0]
    }
 800a774:	4a02      	ldr	r2, [pc, #8]	@ (800a780 <_ZN8touchgfx8CallbackI11Screen2ViewRKNS_14AbstractButtonEvvED1Ev+0x10>)
 800a776:	6002      	str	r2, [r0, #0]
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800a778:	4770      	bx	lr
 800a77a:	bf00      	nop
 800a77c:	08031e18 	.word	0x08031e18
 800a780:	080312e8 	.word	0x080312e8

0800a784 <_ZN8touchgfx8CallbackI11Screen2ViewRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800a784:	b510      	push	{r4, lr}
 800a786:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800a788:	6844      	ldr	r4, [r0, #4]
 800a78a:	68c2      	ldr	r2, [r0, #12]
 800a78c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800a790:	f012 0f01 	tst.w	r2, #1
 800a794:	d102      	bne.n	800a79c <_ZN8touchgfx8CallbackI11Screen2ViewRKNS_14AbstractButtonEvvE7executeES4_+0x18>
 800a796:	689b      	ldr	r3, [r3, #8]
 800a798:	4798      	blx	r3
    }
 800a79a:	bd10      	pop	{r4, pc}
 800a79c:	ea4f 0c62 	mov.w	ip, r2, asr #1
        (pobject->*pmemfun)(t1);
 800a7a0:	f854 200c 	ldr.w	r2, [r4, ip]
 800a7a4:	689b      	ldr	r3, [r3, #8]
 800a7a6:	58d3      	ldr	r3, [r2, r3]
 800a7a8:	e7f6      	b.n	800a798 <_ZN8touchgfx8CallbackI11Screen2ViewRKNS_14AbstractButtonEvvE7executeES4_+0x14>

0800a7aa <_ZNK8touchgfx8CallbackI11Screen2ViewRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800a7aa:	6843      	ldr	r3, [r0, #4]
 800a7ac:	b14b      	cbz	r3, 800a7c2 <_ZNK8touchgfx8CallbackI11Screen2ViewRKNS_14AbstractButtonEvvE7isValidEv+0x18>
 800a7ae:	6883      	ldr	r3, [r0, #8]
 800a7b0:	b10b      	cbz	r3, 800a7b6 <_ZNK8touchgfx8CallbackI11Screen2ViewRKNS_14AbstractButtonEvvE7isValidEv+0xc>
 800a7b2:	2001      	movs	r0, #1
 800a7b4:	4770      	bx	lr
 800a7b6:	68c3      	ldr	r3, [r0, #12]
 800a7b8:	f013 0f01 	tst.w	r3, #1
 800a7bc:	d003      	beq.n	800a7c6 <_ZNK8touchgfx8CallbackI11Screen2ViewRKNS_14AbstractButtonEvvE7isValidEv+0x1c>
 800a7be:	2001      	movs	r0, #1
 800a7c0:	4770      	bx	lr
 800a7c2:	2000      	movs	r0, #0
 800a7c4:	4770      	bx	lr
 800a7c6:	2000      	movs	r0, #0
    }
 800a7c8:	4770      	bx	lr
	...

0800a7cc <_ZN8touchgfx8CallbackI11Screen2ViewRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800a7cc:	b510      	push	{r4, lr}
 800a7ce:	4604      	mov	r4, r0
 800a7d0:	4b04      	ldr	r3, [pc, #16]	@ (800a7e4 <_ZN8touchgfx8CallbackI11Screen2ViewRKNS_14AbstractButtonEvvED0Ev+0x18>)
 800a7d2:	6003      	str	r3, [r0, #0]
    }
 800a7d4:	4b04      	ldr	r3, [pc, #16]	@ (800a7e8 <_ZN8touchgfx8CallbackI11Screen2ViewRKNS_14AbstractButtonEvvED0Ev+0x1c>)
 800a7d6:	6003      	str	r3, [r0, #0]
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800a7d8:	2110      	movs	r1, #16
 800a7da:	f023 f868 	bl	802d8ae <_ZdlPvj>
 800a7de:	4620      	mov	r0, r4
 800a7e0:	bd10      	pop	{r4, pc}
 800a7e2:	bf00      	nop
 800a7e4:	08031e18 	.word	0x08031e18
 800a7e8:	080312e8 	.word	0x080312e8

0800a7ec <_ZN11Screen2ViewD1Ev>:

class Screen2View : public Screen2ViewBase
{
public:
    Screen2View();
    virtual ~Screen2View() {}
 800a7ec:	b510      	push	{r4, lr}
 800a7ee:	4604      	mov	r4, r0
 800a7f0:	4b05      	ldr	r3, [pc, #20]	@ (800a808 <_ZN11Screen2ViewD1Ev+0x1c>)
 800a7f2:	6003      	str	r3, [r0, #0]
 800a7f4:	4b05      	ldr	r3, [pc, #20]	@ (800a80c <_ZN11Screen2ViewD1Ev+0x20>)
 800a7f6:	f8c0 31ac 	str.w	r3, [r0, #428]	@ 0x1ac
    }
 800a7fa:	4b05      	ldr	r3, [pc, #20]	@ (800a810 <_ZN11Screen2ViewD1Ev+0x24>)
 800a7fc:	f8c0 31ac 	str.w	r3, [r0, #428]	@ 0x1ac
 800a800:	f7fb ff62 	bl	80066c8 <_ZN15Screen2ViewBaseD1Ev>
 800a804:	4620      	mov	r0, r4
 800a806:	bd10      	pop	{r4, pc}
 800a808:	08031e30 	.word	0x08031e30
 800a80c:	08031e18 	.word	0x08031e18
 800a810:	080312e8 	.word	0x080312e8

0800a814 <_ZN11Screen2ViewD0Ev>:
 800a814:	b510      	push	{r4, lr}
 800a816:	4604      	mov	r4, r0
 800a818:	4b08      	ldr	r3, [pc, #32]	@ (800a83c <_ZN11Screen2ViewD0Ev+0x28>)
 800a81a:	6003      	str	r3, [r0, #0]
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800a81c:	4b08      	ldr	r3, [pc, #32]	@ (800a840 <_ZN11Screen2ViewD0Ev+0x2c>)
 800a81e:	f8c0 31ac 	str.w	r3, [r0, #428]	@ 0x1ac
    }
 800a822:	4b08      	ldr	r3, [pc, #32]	@ (800a844 <_ZN11Screen2ViewD0Ev+0x30>)
 800a824:	f8c0 31ac 	str.w	r3, [r0, #428]	@ 0x1ac
 800a828:	f7fb ff4e 	bl	80066c8 <_ZN15Screen2ViewBaseD1Ev>
 800a82c:	f44f 71de 	mov.w	r1, #444	@ 0x1bc
 800a830:	4620      	mov	r0, r4
 800a832:	f023 f83c 	bl	802d8ae <_ZdlPvj>
 800a836:	4620      	mov	r0, r4
 800a838:	bd10      	pop	{r4, pc}
 800a83a:	bf00      	nop
 800a83c:	08031e30 	.word	0x08031e30
 800a840:	08031e18 	.word	0x08031e18
 800a844:	080312e8 	.word	0x080312e8

0800a848 <_ZN11Screen2ViewC1Ev>:
Screen2View::Screen2View()
 800a848:	b510      	push	{r4, lr}
 800a84a:	4604      	mov	r4, r0
 800a84c:	f7fc f82a 	bl	80068a4 <_ZN15Screen2ViewBaseC1Ev>
 800a850:	4b08      	ldr	r3, [pc, #32]	@ (800a874 <_ZN11Screen2ViewC1Ev+0x2c>)
 800a852:	6023      	str	r3, [r4, #0]
class GenericCallback<T1, void, void>
 800a854:	4b08      	ldr	r3, [pc, #32]	@ (800a878 <_ZN11Screen2ViewC1Ev+0x30>)
 800a856:	f8c4 31ac 	str.w	r3, [r4, #428]	@ 0x1ac
        : pobject(0), pmemfun(0)
 800a85a:	4b08      	ldr	r3, [pc, #32]	@ (800a87c <_ZN11Screen2ViewC1Ev+0x34>)
 800a85c:	f8c4 31ac 	str.w	r3, [r4, #428]	@ 0x1ac
 800a860:	2300      	movs	r3, #0
 800a862:	f8c4 31b0 	str.w	r3, [r4, #432]	@ 0x1b0
 800a866:	f8c4 31b4 	str.w	r3, [r4, #436]	@ 0x1b4
 800a86a:	f8c4 31b8 	str.w	r3, [r4, #440]	@ 0x1b8
}
 800a86e:	4620      	mov	r0, r4
 800a870:	bd10      	pop	{r4, pc}
 800a872:	bf00      	nop
 800a874:	08031e30 	.word	0x08031e30
 800a878:	080312e8 	.word	0x080312e8
 800a87c:	08031e18 	.word	0x08031e18

0800a880 <_ZN11Screen2View11setupScreenEv>:
{
 800a880:	b508      	push	{r3, lr}
    Screen2ViewBase::setupScreen();
 800a882:	f7fb ff8d 	bl	80067a0 <_ZN15Screen2ViewBase11setupScreenEv>
}
 800a886:	bd08      	pop	{r3, pc}

0800a888 <_ZN16Screen3PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen3Presenter() {}
 800a888:	4a04      	ldr	r2, [pc, #16]	@ (800a89c <_ZN16Screen3PresenterD1Ev+0x14>)
 800a88a:	6002      	str	r2, [r0, #0]
 800a88c:	3224      	adds	r2, #36	@ 0x24
 800a88e:	6042      	str	r2, [r0, #4]
    virtual ~ModelListener() {}
 800a890:	4a03      	ldr	r2, [pc, #12]	@ (800a8a0 <_ZN16Screen3PresenterD1Ev+0x18>)
 800a892:	6042      	str	r2, [r0, #4]
    {
 800a894:	4a03      	ldr	r2, [pc, #12]	@ (800a8a4 <_ZN16Screen3PresenterD1Ev+0x1c>)
 800a896:	6002      	str	r2, [r0, #0]
 800a898:	4770      	bx	lr
 800a89a:	bf00      	nop
 800a89c:	08031e64 	.word	0x08031e64
 800a8a0:	08031d4c 	.word	0x08031d4c
 800a8a4:	08031d34 	.word	0x08031d34

0800a8a8 <_ZThn4_N16Screen3PresenterD1Ev>:
 800a8a8:	f1a0 0004 	sub.w	r0, r0, #4
 800a8ac:	e7ec      	b.n	800a888 <_ZN16Screen3PresenterD1Ev>
 800a8ae:	bf00      	nop

0800a8b0 <_ZN16Screen3Presenter8activateEv>:
{

}

void Screen3Presenter::activate()
{
 800a8b0:	b508      	push	{r3, lr}
    Presenter::activate();
    activateBuzzer();
 800a8b2:	6803      	ldr	r3, [r0, #0]
 800a8b4:	695b      	ldr	r3, [r3, #20]
 800a8b6:	4798      	blx	r3
}
 800a8b8:	bd08      	pop	{r3, pc}

0800a8ba <_ZN16Screen3Presenter10deactivateEv>:

void Screen3Presenter::deactivate()
{
 800a8ba:	b508      	push	{r3, lr}
    deactivateBuzzer();
 800a8bc:	6803      	ldr	r3, [r0, #0]
 800a8be:	699b      	ldr	r3, [r3, #24]
 800a8c0:	4798      	blx	r3
    Presenter::deactivate();
}
 800a8c2:	bd08      	pop	{r3, pc}

0800a8c4 <_ZN16Screen3Presenter14UpdateGraphRawEf>:


void Screen3Presenter::UpdateGraphRaw(float value)
{
 800a8c4:	b508      	push	{r3, lr}
	view.UpdateGraphRaw(value);
 800a8c6:	68c0      	ldr	r0, [r0, #12]
 800a8c8:	6803      	ldr	r3, [r0, #0]
 800a8ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a8cc:	4798      	blx	r3

}
 800a8ce:	bd08      	pop	{r3, pc}

0800a8d0 <_ZThn4_N16Screen3Presenter14UpdateGraphRawEf>:

    virtual void UpdateGraphRaw(float value) override;
 800a8d0:	f1a0 0004 	sub.w	r0, r0, #4
 800a8d4:	f7ff bff6 	b.w	800a8c4 <_ZN16Screen3Presenter14UpdateGraphRawEf>

0800a8d8 <_ZN16Screen3PresenterD0Ev>:
    virtual ~Screen3Presenter() {}
 800a8d8:	b510      	push	{r4, lr}
 800a8da:	4604      	mov	r4, r0
 800a8dc:	4b06      	ldr	r3, [pc, #24]	@ (800a8f8 <_ZN16Screen3PresenterD0Ev+0x20>)
 800a8de:	6003      	str	r3, [r0, #0]
 800a8e0:	3324      	adds	r3, #36	@ 0x24
 800a8e2:	6043      	str	r3, [r0, #4]
 800a8e4:	4b05      	ldr	r3, [pc, #20]	@ (800a8fc <_ZN16Screen3PresenterD0Ev+0x24>)
 800a8e6:	6043      	str	r3, [r0, #4]
 800a8e8:	4b05      	ldr	r3, [pc, #20]	@ (800a900 <_ZN16Screen3PresenterD0Ev+0x28>)
 800a8ea:	6003      	str	r3, [r0, #0]
 800a8ec:	2110      	movs	r1, #16
 800a8ee:	f022 ffde 	bl	802d8ae <_ZdlPvj>
 800a8f2:	4620      	mov	r0, r4
 800a8f4:	bd10      	pop	{r4, pc}
 800a8f6:	bf00      	nop
 800a8f8:	08031e64 	.word	0x08031e64
 800a8fc:	08031d4c 	.word	0x08031d4c
 800a900:	08031d34 	.word	0x08031d34

0800a904 <_ZThn4_N16Screen3PresenterD0Ev>:
 800a904:	f1a0 0004 	sub.w	r0, r0, #4
 800a908:	e7e6      	b.n	800a8d8 <_ZN16Screen3PresenterD0Ev>
 800a90a:	bf00      	nop

0800a90c <_ZN16Screen3Presenter14activateBuzzerEv>:


void Screen3Presenter::activateBuzzer()
{
 800a90c:	b508      	push	{r3, lr}

    buzzer_enable.addToQueue(1.0);
 800a90e:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 800a912:	4803      	ldr	r0, [pc, #12]	@ (800a920 <_ZN16Screen3Presenter14activateBuzzerEv+0x14>)
 800a914:	f7f7 f82c 	bl	8001970 <_ZN5input10addToQueueEf>
    sdw1.setInputs();
 800a918:	4802      	ldr	r0, [pc, #8]	@ (800a924 <_ZN16Screen3Presenter14activateBuzzerEv+0x18>)
 800a91a:	f7f6 fc2b 	bl	8001174 <_ZN3SDW9setInputsEv>


}
 800a91e:	bd08      	pop	{r3, pc}
 800a920:	20000398 	.word	0x20000398
 800a924:	200003a8 	.word	0x200003a8

0800a928 <_ZN16Screen3Presenter16deactivateBuzzerEv>:

void Screen3Presenter::deactivateBuzzer()
{
 800a928:	b508      	push	{r3, lr}

	   buzzer_enable.addToQueue(0.0);
 800a92a:	ed9f 0a04 	vldr	s0, [pc, #16]	@ 800a93c <_ZN16Screen3Presenter16deactivateBuzzerEv+0x14>
 800a92e:	4804      	ldr	r0, [pc, #16]	@ (800a940 <_ZN16Screen3Presenter16deactivateBuzzerEv+0x18>)
 800a930:	f7f7 f81e 	bl	8001970 <_ZN5input10addToQueueEf>
	   sdw1.setInputs();
 800a934:	4803      	ldr	r0, [pc, #12]	@ (800a944 <_ZN16Screen3Presenter16deactivateBuzzerEv+0x1c>)
 800a936:	f7f6 fc1d 	bl	8001174 <_ZN3SDW9setInputsEv>

}
 800a93a:	bd08      	pop	{r3, pc}
 800a93c:	00000000 	.word	0x00000000
 800a940:	20000398 	.word	0x20000398
 800a944:	200003a8 	.word	0x200003a8

0800a948 <_ZN16Screen3PresenterC1ER11Screen3View>:
    {
 800a948:	4a05      	ldr	r2, [pc, #20]	@ (800a960 <_ZN16Screen3PresenterC1ER11Screen3View+0x18>)
 800a94a:	6002      	str	r2, [r0, #0]
    ModelListener() : model(0) {}
 800a94c:	4a05      	ldr	r2, [pc, #20]	@ (800a964 <_ZN16Screen3PresenterC1ER11Screen3View+0x1c>)
 800a94e:	6042      	str	r2, [r0, #4]
 800a950:	2200      	movs	r2, #0
 800a952:	6082      	str	r2, [r0, #8]
    : view(v)
 800a954:	4a04      	ldr	r2, [pc, #16]	@ (800a968 <_ZN16Screen3PresenterC1ER11Screen3View+0x20>)
 800a956:	6002      	str	r2, [r0, #0]
 800a958:	3224      	adds	r2, #36	@ 0x24
 800a95a:	6042      	str	r2, [r0, #4]
 800a95c:	60c1      	str	r1, [r0, #12]
}
 800a95e:	4770      	bx	lr
 800a960:	08031d34 	.word	0x08031d34
 800a964:	08031d4c 	.word	0x08031d4c
 800a968:	08031e64 	.word	0x08031e64

0800a96c <_ZN11Screen3View14tearDownScreenEv>:
void Screen3View::tearDownScreen()
{

	Screen3ViewBase::tearDownScreen();

}
 800a96c:	4770      	bx	lr

0800a96e <_ZN11Screen3View14UpdateGraphRawEf>:


void  Screen3View:: UpdateGraphRaw(float value){
 800a96e:	b508      	push	{r3, lr}
 800a970:	4603      	mov	r3, r0



	dynamicGraph1.addDataPoint(value);
 800a972:	3098      	adds	r0, #152	@ 0x98
        return float2scaled(f, yScale);
 800a974:	edd3 7a33 	vldr	s15, [r3, #204]	@ 0xcc
        const float fs = f * (float)scale;
 800a978:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a97c:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 800a980:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800a984:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a988:	da14      	bge.n	800a9b4 <_ZN11Screen3View14UpdateGraphRawEf+0x46>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800a98a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800a98e:	ee17 3a90 	vmov	r3, s15
 800a992:	1e59      	subs	r1, r3, #1
 800a994:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a998:	ee30 0a67 	vsub.f32	s0, s0, s15
 800a99c:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 800a9a0:	ee30 0a27 	vadd.f32	s0, s0, s15
 800a9a4:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800a9a8:	ee10 3a10 	vmov	r3, s0
 800a9ac:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 800a9ae:	f00b faf5 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
}
 800a9b2:	bd08      	pop	{r3, pc}
            return (int)(fs + 0.5f);
 800a9b4:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800a9b8:	ee30 0a27 	vadd.f32	s0, s0, s15
 800a9bc:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800a9c0:	ee17 1a90 	vmov	r1, s15
 800a9c4:	e7f3      	b.n	800a9ae <_ZN11Screen3View14UpdateGraphRawEf+0x40>
	...

0800a9c8 <_ZN11Screen3ViewD1Ev>:

class Screen3View : public Screen3ViewBase
{
public:
    Screen3View();
    virtual ~Screen3View() {}
 800a9c8:	b510      	push	{r4, lr}
 800a9ca:	4604      	mov	r4, r0
 800a9cc:	4b02      	ldr	r3, [pc, #8]	@ (800a9d8 <_ZN11Screen3ViewD1Ev+0x10>)
 800a9ce:	6003      	str	r3, [r0, #0]
 800a9d0:	f7fc f932 	bl	8006c38 <_ZN15Screen3ViewBaseD1Ev>
 800a9d4:	4620      	mov	r0, r4
 800a9d6:	bd10      	pop	{r4, pc}
 800a9d8:	08031ea8 	.word	0x08031ea8

0800a9dc <_ZN11Screen3ViewD0Ev>:
 800a9dc:	b510      	push	{r4, lr}
 800a9de:	4604      	mov	r4, r0
 800a9e0:	4b05      	ldr	r3, [pc, #20]	@ (800a9f8 <_ZN11Screen3ViewD0Ev+0x1c>)
 800a9e2:	6003      	str	r3, [r0, #0]
 800a9e4:	f7fc f928 	bl	8006c38 <_ZN15Screen3ViewBaseD1Ev>
 800a9e8:	f643 01b8 	movw	r1, #14520	@ 0x38b8
 800a9ec:	4620      	mov	r0, r4
 800a9ee:	f022 ff5e 	bl	802d8ae <_ZdlPvj>
 800a9f2:	4620      	mov	r0, r4
 800a9f4:	bd10      	pop	{r4, pc}
 800a9f6:	bf00      	nop
 800a9f8:	08031ea8 	.word	0x08031ea8

0800a9fc <_ZN11Screen3ViewC1Ev>:
Screen3View::Screen3View()
 800a9fc:	b510      	push	{r4, lr}
 800a9fe:	4604      	mov	r4, r0
 800aa00:	f7fc fa2a 	bl	8006e58 <_ZN15Screen3ViewBaseC1Ev>
 800aa04:	4b01      	ldr	r3, [pc, #4]	@ (800aa0c <_ZN11Screen3ViewC1Ev+0x10>)
 800aa06:	6023      	str	r3, [r4, #0]
}
 800aa08:	4620      	mov	r0, r4
 800aa0a:	bd10      	pop	{r4, pc}
 800aa0c:	08031ea8 	.word	0x08031ea8

0800aa10 <_ZN11Screen3View11setupScreenEv>:
{
 800aa10:	b508      	push	{r3, lr}
    Screen3ViewBase::setupScreen();
 800aa12:	f7fc f85f 	bl	8006ad4 <_ZN15Screen3ViewBase11setupScreenEv>
}
 800aa16:	bd08      	pop	{r3, pc}

0800aa18 <_ZN16Screen4PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen4Presenter() {}
 800aa18:	4a04      	ldr	r2, [pc, #16]	@ (800aa2c <_ZN16Screen4PresenterD1Ev+0x14>)
 800aa1a:	6002      	str	r2, [r0, #0]
 800aa1c:	3220      	adds	r2, #32
 800aa1e:	6042      	str	r2, [r0, #4]
    virtual ~ModelListener() {}
 800aa20:	4a03      	ldr	r2, [pc, #12]	@ (800aa30 <_ZN16Screen4PresenterD1Ev+0x18>)
 800aa22:	6042      	str	r2, [r0, #4]
    {
 800aa24:	4a03      	ldr	r2, [pc, #12]	@ (800aa34 <_ZN16Screen4PresenterD1Ev+0x1c>)
 800aa26:	6002      	str	r2, [r0, #0]
 800aa28:	4770      	bx	lr
 800aa2a:	bf00      	nop
 800aa2c:	08031ee0 	.word	0x08031ee0
 800aa30:	08031d4c 	.word	0x08031d4c
 800aa34:	08031d34 	.word	0x08031d34

0800aa38 <_ZThn4_N16Screen4PresenterD1Ev>:
 800aa38:	f1a0 0004 	sub.w	r0, r0, #4
 800aa3c:	e7ec      	b.n	800aa18 <_ZN16Screen4PresenterD1Ev>
 800aa3e:	bf00      	nop

0800aa40 <_ZN16Screen4Presenter8activateEv>:
}

void Screen4Presenter::activate()
{

}
 800aa40:	4770      	bx	lr

0800aa42 <_ZN16Screen4Presenter10deactivateEv>:

void Screen4Presenter::deactivate()
{

}
 800aa42:	4770      	bx	lr

0800aa44 <_ZN16Screen4Presenter14UpdateGraphBPMEf>:

void Screen4Presenter::UpdateGraphBPM(float value)
{
 800aa44:	b508      	push	{r3, lr}
	view.UpdateGraphBPM(value);
 800aa46:	68c0      	ldr	r0, [r0, #12]
 800aa48:	6803      	ldr	r3, [r0, #0]
 800aa4a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800aa4c:	4798      	blx	r3

}
 800aa4e:	bd08      	pop	{r3, pc}

0800aa50 <_ZThn4_N16Screen4Presenter14UpdateGraphBPMEf>:

    virtual void UpdateGraphBPM(float value) override;
 800aa50:	f1a0 0004 	sub.w	r0, r0, #4
 800aa54:	f7ff bff6 	b.w	800aa44 <_ZN16Screen4Presenter14UpdateGraphBPMEf>

0800aa58 <_ZN16Screen4Presenter13UpdateBPMTextEi>:

void Screen4Presenter::UpdateBPMText(int bpm)
{
 800aa58:	b508      	push	{r3, lr}
    view.UpdateBPMText(bpm);
 800aa5a:	68c0      	ldr	r0, [r0, #12]
 800aa5c:	6803      	ldr	r3, [r0, #0]
 800aa5e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800aa60:	4798      	blx	r3
}
 800aa62:	bd08      	pop	{r3, pc}

0800aa64 <_ZThn4_N16Screen4Presenter13UpdateBPMTextEi>:
    virtual void UpdateBPMText(int bpm);
 800aa64:	f1a0 0004 	sub.w	r0, r0, #4
 800aa68:	f7ff bff6 	b.w	800aa58 <_ZN16Screen4Presenter13UpdateBPMTextEi>

0800aa6c <_ZN16Screen4PresenterD0Ev>:
    virtual ~Screen4Presenter() {}
 800aa6c:	b510      	push	{r4, lr}
 800aa6e:	4604      	mov	r4, r0
 800aa70:	4b06      	ldr	r3, [pc, #24]	@ (800aa8c <_ZN16Screen4PresenterD0Ev+0x20>)
 800aa72:	6003      	str	r3, [r0, #0]
 800aa74:	3320      	adds	r3, #32
 800aa76:	6043      	str	r3, [r0, #4]
 800aa78:	4b05      	ldr	r3, [pc, #20]	@ (800aa90 <_ZN16Screen4PresenterD0Ev+0x24>)
 800aa7a:	6043      	str	r3, [r0, #4]
 800aa7c:	4b05      	ldr	r3, [pc, #20]	@ (800aa94 <_ZN16Screen4PresenterD0Ev+0x28>)
 800aa7e:	6003      	str	r3, [r0, #0]
 800aa80:	2110      	movs	r1, #16
 800aa82:	f022 ff14 	bl	802d8ae <_ZdlPvj>
 800aa86:	4620      	mov	r0, r4
 800aa88:	bd10      	pop	{r4, pc}
 800aa8a:	bf00      	nop
 800aa8c:	08031ee0 	.word	0x08031ee0
 800aa90:	08031d4c 	.word	0x08031d4c
 800aa94:	08031d34 	.word	0x08031d34

0800aa98 <_ZThn4_N16Screen4PresenterD0Ev>:
 800aa98:	f1a0 0004 	sub.w	r0, r0, #4
 800aa9c:	e7e6      	b.n	800aa6c <_ZN16Screen4PresenterD0Ev>
 800aa9e:	bf00      	nop

0800aaa0 <_ZN16Screen4PresenterC1ER11Screen4View>:
    {
 800aaa0:	4a05      	ldr	r2, [pc, #20]	@ (800aab8 <_ZN16Screen4PresenterC1ER11Screen4View+0x18>)
 800aaa2:	6002      	str	r2, [r0, #0]
    ModelListener() : model(0) {}
 800aaa4:	4a05      	ldr	r2, [pc, #20]	@ (800aabc <_ZN16Screen4PresenterC1ER11Screen4View+0x1c>)
 800aaa6:	6042      	str	r2, [r0, #4]
 800aaa8:	2200      	movs	r2, #0
 800aaaa:	6082      	str	r2, [r0, #8]
    : view(v)
 800aaac:	4a04      	ldr	r2, [pc, #16]	@ (800aac0 <_ZN16Screen4PresenterC1ER11Screen4View+0x20>)
 800aaae:	6002      	str	r2, [r0, #0]
 800aab0:	3220      	adds	r2, #32
 800aab2:	6042      	str	r2, [r0, #4]
 800aab4:	60c1      	str	r1, [r0, #12]
}
 800aab6:	4770      	bx	lr
 800aab8:	08031d34 	.word	0x08031d34
 800aabc:	08031d4c 	.word	0x08031d4c
 800aac0:	08031ee0 	.word	0x08031ee0

0800aac4 <_ZN11Screen4View14tearDownScreenEv>:
}

void Screen4View::tearDownScreen()
{
    Screen4ViewBase::tearDownScreen();
}
 800aac4:	4770      	bx	lr
	...

0800aac8 <_ZN11Screen4ViewD1Ev>:

class Screen4View : public Screen4ViewBase
{
public:
    Screen4View();
    virtual ~Screen4View() {}
 800aac8:	b510      	push	{r4, lr}
 800aaca:	4604      	mov	r4, r0
 800aacc:	4b02      	ldr	r3, [pc, #8]	@ (800aad8 <_ZN11Screen4ViewD1Ev+0x10>)
 800aace:	6003      	str	r3, [r0, #0]
 800aad0:	f7fc fcf4 	bl	80074bc <_ZN15Screen4ViewBaseD1Ev>
 800aad4:	4620      	mov	r0, r4
 800aad6:	bd10      	pop	{r4, pc}
 800aad8:	08031f24 	.word	0x08031f24

0800aadc <_ZN11Screen4ViewD0Ev>:
 800aadc:	b510      	push	{r4, lr}
 800aade:	4604      	mov	r4, r0
 800aae0:	4b05      	ldr	r3, [pc, #20]	@ (800aaf8 <_ZN11Screen4ViewD0Ev+0x1c>)
 800aae2:	6003      	str	r3, [r0, #0]
 800aae4:	f7fc fcea 	bl	80074bc <_ZN15Screen4ViewBaseD1Ev>
 800aae8:	f243 71a0 	movw	r1, #14240	@ 0x37a0
 800aaec:	4620      	mov	r0, r4
 800aaee:	f022 fede 	bl	802d8ae <_ZdlPvj>
 800aaf2:	4620      	mov	r0, r4
 800aaf4:	bd10      	pop	{r4, pc}
 800aaf6:	bf00      	nop
 800aaf8:	08031f24 	.word	0x08031f24

0800aafc <_ZN11Screen4ViewC1Ev>:
Screen4View::Screen4View()
 800aafc:	b510      	push	{r4, lr}
 800aafe:	4604      	mov	r4, r0
 800ab00:	f7fc fe38 	bl	8007774 <_ZN15Screen4ViewBaseC1Ev>
 800ab04:	4b01      	ldr	r3, [pc, #4]	@ (800ab0c <_ZN11Screen4ViewC1Ev+0x10>)
 800ab06:	6023      	str	r3, [r4, #0]
}
 800ab08:	4620      	mov	r0, r4
 800ab0a:	bd10      	pop	{r4, pc}
 800ab0c:	08031f24 	.word	0x08031f24

0800ab10 <_ZN11Screen4View11setupScreenEv>:
{
 800ab10:	b538      	push	{r3, r4, r5, lr}
 800ab12:	4604      	mov	r4, r0
    Screen4ViewBase::setupScreen();
 800ab14:	f7fc fbb0 	bl	8007278 <_ZN15Screen4ViewBase11setupScreenEv>
    Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", 0); // Initialize with 0
 800ab18:	f504 5558 	add.w	r5, r4, #13824	@ 0x3600
 800ab1c:	3510      	adds	r5, #16
 800ab1e:	2300      	movs	r3, #0
 800ab20:	4a06      	ldr	r2, [pc, #24]	@ (800ab3c <_ZN11Screen4View11setupScreenEv+0x2c>)
 800ab22:	f44f 71c8 	mov.w	r1, #400	@ 0x190
 800ab26:	4628      	mov	r0, r5
 800ab28:	f013 fd88 	bl	801e63c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800ab2c:	f8c4 5560 	str.w	r5, [r4, #1376]	@ 0x560
    textArea1.invalidate();
 800ab30:	f504 60a3 	add.w	r0, r4, #1304	@ 0x518
 800ab34:	f011 f960 	bl	801bdf8 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800ab38:	bd38      	pop	{r3, r4, r5, pc}
 800ab3a:	bf00      	nop
 800ab3c:	08031f18 	.word	0x08031f18

0800ab40 <_ZN11Screen4View14UpdateGraphBPMEf>:

void  Screen4View:: UpdateGraphBPM(float value){
 800ab40:	b510      	push	{r4, lr}
 800ab42:	4604      	mov	r4, r0
	dynamicGraph1.addDataPoint(value);
 800ab44:	3098      	adds	r0, #152	@ 0x98
        const float fs = f * (float)scale;
 800ab46:	edd4 7a33 	vldr	s15, [r4, #204]	@ 0xcc
 800ab4a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ab4e:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 800ab52:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800ab56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ab5a:	da18      	bge.n	800ab8e <_ZN11Screen4View14UpdateGraphBPMEf+0x4e>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800ab5c:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800ab60:	ee17 3a90 	vmov	r3, s15
 800ab64:	1e59      	subs	r1, r3, #1
 800ab66:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ab6a:	ee30 0a67 	vsub.f32	s0, s0, s15
 800ab6e:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 800ab72:	ee30 0a27 	vadd.f32	s0, s0, s15
 800ab76:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800ab7a:	ee10 3a10 	vmov	r3, s0
 800ab7e:	4419      	add	r1, r3
        return addDataPointScaled(float2scaledY(y));
 800ab80:	f00b fa0c 	bl	8015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
	dynamicGraph1.invalidate();
 800ab84:	f104 0098 	add.w	r0, r4, #152	@ 0x98
 800ab88:	f011 f936 	bl	801bdf8 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800ab8c:	bd10      	pop	{r4, pc}
            return (int)(fs + 0.5f);
 800ab8e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800ab92:	ee30 0a27 	vadd.f32	s0, s0, s15
 800ab96:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800ab9a:	ee17 1a90 	vmov	r1, s15
 800ab9e:	e7ef      	b.n	800ab80 <_ZN11Screen4View14UpdateGraphBPMEf+0x40>

0800aba0 <_ZN11Screen4View13UpdateBPMTextEi>:


void Screen4View::UpdateBPMText(int bpm)
{
 800aba0:	b538      	push	{r3, r4, r5, lr}
 800aba2:	4604      	mov	r4, r0
 800aba4:	460b      	mov	r3, r1
    Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d", bpm);
 800aba6:	f500 5558 	add.w	r5, r0, #13824	@ 0x3600
 800abaa:	3510      	adds	r5, #16
 800abac:	4a06      	ldr	r2, [pc, #24]	@ (800abc8 <_ZN11Screen4View13UpdateBPMTextEi+0x28>)
 800abae:	f44f 71c8 	mov.w	r1, #400	@ 0x190
 800abb2:	4628      	mov	r0, r5
 800abb4:	f013 fd42 	bl	801e63c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800abb8:	f8c4 5560 	str.w	r5, [r4, #1376]	@ 0x560

    textArea1.setWildcard(textArea1Buffer);
    textArea1.invalidate();
 800abbc:	f504 60a3 	add.w	r0, r4, #1304	@ 0x518
 800abc0:	f011 f91a 	bl	801bdf8 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800abc4:	bd38      	pop	{r3, r4, r5, pc}
 800abc6:	bf00      	nop
 800abc8:	08031f18 	.word	0x08031f18

0800abcc <NT35510_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t NT35510_Init(uint32_t ColorCoding, uint32_t orientation)
{
 800abcc:	b530      	push	{r4, r5, lr}
 800abce:	4604      	mov	r4, r0
 800abd0:	b0b1      	sub	sp, #196	@ 0xc4
  NT35510_IO_Delay(120);
 800abd2:	2078      	movs	r0, #120	@ 0x78
{
 800abd4:	460d      	mov	r5, r1
  NT35510_IO_Delay(120);
 800abd6:	f7f9 f8a9 	bl	8003d2c <NT35510_IO_Delay>

/* ************************************************************************** */
/* Proprietary Initialization                                                 */
/* ************************************************************************** */
  const uint8_t nt35510_reg[]   = {0x55, 0xAA, 0x52, 0x08, 0x01, 0xF0};
 800abda:	4aa6      	ldr	r2, [pc, #664]	@ (800ae74 <NT35510_Init+0x2a8>)
  const uint8_t nt35510_reg1[]  = {0x03, 0x03, 0x03, 0xB0};
  const uint8_t nt35510_reg2[]  = {0x46, 0x46, 0x46, 0xB6};
  const uint8_t nt35510_reg3[]  = {0x03, 0x03, 0x03, 0xB1};
  const uint8_t nt35510_reg4[]  = {0x36, 0x36, 0x36, 0xB7};
 800abdc:	f8df c2c4 	ldr.w	ip, [pc, #708]	@ 800aea4 <NT35510_Init+0x2d8>
  const uint8_t nt35510_reg5[]  = {0x00, 0x00, 0x02, 0xB2};
  const uint8_t nt35510_reg6[]  = {0x26, 0x26, 0x26, 0xB8};
 800abe0:	f8df e2c4 	ldr.w	lr, [pc, #708]	@ 800aea8 <NT35510_Init+0x2dc>
  const uint8_t nt35510_reg9[]  = {0x36, 0x36, 0x36, 0xB9};
  const uint8_t nt35510_reg10[] = {0x08, 0x08, 0x08, 0xB5};
  const uint8_t nt35510_reg12[] = {0x26, 0x26, 0x26, 0xBA};
  const uint8_t nt35510_reg13[] = {0x00, 0x80, 0x00, 0xBC};
  const uint8_t nt35510_reg14[] = {0x00, 0x80, 0x00, 0xBD};
  const uint8_t nt35510_reg15[] = {0x00, 0x50, 0xBE};
 800abe4:	4ba4      	ldr	r3, [pc, #656]	@ (800ae78 <NT35510_Init+0x2ac>)
  const uint8_t nt35510_reg[]   = {0x55, 0xAA, 0x52, 0x08, 0x01, 0xF0};
 800abe6:	e892 0003 	ldmia.w	r2, {r0, r1}
 800abea:	902c      	str	r0, [sp, #176]	@ 0xb0
 800abec:	f8ad 10b4 	strh.w	r1, [sp, #180]	@ 0xb4
  const uint8_t nt35510_reg2[]  = {0x46, 0x46, 0x46, 0xB6};
 800abf0:	48a2      	ldr	r0, [pc, #648]	@ (800ae7c <NT35510_Init+0x2b0>)
 800abf2:	49a3      	ldr	r1, [pc, #652]	@ (800ae80 <NT35510_Init+0x2b4>)
 800abf4:	e9cd 0114 	strd	r0, r1, [sp, #80]	@ 0x50
  const uint8_t nt35510_reg4[]  = {0x36, 0x36, 0x36, 0xB7};
 800abf8:	49a2      	ldr	r1, [pc, #648]	@ (800ae84 <NT35510_Init+0x2b8>)
  const uint8_t nt35510_reg9[]  = {0x36, 0x36, 0x36, 0xB9};
 800abfa:	48a3      	ldr	r0, [pc, #652]	@ (800ae88 <NT35510_Init+0x2bc>)
  const uint8_t nt35510_reg4[]  = {0x36, 0x36, 0x36, 0xB7};
 800abfc:	e9cd c116 	strd	ip, r1, [sp, #88]	@ 0x58
  const uint8_t nt35510_reg6[]  = {0x26, 0x26, 0x26, 0xB8};
 800ac00:	49a2      	ldr	r1, [pc, #648]	@ (800ae8c <NT35510_Init+0x2c0>)
  const uint8_t nt35510_reg12[] = {0x26, 0x26, 0x26, 0xBA};
 800ac02:	f8df c2a8 	ldr.w	ip, [pc, #680]	@ 800aeac <NT35510_Init+0x2e0>
  const uint8_t nt35510_reg6[]  = {0x26, 0x26, 0x26, 0xB8};
 800ac06:	e9cd e118 	strd	lr, r1, [sp, #96]	@ 0x60
  const uint8_t nt35510_reg7[]  = {0xBF, 0x01};
 800ac0a:	f240 11bf 	movw	r1, #447	@ 0x1bf
 800ac0e:	f8ad 1004 	strh.w	r1, [sp, #4]
  const uint8_t nt35510_reg9[]  = {0x36, 0x36, 0x36, 0xB9};
 800ac12:	499f      	ldr	r1, [pc, #636]	@ (800ae90 <NT35510_Init+0x2c4>)
  const uint8_t nt35510_reg15[] = {0x00, 0x50, 0xBE};
 800ac14:	461a      	mov	r2, r3
  const uint8_t nt35510_reg9[]  = {0x36, 0x36, 0x36, 0xB9};
 800ac16:	e9cd 011a 	strd	r0, r1, [sp, #104]	@ 0x68
  const uint8_t nt35510_reg12[] = {0x26, 0x26, 0x26, 0xBA};
 800ac1a:	499e      	ldr	r1, [pc, #632]	@ (800ae94 <NT35510_Init+0x2c8>)
  const uint8_t nt35510_reg15[] = {0x00, 0x50, 0xBE};
 800ac1c:	f852 0b04 	ldr.w	r0, [r2], #4
 800ac20:	f8ad 0044 	strh.w	r0, [sp, #68]	@ 0x44
  const uint8_t nt35510_reg12[] = {0x26, 0x26, 0x26, 0xBA};
 800ac24:	e9cd c11c 	strd	ip, r1, [sp, #112]	@ 0x70
  const uint8_t nt35510_reg13[] = {0x00, 0x80, 0x00, 0xBC};
 800ac28:	499b      	ldr	r1, [pc, #620]	@ (800ae98 <NT35510_Init+0x2cc>)
 800ac2a:	911e      	str	r1, [sp, #120]	@ 0x78
  const uint8_t nt35510_reg15[] = {0x00, 0x50, 0xBE};
 800ac2c:	0c00      	lsrs	r0, r0, #16
  const uint8_t nt35510_reg14[] = {0x00, 0x80, 0x00, 0xBD};
 800ac2e:	f101 7180 	add.w	r1, r1, #16777216	@ 0x1000000
 800ac32:	911f      	str	r1, [sp, #124]	@ 0x7c
  const uint8_t nt35510_reg15[] = {0x00, 0x50, 0xBE};
 800ac34:	f88d 0046 	strb.w	r0, [sp, #70]	@ 0x46
  const uint8_t nt35510_reg16[] = {0x55, 0xAA, 0x52, 0x08, 0x00, 0xF0};
 800ac38:	e892 0003 	ldmia.w	r2, {r0, r1}
  const uint8_t nt35510_reg17[] = {0xFC, 0x00, 0xB1};
 800ac3c:	68da      	ldr	r2, [r3, #12]
 800ac3e:	f8ad 2048 	strh.w	r2, [sp, #72]	@ 0x48
 800ac42:	0c12      	lsrs	r2, r2, #16
 800ac44:	f88d 204a 	strb.w	r2, [sp, #74]	@ 0x4a
  const uint8_t nt35510_reg18[] = {0xB6, 0x03};
 800ac48:	f240 32b6 	movw	r2, #950	@ 0x3b6
 800ac4c:	f8ad 2008 	strh.w	r2, [sp, #8]
  const uint8_t nt35510_reg19[] = {0xB5, 0x50};
 800ac50:	f245 02b5 	movw	r2, #20661	@ 0x50b5
 800ac54:	f8ad 200c 	strh.w	r2, [sp, #12]
  const uint8_t nt35510_reg20[] = {0x00, 0x00, 0xB7};
 800ac58:	691a      	ldr	r2, [r3, #16]
 800ac5a:	f8ad 204c 	strh.w	r2, [sp, #76]	@ 0x4c
 800ac5e:	0c12      	lsrs	r2, r2, #16
 800ac60:	f88d 204e 	strb.w	r2, [sp, #78]	@ 0x4e
  const uint8_t nt35510_reg21[] = {0x01, 0x02, 0x02, 0x02, 0xB8};
 800ac64:	4a8d      	ldr	r2, [pc, #564]	@ (800ae9c <NT35510_Init+0x2d0>)
  const uint8_t nt35510_reg16[] = {0x55, 0xAA, 0x52, 0x08, 0x00, 0xF0};
 800ac66:	902e      	str	r0, [sp, #184]	@ 0xb8
 800ac68:	f8ad 10bc 	strh.w	r1, [sp, #188]	@ 0xbc
  const uint8_t nt35510_reg21[] = {0x01, 0x02, 0x02, 0x02, 0xB8};
 800ac6c:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ac70:	f88d 108c 	strb.w	r1, [sp, #140]	@ 0x8c
  const uint8_t nt35510_reg22[] = {0x00, 0x00, 0x00, 0xBC};
  const uint8_t nt35510_reg23[] = {0x03, 0x00, 0x00, 0xCC};
 800ac74:	498a      	ldr	r1, [pc, #552]	@ (800aea0 <NT35510_Init+0x2d4>)
  const uint8_t nt35510_reg21[] = {0x01, 0x02, 0x02, 0x02, 0xB8};
 800ac76:	9022      	str	r0, [sp, #136]	@ 0x88
  const uint8_t nt35510_reg22[] = {0x00, 0x00, 0x00, 0xBC};
 800ac78:	f04f 403c 	mov.w	r0, #3154116608	@ 0xbc000000
  const uint8_t nt35510_reg23[] = {0x03, 0x00, 0x00, 0xCC};
 800ac7c:	e9cd 0120 	strd	r0, r1, [sp, #128]	@ 0x80
  const uint8_t nt35510_reg24[] = {0xBA, 0x01};
 800ac80:	f44f 71dd 	mov.w	r1, #442	@ 0x1ba
  const uint8_t nt35510_madctl_portrait[] = {NT35510_CMD_MADCTL ,0x00};
  const uint8_t nt35510_caset_portrait[] = {0x00, 0x00, 0x01, 0xDF ,NT35510_CMD_CASET};
 800ac84:	f103 0214 	add.w	r2, r3, #20
  const uint8_t nt35510_reg24[] = {0xBA, 0x01};
 800ac88:	f8ad 1010 	strh.w	r1, [sp, #16]
  const uint8_t nt35510_madctl_portrait[] = {NT35510_CMD_MADCTL ,0x00};
 800ac8c:	2136      	movs	r1, #54	@ 0x36
 800ac8e:	f8ad 1014 	strh.w	r1, [sp, #20]
  const uint8_t nt35510_caset_portrait[] = {0x00, 0x00, 0x01, 0xDF ,NT35510_CMD_CASET};
 800ac92:	e892 0003 	ldmia.w	r2, {r0, r1}
  const uint8_t nt35510_raset_portrait[] = {0x00, 0x00, 0x03, 0x1F ,NT35510_CMD_RASET};
 800ac96:	f103 021c 	add.w	r2, r3, #28
  const uint8_t nt35510_caset_portrait[] = {0x00, 0x00, 0x01, 0xDF ,NT35510_CMD_CASET};
 800ac9a:	9024      	str	r0, [sp, #144]	@ 0x90
 800ac9c:	f88d 1094 	strb.w	r1, [sp, #148]	@ 0x94
  const uint8_t nt35510_raset_portrait[] = {0x00, 0x00, 0x03, 0x1F ,NT35510_CMD_RASET};
 800aca0:	e892 0003 	ldmia.w	r2, {r0, r1}
  const uint8_t nt35510_madctl_landscape[] = {NT35510_CMD_MADCTL, 0x60};
  const uint8_t nt35510_caset_landscape[] = {0x00, 0x00, 0x03, 0x1F ,NT35510_CMD_CASET};
 800aca4:	f103 0224 	add.w	r2, r3, #36	@ 0x24
  const uint8_t nt35510_raset_portrait[] = {0x00, 0x00, 0x03, 0x1F ,NT35510_CMD_RASET};
 800aca8:	f88d 109c 	strb.w	r1, [sp, #156]	@ 0x9c
  const uint8_t nt35510_madctl_landscape[] = {NT35510_CMD_MADCTL, 0x60};
 800acac:	f246 0136 	movw	r1, #24630	@ 0x6036
  const uint8_t nt35510_raset_portrait[] = {0x00, 0x00, 0x03, 0x1F ,NT35510_CMD_RASET};
 800acb0:	9026      	str	r0, [sp, #152]	@ 0x98
  const uint8_t nt35510_madctl_landscape[] = {NT35510_CMD_MADCTL, 0x60};
 800acb2:	f8ad 1018 	strh.w	r1, [sp, #24]
  const uint8_t nt35510_caset_landscape[] = {0x00, 0x00, 0x03, 0x1F ,NT35510_CMD_CASET};
 800acb6:	e892 0003 	ldmia.w	r2, {r0, r1}
  const uint8_t nt35510_raset_landscape[] = {0x00, 0x00, 0x01, 0xDF ,NT35510_CMD_RASET};
 800acba:	332c      	adds	r3, #44	@ 0x2c
  const uint8_t nt35510_caset_landscape[] = {0x00, 0x00, 0x03, 0x1F ,NT35510_CMD_CASET};
 800acbc:	9028      	str	r0, [sp, #160]	@ 0xa0
 800acbe:	f88d 10a4 	strb.w	r1, [sp, #164]	@ 0xa4
  const uint8_t nt35510_raset_landscape[] = {0x00, 0x00, 0x01, 0xDF ,NT35510_CMD_RASET};
 800acc2:	e893 0003 	ldmia.w	r3, {r0, r1}
  const uint8_t nt35510_reg26[] = {NT35510_CMD_TEEON, 0x00};  /* Tear on */
 800acc6:	2335      	movs	r3, #53	@ 0x35
 800acc8:	f8ad 301c 	strh.w	r3, [sp, #28]
  const uint8_t nt35510_reg27[] = {NT35510_CMD_SLPOUT, 0x00}; /* Sleep out */
 800accc:	2311      	movs	r3, #17
 800acce:	f8ad 3020 	strh.w	r3, [sp, #32]
  const uint8_t nt35510_reg30[] = {NT35510_CMD_DISPON, 0x00};
 800acd2:	2329      	movs	r3, #41	@ 0x29
 800acd4:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24

  const uint8_t nt35510_reg31[] = {NT35510_CMD_WRDISBV, 0x7F};
 800acd8:	f647 7351 	movw	r3, #32593	@ 0x7f51
 800acdc:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
  const uint8_t nt35510_reg32[] = {NT35510_CMD_WRCTRLD, 0x2C};
 800ace0:	f642 4353 	movw	r3, #11347	@ 0x2c53
 800ace4:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
  const uint8_t nt35510_reg33[] = {NT35510_CMD_WRCABC, 0x02};
 800ace8:	f240 2355 	movw	r3, #597	@ 0x255
 800acec:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
  const uint8_t nt35510_reg34[] = {NT35510_CMD_WRCABCMB, 0xFF};
 800acf0:	f64f 735e 	movw	r3, #65374	@ 0xff5e
 800acf4:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
  const uint8_t nt35510_reg35[] = {NT35510_CMD_RAMWR, 0x00};
 800acf8:	232c      	movs	r3, #44	@ 0x2c
  const uint8_t nt35510_raset_landscape[] = {0x00, 0x00, 0x01, 0xDF ,NT35510_CMD_RASET};
 800acfa:	902a      	str	r0, [sp, #168]	@ 0xa8
 800acfc:	f88d 10ac 	strb.w	r1, [sp, #172]	@ 0xac
  const uint8_t nt35510_reg35[] = {NT35510_CMD_RAMWR, 0x00};
 800ad00:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
  const uint8_t nt35510_reg36[] = {NT35510_CMD_COLMOD, NT35510_COLMOD_RGB565};
 800ad04:	f245 533a 	movw	r3, #21818	@ 0x553a
  const uint8_t nt35510_reg37[] = {NT35510_CMD_COLMOD, NT35510_COLMOD_RGB888};

  DSI_IO_WriteCmd(5, (uint8_t *)nt35510_reg); /* LV2:  Page 1 enable */
 800ad08:	2005      	movs	r0, #5
 800ad0a:	a92c      	add	r1, sp, #176	@ 0xb0
  const uint8_t nt35510_reg36[] = {NT35510_CMD_COLMOD, NT35510_COLMOD_RGB565};
 800ad0c:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
  const uint8_t nt35510_reg37[] = {NT35510_CMD_COLMOD, NT35510_COLMOD_RGB888};
 800ad10:	f247 733a 	movw	r3, #30522	@ 0x773a
 800ad14:	f8ad 3040 	strh.w	r3, [sp, #64]	@ 0x40
  DSI_IO_WriteCmd(5, (uint8_t *)nt35510_reg); /* LV2:  Page 1 enable */
 800ad18:	f7f9 f80a 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg1);/* AVDD: 5.2V */
 800ad1c:	a914      	add	r1, sp, #80	@ 0x50
 800ad1e:	2003      	movs	r0, #3
 800ad20:	f7f9 f806 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg2);/* AVDD: Ratio */
 800ad24:	a915      	add	r1, sp, #84	@ 0x54
 800ad26:	2003      	movs	r0, #3
 800ad28:	f7f9 f802 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg3);/* AVEE: -5.2V */
 800ad2c:	a916      	add	r1, sp, #88	@ 0x58
 800ad2e:	2003      	movs	r0, #3
 800ad30:	f7f8 fffe 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg4);/* AVEE: Ratio */
 800ad34:	a917      	add	r1, sp, #92	@ 0x5c
 800ad36:	2003      	movs	r0, #3
 800ad38:	f7f8 fffa 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg5);/* VCL: -2.5V */
 800ad3c:	a918      	add	r1, sp, #96	@ 0x60
 800ad3e:	2003      	movs	r0, #3
 800ad40:	f7f8 fff6 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg6);/* VCL: Ratio */
 800ad44:	a919      	add	r1, sp, #100	@ 0x64
 800ad46:	2003      	movs	r0, #3
 800ad48:	f7f8 fff2 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg7);/* VGH: 15V (Free Pump) */
 800ad4c:	a901      	add	r1, sp, #4
 800ad4e:	2001      	movs	r0, #1
 800ad50:	f7f8 ffee 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg8);
 800ad54:	a91a      	add	r1, sp, #104	@ 0x68
 800ad56:	2003      	movs	r0, #3
 800ad58:	f7f8 ffea 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg9);/* VGH: Ratio */
 800ad5c:	a91b      	add	r1, sp, #108	@ 0x6c
 800ad5e:	2003      	movs	r0, #3
 800ad60:	f7f8 ffe6 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg10);/* VGL_REG: -10V */
 800ad64:	a91c      	add	r1, sp, #112	@ 0x70
 800ad66:	2003      	movs	r0, #3
 800ad68:	f7f8 ffe2 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg12);/* VGLX: Ratio */
 800ad6c:	a91d      	add	r1, sp, #116	@ 0x74
 800ad6e:	2003      	movs	r0, #3
 800ad70:	f7f8 ffde 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg13);/* VGMP/VGSP: 4.5V/0V */
 800ad74:	a91e      	add	r1, sp, #120	@ 0x78
 800ad76:	2003      	movs	r0, #3
 800ad78:	f7f8 ffda 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg14);/* VGMN/VGSN:-4.5V/0V */
 800ad7c:	a91f      	add	r1, sp, #124	@ 0x7c
 800ad7e:	2003      	movs	r0, #3
 800ad80:	f7f8 ffd6 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(2, (uint8_t *)nt35510_reg15);/* VCOM: -1.325V */
 800ad84:	a911      	add	r1, sp, #68	@ 0x44
 800ad86:	2002      	movs	r0, #2
 800ad88:	f7f8 ffd2 	bl	8003d30 <DSI_IO_WriteCmd>

/* ************************************************************************** */
/* Proprietary DCS Initialization                                             */
/* ************************************************************************** */
  DSI_IO_WriteCmd(5, (uint8_t *)nt35510_reg16);/* LV2: Page 0 enable */
 800ad8c:	a92e      	add	r1, sp, #184	@ 0xb8
 800ad8e:	2005      	movs	r0, #5
 800ad90:	f7f8 ffce 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(2, (uint8_t *)nt35510_reg17);/* Display control */
 800ad94:	a912      	add	r1, sp, #72	@ 0x48
 800ad96:	2002      	movs	r0, #2
 800ad98:	f7f8 ffca 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg18);/* Src hold time */
 800ad9c:	a902      	add	r1, sp, #8
 800ad9e:	2001      	movs	r0, #1
 800ada0:	f7f8 ffc6 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg19);
 800ada4:	a903      	add	r1, sp, #12
 800ada6:	2001      	movs	r0, #1
 800ada8:	f7f8 ffc2 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(2, (uint8_t *)nt35510_reg20);/* Gate EQ control */
 800adac:	a913      	add	r1, sp, #76	@ 0x4c
 800adae:	2002      	movs	r0, #2
 800adb0:	f7f8 ffbe 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(4, (uint8_t *)nt35510_reg21);/* Src EQ control(Mode2) */
 800adb4:	a922      	add	r1, sp, #136	@ 0x88
 800adb6:	2004      	movs	r0, #4
 800adb8:	f7f8 ffba 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg22);/* Inv. mode(2-dot) */
 800adbc:	a920      	add	r1, sp, #128	@ 0x80
 800adbe:	2003      	movs	r0, #3
 800adc0:	f7f8 ffb6 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg23);
 800adc4:	a921      	add	r1, sp, #132	@ 0x84
 800adc6:	2003      	movs	r0, #3
 800adc8:	f7f8 ffb2 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg24);
 800adcc:	a904      	add	r1, sp, #16
 800adce:	2001      	movs	r0, #1
 800add0:	f7f8 ffae 	bl	8003d30 <DSI_IO_WriteCmd>
  /* Tear on */
  DSI_IO_WriteCmd(0, (uint8_t *)nt35510_reg26);
 800add4:	a907      	add	r1, sp, #28
 800add6:	2000      	movs	r0, #0
 800add8:	f7f8 ffaa 	bl	8003d30 <DSI_IO_WriteCmd>
  /* Set Pixel color format to RGB888 */
  DSI_IO_WriteCmd(0, (uint8_t *)nt35510_reg37);
 800addc:	2000      	movs	r0, #0
 800adde:	a910      	add	r1, sp, #64	@ 0x40
 800ade0:	f7f8 ffa6 	bl	8003d30 <DSI_IO_WriteCmd>
/* ************************************************************************** */
/* Standard DCS Initialization                                                */
/* ************************************************************************** */

  /* Add a delay, otherwise MADCTL not taken */
  NT35510_IO_Delay(200);
 800ade4:	20c8      	movs	r0, #200	@ 0xc8
 800ade6:	f7f8 ffa1 	bl	8003d2c <NT35510_IO_Delay>

  /* Configure orientation */
  if(orientation == NT35510_ORIENTATION_PORTRAIT)
 800adea:	2d00      	cmp	r5, #0
 800adec:	d134      	bne.n	800ae58 <NT35510_Init+0x28c>
  {
    DSI_IO_WriteCmd(1, (uint8_t *)nt35510_madctl_portrait);
 800adee:	a905      	add	r1, sp, #20
 800adf0:	2001      	movs	r0, #1
 800adf2:	f7f8 ff9d 	bl	8003d30 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_caset_portrait);
 800adf6:	a924      	add	r1, sp, #144	@ 0x90
 800adf8:	2004      	movs	r0, #4
 800adfa:	f7f8 ff99 	bl	8003d30 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_raset_portrait);
 800adfe:	a926      	add	r1, sp, #152	@ 0x98
 800ae00:	2004      	movs	r0, #4
 800ae02:	f7f8 ff95 	bl	8003d30 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd(1, (uint8_t *)nt35510_madctl_landscape);
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_caset_landscape);
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_raset_landscape);
  }

  DSI_IO_WriteCmd(0, (uint8_t *)nt35510_reg27);
 800ae06:	a908      	add	r1, sp, #32
 800ae08:	2000      	movs	r0, #0
 800ae0a:	f7f8 ff91 	bl	8003d30 <DSI_IO_WriteCmd>
  /* Wait for sleep out exit */
  NT35510_IO_Delay(120);
 800ae0e:	2078      	movs	r0, #120	@ 0x78
 800ae10:	f7f8 ff8c 	bl	8003d2c <NT35510_IO_Delay>

  switch(ColorCoding)
 800ae14:	2c02      	cmp	r4, #2
  {
    case NT35510_FORMAT_RBG565 :
      /* Set Pixel color format to RGB565 */
      DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg36);
 800ae16:	bf0c      	ite	eq
 800ae18:	a90f      	addeq	r1, sp, #60	@ 0x3c
      break;
    case NT35510_FORMAT_RGB888 :
      /* Set Pixel color format to RGB888 */
      DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg37);
 800ae1a:	a910      	addne	r1, sp, #64	@ 0x40
 800ae1c:	2001      	movs	r0, #1
 800ae1e:	f7f8 ff87 	bl	8003d30 <DSI_IO_WriteCmd>
      break;
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg31);
 800ae22:	a90a      	add	r1, sp, #40	@ 0x28
 800ae24:	2001      	movs	r0, #1
 800ae26:	f7f8 ff83 	bl	8003d30 <DSI_IO_WriteCmd>
  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg32);
 800ae2a:	a90b      	add	r1, sp, #44	@ 0x2c
 800ae2c:	2001      	movs	r0, #1
 800ae2e:	f7f8 ff7f 	bl	8003d30 <DSI_IO_WriteCmd>
  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg33);
 800ae32:	a90c      	add	r1, sp, #48	@ 0x30
 800ae34:	2001      	movs	r0, #1
 800ae36:	f7f8 ff7b 	bl	8003d30 <DSI_IO_WriteCmd>
  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg34);
 800ae3a:	a90d      	add	r1, sp, #52	@ 0x34
 800ae3c:	2001      	movs	r0, #1
 800ae3e:	f7f8 ff77 	bl	8003d30 <DSI_IO_WriteCmd>
  /** CABC : Content Adaptive Backlight Control section end << */

  /* Display on */
  DSI_IO_WriteCmd(0, (uint8_t *)nt35510_reg30);
 800ae42:	a909      	add	r1, sp, #36	@ 0x24
 800ae44:	2000      	movs	r0, #0
 800ae46:	f7f8 ff73 	bl	8003d30 <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)nt35510_reg35);
 800ae4a:	2000      	movs	r0, #0
 800ae4c:	a90e      	add	r1, sp, #56	@ 0x38
 800ae4e:	f7f8 ff6f 	bl	8003d30 <DSI_IO_WriteCmd>

  return 0;
}
 800ae52:	2000      	movs	r0, #0
 800ae54:	b031      	add	sp, #196	@ 0xc4
 800ae56:	bd30      	pop	{r4, r5, pc}
    DSI_IO_WriteCmd(1, (uint8_t *)nt35510_madctl_landscape);
 800ae58:	a906      	add	r1, sp, #24
 800ae5a:	2001      	movs	r0, #1
 800ae5c:	f7f8 ff68 	bl	8003d30 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_caset_landscape);
 800ae60:	a928      	add	r1, sp, #160	@ 0xa0
 800ae62:	2004      	movs	r0, #4
 800ae64:	f7f8 ff64 	bl	8003d30 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_raset_landscape);
 800ae68:	a92a      	add	r1, sp, #168	@ 0xa8
 800ae6a:	2004      	movs	r0, #4
 800ae6c:	f7f8 ff60 	bl	8003d30 <DSI_IO_WriteCmd>
 800ae70:	e7c9      	b.n	800ae06 <NT35510_Init+0x23a>
 800ae72:	bf00      	nop
 800ae74:	08031f58 	.word	0x08031f58
 800ae78:	0802f840 	.word	0x0802f840
 800ae7c:	b0030303 	.word	0xb0030303
 800ae80:	b6464646 	.word	0xb6464646
 800ae84:	b7363636 	.word	0xb7363636
 800ae88:	b3090909 	.word	0xb3090909
 800ae8c:	b8262626 	.word	0xb8262626
 800ae90:	b9363636 	.word	0xb9363636
 800ae94:	ba262626 	.word	0xba262626
 800ae98:	bc008000 	.word	0xbc008000
 800ae9c:	08031f60 	.word	0x08031f60
 800aea0:	cc000003 	.word	0xcc000003
 800aea4:	b1030303 	.word	0xb1030303
 800aea8:	b2020000 	.word	0xb2020000
 800aeac:	b5080808 	.word	0xb5080808

0800aeb0 <OTM8009A_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t OTM8009A_Init(uint32_t ColorCoding, uint32_t orientation)
{
 800aeb0:	b538      	push	{r3, r4, r5, lr}
 800aeb2:	4604      	mov	r4, r0
 800aeb4:	460d      	mov	r5, r1
  /* Enable CMD2 to access vendor specific commands                               */
  /* Enter in command 2 mode and set EXTC to enable address shift function (0x00) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800aeb6:	2000      	movs	r0, #0
 800aeb8:	49c8      	ldr	r1, [pc, #800]	@ (800b1dc <OTM8009A_Init+0x32c>)
 800aeba:	f7f8 ff39 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData1);
 800aebe:	49c8      	ldr	r1, [pc, #800]	@ (800b1e0 <OTM8009A_Init+0x330>)
 800aec0:	2003      	movs	r0, #3
 800aec2:	f7f8 ff35 	bl	8003d30 <DSI_IO_WriteCmd>

  /* Enter ORISE Command 2 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2); /* Shift address to 0x80 */
 800aec6:	49c7      	ldr	r1, [pc, #796]	@ (800b1e4 <OTM8009A_Init+0x334>)
 800aec8:	2000      	movs	r0, #0
 800aeca:	f7f8 ff31 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData2);
 800aece:	49c6      	ldr	r1, [pc, #792]	@ (800b1e8 <OTM8009A_Init+0x338>)
 800aed0:	2002      	movs	r0, #2
 800aed2:	f7f8 ff2d 	bl	8003d30 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////
  /* SD_PCH_CTRL - 0xC480h - 129th parameter - Default 0x00          */
  /* Set SD_PT                                                       */
  /* -> Source output level during porch and non-display area to GND */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 800aed6:	49c3      	ldr	r1, [pc, #780]	@ (800b1e4 <OTM8009A_Init+0x334>)
 800aed8:	2000      	movs	r0, #0
 800aeda:	f7f8 ff29 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData3);
 800aede:	49c3      	ldr	r1, [pc, #780]	@ (800b1ec <OTM8009A_Init+0x33c>)
 800aee0:	2000      	movs	r0, #0
 800aee2:	f7f8 ff25 	bl	8003d30 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 800aee6:	200a      	movs	r0, #10
 800aee8:	f7f8 ff1e 	bl	8003d28 <OTM8009A_IO_Delay>
  /* Not documented */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData4);
 800aeec:	49c0      	ldr	r1, [pc, #768]	@ (800b1f0 <OTM8009A_Init+0x340>)
 800aeee:	2000      	movs	r0, #0
 800aef0:	f7f8 ff1e 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData5);
 800aef4:	49bf      	ldr	r1, [pc, #764]	@ (800b1f4 <OTM8009A_Init+0x344>)
 800aef6:	2000      	movs	r0, #0
 800aef8:	f7f8 ff1a 	bl	8003d30 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 800aefc:	200a      	movs	r0, #10
 800aefe:	f7f8 ff13 	bl	8003d28 <OTM8009A_IO_Delay>
  /////////////////////////////////////////////////////////////////////

  /* PWR_CTRL4 - 0xC4B0h - 178th parameter - Default 0xA8 */
  /* Set gvdd_en_test                                     */
  /* -> enable GVDD test mode !!!                         */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData6);
 800af02:	49bd      	ldr	r1, [pc, #756]	@ (800b1f8 <OTM8009A_Init+0x348>)
 800af04:	2000      	movs	r0, #0
 800af06:	f7f8 ff13 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData7);
 800af0a:	49bc      	ldr	r1, [pc, #752]	@ (800b1fc <OTM8009A_Init+0x34c>)
 800af0c:	2000      	movs	r0, #0
 800af0e:	f7f8 ff0f 	bl	8003d30 <DSI_IO_WriteCmd>
  /* PWR_CTRL2 - 0xC590h - 146th parameter - Default 0x79      */
  /* Set pump 4 vgh voltage                                    */
  /* -> from 15.0v down to 13.0v                               */
  /* Set pump 5 vgh voltage                                    */
  /* -> from -12.0v downto -9.0v                               */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData8);
 800af12:	49bb      	ldr	r1, [pc, #748]	@ (800b200 <OTM8009A_Init+0x350>)
 800af14:	2000      	movs	r0, #0
 800af16:	f7f8 ff0b 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 800af1a:	49ba      	ldr	r1, [pc, #744]	@ (800b204 <OTM8009A_Init+0x354>)
 800af1c:	2000      	movs	r0, #0
 800af1e:	f7f8 ff07 	bl	8003d30 <DSI_IO_WriteCmd>

  /* P_DRV_M - 0xC0B4h - 181th parameter - Default 0x00 */
  /* -> Column inversion                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData10);
 800af22:	49b9      	ldr	r1, [pc, #740]	@ (800b208 <OTM8009A_Init+0x358>)
 800af24:	2000      	movs	r0, #0
 800af26:	f7f8 ff03 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData11);
 800af2a:	49b8      	ldr	r1, [pc, #736]	@ (800b20c <OTM8009A_Init+0x35c>)
 800af2c:	2000      	movs	r0, #0
 800af2e:	f7f8 feff 	bl	8003d30 <DSI_IO_WriteCmd>

  /* VCOMDC - 0xD900h - 1st parameter - Default 0x39h */
  /* VCOM Voltage settings                            */
  /* -> from -1.0000v downto -1.2625v                 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800af32:	49aa      	ldr	r1, [pc, #680]	@ (800b1dc <OTM8009A_Init+0x32c>)
 800af34:	2000      	movs	r0, #0
 800af36:	f7f8 fefb 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData12);
 800af3a:	49b5      	ldr	r1, [pc, #724]	@ (800b210 <OTM8009A_Init+0x360>)
 800af3c:	2000      	movs	r0, #0
 800af3e:	f7f8 fef7 	bl	8003d30 <DSI_IO_WriteCmd>
  /* Oscillator adjustment for Idle/Normal mode (LPDT only) set to 65Hz (default is 60Hz) */
  //DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
  //DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData14);

  /* Video mode internal */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 800af42:	49b4      	ldr	r1, [pc, #720]	@ (800b214 <OTM8009A_Init+0x364>)
 800af44:	2000      	movs	r0, #0
 800af46:	f7f8 fef3 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData16);
 800af4a:	49b3      	ldr	r1, [pc, #716]	@ (800b218 <OTM8009A_Init+0x368>)
 800af4c:	2000      	movs	r0, #0
 800af4e:	f7f8 feef 	bl	8003d30 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 147h parameter - Default 0x00 */
  /* Set pump 4&5 x6                                     */
  /* -> ONLY VALID when PUMP4_EN_ASDM_HV = "0"           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData17);
 800af52:	49b2      	ldr	r1, [pc, #712]	@ (800b21c <OTM8009A_Init+0x36c>)
 800af54:	2000      	movs	r0, #0
 800af56:	f7f8 feeb 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData18);
 800af5a:	49b1      	ldr	r1, [pc, #708]	@ (800b220 <OTM8009A_Init+0x370>)
 800af5c:	2000      	movs	r0, #0
 800af5e:	f7f8 fee7 	bl	8003d30 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 150th parameter - Default 0x33h */
  /* Change pump4 clock ratio                              */
  /* -> from 1 line to 1/2 line                            */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData19);
 800af62:	49b0      	ldr	r1, [pc, #704]	@ (800b224 <OTM8009A_Init+0x374>)
 800af64:	2000      	movs	r0, #0
 800af66:	f7f8 fee3 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 800af6a:	49a6      	ldr	r1, [pc, #664]	@ (800b204 <OTM8009A_Init+0x354>)
 800af6c:	2000      	movs	r0, #0
 800af6e:	f7f8 fedf 	bl	8003d30 <DSI_IO_WriteCmd>

  /* GVDD/NGVDD settings */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800af72:	499a      	ldr	r1, [pc, #616]	@ (800b1dc <OTM8009A_Init+0x32c>)
 800af74:	2000      	movs	r0, #0
 800af76:	f7f8 fedb 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData5);
 800af7a:	49ab      	ldr	r1, [pc, #684]	@ (800b228 <OTM8009A_Init+0x378>)
 800af7c:	2002      	movs	r0, #2
 800af7e:	f7f8 fed7 	bl	8003d30 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 149th parameter - Default 0x33h */
  /* Rewrite the default value !                           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData20);
 800af82:	49aa      	ldr	r1, [pc, #680]	@ (800b22c <OTM8009A_Init+0x37c>)
 800af84:	2000      	movs	r0, #0
 800af86:	f7f8 fed3 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData21);
 800af8a:	49a9      	ldr	r1, [pc, #676]	@ (800b230 <OTM8009A_Init+0x380>)
 800af8c:	2000      	movs	r0, #0
 800af8e:	f7f8 fecf 	bl	8003d30 <DSI_IO_WriteCmd>

  /* Panel display timing Setting 3 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData22);
 800af92:	49a8      	ldr	r1, [pc, #672]	@ (800b234 <OTM8009A_Init+0x384>)
 800af94:	2000      	movs	r0, #0
 800af96:	f7f8 fecb 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData23);
 800af9a:	49a7      	ldr	r1, [pc, #668]	@ (800b238 <OTM8009A_Init+0x388>)
 800af9c:	2000      	movs	r0, #0
 800af9e:	f7f8 fec7 	bl	8003d30 <DSI_IO_WriteCmd>

  /* Power control 1 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData24);
 800afa2:	49a6      	ldr	r1, [pc, #664]	@ (800b23c <OTM8009A_Init+0x38c>)
 800afa4:	2000      	movs	r0, #0
 800afa6:	f7f8 fec3 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData25);
 800afaa:	49a5      	ldr	r1, [pc, #660]	@ (800b240 <OTM8009A_Init+0x390>)
 800afac:	2000      	movs	r0, #0
 800afae:	f7f8 febf 	bl	8003d30 <DSI_IO_WriteCmd>

  /* Source driver precharge */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 800afb2:	49a4      	ldr	r1, [pc, #656]	@ (800b244 <OTM8009A_Init+0x394>)
 800afb4:	2000      	movs	r0, #0
 800afb6:	f7f8 febb 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData26);
 800afba:	49a3      	ldr	r1, [pc, #652]	@ (800b248 <OTM8009A_Init+0x398>)
 800afbc:	2000      	movs	r0, #0
 800afbe:	f7f8 feb7 	bl	8003d30 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 800afc2:	4994      	ldr	r1, [pc, #592]	@ (800b214 <OTM8009A_Init+0x364>)
 800afc4:	2000      	movs	r0, #0
 800afc6:	f7f8 feb3 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData27);
 800afca:	49a0      	ldr	r1, [pc, #640]	@ (800b24c <OTM8009A_Init+0x39c>)
 800afcc:	2000      	movs	r0, #0
 800afce:	f7f8 feaf 	bl	8003d30 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData28);
 800afd2:	499f      	ldr	r1, [pc, #636]	@ (800b250 <OTM8009A_Init+0x3a0>)
 800afd4:	2000      	movs	r0, #0
 800afd6:	f7f8 feab 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData6);
 800afda:	499e      	ldr	r1, [pc, #632]	@ (800b254 <OTM8009A_Init+0x3a4>)
 800afdc:	2002      	movs	r0, #2
 800afde:	f7f8 fea7 	bl	8003d30 <DSI_IO_WriteCmd>

  /* GOAVST */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 800afe2:	4980      	ldr	r1, [pc, #512]	@ (800b1e4 <OTM8009A_Init+0x334>)
 800afe4:	2000      	movs	r0, #0
 800afe6:	f7f8 fea3 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 6, (uint8_t *)lcdRegData7);
 800afea:	499b      	ldr	r1, [pc, #620]	@ (800b258 <OTM8009A_Init+0x3a8>)
 800afec:	2006      	movs	r0, #6
 800afee:	f7f8 fe9f 	bl	8003d30 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 800aff2:	499a      	ldr	r1, [pc, #616]	@ (800b25c <OTM8009A_Init+0x3ac>)
 800aff4:	2000      	movs	r0, #0
 800aff6:	f7f8 fe9b 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData8);
 800affa:	4999      	ldr	r1, [pc, #612]	@ (800b260 <OTM8009A_Init+0x3b0>)
 800affc:	200e      	movs	r0, #14
 800affe:	f7f8 fe97 	bl	8003d30 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 800b002:	4998      	ldr	r1, [pc, #608]	@ (800b264 <OTM8009A_Init+0x3b4>)
 800b004:	2000      	movs	r0, #0
 800b006:	f7f8 fe93 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData9);
 800b00a:	4997      	ldr	r1, [pc, #604]	@ (800b268 <OTM8009A_Init+0x3b8>)
 800b00c:	200e      	movs	r0, #14
 800b00e:	f7f8 fe8f 	bl	8003d30 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 800b012:	4996      	ldr	r1, [pc, #600]	@ (800b26c <OTM8009A_Init+0x3bc>)
 800b014:	2000      	movs	r0, #0
 800b016:	f7f8 fe8b 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData10);
 800b01a:	4995      	ldr	r1, [pc, #596]	@ (800b270 <OTM8009A_Init+0x3c0>)
 800b01c:	200a      	movs	r0, #10
 800b01e:	f7f8 fe87 	bl	8003d30 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 800b022:	4994      	ldr	r1, [pc, #592]	@ (800b274 <OTM8009A_Init+0x3c4>)
 800b024:	2000      	movs	r0, #0
 800b026:	f7f8 fe83 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData46);
 800b02a:	4993      	ldr	r1, [pc, #588]	@ (800b278 <OTM8009A_Init+0x3c8>)
 800b02c:	2000      	movs	r0, #0
 800b02e:	f7f8 fe7f 	bl	8003d30 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 800b032:	496c      	ldr	r1, [pc, #432]	@ (800b1e4 <OTM8009A_Init+0x334>)
 800b034:	2000      	movs	r0, #0
 800b036:	f7f8 fe7b 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData11);
 800b03a:	4990      	ldr	r1, [pc, #576]	@ (800b27c <OTM8009A_Init+0x3cc>)
 800b03c:	200a      	movs	r0, #10
 800b03e:	f7f8 fe77 	bl	8003d30 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 800b042:	498f      	ldr	r1, [pc, #572]	@ (800b280 <OTM8009A_Init+0x3d0>)
 800b044:	2000      	movs	r0, #0
 800b046:	f7f8 fe73 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData12);
 800b04a:	498e      	ldr	r1, [pc, #568]	@ (800b284 <OTM8009A_Init+0x3d4>)
 800b04c:	200f      	movs	r0, #15
 800b04e:	f7f8 fe6f 	bl	8003d30 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 800b052:	4982      	ldr	r1, [pc, #520]	@ (800b25c <OTM8009A_Init+0x3ac>)
 800b054:	2000      	movs	r0, #0
 800b056:	f7f8 fe6b 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData13);
 800b05a:	498b      	ldr	r1, [pc, #556]	@ (800b288 <OTM8009A_Init+0x3d8>)
 800b05c:	200f      	movs	r0, #15
 800b05e:	f7f8 fe67 	bl	8003d30 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 800b062:	4980      	ldr	r1, [pc, #512]	@ (800b264 <OTM8009A_Init+0x3b4>)
 800b064:	2000      	movs	r0, #0
 800b066:	f7f8 fe63 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData14);
 800b06a:	4988      	ldr	r1, [pc, #544]	@ (800b28c <OTM8009A_Init+0x3dc>)
 800b06c:	200a      	movs	r0, #10
 800b06e:	f7f8 fe5f 	bl	8003d30 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 800b072:	497e      	ldr	r1, [pc, #504]	@ (800b26c <OTM8009A_Init+0x3bc>)
 800b074:	2000      	movs	r0, #0
 800b076:	f7f8 fe5b 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData15);
 800b07a:	4985      	ldr	r1, [pc, #532]	@ (800b290 <OTM8009A_Init+0x3e0>)
 800b07c:	200f      	movs	r0, #15
 800b07e:	f7f8 fe57 	bl	8003d30 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 800b082:	497c      	ldr	r1, [pc, #496]	@ (800b274 <OTM8009A_Init+0x3c4>)
 800b084:	2000      	movs	r0, #0
 800b086:	f7f8 fe53 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData16);
 800b08a:	4982      	ldr	r1, [pc, #520]	@ (800b294 <OTM8009A_Init+0x3e4>)
 800b08c:	200f      	movs	r0, #15
 800b08e:	f7f8 fe4f 	bl	8003d30 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData34);
 800b092:	4981      	ldr	r1, [pc, #516]	@ (800b298 <OTM8009A_Init+0x3e8>)
 800b094:	2000      	movs	r0, #0
 800b096:	f7f8 fe4b 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData17);
 800b09a:	4980      	ldr	r1, [pc, #512]	@ (800b29c <OTM8009A_Init+0x3ec>)
 800b09c:	200a      	movs	r0, #10
 800b09e:	f7f8 fe47 	bl	8003d30 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData35);
 800b0a2:	497f      	ldr	r1, [pc, #508]	@ (800b2a0 <OTM8009A_Init+0x3f0>)
 800b0a4:	2000      	movs	r0, #0
 800b0a6:	f7f8 fe43 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData18);
 800b0aa:	497e      	ldr	r1, [pc, #504]	@ (800b2a4 <OTM8009A_Init+0x3f4>)
 800b0ac:	200a      	movs	r0, #10
 800b0ae:	f7f8 fe3f 	bl	8003d30 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 800b0b2:	494c      	ldr	r1, [pc, #304]	@ (800b1e4 <OTM8009A_Init+0x334>)
 800b0b4:	2000      	movs	r0, #0
 800b0b6:	f7f8 fe3b 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData19);
 800b0ba:	497b      	ldr	r1, [pc, #492]	@ (800b2a8 <OTM8009A_Init+0x3f8>)
 800b0bc:	200a      	movs	r0, #10
 800b0be:	f7f8 fe37 	bl	8003d30 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 800b0c2:	496f      	ldr	r1, [pc, #444]	@ (800b280 <OTM8009A_Init+0x3d0>)
 800b0c4:	2000      	movs	r0, #0
 800b0c6:	f7f8 fe33 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData20);
 800b0ca:	4978      	ldr	r1, [pc, #480]	@ (800b2ac <OTM8009A_Init+0x3fc>)
 800b0cc:	200f      	movs	r0, #15
 800b0ce:	f7f8 fe2f 	bl	8003d30 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 800b0d2:	4962      	ldr	r1, [pc, #392]	@ (800b25c <OTM8009A_Init+0x3ac>)
 800b0d4:	2000      	movs	r0, #0
 800b0d6:	f7f8 fe2b 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData21);
 800b0da:	4975      	ldr	r1, [pc, #468]	@ (800b2b0 <OTM8009A_Init+0x400>)
 800b0dc:	200f      	movs	r0, #15
 800b0de:	f7f8 fe27 	bl	8003d30 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 800b0e2:	4960      	ldr	r1, [pc, #384]	@ (800b264 <OTM8009A_Init+0x3b4>)
 800b0e4:	2000      	movs	r0, #0
 800b0e6:	f7f8 fe23 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData22);
 800b0ea:	4972      	ldr	r1, [pc, #456]	@ (800b2b4 <OTM8009A_Init+0x404>)
 800b0ec:	200a      	movs	r0, #10
 800b0ee:	f7f8 fe1f 	bl	8003d30 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 800b0f2:	495e      	ldr	r1, [pc, #376]	@ (800b26c <OTM8009A_Init+0x3bc>)
 800b0f4:	2000      	movs	r0, #0
 800b0f6:	f7f8 fe1b 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData23);
 800b0fa:	496f      	ldr	r1, [pc, #444]	@ (800b2b8 <OTM8009A_Init+0x408>)
 800b0fc:	200f      	movs	r0, #15
 800b0fe:	f7f8 fe17 	bl	8003d30 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 800b102:	495c      	ldr	r1, [pc, #368]	@ (800b274 <OTM8009A_Init+0x3c4>)
 800b104:	2000      	movs	r0, #0
 800b106:	f7f8 fe13 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData24);
 800b10a:	496c      	ldr	r1, [pc, #432]	@ (800b2bc <OTM8009A_Init+0x40c>)
 800b10c:	200f      	movs	r0, #15
 800b10e:	f7f8 fe0f 	bl	8003d30 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////////////
  /* PWR_CTRL1 - 0xc580h - 130th parameter - default 0x00 */
  /* Pump 1 min and max DM                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 800b112:	494c      	ldr	r1, [pc, #304]	@ (800b244 <OTM8009A_Init+0x394>)
 800b114:	2000      	movs	r0, #0
 800b116:	f7f8 fe0b 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData47);
 800b11a:	4969      	ldr	r1, [pc, #420]	@ (800b2c0 <OTM8009A_Init+0x410>)
 800b11c:	2000      	movs	r0, #0
 800b11e:	f7f8 fe07 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData48);
 800b122:	4968      	ldr	r1, [pc, #416]	@ (800b2c4 <OTM8009A_Init+0x414>)
 800b124:	2000      	movs	r0, #0
 800b126:	f7f8 fe03 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData49);
 800b12a:	4967      	ldr	r1, [pc, #412]	@ (800b2c8 <OTM8009A_Init+0x418>)
 800b12c:	2000      	movs	r0, #0
 800b12e:	f7f8 fdff 	bl	8003d30 <DSI_IO_WriteCmd>
  /////////////////////////////////////////////////////////////////////////////

  /* CABC LEDPWM frequency adjusted to 22,7kHz */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData50);
 800b132:	4966      	ldr	r1, [pc, #408]	@ (800b2cc <OTM8009A_Init+0x41c>)
 800b134:	2000      	movs	r0, #0
 800b136:	f7f8 fdfb 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData51);
 800b13a:	4965      	ldr	r1, [pc, #404]	@ (800b2d0 <OTM8009A_Init+0x420>)
 800b13c:	2000      	movs	r0, #0
 800b13e:	f7f8 fdf7 	bl	8003d30 <DSI_IO_WriteCmd>
  
  /* Exit CMD2 mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800b142:	4926      	ldr	r1, [pc, #152]	@ (800b1dc <OTM8009A_Init+0x32c>)
 800b144:	2000      	movs	r0, #0
 800b146:	f7f8 fdf3 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData25);
 800b14a:	4962      	ldr	r1, [pc, #392]	@ (800b2d4 <OTM8009A_Init+0x424>)
 800b14c:	2003      	movs	r0, #3
 800b14e:	f7f8 fdef 	bl	8003d30 <DSI_IO_WriteCmd>
  /*************************************************************************** */
  /* Standard DCS Initialization TO KEEP CAN BE DONE IN HSDT                   */
  /*************************************************************************** */

  /* NOP - goes back to DCS std command ? */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800b152:	4922      	ldr	r1, [pc, #136]	@ (800b1dc <OTM8009A_Init+0x32c>)
 800b154:	2000      	movs	r0, #0
 800b156:	f7f8 fdeb 	bl	8003d30 <DSI_IO_WriteCmd>
          
  /* Gamma correction 2.2+ table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800b15a:	4920      	ldr	r1, [pc, #128]	@ (800b1dc <OTM8009A_Init+0x32c>)
 800b15c:	2000      	movs	r0, #0
 800b15e:	f7f8 fde7 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData3);
 800b162:	495d      	ldr	r1, [pc, #372]	@ (800b2d8 <OTM8009A_Init+0x428>)
 800b164:	2010      	movs	r0, #16
 800b166:	f7f8 fde3 	bl	8003d30 <DSI_IO_WriteCmd>
  
  /* Gamma correction 2.2- table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800b16a:	491c      	ldr	r1, [pc, #112]	@ (800b1dc <OTM8009A_Init+0x32c>)
 800b16c:	2000      	movs	r0, #0
 800b16e:	f7f8 fddf 	bl	8003d30 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData4);
 800b172:	495a      	ldr	r1, [pc, #360]	@ (800b2dc <OTM8009A_Init+0x42c>)
 800b174:	2010      	movs	r0, #16
 800b176:	f7f8 fddb 	bl	8003d30 <DSI_IO_WriteCmd>
          
  /* Send Sleep Out command to display : no parameter */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData36);
 800b17a:	2000      	movs	r0, #0
 800b17c:	4958      	ldr	r1, [pc, #352]	@ (800b2e0 <OTM8009A_Init+0x430>)
 800b17e:	f7f8 fdd7 	bl	8003d30 <DSI_IO_WriteCmd>
  
  /* Wait for sleep out exit */
  OTM8009A_IO_Delay(120);
 800b182:	2078      	movs	r0, #120	@ 0x78
 800b184:	f7f8 fdd0 	bl	8003d28 <OTM8009A_IO_Delay>

  switch(ColorCoding)
 800b188:	2c00      	cmp	r4, #0
 800b18a:	f000 80b9 	beq.w	800b300 <OTM8009A_Init+0x450>
 800b18e:	2c02      	cmp	r4, #2
 800b190:	d103      	bne.n	800b19a <OTM8009A_Init+0x2ea>
  {
  case OTM8009A_FORMAT_RBG565 :
    /* Set Pixel color format to RGB565 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData37);
 800b192:	4954      	ldr	r1, [pc, #336]	@ (800b2e4 <OTM8009A_Init+0x434>)
 800b194:	2000      	movs	r0, #0
 800b196:	f7f8 fdcb 	bl	8003d30 <DSI_IO_WriteCmd>
    break;
  }

  /* Send command to configure display in landscape orientation mode. By default
      the orientation mode is portrait  */
  if(orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 800b19a:	2d01      	cmp	r5, #1
 800b19c:	f000 80b7 	beq.w	800b30e <OTM8009A_Init+0x45e>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData28);
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData40);
 800b1a0:	4951      	ldr	r1, [pc, #324]	@ (800b2e8 <OTM8009A_Init+0x438>)
 800b1a2:	2000      	movs	r0, #0
 800b1a4:	f7f8 fdc4 	bl	8003d30 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData41);
 800b1a8:	4950      	ldr	r1, [pc, #320]	@ (800b2ec <OTM8009A_Init+0x43c>)
 800b1aa:	2000      	movs	r0, #0
 800b1ac:	f7f8 fdc0 	bl	8003d30 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData42);
 800b1b0:	494f      	ldr	r1, [pc, #316]	@ (800b2f0 <OTM8009A_Init+0x440>)
 800b1b2:	2000      	movs	r0, #0
 800b1b4:	f7f8 fdbc 	bl	8003d30 <DSI_IO_WriteCmd>

  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData43);
 800b1b8:	494e      	ldr	r1, [pc, #312]	@ (800b2f4 <OTM8009A_Init+0x444>)
 800b1ba:	2000      	movs	r0, #0
 800b1bc:	f7f8 fdb8 	bl	8003d30 <DSI_IO_WriteCmd>

  /** CABC : Content Adaptive Backlight Control section end << */

  /* Send Command Display On */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData44);
 800b1c0:	494d      	ldr	r1, [pc, #308]	@ (800b2f8 <OTM8009A_Init+0x448>)
 800b1c2:	2000      	movs	r0, #0
 800b1c4:	f7f8 fdb4 	bl	8003d30 <DSI_IO_WriteCmd>

  /* NOP command */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800b1c8:	4904      	ldr	r1, [pc, #16]	@ (800b1dc <OTM8009A_Init+0x32c>)
 800b1ca:	2000      	movs	r0, #0
 800b1cc:	f7f8 fdb0 	bl	8003d30 <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData45);
 800b1d0:	494a      	ldr	r1, [pc, #296]	@ (800b2fc <OTM8009A_Init+0x44c>)
 800b1d2:	2000      	movs	r0, #0
 800b1d4:	f7f8 fdac 	bl	8003d30 <DSI_IO_WriteCmd>

  return 0;
}
 800b1d8:	2000      	movs	r0, #0
 800b1da:	bd38      	pop	{r3, r4, r5, pc}
 800b1dc:	0803202c 	.word	0x0803202c
 800b1e0:	08032174 	.word	0x08032174
 800b1e4:	08032028 	.word	0x08032028
 800b1e8:	08032170 	.word	0x08032170
 800b1ec:	08032024 	.word	0x08032024
 800b1f0:	08032020 	.word	0x08032020
 800b1f4:	0803201c 	.word	0x0803201c
 800b1f8:	08032018 	.word	0x08032018
 800b1fc:	08032014 	.word	0x08032014
 800b200:	08032010 	.word	0x08032010
 800b204:	0803200c 	.word	0x0803200c
 800b208:	08032008 	.word	0x08032008
 800b20c:	08032004 	.word	0x08032004
 800b210:	08032000 	.word	0x08032000
 800b214:	08031ff8 	.word	0x08031ff8
 800b218:	08031ff4 	.word	0x08031ff4
 800b21c:	08031ff0 	.word	0x08031ff0
 800b220:	08031fec 	.word	0x08031fec
 800b224:	08031fe8 	.word	0x08031fe8
 800b228:	08032144 	.word	0x08032144
 800b22c:	08031fe4 	.word	0x08031fe4
 800b230:	08031fe0 	.word	0x08031fe0
 800b234:	08031fdc 	.word	0x08031fdc
 800b238:	08031fd8 	.word	0x08031fd8
 800b23c:	08031fd4 	.word	0x08031fd4
 800b240:	08031fd0 	.word	0x08031fd0
 800b244:	08031ffc 	.word	0x08031ffc
 800b248:	08031fcc 	.word	0x08031fcc
 800b24c:	08031fc8 	.word	0x08031fc8
 800b250:	08031fc4 	.word	0x08031fc4
 800b254:	08032140 	.word	0x08032140
 800b258:	08032138 	.word	0x08032138
 800b25c:	08031fc0 	.word	0x08031fc0
 800b260:	08032128 	.word	0x08032128
 800b264:	08031fbc 	.word	0x08031fbc
 800b268:	08032118 	.word	0x08032118
 800b26c:	08031fb8 	.word	0x08031fb8
 800b270:	0803210c 	.word	0x0803210c
 800b274:	08031fb4 	.word	0x08031fb4
 800b278:	08031f7c 	.word	0x08031f7c
 800b27c:	08032100 	.word	0x08032100
 800b280:	08031fb0 	.word	0x08031fb0
 800b284:	080320f0 	.word	0x080320f0
 800b288:	080320e0 	.word	0x080320e0
 800b28c:	080320d4 	.word	0x080320d4
 800b290:	080320c4 	.word	0x080320c4
 800b294:	080320b4 	.word	0x080320b4
 800b298:	08031fac 	.word	0x08031fac
 800b29c:	080320a8 	.word	0x080320a8
 800b2a0:	08031fa8 	.word	0x08031fa8
 800b2a4:	0803209c 	.word	0x0803209c
 800b2a8:	08032090 	.word	0x08032090
 800b2ac:	08032080 	.word	0x08032080
 800b2b0:	08032070 	.word	0x08032070
 800b2b4:	08032064 	.word	0x08032064
 800b2b8:	08032054 	.word	0x08032054
 800b2bc:	08032044 	.word	0x08032044
 800b2c0:	08031f78 	.word	0x08031f78
 800b2c4:	08031f74 	.word	0x08031f74
 800b2c8:	08031f70 	.word	0x08031f70
 800b2cc:	08031f6c 	.word	0x08031f6c
 800b2d0:	08031f68 	.word	0x08031f68
 800b2d4:	08032040 	.word	0x08032040
 800b2d8:	0803215c 	.word	0x0803215c
 800b2dc:	08032148 	.word	0x08032148
 800b2e0:	08031fa4 	.word	0x08031fa4
 800b2e4:	08031fa0 	.word	0x08031fa0
 800b2e8:	08031f94 	.word	0x08031f94
 800b2ec:	08031f90 	.word	0x08031f90
 800b2f0:	08031f8c 	.word	0x08031f8c
 800b2f4:	08031f88 	.word	0x08031f88
 800b2f8:	08031f84 	.word	0x08031f84
 800b2fc:	08031f80 	.word	0x08031f80
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 800b300:	4909      	ldr	r1, [pc, #36]	@ (800b328 <OTM8009A_Init+0x478>)
 800b302:	4620      	mov	r0, r4
 800b304:	f7f8 fd14 	bl	8003d30 <DSI_IO_WriteCmd>
  if(orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 800b308:	2d01      	cmp	r5, #1
 800b30a:	f47f af49 	bne.w	800b1a0 <OTM8009A_Init+0x2f0>
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData39);
 800b30e:	4907      	ldr	r1, [pc, #28]	@ (800b32c <OTM8009A_Init+0x47c>)
 800b310:	2000      	movs	r0, #0
 800b312:	f7f8 fd0d 	bl	8003d30 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData27);
 800b316:	4906      	ldr	r1, [pc, #24]	@ (800b330 <OTM8009A_Init+0x480>)
 800b318:	2004      	movs	r0, #4
 800b31a:	f7f8 fd09 	bl	8003d30 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData28);
 800b31e:	4905      	ldr	r1, [pc, #20]	@ (800b334 <OTM8009A_Init+0x484>)
 800b320:	2004      	movs	r0, #4
 800b322:	f7f8 fd05 	bl	8003d30 <DSI_IO_WriteCmd>
 800b326:	e73b      	b.n	800b1a0 <OTM8009A_Init+0x2f0>
 800b328:	08031f9c 	.word	0x08031f9c
 800b32c:	08031f98 	.word	0x08031f98
 800b330:	08032038 	.word	0x08032038
 800b334:	08032030 	.word	0x08032030

0800b338 <OTM8009A_ReadID>:
/**
  * @brief  Read the component ID.
  * @retval Component ID
  */
uint16_t OTM8009A_ReadID(void)
{
 800b338:	b500      	push	{lr}
 800b33a:	b083      	sub	sp, #12
  uint8_t pData=0;
 800b33c:	2300      	movs	r3, #0
  DSI_IO_ReadCmd(OTM8009A_CMD_ID1, &pData, 1);
 800b33e:	2201      	movs	r2, #1
 800b340:	f10d 0107 	add.w	r1, sp, #7
 800b344:	20da      	movs	r0, #218	@ 0xda
  uint8_t pData=0;
 800b346:	f88d 3007 	strb.w	r3, [sp, #7]
  DSI_IO_ReadCmd(OTM8009A_CMD_ID1, &pData, 1);
 800b34a:	f7f8 fd0f 	bl	8003d6c <DSI_IO_ReadCmd>
  return pData;
}
 800b34e:	f89d 0007 	ldrb.w	r0, [sp, #7]
 800b352:	b003      	add	sp, #12
 800b354:	f85d fb04 	ldr.w	pc, [sp], #4

0800b358 <BSP_QSPI_EnableMemoryMappedMode>:
/**
  * @brief  Configure the QSPI in memory-mapped mode 
  * @retval QSPI memory status
  */
uint8_t BSP_QSPI_EnableMemoryMappedMode(void)
{
 800b358:	b510      	push	{r4, lr}
 800b35a:	b090      	sub	sp, #64	@ 0x40
  QSPI_CommandTypeDef      s_command;
  QSPI_MemoryMappedTypeDef s_mem_mapped_cfg;

  /* Configure the command for the read instruction */
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 800b35c:	22eb      	movs	r2, #235	@ 0xeb
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 800b35e:	f44f 6140 	mov.w	r1, #3072	@ 0xc00
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 800b362:	9202      	str	r2, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 800b364:	9109      	str	r1, [sp, #36]	@ 0x24
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800b366:	f44f 7480 	mov.w	r4, #256	@ 0x100
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 800b36a:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_4_LINES;
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 800b36e:	210a      	movs	r1, #10
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800b370:	2300      	movs	r3, #0
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800b372:	9408      	str	r4, [sp, #32]
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 800b374:	9205      	str	r2, [sp, #20]
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 800b376:	9107      	str	r1, [sp, #28]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 800b378:	f04f 7440 	mov.w	r4, #50331648	@ 0x3000000
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
  
  /* Configure the memory mapped mode */
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
  
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 800b37c:	466a      	mov	r2, sp
 800b37e:	a902      	add	r1, sp, #8
 800b380:	4806      	ldr	r0, [pc, #24]	@ (800b39c <BSP_QSPI_EnableMemoryMappedMode+0x44>)
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800b382:	930f      	str	r3, [sp, #60]	@ 0x3c
  s_command.DataMode          = QSPI_DATA_4_LINES;
 800b384:	e9cd 340a 	strd	r3, r4, [sp, #40]	@ 0x28
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 800b388:	e9cd 330d 	strd	r3, r3, [sp, #52]	@ 0x34
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 800b38c:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 800b38e:	f003 f811 	bl	800e3b4 <HAL_QSPI_MemoryMapped>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 800b392:	3800      	subs	r0, #0
 800b394:	bf18      	it	ne
 800b396:	2001      	movne	r0, #1
 800b398:	b010      	add	sp, #64	@ 0x40
 800b39a:	bd10      	pop	{r4, pc}
 800b39c:	20005498 	.word	0x20005498

0800b3a0 <BSP_QSPI_MspInit>:
  *           - Peripheral's clock enable
  *           - Peripheral's GPIO Configuration
  *           - NVIC configuration for QSPI interrupt
  */
__weak void BSP_QSPI_MspInit(QSPI_HandleTypeDef *hqspi, void *Params)
{
 800b3a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b3a2:	b08b      	sub	sp, #44	@ 0x2c
  GPIO_InitTypeDef gpio_init_structure;

  /*##-1- Enable peripherals and GPIO Clocks #################################*/
  /* Enable the QuadSPI memory interface clock */
  QSPI_CLK_ENABLE();
 800b3a4:	4b2c      	ldr	r3, [pc, #176]	@ (800b458 <BSP_QSPI_MspInit+0xb8>)

  /* QSPI CLK GPIO pin configuration  */
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
  gpio_init_structure.Pull      = GPIO_NOPULL;
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 800b3a6:	4d2d      	ldr	r5, [pc, #180]	@ (800b45c <BSP_QSPI_MspInit+0xbc>)
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 800b3a8:	482d      	ldr	r0, [pc, #180]	@ (800b460 <BSP_QSPI_MspInit+0xc0>)
  QSPI_CLK_ENABLE();
 800b3aa:	2400      	movs	r4, #0
 800b3ac:	9401      	str	r4, [sp, #4]
 800b3ae:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800b3b0:	f042 0202 	orr.w	r2, r2, #2
 800b3b4:	639a      	str	r2, [r3, #56]	@ 0x38
 800b3b6:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800b3b8:	f002 0202 	and.w	r2, r2, #2
 800b3bc:	9201      	str	r2, [sp, #4]
 800b3be:	9a01      	ldr	r2, [sp, #4]
  QSPI_FORCE_RESET();
 800b3c0:	699a      	ldr	r2, [r3, #24]
 800b3c2:	f042 0202 	orr.w	r2, r2, #2
 800b3c6:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 800b3c8:	699a      	ldr	r2, [r3, #24]
 800b3ca:	f022 0202 	bic.w	r2, r2, #2
 800b3ce:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 800b3d0:	9402      	str	r4, [sp, #8]
 800b3d2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800b3d4:	f042 0202 	orr.w	r2, r2, #2
 800b3d8:	631a      	str	r2, [r3, #48]	@ 0x30
 800b3da:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800b3dc:	f002 0202 	and.w	r2, r2, #2
 800b3e0:	9202      	str	r2, [sp, #8]
 800b3e2:	9a02      	ldr	r2, [sp, #8]
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 800b3e4:	9403      	str	r4, [sp, #12]
 800b3e6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800b3e8:	f042 0220 	orr.w	r2, r2, #32
 800b3ec:	631a      	str	r2, [r3, #48]	@ 0x30
 800b3ee:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b3f0:	f003 0320 	and.w	r3, r3, #32
 800b3f4:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Pin       = QSPI_CS_PIN;
 800b3f6:	2240      	movs	r2, #64	@ 0x40
 800b3f8:	2302      	movs	r3, #2
 800b3fa:	e9cd 2304 	strd	r2, r3, [sp, #16]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 800b3fe:	270a      	movs	r7, #10
  gpio_init_structure.Pin       = QSPI_CS_PIN;
 800b400:	2201      	movs	r2, #1
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 800b402:	9b03      	ldr	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 800b404:	9708      	str	r7, [sp, #32]
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 800b406:	a904      	add	r1, sp, #16
  gpio_init_structure.Pin       = QSPI_CS_PIN;
 800b408:	2303      	movs	r3, #3
 800b40a:	e9cd 2306 	strd	r2, r3, [sp, #24]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 800b40e:	2609      	movs	r6, #9
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 800b410:	f001 fc24 	bl	800cc5c <HAL_GPIO_Init>
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 800b414:	a904      	add	r1, sp, #16
 800b416:	4628      	mov	r0, r5
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 800b418:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800b41c:	9304      	str	r3, [sp, #16]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 800b41e:	9406      	str	r4, [sp, #24]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 800b420:	9608      	str	r6, [sp, #32]
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 800b422:	f001 fc1b 	bl	800cc5c <HAL_GPIO_Init>

  /* QSPI D0 and D1 GPIO pin configuration  */
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 800b426:	a904      	add	r1, sp, #16
 800b428:	4628      	mov	r0, r5
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 800b42a:	f44f 7340 	mov.w	r3, #768	@ 0x300
 800b42e:	9304      	str	r3, [sp, #16]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 800b430:	9708      	str	r7, [sp, #32]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 800b432:	f001 fc13 	bl	800cc5c <HAL_GPIO_Init>

  /* QSPI D2 and D3 GPIO pin configuration  */
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 800b436:	23c0      	movs	r3, #192	@ 0xc0
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 800b438:	a904      	add	r1, sp, #16
 800b43a:	4628      	mov	r0, r5
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 800b43c:	9304      	str	r3, [sp, #16]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 800b43e:	9608      	str	r6, [sp, #32]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 800b440:	f001 fc0c 	bl	800cc5c <HAL_GPIO_Init>

  /*##-3- Configure the NVIC for QSPI #########################################*/
  /* NVIC configuration for QSPI interrupt */
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 800b444:	4622      	mov	r2, r4
 800b446:	210f      	movs	r1, #15
 800b448:	205b      	movs	r0, #91	@ 0x5b
 800b44a:	f000 fb1f 	bl	800ba8c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 800b44e:	205b      	movs	r0, #91	@ 0x5b
 800b450:	f000 fb58 	bl	800bb04 <HAL_NVIC_EnableIRQ>

}
 800b454:	b00b      	add	sp, #44	@ 0x2c
 800b456:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b458:	40023800 	.word	0x40023800
 800b45c:	40021400 	.word	0x40021400
 800b460:	40020400 	.word	0x40020400

0800b464 <BSP_QSPI_Init>:
{
 800b464:	e92d 4df0 	stmdb	sp!, {r4, r5, r6, r7, r8, sl, fp, lr}
  QSPIHandle.Instance = QUADSPI;
 800b468:	4c6a      	ldr	r4, [pc, #424]	@ (800b614 <BSP_QSPI_Init+0x1b0>)
 800b46a:	4b6b      	ldr	r3, [pc, #428]	@ (800b618 <BSP_QSPI_Init+0x1b4>)
 800b46c:	6023      	str	r3, [r4, #0]
{
 800b46e:	b0a4      	sub	sp, #144	@ 0x90
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 800b470:	4620      	mov	r0, r4
 800b472:	f002 fea7 	bl	800e1c4 <HAL_QSPI_DeInit>
 800b476:	b118      	cbz	r0, 800b480 <BSP_QSPI_Init+0x1c>
    return QSPI_ERROR;
 800b478:	2001      	movs	r0, #1
}
 800b47a:	b024      	add	sp, #144	@ 0x90
 800b47c:	e8bd 8df0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, sl, fp, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 800b480:	4601      	mov	r1, r0
 800b482:	4620      	mov	r0, r4
 800b484:	f7ff ff8c 	bl	800b3a0 <BSP_QSPI_MspInit>
  QSPIHandle.Init.ClockPrescaler     = 1; /* QSPI Freq= 180 MHz / (1+1) = 90 MHz */
 800b488:	2201      	movs	r2, #1
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 800b48a:	2110      	movs	r1, #16
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800b48c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
  QSPIHandle.Init.ClockPrescaler     = 1; /* QSPI Freq= 180 MHz / (1+1) = 90 MHz */
 800b490:	e9c4 2201 	strd	r2, r2, [r4, #4]
 800b494:	fa93 f3a3 	rbit	r3, r3
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 800b498:	60e1      	str	r1, [r4, #12]
     optimisations using the logic "value was passed to __builtin_clz, so it
     is non-zero".
     ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
     single CLZ instruction.
   */
  if (value == 0U)
 800b49a:	b373      	cbz	r3, 800b4fa <BSP_QSPI_Init+0x96>
  {
    return 32U;
  }
  return __builtin_clz(value);
 800b49c:	fab3 f383 	clz	r3, r3
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 800b4a0:	3b01      	subs	r3, #1
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 800b4a2:	2200      	movs	r2, #0
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 800b4a4:	f44f 6180 	mov.w	r1, #1024	@ 0x400
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 800b4a8:	485a      	ldr	r0, [pc, #360]	@ (800b614 <BSP_QSPI_Init+0x1b0>)
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 800b4aa:	6222      	str	r2, [r4, #32]
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 800b4ac:	e9c4 3104 	strd	r3, r1, [r4, #16]
  QSPIHandle.Init.FlashID            = QSPI_FLASH_ID_1;
 800b4b0:	e9c4 2206 	strd	r2, r2, [r4, #24]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 800b4b4:	f002 fe24 	bl	800e100 <HAL_QSPI_Init>
 800b4b8:	4603      	mov	r3, r0
 800b4ba:	2800      	cmp	r0, #0
 800b4bc:	d1dc      	bne.n	800b478 <BSP_QSPI_Init+0x14>
{
  QSPI_CommandTypeDef s_command;

  /* Initialize the reset enable command */
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
  s_command.Instruction       = RESET_ENABLE_CMD;
 800b4be:	2266      	movs	r2, #102	@ 0x66
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800b4c0:	f44f 7480 	mov.w	r4, #256	@ 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 800b4c4:	9208      	str	r2, [sp, #32]
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  /* Send the command */
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800b4c6:	4853      	ldr	r0, [pc, #332]	@ (800b614 <BSP_QSPI_Init+0x1b0>)
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800b4c8:	940e      	str	r4, [sp, #56]	@ 0x38
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800b4ca:	f241 3288 	movw	r2, #5000	@ 0x1388
 800b4ce:	a908      	add	r1, sp, #32
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800b4d0:	e9cd 330f 	strd	r3, r3, [sp, #60]	@ 0x3c
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 800b4d4:	e9cd 3313 	strd	r3, r3, [sp, #76]	@ 0x4c
  s_command.DataMode          = QSPI_DATA_NONE;
 800b4d8:	9311      	str	r3, [sp, #68]	@ 0x44
  s_command.DummyCycles       = 0;
 800b4da:	930d      	str	r3, [sp, #52]	@ 0x34
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800b4dc:	9315      	str	r3, [sp, #84]	@ 0x54
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800b4de:	f002 fe85 	bl	800e1ec <HAL_QSPI_Command>
 800b4e2:	b940      	cbnz	r0, 800b4f6 <BSP_QSPI_Init+0x92>
  {
    return QSPI_ERROR;
  }

  /* Send the reset memory command */
  s_command.Instruction = RESET_MEMORY_CMD;
 800b4e4:	2399      	movs	r3, #153	@ 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800b4e6:	484b      	ldr	r0, [pc, #300]	@ (800b614 <BSP_QSPI_Init+0x1b0>)
  s_command.Instruction = RESET_MEMORY_CMD;
 800b4e8:	9308      	str	r3, [sp, #32]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800b4ea:	f241 3288 	movw	r2, #5000	@ 0x1388
 800b4ee:	a908      	add	r1, sp, #32
 800b4f0:	f002 fe7c 	bl	800e1ec <HAL_QSPI_Command>
 800b4f4:	b118      	cbz	r0, 800b4fe <BSP_QSPI_Init+0x9a>
    return QSPI_NOT_SUPPORTED;
 800b4f6:	2004      	movs	r0, #4
 800b4f8:	e7bf      	b.n	800b47a <BSP_QSPI_Init+0x16>
 800b4fa:	231f      	movs	r3, #31
 800b4fc:	e7d1      	b.n	800b4a2 <BSP_QSPI_Init+0x3e>
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 800b4fe:	2501      	movs	r5, #1
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800b500:	e9cd 001d 	strd	r0, r0, [sp, #116]	@ 0x74
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 800b504:	e9cd 0021 	strd	r0, r0, [sp, #132]	@ 0x84
  s_command.Instruction       = READ_STATUS_REG_CMD;
 800b508:	2705      	movs	r7, #5
  s_command.DataMode          = QSPI_DATA_1_LINE;
 800b50a:	f04f 7680 	mov.w	r6, #16777216	@ 0x1000000
  s_command.DummyCycles       = 0;
 800b50e:	901b      	str	r0, [sp, #108]	@ 0x6c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800b510:	9023      	str	r0, [sp, #140]	@ 0x8c
  s_config.Match           = 0;
 800b512:	9002      	str	r0, [sp, #8]
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
  s_config.Interval        = 0x10;
 800b514:	f04f 0810 	mov.w	r8, #16
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 800b518:	f04f 0a00 	mov.w	sl, #0
 800b51c:	f44f 0b80 	mov.w	fp, #4194304	@ 0x400000
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 800b520:	483c      	ldr	r0, [pc, #240]	@ (800b614 <BSP_QSPI_Init+0x1b0>)
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800b522:	941c      	str	r4, [sp, #112]	@ 0x70
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 800b524:	f241 3388 	movw	r3, #5000	@ 0x1388
 800b528:	aa02      	add	r2, sp, #8
 800b52a:	a916      	add	r1, sp, #88	@ 0x58
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 800b52c:	e9cd ab06 	strd	sl, fp, [sp, #24]
  s_command.Instruction       = READ_STATUS_REG_CMD;
 800b530:	9716      	str	r7, [sp, #88]	@ 0x58
  s_command.DataMode          = QSPI_DATA_1_LINE;
 800b532:	961f      	str	r6, [sp, #124]	@ 0x7c
  s_config.Mask            = N25Q128A_SR_WIP;
 800b534:	9503      	str	r5, [sp, #12]
  s_config.StatusBytesSize = 1;
 800b536:	9505      	str	r5, [sp, #20]
  s_config.Interval        = 0x10;
 800b538:	f8cd 8010 	str.w	r8, [sp, #16]
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 800b53c:	f002 fec2 	bl	800e2c4 <HAL_QSPI_AutoPolling>
 800b540:	2800      	cmp	r0, #0
 800b542:	d1d8      	bne.n	800b4f6 <BSP_QSPI_Init+0x92>
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 800b544:	e9cd 401c 	strd	r4, r0, [sp, #112]	@ 0x70
  s_command.DataMode          = QSPI_DATA_1_LINE;
 800b548:	e9cd 061e 	strd	r0, r6, [sp, #120]	@ 0x78
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 800b54c:	e9cd 5020 	strd	r5, r0, [sp, #128]	@ 0x80
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800b550:	e9cd 0022 	strd	r0, r0, [sp, #136]	@ 0x88
  s_command.DummyCycles       = 0;
 800b554:	901b      	str	r0, [sp, #108]	@ 0x6c
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 800b556:	2385      	movs	r3, #133	@ 0x85
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800b558:	482e      	ldr	r0, [pc, #184]	@ (800b614 <BSP_QSPI_Init+0x1b0>)
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 800b55a:	9316      	str	r3, [sp, #88]	@ 0x58
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800b55c:	f241 3288 	movw	r2, #5000	@ 0x1388
 800b560:	a916      	add	r1, sp, #88	@ 0x58
 800b562:	f002 fe43 	bl	800e1ec <HAL_QSPI_Command>
 800b566:	2800      	cmp	r0, #0
 800b568:	d1c5      	bne.n	800b4f6 <BSP_QSPI_Init+0x92>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800b56a:	482a      	ldr	r0, [pc, #168]	@ (800b614 <BSP_QSPI_Init+0x1b0>)
 800b56c:	f241 3288 	movw	r2, #5000	@ 0x1388
 800b570:	f10d 0107 	add.w	r1, sp, #7
 800b574:	f003 f86c 	bl	800e650 <HAL_QSPI_Receive>
 800b578:	2800      	cmp	r0, #0
 800b57a:	d1bc      	bne.n	800b4f6 <BSP_QSPI_Init+0x92>
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 800b57c:	e9cd 400e 	strd	r4, r0, [sp, #56]	@ 0x38
  s_command.DataMode          = QSPI_DATA_NONE;
 800b580:	e9cd 0010 	strd	r0, r0, [sp, #64]	@ 0x40
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 800b584:	e9cd 0013 	strd	r0, r0, [sp, #76]	@ 0x4c
  s_command.DummyCycles       = 0;
 800b588:	900d      	str	r0, [sp, #52]	@ 0x34
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800b58a:	9015      	str	r0, [sp, #84]	@ 0x54
  s_command.Instruction       = WRITE_ENABLE_CMD;
 800b58c:	2306      	movs	r3, #6
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800b58e:	4821      	ldr	r0, [pc, #132]	@ (800b614 <BSP_QSPI_Init+0x1b0>)
  s_command.Instruction       = WRITE_ENABLE_CMD;
 800b590:	9308      	str	r3, [sp, #32]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800b592:	f241 3288 	movw	r2, #5000	@ 0x1388
 800b596:	a908      	add	r1, sp, #32
 800b598:	f002 fe28 	bl	800e1ec <HAL_QSPI_Command>
 800b59c:	2800      	cmp	r0, #0
 800b59e:	d1aa      	bne.n	800b4f6 <BSP_QSPI_Init+0x92>
  s_config.Match           = N25Q128A_SR_WREN;
 800b5a0:	2002      	movs	r0, #2
  s_config.Mask            = N25Q128A_SR_WREN;
 800b5a2:	e9cd 0002 	strd	r0, r0, [sp, #8]
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800b5a6:	aa02      	add	r2, sp, #8
 800b5a8:	481a      	ldr	r0, [pc, #104]	@ (800b614 <BSP_QSPI_Init+0x1b0>)
  s_command.Instruction    = READ_STATUS_REG_CMD;
 800b5aa:	9708      	str	r7, [sp, #32]
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800b5ac:	a908      	add	r1, sp, #32
 800b5ae:	f241 3388 	movw	r3, #5000	@ 0x1388
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 800b5b2:	e9cd ab06 	strd	sl, fp, [sp, #24]
  s_config.Interval        = 0x10;
 800b5b6:	e9cd 8504 	strd	r8, r5, [sp, #16]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 800b5ba:	9611      	str	r6, [sp, #68]	@ 0x44
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800b5bc:	f002 fe82 	bl	800e2c4 <HAL_QSPI_AutoPolling>
 800b5c0:	2800      	cmp	r0, #0
 800b5c2:	d198      	bne.n	800b4f6 <BSP_QSPI_Init+0x92>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 800b5c4:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800b5c8:	2181      	movs	r1, #129	@ 0x81
   __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800b5ca:	22f0      	movs	r2, #240	@ 0xf0
 800b5cc:	9116      	str	r1, [sp, #88]	@ 0x58
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 800b5ce:	f003 030f 	and.w	r3, r3, #15
 800b5d2:	fa92 f2a2 	rbit	r2, r2
  if (value == 0U)
 800b5d6:	b132      	cbz	r2, 800b5e6 <BSP_QSPI_Init+0x182>
  return __builtin_clz(value);
 800b5d8:	fab2 f282 	clz	r2, r2
 800b5dc:	210a      	movs	r1, #10
 800b5de:	fa01 f202 	lsl.w	r2, r1, r2
 800b5e2:	4313      	orrs	r3, r2
 800b5e4:	b2db      	uxtb	r3, r3
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800b5e6:	480b      	ldr	r0, [pc, #44]	@ (800b614 <BSP_QSPI_Init+0x1b0>)
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 800b5e8:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800b5ec:	f241 3288 	movw	r2, #5000	@ 0x1388
 800b5f0:	a916      	add	r1, sp, #88	@ 0x58
 800b5f2:	f002 fdfb 	bl	800e1ec <HAL_QSPI_Command>
 800b5f6:	2800      	cmp	r0, #0
 800b5f8:	f47f af7d 	bne.w	800b4f6 <BSP_QSPI_Init+0x92>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800b5fc:	4805      	ldr	r0, [pc, #20]	@ (800b614 <BSP_QSPI_Init+0x1b0>)
 800b5fe:	f241 3288 	movw	r2, #5000	@ 0x1388
 800b602:	f10d 0107 	add.w	r1, sp, #7
 800b606:	f002 ff9b 	bl	800e540 <HAL_QSPI_Transmit>
 800b60a:	2800      	cmp	r0, #0
 800b60c:	f43f af35 	beq.w	800b47a <BSP_QSPI_Init+0x16>
 800b610:	e771      	b.n	800b4f6 <BSP_QSPI_Init+0x92>
 800b612:	bf00      	nop
 800b614:	20005498 	.word	0x20005498
 800b618:	a0001000 	.word	0xa0001000

0800b61c <BSP_QSPI_MspDeInit>:
{
 800b61c:	b510      	push	{r4, lr}
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 800b61e:	205b      	movs	r0, #91	@ 0x5b
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 800b620:	4c15      	ldr	r4, [pc, #84]	@ (800b678 <BSP_QSPI_MspDeInit+0x5c>)
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 800b622:	f000 fa7d 	bl	800bb20 <HAL_NVIC_DisableIRQ>
  HAL_GPIO_DeInit(QSPI_CS_GPIO_PORT, QSPI_CS_PIN);
 800b626:	4815      	ldr	r0, [pc, #84]	@ (800b67c <BSP_QSPI_MspDeInit+0x60>)
 800b628:	2140      	movs	r1, #64	@ 0x40
 800b62a:	f001 fc4f 	bl	800cecc <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 800b62e:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800b632:	4620      	mov	r0, r4
 800b634:	f001 fc4a 	bl	800cecc <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D0_PIN);
 800b638:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800b63c:	4620      	mov	r0, r4
 800b63e:	f001 fc45 	bl	800cecc <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D1_PIN);
 800b642:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800b646:	4620      	mov	r0, r4
 800b648:	f001 fc40 	bl	800cecc <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D2_PIN);
 800b64c:	2180      	movs	r1, #128	@ 0x80
 800b64e:	4620      	mov	r0, r4
 800b650:	f001 fc3c 	bl	800cecc <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D3_PIN);
 800b654:	2140      	movs	r1, #64	@ 0x40
 800b656:	4620      	mov	r0, r4
 800b658:	f001 fc38 	bl	800cecc <HAL_GPIO_DeInit>
  QSPI_FORCE_RESET();
 800b65c:	4b08      	ldr	r3, [pc, #32]	@ (800b680 <BSP_QSPI_MspDeInit+0x64>)
 800b65e:	699a      	ldr	r2, [r3, #24]
 800b660:	f042 0202 	orr.w	r2, r2, #2
 800b664:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 800b666:	699a      	ldr	r2, [r3, #24]
 800b668:	f022 0202 	bic.w	r2, r2, #2
 800b66c:	619a      	str	r2, [r3, #24]
  QSPI_CLK_DISABLE();
 800b66e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800b670:	f022 0202 	bic.w	r2, r2, #2
 800b674:	639a      	str	r2, [r3, #56]	@ 0x38
}
 800b676:	bd10      	pop	{r4, pc}
 800b678:	40021400 	.word	0x40021400
 800b67c:	40020400 	.word	0x40020400
 800b680:	40023800 	.word	0x40023800

0800b684 <BSP_QSPI_DeInit>:
{
 800b684:	b538      	push	{r3, r4, r5, lr}
  QSPIHandle.Instance = QUADSPI;
 800b686:	4d08      	ldr	r5, [pc, #32]	@ (800b6a8 <BSP_QSPI_DeInit+0x24>)
 800b688:	4b08      	ldr	r3, [pc, #32]	@ (800b6ac <BSP_QSPI_DeInit+0x28>)
 800b68a:	602b      	str	r3, [r5, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 800b68c:	4628      	mov	r0, r5
 800b68e:	f002 fd99 	bl	800e1c4 <HAL_QSPI_DeInit>
 800b692:	b110      	cbz	r0, 800b69a <BSP_QSPI_DeInit+0x16>
    return QSPI_ERROR;
 800b694:	2401      	movs	r4, #1
}
 800b696:	4620      	mov	r0, r4
 800b698:	bd38      	pop	{r3, r4, r5, pc}
 800b69a:	4604      	mov	r4, r0
  BSP_QSPI_MspDeInit(&QSPIHandle, NULL);
 800b69c:	4601      	mov	r1, r0
 800b69e:	4628      	mov	r0, r5
 800b6a0:	f7ff ffbc 	bl	800b61c <BSP_QSPI_MspDeInit>
}
 800b6a4:	4620      	mov	r0, r4
 800b6a6:	bd38      	pop	{r3, r4, r5, pc}
 800b6a8:	20005498 	.word	0x20005498
 800b6ac:	a0001000 	.word	0xa0001000

0800b6b0 <BSP_SDRAM_Initialization_sequence>:
/**
  * @brief  Programs the SDRAM device.
  * @param  RefreshCount: SDRAM refresh counter value
  */
void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
{
 800b6b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 800b6b4:	4c22      	ldr	r4, [pc, #136]	@ (800b740 <BSP_SDRAM_Initialization_sequence+0x90>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800b6b6:	4d23      	ldr	r5, [pc, #140]	@ (800b744 <BSP_SDRAM_Initialization_sequence+0x94>)
{
 800b6b8:	b083      	sub	sp, #12
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 800b6ba:	2601      	movs	r6, #1
  __IO uint32_t tmpmrd = 0;
 800b6bc:	2700      	movs	r7, #0
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800b6be:	f04f 0910 	mov.w	r9, #16
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800b6c2:	4621      	mov	r1, r4
{
 800b6c4:	4680      	mov	r8, r0
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800b6c6:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800b6ca:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = 0;
 800b6cc:	e9c4 6702 	strd	r6, r7, [r4, #8]
  __IO uint32_t tmpmrd = 0;
 800b6d0:	9701      	str	r7, [sp, #4]
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 800b6d2:	6026      	str	r6, [r4, #0]
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800b6d4:	f8c4 9004 	str.w	r9, [r4, #4]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800b6d8:	f003 fcd2 	bl	800f080 <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
 800b6dc:	4630      	mov	r0, r6
 800b6de:	f000 f9b1 	bl	800ba44 <HAL_Delay>
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800b6e2:	4621      	mov	r1, r4
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 800b6e4:	2302      	movs	r3, #2
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800b6e6:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800b6ea:	4628      	mov	r0, r5
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 800b6ec:	6023      	str	r3, [r4, #0]
  Command.AutoRefreshNumber      = 1;
 800b6ee:	e9c4 9601 	strd	r9, r6, [r4, #4]
  Command.ModeRegisterDefinition = 0;
 800b6f2:	60e7      	str	r7, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800b6f4:	f003 fcc4 	bl	800f080 <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 800b6f8:	2303      	movs	r3, #3
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800b6fa:	4621      	mov	r1, r4
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 800b6fc:	6023      	str	r3, [r4, #0]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800b6fe:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 8;
 800b702:	2308      	movs	r3, #8
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800b704:	4628      	mov	r0, r5
  Command.AutoRefreshNumber      = 8;
 800b706:	60a3      	str	r3, [r4, #8]
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800b708:	f8c4 9004 	str.w	r9, [r4, #4]
  Command.ModeRegisterDefinition = 0;
 800b70c:	60e7      	str	r7, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800b70e:	f003 fcb7 	bl	800f080 <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 800b712:	f44f 730c 	mov.w	r3, #560	@ 0x230
 800b716:	9301      	str	r3, [sp, #4]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 800b718:	2204      	movs	r2, #4
 800b71a:	2310      	movs	r3, #16
 800b71c:	e9c4 2300 	strd	r2, r3, [r4]
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800b720:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = tmpmrd;
 800b722:	9b01      	ldr	r3, [sp, #4]
  Command.AutoRefreshNumber      = 1;
 800b724:	60a6      	str	r6, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800b726:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800b72a:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = tmpmrd;
 800b72c:	60e3      	str	r3, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800b72e:	f003 fca7 	bl	800f080 <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 800b732:	4641      	mov	r1, r8
 800b734:	4628      	mov	r0, r5
}
 800b736:	b003      	add	sp, #12
 800b738:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 800b73c:	f003 bcbe 	b.w	800f0bc <HAL_SDRAM_ProgramRefreshRate>
 800b740:	200055a8 	.word	0x200055a8
 800b744:	200055d8 	.word	0x200055d8

0800b748 <BSP_SDRAM_MspInit>:
__weak void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;

  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 800b748:	2800      	cmp	r0, #0
 800b74a:	f000 80c2 	beq.w	800b8d2 <BSP_SDRAM_MspInit+0x18a>
{
 800b74e:	b570      	push	{r4, r5, r6, lr}
 800b750:	b090      	sub	sp, #64	@ 0x40
  {
    /* Enable FMC clock */
    __HAL_RCC_FMC_CLK_ENABLE();
 800b752:	4b60      	ldr	r3, [pc, #384]	@ (800b8d4 <BSP_SDRAM_MspInit+0x18c>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
                                GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_9 | GPIO_PIN_10;
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);

    /* Configure common DMA parameters */
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 800b754:	4c60      	ldr	r4, [pc, #384]	@ (800b8d8 <BSP_SDRAM_MspInit+0x190>)
    __HAL_RCC_FMC_CLK_ENABLE();
 800b756:	2500      	movs	r5, #0
 800b758:	9501      	str	r5, [sp, #4]
 800b75a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800b75c:	f042 0201 	orr.w	r2, r2, #1
 800b760:	639a      	str	r2, [r3, #56]	@ 0x38
 800b762:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800b764:	f002 0201 	and.w	r2, r2, #1
 800b768:	9201      	str	r2, [sp, #4]
 800b76a:	9a01      	ldr	r2, [sp, #4]
    __DMAx_CLK_ENABLE();
 800b76c:	9502      	str	r5, [sp, #8]
 800b76e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800b770:	f442 0280 	orr.w	r2, r2, #4194304	@ 0x400000
 800b774:	631a      	str	r2, [r3, #48]	@ 0x30
 800b776:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800b778:	f402 0280 	and.w	r2, r2, #4194304	@ 0x400000
 800b77c:	9202      	str	r2, [sp, #8]
 800b77e:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800b780:	9503      	str	r5, [sp, #12]
 800b782:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800b784:	f042 0204 	orr.w	r2, r2, #4
 800b788:	631a      	str	r2, [r3, #48]	@ 0x30
 800b78a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800b78c:	f002 0204 	and.w	r2, r2, #4
 800b790:	9203      	str	r2, [sp, #12]
 800b792:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800b794:	9504      	str	r5, [sp, #16]
 800b796:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800b798:	f042 0208 	orr.w	r2, r2, #8
 800b79c:	631a      	str	r2, [r3, #48]	@ 0x30
 800b79e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800b7a0:	f002 0208 	and.w	r2, r2, #8
 800b7a4:	9204      	str	r2, [sp, #16]
 800b7a6:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 800b7a8:	9505      	str	r5, [sp, #20]
 800b7aa:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800b7ac:	f042 0210 	orr.w	r2, r2, #16
 800b7b0:	631a      	str	r2, [r3, #48]	@ 0x30
 800b7b2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800b7b4:	f002 0210 	and.w	r2, r2, #16
 800b7b8:	9205      	str	r2, [sp, #20]
 800b7ba:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800b7bc:	9506      	str	r5, [sp, #24]
 800b7be:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800b7c0:	f042 0220 	orr.w	r2, r2, #32
 800b7c4:	631a      	str	r2, [r3, #48]	@ 0x30
 800b7c6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800b7c8:	f002 0220 	and.w	r2, r2, #32
 800b7cc:	9206      	str	r2, [sp, #24]
 800b7ce:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800b7d0:	9507      	str	r5, [sp, #28]
 800b7d2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800b7d4:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800b7d8:	631a      	str	r2, [r3, #48]	@ 0x30
 800b7da:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800b7dc:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 800b7e0:	9207      	str	r2, [sp, #28]
 800b7e2:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 800b7e4:	9508      	str	r5, [sp, #32]
 800b7e6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800b7e8:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800b7ec:	631a      	str	r2, [r3, #48]	@ 0x30
 800b7ee:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800b7f0:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 800b7f4:	9208      	str	r2, [sp, #32]
 800b7f6:	9a08      	ldr	r2, [sp, #32]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 800b7f8:	9509      	str	r5, [sp, #36]	@ 0x24
 800b7fa:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800b7fc:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800b800:	631a      	str	r2, [r3, #48]	@ 0x30
 800b802:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    gpio_init_structure.Alternate = GPIO_AF12_FMC;
 800b804:	210c      	movs	r1, #12
    __HAL_RCC_GPIOI_CLK_ENABLE();
 800b806:	f403 7380 	and.w	r3, r3, #256	@ 0x100
    gpio_init_structure.Pin   = GPIO_PIN_0;
 800b80a:	2201      	movs	r2, #1
 800b80c:	4606      	mov	r6, r0
    __HAL_RCC_GPIOI_CLK_ENABLE();
 800b80e:	9309      	str	r3, [sp, #36]	@ 0x24
    gpio_init_structure.Alternate = GPIO_AF12_FMC;
 800b810:	910e      	str	r1, [sp, #56]	@ 0x38
    gpio_init_structure.Pin   = GPIO_PIN_0;
 800b812:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800b814:	a90a      	add	r1, sp, #40	@ 0x28
 800b816:	4831      	ldr	r0, [pc, #196]	@ (800b8dc <BSP_SDRAM_MspInit+0x194>)
    gpio_init_structure.Pin   = GPIO_PIN_0;
 800b818:	e9cd 230a 	strd	r2, r3, [sp, #40]	@ 0x28
 800b81c:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
    __HAL_RCC_GPIOI_CLK_ENABLE();
 800b820:	9b09      	ldr	r3, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800b822:	f001 fa1b 	bl	800cc5c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 800b826:	a90a      	add	r1, sp, #40	@ 0x28
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 800b828:	f24c 7303 	movw	r3, #50947	@ 0xc703
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 800b82c:	482c      	ldr	r0, [pc, #176]	@ (800b8e0 <BSP_SDRAM_MspInit+0x198>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 800b82e:	930a      	str	r3, [sp, #40]	@ 0x28
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 800b830:	f001 fa14 	bl	800cc5c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 800b834:	a90a      	add	r1, sp, #40	@ 0x28
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 800b836:	f64f 7383 	movw	r3, #65411	@ 0xff83
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 800b83a:	482a      	ldr	r0, [pc, #168]	@ (800b8e4 <BSP_SDRAM_MspInit+0x19c>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 800b83c:	930a      	str	r3, [sp, #40]	@ 0x28
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 800b83e:	f001 fa0d 	bl	800cc5c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 800b842:	a90a      	add	r1, sp, #40	@ 0x28
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 800b844:	f64f 033f 	movw	r3, #63551	@ 0xf83f
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 800b848:	4827      	ldr	r0, [pc, #156]	@ (800b8e8 <BSP_SDRAM_MspInit+0x1a0>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 800b84a:	930a      	str	r3, [sp, #40]	@ 0x28
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 800b84c:	f001 fa06 	bl	800cc5c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 800b850:	a90a      	add	r1, sp, #40	@ 0x28
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 800b852:	f248 1333 	movw	r3, #33075	@ 0x8133
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 800b856:	4825      	ldr	r0, [pc, #148]	@ (800b8ec <BSP_SDRAM_MspInit+0x1a4>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 800b858:	930a      	str	r3, [sp, #40]	@ 0x28
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 800b85a:	f001 f9ff 	bl	800cc5c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 800b85e:	a90a      	add	r1, sp, #40	@ 0x28
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 800b860:	f64f 730c 	movw	r3, #65292	@ 0xff0c
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 800b864:	4822      	ldr	r0, [pc, #136]	@ (800b8f0 <BSP_SDRAM_MspInit+0x1a8>)
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 800b866:	930a      	str	r3, [sp, #40]	@ 0x28
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 800b868:	f001 f9f8 	bl	800cc5c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 800b86c:	a90a      	add	r1, sp, #40	@ 0x28
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 800b86e:	f240 63ff 	movw	r3, #1791	@ 0x6ff
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 800b872:	4820      	ldr	r0, [pc, #128]	@ (800b8f4 <BSP_SDRAM_MspInit+0x1ac>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 800b874:	930a      	str	r3, [sp, #40]	@ 0x28
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 800b876:	f001 f9f1 	bl	800cc5c <HAL_GPIO_Init>
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 800b87a:	2280      	movs	r2, #128	@ 0x80
 800b87c:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800b880:	e9c4 5201 	strd	r5, r2, [r4, #4]
 800b884:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800b888:	e9c4 1203 	strd	r1, r2, [r4, #12]
 800b88c:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
 800b890:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 800b894:	e9c4 0205 	strd	r0, r2, [r4, #20]
 800b898:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
    dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
    dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
    dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
    dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;

    dma_handle.Instance = SDRAM_DMAx_STREAM;
 800b89c:	4b16      	ldr	r3, [pc, #88]	@ (800b8f8 <BSP_SDRAM_MspInit+0x1b0>)
 800b89e:	6023      	str	r3, [r4, #0]
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 800b8a0:	e9c4 550b 	strd	r5, r5, [r4, #44]	@ 0x2c
 800b8a4:	e9c4 5207 	strd	r5, r2, [r4, #28]

    /* Associate the DMA handle */
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 800b8a8:	6334      	str	r4, [r6, #48]	@ 0x30
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 800b8aa:	2203      	movs	r2, #3

    /* Deinitialize the stream for new transfer */
    HAL_DMA_DeInit(&dma_handle);
 800b8ac:	4620      	mov	r0, r4
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 800b8ae:	e9c4 5209 	strd	r5, r2, [r4, #36]	@ 0x24
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 800b8b2:	63a6      	str	r6, [r4, #56]	@ 0x38
    HAL_DMA_DeInit(&dma_handle);
 800b8b4:	f000 f9f0 	bl	800bc98 <HAL_DMA_DeInit>

    /* Configure the DMA stream */
    HAL_DMA_Init(&dma_handle);
 800b8b8:	4620      	mov	r0, r4
 800b8ba:	f000 f957 	bl	800bb6c <HAL_DMA_Init>

    /* NVIC configuration for DMA transfer complete interrupt */
    HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 5, 0);
 800b8be:	462a      	mov	r2, r5
 800b8c0:	2105      	movs	r1, #5
 800b8c2:	2038      	movs	r0, #56	@ 0x38
 800b8c4:	f000 f8e2 	bl	800ba8c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
 800b8c8:	2038      	movs	r0, #56	@ 0x38
 800b8ca:	f000 f91b 	bl	800bb04 <HAL_NVIC_EnableIRQ>

  } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 800b8ce:	b010      	add	sp, #64	@ 0x40
 800b8d0:	bd70      	pop	{r4, r5, r6, pc}
 800b8d2:	4770      	bx	lr
 800b8d4:	40023800 	.word	0x40023800
 800b8d8:	20005548 	.word	0x20005548
 800b8dc:	40020800 	.word	0x40020800
 800b8e0:	40020c00 	.word	0x40020c00
 800b8e4:	40021000 	.word	0x40021000
 800b8e8:	40021400 	.word	0x40021400
 800b8ec:	40021800 	.word	0x40021800
 800b8f0:	40021c00 	.word	0x40021c00
 800b8f4:	40022000 	.word	0x40022000
 800b8f8:	40026410 	.word	0x40026410

0800b8fc <BSP_SDRAM_Init>:
{
 800b8fc:	b570      	push	{r4, r5, r6, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 800b8fe:	4c1a      	ldr	r4, [pc, #104]	@ (800b968 <BSP_SDRAM_Init+0x6c>)
  Timing.LoadToActiveDelay    = 2;
 800b900:	4d1a      	ldr	r5, [pc, #104]	@ (800b96c <BSP_SDRAM_Init+0x70>)
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 800b902:	481b      	ldr	r0, [pc, #108]	@ (800b970 <BSP_SDRAM_Init+0x74>)
 800b904:	6020      	str	r0, [r4, #0]
  Timing.ExitSelfRefreshDelay = 7;
 800b906:	2207      	movs	r2, #7
  Timing.SelfRefreshTime      = 4;
 800b908:	2304      	movs	r3, #4
 800b90a:	e9c5 2301 	strd	r2, r3, [r5, #4]
  Timing.RowCycleDelay        = 7;
 800b90e:	60ea      	str	r2, [r5, #12]
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
 800b910:	60e3      	str	r3, [r4, #12]
  sdramHandle.Init.MemoryDataWidth    = SDRAM_MEMORY_WIDTH;
 800b912:	2220      	movs	r2, #32
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800b914:	2340      	movs	r3, #64	@ 0x40
 800b916:	e9c4 2304 	strd	r2, r3, [r4, #16]
  Timing.LoadToActiveDelay    = 2;
 800b91a:	2102      	movs	r1, #2
  sdramHandle.Init.SDClockPeriod      = SDCLOCK_PERIOD;
 800b91c:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  Timing.LoadToActiveDelay    = 2;
 800b920:	6029      	str	r1, [r5, #0]
  Timing.RCDDelay             = 2;
 800b922:	61a9      	str	r1, [r5, #24]
  sdramHandle.Init.SDClockPeriod      = SDCLOCK_PERIOD;
 800b924:	6223      	str	r3, [r4, #32]
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
 800b926:	2100      	movs	r1, #0
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 800b928:	f44f 72c0 	mov.w	r2, #384	@ 0x180
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 800b92c:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800b930:	e9c4 2106 	strd	r2, r1, [r4, #24]
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 800b934:	e9c4 3109 	strd	r3, r1, [r4, #36]	@ 0x24
  Timing.WriteRecoveryTime    = 2;
 800b938:	2202      	movs	r2, #2
 800b93a:	2302      	movs	r3, #2
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 800b93c:	4620      	mov	r0, r4
  Timing.WriteRecoveryTime    = 2;
 800b93e:	e9c5 2304 	strd	r2, r3, [r5, #16]
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
 800b942:	e9c4 1101 	strd	r1, r1, [r4, #4]
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 800b946:	f7ff feff 	bl	800b748 <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 800b94a:	4629      	mov	r1, r5
 800b94c:	4620      	mov	r0, r4
 800b94e:	f003 fb67 	bl	800f020 <HAL_SDRAM_Init>
 800b952:	4e08      	ldr	r6, [pc, #32]	@ (800b974 <BSP_SDRAM_Init+0x78>)
 800b954:	1e03      	subs	r3, r0, #0
 800b956:	bf18      	it	ne
 800b958:	2301      	movne	r3, #1
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
 800b95a:	f240 5069 	movw	r0, #1385	@ 0x569
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 800b95e:	7033      	strb	r3, [r6, #0]
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
 800b960:	f7ff fea6 	bl	800b6b0 <BSP_SDRAM_Initialization_sequence>
}
 800b964:	7830      	ldrb	r0, [r6, #0]
 800b966:	bd70      	pop	{r4, r5, r6, pc}
 800b968:	200055d8 	.word	0x200055d8
 800b96c:	200055b8 	.word	0x200055b8
 800b970:	a0000140 	.word	0xa0000140
 800b974:	20000035 	.word	0x20000035

0800b978 <BSP_SDRAM_MspDeInit>:
  */
__weak void BSP_SDRAM_MspDeInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
    static DMA_HandleTypeDef dma_handle;

    if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 800b978:	b150      	cbz	r0, 800b990 <BSP_SDRAM_MspDeInit+0x18>
{
 800b97a:	b508      	push	{r3, lr}
    {
      /* Disable NVIC configuration for DMA interrupt */
      HAL_NVIC_DisableIRQ(SDRAM_DMAx_IRQn);
 800b97c:	2038      	movs	r0, #56	@ 0x38
 800b97e:	f000 f8cf 	bl	800bb20 <HAL_NVIC_DisableIRQ>

      /* Deinitialize the stream for new transfer */
      dma_handle.Instance = SDRAM_DMAx_STREAM;
 800b982:	4804      	ldr	r0, [pc, #16]	@ (800b994 <BSP_SDRAM_MspDeInit+0x1c>)
 800b984:	4b04      	ldr	r3, [pc, #16]	@ (800b998 <BSP_SDRAM_MspDeInit+0x20>)
 800b986:	6003      	str	r3, [r0, #0]

      /* GPIO pins clock, FMC clock and DMA clock can be shut down in the application
       by surcharging this __weak function */

    } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 800b988:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      HAL_DMA_DeInit(&dma_handle);
 800b98c:	f000 b984 	b.w	800bc98 <HAL_DMA_DeInit>
 800b990:	4770      	bx	lr
 800b992:	bf00      	nop
 800b994:	200054e4 	.word	0x200054e4
 800b998:	40026410 	.word	0x40026410

0800b99c <BSP_SDRAM_DeInit>:
{
 800b99c:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 800b99e:	4c09      	ldr	r4, [pc, #36]	@ (800b9c4 <BSP_SDRAM_DeInit+0x28>)
 800b9a0:	4b09      	ldr	r3, [pc, #36]	@ (800b9c8 <BSP_SDRAM_DeInit+0x2c>)
 800b9a2:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_DeInit(&sdramHandle) == HAL_OK)
 800b9a4:	4620      	mov	r0, r4
 800b9a6:	f003 fb5d 	bl	800f064 <HAL_SDRAM_DeInit>
 800b9aa:	b110      	cbz	r0, 800b9b2 <BSP_SDRAM_DeInit+0x16>
  return sdramstatus;
 800b9ac:	4d07      	ldr	r5, [pc, #28]	@ (800b9cc <BSP_SDRAM_DeInit+0x30>)
}
 800b9ae:	7828      	ldrb	r0, [r5, #0]
 800b9b0:	bd38      	pop	{r3, r4, r5, pc}
    sdramstatus = SDRAM_OK;
 800b9b2:	4d06      	ldr	r5, [pc, #24]	@ (800b9cc <BSP_SDRAM_DeInit+0x30>)
 800b9b4:	4601      	mov	r1, r0
   BSP_SDRAM_MspDeInit(&sdramHandle, (void *)NULL);
 800b9b6:	4620      	mov	r0, r4
    sdramstatus = SDRAM_OK;
 800b9b8:	7029      	strb	r1, [r5, #0]
   BSP_SDRAM_MspDeInit(&sdramHandle, (void *)NULL);
 800b9ba:	f7ff ffdd 	bl	800b978 <BSP_SDRAM_MspDeInit>
}
 800b9be:	7828      	ldrb	r0, [r5, #0]
 800b9c0:	bd38      	pop	{r3, r4, r5, pc}
 800b9c2:	bf00      	nop
 800b9c4:	200055d8 	.word	0x200055d8
 800b9c8:	a0000140 	.word	0xa0000140
 800b9cc:	20000034 	.word	0x20000034

0800b9d0 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800b9d0:	4b05      	ldr	r3, [pc, #20]	@ (800b9e8 <SystemInit+0x18>)
 800b9d2:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800b9d6:	f04f 6100 	mov.w	r1, #134217728	@ 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800b9da:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 800b9de:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800b9e2:	6099      	str	r1, [r3, #8]
#endif
}
 800b9e4:	4770      	bx	lr
 800b9e6:	bf00      	nop
 800b9e8:	e000ed00 	.word	0xe000ed00

0800b9ec <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800b9ec:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800b9ee:	4b0b      	ldr	r3, [pc, #44]	@ (800ba1c <HAL_Init+0x30>)
 800b9f0:	681a      	ldr	r2, [r3, #0]
 800b9f2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800b9f6:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800b9f8:	681a      	ldr	r2, [r3, #0]
 800b9fa:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800b9fe:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800ba00:	681a      	ldr	r2, [r3, #0]
 800ba02:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800ba06:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800ba08:	2003      	movs	r0, #3
 800ba0a:	f000 f82d 	bl	800ba68 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800ba0e:	200f      	movs	r0, #15
 800ba10:	f7f8 fca6 	bl	8004360 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800ba14:	f7f8 f9ca 	bl	8003dac <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800ba18:	2000      	movs	r0, #0
 800ba1a:	bd08      	pop	{r3, pc}
 800ba1c:	40023c00 	.word	0x40023c00

0800ba20 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800ba20:	4a03      	ldr	r2, [pc, #12]	@ (800ba30 <HAL_IncTick+0x10>)
 800ba22:	4b04      	ldr	r3, [pc, #16]	@ (800ba34 <HAL_IncTick+0x14>)
 800ba24:	6811      	ldr	r1, [r2, #0]
 800ba26:	781b      	ldrb	r3, [r3, #0]
 800ba28:	440b      	add	r3, r1
 800ba2a:	6013      	str	r3, [r2, #0]
}
 800ba2c:	4770      	bx	lr
 800ba2e:	bf00      	nop
 800ba30:	2000560c 	.word	0x2000560c
 800ba34:	2000003c 	.word	0x2000003c

0800ba38 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800ba38:	4b01      	ldr	r3, [pc, #4]	@ (800ba40 <HAL_GetTick+0x8>)
 800ba3a:	6818      	ldr	r0, [r3, #0]
}
 800ba3c:	4770      	bx	lr
 800ba3e:	bf00      	nop
 800ba40:	2000560c 	.word	0x2000560c

0800ba44 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800ba44:	b538      	push	{r3, r4, r5, lr}
 800ba46:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800ba48:	f7ff fff6 	bl	800ba38 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800ba4c:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 800ba4e:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 800ba50:	d002      	beq.n	800ba58 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 800ba52:	4b04      	ldr	r3, [pc, #16]	@ (800ba64 <HAL_Delay+0x20>)
 800ba54:	781b      	ldrb	r3, [r3, #0]
 800ba56:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800ba58:	f7ff ffee 	bl	800ba38 <HAL_GetTick>
 800ba5c:	1b40      	subs	r0, r0, r5
 800ba5e:	42a0      	cmp	r0, r4
 800ba60:	d3fa      	bcc.n	800ba58 <HAL_Delay+0x14>
  {
  }
}
 800ba62:	bd38      	pop	{r3, r4, r5, pc}
 800ba64:	2000003c 	.word	0x2000003c

0800ba68 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800ba68:	4907      	ldr	r1, [pc, #28]	@ (800ba88 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800ba6a:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800ba6c:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800ba6e:	f64f 00ff 	movw	r0, #63743	@ 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800ba72:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800ba76:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800ba78:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800ba7a:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 800ba7e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 800ba82:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800ba84:	4770      	bx	lr
 800ba86:	bf00      	nop
 800ba88:	e000ed00 	.word	0xe000ed00

0800ba8c <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800ba8c:	4b1b      	ldr	r3, [pc, #108]	@ (800bafc <HAL_NVIC_SetPriority+0x70>)
 800ba8e:	68db      	ldr	r3, [r3, #12]
 800ba90:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800ba94:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800ba96:	f1c3 0e07 	rsb	lr, r3, #7
 800ba9a:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800ba9e:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800baa2:	bf28      	it	cs
 800baa4:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800baa8:	f1bc 0f06 	cmp.w	ip, #6
 800baac:	d91c      	bls.n	800bae8 <HAL_NVIC_SetPriority+0x5c>
 800baae:	f1a3 0c03 	sub.w	ip, r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800bab2:	f04f 33ff 	mov.w	r3, #4294967295
 800bab6:	fa03 f30c 	lsl.w	r3, r3, ip
 800baba:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800babe:	f04f 33ff 	mov.w	r3, #4294967295
 800bac2:	fa03 f30e 	lsl.w	r3, r3, lr
 800bac6:	ea21 0303 	bic.w	r3, r1, r3
 800baca:	fa03 f30c 	lsl.w	r3, r3, ip
 800bace:	4313      	orrs	r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800bad0:	011b      	lsls	r3, r3, #4
  if ((int32_t)(IRQn) >= 0)
 800bad2:	2800      	cmp	r0, #0
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800bad4:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
 800bad6:	db0a      	blt.n	800baee <HAL_NVIC_SetPriority+0x62>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800bad8:	f100 4060 	add.w	r0, r0, #3758096384	@ 0xe0000000
 800badc:	f500 4061 	add.w	r0, r0, #57600	@ 0xe100
 800bae0:	f880 3300 	strb.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800bae4:	f85d fb04 	ldr.w	pc, [sp], #4
 800bae8:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800baea:	4694      	mov	ip, r2
 800baec:	e7e7      	b.n	800babe <HAL_NVIC_SetPriority+0x32>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800baee:	4a04      	ldr	r2, [pc, #16]	@ (800bb00 <HAL_NVIC_SetPriority+0x74>)
 800baf0:	f000 000f 	and.w	r0, r0, #15
 800baf4:	4402      	add	r2, r0
 800baf6:	7613      	strb	r3, [r2, #24]
 800baf8:	f85d fb04 	ldr.w	pc, [sp], #4
 800bafc:	e000ed00 	.word	0xe000ed00
 800bb00:	e000ecfc 	.word	0xe000ecfc

0800bb04 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800bb04:	2800      	cmp	r0, #0
 800bb06:	db07      	blt.n	800bb18 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800bb08:	4a04      	ldr	r2, [pc, #16]	@ (800bb1c <HAL_NVIC_EnableIRQ+0x18>)
 800bb0a:	0941      	lsrs	r1, r0, #5
 800bb0c:	2301      	movs	r3, #1
 800bb0e:	f000 001f 	and.w	r0, r0, #31
 800bb12:	4083      	lsls	r3, r0
 800bb14:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800bb18:	4770      	bx	lr
 800bb1a:	bf00      	nop
 800bb1c:	e000e100 	.word	0xe000e100

0800bb20 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800bb20:	2800      	cmp	r0, #0
 800bb22:	db0c      	blt.n	800bb3e <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800bb24:	0943      	lsrs	r3, r0, #5
 800bb26:	4906      	ldr	r1, [pc, #24]	@ (800bb40 <HAL_NVIC_DisableIRQ+0x20>)
 800bb28:	f000 001f 	and.w	r0, r0, #31
 800bb2c:	3320      	adds	r3, #32
 800bb2e:	2201      	movs	r2, #1
 800bb30:	4082      	lsls	r2, r0
 800bb32:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800bb36:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800bb3a:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 800bb3e:	4770      	bx	lr
 800bb40:	e000e100 	.word	0xe000e100

0800bb44 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800bb44:	b180      	cbz	r0, 800bb68 <HAL_CRC_Init+0x24>
{
 800bb46:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800bb48:	7943      	ldrb	r3, [r0, #5]
 800bb4a:	4604      	mov	r4, r0
 800bb4c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800bb50:	b11b      	cbz	r3, 800bb5a <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800bb52:	2301      	movs	r3, #1
 800bb54:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800bb56:	2000      	movs	r0, #0
}
 800bb58:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 800bb5a:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 800bb5c:	f7f8 f946 	bl	8003dec <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 800bb60:	2301      	movs	r3, #1
 800bb62:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 800bb64:	2000      	movs	r0, #0
}
 800bb66:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800bb68:	2001      	movs	r0, #1
}
 800bb6a:	4770      	bx	lr

0800bb6c <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 800bb6c:	b538      	push	{r3, r4, r5, lr}
 800bb6e:	4604      	mov	r4, r0
  uint32_t tmp = 0U;
  uint32_t tickstart = HAL_GetTick();
 800bb70:	f7ff ff62 	bl	800ba38 <HAL_GetTick>
  DMA_Base_Registers *regs;

  /* Check the DMA peripheral state */
  if(hdma == NULL)
 800bb74:	2c00      	cmp	r4, #0
 800bb76:	d06f      	beq.n	800bc58 <HAL_DMA_Init+0xec>

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
  
  /* Disable the peripheral */
  __HAL_DMA_DISABLE(hdma);
 800bb78:	6823      	ldr	r3, [r4, #0]
  __HAL_UNLOCK(hdma);
 800bb7a:	2200      	movs	r2, #0
  hdma->State = HAL_DMA_STATE_BUSY;
 800bb7c:	2102      	movs	r1, #2
 800bb7e:	f884 1035 	strb.w	r1, [r4, #53]	@ 0x35
  __HAL_UNLOCK(hdma);
 800bb82:	f884 2034 	strb.w	r2, [r4, #52]	@ 0x34
  __HAL_DMA_DISABLE(hdma);
 800bb86:	681a      	ldr	r2, [r3, #0]
 800bb88:	f022 0201 	bic.w	r2, r2, #1
 800bb8c:	4605      	mov	r5, r0
 800bb8e:	601a      	str	r2, [r3, #0]
  
  /* Check if the DMA Stream is effectively disabled */
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 800bb90:	e005      	b.n	800bb9e <HAL_DMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800bb92:	f7ff ff51 	bl	800ba38 <HAL_GetTick>
 800bb96:	1b43      	subs	r3, r0, r5
 800bb98:	2b05      	cmp	r3, #5
 800bb9a:	d839      	bhi.n	800bc10 <HAL_DMA_Init+0xa4>
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 800bb9c:	6823      	ldr	r3, [r4, #0]
 800bb9e:	681a      	ldr	r2, [r3, #0]
 800bba0:	07d1      	lsls	r1, r2, #31
 800bba2:	d4f6      	bmi.n	800bb92 <HAL_DMA_Init+0x26>
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 800bba4:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800bba8:	68e1      	ldr	r1, [r4, #12]
 800bbaa:	4302      	orrs	r2, r0
 800bbac:	430a      	orrs	r2, r1
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800bbae:	e9d4 5104 	ldrd	r5, r1, [r4, #16]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800bbb2:	69a0      	ldr	r0, [r4, #24]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800bbb4:	432a      	orrs	r2, r5
 800bbb6:	430a      	orrs	r2, r1
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800bbb8:	69e1      	ldr	r1, [r4, #28]
  tmp = hdma->Instance->CR;
 800bbba:	681d      	ldr	r5, [r3, #0]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800bbbc:	4302      	orrs	r2, r0
 800bbbe:	430a      	orrs	r2, r1
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 800bbc0:	4932      	ldr	r1, [pc, #200]	@ (800bc8c <HAL_DMA_Init+0x120>)
 800bbc2:	4029      	ands	r1, r5
          hdma->Init.Mode                | hdma->Init.Priority;
 800bbc4:	6a25      	ldr	r5, [r4, #32]
 800bbc6:	432a      	orrs	r2, r5
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 800bbc8:	430a      	orrs	r2, r1

  /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800bbca:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800bbcc:	2904      	cmp	r1, #4
 800bbce:	d026      	beq.n	800bc1e <HAL_DMA_Init+0xb2>
    /* Get memory burst and peripheral burst */
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
  }
  
  /* Write to DMA Stream CR register */
  hdma->Instance->CR = tmp;  
 800bbd0:	601a      	str	r2, [r3, #0]

  /* Get the FCR register value */
  tmp = hdma->Instance->FCR;
 800bbd2:	695a      	ldr	r2, [r3, #20]

  /* Clear Direct mode and FIFO threshold bits */
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 800bbd4:	f022 0207 	bic.w	r2, r2, #7

  /* Prepare the DMA Stream FIFO configuration */
  tmp |= hdma->Init.FIFOMode;
 800bbd8:	4311      	orrs	r1, r2
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 800bbda:	b2d8      	uxtb	r0, r3
 800bbdc:	4a2c      	ldr	r2, [pc, #176]	@ (800bc90 <HAL_DMA_Init+0x124>)
  hdma->Instance->FCR = tmp;
 800bbde:	6159      	str	r1, [r3, #20]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 800bbe0:	3810      	subs	r0, #16
 800bbe2:	fba2 5200 	umull	r5, r2, r2, r0
 800bbe6:	0912      	lsrs	r2, r2, #4
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 800bbe8:	492a      	ldr	r1, [pc, #168]	@ (800bc94 <HAL_DMA_Init+0x128>)
  
  if (stream_number > 3U)
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 800bbea:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 800bbee:	5c89      	ldrb	r1, [r1, r2]
 800bbf0:	65e1      	str	r1, [r4, #92]	@ 0x5c
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 800bbf2:	f023 0303 	bic.w	r3, r3, #3
  if (stream_number > 3U)
 800bbf6:	285f      	cmp	r0, #95	@ 0x5f
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 800bbf8:	bf88      	it	hi
 800bbfa:	3304      	addhi	r3, #4
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800bbfc:	223f      	movs	r2, #63	@ 0x3f
 800bbfe:	408a      	lsls	r2, r1
 800bc00:	65a3      	str	r3, [r4, #88]	@ 0x58
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800bc02:	2000      	movs	r0, #0
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800bc04:	609a      	str	r2, [r3, #8]
  hdma->State = HAL_DMA_STATE_READY;
 800bc06:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800bc08:	6560      	str	r0, [r4, #84]	@ 0x54
  hdma->State = HAL_DMA_STATE_READY;
 800bc0a:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
}
 800bc0e:	bd38      	pop	{r3, r4, r5, pc}
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 800bc10:	2303      	movs	r3, #3
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800bc12:	2220      	movs	r2, #32
 800bc14:	6562      	str	r2, [r4, #84]	@ 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 800bc16:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
      return HAL_TIMEOUT;
 800bc1a:	4618      	mov	r0, r3
}
 800bc1c:	bd38      	pop	{r3, r4, r5, pc}
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 800bc1e:	e9d4 510b 	ldrd	r5, r1, [r4, #44]	@ 0x2c
 800bc22:	4329      	orrs	r1, r5
 800bc24:	4311      	orrs	r1, r2
  hdma->Instance->CR = tmp;  
 800bc26:	6019      	str	r1, [r3, #0]
  tmp = hdma->Instance->FCR;
 800bc28:	6959      	ldr	r1, [r3, #20]
    tmp |= hdma->Init.FIFOThreshold;
 800bc2a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 800bc2c:	f021 0107 	bic.w	r1, r1, #7
 800bc30:	4311      	orrs	r1, r2
    tmp |= hdma->Init.FIFOThreshold;
 800bc32:	f041 0104 	orr.w	r1, r1, #4
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 800bc36:	2d00      	cmp	r5, #0
 800bc38:	d0cf      	beq.n	800bbda <HAL_DMA_Init+0x6e>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 800bc3a:	b178      	cbz	r0, 800bc5c <HAL_DMA_Init+0xf0>
      break;
    }
  }
  
  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 800bc3c:	f5b0 5f00 	cmp.w	r0, #8192	@ 0x2000
 800bc40:	d016      	beq.n	800bc70 <HAL_DMA_Init+0x104>
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 800bc42:	2a02      	cmp	r2, #2
 800bc44:	d903      	bls.n	800bc4e <HAL_DMA_Init+0xe2>
 800bc46:	2a03      	cmp	r2, #3
 800bc48:	d1c7      	bne.n	800bbda <HAL_DMA_Init+0x6e>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 800bc4a:	01ea      	lsls	r2, r5, #7
 800bc4c:	d5c5      	bpl.n	800bbda <HAL_DMA_Init+0x6e>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 800bc4e:	2240      	movs	r2, #64	@ 0x40
        hdma->State = HAL_DMA_STATE_READY;
 800bc50:	2301      	movs	r3, #1
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 800bc52:	6562      	str	r2, [r4, #84]	@ 0x54
        hdma->State = HAL_DMA_STATE_READY;
 800bc54:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
    return HAL_ERROR;
 800bc58:	2001      	movs	r0, #1
}
 800bc5a:	bd38      	pop	{r3, r4, r5, pc}
    switch (tmp)
 800bc5c:	2a01      	cmp	r2, #1
 800bc5e:	d003      	beq.n	800bc68 <HAL_DMA_Init+0xfc>
 800bc60:	f032 0202 	bics.w	r2, r2, #2
 800bc64:	d1b9      	bne.n	800bbda <HAL_DMA_Init+0x6e>
 800bc66:	e7f0      	b.n	800bc4a <HAL_DMA_Init+0xde>
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 800bc68:	f1b5 7fc0 	cmp.w	r5, #25165824	@ 0x1800000
 800bc6c:	d1b5      	bne.n	800bbda <HAL_DMA_Init+0x6e>
 800bc6e:	e7ee      	b.n	800bc4e <HAL_DMA_Init+0xe2>
    switch (tmp)
 800bc70:	2a03      	cmp	r2, #3
 800bc72:	d8b2      	bhi.n	800bbda <HAL_DMA_Init+0x6e>
 800bc74:	a001      	add	r0, pc, #4	@ (adr r0, 800bc7c <HAL_DMA_Init+0x110>)
 800bc76:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 800bc7a:	bf00      	nop
 800bc7c:	0800bc4f 	.word	0x0800bc4f
 800bc80:	0800bc4b 	.word	0x0800bc4b
 800bc84:	0800bc4f 	.word	0x0800bc4f
 800bc88:	0800bc69 	.word	0x0800bc69
 800bc8c:	f010803f 	.word	0xf010803f
 800bc90:	aaaaaaab 	.word	0xaaaaaaab
 800bc94:	08032190 	.word	0x08032190

0800bc98 <HAL_DMA_DeInit>:
  if(hdma == NULL)
 800bc98:	2800      	cmp	r0, #0
 800bc9a:	d036      	beq.n	800bd0a <HAL_DMA_DeInit+0x72>
  if(hdma->State == HAL_DMA_STATE_BUSY)
 800bc9c:	f890 2035 	ldrb.w	r2, [r0, #53]	@ 0x35
 800bca0:	2a02      	cmp	r2, #2
 800bca2:	4603      	mov	r3, r0
 800bca4:	b2d0      	uxtb	r0, r2
 800bca6:	d032      	beq.n	800bd0e <HAL_DMA_DeInit+0x76>
  __HAL_DMA_DISABLE(hdma);
 800bca8:	681a      	ldr	r2, [r3, #0]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 800bcaa:	4919      	ldr	r1, [pc, #100]	@ (800bd10 <HAL_DMA_DeInit+0x78>)
 800bcac:	b2d0      	uxtb	r0, r2
 800bcae:	3810      	subs	r0, #16
{
 800bcb0:	b430      	push	{r4, r5}
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 800bcb2:	fba1 4100 	umull	r4, r1, r1, r0
 800bcb6:	0909      	lsrs	r1, r1, #4
  __HAL_DMA_DISABLE(hdma);
 800bcb8:	6814      	ldr	r4, [r2, #0]
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 800bcba:	4d16      	ldr	r5, [pc, #88]	@ (800bd14 <HAL_DMA_DeInit+0x7c>)
  __HAL_DMA_DISABLE(hdma);
 800bcbc:	f024 0401 	bic.w	r4, r4, #1
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 800bcc0:	5c6d      	ldrb	r5, [r5, r1]
  __HAL_DMA_DISABLE(hdma);
 800bcc2:	6014      	str	r4, [r2, #0]
  hdma->Instance->CR   = 0U;
 800bcc4:	2100      	movs	r1, #0
 800bcc6:	6011      	str	r1, [r2, #0]
  hdma->Instance->NDTR = 0U;
 800bcc8:	6051      	str	r1, [r2, #4]
  hdma->Instance->PAR  = 0U;
 800bcca:	6091      	str	r1, [r2, #8]
  hdma->Instance->M0AR = 0U;
 800bccc:	60d1      	str	r1, [r2, #12]
  hdma->Instance->M1AR = 0U;
 800bcce:	6111      	str	r1, [r2, #16]
  hdma->Instance->FCR  = 0x00000021U;
 800bcd0:	2121      	movs	r1, #33	@ 0x21
 800bcd2:	6151      	str	r1, [r2, #20]
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 800bcd4:	f422 727f 	bic.w	r2, r2, #1020	@ 0x3fc
 800bcd8:	f022 0203 	bic.w	r2, r2, #3
  if (stream_number > 3U)
 800bcdc:	285f      	cmp	r0, #95	@ 0x5f
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 800bcde:	bf88      	it	hi
 800bce0:	3204      	addhi	r2, #4
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800bce2:	243f      	movs	r4, #63	@ 0x3f
  hdma->XferCpltCallback = NULL;
 800bce4:	2100      	movs	r1, #0
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800bce6:	40ac      	lsls	r4, r5
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 800bce8:	65dd      	str	r5, [r3, #92]	@ 0x5c
  hdma->XferHalfCpltCallback = NULL;
 800bcea:	e9c3 110f 	strd	r1, r1, [r3, #60]	@ 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 800bcee:	e9c3 1111 	strd	r1, r1, [r3, #68]	@ 0x44
  hdma->XferErrorCallback = NULL;
 800bcf2:	e9c3 1113 	strd	r1, r1, [r3, #76]	@ 0x4c
 800bcf6:	659a      	str	r2, [r3, #88]	@ 0x58
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800bcf8:	6094      	str	r4, [r2, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800bcfa:	6559      	str	r1, [r3, #84]	@ 0x54
  __HAL_UNLOCK(hdma);
 800bcfc:	f883 1034 	strb.w	r1, [r3, #52]	@ 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 800bd00:	f883 1035 	strb.w	r1, [r3, #53]	@ 0x35
  return HAL_OK;
 800bd04:	4608      	mov	r0, r1
}
 800bd06:	bc30      	pop	{r4, r5}
 800bd08:	4770      	bx	lr
    return HAL_ERROR;
 800bd0a:	2001      	movs	r0, #1
 800bd0c:	4770      	bx	lr
}
 800bd0e:	4770      	bx	lr
 800bd10:	aaaaaaab 	.word	0xaaaaaaab
 800bd14:	08032190 	.word	0x08032190

0800bd18 <HAL_DMA_Start_IT>:
{
 800bd18:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hdma);
 800bd1a:	f890 4034 	ldrb.w	r4, [r0, #52]	@ 0x34
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 800bd1e:	6d85      	ldr	r5, [r0, #88]	@ 0x58
  __HAL_LOCK(hdma);
 800bd20:	2c01      	cmp	r4, #1
 800bd22:	d00a      	beq.n	800bd3a <HAL_DMA_Start_IT+0x22>
  if(HAL_DMA_STATE_READY == hdma->State)
 800bd24:	f890 4035 	ldrb.w	r4, [r0, #53]	@ 0x35
  __HAL_LOCK(hdma);
 800bd28:	f04f 0c01 	mov.w	ip, #1
  if(HAL_DMA_STATE_READY == hdma->State)
 800bd2c:	4564      	cmp	r4, ip
  __HAL_LOCK(hdma);
 800bd2e:	f880 c034 	strb.w	ip, [r0, #52]	@ 0x34
  if(HAL_DMA_STATE_READY == hdma->State)
 800bd32:	d005      	beq.n	800bd40 <HAL_DMA_Start_IT+0x28>
    __HAL_UNLOCK(hdma);	  
 800bd34:	2300      	movs	r3, #0
 800bd36:	f880 3034 	strb.w	r3, [r0, #52]	@ 0x34
  __HAL_LOCK(hdma);
 800bd3a:	2002      	movs	r0, #2
}
 800bd3c:	bc70      	pop	{r4, r5, r6}
 800bd3e:	4770      	bx	lr
    hdma->State = HAL_DMA_STATE_BUSY;
 800bd40:	2602      	movs	r6, #2
 800bd42:	f880 6035 	strb.w	r6, [r0, #53]	@ 0x35
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 800bd46:	6804      	ldr	r4, [r0, #0]
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800bd48:	2600      	movs	r6, #0
 800bd4a:	6546      	str	r6, [r0, #84]	@ 0x54
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 800bd4c:	6826      	ldr	r6, [r4, #0]
 800bd4e:	f426 2680 	bic.w	r6, r6, #262144	@ 0x40000
 800bd52:	6026      	str	r6, [r4, #0]
  hdma->Instance->NDTR = DataLength;
 800bd54:	6063      	str	r3, [r4, #4]
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 800bd56:	6883      	ldr	r3, [r0, #8]
 800bd58:	2b40      	cmp	r3, #64	@ 0x40
    hdma->Instance->PAR = DstAddress;
 800bd5a:	bf0e      	itee	eq
 800bd5c:	60a2      	streq	r2, [r4, #8]
    hdma->Instance->PAR = SrcAddress;
 800bd5e:	60a1      	strne	r1, [r4, #8]
    hdma->Instance->M0AR = DstAddress;
 800bd60:	60e2      	strne	r2, [r4, #12]
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 800bd62:	6dc2      	ldr	r2, [r0, #92]	@ 0x5c
    hdma->Instance->M0AR = SrcAddress;
 800bd64:	bf08      	it	eq
 800bd66:	60e1      	streq	r1, [r4, #12]
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 800bd68:	233f      	movs	r3, #63	@ 0x3f
 800bd6a:	4093      	lsls	r3, r2
 800bd6c:	60ab      	str	r3, [r5, #8]
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 800bd6e:	6823      	ldr	r3, [r4, #0]
    if(hdma->XferHalfCpltCallback != NULL)
 800bd70:	6c02      	ldr	r2, [r0, #64]	@ 0x40
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 800bd72:	f043 0316 	orr.w	r3, r3, #22
 800bd76:	6023      	str	r3, [r4, #0]
    if(hdma->XferHalfCpltCallback != NULL)
 800bd78:	b11a      	cbz	r2, 800bd82 <HAL_DMA_Start_IT+0x6a>
      hdma->Instance->CR  |= DMA_IT_HT;
 800bd7a:	6823      	ldr	r3, [r4, #0]
 800bd7c:	f043 0308 	orr.w	r3, r3, #8
 800bd80:	6023      	str	r3, [r4, #0]
    __HAL_DMA_ENABLE(hdma);
 800bd82:	6823      	ldr	r3, [r4, #0]
 800bd84:	f043 0301 	orr.w	r3, r3, #1
  HAL_StatusTypeDef status = HAL_OK;
 800bd88:	2000      	movs	r0, #0
    __HAL_DMA_ENABLE(hdma);
 800bd8a:	6023      	str	r3, [r4, #0]
}
 800bd8c:	bc70      	pop	{r4, r5, r6}
 800bd8e:	4770      	bx	lr

0800bd90 <HAL_DMA_Abort>:
{
 800bd90:	b570      	push	{r4, r5, r6, lr}
 800bd92:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 800bd94:	6d86      	ldr	r6, [r0, #88]	@ 0x58
  uint32_t tickstart = HAL_GetTick();
 800bd96:	f7ff fe4f 	bl	800ba38 <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800bd9a:	f894 3035 	ldrb.w	r3, [r4, #53]	@ 0x35
 800bd9e:	2b02      	cmp	r3, #2
 800bda0:	d006      	beq.n	800bdb0 <HAL_DMA_Abort+0x20>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800bda2:	2380      	movs	r3, #128	@ 0x80
 800bda4:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hdma);
 800bda6:	2300      	movs	r3, #0
 800bda8:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
    return HAL_ERROR;
 800bdac:	2001      	movs	r0, #1
}
 800bdae:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 800bdb0:	6823      	ldr	r3, [r4, #0]
 800bdb2:	681a      	ldr	r2, [r3, #0]
 800bdb4:	f022 0216 	bic.w	r2, r2, #22
 800bdb8:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 800bdba:	695a      	ldr	r2, [r3, #20]
 800bdbc:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800bdc0:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 800bdc2:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800bdc4:	4605      	mov	r5, r0
 800bdc6:	b342      	cbz	r2, 800be1a <HAL_DMA_Abort+0x8a>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 800bdc8:	681a      	ldr	r2, [r3, #0]
 800bdca:	f022 0208 	bic.w	r2, r2, #8
 800bdce:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 800bdd0:	681a      	ldr	r2, [r3, #0]
 800bdd2:	f022 0201 	bic.w	r2, r2, #1
 800bdd6:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 800bdd8:	e005      	b.n	800bde6 <HAL_DMA_Abort+0x56>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800bdda:	f7ff fe2d 	bl	800ba38 <HAL_GetTick>
 800bdde:	1b43      	subs	r3, r0, r5
 800bde0:	2b05      	cmp	r3, #5
 800bde2:	d810      	bhi.n	800be06 <HAL_DMA_Abort+0x76>
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 800bde4:	6823      	ldr	r3, [r4, #0]
 800bde6:	681b      	ldr	r3, [r3, #0]
 800bde8:	f013 0301 	ands.w	r3, r3, #1
 800bdec:	d1f5      	bne.n	800bdda <HAL_DMA_Abort+0x4a>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 800bdee:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
 800bdf0:	223f      	movs	r2, #63	@ 0x3f
 800bdf2:	408a      	lsls	r2, r1
  return HAL_OK;
 800bdf4:	4618      	mov	r0, r3
    hdma->State = HAL_DMA_STATE_READY;
 800bdf6:	2101      	movs	r1, #1
    __HAL_UNLOCK(hdma);
 800bdf8:	2300      	movs	r3, #0
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 800bdfa:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 800bdfc:	f884 1035 	strb.w	r1, [r4, #53]	@ 0x35
    __HAL_UNLOCK(hdma);
 800be00:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
}
 800be04:	bd70      	pop	{r4, r5, r6, pc}
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800be06:	2303      	movs	r3, #3
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800be08:	2220      	movs	r2, #32
 800be0a:	6562      	str	r2, [r4, #84]	@ 0x54
        return HAL_TIMEOUT;
 800be0c:	4618      	mov	r0, r3
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800be0e:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
    __HAL_UNLOCK(hdma);
 800be12:	2300      	movs	r3, #0
 800be14:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
}
 800be18:	bd70      	pop	{r4, r5, r6, pc}
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 800be1a:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 800be1c:	2a00      	cmp	r2, #0
 800be1e:	d1d3      	bne.n	800bdc8 <HAL_DMA_Abort+0x38>
 800be20:	e7d6      	b.n	800bdd0 <HAL_DMA_Abort+0x40>
 800be22:	bf00      	nop

0800be24 <HAL_DMA_Abort_IT>:
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800be24:	f890 3035 	ldrb.w	r3, [r0, #53]	@ 0x35
 800be28:	2b02      	cmp	r3, #2
 800be2a:	d003      	beq.n	800be34 <HAL_DMA_Abort_IT+0x10>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800be2c:	2380      	movs	r3, #128	@ 0x80
 800be2e:	6543      	str	r3, [r0, #84]	@ 0x54
    return HAL_ERROR;
 800be30:	2001      	movs	r0, #1
 800be32:	4770      	bx	lr
    __HAL_DMA_DISABLE(hdma);
 800be34:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800be36:	2305      	movs	r3, #5
 800be38:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
    __HAL_DMA_DISABLE(hdma);
 800be3c:	6813      	ldr	r3, [r2, #0]
 800be3e:	f023 0301 	bic.w	r3, r3, #1
  return HAL_OK;
 800be42:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 800be44:	6013      	str	r3, [r2, #0]
}
 800be46:	4770      	bx	lr

0800be48 <HAL_DMA_IRQHandler>:
{
 800be48:	b5f0      	push	{r4, r5, r6, r7, lr}
 800be4a:	b083      	sub	sp, #12
  uint32_t timeout = SystemCoreClock / 9600U;
 800be4c:	4a67      	ldr	r2, [pc, #412]	@ (800bfec <HAL_DMA_IRQHandler+0x1a4>)
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 800be4e:	6d87      	ldr	r7, [r0, #88]	@ 0x58
  uint32_t timeout = SystemCoreClock / 9600U;
 800be50:	6816      	ldr	r6, [r2, #0]
  __IO uint32_t count = 0U;
 800be52:	2300      	movs	r3, #0
 800be54:	9301      	str	r3, [sp, #4]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 800be56:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
  tmpisr = regs->ISR;
 800be58:	683d      	ldr	r5, [r7, #0]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 800be5a:	2208      	movs	r2, #8
 800be5c:	409a      	lsls	r2, r3
 800be5e:	422a      	tst	r2, r5
{
 800be60:	4604      	mov	r4, r0
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 800be62:	d003      	beq.n	800be6c <HAL_DMA_IRQHandler+0x24>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 800be64:	6801      	ldr	r1, [r0, #0]
 800be66:	6808      	ldr	r0, [r1, #0]
 800be68:	0740      	lsls	r0, r0, #29
 800be6a:	d478      	bmi.n	800bf5e <HAL_DMA_IRQHandler+0x116>
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 800be6c:	2201      	movs	r2, #1
 800be6e:	409a      	lsls	r2, r3
 800be70:	422a      	tst	r2, r5
 800be72:	d003      	beq.n	800be7c <HAL_DMA_IRQHandler+0x34>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 800be74:	6821      	ldr	r1, [r4, #0]
 800be76:	6949      	ldr	r1, [r1, #20]
 800be78:	0608      	lsls	r0, r1, #24
 800be7a:	d46a      	bmi.n	800bf52 <HAL_DMA_IRQHandler+0x10a>
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 800be7c:	2204      	movs	r2, #4
 800be7e:	409a      	lsls	r2, r3
 800be80:	422a      	tst	r2, r5
 800be82:	d003      	beq.n	800be8c <HAL_DMA_IRQHandler+0x44>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 800be84:	6821      	ldr	r1, [r4, #0]
 800be86:	6809      	ldr	r1, [r1, #0]
 800be88:	0789      	lsls	r1, r1, #30
 800be8a:	d45c      	bmi.n	800bf46 <HAL_DMA_IRQHandler+0xfe>
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 800be8c:	2210      	movs	r2, #16
 800be8e:	409a      	lsls	r2, r3
 800be90:	422a      	tst	r2, r5
 800be92:	d003      	beq.n	800be9c <HAL_DMA_IRQHandler+0x54>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 800be94:	6821      	ldr	r1, [r4, #0]
 800be96:	6808      	ldr	r0, [r1, #0]
 800be98:	0700      	lsls	r0, r0, #28
 800be9a:	d441      	bmi.n	800bf20 <HAL_DMA_IRQHandler+0xd8>
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 800be9c:	2220      	movs	r2, #32
 800be9e:	409a      	lsls	r2, r3
 800bea0:	422a      	tst	r2, r5
 800bea2:	d014      	beq.n	800bece <HAL_DMA_IRQHandler+0x86>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 800bea4:	6821      	ldr	r1, [r4, #0]
 800bea6:	6808      	ldr	r0, [r1, #0]
 800bea8:	06c0      	lsls	r0, r0, #27
 800beaa:	d510      	bpl.n	800bece <HAL_DMA_IRQHandler+0x86>
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 800beac:	60ba      	str	r2, [r7, #8]
      if(HAL_DMA_STATE_ABORT == hdma->State)
 800beae:	f894 2035 	ldrb.w	r2, [r4, #53]	@ 0x35
 800beb2:	2a05      	cmp	r2, #5
 800beb4:	d063      	beq.n	800bf7e <HAL_DMA_IRQHandler+0x136>
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 800beb6:	680b      	ldr	r3, [r1, #0]
 800beb8:	f413 2f80 	tst.w	r3, #262144	@ 0x40000
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 800bebc:	680b      	ldr	r3, [r1, #0]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 800bebe:	d07e      	beq.n	800bfbe <HAL_DMA_IRQHandler+0x176>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 800bec0:	0319      	lsls	r1, r3, #12
 800bec2:	f140 8089 	bpl.w	800bfd8 <HAL_DMA_IRQHandler+0x190>
        if(hdma->XferCpltCallback != NULL)
 800bec6:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800bec8:	b10b      	cbz	r3, 800bece <HAL_DMA_IRQHandler+0x86>
          hdma->XferCpltCallback(hdma);
 800beca:	4620      	mov	r0, r4
 800becc:	4798      	blx	r3
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 800bece:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800bed0:	b323      	cbz	r3, 800bf1c <HAL_DMA_IRQHandler+0xd4>
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 800bed2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800bed4:	07da      	lsls	r2, r3, #31
 800bed6:	d51a      	bpl.n	800bf0e <HAL_DMA_IRQHandler+0xc6>
      __HAL_DMA_DISABLE(hdma);
 800bed8:	6822      	ldr	r2, [r4, #0]
  uint32_t timeout = SystemCoreClock / 9600U;
 800beda:	4945      	ldr	r1, [pc, #276]	@ (800bff0 <HAL_DMA_IRQHandler+0x1a8>)
      hdma->State = HAL_DMA_STATE_ABORT;
 800bedc:	2305      	movs	r3, #5
 800bede:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
      __HAL_DMA_DISABLE(hdma);
 800bee2:	6813      	ldr	r3, [r2, #0]
  uint32_t timeout = SystemCoreClock / 9600U;
 800bee4:	fba1 1606 	umull	r1, r6, r1, r6
      __HAL_DMA_DISABLE(hdma);
 800bee8:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
 800beec:	0ab6      	lsrs	r6, r6, #10
      __HAL_DMA_DISABLE(hdma);
 800beee:	6013      	str	r3, [r2, #0]
 800bef0:	e002      	b.n	800bef8 <HAL_DMA_IRQHandler+0xb0>
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 800bef2:	6813      	ldr	r3, [r2, #0]
 800bef4:	07db      	lsls	r3, r3, #31
 800bef6:	d504      	bpl.n	800bf02 <HAL_DMA_IRQHandler+0xba>
        if (++count > timeout)
 800bef8:	9b01      	ldr	r3, [sp, #4]
 800befa:	3301      	adds	r3, #1
 800befc:	42b3      	cmp	r3, r6
 800befe:	9301      	str	r3, [sp, #4]
 800bf00:	d9f7      	bls.n	800bef2 <HAL_DMA_IRQHandler+0xaa>
      hdma->State = HAL_DMA_STATE_READY;
 800bf02:	2201      	movs	r2, #1
      __HAL_UNLOCK(hdma);
 800bf04:	2300      	movs	r3, #0
      hdma->State = HAL_DMA_STATE_READY;
 800bf06:	f884 2035 	strb.w	r2, [r4, #53]	@ 0x35
      __HAL_UNLOCK(hdma);
 800bf0a:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
    if(hdma->XferErrorCallback != NULL)
 800bf0e:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800bf10:	b123      	cbz	r3, 800bf1c <HAL_DMA_IRQHandler+0xd4>
      hdma->XferErrorCallback(hdma);
 800bf12:	4620      	mov	r0, r4
}
 800bf14:	b003      	add	sp, #12
 800bf16:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
      hdma->XferErrorCallback(hdma);
 800bf1a:	4718      	bx	r3
}
 800bf1c:	b003      	add	sp, #12
 800bf1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 800bf20:	60ba      	str	r2, [r7, #8]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 800bf22:	680a      	ldr	r2, [r1, #0]
 800bf24:	f412 2f80 	tst.w	r2, #262144	@ 0x40000
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 800bf28:	680a      	ldr	r2, [r1, #0]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 800bf2a:	d122      	bne.n	800bf72 <HAL_DMA_IRQHandler+0x12a>
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 800bf2c:	05d2      	lsls	r2, r2, #23
 800bf2e:	d403      	bmi.n	800bf38 <HAL_DMA_IRQHandler+0xf0>
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 800bf30:	680a      	ldr	r2, [r1, #0]
 800bf32:	f022 0208 	bic.w	r2, r2, #8
 800bf36:	600a      	str	r2, [r1, #0]
        if(hdma->XferHalfCpltCallback != NULL)
 800bf38:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800bf3a:	2a00      	cmp	r2, #0
 800bf3c:	d0ae      	beq.n	800be9c <HAL_DMA_IRQHandler+0x54>
          hdma->XferHalfCpltCallback(hdma);
 800bf3e:	4620      	mov	r0, r4
 800bf40:	4790      	blx	r2
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 800bf42:	6de3      	ldr	r3, [r4, #92]	@ 0x5c
 800bf44:	e7aa      	b.n	800be9c <HAL_DMA_IRQHandler+0x54>
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 800bf46:	60ba      	str	r2, [r7, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 800bf48:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800bf4a:	f042 0204 	orr.w	r2, r2, #4
 800bf4e:	6562      	str	r2, [r4, #84]	@ 0x54
 800bf50:	e79c      	b.n	800be8c <HAL_DMA_IRQHandler+0x44>
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 800bf52:	60ba      	str	r2, [r7, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 800bf54:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800bf56:	f042 0202 	orr.w	r2, r2, #2
 800bf5a:	6562      	str	r2, [r4, #84]	@ 0x54
 800bf5c:	e78e      	b.n	800be7c <HAL_DMA_IRQHandler+0x34>
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 800bf5e:	6808      	ldr	r0, [r1, #0]
 800bf60:	f020 0004 	bic.w	r0, r0, #4
 800bf64:	6008      	str	r0, [r1, #0]
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 800bf66:	60ba      	str	r2, [r7, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 800bf68:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800bf6a:	f042 0201 	orr.w	r2, r2, #1
 800bf6e:	6562      	str	r2, [r4, #84]	@ 0x54
 800bf70:	e77c      	b.n	800be6c <HAL_DMA_IRQHandler+0x24>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 800bf72:	0311      	lsls	r1, r2, #12
 800bf74:	d5e0      	bpl.n	800bf38 <HAL_DMA_IRQHandler+0xf0>
          if(hdma->XferM1HalfCpltCallback != NULL)
 800bf76:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 800bf78:	2a00      	cmp	r2, #0
 800bf7a:	d1e0      	bne.n	800bf3e <HAL_DMA_IRQHandler+0xf6>
 800bf7c:	e78e      	b.n	800be9c <HAL_DMA_IRQHandler+0x54>
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 800bf7e:	680a      	ldr	r2, [r1, #0]
 800bf80:	f022 0216 	bic.w	r2, r2, #22
 800bf84:	600a      	str	r2, [r1, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 800bf86:	694a      	ldr	r2, [r1, #20]
 800bf88:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800bf8c:	614a      	str	r2, [r1, #20]
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 800bf8e:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800bf90:	b33a      	cbz	r2, 800bfe2 <HAL_DMA_IRQHandler+0x19a>
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 800bf92:	680a      	ldr	r2, [r1, #0]
 800bf94:	f022 0208 	bic.w	r2, r2, #8
 800bf98:	600a      	str	r2, [r1, #0]
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 800bf9a:	223f      	movs	r2, #63	@ 0x3f
 800bf9c:	fa02 f303 	lsl.w	r3, r2, r3
        if(hdma->XferAbortCallback != NULL)
 800bfa0:	6d21      	ldr	r1, [r4, #80]	@ 0x50
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 800bfa2:	60bb      	str	r3, [r7, #8]
        hdma->State = HAL_DMA_STATE_READY;
 800bfa4:	2201      	movs	r2, #1
        __HAL_UNLOCK(hdma);
 800bfa6:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_READY;
 800bfa8:	f884 2035 	strb.w	r2, [r4, #53]	@ 0x35
        __HAL_UNLOCK(hdma);
 800bfac:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
        if(hdma->XferAbortCallback != NULL)
 800bfb0:	2900      	cmp	r1, #0
 800bfb2:	d0b3      	beq.n	800bf1c <HAL_DMA_IRQHandler+0xd4>
          hdma->XferAbortCallback(hdma);
 800bfb4:	4620      	mov	r0, r4
}
 800bfb6:	b003      	add	sp, #12
 800bfb8:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
          hdma->XferAbortCallback(hdma);
 800bfbc:	4708      	bx	r1
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 800bfbe:	f413 7380 	ands.w	r3, r3, #256	@ 0x100
 800bfc2:	d180      	bne.n	800bec6 <HAL_DMA_IRQHandler+0x7e>
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 800bfc4:	680a      	ldr	r2, [r1, #0]
 800bfc6:	f022 0210 	bic.w	r2, r2, #16
 800bfca:	600a      	str	r2, [r1, #0]
          hdma->State = HAL_DMA_STATE_READY;
 800bfcc:	2201      	movs	r2, #1
 800bfce:	f884 2035 	strb.w	r2, [r4, #53]	@ 0x35
          __HAL_UNLOCK(hdma);
 800bfd2:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
 800bfd6:	e776      	b.n	800bec6 <HAL_DMA_IRQHandler+0x7e>
          if(hdma->XferM1CpltCallback != NULL)
 800bfd8:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800bfda:	2b00      	cmp	r3, #0
 800bfdc:	f47f af75 	bne.w	800beca <HAL_DMA_IRQHandler+0x82>
 800bfe0:	e775      	b.n	800bece <HAL_DMA_IRQHandler+0x86>
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 800bfe2:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 800bfe4:	2a00      	cmp	r2, #0
 800bfe6:	d1d4      	bne.n	800bf92 <HAL_DMA_IRQHandler+0x14a>
 800bfe8:	e7d7      	b.n	800bf9a <HAL_DMA_IRQHandler+0x152>
 800bfea:	bf00      	nop
 800bfec:	20000038 	.word	0x20000038
 800bff0:	1b4e81b5 	.word	0x1b4e81b5

0800bff4 <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 800bff4:	b348      	cbz	r0, 800c04a <HAL_DMA2D_Init+0x56>
{
 800bff6:	b510      	push	{r4, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 800bff8:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 800bffc:	4604      	mov	r4, r0
 800bffe:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800c002:	b1eb      	cbz	r3, 800c040 <HAL_DMA2D_Init+0x4c>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800c004:	6822      	ldr	r2, [r4, #0]
 800c006:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800c008:	2302      	movs	r3, #2
 800c00a:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800c00e:	6813      	ldr	r3, [r2, #0]
 800c010:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 800c014:	430b      	orrs	r3, r1
 800c016:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800c018:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 800c01a:	68a1      	ldr	r1, [r4, #8]
 800c01c:	f023 0307 	bic.w	r3, r3, #7
 800c020:	430b      	orrs	r3, r1
 800c022:	6353      	str	r3, [r2, #52]	@ 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800c024:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 800c026:	68e1      	ldr	r1, [r4, #12]
 800c028:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 800c02c:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 800c030:	430b      	orrs	r3, r1
 800c032:	6413      	str	r3, [r2, #64]	@ 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800c034:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800c036:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800c038:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800c03a:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 800c03e:	bd10      	pop	{r4, pc}
    hdma2d->Lock = HAL_UNLOCKED;
 800c040:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    HAL_DMA2D_MspInit(hdma2d);
 800c044:	f7f7 feec 	bl	8003e20 <HAL_DMA2D_MspInit>
 800c048:	e7dc      	b.n	800c004 <HAL_DMA2D_Init+0x10>
    return HAL_ERROR;
 800c04a:	2001      	movs	r0, #1
}
 800c04c:	4770      	bx	lr
 800c04e:	bf00      	nop

0800c050 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 800c050:	4770      	bx	lr
 800c052:	bf00      	nop

0800c054 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 800c054:	4770      	bx	lr
 800c056:	bf00      	nop

0800c058 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800c058:	6803      	ldr	r3, [r0, #0]
{
 800c05a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800c05c:	685d      	ldr	r5, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800c05e:	681e      	ldr	r6, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800c060:	07ea      	lsls	r2, r5, #31
{
 800c062:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800c064:	d501      	bpl.n	800c06a <HAL_DMA2D_IRQHandler+0x12>
    if ((crflags & DMA2D_IT_TE) != 0U)
 800c066:	05f1      	lsls	r1, r6, #23
 800c068:	d457      	bmi.n	800c11a <HAL_DMA2D_IRQHandler+0xc2>
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 800c06a:	06aa      	lsls	r2, r5, #26
 800c06c:	d501      	bpl.n	800c072 <HAL_DMA2D_IRQHandler+0x1a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 800c06e:	04b3      	lsls	r3, r6, #18
 800c070:	d43c      	bmi.n	800c0ec <HAL_DMA2D_IRQHandler+0x94>
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 800c072:	0728      	lsls	r0, r5, #28
 800c074:	d501      	bpl.n	800c07a <HAL_DMA2D_IRQHandler+0x22>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 800c076:	0531      	lsls	r1, r6, #20
 800c078:	d421      	bmi.n	800c0be <HAL_DMA2D_IRQHandler+0x66>
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 800c07a:	076a      	lsls	r2, r5, #29
 800c07c:	d501      	bpl.n	800c082 <HAL_DMA2D_IRQHandler+0x2a>
    if ((crflags & DMA2D_IT_TW) != 0U)
 800c07e:	0573      	lsls	r3, r6, #21
 800c080:	d473      	bmi.n	800c16a <HAL_DMA2D_IRQHandler+0x112>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 800c082:	07a8      	lsls	r0, r5, #30
 800c084:	d501      	bpl.n	800c08a <HAL_DMA2D_IRQHandler+0x32>
    if ((crflags & DMA2D_IT_TC) != 0U)
 800c086:	05b1      	lsls	r1, r6, #22
 800c088:	d404      	bmi.n	800c094 <HAL_DMA2D_IRQHandler+0x3c>
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 800c08a:	06ea      	lsls	r2, r5, #27
 800c08c:	d501      	bpl.n	800c092 <HAL_DMA2D_IRQHandler+0x3a>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 800c08e:	04f3      	lsls	r3, r6, #19
 800c090:	d458      	bmi.n	800c144 <HAL_DMA2D_IRQHandler+0xec>
}
 800c092:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800c094:	6823      	ldr	r3, [r4, #0]
 800c096:	681a      	ldr	r2, [r3, #0]
 800c098:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 800c09c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 800c09e:	2202      	movs	r2, #2
 800c0a0:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800c0a2:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 800c0a4:	63e2      	str	r2, [r4, #60]	@ 0x3c
      if (hdma2d->XferCpltCallback != NULL)
 800c0a6:	6923      	ldr	r3, [r4, #16]
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800c0a8:	2201      	movs	r2, #1
 800c0aa:	f884 2039 	strb.w	r2, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 800c0ae:	2200      	movs	r2, #0
 800c0b0:	f884 2038 	strb.w	r2, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 800c0b4:	2b00      	cmp	r3, #0
 800c0b6:	d0e8      	beq.n	800c08a <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
 800c0b8:	4620      	mov	r0, r4
 800c0ba:	4798      	blx	r3
 800c0bc:	e7e5      	b.n	800c08a <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800c0be:	6823      	ldr	r3, [r4, #0]
 800c0c0:	681a      	ldr	r2, [r3, #0]
 800c0c2:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800c0c6:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 800c0c8:	2208      	movs	r2, #8
 800c0ca:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800c0cc:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
      if (hdma2d->XferErrorCallback != NULL)
 800c0ce:	6962      	ldr	r2, [r4, #20]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800c0d0:	f043 0304 	orr.w	r3, r3, #4
 800c0d4:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800c0d6:	2104      	movs	r1, #4
      __HAL_UNLOCK(hdma2d);
 800c0d8:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800c0da:	f884 1039 	strb.w	r1, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 800c0de:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 800c0e2:	2a00      	cmp	r2, #0
 800c0e4:	d0c9      	beq.n	800c07a <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
 800c0e6:	4620      	mov	r0, r4
 800c0e8:	4790      	blx	r2
 800c0ea:	e7c6      	b.n	800c07a <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 800c0ec:	6823      	ldr	r3, [r4, #0]
 800c0ee:	681a      	ldr	r2, [r3, #0]
 800c0f0:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800c0f4:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 800c0f6:	2220      	movs	r2, #32
 800c0f8:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 800c0fa:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
      if (hdma2d->XferErrorCallback != NULL)
 800c0fc:	6962      	ldr	r2, [r4, #20]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 800c0fe:	f043 0302 	orr.w	r3, r3, #2
 800c102:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800c104:	2104      	movs	r1, #4
      __HAL_UNLOCK(hdma2d);
 800c106:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800c108:	f884 1039 	strb.w	r1, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 800c10c:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 800c110:	2a00      	cmp	r2, #0
 800c112:	d0ae      	beq.n	800c072 <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
 800c114:	4620      	mov	r0, r4
 800c116:	4790      	blx	r2
 800c118:	e7ab      	b.n	800c072 <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 800c11a:	681a      	ldr	r2, [r3, #0]
 800c11c:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800c120:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 800c122:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800c124:	2101      	movs	r1, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 800c126:	f042 0201 	orr.w	r2, r2, #1
 800c12a:	63c2      	str	r2, [r0, #60]	@ 0x3c
      if (hdma2d->XferErrorCallback != NULL)
 800c12c:	6942      	ldr	r2, [r0, #20]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800c12e:	6099      	str	r1, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800c130:	2304      	movs	r3, #4
 800c132:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 800c136:	2300      	movs	r3, #0
 800c138:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 800c13c:	2a00      	cmp	r2, #0
 800c13e:	d094      	beq.n	800c06a <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
 800c140:	4790      	blx	r2
 800c142:	e792      	b.n	800c06a <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800c144:	6823      	ldr	r3, [r4, #0]
 800c146:	681a      	ldr	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 800c148:	2010      	movs	r0, #16
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800c14a:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 800c14e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 800c150:	6098      	str	r0, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800c152:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 800c154:	63e2      	str	r2, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800c156:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
 800c158:	2300      	movs	r3, #0
 800c15a:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800c15e:	f884 1039 	strb.w	r1, [r4, #57]	@ 0x39
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 800c162:	4620      	mov	r0, r4
 800c164:	f7ff ff76 	bl	800c054 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 800c168:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800c16a:	6823      	ldr	r3, [r4, #0]
 800c16c:	681a      	ldr	r2, [r3, #0]
 800c16e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800c172:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800c174:	2204      	movs	r2, #4
 800c176:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 800c178:	4620      	mov	r0, r4
 800c17a:	f7ff ff69 	bl	800c050 <HAL_DMA2D_LineEventCallback>
 800c17e:	e780      	b.n	800c082 <HAL_DMA2D_IRQHandler+0x2a>

0800c180 <HAL_DMA2D_ConfigLayer>:
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800c180:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
 800c184:	2a01      	cmp	r2, #1
 800c186:	d04c      	beq.n	800c222 <HAL_DMA2D_ConfigLayer+0xa2>
 800c188:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800c18a:	eb00 1c01 	add.w	ip, r0, r1, lsl #4
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800c18e:	2202      	movs	r2, #2
  __HAL_LOCK(hdma2d);
 800c190:	2001      	movs	r0, #1
{
 800c192:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hdma2d);
 800c194:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800c198:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800c19c:	e9dc 0207 	ldrd	r0, r2, [ip, #28]
 800c1a0:	ea40 4202 	orr.w	r2, r0, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800c1a4:	3809      	subs	r0, #9
 800c1a6:	2801      	cmp	r0, #1

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800c1a8:	681c      	ldr	r4, [r3, #0]
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800c1aa:	d91c      	bls.n	800c1e6 <HAL_DMA2D_ConfigLayer+0x66>
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 800c1ac:	f8dc 0024 	ldr.w	r0, [ip, #36]	@ 0x24
 800c1b0:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 800c1b4:	b179      	cbz	r1, 800c1d6 <HAL_DMA2D_ConfigLayer+0x56>
  else
  {


    /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800c1b6:	69e5      	ldr	r5, [r4, #28]
 800c1b8:	491b      	ldr	r1, [pc, #108]	@ (800c228 <HAL_DMA2D_ConfigLayer+0xa8>)

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800c1ba:	f8dc 0018 	ldr.w	r0, [ip, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800c1be:	4029      	ands	r1, r5
 800c1c0:	4311      	orrs	r1, r2
 800c1c2:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800c1c4:	6120      	str	r0, [r4, #16]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800c1c6:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800c1c8:	2201      	movs	r2, #1
 800c1ca:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 800c1ce:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 800c1d2:	bc70      	pop	{r4, r5, r6}
 800c1d4:	4770      	bx	lr
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800c1d6:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800c1d8:	4913      	ldr	r1, [pc, #76]	@ (800c228 <HAL_DMA2D_ConfigLayer+0xa8>)
 800c1da:	4001      	ands	r1, r0
 800c1dc:	4311      	orrs	r1, r2
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800c1de:	6998      	ldr	r0, [r3, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800c1e0:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800c1e2:	61a0      	str	r0, [r4, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800c1e4:	e7ef      	b.n	800c1c6 <HAL_DMA2D_ConfigLayer+0x46>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800c1e6:	f8dc 5024 	ldr.w	r5, [ip, #36]	@ 0x24
 800c1ea:	f005 407f 	and.w	r0, r5, #4278190080	@ 0xff000000
 800c1ee:	4302      	orrs	r2, r0
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 800c1f0:	b959      	cbnz	r1, 800c20a <HAL_DMA2D_ConfigLayer+0x8a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800c1f2:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800c1f4:	490c      	ldr	r1, [pc, #48]	@ (800c228 <HAL_DMA2D_ConfigLayer+0xa8>)
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800c1f6:	699d      	ldr	r5, [r3, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800c1f8:	4001      	ands	r1, r0
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800c1fa:	6a58      	ldr	r0, [r3, #36]	@ 0x24
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800c1fc:	4311      	orrs	r1, r2
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800c1fe:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800c202:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800c204:	61a5      	str	r5, [r4, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800c206:	62a0      	str	r0, [r4, #40]	@ 0x28
 800c208:	e7dd      	b.n	800c1c6 <HAL_DMA2D_ConfigLayer+0x46>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800c20a:	69e6      	ldr	r6, [r4, #28]
 800c20c:	4906      	ldr	r1, [pc, #24]	@ (800c228 <HAL_DMA2D_ConfigLayer+0xa8>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800c20e:	f8dc 0018 	ldr.w	r0, [ip, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800c212:	4031      	ands	r1, r6
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 800c214:	f025 457f 	bic.w	r5, r5, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800c218:	4311      	orrs	r1, r2
 800c21a:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800c21c:	6120      	str	r0, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 800c21e:	6225      	str	r5, [r4, #32]
 800c220:	e7d1      	b.n	800c1c6 <HAL_DMA2D_ConfigLayer+0x46>
  __HAL_LOCK(hdma2d);
 800c222:	2002      	movs	r0, #2
}
 800c224:	4770      	bx	lr
 800c226:	bf00      	nop
 800c228:	00fcfff0 	.word	0x00fcfff0

0800c22c <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800c22c:	7c03      	ldrb	r3, [r0, #16]
 800c22e:	2b01      	cmp	r3, #1
{
 800c230:	4684      	mov	ip, r0
  __HAL_LOCK(hdsi);
 800c232:	d05c      	beq.n	800c2ee <HAL_DSI_ConfigErrorMonitor+0xc2>

  hdsi->Instance->IER[0U] = 0U;
 800c234:	6802      	ldr	r2, [r0, #0]
 800c236:	2300      	movs	r3, #0
 800c238:	f8c2 30c4 	str.w	r3, [r2, #196]	@ 0xc4
  hdsi->Instance->IER[1U] = 0U;
 800c23c:	f8c2 30c8 	str.w	r3, [r2, #200]	@ 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;
 800c240:	6181      	str	r1, [r0, #24]

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 800c242:	07c8      	lsls	r0, r1, #31
 800c244:	d507      	bpl.n	800c256 <HAL_DSI_ConfigErrorMonitor+0x2a>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 800c246:	f8d2 30c4 	ldr.w	r3, [r2, #196]	@ 0xc4
 800c24a:	ea6f 4313 	mvn.w	r3, r3, lsr #16
 800c24e:	ea6f 4303 	mvn.w	r3, r3, lsl #16
 800c252:	f8c2 30c4 	str.w	r3, [r2, #196]	@ 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 800c256:	078b      	lsls	r3, r1, #30
 800c258:	d505      	bpl.n	800c266 <HAL_DSI_ConfigErrorMonitor+0x3a>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 800c25a:	f8d2 30c4 	ldr.w	r3, [r2, #196]	@ 0xc4
 800c25e:	f443 13f8 	orr.w	r3, r3, #2031616	@ 0x1f0000
 800c262:	f8c2 30c4 	str.w	r3, [r2, #196]	@ 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 800c266:	0748      	lsls	r0, r1, #29
 800c268:	d505      	bpl.n	800c276 <HAL_DSI_ConfigErrorMonitor+0x4a>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 800c26a:	f8d2 30c8 	ldr.w	r3, [r2, #200]	@ 0xc8
 800c26e:	f043 0301 	orr.w	r3, r3, #1
 800c272:	f8c2 30c8 	str.w	r3, [r2, #200]	@ 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 800c276:	070b      	lsls	r3, r1, #28
 800c278:	d505      	bpl.n	800c286 <HAL_DSI_ConfigErrorMonitor+0x5a>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 800c27a:	f8d2 30c8 	ldr.w	r3, [r2, #200]	@ 0xc8
 800c27e:	f043 0302 	orr.w	r3, r3, #2
 800c282:	f8c2 30c8 	str.w	r3, [r2, #200]	@ 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 800c286:	06c8      	lsls	r0, r1, #27
 800c288:	d505      	bpl.n	800c296 <HAL_DSI_ConfigErrorMonitor+0x6a>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 800c28a:	f8d2 30c8 	ldr.w	r3, [r2, #200]	@ 0xc8
 800c28e:	f043 030c 	orr.w	r3, r3, #12
 800c292:	f8c2 30c8 	str.w	r3, [r2, #200]	@ 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 800c296:	068b      	lsls	r3, r1, #26
 800c298:	d505      	bpl.n	800c2a6 <HAL_DSI_ConfigErrorMonitor+0x7a>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 800c29a:	f8d2 30c8 	ldr.w	r3, [r2, #200]	@ 0xc8
 800c29e:	f043 0310 	orr.w	r3, r3, #16
 800c2a2:	f8c2 30c8 	str.w	r3, [r2, #200]	@ 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 800c2a6:	0648      	lsls	r0, r1, #25
 800c2a8:	d505      	bpl.n	800c2b6 <HAL_DSI_ConfigErrorMonitor+0x8a>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 800c2aa:	f8d2 30c8 	ldr.w	r3, [r2, #200]	@ 0xc8
 800c2ae:	f043 0320 	orr.w	r3, r3, #32
 800c2b2:	f8c2 30c8 	str.w	r3, [r2, #200]	@ 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 800c2b6:	060b      	lsls	r3, r1, #24
 800c2b8:	d505      	bpl.n	800c2c6 <HAL_DSI_ConfigErrorMonitor+0x9a>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 800c2ba:	f8d2 30c8 	ldr.w	r3, [r2, #200]	@ 0xc8
 800c2be:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800c2c2:	f8c2 30c8 	str.w	r3, [r2, #200]	@ 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 800c2c6:	05c8      	lsls	r0, r1, #23
 800c2c8:	d505      	bpl.n	800c2d6 <HAL_DSI_ConfigErrorMonitor+0xaa>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 800c2ca:	f8d2 30c8 	ldr.w	r3, [r2, #200]	@ 0xc8
 800c2ce:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c2d2:	f8c2 30c8 	str.w	r3, [r2, #200]	@ 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 800c2d6:	058b      	lsls	r3, r1, #22
 800c2d8:	d505      	bpl.n	800c2e6 <HAL_DSI_ConfigErrorMonitor+0xba>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 800c2da:	f8d2 30c8 	ldr.w	r3, [r2, #200]	@ 0xc8
 800c2de:	f443 53f8 	orr.w	r3, r3, #7936	@ 0x1f00
 800c2e2:	f8c2 30c8 	str.w	r3, [r2, #200]	@ 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 800c2e6:	2000      	movs	r0, #0
 800c2e8:	f88c 0010 	strb.w	r0, [ip, #16]

  return HAL_OK;
 800c2ec:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800c2ee:	2002      	movs	r0, #2
}
 800c2f0:	4770      	bx	lr
 800c2f2:	bf00      	nop

0800c2f4 <HAL_DSI_Init>:
  if (hdsi == NULL)
 800c2f4:	2800      	cmp	r0, #0
 800c2f6:	f000 80f5 	beq.w	800c4e4 <HAL_DSI_Init+0x1f0>
{
 800c2fa:	b570      	push	{r4, r5, r6, lr}
  if (hdsi->State == HAL_DSI_STATE_RESET)
 800c2fc:	7c43      	ldrb	r3, [r0, #17]
{
 800c2fe:	b084      	sub	sp, #16
 800c300:	460d      	mov	r5, r1
 800c302:	4604      	mov	r4, r0
  if (hdsi->State == HAL_DSI_STATE_RESET)
 800c304:	2b00      	cmp	r3, #0
 800c306:	f000 80ea 	beq.w	800c4de <HAL_DSI_Init+0x1ea>
  __HAL_DSI_REG_ENABLE(hdsi);
 800c30a:	6823      	ldr	r3, [r4, #0]
  hdsi->State = HAL_DSI_STATE_BUSY;
 800c30c:	2103      	movs	r1, #3
  __HAL_DSI_REG_ENABLE(hdsi);
 800c30e:	2200      	movs	r2, #0
  hdsi->State = HAL_DSI_STATE_BUSY;
 800c310:	7461      	strb	r1, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 800c312:	9200      	str	r2, [sp, #0]
 800c314:	f8d3 2430 	ldr.w	r2, [r3, #1072]	@ 0x430
 800c318:	f042 7280 	orr.w	r2, r2, #16777216	@ 0x1000000
 800c31c:	f8c3 2430 	str.w	r2, [r3, #1072]	@ 0x430
 800c320:	f8d3 3430 	ldr.w	r3, [r3, #1072]	@ 0x430
 800c324:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800c328:	9300      	str	r3, [sp, #0]
 800c32a:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 800c32c:	f7ff fb84 	bl	800ba38 <HAL_GetTick>
 800c330:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 800c332:	e006      	b.n	800c342 <HAL_DSI_Init+0x4e>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800c334:	f7ff fb80 	bl	800ba38 <HAL_GetTick>
 800c338:	1b80      	subs	r0, r0, r6
 800c33a:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 800c33e:	f200 80d5 	bhi.w	800c4ec <HAL_DSI_Init+0x1f8>
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 800c342:	6823      	ldr	r3, [r4, #0]
 800c344:	f8d3 240c 	ldr.w	r2, [r3, #1036]	@ 0x40c
 800c348:	04d0      	lsls	r0, r2, #19
 800c34a:	d5f3      	bpl.n	800c334 <HAL_DSI_Init+0x40>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 800c34c:	f8d3 2430 	ldr.w	r2, [r3, #1072]	@ 0x430
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 800c350:	6828      	ldr	r0, [r5, #0]
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 800c352:	f422 325e 	bic.w	r2, r2, #227328	@ 0x37800
 800c356:	f422 72fe 	bic.w	r2, r2, #508	@ 0x1fc
 800c35a:	f8c3 2430 	str.w	r2, [r3, #1072]	@ 0x430
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 800c35e:	686a      	ldr	r2, [r5, #4]
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 800c360:	f8d3 1430 	ldr.w	r1, [r3, #1072]	@ 0x430
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 800c364:	02d2      	lsls	r2, r2, #11
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 800c366:	ea42 0280 	orr.w	r2, r2, r0, lsl #2
                            ((PLLInit->PLLODF) << DSI_WRPCR_PLL_ODF_Pos));
 800c36a:	68a8      	ldr	r0, [r5, #8]
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 800c36c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 800c370:	430a      	orrs	r2, r1
  __HAL_DSI_PLL_ENABLE(hdsi);
 800c372:	2100      	movs	r1, #0
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 800c374:	f8c3 2430 	str.w	r2, [r3, #1072]	@ 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 800c378:	9101      	str	r1, [sp, #4]
 800c37a:	f8d3 2430 	ldr.w	r2, [r3, #1072]	@ 0x430
  HAL_Delay(1);
 800c37e:	2001      	movs	r0, #1
  __HAL_DSI_PLL_ENABLE(hdsi);
 800c380:	4302      	orrs	r2, r0
 800c382:	f8c3 2430 	str.w	r2, [r3, #1072]	@ 0x430
 800c386:	f8d3 3430 	ldr.w	r3, [r3, #1072]	@ 0x430
 800c38a:	4003      	ands	r3, r0
 800c38c:	9301      	str	r3, [sp, #4]
 800c38e:	9b01      	ldr	r3, [sp, #4]
  HAL_Delay(1);
 800c390:	f7ff fb58 	bl	800ba44 <HAL_Delay>
  tickstart = HAL_GetTick();
 800c394:	f7ff fb50 	bl	800ba38 <HAL_GetTick>
 800c398:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 800c39a:	e006      	b.n	800c3aa <HAL_DSI_Init+0xb6>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800c39c:	f7ff fb4c 	bl	800ba38 <HAL_GetTick>
 800c3a0:	1b80      	subs	r0, r0, r6
 800c3a2:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 800c3a6:	f200 80a1 	bhi.w	800c4ec <HAL_DSI_Init+0x1f8>
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 800c3aa:	6823      	ldr	r3, [r4, #0]
 800c3ac:	f8d3 240c 	ldr.w	r2, [r3, #1036]	@ 0x40c
 800c3b0:	05d1      	lsls	r1, r2, #23
 800c3b2:	d5f3      	bpl.n	800c39c <HAL_DSI_Init+0xa8>
  __HAL_DSI_ENABLE(hdsi);
 800c3b4:	2200      	movs	r2, #0
 800c3b6:	9202      	str	r2, [sp, #8]
 800c3b8:	685a      	ldr	r2, [r3, #4]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 800c3ba:	68a1      	ldr	r1, [r4, #8]
  __HAL_DSI_ENABLE(hdsi);
 800c3bc:	f042 0201 	orr.w	r2, r2, #1
 800c3c0:	605a      	str	r2, [r3, #4]
 800c3c2:	685a      	ldr	r2, [r3, #4]
 800c3c4:	f002 0201 	and.w	r2, r2, #1
 800c3c8:	9202      	str	r2, [sp, #8]
 800c3ca:	9a02      	ldr	r2, [sp, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 800c3cc:	689a      	ldr	r2, [r3, #8]
 800c3ce:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 800c3d2:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 800c3d4:	689a      	ldr	r2, [r3, #8]
 800c3d6:	430a      	orrs	r2, r1
 800c3d8:	609a      	str	r2, [r3, #8]
  hdsi->Instance->PCTLR |= DSI_PCTLR_DEN;
 800c3da:	f8d3 20a0 	ldr.w	r2, [r3, #160]	@ 0xa0
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 800c3de:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->PCTLR |= DSI_PCTLR_DEN;
 800c3e0:	f042 0202 	orr.w	r2, r2, #2
 800c3e4:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
  hdsi->Instance->PCTLR |= DSI_PCTLR_CKE;
 800c3e8:	f8d3 20a0 	ldr.w	r2, [r3, #160]	@ 0xa0
 800c3ec:	f042 0204 	orr.w	r2, r2, #4
 800c3f0:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 800c3f4:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
 800c3f8:	f022 0203 	bic.w	r2, r2, #3
 800c3fc:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 800c400:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
 800c404:	430a      	orrs	r2, r1
 800c406:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
  tickstart = HAL_GetTick();
 800c40a:	f7ff fb15 	bl	800ba38 <HAL_GetTick>
  if ((hdsi->Instance->PCONFR & DSI_PCONFR_NL) == DSI_ONE_DATA_LANE)
 800c40e:	6823      	ldr	r3, [r4, #0]
 800c410:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
 800c414:	0792      	lsls	r2, r2, #30
  tickstart = HAL_GetTick();
 800c416:	4606      	mov	r6, r0
  if ((hdsi->Instance->PCONFR & DSI_PCONFR_NL) == DSI_ONE_DATA_LANE)
 800c418:	d15a      	bne.n	800c4d0 <HAL_DSI_Init+0x1dc>
    while ((hdsi->Instance->PSR & (DSI_PSR_PSS0 | DSI_PSR_PSSC)) != (DSI_PSR_PSS0 | DSI_PSR_PSSC))
 800c41a:	f8d3 20b0 	ldr.w	r2, [r3, #176]	@ 0xb0
 800c41e:	f002 0214 	and.w	r2, r2, #20
 800c422:	2a14      	cmp	r2, #20
 800c424:	d00c      	beq.n	800c440 <HAL_DSI_Init+0x14c>
      if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800c426:	f7ff fb07 	bl	800ba38 <HAL_GetTick>
 800c42a:	1b80      	subs	r0, r0, r6
 800c42c:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 800c430:	d85a      	bhi.n	800c4e8 <HAL_DSI_Init+0x1f4>
    while ((hdsi->Instance->PSR & (DSI_PSR_PSS0 | DSI_PSR_PSSC)) != (DSI_PSR_PSS0 | DSI_PSR_PSSC))
 800c432:	6823      	ldr	r3, [r4, #0]
 800c434:	f8d3 20b0 	ldr.w	r2, [r3, #176]	@ 0xb0
 800c438:	f002 0214 	and.w	r2, r2, #20
 800c43c:	2a14      	cmp	r2, #20
 800c43e:	d1f2      	bne.n	800c426 <HAL_DSI_Init+0x132>
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 800c440:	686a      	ldr	r2, [r5, #4]
 800c442:	492c      	ldr	r1, [pc, #176]	@ (800c4f4 <HAL_DSI_Init+0x200>)
 800c444:	6828      	ldr	r0, [r5, #0]
 800c446:	2a01      	cmp	r2, #1
 800c448:	bf38      	it	cc
 800c44a:	2201      	movcc	r2, #1
 800c44c:	fb01 f202 	mul.w	r2, r1, r2
 800c450:	68a9      	ldr	r1, [r5, #8]
 800c452:	f001 0103 	and.w	r1, r1, #3
 800c456:	408a      	lsls	r2, r1
 800c458:	f44f 51fa 	mov.w	r1, #8000	@ 0x1f40
 800c45c:	fb01 f000 	mul.w	r0, r1, r0
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 800c460:	f8d3 1418 	ldr.w	r1, [r3, #1048]	@ 0x418
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 800c464:	fbb2 f2f0 	udiv	r2, r2, r0
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 800c468:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 800c46c:	f8c3 1418 	str.w	r1, [r3, #1048]	@ 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 800c470:	f8d3 0418 	ldr.w	r0, [r3, #1048]	@ 0x418
  hdsi->Instance->IER[0U] = 0U;
 800c474:	2100      	movs	r1, #0
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 800c476:	4302      	orrs	r2, r0
 800c478:	f8c3 2418 	str.w	r2, [r3, #1048]	@ 0x418
  hdsi->Instance->IER[0U] = 0U;
 800c47c:	f8c3 10c4 	str.w	r1, [r3, #196]	@ 0xc4
  hdsi->Instance->IER[1U] = 0U;
 800c480:	f8c3 10c8 	str.w	r1, [r3, #200]	@ 0xc8
  __HAL_DSI_DISABLE(hdsi);
 800c484:	9103      	str	r1, [sp, #12]
 800c486:	685a      	ldr	r2, [r3, #4]
  hdsi->ErrorMsk = 0U;
 800c488:	61a1      	str	r1, [r4, #24]
  __HAL_DSI_DISABLE(hdsi);
 800c48a:	f022 0201 	bic.w	r2, r2, #1
 800c48e:	605a      	str	r2, [r3, #4]
 800c490:	685a      	ldr	r2, [r3, #4]
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 800c492:	6860      	ldr	r0, [r4, #4]
  __HAL_DSI_DISABLE(hdsi);
 800c494:	f002 0201 	and.w	r2, r2, #1
 800c498:	9203      	str	r2, [sp, #12]
 800c49a:	9a03      	ldr	r2, [sp, #12]
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 800c49c:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 800c4a0:	f022 0203 	bic.w	r2, r2, #3
 800c4a4:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 800c4a8:	f8d3 2094 	ldr.w	r2, [r3, #148]	@ 0x94
 800c4ac:	4302      	orrs	r2, r0
 800c4ae:	f042 0201 	orr.w	r2, r2, #1
  hdsi->State = HAL_DSI_STATE_READY;
 800c4b2:	2501      	movs	r5, #1
  return HAL_OK;
 800c4b4:	4608      	mov	r0, r1
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 800c4b6:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 800c4ba:	6161      	str	r1, [r4, #20]
  hdsi->State = HAL_DSI_STATE_READY;
 800c4bc:	7465      	strb	r5, [r4, #17]
}
 800c4be:	b004      	add	sp, #16
 800c4c0:	bd70      	pop	{r4, r5, r6, pc}
      if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800c4c2:	f7ff fab9 	bl	800ba38 <HAL_GetTick>
 800c4c6:	1b80      	subs	r0, r0, r6
 800c4c8:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 800c4cc:	d80c      	bhi.n	800c4e8 <HAL_DSI_Init+0x1f4>
    while ((hdsi->Instance->PSR & (DSI_PSR_PSS0 | DSI_PSR_PSS1 | DSI_PSR_PSSC)) != (DSI_PSR_PSS0 | \
 800c4ce:	6823      	ldr	r3, [r4, #0]
 800c4d0:	f8d3 20b0 	ldr.w	r2, [r3, #176]	@ 0xb0
 800c4d4:	f002 0294 	and.w	r2, r2, #148	@ 0x94
 800c4d8:	2a94      	cmp	r2, #148	@ 0x94
 800c4da:	d1f2      	bne.n	800c4c2 <HAL_DSI_Init+0x1ce>
 800c4dc:	e7b0      	b.n	800c440 <HAL_DSI_Init+0x14c>
    HAL_DSI_MspInit(hdsi);
 800c4de:	f7f7 fcbf 	bl	8003e60 <HAL_DSI_MspInit>
 800c4e2:	e712      	b.n	800c30a <HAL_DSI_Init+0x16>
    return HAL_ERROR;
 800c4e4:	2001      	movs	r0, #1
}
 800c4e6:	4770      	bx	lr
        __HAL_UNLOCK(hdsi);
 800c4e8:	2300      	movs	r3, #0
 800c4ea:	7423      	strb	r3, [r4, #16]
      return HAL_TIMEOUT;
 800c4ec:	2003      	movs	r0, #3
}
 800c4ee:	b004      	add	sp, #16
 800c4f0:	bd70      	pop	{r4, r5, r6, pc}
 800c4f2:	bf00      	nop
 800c4f4:	003d0900 	.word	0x003d0900

0800c4f8 <HAL_DSI_ErrorCallback>:
  * @brief  Operation Error DSI callback.
  * @param  hdsi  pointer to a DSI_HandleTypeDef structure that contains
  *               the configuration information for the DSI.
  * @retval None
  */
__weak void HAL_DSI_ErrorCallback(DSI_HandleTypeDef *hdsi)
 800c4f8:	4770      	bx	lr
 800c4fa:	bf00      	nop

0800c4fc <HAL_DSI_IRQHandler>:
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800c4fc:	6803      	ldr	r3, [r0, #0]
 800c4fe:	f8d3 240c 	ldr.w	r2, [r3, #1036]	@ 0x40c
 800c502:	07d1      	lsls	r1, r2, #31
{
 800c504:	b510      	push	{r4, lr}
 800c506:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800c508:	d503      	bpl.n	800c512 <HAL_DSI_IRQHandler+0x16>
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 800c50a:	f8d3 2408 	ldr.w	r2, [r3, #1032]	@ 0x408
 800c50e:	07d2      	lsls	r2, r2, #31
 800c510:	d462      	bmi.n	800c5d8 <HAL_DSI_IRQHandler+0xdc>
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 800c512:	f8d3 240c 	ldr.w	r2, [r3, #1036]	@ 0x40c
 800c516:	0791      	lsls	r1, r2, #30
 800c518:	d503      	bpl.n	800c522 <HAL_DSI_IRQHandler+0x26>
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 800c51a:	f8d3 2408 	ldr.w	r2, [r3, #1032]	@ 0x408
 800c51e:	0792      	lsls	r2, r2, #30
 800c520:	d44f      	bmi.n	800c5c2 <HAL_DSI_IRQHandler+0xc6>
  if (hdsi->ErrorMsk != 0U)
 800c522:	69a3      	ldr	r3, [r4, #24]
 800c524:	2b00      	cmp	r3, #0
 800c526:	d04b      	beq.n	800c5c0 <HAL_DSI_IRQHandler+0xc4>
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 800c528:	6821      	ldr	r1, [r4, #0]
 800c52a:	f8d1 20bc 	ldr.w	r2, [r1, #188]	@ 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 800c52e:	f8d1 00c4 	ldr.w	r0, [r1, #196]	@ 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 800c532:	f8d1 30c0 	ldr.w	r3, [r1, #192]	@ 0xc0
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 800c536:	f8d1 10c8 	ldr.w	r1, [r1, #200]	@ 0xc8
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 800c53a:	4002      	ands	r2, r0
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 800c53c:	400b      	ands	r3, r1
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 800c53e:	b291      	uxth	r1, r2
 800c540:	b119      	cbz	r1, 800c54a <HAL_DSI_IRQHandler+0x4e>
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 800c542:	6961      	ldr	r1, [r4, #20]
 800c544:	f041 0101 	orr.w	r1, r1, #1
 800c548:	6161      	str	r1, [r4, #20]
    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 800c54a:	f412 1ff8 	tst.w	r2, #2031616	@ 0x1f0000
 800c54e:	d003      	beq.n	800c558 <HAL_DSI_IRQHandler+0x5c>
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 800c550:	6962      	ldr	r2, [r4, #20]
 800c552:	f042 0202 	orr.w	r2, r2, #2
 800c556:	6162      	str	r2, [r4, #20]
    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 800c558:	07d8      	lsls	r0, r3, #31
 800c55a:	d503      	bpl.n	800c564 <HAL_DSI_IRQHandler+0x68>
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 800c55c:	6962      	ldr	r2, [r4, #20]
 800c55e:	f042 0204 	orr.w	r2, r2, #4
 800c562:	6162      	str	r2, [r4, #20]
    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 800c564:	0799      	lsls	r1, r3, #30
 800c566:	d503      	bpl.n	800c570 <HAL_DSI_IRQHandler+0x74>
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 800c568:	6962      	ldr	r2, [r4, #20]
 800c56a:	f042 0208 	orr.w	r2, r2, #8
 800c56e:	6162      	str	r2, [r4, #20]
    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 800c570:	f013 0f0c 	tst.w	r3, #12
 800c574:	d003      	beq.n	800c57e <HAL_DSI_IRQHandler+0x82>
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 800c576:	6962      	ldr	r2, [r4, #20]
 800c578:	f042 0210 	orr.w	r2, r2, #16
 800c57c:	6162      	str	r2, [r4, #20]
    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 800c57e:	06da      	lsls	r2, r3, #27
 800c580:	d503      	bpl.n	800c58a <HAL_DSI_IRQHandler+0x8e>
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 800c582:	6962      	ldr	r2, [r4, #20]
 800c584:	f042 0220 	orr.w	r2, r2, #32
 800c588:	6162      	str	r2, [r4, #20]
    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 800c58a:	0698      	lsls	r0, r3, #26
 800c58c:	d503      	bpl.n	800c596 <HAL_DSI_IRQHandler+0x9a>
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 800c58e:	6962      	ldr	r2, [r4, #20]
 800c590:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800c594:	6162      	str	r2, [r4, #20]
    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 800c596:	0659      	lsls	r1, r3, #25
 800c598:	d503      	bpl.n	800c5a2 <HAL_DSI_IRQHandler+0xa6>
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 800c59a:	6962      	ldr	r2, [r4, #20]
 800c59c:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800c5a0:	6162      	str	r2, [r4, #20]
    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 800c5a2:	061a      	lsls	r2, r3, #24
 800c5a4:	d503      	bpl.n	800c5ae <HAL_DSI_IRQHandler+0xb2>
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 800c5a6:	6962      	ldr	r2, [r4, #20]
 800c5a8:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800c5ac:	6162      	str	r2, [r4, #20]
    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 800c5ae:	f413 5ff8 	tst.w	r3, #7936	@ 0x1f00
 800c5b2:	d003      	beq.n	800c5bc <HAL_DSI_IRQHandler+0xc0>
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 800c5b4:	6963      	ldr	r3, [r4, #20]
 800c5b6:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800c5ba:	6163      	str	r3, [r4, #20]
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 800c5bc:	6963      	ldr	r3, [r4, #20]
 800c5be:	b93b      	cbnz	r3, 800c5d0 <HAL_DSI_IRQHandler+0xd4>
}
 800c5c0:	bd10      	pop	{r4, pc}
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 800c5c2:	2202      	movs	r2, #2
 800c5c4:	f8c3 2410 	str.w	r2, [r3, #1040]	@ 0x410
      HAL_DSI_EndOfRefreshCallback(hdsi);
 800c5c8:	4620      	mov	r0, r4
 800c5ca:	f7f5 fdf7 	bl	80021bc <HAL_DSI_EndOfRefreshCallback>
 800c5ce:	e7a8      	b.n	800c522 <HAL_DSI_IRQHandler+0x26>
      HAL_DSI_ErrorCallback(hdsi);
 800c5d0:	4620      	mov	r0, r4
 800c5d2:	f7ff ff91 	bl	800c4f8 <HAL_DSI_ErrorCallback>
}
 800c5d6:	bd10      	pop	{r4, pc}
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 800c5d8:	2201      	movs	r2, #1
 800c5da:	f8c3 2410 	str.w	r2, [r3, #1040]	@ 0x410
      HAL_DSI_TearingEffectCallback(hdsi);
 800c5de:	f7f5 fdc9 	bl	8002174 <HAL_DSI_TearingEffectCallback>
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 800c5e2:	6823      	ldr	r3, [r4, #0]
 800c5e4:	e795      	b.n	800c512 <HAL_DSI_IRQHandler+0x16>
 800c5e6:	bf00      	nop

0800c5e8 <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800c5e8:	7c02      	ldrb	r2, [r0, #16]
 800c5ea:	2a01      	cmp	r2, #1
{
 800c5ec:	4603      	mov	r3, r0
  __HAL_LOCK(hdsi);
 800c5ee:	d00d      	beq.n	800c60c <HAL_DSI_SetGenericVCID+0x24>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 800c5f0:	6802      	ldr	r2, [r0, #0]
 800c5f2:	6b10      	ldr	r0, [r2, #48]	@ 0x30
 800c5f4:	f020 0003 	bic.w	r0, r0, #3
 800c5f8:	6310      	str	r0, [r2, #48]	@ 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 800c5fa:	6b10      	ldr	r0, [r2, #48]	@ 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800c5fc:	f04f 0c00 	mov.w	ip, #0
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 800c600:	4301      	orrs	r1, r0
 800c602:	6311      	str	r1, [r2, #48]	@ 0x30

  return HAL_OK;
 800c604:	4660      	mov	r0, ip
  __HAL_UNLOCK(hdsi);
 800c606:	f883 c010 	strb.w	ip, [r3, #16]
  return HAL_OK;
 800c60a:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800c60c:	2002      	movs	r0, #2
}
 800c60e:	4770      	bx	lr

0800c610 <HAL_DSI_ConfigAdaptedCommandMode>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800c610:	7c03      	ldrb	r3, [r0, #16]
 800c612:	2b01      	cmp	r3, #1
 800c614:	d06f      	beq.n	800c6f6 <HAL_DSI_ConfigAdaptedCommandMode+0xe6>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 800c616:	6803      	ldr	r3, [r0, #0]
 800c618:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800c61a:	f042 0201 	orr.w	r2, r2, #1
{
 800c61e:	b410      	push	{r4}
 800c620:	4684      	mov	ip, r0
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 800c622:	6808      	ldr	r0, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 800c624:	635a      	str	r2, [r3, #52]	@ 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 800c626:	f8d3 2400 	ldr.w	r2, [r3, #1024]	@ 0x400

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 800c62a:	698c      	ldr	r4, [r1, #24]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 800c62c:	f022 0201 	bic.w	r2, r2, #1
 800c630:	f8c3 2400 	str.w	r2, [r3, #1024]	@ 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 800c634:	f8d3 2400 	ldr.w	r2, [r3, #1024]	@ 0x400
 800c638:	f042 0201 	orr.w	r2, r2, #1
 800c63c:	f8c3 2400 	str.w	r2, [r3, #1024]	@ 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 800c640:	68da      	ldr	r2, [r3, #12]
 800c642:	f022 0203 	bic.w	r2, r2, #3
 800c646:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 800c648:	68da      	ldr	r2, [r3, #12]
 800c64a:	4302      	orrs	r2, r0
 800c64c:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 800c64e:	6958      	ldr	r0, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 800c650:	69ca      	ldr	r2, [r1, #28]
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 800c652:	f020 0007 	bic.w	r0, r0, #7
 800c656:	6158      	str	r0, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 800c658:	4322      	orrs	r2, r4
 800c65a:	694c      	ldr	r4, [r1, #20]
 800c65c:	6958      	ldr	r0, [r3, #20]
 800c65e:	4322      	orrs	r2, r4
 800c660:	4302      	orrs	r2, r0
 800c662:	615a      	str	r2, [r3, #20]

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 800c664:	691a      	ldr	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 800c666:	6848      	ldr	r0, [r1, #4]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 800c668:	f022 020f 	bic.w	r2, r2, #15
 800c66c:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 800c66e:	691a      	ldr	r2, [r3, #16]
 800c670:	4302      	orrs	r2, r0
 800c672:	611a      	str	r2, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 800c674:	f8d3 2400 	ldr.w	r2, [r3, #1024]	@ 0x400
 800c678:	f022 020e 	bic.w	r2, r2, #14
 800c67c:	f8c3 2400 	str.w	r2, [r3, #1024]	@ 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 800c680:	f8d3 2400 	ldr.w	r2, [r3, #1024]	@ 0x400
 800c684:	ea42 0240 	orr.w	r2, r2, r0, lsl #1
 800c688:	f8c3 2400 	str.w	r2, [r3, #1024]	@ 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 800c68c:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 800c68e:	6888      	ldr	r0, [r1, #8]
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 800c690:	0c12      	lsrs	r2, r2, #16
 800c692:	0412      	lsls	r2, r2, #16
 800c694:	665a      	str	r2, [r3, #100]	@ 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 800c696:	6e5a      	ldr	r2, [r3, #100]	@ 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 800c698:	690c      	ldr	r4, [r1, #16]
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 800c69a:	4302      	orrs	r2, r0
 800c69c:	665a      	str	r2, [r3, #100]	@ 0x64
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 800c69e:	68ca      	ldr	r2, [r1, #12]
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 800c6a0:	f8d3 0400 	ldr.w	r0, [r3, #1024]	@ 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 800c6a4:	4322      	orrs	r2, r4
 800c6a6:	6a4c      	ldr	r4, [r1, #36]	@ 0x24
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 800c6a8:	f020 00f0 	bic.w	r0, r0, #240	@ 0xf0
 800c6ac:	f8c3 0400 	str.w	r0, [r3, #1024]	@ 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 800c6b0:	4322      	orrs	r2, r4
 800c6b2:	6a0c      	ldr	r4, [r1, #32]
 800c6b4:	f8d3 0400 	ldr.w	r0, [r3, #1024]	@ 0x400
 800c6b8:	4322      	orrs	r2, r4
 800c6ba:	4302      	orrs	r2, r0
 800c6bc:	f8c3 2400 	str.w	r2, [r3, #1024]	@ 0x400
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 800c6c0:	6e9a      	ldr	r2, [r3, #104]	@ 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 800c6c2:	6a88      	ldr	r0, [r1, #40]	@ 0x28
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 800c6c4:	f022 0201 	bic.w	r2, r2, #1
 800c6c8:	669a      	str	r2, [r3, #104]	@ 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 800c6ca:	6e9a      	ldr	r2, [r3, #104]	@ 0x68
 800c6cc:	4302      	orrs	r2, r0
 800c6ce:	669a      	str	r2, [r3, #104]	@ 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 800c6d0:	f8d3 2408 	ldr.w	r2, [r3, #1032]	@ 0x408
 800c6d4:	f042 0201 	orr.w	r2, r2, #1
 800c6d8:	f8c3 2408 	str.w	r2, [r3, #1032]	@ 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 800c6dc:	f8d3 2408 	ldr.w	r2, [r3, #1032]	@ 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800c6e0:	2100      	movs	r1, #0
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 800c6e2:	f042 0202 	orr.w	r2, r2, #2
 800c6e6:	f8c3 2408 	str.w	r2, [r3, #1032]	@ 0x408
  __HAL_UNLOCK(hdsi);
 800c6ea:	f88c 1010 	strb.w	r1, [ip, #16]

  return HAL_OK;
 800c6ee:	4608      	mov	r0, r1
}
 800c6f0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c6f4:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800c6f6:	2002      	movs	r0, #2
}
 800c6f8:	4770      	bx	lr
 800c6fa:	bf00      	nop

0800c6fc <HAL_DSI_ConfigCommand>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800c6fc:	7c03      	ldrb	r3, [r0, #16]
 800c6fe:	2b01      	cmp	r3, #1
 800c700:	d02d      	beq.n	800c75e <HAL_DSI_ConfigCommand+0x62>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 800c702:	4602      	mov	r2, r0
 800c704:	6800      	ldr	r0, [r0, #0]
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800c706:	680b      	ldr	r3, [r1, #0]
{
 800c708:	b430      	push	{r4, r5}
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 800c70a:	6e85      	ldr	r5, [r0, #104]	@ 0x68
 800c70c:	4c15      	ldr	r4, [pc, #84]	@ (800c764 <HAL_DSI_ConfigCommand+0x68>)
 800c70e:	402c      	ands	r4, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800c710:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 800c712:	6684      	str	r4, [r0, #104]	@ 0x68
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800c714:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 800c716:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800c718:	6e84      	ldr	r4, [r0, #104]	@ 0x68
                           LPCmd->LPGenShortWriteOneP | \
 800c71a:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 800c71c:	68cd      	ldr	r5, [r1, #12]
 800c71e:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 800c720:	690d      	ldr	r5, [r1, #16]
 800c722:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 800c724:	694d      	ldr	r5, [r1, #20]
 800c726:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 800c728:	698d      	ldr	r5, [r1, #24]
 800c72a:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 800c72c:	69cd      	ldr	r5, [r1, #28]
 800c72e:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 800c730:	6a0d      	ldr	r5, [r1, #32]
 800c732:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 800c734:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
 800c736:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 800c738:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800c73a:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 800c73c:	6acd      	ldr	r5, [r1, #44]	@ 0x2c
 800c73e:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800c740:	4323      	orrs	r3, r4
 800c742:	6683      	str	r3, [r0, #104]	@ 0x68
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 800c744:	6e83      	ldr	r3, [r0, #104]	@ 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 800c746:	6b0c      	ldr	r4, [r1, #48]	@ 0x30
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 800c748:	f023 0302 	bic.w	r3, r3, #2
 800c74c:	6683      	str	r3, [r0, #104]	@ 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 800c74e:	6e83      	ldr	r3, [r0, #104]	@ 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800c750:	2100      	movs	r1, #0
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 800c752:	4323      	orrs	r3, r4
 800c754:	6683      	str	r3, [r0, #104]	@ 0x68
  __HAL_UNLOCK(hdsi);
 800c756:	7411      	strb	r1, [r2, #16]

  return HAL_OK;
 800c758:	4608      	mov	r0, r1
}
 800c75a:	bc30      	pop	{r4, r5}
 800c75c:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800c75e:	2002      	movs	r0, #2
}
 800c760:	4770      	bx	lr
 800c762:	bf00      	nop
 800c764:	fef080ff 	.word	0xfef080ff

0800c768 <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800c768:	7c02      	ldrb	r2, [r0, #16]
 800c76a:	2a01      	cmp	r2, #1
{
 800c76c:	4603      	mov	r3, r0
  __HAL_LOCK(hdsi);
 800c76e:	d00d      	beq.n	800c78c <HAL_DSI_ConfigFlowControl+0x24>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 800c770:	6802      	ldr	r2, [r0, #0]
 800c772:	6ad0      	ldr	r0, [r2, #44]	@ 0x2c
 800c774:	f020 001f 	bic.w	r0, r0, #31
 800c778:	62d0      	str	r0, [r2, #44]	@ 0x2c
  hdsi->Instance->PCR |= FlowControl;
 800c77a:	6ad0      	ldr	r0, [r2, #44]	@ 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800c77c:	f04f 0c00 	mov.w	ip, #0
  hdsi->Instance->PCR |= FlowControl;
 800c780:	4301      	orrs	r1, r0
 800c782:	62d1      	str	r1, [r2, #44]	@ 0x2c

  return HAL_OK;
 800c784:	4660      	mov	r0, ip
  __HAL_UNLOCK(hdsi);
 800c786:	f883 c010 	strb.w	ip, [r3, #16]
  return HAL_OK;
 800c78a:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800c78c:	2002      	movs	r0, #2
}
 800c78e:	4770      	bx	lr

0800c790 <HAL_DSI_ConfigPhyTimer>:
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 800c790:	7c03      	ldrb	r3, [r0, #16]
 800c792:	2b01      	cmp	r3, #1
 800c794:	d03a      	beq.n	800c80c <HAL_DSI_ConfigPhyTimer+0x7c>
     Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800c796:	6803      	ldr	r3, [r0, #0]
 800c798:	4684      	mov	ip, r0
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 800c79a:	e9d1 0200 	ldrd	r0, r2, [r1]
 800c79e:	4290      	cmp	r0, r2
 800c7a0:	bf38      	it	cc
 800c7a2:	4610      	movcc	r0, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800c7a4:	f8d3 2098 	ldr.w	r2, [r3, #152]	@ 0x98
 800c7a8:	f002 22fc 	and.w	r2, r2, #4227922944	@ 0xfc00fc00
{
 800c7ac:	b410      	push	{r4}
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800c7ae:	f8c3 2098 	str.w	r2, [r3, #152]	@ 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 800c7b2:	f8d3 2098 	ldr.w	r2, [r3, #152]	@ 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800c7b6:	68cc      	ldr	r4, [r1, #12]
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 800c7b8:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800c7bc:	4302      	orrs	r2, r0
 800c7be:	f8c3 2098 	str.w	r2, [r3, #152]	@ 0x98
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 800c7c2:	f8d3 209c 	ldr.w	r2, [r3, #156]	@ 0x9c
 800c7c6:	f402 4200 	and.w	r2, r2, #32768	@ 0x8000
 800c7ca:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 800c7ce:	688a      	ldr	r2, [r1, #8]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800c7d0:	f8d3 009c 	ldr.w	r0, [r3, #156]	@ 0x9c
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 800c7d4:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800c7d6:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800c7da:	690c      	ldr	r4, [r1, #16]
 800c7dc:	4322      	orrs	r2, r4
 800c7de:	4302      	orrs	r2, r0
 800c7e0:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 800c7e4:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 800c7e8:	6948      	ldr	r0, [r1, #20]
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 800c7ea:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 800c7ee:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 800c7f2:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800c7f6:	2100      	movs	r1, #0
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 800c7f8:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800c7fc:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
  __HAL_UNLOCK(hdsi);
 800c800:	f88c 1010 	strb.w	r1, [ip, #16]

  return HAL_OK;
 800c804:	4608      	mov	r0, r1
}
 800c806:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c80a:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800c80c:	2002      	movs	r0, #2
}
 800c80e:	4770      	bx	lr

0800c810 <HAL_DSI_ConfigHostTimeouts>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800c810:	7c03      	ldrb	r3, [r0, #16]
 800c812:	2b01      	cmp	r3, #1
 800c814:	d061      	beq.n	800c8da <HAL_DSI_ConfigHostTimeouts+0xca>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800c816:	6803      	ldr	r3, [r0, #0]
 800c818:	689a      	ldr	r2, [r3, #8]
 800c81a:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
{
 800c81e:	b410      	push	{r4}
 800c820:	4684      	mov	ip, r0
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800c822:	6808      	ldr	r0, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800c824:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800c826:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800c828:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800c82a:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800c82e:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800c830:	6f9a      	ldr	r2, [r3, #120]	@ 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800c832:	6848      	ldr	r0, [r1, #4]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800c834:	b292      	uxth	r2, r2
 800c836:	679a      	str	r2, [r3, #120]	@ 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800c838:	6f9a      	ldr	r2, [r3, #120]	@ 0x78
 800c83a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800c83e:	679a      	str	r2, [r3, #120]	@ 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 800c840:	6f98      	ldr	r0, [r3, #120]	@ 0x78
 800c842:	4a27      	ldr	r2, [pc, #156]	@ (800c8e0 <HAL_DSI_ConfigHostTimeouts+0xd0>)
 800c844:	4010      	ands	r0, r2
 800c846:	6798      	str	r0, [r3, #120]	@ 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800c848:	6f98      	ldr	r0, [r3, #120]	@ 0x78
 800c84a:	4320      	orrs	r0, r4
 800c84c:	6798      	str	r0, [r3, #120]	@ 0x78

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 800c84e:	6fd8      	ldr	r0, [r3, #124]	@ 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800c850:	68cc      	ldr	r4, [r1, #12]
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 800c852:	4010      	ands	r0, r2
 800c854:	67d8      	str	r0, [r3, #124]	@ 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800c856:	6fd8      	ldr	r0, [r3, #124]	@ 0x7c
 800c858:	4320      	orrs	r0, r4
 800c85a:	67d8      	str	r0, [r3, #124]	@ 0x7c

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 800c85c:	f8d3 0080 	ldr.w	r0, [r3, #128]	@ 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800c860:	690c      	ldr	r4, [r1, #16]
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 800c862:	4010      	ands	r0, r2
 800c864:	f8c3 0080 	str.w	r0, [r3, #128]	@ 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800c868:	f8d3 0080 	ldr.w	r0, [r3, #128]	@ 0x80
 800c86c:	4320      	orrs	r0, r4
 800c86e:	f8c3 0080 	str.w	r0, [r3, #128]	@ 0x80

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 800c872:	f8d3 0084 	ldr.w	r0, [r3, #132]	@ 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 800c876:	694c      	ldr	r4, [r1, #20]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 800c878:	4010      	ands	r0, r2
 800c87a:	f8c3 0084 	str.w	r0, [r3, #132]	@ 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 800c87e:	f8d3 0084 	ldr.w	r0, [r3, #132]	@ 0x84
 800c882:	4320      	orrs	r0, r4
 800c884:	f8c3 0084 	str.w	r0, [r3, #132]	@ 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 800c888:	f8d3 0084 	ldr.w	r0, [r3, #132]	@ 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 800c88c:	698c      	ldr	r4, [r1, #24]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 800c88e:	f020 7080 	bic.w	r0, r0, #16777216	@ 0x1000000
 800c892:	f8c3 0084 	str.w	r0, [r3, #132]	@ 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 800c896:	f8d3 0084 	ldr.w	r0, [r3, #132]	@ 0x84
 800c89a:	4320      	orrs	r0, r4
 800c89c:	f8c3 0084 	str.w	r0, [r3, #132]	@ 0x84

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800c8a0:	f8d3 0088 	ldr.w	r0, [r3, #136]	@ 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 800c8a4:	69cc      	ldr	r4, [r1, #28]
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800c8a6:	4010      	ands	r0, r2
 800c8a8:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 800c8ac:	f8d3 0088 	ldr.w	r0, [r3, #136]	@ 0x88
 800c8b0:	4320      	orrs	r0, r4
 800c8b2:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 800c8b6:	f8d3 008c 	ldr.w	r0, [r3, #140]	@ 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 800c8ba:	6a0c      	ldr	r4, [r1, #32]
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 800c8bc:	4002      	ands	r2, r0
 800c8be:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 800c8c2:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800c8c6:	2100      	movs	r1, #0
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 800c8c8:	4322      	orrs	r2, r4
 800c8ca:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  __HAL_UNLOCK(hdsi);
 800c8ce:	f88c 1010 	strb.w	r1, [ip, #16]

  return HAL_OK;
 800c8d2:	4608      	mov	r0, r1
}
 800c8d4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c8d8:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800c8da:	2002      	movs	r0, #2
}
 800c8dc:	4770      	bx	lr
 800c8de:	bf00      	nop
 800c8e0:	ffff0000 	.word	0xffff0000

0800c8e4 <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800c8e4:	7c03      	ldrb	r3, [r0, #16]
 800c8e6:	2b01      	cmp	r3, #1
 800c8e8:	d021      	beq.n	800c92e <HAL_DSI_Start+0x4a>
{
 800c8ea:	b410      	push	{r4}
 800c8ec:	b083      	sub	sp, #12

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 800c8ee:	6803      	ldr	r3, [r0, #0]
 800c8f0:	2100      	movs	r1, #0
 800c8f2:	9100      	str	r1, [sp, #0]
 800c8f4:	685c      	ldr	r4, [r3, #4]
 800c8f6:	f044 0401 	orr.w	r4, r4, #1
 800c8fa:	605c      	str	r4, [r3, #4]
 800c8fc:	685c      	ldr	r4, [r3, #4]
 800c8fe:	f004 0401 	and.w	r4, r4, #1
 800c902:	9400      	str	r4, [sp, #0]
 800c904:	9c00      	ldr	r4, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 800c906:	9101      	str	r1, [sp, #4]
 800c908:	f8d3 4404 	ldr.w	r4, [r3, #1028]	@ 0x404
 800c90c:	f044 0408 	orr.w	r4, r4, #8
 800c910:	f8c3 4404 	str.w	r4, [r3, #1028]	@ 0x404
 800c914:	f8d3 3404 	ldr.w	r3, [r3, #1028]	@ 0x404
 800c918:	f003 0308 	and.w	r3, r3, #8
 800c91c:	9301      	str	r3, [sp, #4]
 800c91e:	4602      	mov	r2, r0
 800c920:	9b01      	ldr	r3, [sp, #4]

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800c922:	7411      	strb	r1, [r2, #16]

  return HAL_OK;
 800c924:	4608      	mov	r0, r1
}
 800c926:	b003      	add	sp, #12
 800c928:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c92c:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800c92e:	2002      	movs	r0, #2
}
 800c930:	4770      	bx	lr
 800c932:	bf00      	nop

0800c934 <HAL_DSI_Stop>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Stop(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800c934:	7c03      	ldrb	r3, [r0, #16]
 800c936:	2b01      	cmp	r3, #1
 800c938:	d021      	beq.n	800c97e <HAL_DSI_Stop+0x4a>
{
 800c93a:	b410      	push	{r4}
 800c93c:	b083      	sub	sp, #12

  /* Disable the DSI host */
  __HAL_DSI_DISABLE(hdsi);
 800c93e:	6803      	ldr	r3, [r0, #0]
 800c940:	2100      	movs	r1, #0
 800c942:	9100      	str	r1, [sp, #0]
 800c944:	685c      	ldr	r4, [r3, #4]
 800c946:	f024 0401 	bic.w	r4, r4, #1
 800c94a:	605c      	str	r4, [r3, #4]
 800c94c:	685c      	ldr	r4, [r3, #4]
 800c94e:	f004 0401 	and.w	r4, r4, #1
 800c952:	9400      	str	r4, [sp, #0]
 800c954:	9c00      	ldr	r4, [sp, #0]

  /* Disable the DSI wrapper */
  __HAL_DSI_WRAPPER_DISABLE(hdsi);
 800c956:	9101      	str	r1, [sp, #4]
 800c958:	f8d3 4404 	ldr.w	r4, [r3, #1028]	@ 0x404
 800c95c:	f024 0408 	bic.w	r4, r4, #8
 800c960:	f8c3 4404 	str.w	r4, [r3, #1028]	@ 0x404
 800c964:	f8d3 3404 	ldr.w	r3, [r3, #1028]	@ 0x404
 800c968:	f003 0308 	and.w	r3, r3, #8
 800c96c:	9301      	str	r3, [sp, #4]
 800c96e:	4602      	mov	r2, r0
 800c970:	9b01      	ldr	r3, [sp, #4]

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800c972:	7411      	strb	r1, [r2, #16]

  return HAL_OK;
 800c974:	4608      	mov	r0, r1
}
 800c976:	b003      	add	sp, #12
 800c978:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c97c:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800c97e:	2002      	movs	r0, #2
}
 800c980:	4770      	bx	lr
 800c982:	bf00      	nop

0800c984 <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800c984:	7c02      	ldrb	r2, [r0, #16]
 800c986:	2a01      	cmp	r2, #1
 800c988:	d00e      	beq.n	800c9a8 <HAL_DSI_Refresh+0x24>
{
 800c98a:	b410      	push	{r4}

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 800c98c:	6804      	ldr	r4, [r0, #0]
 800c98e:	f8d4 2404 	ldr.w	r2, [r4, #1028]	@ 0x404
 800c992:	4603      	mov	r3, r0

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800c994:	2100      	movs	r1, #0
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 800c996:	f042 0204 	orr.w	r2, r2, #4
 800c99a:	f8c4 2404 	str.w	r2, [r4, #1028]	@ 0x404
  __HAL_UNLOCK(hdsi);
 800c99e:	7419      	strb	r1, [r3, #16]

  return HAL_OK;
 800c9a0:	4608      	mov	r0, r1
}
 800c9a2:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c9a6:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800c9a8:	2002      	movs	r0, #2
}
 800c9aa:	4770      	bx	lr

0800c9ac <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 800c9ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c9b0:	4605      	mov	r5, r0
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 800c9b2:	7c00      	ldrb	r0, [r0, #16]
 800c9b4:	2801      	cmp	r0, #1
 800c9b6:	d022      	beq.n	800c9fe <HAL_DSI_ShortWrite+0x52>
 800c9b8:	4699      	mov	r9, r3
 800c9ba:	2301      	movs	r3, #1
 800c9bc:	742b      	strb	r3, [r5, #16]

  status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 800c9be:	4688      	mov	r8, r1
 800c9c0:	4617      	mov	r7, r2
  tickstart = HAL_GetTick();
 800c9c2:	f7ff f839 	bl	800ba38 <HAL_GetTick>
 800c9c6:	4606      	mov	r6, r0
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800c9c8:	e006      	b.n	800c9d8 <HAL_DSI_ShortWrite+0x2c>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800c9ca:	f7ff f835 	bl	800ba38 <HAL_GetTick>
 800c9ce:	eba0 0c06 	sub.w	ip, r0, r6
 800c9d2:	f5bc 7f7a 	cmp.w	ip, #1000	@ 0x3e8
 800c9d6:	d810      	bhi.n	800c9fa <HAL_DSI_ShortWrite+0x4e>
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800c9d8:	682c      	ldr	r4, [r5, #0]
 800c9da:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800c9dc:	07db      	lsls	r3, r3, #31
 800c9de:	d5f4      	bpl.n	800c9ca <HAL_DSI_ShortWrite+0x1e>
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 800c9e0:	9a08      	ldr	r2, [sp, #32]
 800c9e2:	ea47 2309 	orr.w	r3, r7, r9, lsl #8
 800c9e6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800c9ea:	ea43 1388 	orr.w	r3, r3, r8, lsl #6
 800c9ee:	66e3      	str	r3, [r4, #108]	@ 0x6c
  return HAL_OK;
 800c9f0:	2000      	movs	r0, #0

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800c9f2:	2300      	movs	r3, #0
 800c9f4:	742b      	strb	r3, [r5, #16]

  return status;
}
 800c9f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      return HAL_TIMEOUT;
 800c9fa:	2003      	movs	r0, #3
 800c9fc:	e7f9      	b.n	800c9f2 <HAL_DSI_ShortWrite+0x46>
  __HAL_LOCK(hdsi);
 800c9fe:	2002      	movs	r0, #2
}
 800ca00:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800ca04 <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    const uint8_t *ParametersTable)
{
 800ca04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ca08:	461f      	mov	r7, r3
  uint32_t tickstart;
  uint32_t fifoword;
  const uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 800ca0a:	7c03      	ldrb	r3, [r0, #16]
 800ca0c:	2b01      	cmp	r3, #1
 800ca0e:	d05c      	beq.n	800caca <HAL_DSI_LongWrite+0xc6>
 800ca10:	2301      	movs	r3, #1
 800ca12:	7403      	strb	r3, [r0, #16]
 800ca14:	4605      	mov	r5, r0
 800ca16:	4688      	mov	r8, r1
 800ca18:	4691      	mov	r9, r2

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 800ca1a:	f7ff f80d 	bl	800ba38 <HAL_GetTick>
 800ca1e:	4606      	mov	r6, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800ca20:	e006      	b.n	800ca30 <HAL_DSI_LongWrite+0x2c>
  {
    /* Check for the Timeout */
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800ca22:	f7ff f809 	bl	800ba38 <HAL_GetTick>
 800ca26:	eba0 0c06 	sub.w	ip, r0, r6
 800ca2a:	f5bc 7f7a 	cmp.w	ip, #1000	@ 0x3e8
 800ca2e:	d848      	bhi.n	800cac2 <HAL_DSI_LongWrite+0xbe>
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800ca30:	682a      	ldr	r2, [r5, #0]
 800ca32:	6f54      	ldr	r4, [r2, #116]	@ 0x74
 800ca34:	f014 0401 	ands.w	r4, r4, #1
 800ca38:	d0f3      	beq.n	800ca22 <HAL_DSI_LongWrite+0x1e>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 800ca3a:	2f03      	cmp	r7, #3
 800ca3c:	463b      	mov	r3, r7
 800ca3e:	bf28      	it	cs
 800ca40:	2303      	movcs	r3, #3

  for (count = 0U; count < nbBytes; count++)
 800ca42:	2f00      	cmp	r7, #0
 800ca44:	d044      	beq.n	800cad0 <HAL_DSI_LongWrite+0xcc>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 800ca46:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800ca48:	9808      	ldr	r0, [sp, #32]
 800ca4a:	7809      	ldrb	r1, [r1, #0]
  for (count = 0U; count < nbBytes; count++)
 800ca4c:	2f01      	cmp	r7, #1
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 800ca4e:	ea40 2101 	orr.w	r1, r0, r1, lsl #8
  for (count = 0U; count < nbBytes; count++)
 800ca52:	d909      	bls.n	800ca68 <HAL_DSI_LongWrite+0x64>
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 800ca54:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800ca56:	7840      	ldrb	r0, [r0, #1]
  for (count = 0U; count < nbBytes; count++)
 800ca58:	2f02      	cmp	r7, #2
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 800ca5a:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
  for (count = 0U; count < nbBytes; count++)
 800ca5e:	d903      	bls.n	800ca68 <HAL_DSI_LongWrite+0x64>
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 800ca60:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800ca62:	7880      	ldrb	r0, [r0, #2]
 800ca64:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
  }
  hdsi->Instance->GPDR = fifoword;
 800ca68:	6711      	str	r1, [r2, #112]	@ 0x70

  uicounter = NbParams - nbBytes;
  pparams += nbBytes;
 800ca6a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800ca6c:	4419      	add	r1, r3
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 800ca6e:	1afb      	subs	r3, r7, r3
 800ca70:	d017      	beq.n	800caa2 <HAL_DSI_LongWrite+0x9e>
  {
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800ca72:	2b04      	cmp	r3, #4
 800ca74:	461c      	mov	r4, r3
 800ca76:	bf28      	it	cs
 800ca78:	2404      	movcs	r4, #4
    fifoword = 0U;
    for (count = 0U; count < nbBytes; count++)
 800ca7a:	2b01      	cmp	r3, #1
    {
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800ca7c:	7808      	ldrb	r0, [r1, #0]
    for (count = 0U; count < nbBytes; count++)
 800ca7e:	d90c      	bls.n	800ca9a <HAL_DSI_LongWrite+0x96>
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800ca80:	784e      	ldrb	r6, [r1, #1]
    for (count = 0U; count < nbBytes; count++)
 800ca82:	2b02      	cmp	r3, #2
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800ca84:	ea40 2006 	orr.w	r0, r0, r6, lsl #8
    for (count = 0U; count < nbBytes; count++)
 800ca88:	d907      	bls.n	800ca9a <HAL_DSI_LongWrite+0x96>
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800ca8a:	788e      	ldrb	r6, [r1, #2]
    for (count = 0U; count < nbBytes; count++)
 800ca8c:	2b03      	cmp	r3, #3
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800ca8e:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800ca92:	bf84      	itt	hi
 800ca94:	78ce      	ldrbhi	r6, [r1, #3]
 800ca96:	ea40 6006 	orrhi.w	r0, r0, r6, lsl #24
  while (uicounter != 0U)
 800ca9a:	1b1b      	subs	r3, r3, r4
    }
    hdsi->Instance->GPDR = fifoword;
 800ca9c:	6710      	str	r0, [r2, #112]	@ 0x70

    uicounter -= nbBytes;
    pparams += nbBytes;
 800ca9e:	4421      	add	r1, r4
  while (uicounter != 0U)
 800caa0:	d1e7      	bne.n	800ca72 <HAL_DSI_LongWrite+0x6e>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 800caa2:	3701      	adds	r7, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 800caa4:	0239      	lsls	r1, r7, #8
 800caa6:	ea49 1388 	orr.w	r3, r9, r8, lsl #6
 800caaa:	b289      	uxth	r1, r1
 800caac:	023f      	lsls	r7, r7, #8
 800caae:	430b      	orrs	r3, r1
 800cab0:	f407 077f 	and.w	r7, r7, #16711680	@ 0xff0000
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800cab4:	2100      	movs	r1, #0
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 800cab6:	433b      	orrs	r3, r7
 800cab8:	66d3      	str	r3, [r2, #108]	@ 0x6c
  __HAL_UNLOCK(hdsi);
 800caba:	7429      	strb	r1, [r5, #16]

  return HAL_OK;
 800cabc:	4608      	mov	r0, r1
}
 800cabe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      __HAL_UNLOCK(hdsi);
 800cac2:	742c      	strb	r4, [r5, #16]
      return HAL_TIMEOUT;
 800cac4:	2003      	movs	r0, #3
}
 800cac6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hdsi);
 800caca:	2002      	movs	r0, #2
}
 800cacc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  hdsi->Instance->GPDR = fifoword;
 800cad0:	9b08      	ldr	r3, [sp, #32]
 800cad2:	6713      	str	r3, [r2, #112]	@ 0x70
  while (uicounter != 0U)
 800cad4:	e7e5      	b.n	800caa2 <HAL_DSI_LongWrite+0x9e>
 800cad6:	bf00      	nop

0800cad8 <HAL_DSI_Read>:
                               uint8_t *Array,
                               uint32_t Size,
                               uint32_t Mode,
                               uint32_t DCSCmd,
                               uint8_t *ParametersTable)
{
 800cad8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800cadc:	461c      	mov	r4, r3
  uint32_t fifoword;
  uint32_t nbbytes;
  uint32_t count;

  /* Process locked */
  __HAL_LOCK(hdsi);
 800cade:	7c03      	ldrb	r3, [r0, #16]
{
 800cae0:	f8dd 9020 	ldr.w	r9, [sp, #32]
  __HAL_LOCK(hdsi);
 800cae4:	2b01      	cmp	r3, #1
 800cae6:	f000 8092 	beq.w	800cc0e <HAL_DSI_Read+0x136>
 800caea:	2301      	movs	r3, #1

  /* Check the parameters */
  assert_param(IS_DSI_READ_PACKET_TYPE(Mode));

  if (datasize > 2U)
 800caec:	2c02      	cmp	r4, #2
 800caee:	4605      	mov	r5, r0
 800caf0:	460f      	mov	r7, r1
 800caf2:	4616      	mov	r6, r2
  __HAL_LOCK(hdsi);
 800caf4:	7403      	strb	r3, [r0, #16]
  if (datasize > 2U)
 800caf6:	d811      	bhi.n	800cb1c <HAL_DSI_Read+0x44>
      return HAL_ERROR;
    }
  }

  /* Configure the packet to read command */
  if (Mode == DSI_DCS_SHORT_PKT_READ)
 800caf8:	f1b9 0f06 	cmp.w	r9, #6
 800cafc:	d02b      	beq.n	800cb56 <HAL_DSI_Read+0x7e>
  {
    DSI_ConfigPacketHeader(hdsi->Instance, ChannelNbr, Mode, DCSCmd, 0U);
  }
  else if (Mode == DSI_GEN_SHORT_PKT_READ_P0)
 800cafe:	f1b9 0f04 	cmp.w	r9, #4
 800cb02:	d070      	beq.n	800cbe6 <HAL_DSI_Read+0x10e>
  {
    DSI_ConfigPacketHeader(hdsi->Instance, ChannelNbr, Mode, 0U, 0U);
  }
  else if (Mode == DSI_GEN_SHORT_PKT_READ_P1)
 800cb04:	f1b9 0f14 	cmp.w	r9, #20
 800cb08:	f000 8084 	beq.w	800cc14 <HAL_DSI_Read+0x13c>
  {
    DSI_ConfigPacketHeader(hdsi->Instance, ChannelNbr, Mode, ParametersTable[0U], 0U);
  }
  else if (Mode == DSI_GEN_SHORT_PKT_READ_P2)
 800cb0c:	f1b9 0f24 	cmp.w	r9, #36	@ 0x24
 800cb10:	d06f      	beq.n	800cbf2 <HAL_DSI_Read+0x11a>
      __HAL_UNLOCK(hdsi);
 800cb12:	2300      	movs	r3, #0
 800cb14:	742b      	strb	r3, [r5, #16]
      return HAL_ERROR;
 800cb16:	2001      	movs	r0, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
}
 800cb18:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  tickstart = HAL_GetTick();
 800cb1c:	f7fe ff8c 	bl	800ba38 <HAL_GetTick>
 800cb20:	4680      	mov	r8, r0
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800cb22:	e006      	b.n	800cb32 <HAL_DSI_Read+0x5a>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800cb24:	f7fe ff88 	bl	800ba38 <HAL_GetTick>
 800cb28:	eba0 0008 	sub.w	r0, r0, r8
 800cb2c:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 800cb30:	d8ef      	bhi.n	800cb12 <HAL_DSI_Read+0x3a>
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800cb32:	682b      	ldr	r3, [r5, #0]
 800cb34:	6f5a      	ldr	r2, [r3, #116]	@ 0x74
 800cb36:	07d2      	lsls	r2, r2, #31
 800cb38:	d5f4      	bpl.n	800cb24 <HAL_DSI_Read+0x4c>
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 800cb3a:	0222      	lsls	r2, r4, #8
 800cb3c:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
 800cb40:	0221      	lsls	r1, r4, #8
 800cb42:	ea42 1287 	orr.w	r2, r2, r7, lsl #6
 800cb46:	b289      	uxth	r1, r1
 800cb48:	430a      	orrs	r2, r1
 800cb4a:	f042 0237 	orr.w	r2, r2, #55	@ 0x37
  if (Mode == DSI_DCS_SHORT_PKT_READ)
 800cb4e:	f1b9 0f06 	cmp.w	r9, #6
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 800cb52:	66da      	str	r2, [r3, #108]	@ 0x6c
  if (Mode == DSI_DCS_SHORT_PKT_READ)
 800cb54:	d1d3      	bne.n	800cafe <HAL_DSI_Read+0x26>
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 800cb56:	9b09      	ldr	r3, [sp, #36]	@ 0x24
    DSI_ConfigPacketHeader(hdsi->Instance, ChannelNbr, Mode, DCSCmd, 0U);
 800cb58:	682a      	ldr	r2, [r5, #0]
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 800cb5a:	021b      	lsls	r3, r3, #8
 800cb5c:	ea43 1387 	orr.w	r3, r3, r7, lsl #6
 800cb60:	f043 0306 	orr.w	r3, r3, #6
 800cb64:	66d3      	str	r3, [r2, #108]	@ 0x6c
  tickstart = HAL_GetTick();
 800cb66:	f7fe ff67 	bl	800ba38 <HAL_GetTick>
  while (((int32_t)(datasize)) > 0)
 800cb6a:	2c00      	cmp	r4, #0
  tickstart = HAL_GetTick();
 800cb6c:	4607      	mov	r7, r0
  while (((int32_t)(datasize)) > 0)
 800cb6e:	dd36      	ble.n	800cbde <HAL_DSI_Read+0x106>
    if ((hdsi->Instance->GPSR & DSI_GPSR_PRDFE) == 0U)
 800cb70:	6829      	ldr	r1, [r5, #0]
 800cb72:	e00f      	b.n	800cb94 <HAL_DSI_Read+0xbc>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800cb74:	f7fe ff60 	bl	800ba38 <HAL_GetTick>
 800cb78:	1bc0      	subs	r0, r0, r7
 800cb7a:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 800cb7e:	d829      	bhi.n	800cbd4 <HAL_DSI_Read+0xfc>
    if ((hdsi->Instance->GPSR & DSI_GPSR_RCB) == 0U)
 800cb80:	6829      	ldr	r1, [r5, #0]
 800cb82:	6f4b      	ldr	r3, [r1, #116]	@ 0x74
 800cb84:	065a      	lsls	r2, r3, #25
 800cb86:	d403      	bmi.n	800cb90 <HAL_DSI_Read+0xb8>
      if ((hdsi->Instance->ISR[1U] & DSI_ISR1_PSE) == DSI_ISR1_PSE)
 800cb88:	f8d1 30c0 	ldr.w	r3, [r1, #192]	@ 0xc0
 800cb8c:	069b      	lsls	r3, r3, #26
 800cb8e:	d4c0      	bmi.n	800cb12 <HAL_DSI_Read+0x3a>
  while (((int32_t)(datasize)) > 0)
 800cb90:	2c00      	cmp	r4, #0
 800cb92:	dd24      	ble.n	800cbde <HAL_DSI_Read+0x106>
    if ((hdsi->Instance->GPSR & DSI_GPSR_PRDFE) == 0U)
 800cb94:	6f4b      	ldr	r3, [r1, #116]	@ 0x74
 800cb96:	06d8      	lsls	r0, r3, #27
 800cb98:	d4ec      	bmi.n	800cb74 <HAL_DSI_Read+0x9c>
      fifoword = hdsi->Instance->GPDR;
 800cb9a:	6f0b      	ldr	r3, [r1, #112]	@ 0x70
        *pdata = (uint8_t)(fifoword >> (8U * count));
 800cb9c:	7033      	strb	r3, [r6, #0]
      nbbytes = (datasize < 4U) ? datasize : 4U;
 800cb9e:	2c04      	cmp	r4, #4
 800cba0:	4622      	mov	r2, r4
 800cba2:	bf28      	it	cs
 800cba4:	2204      	movcs	r2, #4
      for (count = 0U; count < nbbytes; count++)
 800cba6:	2c01      	cmp	r4, #1
        *pdata = (uint8_t)(fifoword >> (8U * count));
 800cba8:	ea4f 2113 	mov.w	r1, r3, lsr #8
 800cbac:	ea4f 4013 	mov.w	r0, r3, lsr #16
      for (count = 0U; count < nbbytes; count++)
 800cbb0:	d908      	bls.n	800cbc4 <HAL_DSI_Read+0xec>
 800cbb2:	2c02      	cmp	r4, #2
        *pdata = (uint8_t)(fifoword >> (8U * count));
 800cbb4:	7071      	strb	r1, [r6, #1]
      for (count = 0U; count < nbbytes; count++)
 800cbb6:	d905      	bls.n	800cbc4 <HAL_DSI_Read+0xec>
 800cbb8:	2c03      	cmp	r4, #3
        *pdata = (uint8_t)(fifoword >> (8U * count));
 800cbba:	bf88      	it	hi
 800cbbc:	0e1b      	lsrhi	r3, r3, #24
 800cbbe:	70b0      	strb	r0, [r6, #2]
 800cbc0:	bf88      	it	hi
 800cbc2:	70f3      	strbhi	r3, [r6, #3]
        datasize--;
 800cbc4:	1aa4      	subs	r4, r4, r2
        pdata++;
 800cbc6:	4416      	add	r6, r2
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800cbc8:	f7fe ff36 	bl	800ba38 <HAL_GetTick>
 800cbcc:	1bc0      	subs	r0, r0, r7
 800cbce:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 800cbd2:	d9d5      	bls.n	800cb80 <HAL_DSI_Read+0xa8>
      __HAL_UNLOCK(hdsi);
 800cbd4:	2300      	movs	r3, #0
 800cbd6:	742b      	strb	r3, [r5, #16]
      return HAL_TIMEOUT;
 800cbd8:	2003      	movs	r0, #3
}
 800cbda:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  __HAL_UNLOCK(hdsi);
 800cbde:	2000      	movs	r0, #0
 800cbe0:	7428      	strb	r0, [r5, #16]
}
 800cbe2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    DSI_ConfigPacketHeader(hdsi->Instance, ChannelNbr, Mode, 0U, 0U);
 800cbe6:	682b      	ldr	r3, [r5, #0]
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 800cbe8:	01bf      	lsls	r7, r7, #6
 800cbea:	f047 0704 	orr.w	r7, r7, #4
 800cbee:	66df      	str	r7, [r3, #108]	@ 0x6c
}
 800cbf0:	e7b9      	b.n	800cb66 <HAL_DSI_Read+0x8e>
    DSI_ConfigPacketHeader(hdsi->Instance, ChannelNbr, Mode, ParametersTable[0U], ParametersTable[1U]);
 800cbf2:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800cbf4:	682a      	ldr	r2, [r5, #0]
 800cbf6:	7849      	ldrb	r1, [r1, #1]
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 800cbf8:	01bb      	lsls	r3, r7, #6
 800cbfa:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
    DSI_ConfigPacketHeader(hdsi->Instance, ChannelNbr, Mode, ParametersTable[0U], ParametersTable[1U]);
 800cbfe:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800cc00:	7809      	ldrb	r1, [r1, #0]
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 800cc02:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800cc06:	f043 0324 	orr.w	r3, r3, #36	@ 0x24
 800cc0a:	66d3      	str	r3, [r2, #108]	@ 0x6c
}
 800cc0c:	e7ab      	b.n	800cb66 <HAL_DSI_Read+0x8e>
  __HAL_LOCK(hdsi);
 800cc0e:	2002      	movs	r0, #2
}
 800cc10:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    DSI_ConfigPacketHeader(hdsi->Instance, ChannelNbr, Mode, ParametersTable[0U], 0U);
 800cc14:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800cc16:	682a      	ldr	r2, [r5, #0]
 800cc18:	7809      	ldrb	r1, [r1, #0]
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 800cc1a:	01bb      	lsls	r3, r7, #6
 800cc1c:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800cc20:	f043 0314 	orr.w	r3, r3, #20
 800cc24:	66d3      	str	r3, [r2, #108]	@ 0x6c
}
 800cc26:	e79e      	b.n	800cb66 <HAL_DSI_Read+0x8e>

0800cc28 <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800cc28:	7c02      	ldrb	r2, [r0, #16]
 800cc2a:	2a01      	cmp	r2, #1
{
 800cc2c:	4603      	mov	r3, r0
  __HAL_LOCK(hdsi);
 800cc2e:	d012      	beq.n	800cc56 <HAL_DSI_SetLowPowerRXFilter+0x2e>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 800cc30:	6802      	ldr	r2, [r0, #0]
 800cc32:	f8d2 041c 	ldr.w	r0, [r2, #1052]	@ 0x41c
 800cc36:	f020 60c0 	bic.w	r0, r0, #100663296	@ 0x6000000
 800cc3a:	f8c2 041c 	str.w	r0, [r2, #1052]	@ 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 800cc3e:	f8d2 041c 	ldr.w	r0, [r2, #1052]	@ 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800cc42:	f04f 0c00 	mov.w	ip, #0
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 800cc46:	ea40 6141 	orr.w	r1, r0, r1, lsl #25
 800cc4a:	f8c2 141c 	str.w	r1, [r2, #1052]	@ 0x41c

  return HAL_OK;
 800cc4e:	4660      	mov	r0, ip
  __HAL_UNLOCK(hdsi);
 800cc50:	f883 c010 	strb.w	ip, [r3, #16]
  return HAL_OK;
 800cc54:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800cc56:	2002      	movs	r0, #2
}
 800cc58:	4770      	bx	lr
 800cc5a:	bf00      	nop

0800cc5c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800cc5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 800cc60:	2300      	movs	r3, #0
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800cc62:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800cc64:	f8df a244 	ldr.w	sl, [pc, #580]	@ 800ceac <HAL_GPIO_Init+0x250>
{
 800cc68:	b085      	sub	sp, #20
    ioposition = 0x01U << position;
 800cc6a:	f04f 0b01 	mov.w	fp, #1

        temp = SYSCFG->EXTICR[position >> 2U];
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800cc6e:	4689      	mov	r9, r1
 800cc70:	e003      	b.n	800cc7a <HAL_GPIO_Init+0x1e>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800cc72:	3301      	adds	r3, #1
 800cc74:	2b10      	cmp	r3, #16
 800cc76:	f000 809c 	beq.w	800cdb2 <HAL_GPIO_Init+0x156>
    ioposition = 0x01U << position;
 800cc7a:	fa0b f203 	lsl.w	r2, fp, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800cc7e:	ea02 0804 	and.w	r8, r2, r4
    if(iocurrent == ioposition)
 800cc82:	43a2      	bics	r2, r4
 800cc84:	d1f5      	bne.n	800cc72 <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800cc86:	f8d9 1004 	ldr.w	r1, [r9, #4]
 800cc8a:	f001 0203 	and.w	r2, r1, #3
 800cc8e:	ea4f 0c43 	mov.w	ip, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800cc92:	2503      	movs	r5, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800cc94:	1e57      	subs	r7, r2, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800cc96:	fa05 f50c 	lsl.w	r5, r5, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800cc9a:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800cc9c:	ea6f 0505 	mvn.w	r5, r5
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800cca0:	f240 808a 	bls.w	800cdb8 <HAL_GPIO_Init+0x15c>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800cca4:	2a03      	cmp	r2, #3
 800cca6:	f040 80c0 	bne.w	800ce2a <HAL_GPIO_Init+0x1ce>
      temp = GPIOx->MODER;
 800ccaa:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800ccac:	fa02 f20c 	lsl.w	r2, r2, ip
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800ccb0:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800ccb2:	432a      	orrs	r2, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800ccb4:	f411 3f40 	tst.w	r1, #196608	@ 0x30000
      GPIOx->MODER = temp;
 800ccb8:	6002      	str	r2, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800ccba:	d0da      	beq.n	800cc72 <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800ccbc:	2200      	movs	r2, #0
 800ccbe:	9203      	str	r2, [sp, #12]
 800ccc0:	f8da 2044 	ldr.w	r2, [sl, #68]	@ 0x44
 800ccc4:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800ccc8:	f8ca 2044 	str.w	r2, [sl, #68]	@ 0x44
 800cccc:	f8da 2044 	ldr.w	r2, [sl, #68]	@ 0x44
 800ccd0:	f402 4280 	and.w	r2, r2, #16384	@ 0x4000
 800ccd4:	9203      	str	r2, [sp, #12]
 800ccd6:	9a03      	ldr	r2, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 800ccd8:	f023 0203 	bic.w	r2, r3, #3
 800ccdc:	f102 4280 	add.w	r2, r2, #1073741824	@ 0x40000000
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800cce0:	f003 0703 	and.w	r7, r3, #3
 800cce4:	260f      	movs	r6, #15
 800cce6:	f502 329c 	add.w	r2, r2, #79872	@ 0x13800
 800ccea:	00bf      	lsls	r7, r7, #2
 800ccec:	fa06 fc07 	lsl.w	ip, r6, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800ccf0:	4e6b      	ldr	r6, [pc, #428]	@ (800cea0 <HAL_GPIO_Init+0x244>)
        temp = SYSCFG->EXTICR[position >> 2U];
 800ccf2:	6895      	ldr	r5, [r2, #8]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800ccf4:	42b0      	cmp	r0, r6
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800ccf6:	ea25 050c 	bic.w	r5, r5, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800ccfa:	d031      	beq.n	800cd60 <HAL_GPIO_Init+0x104>
 800ccfc:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
 800cd00:	42b0      	cmp	r0, r6
 800cd02:	f000 809d 	beq.w	800ce40 <HAL_GPIO_Init+0x1e4>
 800cd06:	4e67      	ldr	r6, [pc, #412]	@ (800cea4 <HAL_GPIO_Init+0x248>)
 800cd08:	42b0      	cmp	r0, r6
 800cd0a:	f000 809f 	beq.w	800ce4c <HAL_GPIO_Init+0x1f0>
 800cd0e:	f8df c1a0 	ldr.w	ip, [pc, #416]	@ 800ceb0 <HAL_GPIO_Init+0x254>
 800cd12:	4560      	cmp	r0, ip
 800cd14:	f000 80a0 	beq.w	800ce58 <HAL_GPIO_Init+0x1fc>
 800cd18:	f8df c198 	ldr.w	ip, [pc, #408]	@ 800ceb4 <HAL_GPIO_Init+0x258>
 800cd1c:	4560      	cmp	r0, ip
 800cd1e:	f000 80a1 	beq.w	800ce64 <HAL_GPIO_Init+0x208>
 800cd22:	f8df c194 	ldr.w	ip, [pc, #404]	@ 800ceb8 <HAL_GPIO_Init+0x25c>
 800cd26:	4560      	cmp	r0, ip
 800cd28:	f000 80a8 	beq.w	800ce7c <HAL_GPIO_Init+0x220>
 800cd2c:	f8df c18c 	ldr.w	ip, [pc, #396]	@ 800cebc <HAL_GPIO_Init+0x260>
 800cd30:	4560      	cmp	r0, ip
 800cd32:	f000 80a9 	beq.w	800ce88 <HAL_GPIO_Init+0x22c>
 800cd36:	f8df c188 	ldr.w	ip, [pc, #392]	@ 800cec0 <HAL_GPIO_Init+0x264>
 800cd3a:	4560      	cmp	r0, ip
 800cd3c:	f000 8098 	beq.w	800ce70 <HAL_GPIO_Init+0x214>
 800cd40:	f8df c180 	ldr.w	ip, [pc, #384]	@ 800cec4 <HAL_GPIO_Init+0x268>
 800cd44:	4560      	cmp	r0, ip
 800cd46:	f000 80a5 	beq.w	800ce94 <HAL_GPIO_Init+0x238>
 800cd4a:	f8df c17c 	ldr.w	ip, [pc, #380]	@ 800cec8 <HAL_GPIO_Init+0x26c>
 800cd4e:	4560      	cmp	r0, ip
 800cd50:	bf0c      	ite	eq
 800cd52:	f04f 0c09 	moveq.w	ip, #9
 800cd56:	f04f 0c0a 	movne.w	ip, #10
 800cd5a:	fa0c f707 	lsl.w	r7, ip, r7
 800cd5e:	433d      	orrs	r5, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800cd60:	6095      	str	r5, [r2, #8]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800cd62:	4a51      	ldr	r2, [pc, #324]	@ (800cea8 <HAL_GPIO_Init+0x24c>)
 800cd64:	6892      	ldr	r2, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800cd66:	02ce      	lsls	r6, r1, #11
        temp &= ~((uint32_t)iocurrent);
 800cd68:	ea6f 0508 	mvn.w	r5, r8
        {
          temp |= iocurrent;
        }
        EXTI->RTSR = temp;
 800cd6c:	4e4e      	ldr	r6, [pc, #312]	@ (800cea8 <HAL_GPIO_Init+0x24c>)
        temp &= ~((uint32_t)iocurrent);
 800cd6e:	bf54      	ite	pl
 800cd70:	402a      	andpl	r2, r5
          temp |= iocurrent;
 800cd72:	ea48 0202 	orrmi.w	r2, r8, r2
        EXTI->RTSR = temp;
 800cd76:	60b2      	str	r2, [r6, #8]

        temp = EXTI->FTSR;
 800cd78:	68f2      	ldr	r2, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
        {
          temp |= iocurrent;
        }
        EXTI->FTSR = temp;
 800cd7a:	4e4b      	ldr	r6, [pc, #300]	@ (800cea8 <HAL_GPIO_Init+0x24c>)
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800cd7c:	028f      	lsls	r7, r1, #10
        temp &= ~((uint32_t)iocurrent);
 800cd7e:	bf54      	ite	pl
 800cd80:	402a      	andpl	r2, r5
          temp |= iocurrent;
 800cd82:	ea48 0202 	orrmi.w	r2, r8, r2
        EXTI->FTSR = temp;
 800cd86:	60f2      	str	r2, [r6, #12]

        temp = EXTI->EMR;
 800cd88:	6872      	ldr	r2, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800cd8a:	038e      	lsls	r6, r1, #14
        {
          temp |= iocurrent;
        }
        EXTI->EMR = temp;
 800cd8c:	4e46      	ldr	r6, [pc, #280]	@ (800cea8 <HAL_GPIO_Init+0x24c>)
        temp &= ~((uint32_t)iocurrent);
 800cd8e:	bf54      	ite	pl
 800cd90:	402a      	andpl	r2, r5
          temp |= iocurrent;
 800cd92:	ea48 0202 	orrmi.w	r2, r8, r2
        EXTI->EMR = temp;
 800cd96:	6072      	str	r2, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800cd98:	6832      	ldr	r2, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800cd9a:	03c9      	lsls	r1, r1, #15
  for(position = 0U; position < GPIO_NUMBER; position++)
 800cd9c:	f103 0301 	add.w	r3, r3, #1
        {
          temp |= iocurrent;
        }
        EXTI->IMR = temp;
 800cda0:	4941      	ldr	r1, [pc, #260]	@ (800cea8 <HAL_GPIO_Init+0x24c>)
        temp &= ~((uint32_t)iocurrent);
 800cda2:	bf54      	ite	pl
 800cda4:	402a      	andpl	r2, r5
          temp |= iocurrent;
 800cda6:	ea48 0202 	orrmi.w	r2, r8, r2
  for(position = 0U; position < GPIO_NUMBER; position++)
 800cdaa:	2b10      	cmp	r3, #16
        EXTI->IMR = temp;
 800cdac:	600a      	str	r2, [r1, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800cdae:	f47f af64 	bne.w	800cc7a <HAL_GPIO_Init+0x1e>
      }
    }
  }
}
 800cdb2:	b005      	add	sp, #20
 800cdb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp = GPIOx->OSPEEDR; 
 800cdb8:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800cdba:	ea07 0e05 	and.w	lr, r7, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
 800cdbe:	f8d9 700c 	ldr.w	r7, [r9, #12]
 800cdc2:	fa07 f70c 	lsl.w	r7, r7, ip
 800cdc6:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800cdca:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800cdcc:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800cdce:	ea27 0e08 	bic.w	lr, r7, r8
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800cdd2:	f3c1 1700 	ubfx	r7, r1, #4, #1
 800cdd6:	409f      	lsls	r7, r3
 800cdd8:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 800cddc:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800cdde:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800cde0:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800cde4:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800cde8:	fa07 f70c 	lsl.w	r7, r7, ip
 800cdec:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800cdf0:	2a02      	cmp	r2, #2
        GPIOx->PUPDR = temp;
 800cdf2:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800cdf4:	f47f af59 	bne.w	800ccaa <HAL_GPIO_Init+0x4e>
        temp = GPIOx->AFR[position >> 3U];
 800cdf8:	08df      	lsrs	r7, r3, #3
 800cdfa:	eb00 0787 	add.w	r7, r0, r7, lsl #2
 800cdfe:	9701      	str	r7, [sp, #4]
 800ce00:	6a3e      	ldr	r6, [r7, #32]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800ce02:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp = GPIOx->AFR[position >> 3U];
 800ce06:	9600      	str	r6, [sp, #0]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800ce08:	f003 0e07 	and.w	lr, r3, #7
 800ce0c:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800ce10:	260f      	movs	r6, #15
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800ce12:	fa07 f70e 	lsl.w	r7, r7, lr
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800ce16:	fa06 fe0e 	lsl.w	lr, r6, lr
 800ce1a:	9e00      	ldr	r6, [sp, #0]
 800ce1c:	ea26 0e0e 	bic.w	lr, r6, lr
        GPIOx->AFR[position >> 3U] = temp;
 800ce20:	9e01      	ldr	r6, [sp, #4]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800ce22:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 800ce26:	6237      	str	r7, [r6, #32]
 800ce28:	e73f      	b.n	800ccaa <HAL_GPIO_Init+0x4e>
        temp = GPIOx->PUPDR;
 800ce2a:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800ce2c:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800ce30:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800ce34:	fa07 f70c 	lsl.w	r7, r7, ip
 800ce38:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->PUPDR = temp;
 800ce3c:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800ce3e:	e734      	b.n	800ccaa <HAL_GPIO_Init+0x4e>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800ce40:	f04f 0c01 	mov.w	ip, #1
 800ce44:	fa0c f707 	lsl.w	r7, ip, r7
 800ce48:	433d      	orrs	r5, r7
 800ce4a:	e789      	b.n	800cd60 <HAL_GPIO_Init+0x104>
 800ce4c:	f04f 0c02 	mov.w	ip, #2
 800ce50:	fa0c f707 	lsl.w	r7, ip, r7
 800ce54:	433d      	orrs	r5, r7
 800ce56:	e783      	b.n	800cd60 <HAL_GPIO_Init+0x104>
 800ce58:	f04f 0c03 	mov.w	ip, #3
 800ce5c:	fa0c f707 	lsl.w	r7, ip, r7
 800ce60:	433d      	orrs	r5, r7
 800ce62:	e77d      	b.n	800cd60 <HAL_GPIO_Init+0x104>
 800ce64:	f04f 0c04 	mov.w	ip, #4
 800ce68:	fa0c f707 	lsl.w	r7, ip, r7
 800ce6c:	433d      	orrs	r5, r7
 800ce6e:	e777      	b.n	800cd60 <HAL_GPIO_Init+0x104>
 800ce70:	f04f 0c07 	mov.w	ip, #7
 800ce74:	fa0c f707 	lsl.w	r7, ip, r7
 800ce78:	433d      	orrs	r5, r7
 800ce7a:	e771      	b.n	800cd60 <HAL_GPIO_Init+0x104>
 800ce7c:	f04f 0c05 	mov.w	ip, #5
 800ce80:	fa0c f707 	lsl.w	r7, ip, r7
 800ce84:	433d      	orrs	r5, r7
 800ce86:	e76b      	b.n	800cd60 <HAL_GPIO_Init+0x104>
 800ce88:	f04f 0c06 	mov.w	ip, #6
 800ce8c:	fa0c f707 	lsl.w	r7, ip, r7
 800ce90:	433d      	orrs	r5, r7
 800ce92:	e765      	b.n	800cd60 <HAL_GPIO_Init+0x104>
 800ce94:	f04f 0c08 	mov.w	ip, #8
 800ce98:	fa0c f707 	lsl.w	r7, ip, r7
 800ce9c:	433d      	orrs	r5, r7
 800ce9e:	e75f      	b.n	800cd60 <HAL_GPIO_Init+0x104>
 800cea0:	40020000 	.word	0x40020000
 800cea4:	40020800 	.word	0x40020800
 800cea8:	40013c00 	.word	0x40013c00
 800ceac:	40023800 	.word	0x40023800
 800ceb0:	40020c00 	.word	0x40020c00
 800ceb4:	40021000 	.word	0x40021000
 800ceb8:	40021400 	.word	0x40021400
 800cebc:	40021800 	.word	0x40021800
 800cec0:	40021c00 	.word	0x40021c00
 800cec4:	40022000 	.word	0x40022000
 800cec8:	40022400 	.word	0x40022400

0800cecc <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 800cecc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  
  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 800ced0:	2300      	movs	r3, #0
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 800ced2:	4f5d      	ldr	r7, [pc, #372]	@ (800d048 <HAL_GPIO_DeInit+0x17c>)
{
 800ced4:	b083      	sub	sp, #12
    ioposition = 0x01U << position;
 800ced6:	2601      	movs	r6, #1
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800ced8:	f04f 090f 	mov.w	r9, #15
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800cedc:	f04f 0a03 	mov.w	sl, #3
 800cee0:	e002      	b.n	800cee8 <HAL_GPIO_DeInit+0x1c>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800cee2:	3301      	adds	r3, #1
 800cee4:	2b10      	cmp	r3, #16
 800cee6:	d07e      	beq.n	800cfe6 <HAL_GPIO_DeInit+0x11a>
    ioposition = 0x01U << position;
 800cee8:	fa06 f203 	lsl.w	r2, r6, r3
    if(iocurrent == ioposition)
 800ceec:	ea32 0401 	bics.w	r4, r2, r1
    iocurrent = (GPIO_Pin) & ioposition;
 800cef0:	ea02 0c01 	and.w	ip, r2, r1
    if(iocurrent == ioposition)
 800cef4:	d1f5      	bne.n	800cee2 <HAL_GPIO_DeInit+0x16>
      tmp = SYSCFG->EXTICR[position >> 2U];
 800cef6:	f023 0403 	bic.w	r4, r3, #3
 800cefa:	f104 4480 	add.w	r4, r4, #1073741824	@ 0x40000000
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800cefe:	f003 0503 	and.w	r5, r3, #3
 800cf02:	00ad      	lsls	r5, r5, #2
 800cf04:	f504 349c 	add.w	r4, r4, #79872	@ 0x13800
 800cf08:	fa09 f805 	lsl.w	r8, r9, r5
 800cf0c:	9501      	str	r5, [sp, #4]
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800cf0e:	4d4f      	ldr	r5, [pc, #316]	@ (800d04c <HAL_GPIO_DeInit+0x180>)
      tmp = SYSCFG->EXTICR[position >> 2U];
 800cf10:	f8d4 e008 	ldr.w	lr, [r4, #8]
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800cf14:	42a8      	cmp	r0, r5
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800cf16:	ea08 0e0e 	and.w	lr, r8, lr
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800cf1a:	d028      	beq.n	800cf6e <HAL_GPIO_DeInit+0xa2>
 800cf1c:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
 800cf20:	42a8      	cmp	r0, r5
 800cf22:	d063      	beq.n	800cfec <HAL_GPIO_DeInit+0x120>
 800cf24:	4d4a      	ldr	r5, [pc, #296]	@ (800d050 <HAL_GPIO_DeInit+0x184>)
 800cf26:	42a8      	cmp	r0, r5
 800cf28:	d064      	beq.n	800cff4 <HAL_GPIO_DeInit+0x128>
 800cf2a:	4d4a      	ldr	r5, [pc, #296]	@ (800d054 <HAL_GPIO_DeInit+0x188>)
 800cf2c:	42a8      	cmp	r0, r5
 800cf2e:	d067      	beq.n	800d000 <HAL_GPIO_DeInit+0x134>
 800cf30:	4d49      	ldr	r5, [pc, #292]	@ (800d058 <HAL_GPIO_DeInit+0x18c>)
 800cf32:	42a8      	cmp	r0, r5
 800cf34:	d06a      	beq.n	800d00c <HAL_GPIO_DeInit+0x140>
 800cf36:	f8df b124 	ldr.w	fp, [pc, #292]	@ 800d05c <HAL_GPIO_DeInit+0x190>
 800cf3a:	4558      	cmp	r0, fp
 800cf3c:	d06c      	beq.n	800d018 <HAL_GPIO_DeInit+0x14c>
 800cf3e:	f8df b120 	ldr.w	fp, [pc, #288]	@ 800d060 <HAL_GPIO_DeInit+0x194>
 800cf42:	4558      	cmp	r0, fp
 800cf44:	d06e      	beq.n	800d024 <HAL_GPIO_DeInit+0x158>
 800cf46:	f8df b11c 	ldr.w	fp, [pc, #284]	@ 800d064 <HAL_GPIO_DeInit+0x198>
 800cf4a:	4558      	cmp	r0, fp
 800cf4c:	d070      	beq.n	800d030 <HAL_GPIO_DeInit+0x164>
 800cf4e:	f8df b118 	ldr.w	fp, [pc, #280]	@ 800d068 <HAL_GPIO_DeInit+0x19c>
 800cf52:	4558      	cmp	r0, fp
 800cf54:	d072      	beq.n	800d03c <HAL_GPIO_DeInit+0x170>
 800cf56:	f8df b114 	ldr.w	fp, [pc, #276]	@ 800d06c <HAL_GPIO_DeInit+0x1a0>
 800cf5a:	9d01      	ldr	r5, [sp, #4]
 800cf5c:	4558      	cmp	r0, fp
 800cf5e:	bf14      	ite	ne
 800cf60:	f04f 0b0a 	movne.w	fp, #10
 800cf64:	f04f 0b09 	moveq.w	fp, #9
 800cf68:	fa0b f505 	lsl.w	r5, fp, r5
 800cf6c:	e000      	b.n	800cf70 <HAL_GPIO_DeInit+0xa4>
 800cf6e:	2500      	movs	r5, #0
 800cf70:	45ae      	cmp	lr, r5
 800cf72:	d113      	bne.n	800cf9c <HAL_GPIO_DeInit+0xd0>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 800cf74:	683d      	ldr	r5, [r7, #0]
 800cf76:	ea25 050c 	bic.w	r5, r5, ip
 800cf7a:	603d      	str	r5, [r7, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 800cf7c:	687d      	ldr	r5, [r7, #4]
 800cf7e:	ea25 050c 	bic.w	r5, r5, ip
 800cf82:	607d      	str	r5, [r7, #4]
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 800cf84:	68fd      	ldr	r5, [r7, #12]
 800cf86:	ea25 050c 	bic.w	r5, r5, ip
 800cf8a:	60fd      	str	r5, [r7, #12]
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 800cf8c:	68bd      	ldr	r5, [r7, #8]
 800cf8e:	ea25 050c 	bic.w	r5, r5, ip
 800cf92:	60bd      	str	r5, [r7, #8]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 800cf94:	68a5      	ldr	r5, [r4, #8]
 800cf96:	ea25 0508 	bic.w	r5, r5, r8
 800cf9a:	60a5      	str	r5, [r4, #8]
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800cf9c:	6804      	ldr	r4, [r0, #0]
 800cf9e:	005d      	lsls	r5, r3, #1
 800cfa0:	fa0a f505 	lsl.w	r5, sl, r5

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800cfa4:	ea4f 0cd3 	mov.w	ip, r3, lsr #3
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800cfa8:	ea24 0405 	bic.w	r4, r4, r5
 800cfac:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
 800cfb0:	6004      	str	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800cfb2:	f003 0407 	and.w	r4, r3, #7
 800cfb6:	f8dc e020 	ldr.w	lr, [ip, #32]
 800cfba:	00a4      	lsls	r4, r4, #2
 800cfbc:	fa09 f404 	lsl.w	r4, r9, r4
 800cfc0:	ea2e 0404 	bic.w	r4, lr, r4
 800cfc4:	f8cc 4020 	str.w	r4, [ip, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800cfc8:	68c4      	ldr	r4, [r0, #12]
 800cfca:	ea24 0405 	bic.w	r4, r4, r5
 800cfce:	60c4      	str	r4, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 800cfd0:	6844      	ldr	r4, [r0, #4]
 800cfd2:	ea24 0202 	bic.w	r2, r4, r2
 800cfd6:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800cfd8:	6882      	ldr	r2, [r0, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800cfda:	3301      	adds	r3, #1
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800cfdc:	ea22 0205 	bic.w	r2, r2, r5
  for(position = 0U; position < GPIO_NUMBER; position++)
 800cfe0:	2b10      	cmp	r3, #16
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800cfe2:	6082      	str	r2, [r0, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800cfe4:	d180      	bne.n	800cee8 <HAL_GPIO_DeInit+0x1c>
    }
  }
}
 800cfe6:	b003      	add	sp, #12
 800cfe8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800cfec:	9d01      	ldr	r5, [sp, #4]
 800cfee:	fa06 f505 	lsl.w	r5, r6, r5
 800cff2:	e7bd      	b.n	800cf70 <HAL_GPIO_DeInit+0xa4>
 800cff4:	9d01      	ldr	r5, [sp, #4]
 800cff6:	f04f 0b02 	mov.w	fp, #2
 800cffa:	fa0b f505 	lsl.w	r5, fp, r5
 800cffe:	e7b7      	b.n	800cf70 <HAL_GPIO_DeInit+0xa4>
 800d000:	9d01      	ldr	r5, [sp, #4]
 800d002:	f04f 0b03 	mov.w	fp, #3
 800d006:	fa0b f505 	lsl.w	r5, fp, r5
 800d00a:	e7b1      	b.n	800cf70 <HAL_GPIO_DeInit+0xa4>
 800d00c:	9d01      	ldr	r5, [sp, #4]
 800d00e:	f04f 0b04 	mov.w	fp, #4
 800d012:	fa0b f505 	lsl.w	r5, fp, r5
 800d016:	e7ab      	b.n	800cf70 <HAL_GPIO_DeInit+0xa4>
 800d018:	9d01      	ldr	r5, [sp, #4]
 800d01a:	f04f 0b05 	mov.w	fp, #5
 800d01e:	fa0b f505 	lsl.w	r5, fp, r5
 800d022:	e7a5      	b.n	800cf70 <HAL_GPIO_DeInit+0xa4>
 800d024:	9d01      	ldr	r5, [sp, #4]
 800d026:	f04f 0b06 	mov.w	fp, #6
 800d02a:	fa0b f505 	lsl.w	r5, fp, r5
 800d02e:	e79f      	b.n	800cf70 <HAL_GPIO_DeInit+0xa4>
 800d030:	9d01      	ldr	r5, [sp, #4]
 800d032:	f04f 0b07 	mov.w	fp, #7
 800d036:	fa0b f505 	lsl.w	r5, fp, r5
 800d03a:	e799      	b.n	800cf70 <HAL_GPIO_DeInit+0xa4>
 800d03c:	9d01      	ldr	r5, [sp, #4]
 800d03e:	f04f 0b08 	mov.w	fp, #8
 800d042:	fa0b f505 	lsl.w	r5, fp, r5
 800d046:	e793      	b.n	800cf70 <HAL_GPIO_DeInit+0xa4>
 800d048:	40013c00 	.word	0x40013c00
 800d04c:	40020000 	.word	0x40020000
 800d050:	40020800 	.word	0x40020800
 800d054:	40020c00 	.word	0x40020c00
 800d058:	40021000 	.word	0x40021000
 800d05c:	40021400 	.word	0x40021400
 800d060:	40021800 	.word	0x40021800
 800d064:	40021c00 	.word	0x40021c00
 800d068:	40022000 	.word	0x40022000
 800d06c:	40022400 	.word	0x40022400

0800d070 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800d070:	6903      	ldr	r3, [r0, #16]
 800d072:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800d074:	bf14      	ite	ne
 800d076:	2001      	movne	r0, #1
 800d078:	2000      	moveq	r0, #0
 800d07a:	4770      	bx	lr

0800d07c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800d07c:	b902      	cbnz	r2, 800d080 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800d07e:	0409      	lsls	r1, r1, #16
 800d080:	6181      	str	r1, [r0, #24]
  }
}
 800d082:	4770      	bx	lr

0800d084 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800d084:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800d086:	ea01 0203 	and.w	r2, r1, r3
 800d08a:	ea21 0103 	bic.w	r1, r1, r3
 800d08e:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800d092:	6181      	str	r1, [r0, #24]
}
 800d094:	4770      	bx	lr
 800d096:	bf00      	nop

0800d098 <HAL_GPIO_EXTI_IRQHandler>:
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800d098:	4a04      	ldr	r2, [pc, #16]	@ (800d0ac <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800d09a:	6951      	ldr	r1, [r2, #20]
 800d09c:	4201      	tst	r1, r0
 800d09e:	d100      	bne.n	800d0a2 <HAL_GPIO_EXTI_IRQHandler+0xa>
 800d0a0:	4770      	bx	lr
{
 800d0a2:	b508      	push	{r3, lr}
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800d0a4:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800d0a6:	f7f4 fdfd 	bl	8001ca4 <HAL_GPIO_EXTI_Callback>
  }
}
 800d0aa:	bd08      	pop	{r3, pc}
 800d0ac:	40013c00 	.word	0x40013c00

0800d0b0 <I2C_WaitOnMasterAddressFlagUntilTimeout.constprop.0>:
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800d0b0:	b570      	push	{r4, r5, r6, lr}
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800d0b2:	6803      	ldr	r3, [r0, #0]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800d0b4:	4604      	mov	r4, r0
 800d0b6:	1c48      	adds	r0, r1, #1
 800d0b8:	d003      	beq.n	800d0c2 <I2C_WaitOnMasterAddressFlagUntilTimeout.constprop.0+0x12>
 800d0ba:	e01e      	b.n	800d0fa <I2C_WaitOnMasterAddressFlagUntilTimeout.constprop.0+0x4a>
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800d0bc:	695a      	ldr	r2, [r3, #20]
 800d0be:	0551      	lsls	r1, r2, #21
 800d0c0:	d404      	bmi.n	800d0cc <I2C_WaitOnMasterAddressFlagUntilTimeout.constprop.0+0x1c>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800d0c2:	695a      	ldr	r2, [r3, #20]
 800d0c4:	0790      	lsls	r0, r2, #30
 800d0c6:	d5f9      	bpl.n	800d0bc <I2C_WaitOnMasterAddressFlagUntilTimeout.constprop.0+0xc>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800d0c8:	2000      	movs	r0, #0
}
 800d0ca:	bd70      	pop	{r4, r5, r6, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d0cc:	681a      	ldr	r2, [r3, #0]
 800d0ce:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800d0d2:	601a      	str	r2, [r3, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800d0d4:	2100      	movs	r1, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800d0d6:	f46f 6080 	mvn.w	r0, #1024	@ 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800d0da:	2220      	movs	r2, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800d0dc:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800d0de:	6321      	str	r1, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800d0e0:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800d0e4:	f884 103e 	strb.w	r1, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800d0e8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800d0ea:	f043 0304 	orr.w	r3, r3, #4
 800d0ee:	6423      	str	r3, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800d0f0:	2300      	movs	r3, #0
 800d0f2:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 800d0f6:	2001      	movs	r0, #1
}
 800d0f8:	bd70      	pop	{r4, r5, r6, pc}
 800d0fa:	460d      	mov	r5, r1
 800d0fc:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800d0fe:	695a      	ldr	r2, [r3, #20]
 800d100:	0792      	lsls	r2, r2, #30
 800d102:	d4e1      	bmi.n	800d0c8 <I2C_WaitOnMasterAddressFlagUntilTimeout.constprop.0+0x18>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800d104:	695a      	ldr	r2, [r3, #20]
 800d106:	0551      	lsls	r1, r2, #21
 800d108:	d4e0      	bmi.n	800d0cc <I2C_WaitOnMasterAddressFlagUntilTimeout.constprop.0+0x1c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d10a:	f7fe fc95 	bl	800ba38 <HAL_GetTick>
 800d10e:	1b80      	subs	r0, r0, r6
 800d110:	4285      	cmp	r5, r0
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 800d112:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d114:	d301      	bcc.n	800d11a <I2C_WaitOnMasterAddressFlagUntilTimeout.constprop.0+0x6a>
 800d116:	2d00      	cmp	r5, #0
 800d118:	d1f1      	bne.n	800d0fe <I2C_WaitOnMasterAddressFlagUntilTimeout.constprop.0+0x4e>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 800d11a:	695a      	ldr	r2, [r3, #20]
 800d11c:	0792      	lsls	r2, r2, #30
 800d11e:	d4ee      	bmi.n	800d0fe <I2C_WaitOnMasterAddressFlagUntilTimeout.constprop.0+0x4e>
          hi2c->PreviousState       = I2C_STATE_NONE;
 800d120:	2300      	movs	r3, #0
          hi2c->State               = HAL_I2C_STATE_READY;
 800d122:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 800d124:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 800d126:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 800d12a:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800d12e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800d130:	4313      	orrs	r3, r2
 800d132:	6423      	str	r3, [r4, #64]	@ 0x40
          return HAL_ERROR;
 800d134:	e7dc      	b.n	800d0f0 <I2C_WaitOnMasterAddressFlagUntilTimeout.constprop.0+0x40>
 800d136:	bf00      	nop

0800d138 <I2C_RequestMemoryWrite>:
{
 800d138:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800d13c:	6805      	ldr	r5, [r0, #0]
{
 800d13e:	b083      	sub	sp, #12
 800d140:	469a      	mov	sl, r3
 800d142:	f8dd 8030 	ldr.w	r8, [sp, #48]	@ 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800d146:	682b      	ldr	r3, [r5, #0]
{
 800d148:	f8dd b034 	ldr.w	fp, [sp, #52]	@ 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800d14c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800d150:	f1b8 3fff 	cmp.w	r8, #4294967295
{
 800d154:	4606      	mov	r6, r0
 800d156:	460f      	mov	r7, r1
 800d158:	4691      	mov	r9, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800d15a:	602b      	str	r3, [r5, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800d15c:	d114      	bne.n	800d188 <I2C_RequestMemoryWrite+0x50>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800d15e:	696c      	ldr	r4, [r5, #20]
 800d160:	07e2      	lsls	r2, r4, #31
 800d162:	d5fc      	bpl.n	800d15e <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800d164:	f007 07fe 	and.w	r7, r7, #254	@ 0xfe
 800d168:	612f      	str	r7, [r5, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800d16a:	465a      	mov	r2, fp
 800d16c:	4641      	mov	r1, r8
 800d16e:	4630      	mov	r0, r6
 800d170:	f7ff ff9e 	bl	800d0b0 <I2C_WaitOnMasterAddressFlagUntilTimeout.constprop.0>
 800d174:	4604      	mov	r4, r0
 800d176:	b1a8      	cbz	r0, 800d1a4 <I2C_RequestMemoryWrite+0x6c>
    return HAL_ERROR;
 800d178:	2401      	movs	r4, #1
 800d17a:	e04d      	b.n	800d218 <I2C_RequestMemoryWrite+0xe0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d17c:	f1b8 0f00 	cmp.w	r8, #0
 800d180:	d102      	bne.n	800d188 <I2C_RequestMemoryWrite+0x50>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 800d182:	696b      	ldr	r3, [r5, #20]
 800d184:	07d8      	lsls	r0, r3, #31
 800d186:	d536      	bpl.n	800d1f6 <I2C_RequestMemoryWrite+0xbe>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800d188:	696b      	ldr	r3, [r5, #20]
 800d18a:	07db      	lsls	r3, r3, #31
 800d18c:	d4ea      	bmi.n	800d164 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d18e:	f7fe fc53 	bl	800ba38 <HAL_GetTick>
 800d192:	eba0 000b 	sub.w	r0, r0, fp
 800d196:	4580      	cmp	r8, r0
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 800d198:	6835      	ldr	r5, [r6, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d19a:	d2ef      	bcs.n	800d17c <I2C_RequestMemoryWrite+0x44>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 800d19c:	696b      	ldr	r3, [r5, #20]
 800d19e:	07d8      	lsls	r0, r3, #31
 800d1a0:	d4f2      	bmi.n	800d188 <I2C_RequestMemoryWrite+0x50>
 800d1a2:	e028      	b.n	800d1f6 <I2C_RequestMemoryWrite+0xbe>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d1a4:	6833      	ldr	r3, [r6, #0]
 800d1a6:	9001      	str	r0, [sp, #4]
 800d1a8:	695a      	ldr	r2, [r3, #20]
 800d1aa:	9201      	str	r2, [sp, #4]
 800d1ac:	699a      	ldr	r2, [r3, #24]
 800d1ae:	9201      	str	r2, [sp, #4]
 800d1b0:	f1b8 3fff 	cmp.w	r8, #4294967295
 800d1b4:	9a01      	ldr	r2, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800d1b6:	d14e      	bne.n	800d256 <I2C_RequestMemoryWrite+0x11e>
 800d1b8:	695a      	ldr	r2, [r3, #20]
 800d1ba:	0610      	lsls	r0, r2, #24
 800d1bc:	d430      	bmi.n	800d220 <I2C_RequestMemoryWrite+0xe8>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800d1be:	695a      	ldr	r2, [r3, #20]
 800d1c0:	0551      	lsls	r1, r2, #21
 800d1c2:	d5f9      	bpl.n	800d1b8 <I2C_RequestMemoryWrite+0x80>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 800d1c4:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800d1c6:	f46f 6080 	mvn.w	r0, #1024	@ 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800d1ca:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800d1cc:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800d1ce:	6332      	str	r2, [r6, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800d1d0:	f886 103d 	strb.w	r1, [r6, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800d1d4:	f886 203e 	strb.w	r2, [r6, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800d1d8:	6c32      	ldr	r2, [r6, #64]	@ 0x40
 800d1da:	f042 0204 	orr.w	r2, r2, #4
 800d1de:	6432      	str	r2, [r6, #64]	@ 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800d1e0:	6c32      	ldr	r2, [r6, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800d1e2:	2100      	movs	r1, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800d1e4:	2a04      	cmp	r2, #4
          __HAL_UNLOCK(hi2c);
 800d1e6:	f886 103c 	strb.w	r1, [r6, #60]	@ 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800d1ea:	d1c5      	bne.n	800d178 <I2C_RequestMemoryWrite+0x40>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d1ec:	681a      	ldr	r2, [r3, #0]
 800d1ee:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800d1f2:	601a      	str	r2, [r3, #0]
 800d1f4:	e7c0      	b.n	800d178 <I2C_RequestMemoryWrite+0x40>
          hi2c->PreviousState     = I2C_STATE_NONE;
 800d1f6:	2200      	movs	r2, #0
          hi2c->State             = HAL_I2C_STATE_READY;
 800d1f8:	2320      	movs	r3, #32
          hi2c->PreviousState     = I2C_STATE_NONE;
 800d1fa:	6332      	str	r2, [r6, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 800d1fc:	f886 303d 	strb.w	r3, [r6, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 800d200:	f886 203e 	strb.w	r2, [r6, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800d204:	6c33      	ldr	r3, [r6, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800d206:	f886 203c 	strb.w	r2, [r6, #60]	@ 0x3c
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800d20a:	f043 0320 	orr.w	r3, r3, #32
 800d20e:	6433      	str	r3, [r6, #64]	@ 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800d210:	682b      	ldr	r3, [r5, #0]
 800d212:	05d9      	lsls	r1, r3, #23
 800d214:	d40e      	bmi.n	800d234 <I2C_RequestMemoryWrite+0xfc>
    return HAL_TIMEOUT;
 800d216:	2403      	movs	r4, #3
}
 800d218:	4620      	mov	r0, r4
 800d21a:	b003      	add	sp, #12
 800d21c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800d220:	f1ba 0f01 	cmp.w	sl, #1
 800d224:	d10a      	bne.n	800d23c <I2C_RequestMemoryWrite+0x104>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800d226:	fa5f f289 	uxtb.w	r2, r9
}
 800d22a:	4620      	mov	r0, r4
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800d22c:	611a      	str	r2, [r3, #16]
}
 800d22e:	b003      	add	sp, #12
 800d230:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800d234:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800d238:	6433      	str	r3, [r6, #64]	@ 0x40
 800d23a:	e7ec      	b.n	800d216 <I2C_RequestMemoryWrite+0xde>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800d23c:	ea4f 2219 	mov.w	r2, r9, lsr #8
 800d240:	f1b8 3fff 	cmp.w	r8, #4294967295
 800d244:	611a      	str	r2, [r3, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800d246:	d124      	bne.n	800d292 <I2C_RequestMemoryWrite+0x15a>
 800d248:	695a      	ldr	r2, [r3, #20]
 800d24a:	0610      	lsls	r0, r2, #24
 800d24c:	d4eb      	bmi.n	800d226 <I2C_RequestMemoryWrite+0xee>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800d24e:	695a      	ldr	r2, [r3, #20]
 800d250:	0551      	lsls	r1, r2, #21
 800d252:	d5f9      	bpl.n	800d248 <I2C_RequestMemoryWrite+0x110>
 800d254:	e7b6      	b.n	800d1c4 <I2C_RequestMemoryWrite+0x8c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800d256:	695a      	ldr	r2, [r3, #20]
 800d258:	0612      	lsls	r2, r2, #24
 800d25a:	d4e1      	bmi.n	800d220 <I2C_RequestMemoryWrite+0xe8>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800d25c:	695a      	ldr	r2, [r3, #20]
 800d25e:	0557      	lsls	r7, r2, #21
 800d260:	d4b0      	bmi.n	800d1c4 <I2C_RequestMemoryWrite+0x8c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d262:	f7fe fbe9 	bl	800ba38 <HAL_GetTick>
 800d266:	eba0 030b 	sub.w	r3, r0, fp
 800d26a:	4598      	cmp	r8, r3
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 800d26c:	6833      	ldr	r3, [r6, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d26e:	d302      	bcc.n	800d276 <I2C_RequestMemoryWrite+0x13e>
 800d270:	f1b8 0f00 	cmp.w	r8, #0
 800d274:	d1ef      	bne.n	800d256 <I2C_RequestMemoryWrite+0x11e>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 800d276:	695a      	ldr	r2, [r3, #20]
 800d278:	0615      	lsls	r5, r2, #24
 800d27a:	d4ec      	bmi.n	800d256 <I2C_RequestMemoryWrite+0x11e>
          hi2c->PreviousState       = I2C_STATE_NONE;
 800d27c:	2200      	movs	r2, #0
          hi2c->State               = HAL_I2C_STATE_READY;
 800d27e:	2120      	movs	r1, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 800d280:	6332      	str	r2, [r6, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 800d282:	f886 103d 	strb.w	r1, [r6, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 800d286:	f886 203e 	strb.w	r2, [r6, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800d28a:	6c32      	ldr	r2, [r6, #64]	@ 0x40
 800d28c:	430a      	orrs	r2, r1
 800d28e:	6432      	str	r2, [r6, #64]	@ 0x40
          return HAL_ERROR;
 800d290:	e7a6      	b.n	800d1e0 <I2C_RequestMemoryWrite+0xa8>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800d292:	695a      	ldr	r2, [r3, #20]
 800d294:	0612      	lsls	r2, r2, #24
 800d296:	d4c6      	bmi.n	800d226 <I2C_RequestMemoryWrite+0xee>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800d298:	695a      	ldr	r2, [r3, #20]
 800d29a:	0557      	lsls	r7, r2, #21
 800d29c:	d492      	bmi.n	800d1c4 <I2C_RequestMemoryWrite+0x8c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d29e:	f7fe fbcb 	bl	800ba38 <HAL_GetTick>
 800d2a2:	eba0 030b 	sub.w	r3, r0, fp
 800d2a6:	4598      	cmp	r8, r3
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 800d2a8:	6833      	ldr	r3, [r6, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d2aa:	d302      	bcc.n	800d2b2 <I2C_RequestMemoryWrite+0x17a>
 800d2ac:	f1b8 0f00 	cmp.w	r8, #0
 800d2b0:	d1ef      	bne.n	800d292 <I2C_RequestMemoryWrite+0x15a>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 800d2b2:	695a      	ldr	r2, [r3, #20]
 800d2b4:	0615      	lsls	r5, r2, #24
 800d2b6:	d4ec      	bmi.n	800d292 <I2C_RequestMemoryWrite+0x15a>
 800d2b8:	e7e0      	b.n	800d27c <I2C_RequestMemoryWrite+0x144>
 800d2ba:	bf00      	nop

0800d2bc <I2C_RequestMemoryRead>:
{
 800d2bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d2c0:	6805      	ldr	r5, [r0, #0]
{
 800d2c2:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d2c4:	682b      	ldr	r3, [r5, #0]
{
 800d2c6:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d2c8:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800d2cc:	602b      	str	r3, [r5, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800d2ce:	682b      	ldr	r3, [r5, #0]
{
 800d2d0:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 800d2d2:	f8dd a034 	ldr.w	sl, [sp, #52]	@ 0x34
 800d2d6:	4690      	mov	r8, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800d2d8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800d2dc:	1c7a      	adds	r2, r7, #1
{
 800d2de:	4606      	mov	r6, r0
 800d2e0:	468b      	mov	fp, r1
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800d2e2:	602b      	str	r3, [r5, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800d2e4:	d13d      	bne.n	800d362 <I2C_RequestMemoryRead+0xa6>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800d2e6:	696c      	ldr	r4, [r5, #20]
 800d2e8:	07e4      	lsls	r4, r4, #31
 800d2ea:	d5fc      	bpl.n	800d2e6 <I2C_RequestMemoryRead+0x2a>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800d2ec:	f00b 03fe 	and.w	r3, fp, #254	@ 0xfe
 800d2f0:	612b      	str	r3, [r5, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800d2f2:	4652      	mov	r2, sl
 800d2f4:	4639      	mov	r1, r7
 800d2f6:	4630      	mov	r0, r6
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800d2f8:	fa5f fb8b 	uxtb.w	fp, fp
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800d2fc:	f7ff fed8 	bl	800d0b0 <I2C_WaitOnMasterAddressFlagUntilTimeout.constprop.0>
 800d300:	bb38      	cbnz	r0, 800d352 <I2C_RequestMemoryRead+0x96>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d302:	9001      	str	r0, [sp, #4]
 800d304:	6830      	ldr	r0, [r6, #0]
 800d306:	6943      	ldr	r3, [r0, #20]
 800d308:	9301      	str	r3, [sp, #4]
 800d30a:	6983      	ldr	r3, [r0, #24]
 800d30c:	9301      	str	r3, [sp, #4]
 800d30e:	1c79      	adds	r1, r7, #1
 800d310:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800d312:	f040 8087 	bne.w	800d424 <I2C_RequestMemoryRead+0x168>
 800d316:	6943      	ldr	r3, [r0, #20]
 800d318:	061d      	lsls	r5, r3, #24
 800d31a:	d444      	bmi.n	800d3a6 <I2C_RequestMemoryRead+0xea>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800d31c:	6943      	ldr	r3, [r0, #20]
 800d31e:	055c      	lsls	r4, r3, #21
 800d320:	d5f9      	bpl.n	800d316 <I2C_RequestMemoryRead+0x5a>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800d322:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800d324:	f46f 6180 	mvn.w	r1, #1024	@ 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800d328:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800d32a:	6141      	str	r1, [r0, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800d32c:	6333      	str	r3, [r6, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800d32e:	f886 203d 	strb.w	r2, [r6, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800d332:	f886 303e 	strb.w	r3, [r6, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800d336:	6c33      	ldr	r3, [r6, #64]	@ 0x40
 800d338:	f043 0304 	orr.w	r3, r3, #4
 800d33c:	6433      	str	r3, [r6, #64]	@ 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800d33e:	6c33      	ldr	r3, [r6, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800d340:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800d342:	2b04      	cmp	r3, #4
          __HAL_UNLOCK(hi2c);
 800d344:	f886 203c 	strb.w	r2, [r6, #60]	@ 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800d348:	d103      	bne.n	800d352 <I2C_RequestMemoryRead+0x96>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d34a:	6803      	ldr	r3, [r0, #0]
 800d34c:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800d350:	6003      	str	r3, [r0, #0]
    return HAL_ERROR;
 800d352:	2001      	movs	r0, #1
}
 800d354:	b003      	add	sp, #12
 800d356:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d35a:	b917      	cbnz	r7, 800d362 <I2C_RequestMemoryRead+0xa6>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 800d35c:	696b      	ldr	r3, [r5, #20]
 800d35e:	07db      	lsls	r3, r3, #31
 800d360:	d50c      	bpl.n	800d37c <I2C_RequestMemoryRead+0xc0>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800d362:	696b      	ldr	r3, [r5, #20]
 800d364:	07d8      	lsls	r0, r3, #31
 800d366:	d4c1      	bmi.n	800d2ec <I2C_RequestMemoryRead+0x30>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d368:	f7fe fb66 	bl	800ba38 <HAL_GetTick>
 800d36c:	eba0 000a 	sub.w	r0, r0, sl
 800d370:	4287      	cmp	r7, r0
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 800d372:	6835      	ldr	r5, [r6, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d374:	d2f1      	bcs.n	800d35a <I2C_RequestMemoryRead+0x9e>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 800d376:	696b      	ldr	r3, [r5, #20]
 800d378:	07db      	lsls	r3, r3, #31
 800d37a:	d4f2      	bmi.n	800d362 <I2C_RequestMemoryRead+0xa6>
          hi2c->PreviousState     = I2C_STATE_NONE;
 800d37c:	2200      	movs	r2, #0
          hi2c->State             = HAL_I2C_STATE_READY;
 800d37e:	2320      	movs	r3, #32
          hi2c->PreviousState     = I2C_STATE_NONE;
 800d380:	6332      	str	r2, [r6, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 800d382:	f886 303d 	strb.w	r3, [r6, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 800d386:	f886 203e 	strb.w	r2, [r6, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800d38a:	6c33      	ldr	r3, [r6, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800d38c:	f886 203c 	strb.w	r2, [r6, #60]	@ 0x3c
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800d390:	f043 0320 	orr.w	r3, r3, #32
 800d394:	6433      	str	r3, [r6, #64]	@ 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800d396:	682b      	ldr	r3, [r5, #0]
 800d398:	05dd      	lsls	r5, r3, #23
 800d39a:	d502      	bpl.n	800d3a2 <I2C_RequestMemoryRead+0xe6>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800d39c:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800d3a0:	6433      	str	r3, [r6, #64]	@ 0x40
    return HAL_TIMEOUT;
 800d3a2:	2003      	movs	r0, #3
 800d3a4:	e7d6      	b.n	800d354 <I2C_RequestMemoryRead+0x98>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800d3a6:	f1b9 0f01 	cmp.w	r9, #1
 800d3aa:	d10b      	bne.n	800d3c4 <I2C_RequestMemoryRead+0x108>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800d3ac:	fa5f f388 	uxtb.w	r3, r8
 800d3b0:	1c7c      	adds	r4, r7, #1
 800d3b2:	6103      	str	r3, [r0, #16]
 800d3b4:	d154      	bne.n	800d460 <I2C_RequestMemoryRead+0x1a4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800d3b6:	6943      	ldr	r3, [r0, #20]
 800d3b8:	0619      	lsls	r1, r3, #24
 800d3ba:	d40f      	bmi.n	800d3dc <I2C_RequestMemoryRead+0x120>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800d3bc:	6943      	ldr	r3, [r0, #20]
 800d3be:	055a      	lsls	r2, r3, #21
 800d3c0:	d5f9      	bpl.n	800d3b6 <I2C_RequestMemoryRead+0xfa>
 800d3c2:	e7ae      	b.n	800d322 <I2C_RequestMemoryRead+0x66>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800d3c4:	ea4f 2318 	mov.w	r3, r8, lsr #8
 800d3c8:	1c7a      	adds	r2, r7, #1
 800d3ca:	6103      	str	r3, [r0, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800d3cc:	d15c      	bne.n	800d488 <I2C_RequestMemoryRead+0x1cc>
 800d3ce:	6943      	ldr	r3, [r0, #20]
 800d3d0:	061c      	lsls	r4, r3, #24
 800d3d2:	d4eb      	bmi.n	800d3ac <I2C_RequestMemoryRead+0xf0>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800d3d4:	6943      	ldr	r3, [r0, #20]
 800d3d6:	0559      	lsls	r1, r3, #21
 800d3d8:	d5f9      	bpl.n	800d3ce <I2C_RequestMemoryRead+0x112>
 800d3da:	e7a2      	b.n	800d322 <I2C_RequestMemoryRead+0x66>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800d3dc:	6803      	ldr	r3, [r0, #0]
 800d3de:	1c7d      	adds	r5, r7, #1
 800d3e0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800d3e4:	6003      	str	r3, [r0, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800d3e6:	d112      	bne.n	800d40e <I2C_RequestMemoryRead+0x152>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800d3e8:	6943      	ldr	r3, [r0, #20]
 800d3ea:	07da      	lsls	r2, r3, #31
 800d3ec:	d5fc      	bpl.n	800d3e8 <I2C_RequestMemoryRead+0x12c>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800d3ee:	f04b 0301 	orr.w	r3, fp, #1
 800d3f2:	6103      	str	r3, [r0, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800d3f4:	4652      	mov	r2, sl
 800d3f6:	4639      	mov	r1, r7
 800d3f8:	4630      	mov	r0, r6
 800d3fa:	f7ff fe59 	bl	800d0b0 <I2C_WaitOnMasterAddressFlagUntilTimeout.constprop.0>
 800d3fe:	3800      	subs	r0, #0
 800d400:	bf18      	it	ne
 800d402:	2001      	movne	r0, #1
 800d404:	e7a6      	b.n	800d354 <I2C_RequestMemoryRead+0x98>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d406:	b917      	cbnz	r7, 800d40e <I2C_RequestMemoryRead+0x152>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 800d408:	6943      	ldr	r3, [r0, #20]
 800d40a:	07dc      	lsls	r4, r3, #31
 800d40c:	d550      	bpl.n	800d4b0 <I2C_RequestMemoryRead+0x1f4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800d40e:	6943      	ldr	r3, [r0, #20]
 800d410:	07db      	lsls	r3, r3, #31
 800d412:	d4ec      	bmi.n	800d3ee <I2C_RequestMemoryRead+0x132>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d414:	f7fe fb10 	bl	800ba38 <HAL_GetTick>
 800d418:	eba0 030a 	sub.w	r3, r0, sl
 800d41c:	429f      	cmp	r7, r3
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 800d41e:	6830      	ldr	r0, [r6, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d420:	d2f1      	bcs.n	800d406 <I2C_RequestMemoryRead+0x14a>
 800d422:	e7f1      	b.n	800d408 <I2C_RequestMemoryRead+0x14c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800d424:	6943      	ldr	r3, [r0, #20]
 800d426:	0619      	lsls	r1, r3, #24
 800d428:	d4bd      	bmi.n	800d3a6 <I2C_RequestMemoryRead+0xea>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800d42a:	6943      	ldr	r3, [r0, #20]
 800d42c:	055a      	lsls	r2, r3, #21
 800d42e:	f53f af78 	bmi.w	800d322 <I2C_RequestMemoryRead+0x66>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d432:	f7fe fb01 	bl	800ba38 <HAL_GetTick>
 800d436:	eba0 030a 	sub.w	r3, r0, sl
 800d43a:	429f      	cmp	r7, r3
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 800d43c:	6830      	ldr	r0, [r6, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d43e:	d301      	bcc.n	800d444 <I2C_RequestMemoryRead+0x188>
 800d440:	2f00      	cmp	r7, #0
 800d442:	d1ef      	bne.n	800d424 <I2C_RequestMemoryRead+0x168>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 800d444:	6943      	ldr	r3, [r0, #20]
 800d446:	061b      	lsls	r3, r3, #24
 800d448:	d4ec      	bmi.n	800d424 <I2C_RequestMemoryRead+0x168>
          hi2c->PreviousState       = I2C_STATE_NONE;
 800d44a:	2300      	movs	r3, #0
          hi2c->State               = HAL_I2C_STATE_READY;
 800d44c:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 800d44e:	6333      	str	r3, [r6, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 800d450:	f886 203d 	strb.w	r2, [r6, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 800d454:	f886 303e 	strb.w	r3, [r6, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800d458:	6c33      	ldr	r3, [r6, #64]	@ 0x40
 800d45a:	4313      	orrs	r3, r2
 800d45c:	6433      	str	r3, [r6, #64]	@ 0x40
          return HAL_ERROR;
 800d45e:	e76e      	b.n	800d33e <I2C_RequestMemoryRead+0x82>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800d460:	6943      	ldr	r3, [r0, #20]
 800d462:	061b      	lsls	r3, r3, #24
 800d464:	d4ba      	bmi.n	800d3dc <I2C_RequestMemoryRead+0x120>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800d466:	6943      	ldr	r3, [r0, #20]
 800d468:	055b      	lsls	r3, r3, #21
 800d46a:	f53f af5a 	bmi.w	800d322 <I2C_RequestMemoryRead+0x66>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d46e:	f7fe fae3 	bl	800ba38 <HAL_GetTick>
 800d472:	eba0 030a 	sub.w	r3, r0, sl
 800d476:	429f      	cmp	r7, r3
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 800d478:	6830      	ldr	r0, [r6, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d47a:	d301      	bcc.n	800d480 <I2C_RequestMemoryRead+0x1c4>
 800d47c:	2f00      	cmp	r7, #0
 800d47e:	d1ef      	bne.n	800d460 <I2C_RequestMemoryRead+0x1a4>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 800d480:	6943      	ldr	r3, [r0, #20]
 800d482:	061d      	lsls	r5, r3, #24
 800d484:	d4ec      	bmi.n	800d460 <I2C_RequestMemoryRead+0x1a4>
 800d486:	e7e0      	b.n	800d44a <I2C_RequestMemoryRead+0x18e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800d488:	6943      	ldr	r3, [r0, #20]
 800d48a:	061a      	lsls	r2, r3, #24
 800d48c:	d48e      	bmi.n	800d3ac <I2C_RequestMemoryRead+0xf0>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800d48e:	6943      	ldr	r3, [r0, #20]
 800d490:	055b      	lsls	r3, r3, #21
 800d492:	f53f af46 	bmi.w	800d322 <I2C_RequestMemoryRead+0x66>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d496:	f7fe facf 	bl	800ba38 <HAL_GetTick>
 800d49a:	eba0 030a 	sub.w	r3, r0, sl
 800d49e:	429f      	cmp	r7, r3
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 800d4a0:	6830      	ldr	r0, [r6, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d4a2:	d301      	bcc.n	800d4a8 <I2C_RequestMemoryRead+0x1ec>
 800d4a4:	2f00      	cmp	r7, #0
 800d4a6:	d1ef      	bne.n	800d488 <I2C_RequestMemoryRead+0x1cc>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 800d4a8:	6943      	ldr	r3, [r0, #20]
 800d4aa:	061d      	lsls	r5, r3, #24
 800d4ac:	d4ec      	bmi.n	800d488 <I2C_RequestMemoryRead+0x1cc>
 800d4ae:	e7cc      	b.n	800d44a <I2C_RequestMemoryRead+0x18e>
          hi2c->PreviousState     = I2C_STATE_NONE;
 800d4b0:	2200      	movs	r2, #0
          hi2c->State             = HAL_I2C_STATE_READY;
 800d4b2:	2320      	movs	r3, #32
          hi2c->PreviousState     = I2C_STATE_NONE;
 800d4b4:	6332      	str	r2, [r6, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 800d4b6:	f886 303d 	strb.w	r3, [r6, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 800d4ba:	f886 203e 	strb.w	r2, [r6, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800d4be:	6c33      	ldr	r3, [r6, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800d4c0:	f886 203c 	strb.w	r2, [r6, #60]	@ 0x3c
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800d4c4:	f043 0320 	orr.w	r3, r3, #32
 800d4c8:	6433      	str	r3, [r6, #64]	@ 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800d4ca:	6803      	ldr	r3, [r0, #0]
 800d4cc:	05d9      	lsls	r1, r3, #23
 800d4ce:	f53f af65 	bmi.w	800d39c <I2C_RequestMemoryRead+0xe0>
 800d4d2:	e766      	b.n	800d3a2 <I2C_RequestMemoryRead+0xe6>

0800d4d4 <HAL_I2C_Init>:
  if (hi2c == NULL)
 800d4d4:	2800      	cmp	r0, #0
 800d4d6:	f000 80b8 	beq.w	800d64a <HAL_I2C_Init+0x176>
{
 800d4da:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800d4dc:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800d4e0:	4604      	mov	r4, r0
 800d4e2:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800d4e6:	2b00      	cmp	r3, #0
 800d4e8:	f000 8098 	beq.w	800d61c <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 800d4ec:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800d4ee:	2224      	movs	r2, #36	@ 0x24
 800d4f0:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800d4f4:	681a      	ldr	r2, [r3, #0]
 800d4f6:	f022 0201 	bic.w	r2, r2, #1
 800d4fa:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800d4fc:	681a      	ldr	r2, [r3, #0]
 800d4fe:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800d502:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800d504:	681a      	ldr	r2, [r3, #0]
 800d506:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800d50a:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800d50c:	f001 fa02 	bl	800e914 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800d510:	6865      	ldr	r5, [r4, #4]
 800d512:	4b4f      	ldr	r3, [pc, #316]	@ (800d650 <HAL_I2C_Init+0x17c>)
 800d514:	429d      	cmp	r5, r3
 800d516:	d84f      	bhi.n	800d5b8 <HAL_I2C_Init+0xe4>
 800d518:	4b4e      	ldr	r3, [pc, #312]	@ (800d654 <HAL_I2C_Init+0x180>)
 800d51a:	4298      	cmp	r0, r3
 800d51c:	d97c      	bls.n	800d618 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 800d51e:	4b4e      	ldr	r3, [pc, #312]	@ (800d658 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800d520:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 800d522:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800d526:	1e43      	subs	r3, r0, #1
 800d528:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800d52c:	6822      	ldr	r2, [r4, #0]
 800d52e:	6851      	ldr	r1, [r2, #4]
 800d530:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 800d534:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 800d538:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800d53a:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 800d53c:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800d540:	f10c 0c01 	add.w	ip, ip, #1
 800d544:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 800d548:	ea41 010c 	orr.w	r1, r1, ip
 800d54c:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800d54e:	69d1      	ldr	r1, [r2, #28]
 800d550:	f640 70fc 	movw	r0, #4092	@ 0xffc
 800d554:	3301      	adds	r3, #1
 800d556:	f421 414f 	bic.w	r1, r1, #52992	@ 0xcf00
 800d55a:	4203      	tst	r3, r0
 800d55c:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 800d560:	d161      	bne.n	800d626 <HAL_I2C_Init+0x152>
 800d562:	2304      	movs	r3, #4
 800d564:	430b      	orrs	r3, r1
 800d566:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800d568:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800d56c:	6811      	ldr	r1, [r2, #0]
 800d56e:	4303      	orrs	r3, r0
 800d570:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 800d574:	430b      	orrs	r3, r1
 800d576:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800d578:	6891      	ldr	r1, [r2, #8]
 800d57a:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800d57e:	f421 4103 	bic.w	r1, r1, #33536	@ 0x8300
 800d582:	4303      	orrs	r3, r0
 800d584:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 800d588:	430b      	orrs	r3, r1
 800d58a:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800d58c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800d590:	68d1      	ldr	r1, [r2, #12]
 800d592:	4303      	orrs	r3, r0
 800d594:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 800d598:	430b      	orrs	r3, r1
 800d59a:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800d59c:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800d59e:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 800d5a0:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 800d5a4:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 800d5a6:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800d5a8:	6423      	str	r3, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800d5aa:	f884 003d 	strb.w	r0, [r4, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800d5ae:	6323      	str	r3, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800d5b0:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
  return HAL_OK;
 800d5b4:	4618      	mov	r0, r3
}
 800d5b6:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800d5b8:	4b28      	ldr	r3, [pc, #160]	@ (800d65c <HAL_I2C_Init+0x188>)
 800d5ba:	4298      	cmp	r0, r3
 800d5bc:	d92c      	bls.n	800d618 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800d5be:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800d5c0:	4b25      	ldr	r3, [pc, #148]	@ (800d658 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800d5c2:	4e27      	ldr	r6, [pc, #156]	@ (800d660 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 800d5c4:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800d5c8:	1e43      	subs	r3, r0, #1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800d5ca:	6850      	ldr	r0, [r2, #4]
 800d5cc:	f020 003f 	bic.w	r0, r0, #63	@ 0x3f
 800d5d0:	ea40 409c 	orr.w	r0, r0, ip, lsr #18
 800d5d4:	6050      	str	r0, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800d5d6:	ea4f 419c 	mov.w	r1, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800d5da:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 800d5de:	fb00 f101 	mul.w	r1, r0, r1
 800d5e2:	fba6 6101 	umull	r6, r1, r6, r1
 800d5e6:	6a10      	ldr	r0, [r2, #32]
 800d5e8:	0989      	lsrs	r1, r1, #6
 800d5ea:	f020 003f 	bic.w	r0, r0, #63	@ 0x3f
 800d5ee:	3101      	adds	r1, #1
 800d5f0:	4301      	orrs	r1, r0
 800d5f2:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800d5f4:	69d1      	ldr	r1, [r2, #28]
 800d5f6:	68a0      	ldr	r0, [r4, #8]
 800d5f8:	f421 414f 	bic.w	r1, r1, #52992	@ 0xcf00
 800d5fc:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 800d600:	b9a0      	cbnz	r0, 800d62c <HAL_I2C_Init+0x158>
 800d602:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800d606:	fbb3 f3f5 	udiv	r3, r3, r5
 800d60a:	3301      	adds	r3, #1
 800d60c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800d610:	b1cb      	cbz	r3, 800d646 <HAL_I2C_Init+0x172>
 800d612:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800d616:	e7a5      	b.n	800d564 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800d618:	2001      	movs	r0, #1
}
 800d61a:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 800d61c:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_I2C_MspInit(hi2c);
 800d620:	f7f6 fc5a 	bl	8003ed8 <HAL_I2C_MspInit>
 800d624:	e762      	b.n	800d4ec <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800d626:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800d62a:	e79b      	b.n	800d564 <HAL_I2C_Init+0x90>
 800d62c:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800d630:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800d634:	fbb3 f3f5 	udiv	r3, r3, r5
 800d638:	3301      	adds	r3, #1
 800d63a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800d63e:	b113      	cbz	r3, 800d646 <HAL_I2C_Init+0x172>
 800d640:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800d644:	e78e      	b.n	800d564 <HAL_I2C_Init+0x90>
 800d646:	2301      	movs	r3, #1
 800d648:	e78c      	b.n	800d564 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800d64a:	2001      	movs	r0, #1
}
 800d64c:	4770      	bx	lr
 800d64e:	bf00      	nop
 800d650:	000186a0 	.word	0x000186a0
 800d654:	001e847f 	.word	0x001e847f
 800d658:	431bde83 	.word	0x431bde83
 800d65c:	003d08ff 	.word	0x003d08ff
 800d660:	10624dd3 	.word	0x10624dd3

0800d664 <HAL_I2C_Mem_Write>:
{
 800d664:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d668:	4604      	mov	r4, r0
 800d66a:	b082      	sub	sp, #8
 800d66c:	4699      	mov	r9, r3
 800d66e:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 800d672:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800d674:	460f      	mov	r7, r1
 800d676:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800d678:	f7fe f9de 	bl	800ba38 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800d67c:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 800d680:	2b20      	cmp	r3, #32
 800d682:	d004      	beq.n	800d68e <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 800d684:	2702      	movs	r7, #2
}
 800d686:	4638      	mov	r0, r7
 800d688:	b002      	add	sp, #8
 800d68a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800d68e:	4605      	mov	r5, r0
 800d690:	6820      	ldr	r0, [r4, #0]
 800d692:	6983      	ldr	r3, [r0, #24]
 800d694:	079b      	lsls	r3, r3, #30
 800d696:	d517      	bpl.n	800d6c8 <HAL_I2C_Mem_Write+0x64>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d698:	f7fe f9ce 	bl	800ba38 <HAL_GetTick>
 800d69c:	1b40      	subs	r0, r0, r5
 800d69e:	2819      	cmp	r0, #25
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 800d6a0:	6820      	ldr	r0, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d6a2:	d9f6      	bls.n	800d692 <HAL_I2C_Mem_Write+0x2e>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 800d6a4:	6983      	ldr	r3, [r0, #24]
 800d6a6:	43db      	mvns	r3, r3
 800d6a8:	f013 0302 	ands.w	r3, r3, #2
 800d6ac:	d1f1      	bne.n	800d692 <HAL_I2C_Mem_Write+0x2e>
          hi2c->State             = HAL_I2C_STATE_READY;
 800d6ae:	2220      	movs	r2, #32
          hi2c->PreviousState     = I2C_STATE_NONE;
 800d6b0:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 800d6b2:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 800d6b6:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800d6ba:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800d6bc:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800d6c0:	f042 0220 	orr.w	r2, r2, #32
 800d6c4:	6422      	str	r2, [r4, #64]	@ 0x40
          return HAL_ERROR;
 800d6c6:	e7dd      	b.n	800d684 <HAL_I2C_Mem_Write+0x20>
    __HAL_LOCK(hi2c);
 800d6c8:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 800d6cc:	2b01      	cmp	r3, #1
 800d6ce:	d0d9      	beq.n	800d684 <HAL_I2C_Mem_Write+0x20>
 800d6d0:	2301      	movs	r3, #1
 800d6d2:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800d6d6:	6803      	ldr	r3, [r0, #0]
 800d6d8:	07d9      	lsls	r1, r3, #31
 800d6da:	d572      	bpl.n	800d7c2 <HAL_I2C_Mem_Write+0x15e>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800d6dc:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800d6de:	6807      	ldr	r7, [r0, #0]
 800d6e0:	f427 6700 	bic.w	r7, r7, #2048	@ 0x800
 800d6e4:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800d6e6:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800d6e8:	6260      	str	r0, [r4, #36]	@ 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800d6ea:	2021      	movs	r0, #33	@ 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800d6ec:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800d6f0:	f884 003d 	strb.w	r0, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800d6f4:	2040      	movs	r0, #64	@ 0x40
 800d6f6:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800d6fa:	2000      	movs	r0, #0
 800d6fc:	6420      	str	r0, [r4, #64]	@ 0x40
    hi2c->XferCount   = Size;
 800d6fe:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800d702:	8d60      	ldrh	r0, [r4, #42]	@ 0x2a
 800d704:	8520      	strh	r0, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800d706:	484f      	ldr	r0, [pc, #316]	@ (800d844 <HAL_I2C_Mem_Write+0x1e0>)
 800d708:	62e0      	str	r0, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800d70a:	464b      	mov	r3, r9
 800d70c:	4642      	mov	r2, r8
 800d70e:	4620      	mov	r0, r4
 800d710:	f7ff fd12 	bl	800d138 <I2C_RequestMemoryWrite>
 800d714:	4607      	mov	r7, r0
 800d716:	bb18      	cbnz	r0, 800d760 <HAL_I2C_Mem_Write+0xfc>
    while (hi2c->XferSize > 0U)
 800d718:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800d71a:	6823      	ldr	r3, [r4, #0]
    while (hi2c->XferSize > 0U)
 800d71c:	2a00      	cmp	r2, #0
 800d71e:	d036      	beq.n	800d78e <HAL_I2C_Mem_Write+0x12a>
 800d720:	1c72      	adds	r2, r6, #1
 800d722:	d156      	bne.n	800d7d2 <HAL_I2C_Mem_Write+0x16e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800d724:	695a      	ldr	r2, [r3, #20]
 800d726:	0611      	lsls	r1, r2, #24
 800d728:	d41c      	bmi.n	800d764 <HAL_I2C_Mem_Write+0x100>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800d72a:	695a      	ldr	r2, [r3, #20]
 800d72c:	0552      	lsls	r2, r2, #21
 800d72e:	d5f9      	bpl.n	800d724 <HAL_I2C_Mem_Write+0xc0>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800d730:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800d732:	f46f 6080 	mvn.w	r0, #1024	@ 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800d736:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800d738:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800d73a:	6322      	str	r2, [r4, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800d73c:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800d740:	f884 203e 	strb.w	r2, [r4, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800d744:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800d746:	f042 0204 	orr.w	r2, r2, #4
 800d74a:	6422      	str	r2, [r4, #64]	@ 0x40
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800d74c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800d74e:	2100      	movs	r1, #0
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800d750:	2a04      	cmp	r2, #4
          __HAL_UNLOCK(hi2c);
 800d752:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800d756:	d103      	bne.n	800d760 <HAL_I2C_Mem_Write+0xfc>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d758:	681a      	ldr	r2, [r3, #0]
 800d75a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800d75e:	601a      	str	r2, [r3, #0]
      return HAL_ERROR;
 800d760:	2701      	movs	r7, #1
 800d762:	e790      	b.n	800d686 <HAL_I2C_Mem_Write+0x22>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800d764:	f8d4 c024 	ldr.w	ip, [r4, #36]	@ 0x24
      hi2c->XferSize--;
 800d768:	f8b4 e028 	ldrh.w	lr, [r4, #40]	@ 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800d76c:	4661      	mov	r1, ip
      hi2c->XferSize--;
 800d76e:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800d772:	f811 2b01 	ldrb.w	r2, [r1], #1
 800d776:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800d778:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->pBuffPtr++;
 800d77a:	6261      	str	r1, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 800d77c:	3a01      	subs	r2, #1
 800d77e:	b292      	uxth	r2, r2
 800d780:	8562      	strh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 800d782:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800d784:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800d786:	8522      	strh	r2, [r4, #40]	@ 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800d788:	0741      	lsls	r1, r0, #29
 800d78a:	d517      	bpl.n	800d7bc <HAL_I2C_Mem_Write+0x158>
 800d78c:	b942      	cbnz	r2, 800d7a0 <HAL_I2C_Mem_Write+0x13c>
 800d78e:	1c70      	adds	r0, r6, #1
 800d790:	d13b      	bne.n	800d80a <HAL_I2C_Mem_Write+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800d792:	695a      	ldr	r2, [r3, #20]
 800d794:	0750      	lsls	r0, r2, #29
 800d796:	d42b      	bmi.n	800d7f0 <HAL_I2C_Mem_Write+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800d798:	695a      	ldr	r2, [r3, #20]
 800d79a:	0551      	lsls	r1, r2, #21
 800d79c:	d5f9      	bpl.n	800d792 <HAL_I2C_Mem_Write+0x12e>
 800d79e:	e7c7      	b.n	800d730 <HAL_I2C_Mem_Write+0xcc>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800d7a0:	f89c 1001 	ldrb.w	r1, [ip, #1]
 800d7a4:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800d7a6:	f10c 0102 	add.w	r1, ip, #2
 800d7aa:	6261      	str	r1, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 800d7ac:	8d61      	ldrh	r1, [r4, #42]	@ 0x2a
        hi2c->XferSize--;
 800d7ae:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 800d7b2:	3901      	subs	r1, #1
        hi2c->XferSize--;
 800d7b4:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800d7b6:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800d7b8:	8522      	strh	r2, [r4, #40]	@ 0x28
        hi2c->XferCount--;
 800d7ba:	8561      	strh	r1, [r4, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 800d7bc:	2a00      	cmp	r2, #0
 800d7be:	d1af      	bne.n	800d720 <HAL_I2C_Mem_Write+0xbc>
 800d7c0:	e7e5      	b.n	800d78e <HAL_I2C_Mem_Write+0x12a>
      __HAL_I2C_ENABLE(hi2c);
 800d7c2:	6803      	ldr	r3, [r0, #0]
 800d7c4:	f043 0301 	orr.w	r3, r3, #1
 800d7c8:	6003      	str	r3, [r0, #0]
 800d7ca:	e787      	b.n	800d6dc <HAL_I2C_Mem_Write+0x78>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 800d7cc:	695a      	ldr	r2, [r3, #20]
 800d7ce:	0610      	lsls	r0, r2, #24
 800d7d0:	d52c      	bpl.n	800d82c <HAL_I2C_Mem_Write+0x1c8>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800d7d2:	695a      	ldr	r2, [r3, #20]
 800d7d4:	0610      	lsls	r0, r2, #24
 800d7d6:	d4c5      	bmi.n	800d764 <HAL_I2C_Mem_Write+0x100>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800d7d8:	695a      	ldr	r2, [r3, #20]
 800d7da:	0552      	lsls	r2, r2, #21
 800d7dc:	d4a8      	bmi.n	800d730 <HAL_I2C_Mem_Write+0xcc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d7de:	f7fe f92b 	bl	800ba38 <HAL_GetTick>
 800d7e2:	1b40      	subs	r0, r0, r5
 800d7e4:	4286      	cmp	r6, r0
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 800d7e6:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d7e8:	d3f0      	bcc.n	800d7cc <HAL_I2C_Mem_Write+0x168>
 800d7ea:	2e00      	cmp	r6, #0
 800d7ec:	d1f1      	bne.n	800d7d2 <HAL_I2C_Mem_Write+0x16e>
 800d7ee:	e7ed      	b.n	800d7cc <HAL_I2C_Mem_Write+0x168>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d7f0:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800d7f2:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d7f4:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 800d7f8:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d7fa:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800d7fc:	f884 003d 	strb.w	r0, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 800d800:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800d804:	f884 103e 	strb.w	r1, [r4, #62]	@ 0x3e
    return HAL_OK;
 800d808:	e73d      	b.n	800d686 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800d80a:	695a      	ldr	r2, [r3, #20]
 800d80c:	0752      	lsls	r2, r2, #29
 800d80e:	d4ef      	bmi.n	800d7f0 <HAL_I2C_Mem_Write+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800d810:	695a      	ldr	r2, [r3, #20]
 800d812:	0551      	lsls	r1, r2, #21
 800d814:	d48c      	bmi.n	800d730 <HAL_I2C_Mem_Write+0xcc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d816:	f7fe f90f 	bl	800ba38 <HAL_GetTick>
 800d81a:	1b43      	subs	r3, r0, r5
 800d81c:	429e      	cmp	r6, r3
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 800d81e:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d820:	d301      	bcc.n	800d826 <HAL_I2C_Mem_Write+0x1c2>
 800d822:	2e00      	cmp	r6, #0
 800d824:	d1f1      	bne.n	800d80a <HAL_I2C_Mem_Write+0x1a6>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 800d826:	695a      	ldr	r2, [r3, #20]
 800d828:	0752      	lsls	r2, r2, #29
 800d82a:	d4ee      	bmi.n	800d80a <HAL_I2C_Mem_Write+0x1a6>
          hi2c->PreviousState       = I2C_STATE_NONE;
 800d82c:	2200      	movs	r2, #0
          hi2c->State               = HAL_I2C_STATE_READY;
 800d82e:	2120      	movs	r1, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 800d830:	6322      	str	r2, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 800d832:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 800d836:	f884 203e 	strb.w	r2, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800d83a:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800d83c:	430a      	orrs	r2, r1
 800d83e:	6422      	str	r2, [r4, #64]	@ 0x40
          return HAL_ERROR;
 800d840:	e784      	b.n	800d74c <HAL_I2C_Mem_Write+0xe8>
 800d842:	bf00      	nop
 800d844:	ffff0000 	.word	0xffff0000

0800d848 <HAL_I2C_Mem_Read>:
{
 800d848:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d84c:	4604      	mov	r4, r0
 800d84e:	b086      	sub	sp, #24
 800d850:	4699      	mov	r9, r3
 800d852:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 800d856:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 800d858:	460f      	mov	r7, r1
 800d85a:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800d85c:	f7fe f8ec 	bl	800ba38 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800d860:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 800d864:	2b20      	cmp	r3, #32
 800d866:	d004      	beq.n	800d872 <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800d868:	2702      	movs	r7, #2
}
 800d86a:	4638      	mov	r0, r7
 800d86c:	b006      	add	sp, #24
 800d86e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800d872:	4606      	mov	r6, r0
 800d874:	6820      	ldr	r0, [r4, #0]
 800d876:	6983      	ldr	r3, [r0, #24]
 800d878:	079b      	lsls	r3, r3, #30
 800d87a:	d517      	bpl.n	800d8ac <HAL_I2C_Mem_Read+0x64>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d87c:	f7fe f8dc 	bl	800ba38 <HAL_GetTick>
 800d880:	1b80      	subs	r0, r0, r6
 800d882:	2819      	cmp	r0, #25
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 800d884:	6820      	ldr	r0, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d886:	d9f6      	bls.n	800d876 <HAL_I2C_Mem_Read+0x2e>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 800d888:	6983      	ldr	r3, [r0, #24]
 800d88a:	43db      	mvns	r3, r3
 800d88c:	f013 0302 	ands.w	r3, r3, #2
 800d890:	d1f1      	bne.n	800d876 <HAL_I2C_Mem_Read+0x2e>
          hi2c->State             = HAL_I2C_STATE_READY;
 800d892:	2220      	movs	r2, #32
          hi2c->PreviousState     = I2C_STATE_NONE;
 800d894:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 800d896:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 800d89a:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800d89e:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800d8a0:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800d8a4:	f042 0220 	orr.w	r2, r2, #32
 800d8a8:	6422      	str	r2, [r4, #64]	@ 0x40
          return HAL_ERROR;
 800d8aa:	e7dd      	b.n	800d868 <HAL_I2C_Mem_Read+0x20>
    __HAL_LOCK(hi2c);
 800d8ac:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 800d8b0:	2b01      	cmp	r3, #1
 800d8b2:	d0d9      	beq.n	800d868 <HAL_I2C_Mem_Read+0x20>
 800d8b4:	2301      	movs	r3, #1
 800d8b6:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800d8ba:	6803      	ldr	r3, [r0, #0]
 800d8bc:	07d9      	lsls	r1, r3, #31
 800d8be:	d561      	bpl.n	800d984 <HAL_I2C_Mem_Read+0x13c>
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800d8c0:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800d8c2:	6807      	ldr	r7, [r0, #0]
 800d8c4:	f427 6700 	bic.w	r7, r7, #2048	@ 0x800
 800d8c8:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800d8ca:	980e      	ldr	r0, [sp, #56]	@ 0x38
 800d8cc:	6260      	str	r0, [r4, #36]	@ 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800d8ce:	2022      	movs	r0, #34	@ 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800d8d0:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800d8d4:	f884 003d 	strb.w	r0, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800d8d8:	2040      	movs	r0, #64	@ 0x40
 800d8da:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800d8de:	2000      	movs	r0, #0
 800d8e0:	6420      	str	r0, [r4, #64]	@ 0x40
    hi2c->XferCount   = Size;
 800d8e2:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800d8e6:	8d60      	ldrh	r0, [r4, #42]	@ 0x2a
 800d8e8:	8520      	strh	r0, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800d8ea:	488b      	ldr	r0, [pc, #556]	@ (800db18 <HAL_I2C_Mem_Read+0x2d0>)
 800d8ec:	62e0      	str	r0, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800d8ee:	464b      	mov	r3, r9
 800d8f0:	4642      	mov	r2, r8
 800d8f2:	4620      	mov	r0, r4
 800d8f4:	f7ff fce2 	bl	800d2bc <I2C_RequestMemoryRead>
 800d8f8:	4607      	mov	r7, r0
 800d8fa:	2800      	cmp	r0, #0
 800d8fc:	d13d      	bne.n	800d97a <HAL_I2C_Mem_Read+0x132>
    if (hi2c->XferSize == 0U)
 800d8fe:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d900:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 800d902:	2a00      	cmp	r2, #0
 800d904:	d143      	bne.n	800d98e <HAL_I2C_Mem_Read+0x146>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d906:	9002      	str	r0, [sp, #8]
 800d908:	695a      	ldr	r2, [r3, #20]
 800d90a:	9202      	str	r2, [sp, #8]
 800d90c:	699a      	ldr	r2, [r3, #24]
 800d90e:	9202      	str	r2, [sp, #8]
 800d910:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d912:	681a      	ldr	r2, [r3, #0]
 800d914:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800d918:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800d91a:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800d91c:	2220      	movs	r2, #32
 800d91e:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 800d922:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800d926:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    return HAL_OK;
 800d92a:	e79e      	b.n	800d86a <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800d92c:	695a      	ldr	r2, [r3, #20]
 800d92e:	0652      	lsls	r2, r2, #25
 800d930:	f100 80ca 	bmi.w	800dac8 <HAL_I2C_Mem_Read+0x280>
 800d934:	2d00      	cmp	r5, #0
 800d936:	f000 80c3 	beq.w	800dac0 <HAL_I2C_Mem_Read+0x278>
 800d93a:	e00d      	b.n	800d958 <HAL_I2C_Mem_Read+0x110>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d93c:	f7fe f87c 	bl	800ba38 <HAL_GetTick>
 800d940:	1b80      	subs	r0, r0, r6
 800d942:	4285      	cmp	r5, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 800d944:	6823      	ldr	r3, [r4, #0]
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800d946:	d203      	bcs.n	800d950 <HAL_I2C_Mem_Read+0x108>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 800d948:	695a      	ldr	r2, [r3, #20]
 800d94a:	0651      	lsls	r1, r2, #25
 800d94c:	f140 8081 	bpl.w	800da52 <HAL_I2C_Mem_Read+0x20a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800d950:	695a      	ldr	r2, [r3, #20]
 800d952:	0652      	lsls	r2, r2, #25
 800d954:	f100 80b8 	bmi.w	800dac8 <HAL_I2C_Mem_Read+0x280>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800d958:	695a      	ldr	r2, [r3, #20]
 800d95a:	06d0      	lsls	r0, r2, #27
 800d95c:	d5ee      	bpl.n	800d93c <HAL_I2C_Mem_Read+0xf4>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800d95e:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800d960:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800d964:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800d966:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800d968:	6322      	str	r2, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800d96a:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800d96e:	f884 203e 	strb.w	r2, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800d972:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800d974:	6423      	str	r3, [r4, #64]	@ 0x40
      __HAL_UNLOCK(hi2c);
 800d976:	f884 203c 	strb.w	r2, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 800d97a:	2701      	movs	r7, #1
}
 800d97c:	4638      	mov	r0, r7
 800d97e:	b006      	add	sp, #24
 800d980:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      __HAL_I2C_ENABLE(hi2c);
 800d984:	6803      	ldr	r3, [r0, #0]
 800d986:	f043 0301 	orr.w	r3, r3, #1
 800d98a:	6003      	str	r3, [r0, #0]
 800d98c:	e798      	b.n	800d8c0 <HAL_I2C_Mem_Read+0x78>
    else if (hi2c->XferSize == 1U)
 800d98e:	2a01      	cmp	r2, #1
 800d990:	f000 8118 	beq.w	800dbc4 <HAL_I2C_Mem_Read+0x37c>
    else if (hi2c->XferSize == 2U)
 800d994:	2a02      	cmp	r2, #2
 800d996:	d07b      	beq.n	800da90 <HAL_I2C_Mem_Read+0x248>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d998:	9005      	str	r0, [sp, #20]
 800d99a:	6959      	ldr	r1, [r3, #20]
 800d99c:	9105      	str	r1, [sp, #20]
 800d99e:	6999      	ldr	r1, [r3, #24]
 800d9a0:	9105      	str	r1, [sp, #20]
 800d9a2:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800d9a4:	2a03      	cmp	r2, #3
 800d9a6:	d8c1      	bhi.n	800d92c <HAL_I2C_Mem_Read+0xe4>
        if (hi2c->XferSize == 1U)
 800d9a8:	2a01      	cmp	r2, #1
 800d9aa:	f000 80e0 	beq.w	800db6e <HAL_I2C_Mem_Read+0x326>
        else if (hi2c->XferSize == 2U)
 800d9ae:	2a02      	cmp	r2, #2
 800d9b0:	f000 80b4 	beq.w	800db1c <HAL_I2C_Mem_Read+0x2d4>
 800d9b4:	1c68      	adds	r0, r5, #1
 800d9b6:	d13e      	bne.n	800da36 <HAL_I2C_Mem_Read+0x1ee>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800d9b8:	695a      	ldr	r2, [r3, #20]
 800d9ba:	0751      	lsls	r1, r2, #29
 800d9bc:	d5fc      	bpl.n	800d9b8 <HAL_I2C_Mem_Read+0x170>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d9be:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d9c0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d9c2:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800d9c6:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d9c8:	691b      	ldr	r3, [r3, #16]
 800d9ca:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800d9cc:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
          hi2c->pBuffPtr++;
 800d9ce:	6a61      	ldr	r1, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 800d9d0:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 800d9d2:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800d9d4:	3a01      	subs	r2, #1
          hi2c->pBuffPtr++;
 800d9d6:	3101      	adds	r1, #1
          hi2c->XferCount--;
 800d9d8:	b29b      	uxth	r3, r3
 800d9da:	1c68      	adds	r0, r5, #1
          hi2c->XferSize--;
 800d9dc:	8522      	strh	r2, [r4, #40]	@ 0x28
          hi2c->pBuffPtr++;
 800d9de:	6261      	str	r1, [r4, #36]	@ 0x24
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800d9e0:	6822      	ldr	r2, [r4, #0]
          hi2c->XferCount--;
 800d9e2:	8563      	strh	r3, [r4, #42]	@ 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800d9e4:	d144      	bne.n	800da70 <HAL_I2C_Mem_Read+0x228>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800d9e6:	6953      	ldr	r3, [r2, #20]
 800d9e8:	0758      	lsls	r0, r3, #29
 800d9ea:	d5fc      	bpl.n	800d9e6 <HAL_I2C_Mem_Read+0x19e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d9ec:	6813      	ldr	r3, [r2, #0]
 800d9ee:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800d9f2:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d9f4:	6913      	ldr	r3, [r2, #16]
 800d9f6:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800d9f8:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
          hi2c->XferSize--;
 800d9fa:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
          hi2c->pBuffPtr++;
 800d9fc:	6a60      	ldr	r0, [r4, #36]	@ 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d9fe:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800da00:	3b01      	subs	r3, #1
 800da02:	b29b      	uxth	r3, r3
 800da04:	8563      	strh	r3, [r4, #42]	@ 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800da06:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800da08:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800da0a:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800da0e:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->pBuffPtr++;
 800da10:	f8c4 c024 	str.w	ip, [r4, #36]	@ 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800da14:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800da16:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 800da18:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
          hi2c->pBuffPtr++;
 800da1a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 800da1c:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800da1e:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800da20:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800da22:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800da24:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800da26:	6261      	str	r1, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 800da28:	8522      	strh	r2, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 800da2a:	8563      	strh	r3, [r4, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 800da2c:	2a00      	cmp	r2, #0
 800da2e:	f43f af74 	beq.w	800d91a <HAL_I2C_Mem_Read+0xd2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800da32:	6823      	ldr	r3, [r4, #0]
 800da34:	e7b6      	b.n	800d9a4 <HAL_I2C_Mem_Read+0x15c>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800da36:	695a      	ldr	r2, [r3, #20]
 800da38:	0752      	lsls	r2, r2, #29
 800da3a:	d4c0      	bmi.n	800d9be <HAL_I2C_Mem_Read+0x176>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800da3c:	f7fd fffc 	bl	800ba38 <HAL_GetTick>
 800da40:	1b80      	subs	r0, r0, r6
 800da42:	4285      	cmp	r5, r0
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 800da44:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800da46:	d301      	bcc.n	800da4c <HAL_I2C_Mem_Read+0x204>
 800da48:	2d00      	cmp	r5, #0
 800da4a:	d1f4      	bne.n	800da36 <HAL_I2C_Mem_Read+0x1ee>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 800da4c:	695a      	ldr	r2, [r3, #20]
 800da4e:	0752      	lsls	r2, r2, #29
 800da50:	d4f1      	bmi.n	800da36 <HAL_I2C_Mem_Read+0x1ee>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800da52:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800da54:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800da56:	6322      	str	r2, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800da58:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800da5c:	f884 203e 	strb.w	r2, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800da60:	6c23      	ldr	r3, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 800da62:	f884 203c 	strb.w	r2, [r4, #60]	@ 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800da66:	f043 0320 	orr.w	r3, r3, #32
 800da6a:	6423      	str	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
 800da6c:	2701      	movs	r7, #1
 800da6e:	e785      	b.n	800d97c <HAL_I2C_Mem_Read+0x134>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800da70:	6953      	ldr	r3, [r2, #20]
 800da72:	075b      	lsls	r3, r3, #29
 800da74:	f100 80a4 	bmi.w	800dbc0 <HAL_I2C_Mem_Read+0x378>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800da78:	f7fd ffde 	bl	800ba38 <HAL_GetTick>
 800da7c:	1b80      	subs	r0, r0, r6
 800da7e:	4285      	cmp	r5, r0
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 800da80:	6822      	ldr	r2, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800da82:	d301      	bcc.n	800da88 <HAL_I2C_Mem_Read+0x240>
 800da84:	2d00      	cmp	r5, #0
 800da86:	d1f3      	bne.n	800da70 <HAL_I2C_Mem_Read+0x228>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 800da88:	6953      	ldr	r3, [r2, #20]
 800da8a:	075b      	lsls	r3, r3, #29
 800da8c:	d4f0      	bmi.n	800da70 <HAL_I2C_Mem_Read+0x228>
 800da8e:	e7e0      	b.n	800da52 <HAL_I2C_Mem_Read+0x20a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800da90:	6819      	ldr	r1, [r3, #0]
 800da92:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 800da96:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800da98:	6819      	ldr	r1, [r3, #0]
 800da9a:	f441 6100 	orr.w	r1, r1, #2048	@ 0x800
 800da9e:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800daa0:	9004      	str	r0, [sp, #16]
 800daa2:	6959      	ldr	r1, [r3, #20]
 800daa4:	9104      	str	r1, [sp, #16]
 800daa6:	6999      	ldr	r1, [r3, #24]
 800daa8:	9104      	str	r1, [sp, #16]
 800daaa:	9904      	ldr	r1, [sp, #16]
 800daac:	e77a      	b.n	800d9a4 <HAL_I2C_Mem_Read+0x15c>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800daae:	f7fd ffc3 	bl	800ba38 <HAL_GetTick>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 800dab2:	6823      	ldr	r3, [r4, #0]
 800dab4:	695a      	ldr	r2, [r3, #20]
 800dab6:	0651      	lsls	r1, r2, #25
 800dab8:	d5cb      	bpl.n	800da52 <HAL_I2C_Mem_Read+0x20a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800daba:	695a      	ldr	r2, [r3, #20]
 800dabc:	0652      	lsls	r2, r2, #25
 800dabe:	d403      	bmi.n	800dac8 <HAL_I2C_Mem_Read+0x280>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800dac0:	695a      	ldr	r2, [r3, #20]
 800dac2:	06d0      	lsls	r0, r2, #27
 800dac4:	d5f3      	bpl.n	800daae <HAL_I2C_Mem_Read+0x266>
 800dac6:	e74a      	b.n	800d95e <HAL_I2C_Mem_Read+0x116>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800dac8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800daca:	691b      	ldr	r3, [r3, #16]
 800dacc:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800dace:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800dad0:	6821      	ldr	r1, [r4, #0]
        hi2c->XferSize--;
 800dad2:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
        hi2c->pBuffPtr++;
 800dad4:	6a60      	ldr	r0, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 800dad6:	3b01      	subs	r3, #1
 800dad8:	b29b      	uxth	r3, r3
 800dada:	8563      	strh	r3, [r4, #42]	@ 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800dadc:	694b      	ldr	r3, [r1, #20]
        hi2c->XferSize--;
 800dade:	3a01      	subs	r2, #1
 800dae0:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800dae2:	f100 0c01 	add.w	ip, r0, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800dae6:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800dae8:	8522      	strh	r2, [r4, #40]	@ 0x28
        hi2c->pBuffPtr++;
 800daea:	f8c4 c024 	str.w	ip, [r4, #36]	@ 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800daee:	d59d      	bpl.n	800da2c <HAL_I2C_Mem_Read+0x1e4>
          if (hi2c->XferSize == 3U)
 800daf0:	2a03      	cmp	r2, #3
 800daf2:	d103      	bne.n	800dafc <HAL_I2C_Mem_Read+0x2b4>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800daf4:	680b      	ldr	r3, [r1, #0]
 800daf6:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800dafa:	600b      	str	r3, [r1, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800dafc:	690b      	ldr	r3, [r1, #16]
 800dafe:	7043      	strb	r3, [r0, #1]
          hi2c->pBuffPtr++;
 800db00:	6a63      	ldr	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 800db02:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
          hi2c->pBuffPtr++;
 800db04:	3301      	adds	r3, #1
 800db06:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferCount--;
 800db08:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
          hi2c->XferSize--;
 800db0a:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800db0c:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800db0e:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800db10:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800db12:	8522      	strh	r2, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 800db14:	8563      	strh	r3, [r4, #42]	@ 0x2a
 800db16:	e789      	b.n	800da2c <HAL_I2C_Mem_Read+0x1e4>
 800db18:	ffff0000 	.word	0xffff0000
 800db1c:	1c6a      	adds	r2, r5, #1
 800db1e:	d117      	bne.n	800db50 <HAL_I2C_Mem_Read+0x308>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800db20:	695a      	ldr	r2, [r3, #20]
 800db22:	0750      	lsls	r0, r2, #29
 800db24:	d5fc      	bpl.n	800db20 <HAL_I2C_Mem_Read+0x2d8>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800db26:	681a      	ldr	r2, [r3, #0]
 800db28:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800db2c:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800db2e:	691a      	ldr	r2, [r3, #16]
 800db30:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800db32:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800db34:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
          hi2c->pBuffPtr++;
 800db36:	6a62      	ldr	r2, [r4, #36]	@ 0x24
          hi2c->XferCount--;
 800db38:	3b01      	subs	r3, #1
 800db3a:	b29b      	uxth	r3, r3
 800db3c:	8563      	strh	r3, [r4, #42]	@ 0x2a
          hi2c->XferSize--;
 800db3e:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800db40:	3b01      	subs	r3, #1
 800db42:	8523      	strh	r3, [r4, #40]	@ 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800db44:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800db46:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800db48:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800db4a:	6261      	str	r1, [r4, #36]	@ 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800db4c:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800db4e:	e7d7      	b.n	800db00 <HAL_I2C_Mem_Read+0x2b8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800db50:	695a      	ldr	r2, [r3, #20]
 800db52:	0751      	lsls	r1, r2, #29
 800db54:	d4e7      	bmi.n	800db26 <HAL_I2C_Mem_Read+0x2de>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800db56:	f7fd ff6f 	bl	800ba38 <HAL_GetTick>
 800db5a:	1b80      	subs	r0, r0, r6
 800db5c:	4285      	cmp	r5, r0
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 800db5e:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800db60:	d301      	bcc.n	800db66 <HAL_I2C_Mem_Read+0x31e>
 800db62:	2d00      	cmp	r5, #0
 800db64:	d1f4      	bne.n	800db50 <HAL_I2C_Mem_Read+0x308>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 800db66:	695a      	ldr	r2, [r3, #20]
 800db68:	0751      	lsls	r1, r2, #29
 800db6a:	d4f1      	bmi.n	800db50 <HAL_I2C_Mem_Read+0x308>
 800db6c:	e771      	b.n	800da52 <HAL_I2C_Mem_Read+0x20a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800db6e:	695a      	ldr	r2, [r3, #20]
 800db70:	0650      	lsls	r0, r2, #25
 800db72:	d421      	bmi.n	800dbb8 <HAL_I2C_Mem_Read+0x370>
 800db74:	b1e5      	cbz	r5, 800dbb0 <HAL_I2C_Mem_Read+0x368>
 800db76:	e00c      	b.n	800db92 <HAL_I2C_Mem_Read+0x34a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800db78:	f7fd ff5e 	bl	800ba38 <HAL_GetTick>
 800db7c:	1b80      	subs	r0, r0, r6
 800db7e:	42a8      	cmp	r0, r5
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 800db80:	6823      	ldr	r3, [r4, #0]
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800db82:	d903      	bls.n	800db8c <HAL_I2C_Mem_Read+0x344>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 800db84:	695a      	ldr	r2, [r3, #20]
 800db86:	0652      	lsls	r2, r2, #25
 800db88:	f57f af63 	bpl.w	800da52 <HAL_I2C_Mem_Read+0x20a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800db8c:	695a      	ldr	r2, [r3, #20]
 800db8e:	0650      	lsls	r0, r2, #25
 800db90:	d412      	bmi.n	800dbb8 <HAL_I2C_Mem_Read+0x370>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800db92:	695a      	ldr	r2, [r3, #20]
 800db94:	06d1      	lsls	r1, r2, #27
 800db96:	f53f aee2 	bmi.w	800d95e <HAL_I2C_Mem_Read+0x116>
 800db9a:	e7ed      	b.n	800db78 <HAL_I2C_Mem_Read+0x330>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800db9c:	f7fd ff4c 	bl	800ba38 <HAL_GetTick>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 800dba0:	6823      	ldr	r3, [r4, #0]
 800dba2:	695a      	ldr	r2, [r3, #20]
 800dba4:	0652      	lsls	r2, r2, #25
 800dba6:	f57f af54 	bpl.w	800da52 <HAL_I2C_Mem_Read+0x20a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800dbaa:	695a      	ldr	r2, [r3, #20]
 800dbac:	0650      	lsls	r0, r2, #25
 800dbae:	d403      	bmi.n	800dbb8 <HAL_I2C_Mem_Read+0x370>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800dbb0:	695a      	ldr	r2, [r3, #20]
 800dbb2:	06d1      	lsls	r1, r2, #27
 800dbb4:	d5f2      	bpl.n	800db9c <HAL_I2C_Mem_Read+0x354>
 800dbb6:	e6d2      	b.n	800d95e <HAL_I2C_Mem_Read+0x116>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800dbb8:	691a      	ldr	r2, [r3, #16]
 800dbba:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800dbbc:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800dbbe:	e79f      	b.n	800db00 <HAL_I2C_Mem_Read+0x2b8>
 800dbc0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800dbc2:	e713      	b.n	800d9ec <HAL_I2C_Mem_Read+0x1a4>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800dbc4:	6819      	ldr	r1, [r3, #0]
 800dbc6:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 800dbca:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800dbcc:	9003      	str	r0, [sp, #12]
 800dbce:	6959      	ldr	r1, [r3, #20]
 800dbd0:	9103      	str	r1, [sp, #12]
 800dbd2:	6999      	ldr	r1, [r3, #24]
 800dbd4:	9103      	str	r1, [sp, #12]
 800dbd6:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800dbd8:	6819      	ldr	r1, [r3, #0]
 800dbda:	f441 7100 	orr.w	r1, r1, #512	@ 0x200
 800dbde:	6019      	str	r1, [r3, #0]
 800dbe0:	e6e0      	b.n	800d9a4 <HAL_I2C_Mem_Read+0x15c>
 800dbe2:	bf00      	nop

0800dbe4 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800dbe4:	2800      	cmp	r0, #0
 800dbe6:	d069      	beq.n	800dcbc <HAL_LTDC_Init+0xd8>
{
 800dbe8:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800dbea:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 800dbee:	4604      	mov	r4, r0
 800dbf0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800dbf4:	2b00      	cmp	r3, #0
 800dbf6:	d05c      	beq.n	800dcb2 <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800dbf8:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800dbfa:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800dbfc:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800dc00:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800dc04:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800dc06:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800dc08:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800dc0c:	f021 4170 	bic.w	r1, r1, #4026531840	@ 0xf0000000
 800dc10:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800dc12:	6999      	ldr	r1, [r3, #24]
 800dc14:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800dc16:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800dc18:	430a      	orrs	r2, r1
 800dc1a:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800dc1c:	689a      	ldr	r2, [r3, #8]
 800dc1e:	4928      	ldr	r1, [pc, #160]	@ (800dcc0 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800dc20:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800dc22:	400a      	ands	r2, r1
 800dc24:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800dc26:	689a      	ldr	r2, [r3, #8]
 800dc28:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800dc2c:	69a0      	ldr	r0, [r4, #24]
 800dc2e:	4302      	orrs	r2, r0
 800dc30:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800dc32:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800dc34:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800dc36:	400a      	ands	r2, r1
 800dc38:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800dc3a:	68da      	ldr	r2, [r3, #12]
 800dc3c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800dc40:	6a20      	ldr	r0, [r4, #32]
 800dc42:	4302      	orrs	r2, r0
 800dc44:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800dc46:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800dc48:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800dc4a:	400a      	ands	r2, r1
 800dc4c:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800dc4e:	691a      	ldr	r2, [r3, #16]
 800dc50:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800dc54:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800dc56:	4302      	orrs	r2, r0
 800dc58:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800dc5a:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800dc5c:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800dc5e:	400a      	ands	r2, r1
 800dc60:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800dc62:	695a      	ldr	r2, [r3, #20]
 800dc64:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800dc66:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800dc6a:	430a      	orrs	r2, r1
 800dc6c:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800dc6e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800dc70:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800dc74:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800dc78:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 800dc7c:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800dc7e:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 800dc80:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 800dc84:	432a      	orrs	r2, r5
 800dc86:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800dc8a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800dc8e:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800dc90:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800dc92:	f042 0206 	orr.w	r2, r2, #6
 800dc96:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800dc98:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800dc9a:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800dc9e:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800dca0:	ea42 020c 	orr.w	r2, r2, ip
 800dca4:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800dca6:	f8c4 10a4 	str.w	r1, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800dcaa:	f884 c0a1 	strb.w	ip, [r4, #161]	@ 0xa1

  return HAL_OK;
 800dcae:	4608      	mov	r0, r1
}
 800dcb0:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800dcb2:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 800dcb6:	f7f6 f955 	bl	8003f64 <HAL_LTDC_MspInit>
 800dcba:	e79d      	b.n	800dbf8 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800dcbc:	2001      	movs	r0, #1
}
 800dcbe:	4770      	bx	lr
 800dcc0:	f000f800 	.word	0xf000f800

0800dcc4 <HAL_LTDC_ErrorCallback>:
  * @brief  Error LTDC callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 800dcc4:	4770      	bx	lr
 800dcc6:	bf00      	nop

0800dcc8 <HAL_LTDC_LineEventCallback>:
  * @brief  Line Event callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef *hltdc)
 800dcc8:	4770      	bx	lr
 800dcca:	bf00      	nop

0800dccc <HAL_LTDC_ReloadEventCallback>:
  * @brief  Reload Event callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 800dccc:	4770      	bx	lr
 800dcce:	bf00      	nop

0800dcd0 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800dcd0:	6803      	ldr	r3, [r0, #0]
{
 800dcd2:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800dcd4:	6b9d      	ldr	r5, [r3, #56]	@ 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800dcd6:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800dcd8:	076a      	lsls	r2, r5, #29
{
 800dcda:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800dcdc:	d501      	bpl.n	800dce2 <HAL_LTDC_IRQHandler+0x12>
 800dcde:	0771      	lsls	r1, r6, #29
 800dce0:	d41d      	bmi.n	800dd1e <HAL_LTDC_IRQHandler+0x4e>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800dce2:	07aa      	lsls	r2, r5, #30
 800dce4:	d501      	bpl.n	800dcea <HAL_LTDC_IRQHandler+0x1a>
 800dce6:	07b3      	lsls	r3, r6, #30
 800dce8:	d42d      	bmi.n	800dd46 <HAL_LTDC_IRQHandler+0x76>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800dcea:	07e8      	lsls	r0, r5, #31
 800dcec:	d501      	bpl.n	800dcf2 <HAL_LTDC_IRQHandler+0x22>
 800dcee:	07f1      	lsls	r1, r6, #31
 800dcf0:	d440      	bmi.n	800dd74 <HAL_LTDC_IRQHandler+0xa4>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800dcf2:	072a      	lsls	r2, r5, #28
 800dcf4:	d501      	bpl.n	800dcfa <HAL_LTDC_IRQHandler+0x2a>
 800dcf6:	0733      	lsls	r3, r6, #28
 800dcf8:	d400      	bmi.n	800dcfc <HAL_LTDC_IRQHandler+0x2c>
}
 800dcfa:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800dcfc:	6823      	ldr	r3, [r4, #0]
 800dcfe:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800dd00:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800dd02:	f022 0208 	bic.w	r2, r2, #8
 800dd06:	635a      	str	r2, [r3, #52]	@ 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800dd08:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800dd0a:	63d8      	str	r0, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 800dd0c:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800dd0e:	f884 10a1 	strb.w	r1, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800dd12:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800dd16:	4620      	mov	r0, r4
 800dd18:	f7ff ffd8 	bl	800dccc <HAL_LTDC_ReloadEventCallback>
}
 800dd1c:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800dd1e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800dd20:	f022 0204 	bic.w	r2, r2, #4
 800dd24:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800dd26:	2204      	movs	r2, #4
 800dd28:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800dd2a:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 800dd2e:	f043 0301 	orr.w	r3, r3, #1
 800dd32:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 800dd36:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800dd38:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800dd3c:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800dd40:	f7ff ffc0 	bl	800dcc4 <HAL_LTDC_ErrorCallback>
 800dd44:	e7cd      	b.n	800dce2 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800dd46:	6823      	ldr	r3, [r4, #0]
 800dd48:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800dd4a:	f022 0202 	bic.w	r2, r2, #2
 800dd4e:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800dd50:	2202      	movs	r2, #2
 800dd52:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800dd54:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 800dd58:	f043 0302 	orr.w	r3, r3, #2
 800dd5c:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800dd60:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800dd62:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800dd64:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800dd68:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800dd6c:	4620      	mov	r0, r4
 800dd6e:	f7ff ffa9 	bl	800dcc4 <HAL_LTDC_ErrorCallback>
 800dd72:	e7ba      	b.n	800dcea <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800dd74:	6823      	ldr	r3, [r4, #0]
 800dd76:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800dd78:	f022 0201 	bic.w	r2, r2, #1
 800dd7c:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800dd7e:	2201      	movs	r2, #1
 800dd80:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 800dd82:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800dd84:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800dd88:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800dd8c:	4620      	mov	r0, r4
 800dd8e:	f7ff ff9b 	bl	800dcc8 <HAL_LTDC_LineEventCallback>
 800dd92:	e7ae      	b.n	800dcf2 <HAL_LTDC_IRQHandler+0x22>

0800dd94 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800dd94:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
 800dd98:	2b01      	cmp	r3, #1
 800dd9a:	f000 80c8 	beq.w	800df2e <HAL_LTDC_ConfigLayer+0x19a>
{
 800dd9e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800dda2:	f04f 0e34 	mov.w	lr, #52	@ 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800dda6:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800ddaa:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ddae:	f04f 0302 	mov.w	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800ddb2:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ddb4:	f880 30a1 	strb.w	r3, [r0, #161]	@ 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800ddb8:	f102 0684 	add.w	r6, r2, #132	@ 0x84
 800ddbc:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800ddc0:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800ddc4:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800ddc8:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800ddcc:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800ddce:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800ddd2:	460c      	mov	r4, r1
 800ddd4:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800ddd6:	9301      	str	r3, [sp, #4]
 800ddd8:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800ddda:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800dddc:	f10e 0e38 	add.w	lr, lr, #56	@ 0x38
 800dde0:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800dde4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800dde6:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800dde8:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800ddec:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ddee:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800ddf2:	6823      	ldr	r3, [r4, #0]
 800ddf4:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800ddf8:	9b01      	ldr	r3, [sp, #4]
 800ddfa:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800ddfe:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800de02:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800de04:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800de06:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800de0a:	1c51      	adds	r1, r2, #1
 800de0c:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800de10:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800de12:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800de14:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800de18:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800de1c:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800de20:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800de24:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
 800de28:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800de2c:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800de30:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800de32:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800de34:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800de38:	3301      	adds	r3, #1
 800de3a:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800de3e:	4403      	add	r3, r0
 800de40:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800de44:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800de48:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800de4c:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800de4e:	f023 0307 	bic.w	r3, r3, #7
 800de52:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800de56:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800de5a:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800de5e:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800de62:	f895 0032 	ldrb.w	r0, [r5, #50]	@ 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800de66:	f895 4031 	ldrb.w	r4, [r5, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800de6a:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800de6e:	f895 3030 	ldrb.w	r3, [r5, #48]	@ 0x30
 800de72:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800de76:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800de7a:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800de7e:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800de82:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800de86:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 800de8a:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800de8e:	696b      	ldr	r3, [r5, #20]
 800de90:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800de94:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800de98:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 800de9c:	f023 0307 	bic.w	r3, r3, #7
 800dea0:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800dea4:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800dea8:	4303      	orrs	r3, r0
 800deaa:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800deae:	f8dc 3028 	ldr.w	r3, [ip, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800deb2:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800deb4:	f8cc b028 	str.w	fp, [ip, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800deb8:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800debc:	bb69      	cbnz	r1, 800df1a <HAL_LTDC_ConfigLayer+0x186>
  {
    tmp = 4U;
 800debe:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800dec0:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800dec2:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800dec4:	fb03 f707 	mul.w	r7, r3, r7
 800dec8:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800deca:	fb02 f303 	mul.w	r3, r2, r3
 800dece:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800ded2:	f8dc 302c 	ldr.w	r3, [ip, #44]	@ 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800ded6:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800ded8:	f003 23e0 	and.w	r3, r3, #3758153728	@ 0xe000e000
 800dedc:	f8cc 302c 	str.w	r3, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800dee0:	f8cc 702c 	str.w	r7, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800dee4:	f8dc 3030 	ldr.w	r3, [ip, #48]	@ 0x30
 800dee8:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800deec:	f023 0307 	bic.w	r3, r3, #7
 800def0:	f8cc 3030 	str.w	r3, [ip, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800def4:	f8cc 2030 	str.w	r2, [ip, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800def8:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800defc:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800defe:	4313      	orrs	r3, r2
 800df00:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800df04:	2300      	movs	r3, #0
  return HAL_OK;
 800df06:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800df08:	f8c9 2024 	str.w	r2, [r9, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800df0c:	f888 20a1 	strb.w	r2, [r8, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 800df10:	f888 30a0 	strb.w	r3, [r8, #160]	@ 0xa0
}
 800df14:	b003      	add	sp, #12
 800df16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800df1a:	2901      	cmp	r1, #1
 800df1c:	d00b      	beq.n	800df36 <HAL_LTDC_ConfigLayer+0x1a2>
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800df1e:	1e8b      	subs	r3, r1, #2
 800df20:	2b02      	cmp	r3, #2
 800df22:	d906      	bls.n	800df32 <HAL_LTDC_ConfigLayer+0x19e>
    tmp = 2U;
 800df24:	2907      	cmp	r1, #7
 800df26:	bf14      	ite	ne
 800df28:	2301      	movne	r3, #1
 800df2a:	2302      	moveq	r3, #2
 800df2c:	e7c8      	b.n	800dec0 <HAL_LTDC_ConfigLayer+0x12c>
  __HAL_LOCK(hltdc);
 800df2e:	2002      	movs	r0, #2
}
 800df30:	4770      	bx	lr
    tmp = 2U;
 800df32:	2302      	movs	r3, #2
 800df34:	e7c4      	b.n	800dec0 <HAL_LTDC_ConfigLayer+0x12c>
    tmp = 3U;
 800df36:	2303      	movs	r3, #3
 800df38:	e7c2      	b.n	800dec0 <HAL_LTDC_ConfigLayer+0x12c>
 800df3a:	bf00      	nop

0800df3c <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 800df3c:	b530      	push	{r4, r5, lr}
 800df3e:	b083      	sub	sp, #12
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 800df40:	4b19      	ldr	r3, [pc, #100]	@ (800dfa8 <HAL_PWREx_EnableOverDrive+0x6c>)
  
  /* Enable the Over-drive to extend the clock frequency to 180 Mhz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 800df42:	491a      	ldr	r1, [pc, #104]	@ (800dfac <HAL_PWREx_EnableOverDrive+0x70>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800df44:	4d1a      	ldr	r5, [pc, #104]	@ (800dfb0 <HAL_PWREx_EnableOverDrive+0x74>)
  __HAL_RCC_PWR_CLK_ENABLE();
 800df46:	2200      	movs	r2, #0
 800df48:	9201      	str	r2, [sp, #4]
 800df4a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800df4c:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800df50:	641a      	str	r2, [r3, #64]	@ 0x40
 800df52:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800df54:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800df58:	9301      	str	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 800df5a:	2201      	movs	r2, #1
  __HAL_RCC_PWR_CLK_ENABLE();
 800df5c:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 800df5e:	640a      	str	r2, [r1, #64]	@ 0x40
  tickstart = HAL_GetTick();
 800df60:	f7fd fd6a 	bl	800ba38 <HAL_GetTick>
 800df64:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800df66:	e005      	b.n	800df74 <HAL_PWREx_EnableOverDrive+0x38>
  {
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800df68:	f7fd fd66 	bl	800ba38 <HAL_GetTick>
 800df6c:	1b00      	subs	r0, r0, r4
 800df6e:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 800df72:	d816      	bhi.n	800dfa2 <HAL_PWREx_EnableOverDrive+0x66>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800df74:	686b      	ldr	r3, [r5, #4]
 800df76:	03da      	lsls	r2, r3, #15
 800df78:	d5f6      	bpl.n	800df68 <HAL_PWREx_EnableOverDrive+0x2c>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800df7a:	4b0c      	ldr	r3, [pc, #48]	@ (800dfac <HAL_PWREx_EnableOverDrive+0x70>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800df7c:	4d0c      	ldr	r5, [pc, #48]	@ (800dfb0 <HAL_PWREx_EnableOverDrive+0x74>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800df7e:	2201      	movs	r2, #1
 800df80:	645a      	str	r2, [r3, #68]	@ 0x44
  tickstart = HAL_GetTick();
 800df82:	f7fd fd59 	bl	800ba38 <HAL_GetTick>
 800df86:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800df88:	e005      	b.n	800df96 <HAL_PWREx_EnableOverDrive+0x5a>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800df8a:	f7fd fd55 	bl	800ba38 <HAL_GetTick>
 800df8e:	1b00      	subs	r0, r0, r4
 800df90:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 800df94:	d805      	bhi.n	800dfa2 <HAL_PWREx_EnableOverDrive+0x66>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800df96:	686b      	ldr	r3, [r5, #4]
 800df98:	039b      	lsls	r3, r3, #14
 800df9a:	d5f6      	bpl.n	800df8a <HAL_PWREx_EnableOverDrive+0x4e>
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 800df9c:	2000      	movs	r0, #0
}
 800df9e:	b003      	add	sp, #12
 800dfa0:	bd30      	pop	{r4, r5, pc}
      return HAL_TIMEOUT;
 800dfa2:	2003      	movs	r0, #3
}
 800dfa4:	b003      	add	sp, #12
 800dfa6:	bd30      	pop	{r4, r5, pc}
 800dfa8:	40023800 	.word	0x40023800
 800dfac:	420e0000 	.word	0x420e0000
 800dfb0:	40007000 	.word	0x40007000

0800dfb4 <QSPI_Config>:
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 800dfb4:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
{
 800dfb6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 800dfba:	b133      	cbz	r3, 800dfca <QSPI_Config+0x16>
 800dfbc:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
 800dfc0:	d003      	beq.n	800dfca <QSPI_Config+0x16>
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 800dfc2:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800dfc4:	6805      	ldr	r5, [r0, #0]
 800dfc6:	3c01      	subs	r4, #1
 800dfc8:	612c      	str	r4, [r5, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 800dfca:	698d      	ldr	r5, [r1, #24]
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800dfcc:	e9d1 4707 	ldrd	r4, r7, [r1, #28]
  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 800dfd0:	b33d      	cbz	r5, 800e022 <QSPI_Config+0x6e>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 800dfd2:	431d      	orrs	r5, r3
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800dfd4:	694b      	ldr	r3, [r1, #20]
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 800dfd6:	6800      	ldr	r0, [r0, #0]
 800dfd8:	ea45 0c02 	orr.w	ip, r5, r2
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800dfdc:	ea4f 4e83 	mov.w	lr, r3, lsl #18
 800dfe0:	e9d1 860b 	ldrd	r8, r6, [r1, #44]	@ 0x2c
 800dfe4:	680b      	ldr	r3, [r1, #0]
 800dfe6:	6b4d      	ldr	r5, [r1, #52]	@ 0x34
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 800dfe8:	2f00      	cmp	r7, #0
 800dfea:	d04a      	beq.n	800e082 <QSPI_Config+0xce>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800dfec:	ea4c 0c07 	orr.w	ip, ip, r7
 800dff0:	688f      	ldr	r7, [r1, #8]
 800dff2:	61c7      	str	r7, [r0, #28]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800dff4:	690f      	ldr	r7, [r1, #16]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800dff6:	2c00      	cmp	r4, #0
 800dff8:	d04a      	beq.n	800e090 <QSPI_Config+0xdc>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800dffa:	4323      	orrs	r3, r4
 800dffc:	ea43 0308 	orr.w	r3, r3, r8
 800e000:	4333      	orrs	r3, r6
 800e002:	432b      	orrs	r3, r5
 800e004:	433b      	orrs	r3, r7
    {
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
      {
        /*---- Command with instruction and address ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800e006:	68cc      	ldr	r4, [r1, #12]
 800e008:	4323      	orrs	r3, r4
 800e00a:	ea43 030e 	orr.w	r3, r3, lr
 800e00e:	ea43 030c 	orr.w	r3, r3, ip
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize | cmd->AddressMode |
                                         cmd->InstructionMode | cmd->Instruction | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800e012:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800e016:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800e018:	d045      	beq.n	800e0a6 <QSPI_Config+0xf2>
                                         cmd->AddressMode | cmd->InstructionMode | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 800e01a:	684b      	ldr	r3, [r1, #4]
 800e01c:	6183      	str	r3, [r0, #24]
          CLEAR_REG(hqspi->Instance->AR);
        }
      }
    }
  }
}
 800e01e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 800e022:	b1ef      	cbz	r7, 800e060 <QSPI_Config+0xac>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800e024:	694d      	ldr	r5, [r1, #20]
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800e026:	6800      	ldr	r0, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800e028:	6b4e      	ldr	r6, [r1, #52]	@ 0x34
 800e02a:	ea43 0c07 	orr.w	ip, r3, r7
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800e02e:	688b      	ldr	r3, [r1, #8]
 800e030:	61c3      	str	r3, [r0, #28]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800e032:	e9d1 e70b 	ldrd	lr, r7, [r1, #44]	@ 0x2c
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800e036:	690b      	ldr	r3, [r1, #16]
 800e038:	ea4c 0c02 	orr.w	ip, ip, r2
 800e03c:	04ad      	lsls	r5, r5, #18
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800e03e:	2c00      	cmp	r4, #0
 800e040:	d03f      	beq.n	800e0c2 <QSPI_Config+0x10e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800e042:	4323      	orrs	r3, r4
 800e044:	ea43 030e 	orr.w	r3, r3, lr
 800e048:	68cc      	ldr	r4, [r1, #12]
 800e04a:	433b      	orrs	r3, r7
 800e04c:	4333      	orrs	r3, r6
 800e04e:	4323      	orrs	r3, r4
 800e050:	432b      	orrs	r3, r5
 800e052:	ea43 030c 	orr.w	r3, r3, ip
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800e056:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800e05a:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800e05c:	d1dd      	bne.n	800e01a <QSPI_Config+0x66>
 800e05e:	e022      	b.n	800e0a6 <QSPI_Config+0xf2>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800e060:	2c00      	cmp	r4, #0
 800e062:	d139      	bne.n	800e0d8 <QSPI_Config+0x124>
        if (cmd->DataMode != QSPI_DATA_NONE)
 800e064:	b1fb      	cbz	r3, 800e0a6 <QSPI_Config+0xf2>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800e066:	6acd      	ldr	r5, [r1, #44]	@ 0x2c
 800e068:	6800      	ldr	r0, [r0, #0]
 800e06a:	432b      	orrs	r3, r5
 800e06c:	4313      	orrs	r3, r2
 800e06e:	6b0a      	ldr	r2, [r1, #48]	@ 0x30
 800e070:	6b4d      	ldr	r5, [r1, #52]	@ 0x34
 800e072:	4313      	orrs	r3, r2
 800e074:	694a      	ldr	r2, [r1, #20]
 800e076:	432b      	orrs	r3, r5
 800e078:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
 800e07c:	6143      	str	r3, [r0, #20]
          CLEAR_REG(hqspi->Instance->AR);
 800e07e:	6184      	str	r4, [r0, #24]
}
 800e080:	e011      	b.n	800e0a6 <QSPI_Config+0xf2>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800e082:	b194      	cbz	r4, 800e0aa <QSPI_Config+0xf6>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800e084:	4323      	orrs	r3, r4
 800e086:	ea43 0308 	orr.w	r3, r3, r8
 800e08a:	4333      	orrs	r3, r6
 800e08c:	432b      	orrs	r3, r5
 800e08e:	e7ba      	b.n	800e006 <QSPI_Config+0x52>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800e090:	ea43 0308 	orr.w	r3, r3, r8
 800e094:	4333      	orrs	r3, r6
 800e096:	432b      	orrs	r3, r5
 800e098:	433b      	orrs	r3, r7
 800e09a:	ea43 030e 	orr.w	r3, r3, lr
 800e09e:	ea43 030c 	orr.w	r3, r3, ip
 800e0a2:	6143      	str	r3, [r0, #20]
        CLEAR_REG(hqspi->Instance->AR);
 800e0a4:	6184      	str	r4, [r0, #24]
}
 800e0a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800e0aa:	ea43 0308 	orr.w	r3, r3, r8
 800e0ae:	4333      	orrs	r3, r6
 800e0b0:	432b      	orrs	r3, r5
 800e0b2:	ea43 030e 	orr.w	r3, r3, lr
 800e0b6:	ea43 030c 	orr.w	r3, r3, ip
 800e0ba:	6143      	str	r3, [r0, #20]
        CLEAR_REG(hqspi->Instance->AR);
 800e0bc:	6184      	str	r4, [r0, #24]
}
 800e0be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800e0c2:	ea43 030e 	orr.w	r3, r3, lr
 800e0c6:	433b      	orrs	r3, r7
 800e0c8:	4333      	orrs	r3, r6
 800e0ca:	432b      	orrs	r3, r5
 800e0cc:	ea43 030c 	orr.w	r3, r3, ip
 800e0d0:	6143      	str	r3, [r0, #20]
        CLEAR_REG(hqspi->Instance->AR);
 800e0d2:	6184      	str	r4, [r0, #24]
}
 800e0d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800e0d8:	4323      	orrs	r3, r4
 800e0da:	6acc      	ldr	r4, [r1, #44]	@ 0x2c
 800e0dc:	6800      	ldr	r0, [r0, #0]
 800e0de:	4313      	orrs	r3, r2
 800e0e0:	4323      	orrs	r3, r4
 800e0e2:	6b0c      	ldr	r4, [r1, #48]	@ 0x30
 800e0e4:	4323      	orrs	r3, r4
 800e0e6:	6b4c      	ldr	r4, [r1, #52]	@ 0x34
 800e0e8:	4323      	orrs	r3, r4
 800e0ea:	68cc      	ldr	r4, [r1, #12]
 800e0ec:	4323      	orrs	r3, r4
 800e0ee:	694c      	ldr	r4, [r1, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800e0f0:	f1b2 6f40 	cmp.w	r2, #201326592	@ 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800e0f4:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 800e0f8:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800e0fa:	d18e      	bne.n	800e01a <QSPI_Config+0x66>
 800e0fc:	e7d3      	b.n	800e0a6 <QSPI_Config+0xf2>
 800e0fe:	bf00      	nop

0800e100 <HAL_QSPI_Init>:
{
 800e100:	b570      	push	{r4, r5, r6, lr}
 800e102:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800e104:	f7fd fc98 	bl	800ba38 <HAL_GetTick>
  if(hqspi == NULL)
 800e108:	2c00      	cmp	r4, #0
 800e10a:	d04e      	beq.n	800e1aa <HAL_QSPI_Init+0xaa>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 800e10c:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 800e110:	4606      	mov	r6, r0
 800e112:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800e116:	2b00      	cmp	r3, #0
 800e118:	d03e      	beq.n	800e198 <HAL_QSPI_Init+0x98>
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800e11a:	6ca5      	ldr	r5, [r4, #72]	@ 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 800e11c:	6822      	ldr	r2, [r4, #0]
 800e11e:	68a1      	ldr	r1, [r4, #8]
 800e120:	6813      	ldr	r3, [r2, #0]
 800e122:	3901      	subs	r1, #1
 800e124:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 800e128:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800e12c:	6013      	str	r3, [r2, #0]
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800e12e:	e001      	b.n	800e134 <HAL_QSPI_Init+0x34>
    if (Timeout != HAL_MAX_DELAY)
 800e130:	1c6b      	adds	r3, r5, #1
 800e132:	d129      	bne.n	800e188 <HAL_QSPI_Init+0x88>
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800e134:	6893      	ldr	r3, [r2, #8]
 800e136:	f013 0320 	ands.w	r3, r3, #32
 800e13a:	d1f9      	bne.n	800e130 <HAL_QSPI_Init+0x30>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 800e13c:	69e5      	ldr	r5, [r4, #28]
 800e13e:	68e1      	ldr	r1, [r4, #12]
 800e140:	6810      	ldr	r0, [r2, #0]
 800e142:	4329      	orrs	r1, r5
 800e144:	6a25      	ldr	r5, [r4, #32]
 800e146:	4329      	orrs	r1, r5
 800e148:	6865      	ldr	r5, [r4, #4]
 800e14a:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 800e14e:	f020 00d0 	bic.w	r0, r0, #208	@ 0xd0
 800e152:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
 800e156:	4301      	orrs	r1, r0
 800e158:	6011      	str	r1, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 800e15a:	e9d4 1005 	ldrd	r1, r0, [r4, #20]
 800e15e:	4301      	orrs	r1, r0
 800e160:	6920      	ldr	r0, [r4, #16]
 800e162:	6855      	ldr	r5, [r2, #4]
 800e164:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800e168:	4815      	ldr	r0, [pc, #84]	@ (800e1c0 <HAL_QSPI_Init+0xc0>)
 800e16a:	4028      	ands	r0, r5
 800e16c:	4301      	orrs	r1, r0
 800e16e:	6051      	str	r1, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 800e170:	6811      	ldr	r1, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 800e172:	2501      	movs	r5, #1
    __HAL_QSPI_ENABLE(hqspi);
 800e174:	4329      	orrs	r1, r5
 800e176:	6011      	str	r1, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 800e178:	4618      	mov	r0, r3
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800e17a:	6463      	str	r3, [r4, #68]	@ 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 800e17c:	f884 5041 	strb.w	r5, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 800e180:	2300      	movs	r3, #0
 800e182:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 800e186:	bd70      	pop	{r4, r5, r6, pc}
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800e188:	f7fd fc56 	bl	800ba38 <HAL_GetTick>
 800e18c:	1b80      	subs	r0, r0, r6
 800e18e:	42a8      	cmp	r0, r5
 800e190:	d80d      	bhi.n	800e1ae <HAL_QSPI_Init+0xae>
 800e192:	b165      	cbz	r5, 800e1ae <HAL_QSPI_Init+0xae>
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800e194:	6822      	ldr	r2, [r4, #0]
 800e196:	e7cd      	b.n	800e134 <HAL_QSPI_Init+0x34>
    hqspi->Lock = HAL_UNLOCKED;
 800e198:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
    HAL_QSPI_MspInit(hqspi);
 800e19c:	4620      	mov	r0, r4
  hqspi->Timeout = Timeout;
 800e19e:	f241 3588 	movw	r5, #5000	@ 0x1388
    HAL_QSPI_MspInit(hqspi);
 800e1a2:	f7f5 ff17 	bl	8003fd4 <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 800e1a6:	64a5      	str	r5, [r4, #72]	@ 0x48
}
 800e1a8:	e7b8      	b.n	800e11c <HAL_QSPI_Init+0x1c>
    return HAL_ERROR;
 800e1aa:	2001      	movs	r0, #1
}
 800e1ac:	bd70      	pop	{r4, r5, r6, pc}
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 800e1ae:	2304      	movs	r3, #4
 800e1b0:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 800e1b4:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800e1b6:	2001      	movs	r0, #1
 800e1b8:	4303      	orrs	r3, r0
 800e1ba:	6463      	str	r3, [r4, #68]	@ 0x44
  if(status == HAL_OK)
 800e1bc:	e7e0      	b.n	800e180 <HAL_QSPI_Init+0x80>
 800e1be:	bf00      	nop
 800e1c0:	ffe0f8fe 	.word	0xffe0f8fe

0800e1c4 <HAL_QSPI_DeInit>:
  if(hqspi == NULL)
 800e1c4:	b180      	cbz	r0, 800e1e8 <HAL_QSPI_DeInit+0x24>
  __HAL_QSPI_DISABLE(hqspi);
 800e1c6:	6802      	ldr	r2, [r0, #0]
 800e1c8:	6813      	ldr	r3, [r2, #0]
{
 800e1ca:	b510      	push	{r4, lr}
  __HAL_QSPI_DISABLE(hqspi);
 800e1cc:	f023 0301 	bic.w	r3, r3, #1
 800e1d0:	4604      	mov	r4, r0
 800e1d2:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 800e1d4:	f7f5 ff5a 	bl	800408c <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800e1d8:	2300      	movs	r3, #0
 800e1da:	6463      	str	r3, [r4, #68]	@ 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 800e1dc:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hqspi);
 800e1e0:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  return HAL_OK;
 800e1e4:	4618      	mov	r0, r3
}
 800e1e6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800e1e8:	2001      	movs	r0, #1
}
 800e1ea:	4770      	bx	lr

0800e1ec <HAL_QSPI_Command>:
{
 800e1ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e1f0:	4604      	mov	r4, r0
 800e1f2:	460f      	mov	r7, r1
 800e1f4:	4616      	mov	r6, r2
  uint32_t tickstart = HAL_GetTick();
 800e1f6:	f7fd fc1f 	bl	800ba38 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800e1fa:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 800e1fe:	2b01      	cmp	r3, #1
 800e200:	d053      	beq.n	800e2aa <HAL_QSPI_Command+0xbe>
 800e202:	2301      	movs	r3, #1
 800e204:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800e208:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 800e20c:	2b01      	cmp	r3, #1
 800e20e:	fa5f f883 	uxtb.w	r8, r3
 800e212:	d007      	beq.n	800e224 <HAL_QSPI_Command+0x38>
    status = HAL_BUSY;
 800e214:	f04f 0802 	mov.w	r8, #2
  __HAL_UNLOCK(hqspi);
 800e218:	2300      	movs	r3, #0
 800e21a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 800e21e:	4640      	mov	r0, r8
 800e220:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800e224:	2300      	movs	r3, #0
 800e226:	6463      	str	r3, [r4, #68]	@ 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY;
 800e228:	1c71      	adds	r1, r6, #1
 800e22a:	f04f 0302 	mov.w	r3, #2
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800e22e:	6825      	ldr	r5, [r4, #0]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 800e230:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800e234:	bf18      	it	ne
 800e236:	4681      	movne	r9, r0
 800e238:	d120      	bne.n	800e27c <HAL_QSPI_Command+0x90>
 800e23a:	68aa      	ldr	r2, [r5, #8]
 800e23c:	f012 0220 	ands.w	r2, r2, #32
 800e240:	d1fb      	bne.n	800e23a <HAL_QSPI_Command+0x4e>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800e242:	4639      	mov	r1, r7
 800e244:	4620      	mov	r0, r4
 800e246:	f7ff feb5 	bl	800dfb4 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 800e24a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800e24c:	b12b      	cbz	r3, 800e25a <HAL_QSPI_Command+0x6e>
        hqspi->State = HAL_QSPI_STATE_READY;
 800e24e:	2301      	movs	r3, #1
 800e250:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800e254:	f04f 0800 	mov.w	r8, #0
 800e258:	e7de      	b.n	800e218 <HAL_QSPI_Command+0x2c>
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800e25a:	68ab      	ldr	r3, [r5, #8]
 800e25c:	079a      	lsls	r2, r3, #30
 800e25e:	d5fc      	bpl.n	800e25a <HAL_QSPI_Command+0x6e>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800e260:	2202      	movs	r2, #2
          hqspi->State = HAL_QSPI_STATE_READY;
 800e262:	2301      	movs	r3, #1
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800e264:	60ea      	str	r2, [r5, #12]
          hqspi->State = HAL_QSPI_STATE_READY;
 800e266:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 800e26a:	e7f3      	b.n	800e254 <HAL_QSPI_Command+0x68>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800e26c:	f7fd fbe4 	bl	800ba38 <HAL_GetTick>
 800e270:	eba0 0009 	sub.w	r0, r0, r9
 800e274:	4286      	cmp	r6, r0
 800e276:	d31d      	bcc.n	800e2b4 <HAL_QSPI_Command+0xc8>
 800e278:	b1e6      	cbz	r6, 800e2b4 <HAL_QSPI_Command+0xc8>
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800e27a:	6825      	ldr	r5, [r4, #0]
 800e27c:	68aa      	ldr	r2, [r5, #8]
 800e27e:	f012 0220 	ands.w	r2, r2, #32
 800e282:	d1f3      	bne.n	800e26c <HAL_QSPI_Command+0x80>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800e284:	4639      	mov	r1, r7
 800e286:	4620      	mov	r0, r4
 800e288:	f7ff fe94 	bl	800dfb4 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 800e28c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800e28e:	b143      	cbz	r3, 800e2a2 <HAL_QSPI_Command+0xb6>
 800e290:	e7dd      	b.n	800e24e <HAL_QSPI_Command+0x62>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800e292:	f7fd fbd1 	bl	800ba38 <HAL_GetTick>
 800e296:	eba0 0309 	sub.w	r3, r0, r9
 800e29a:	429e      	cmp	r6, r3
 800e29c:	d30a      	bcc.n	800e2b4 <HAL_QSPI_Command+0xc8>
 800e29e:	b14e      	cbz	r6, 800e2b4 <HAL_QSPI_Command+0xc8>
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800e2a0:	6825      	ldr	r5, [r4, #0]
 800e2a2:	68ab      	ldr	r3, [r5, #8]
 800e2a4:	079b      	lsls	r3, r3, #30
 800e2a6:	d5f4      	bpl.n	800e292 <HAL_QSPI_Command+0xa6>
 800e2a8:	e7da      	b.n	800e260 <HAL_QSPI_Command+0x74>
  __HAL_LOCK(hqspi);
 800e2aa:	f04f 0802 	mov.w	r8, #2
}
 800e2ae:	4640      	mov	r0, r8
 800e2b0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 800e2b4:	2304      	movs	r3, #4
 800e2b6:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 800e2ba:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800e2bc:	f043 0301 	orr.w	r3, r3, #1
 800e2c0:	6463      	str	r3, [r4, #68]	@ 0x44
        if (status == HAL_OK)
 800e2c2:	e7a9      	b.n	800e218 <HAL_QSPI_Command+0x2c>

0800e2c4 <HAL_QSPI_AutoPolling>:
{
 800e2c4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e2c8:	4604      	mov	r4, r0
 800e2ca:	4698      	mov	r8, r3
 800e2cc:	4689      	mov	r9, r1
 800e2ce:	4617      	mov	r7, r2
  uint32_t tickstart = HAL_GetTick();
 800e2d0:	f7fd fbb2 	bl	800ba38 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800e2d4:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 800e2d8:	2b01      	cmp	r3, #1
 800e2da:	d066      	beq.n	800e3aa <HAL_QSPI_AutoPolling+0xe6>
 800e2dc:	2301      	movs	r3, #1
 800e2de:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800e2e2:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 800e2e6:	2b01      	cmp	r3, #1
 800e2e8:	fa5f fb83 	uxtb.w	fp, r3
 800e2ec:	d007      	beq.n	800e2fe <HAL_QSPI_AutoPolling+0x3a>
    status = HAL_BUSY;
 800e2ee:	f04f 0b02 	mov.w	fp, #2
  __HAL_UNLOCK(hqspi);
 800e2f2:	2300      	movs	r3, #0
 800e2f4:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 800e2f8:	4658      	mov	r0, fp
 800e2fa:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800e2fe:	2300      	movs	r3, #0
 800e300:	6463      	str	r3, [r4, #68]	@ 0x44
 800e302:	f1b8 3fff 	cmp.w	r8, #4294967295
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 800e306:	f04f 0342 	mov.w	r3, #66	@ 0x42
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800e30a:	6826      	ldr	r6, [r4, #0]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 800e30c:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 800e310:	4682      	mov	sl, r0
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800e312:	d131      	bne.n	800e378 <HAL_QSPI_AutoPolling+0xb4>
 800e314:	68b5      	ldr	r5, [r6, #8]
 800e316:	06a8      	lsls	r0, r5, #26
 800e318:	d4fc      	bmi.n	800e314 <HAL_QSPI_AutoPolling+0x50>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 800e31a:	683b      	ldr	r3, [r7, #0]
 800e31c:	62b3      	str	r3, [r6, #40]	@ 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 800e31e:	687b      	ldr	r3, [r7, #4]
 800e320:	6273      	str	r3, [r6, #36]	@ 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 800e322:	68bb      	ldr	r3, [r7, #8]
 800e324:	62f3      	str	r3, [r6, #44]	@ 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 800e326:	6833      	ldr	r3, [r6, #0]
 800e328:	693a      	ldr	r2, [r7, #16]
 800e32a:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 800e32e:	4313      	orrs	r3, r2
 800e330:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
      cmd->NbData = cfg->StatusBytesSize;
 800e334:	68fa      	ldr	r2, [r7, #12]
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 800e336:	6033      	str	r3, [r6, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 800e338:	4649      	mov	r1, r9
      cmd->NbData = cfg->StatusBytesSize;
 800e33a:	f8c9 2028 	str.w	r2, [r9, #40]	@ 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 800e33e:	4620      	mov	r0, r4
 800e340:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 800e344:	f7ff fe36 	bl	800dfb4 <QSPI_Config>
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800e348:	f1b8 3fff 	cmp.w	r8, #4294967295
 800e34c:	d11c      	bne.n	800e388 <HAL_QSPI_AutoPolling+0xc4>
 800e34e:	68b3      	ldr	r3, [r6, #8]
 800e350:	071a      	lsls	r2, r3, #28
 800e352:	d5fc      	bpl.n	800e34e <HAL_QSPI_AutoPolling+0x8a>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 800e354:	2208      	movs	r2, #8
        hqspi->State = HAL_QSPI_STATE_READY;
 800e356:	2301      	movs	r3, #1
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 800e358:	60f2      	str	r2, [r6, #12]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 800e35a:	f04f 0b00 	mov.w	fp, #0
        hqspi->State = HAL_QSPI_STATE_READY;
 800e35e:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 800e362:	e7c6      	b.n	800e2f2 <HAL_QSPI_AutoPolling+0x2e>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800e364:	f7fd fb68 	bl	800ba38 <HAL_GetTick>
 800e368:	eba0 000a 	sub.w	r0, r0, sl
 800e36c:	4580      	cmp	r8, r0
 800e36e:	d314      	bcc.n	800e39a <HAL_QSPI_AutoPolling+0xd6>
 800e370:	f1b8 0f00 	cmp.w	r8, #0
 800e374:	d011      	beq.n	800e39a <HAL_QSPI_AutoPolling+0xd6>
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800e376:	6826      	ldr	r6, [r4, #0]
 800e378:	68b3      	ldr	r3, [r6, #8]
 800e37a:	0699      	lsls	r1, r3, #26
 800e37c:	d4f2      	bmi.n	800e364 <HAL_QSPI_AutoPolling+0xa0>
 800e37e:	e7cc      	b.n	800e31a <HAL_QSPI_AutoPolling+0x56>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800e380:	f1b8 0f00 	cmp.w	r8, #0
 800e384:	d009      	beq.n	800e39a <HAL_QSPI_AutoPolling+0xd6>
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800e386:	6826      	ldr	r6, [r4, #0]
 800e388:	68b3      	ldr	r3, [r6, #8]
 800e38a:	071b      	lsls	r3, r3, #28
 800e38c:	d4e2      	bmi.n	800e354 <HAL_QSPI_AutoPolling+0x90>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800e38e:	f7fd fb53 	bl	800ba38 <HAL_GetTick>
 800e392:	eba0 000a 	sub.w	r0, r0, sl
 800e396:	4580      	cmp	r8, r0
 800e398:	d2f2      	bcs.n	800e380 <HAL_QSPI_AutoPolling+0xbc>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 800e39a:	2304      	movs	r3, #4
 800e39c:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 800e3a0:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800e3a2:	f043 0301 	orr.w	r3, r3, #1
 800e3a6:	6463      	str	r3, [r4, #68]	@ 0x44
      if (status == HAL_OK)
 800e3a8:	e7a3      	b.n	800e2f2 <HAL_QSPI_AutoPolling+0x2e>
  __HAL_LOCK(hqspi);
 800e3aa:	f04f 0b02 	mov.w	fp, #2
}
 800e3ae:	4658      	mov	r0, fp
 800e3b0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e3b4 <HAL_QSPI_MemoryMapped>:
{
 800e3b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e3b8:	4604      	mov	r4, r0
 800e3ba:	460f      	mov	r7, r1
 800e3bc:	4616      	mov	r6, r2
  uint32_t tickstart = HAL_GetTick();
 800e3be:	f7fd fb3b 	bl	800ba38 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800e3c2:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 800e3c6:	2b01      	cmp	r3, #1
 800e3c8:	d040      	beq.n	800e44c <HAL_QSPI_MemoryMapped+0x98>
 800e3ca:	2301      	movs	r3, #1
 800e3cc:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800e3d0:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 800e3d4:	2b01      	cmp	r3, #1
 800e3d6:	fa5f f883 	uxtb.w	r8, r3
 800e3da:	d007      	beq.n	800e3ec <HAL_QSPI_MemoryMapped+0x38>
    status = HAL_BUSY;
 800e3dc:	f04f 0802 	mov.w	r8, #2
  __HAL_UNLOCK(hqspi);
 800e3e0:	2300      	movs	r3, #0
 800e3e2:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 800e3e6:	4640      	mov	r0, r8
 800e3e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800e3ec:	f8d4 a048 	ldr.w	sl, [r4, #72]	@ 0x48
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800e3f0:	6825      	ldr	r5, [r4, #0]
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800e3f2:	2300      	movs	r3, #0
 800e3f4:	6463      	str	r3, [r4, #68]	@ 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 800e3f6:	f1ba 3fff 	cmp.w	sl, #4294967295
 800e3fa:	f04f 0382 	mov.w	r3, #130	@ 0x82
 800e3fe:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800e402:	bf18      	it	ne
 800e404:	4681      	movne	r9, r0
 800e406:	d11d      	bne.n	800e444 <HAL_QSPI_MemoryMapped+0x90>
 800e408:	68ab      	ldr	r3, [r5, #8]
 800e40a:	069a      	lsls	r2, r3, #26
 800e40c:	d4fc      	bmi.n	800e408 <HAL_QSPI_MemoryMapped+0x54>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 800e40e:	682b      	ldr	r3, [r5, #0]
 800e410:	6872      	ldr	r2, [r6, #4]
 800e412:	f023 0308 	bic.w	r3, r3, #8
 800e416:	4313      	orrs	r3, r2
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 800e418:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 800e41a:	602b      	str	r3, [r5, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 800e41c:	d01b      	beq.n	800e456 <HAL_QSPI_MemoryMapped+0xa2>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 800e41e:	f04f 6240 	mov.w	r2, #201326592	@ 0xc000000
 800e422:	4639      	mov	r1, r7
 800e424:	4620      	mov	r0, r4
 800e426:	f7ff fdc5 	bl	800dfb4 <QSPI_Config>
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800e42a:	f04f 0800 	mov.w	r8, #0
 800e42e:	e7d7      	b.n	800e3e0 <HAL_QSPI_MemoryMapped+0x2c>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800e430:	f7fd fb02 	bl	800ba38 <HAL_GetTick>
 800e434:	eba0 0009 	sub.w	r0, r0, r9
 800e438:	4582      	cmp	sl, r0
 800e43a:	d315      	bcc.n	800e468 <HAL_QSPI_MemoryMapped+0xb4>
 800e43c:	f1ba 0f00 	cmp.w	sl, #0
 800e440:	d012      	beq.n	800e468 <HAL_QSPI_MemoryMapped+0xb4>
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800e442:	6825      	ldr	r5, [r4, #0]
 800e444:	68ab      	ldr	r3, [r5, #8]
 800e446:	069b      	lsls	r3, r3, #26
 800e448:	d4f2      	bmi.n	800e430 <HAL_QSPI_MemoryMapped+0x7c>
 800e44a:	e7e0      	b.n	800e40e <HAL_QSPI_MemoryMapped+0x5a>
  __HAL_LOCK(hqspi);
 800e44c:	f04f 0802 	mov.w	r8, #2
}
 800e450:	4640      	mov	r0, r8
 800e452:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 800e456:	6832      	ldr	r2, [r6, #0]
 800e458:	632a      	str	r2, [r5, #48]	@ 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 800e45a:	2310      	movs	r3, #16
 800e45c:	60eb      	str	r3, [r5, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 800e45e:	682b      	ldr	r3, [r5, #0]
 800e460:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800e464:	602b      	str	r3, [r5, #0]
 800e466:	e7da      	b.n	800e41e <HAL_QSPI_MemoryMapped+0x6a>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 800e468:	2304      	movs	r3, #4
 800e46a:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 800e46e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800e470:	f043 0301 	orr.w	r3, r3, #1
 800e474:	6463      	str	r3, [r4, #68]	@ 0x44
    if (status == HAL_OK)
 800e476:	e7b3      	b.n	800e3e0 <HAL_QSPI_MemoryMapped+0x2c>

0800e478 <HAL_QSPI_Abort>:
{
 800e478:	b570      	push	{r4, r5, r6, lr}
 800e47a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800e47c:	f7fd fadc 	bl	800ba38 <HAL_GetTick>
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 800e480:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 800e484:	079b      	lsls	r3, r3, #30
 800e486:	d401      	bmi.n	800e48c <HAL_QSPI_Abort+0x14>
  HAL_StatusTypeDef status = HAL_OK;
 800e488:	2000      	movs	r0, #0
}
 800e48a:	bd70      	pop	{r4, r5, r6, pc}
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 800e48c:	6823      	ldr	r3, [r4, #0]
    __HAL_UNLOCK(hqspi);
 800e48e:	2200      	movs	r2, #0
 800e490:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 800e494:	4605      	mov	r5, r0
 800e496:	6818      	ldr	r0, [r3, #0]
 800e498:	f010 0004 	ands.w	r0, r0, #4
 800e49c:	d11f      	bne.n	800e4de <HAL_QSPI_Abort+0x66>
    if (__HAL_QSPI_GET_FLAG(hqspi, QSPI_FLAG_BUSY) != RESET)
 800e49e:	689a      	ldr	r2, [r3, #8]
 800e4a0:	0696      	lsls	r6, r2, #26
 800e4a2:	d403      	bmi.n	800e4ac <HAL_QSPI_Abort+0x34>
      hqspi->State = HAL_QSPI_STATE_READY;
 800e4a4:	2301      	movs	r3, #1
 800e4a6:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
}
 800e4aa:	bd70      	pop	{r4, r5, r6, pc}
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 800e4ac:	681a      	ldr	r2, [r3, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 800e4ae:	6ca6      	ldr	r6, [r4, #72]	@ 0x48
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 800e4b0:	f042 0202 	orr.w	r2, r2, #2
 800e4b4:	1c70      	adds	r0, r6, #1
 800e4b6:	601a      	str	r2, [r3, #0]
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800e4b8:	d122      	bne.n	800e500 <HAL_QSPI_Abort+0x88>
 800e4ba:	689a      	ldr	r2, [r3, #8]
 800e4bc:	0791      	lsls	r1, r2, #30
 800e4be:	d5fc      	bpl.n	800e4ba <HAL_QSPI_Abort+0x42>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800e4c0:	2202      	movs	r2, #2
 800e4c2:	1c70      	adds	r0, r6, #1
 800e4c4:	60da      	str	r2, [r3, #12]
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800e4c6:	d127      	bne.n	800e518 <HAL_QSPI_Abort+0xa0>
 800e4c8:	689a      	ldr	r2, [r3, #8]
 800e4ca:	0691      	lsls	r1, r2, #26
 800e4cc:	d4fc      	bmi.n	800e4c8 <HAL_QSPI_Abort+0x50>
        CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 800e4ce:	695a      	ldr	r2, [r3, #20]
        hqspi->State = HAL_QSPI_STATE_READY;
 800e4d0:	2101      	movs	r1, #1
        CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 800e4d2:	f022 6240 	bic.w	r2, r2, #201326592	@ 0xc000000
 800e4d6:	615a      	str	r2, [r3, #20]
        hqspi->State = HAL_QSPI_STATE_READY;
 800e4d8:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
 800e4dc:	e7d4      	b.n	800e488 <HAL_QSPI_Abort+0x10>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 800e4de:	681a      	ldr	r2, [r3, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 800e4e0:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 800e4e2:	f022 0204 	bic.w	r2, r2, #4
 800e4e6:	601a      	str	r2, [r3, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 800e4e8:	f7fd fc52 	bl	800bd90 <HAL_DMA_Abort>
      if(status != HAL_OK)
 800e4ec:	b9c0      	cbnz	r0, 800e520 <HAL_QSPI_Abort+0xa8>
    if (__HAL_QSPI_GET_FLAG(hqspi, QSPI_FLAG_BUSY) != RESET)
 800e4ee:	6823      	ldr	r3, [r4, #0]
 800e4f0:	e7d5      	b.n	800e49e <HAL_QSPI_Abort+0x26>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800e4f2:	f7fd faa1 	bl	800ba38 <HAL_GetTick>
 800e4f6:	1b40      	subs	r0, r0, r5
 800e4f8:	4286      	cmp	r6, r0
 800e4fa:	d317      	bcc.n	800e52c <HAL_QSPI_Abort+0xb4>
 800e4fc:	b1b6      	cbz	r6, 800e52c <HAL_QSPI_Abort+0xb4>
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800e4fe:	6823      	ldr	r3, [r4, #0]
 800e500:	689a      	ldr	r2, [r3, #8]
 800e502:	0792      	lsls	r2, r2, #30
 800e504:	d5f5      	bpl.n	800e4f2 <HAL_QSPI_Abort+0x7a>
 800e506:	6ca6      	ldr	r6, [r4, #72]	@ 0x48
 800e508:	e7da      	b.n	800e4c0 <HAL_QSPI_Abort+0x48>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800e50a:	f7fd fa95 	bl	800ba38 <HAL_GetTick>
 800e50e:	1b40      	subs	r0, r0, r5
 800e510:	4286      	cmp	r6, r0
 800e512:	d30b      	bcc.n	800e52c <HAL_QSPI_Abort+0xb4>
 800e514:	b156      	cbz	r6, 800e52c <HAL_QSPI_Abort+0xb4>
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800e516:	6823      	ldr	r3, [r4, #0]
 800e518:	689a      	ldr	r2, [r3, #8]
 800e51a:	0692      	lsls	r2, r2, #26
 800e51c:	d4f5      	bmi.n	800e50a <HAL_QSPI_Abort+0x92>
 800e51e:	e7d6      	b.n	800e4ce <HAL_QSPI_Abort+0x56>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 800e520:	6c62      	ldr	r2, [r4, #68]	@ 0x44
    if (__HAL_QSPI_GET_FLAG(hqspi, QSPI_FLAG_BUSY) != RESET)
 800e522:	6823      	ldr	r3, [r4, #0]
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 800e524:	f042 0204 	orr.w	r2, r2, #4
 800e528:	6462      	str	r2, [r4, #68]	@ 0x44
 800e52a:	e7b8      	b.n	800e49e <HAL_QSPI_Abort+0x26>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 800e52c:	2304      	movs	r3, #4
 800e52e:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 800e532:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800e534:	f043 0301 	orr.w	r3, r3, #1
 800e538:	6463      	str	r3, [r4, #68]	@ 0x44
  HAL_StatusTypeDef status = HAL_OK;
 800e53a:	2001      	movs	r0, #1
}
 800e53c:	bd70      	pop	{r4, r5, r6, pc}
 800e53e:	bf00      	nop

0800e540 <HAL_QSPI_Transmit>:
{
 800e540:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e544:	4604      	mov	r4, r0
 800e546:	4689      	mov	r9, r1
 800e548:	4615      	mov	r5, r2
  uint32_t tickstart = HAL_GetTick();
 800e54a:	f7fd fa75 	bl	800ba38 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800e54e:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 800e552:	f8d4 8000 	ldr.w	r8, [r4]
  __HAL_LOCK(hqspi);
 800e556:	2b01      	cmp	r3, #1
 800e558:	d068      	beq.n	800e62c <HAL_QSPI_Transmit+0xec>
 800e55a:	2301      	movs	r3, #1
 800e55c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800e560:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 800e564:	2b01      	cmp	r3, #1
 800e566:	b2df      	uxtb	r7, r3
 800e568:	d006      	beq.n	800e578 <HAL_QSPI_Transmit+0x38>
    status = HAL_BUSY;
 800e56a:	2702      	movs	r7, #2
  __HAL_UNLOCK(hqspi);
 800e56c:	2300      	movs	r3, #0
 800e56e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 800e572:	4638      	mov	r0, r7
 800e574:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800e578:	2300      	movs	r3, #0
 800e57a:	6463      	str	r3, [r4, #68]	@ 0x44
    if(pData != NULL )
 800e57c:	f1b9 0f00 	cmp.w	r9, #0
 800e580:	d060      	beq.n	800e644 <HAL_QSPI_Transmit+0x104>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 800e582:	2312      	movs	r3, #18
 800e584:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 800e588:	f8d8 3010 	ldr.w	r3, [r8, #16]
 800e58c:	3301      	adds	r3, #1
 800e58e:	62e3      	str	r3, [r4, #44]	@ 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800e590:	f8d8 3010 	ldr.w	r3, [r8, #16]
      hqspi->pTxBuffPtr = pData;
 800e594:	f8c4 9024 	str.w	r9, [r4, #36]	@ 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800e598:	3301      	adds	r3, #1
 800e59a:	62a3      	str	r3, [r4, #40]	@ 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800e59c:	f8d8 3014 	ldr.w	r3, [r8, #20]
 800e5a0:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 800e5a4:	f8c8 3014 	str.w	r3, [r8, #20]
      while(hqspi->TxXferCount > 0U)
 800e5a8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800e5aa:	4606      	mov	r6, r0
 800e5ac:	4641      	mov	r1, r8
 800e5ae:	b1fb      	cbz	r3, 800e5f0 <HAL_QSPI_Transmit+0xb0>
 800e5b0:	1c6a      	adds	r2, r5, #1
 800e5b2:	d117      	bne.n	800e5e4 <HAL_QSPI_Transmit+0xa4>
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800e5b4:	688b      	ldr	r3, [r1, #8]
 800e5b6:	075b      	lsls	r3, r3, #29
 800e5b8:	d5fc      	bpl.n	800e5b4 <HAL_QSPI_Transmit+0x74>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 800e5ba:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800e5bc:	781b      	ldrb	r3, [r3, #0]
 800e5be:	f888 3020 	strb.w	r3, [r8, #32]
        hqspi->TxXferCount--;
 800e5c2:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
        hqspi->pTxBuffPtr++;
 800e5c4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        hqspi->TxXferCount--;
 800e5c6:	3a01      	subs	r2, #1
 800e5c8:	62e2      	str	r2, [r4, #44]	@ 0x2c
      while(hqspi->TxXferCount > 0U)
 800e5ca:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
        hqspi->pTxBuffPtr++;
 800e5cc:	3301      	adds	r3, #1
 800e5ce:	6263      	str	r3, [r4, #36]	@ 0x24
      while(hqspi->TxXferCount > 0U)
 800e5d0:	b162      	cbz	r2, 800e5ec <HAL_QSPI_Transmit+0xac>
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800e5d2:	6821      	ldr	r1, [r4, #0]
 800e5d4:	e7ec      	b.n	800e5b0 <HAL_QSPI_Transmit+0x70>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800e5d6:	f7fd fa2f 	bl	800ba38 <HAL_GetTick>
 800e5da:	1b80      	subs	r0, r0, r6
 800e5dc:	4285      	cmp	r5, r0
 800e5de:	d329      	bcc.n	800e634 <HAL_QSPI_Transmit+0xf4>
 800e5e0:	b345      	cbz	r5, 800e634 <HAL_QSPI_Transmit+0xf4>
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800e5e2:	6821      	ldr	r1, [r4, #0]
 800e5e4:	688b      	ldr	r3, [r1, #8]
 800e5e6:	0758      	lsls	r0, r3, #29
 800e5e8:	d5f5      	bpl.n	800e5d6 <HAL_QSPI_Transmit+0x96>
 800e5ea:	e7e6      	b.n	800e5ba <HAL_QSPI_Transmit+0x7a>
 800e5ec:	f8d4 8000 	ldr.w	r8, [r4]
 800e5f0:	1c69      	adds	r1, r5, #1
 800e5f2:	d116      	bne.n	800e622 <HAL_QSPI_Transmit+0xe2>
 800e5f4:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800e5f8:	079a      	lsls	r2, r3, #30
 800e5fa:	d5fb      	bpl.n	800e5f4 <HAL_QSPI_Transmit+0xb4>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800e5fc:	2302      	movs	r3, #2
 800e5fe:	f8c8 300c 	str.w	r3, [r8, #12]
          status = HAL_QSPI_Abort(hqspi);
 800e602:	4620      	mov	r0, r4
 800e604:	f7ff ff38 	bl	800e478 <HAL_QSPI_Abort>
 800e608:	4607      	mov	r7, r0
      hqspi->State = HAL_QSPI_STATE_READY;
 800e60a:	2301      	movs	r3, #1
 800e60c:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 800e610:	e7ac      	b.n	800e56c <HAL_QSPI_Transmit+0x2c>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800e612:	f7fd fa11 	bl	800ba38 <HAL_GetTick>
 800e616:	1b83      	subs	r3, r0, r6
 800e618:	429d      	cmp	r5, r3
 800e61a:	d30b      	bcc.n	800e634 <HAL_QSPI_Transmit+0xf4>
 800e61c:	b155      	cbz	r5, 800e634 <HAL_QSPI_Transmit+0xf4>
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800e61e:	f8d4 8000 	ldr.w	r8, [r4]
 800e622:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800e626:	079b      	lsls	r3, r3, #30
 800e628:	d5f3      	bpl.n	800e612 <HAL_QSPI_Transmit+0xd2>
 800e62a:	e7e7      	b.n	800e5fc <HAL_QSPI_Transmit+0xbc>
  __HAL_LOCK(hqspi);
 800e62c:	2702      	movs	r7, #2
}
 800e62e:	4638      	mov	r0, r7
 800e630:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 800e634:	2304      	movs	r3, #4
 800e636:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 800e63a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800e63c:	f043 0301 	orr.w	r3, r3, #1
 800e640:	6463      	str	r3, [r4, #68]	@ 0x44
        if (status == HAL_OK)
 800e642:	e7e2      	b.n	800e60a <HAL_QSPI_Transmit+0xca>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 800e644:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800e646:	f043 0308 	orr.w	r3, r3, #8
 800e64a:	6463      	str	r3, [r4, #68]	@ 0x44
      status = HAL_ERROR;
 800e64c:	e78e      	b.n	800e56c <HAL_QSPI_Transmit+0x2c>
 800e64e:	bf00      	nop

0800e650 <HAL_QSPI_Receive>:
{
 800e650:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e654:	4604      	mov	r4, r0
 800e656:	4615      	mov	r5, r2
 800e658:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 800e65a:	f7fd f9ed 	bl	800ba38 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 800e65e:	f8d4 8000 	ldr.w	r8, [r4]
 800e662:	f8d8 2018 	ldr.w	r2, [r8, #24]
  __HAL_LOCK(hqspi);
 800e666:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 800e66a:	2b01      	cmp	r3, #1
 800e66c:	d06e      	beq.n	800e74c <HAL_QSPI_Receive+0xfc>
 800e66e:	2301      	movs	r3, #1
 800e670:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800e674:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
 800e678:	2b01      	cmp	r3, #1
 800e67a:	b2df      	uxtb	r7, r3
 800e67c:	d006      	beq.n	800e68c <HAL_QSPI_Receive+0x3c>
    status = HAL_BUSY;
 800e67e:	2702      	movs	r7, #2
  __HAL_UNLOCK(hqspi);
 800e680:	2300      	movs	r3, #0
 800e682:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
 800e686:	4638      	mov	r0, r7
 800e688:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800e68c:	2300      	movs	r3, #0
 800e68e:	6463      	str	r3, [r4, #68]	@ 0x44
    if(pData != NULL )
 800e690:	f1b9 0f00 	cmp.w	r9, #0
 800e694:	d066      	beq.n	800e764 <HAL_QSPI_Receive+0x114>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 800e696:	2322      	movs	r3, #34	@ 0x22
 800e698:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 800e69c:	f8d8 3010 	ldr.w	r3, [r8, #16]
 800e6a0:	3301      	adds	r3, #1
 800e6a2:	63a3      	str	r3, [r4, #56]	@ 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800e6a4:	f8d8 3010 	ldr.w	r3, [r8, #16]
      hqspi->pRxBuffPtr = pData;
 800e6a8:	f8c4 9030 	str.w	r9, [r4, #48]	@ 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800e6ac:	3301      	adds	r3, #1
 800e6ae:	6363      	str	r3, [r4, #52]	@ 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 800e6b0:	f8d8 3014 	ldr.w	r3, [r8, #20]
 800e6b4:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 800e6b8:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 800e6bc:	f8c8 3014 	str.w	r3, [r8, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 800e6c0:	f8c8 2018 	str.w	r2, [r8, #24]
      while(hqspi->RxXferCount > 0U)
 800e6c4:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800e6c6:	4606      	mov	r6, r0
 800e6c8:	4641      	mov	r1, r8
 800e6ca:	b30b      	cbz	r3, 800e710 <HAL_QSPI_Receive+0xc0>
 800e6cc:	1c68      	adds	r0, r5, #1
 800e6ce:	d118      	bne.n	800e702 <HAL_QSPI_Receive+0xb2>
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800e6d0:	688b      	ldr	r3, [r1, #8]
 800e6d2:	f013 0f06 	tst.w	r3, #6
 800e6d6:	d0fb      	beq.n	800e6d0 <HAL_QSPI_Receive+0x80>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 800e6d8:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800e6da:	f898 2020 	ldrb.w	r2, [r8, #32]
 800e6de:	701a      	strb	r2, [r3, #0]
        hqspi->RxXferCount--;
 800e6e0:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
        hqspi->pRxBuffPtr++;
 800e6e2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
        hqspi->RxXferCount--;
 800e6e4:	3a01      	subs	r2, #1
 800e6e6:	63a2      	str	r2, [r4, #56]	@ 0x38
      while(hqspi->RxXferCount > 0U)
 800e6e8:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
        hqspi->pRxBuffPtr++;
 800e6ea:	3301      	adds	r3, #1
 800e6ec:	6323      	str	r3, [r4, #48]	@ 0x30
      while(hqspi->RxXferCount > 0U)
 800e6ee:	b16a      	cbz	r2, 800e70c <HAL_QSPI_Receive+0xbc>
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800e6f0:	6821      	ldr	r1, [r4, #0]
 800e6f2:	e7eb      	b.n	800e6cc <HAL_QSPI_Receive+0x7c>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800e6f4:	f7fd f9a0 	bl	800ba38 <HAL_GetTick>
 800e6f8:	1b80      	subs	r0, r0, r6
 800e6fa:	4285      	cmp	r5, r0
 800e6fc:	d32a      	bcc.n	800e754 <HAL_QSPI_Receive+0x104>
 800e6fe:	b34d      	cbz	r5, 800e754 <HAL_QSPI_Receive+0x104>
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800e700:	6821      	ldr	r1, [r4, #0]
 800e702:	688b      	ldr	r3, [r1, #8]
 800e704:	f013 0f06 	tst.w	r3, #6
 800e708:	d0f4      	beq.n	800e6f4 <HAL_QSPI_Receive+0xa4>
 800e70a:	e7e5      	b.n	800e6d8 <HAL_QSPI_Receive+0x88>
 800e70c:	f8d4 8000 	ldr.w	r8, [r4]
 800e710:	1c69      	adds	r1, r5, #1
 800e712:	d116      	bne.n	800e742 <HAL_QSPI_Receive+0xf2>
 800e714:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800e718:	079a      	lsls	r2, r3, #30
 800e71a:	d5fb      	bpl.n	800e714 <HAL_QSPI_Receive+0xc4>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800e71c:	2302      	movs	r3, #2
 800e71e:	f8c8 300c 	str.w	r3, [r8, #12]
          status = HAL_QSPI_Abort(hqspi);
 800e722:	4620      	mov	r0, r4
 800e724:	f7ff fea8 	bl	800e478 <HAL_QSPI_Abort>
 800e728:	4607      	mov	r7, r0
      hqspi->State = HAL_QSPI_STATE_READY;
 800e72a:	2301      	movs	r3, #1
 800e72c:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
 800e730:	e7a6      	b.n	800e680 <HAL_QSPI_Receive+0x30>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800e732:	f7fd f981 	bl	800ba38 <HAL_GetTick>
 800e736:	1b83      	subs	r3, r0, r6
 800e738:	429d      	cmp	r5, r3
 800e73a:	d30b      	bcc.n	800e754 <HAL_QSPI_Receive+0x104>
 800e73c:	b155      	cbz	r5, 800e754 <HAL_QSPI_Receive+0x104>
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800e73e:	f8d4 8000 	ldr.w	r8, [r4]
 800e742:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800e746:	079b      	lsls	r3, r3, #30
 800e748:	d5f3      	bpl.n	800e732 <HAL_QSPI_Receive+0xe2>
 800e74a:	e7e7      	b.n	800e71c <HAL_QSPI_Receive+0xcc>
  __HAL_LOCK(hqspi);
 800e74c:	2702      	movs	r7, #2
}
 800e74e:	4638      	mov	r0, r7
 800e750:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 800e754:	2304      	movs	r3, #4
 800e756:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 800e75a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800e75c:	f043 0301 	orr.w	r3, r3, #1
 800e760:	6463      	str	r3, [r4, #68]	@ 0x44
        if  (status == HAL_OK)
 800e762:	e7e2      	b.n	800e72a <HAL_QSPI_Receive+0xda>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 800e764:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800e766:	f043 0308 	orr.w	r3, r3, #8
 800e76a:	6463      	str	r3, [r4, #68]	@ 0x44
      status = HAL_ERROR;
 800e76c:	e788      	b.n	800e680 <HAL_QSPI_Receive+0x30>
 800e76e:	bf00      	nop

0800e770 <HAL_RCC_GetSysClockFreq>:
  uint32_t pllvco = 0U;
  uint32_t pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800e770:	4916      	ldr	r1, [pc, #88]	@ (800e7cc <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800e772:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800e774:	688b      	ldr	r3, [r1, #8]
 800e776:	f003 030c 	and.w	r3, r3, #12
 800e77a:	2b04      	cmp	r3, #4
 800e77c:	d01b      	beq.n	800e7b6 <HAL_RCC_GetSysClockFreq+0x46>
 800e77e:	2b08      	cmp	r3, #8
 800e780:	d117      	bne.n	800e7b2 <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800e782:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800e784:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800e786:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800e788:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800e78c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800e790:	d113      	bne.n	800e7ba <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800e792:	480f      	ldr	r0, [pc, #60]	@ (800e7d0 <HAL_RCC_GetSysClockFreq+0x60>)
 800e794:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800e798:	fba1 0100 	umull	r0, r1, r1, r0
 800e79c:	f7f1 fdd8 	bl	8000350 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 800e7a0:	4b0a      	ldr	r3, [pc, #40]	@ (800e7cc <HAL_RCC_GetSysClockFreq+0x5c>)
 800e7a2:	685b      	ldr	r3, [r3, #4]
 800e7a4:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800e7a8:	3301      	adds	r3, #1
 800e7aa:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 800e7ac:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800e7b0:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800e7b2:	4807      	ldr	r0, [pc, #28]	@ (800e7d0 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800e7b4:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800e7b6:	4807      	ldr	r0, [pc, #28]	@ (800e7d4 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800e7b8:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800e7ba:	4806      	ldr	r0, [pc, #24]	@ (800e7d4 <HAL_RCC_GetSysClockFreq+0x64>)
 800e7bc:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800e7c0:	2300      	movs	r3, #0
 800e7c2:	fba1 0100 	umull	r0, r1, r1, r0
 800e7c6:	f7f1 fdc3 	bl	8000350 <__aeabi_uldivmod>
 800e7ca:	e7e9      	b.n	800e7a0 <HAL_RCC_GetSysClockFreq+0x30>
 800e7cc:	40023800 	.word	0x40023800
 800e7d0:	00f42400 	.word	0x00f42400
 800e7d4:	007a1200 	.word	0x007a1200

0800e7d8 <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
 800e7d8:	2800      	cmp	r0, #0
 800e7da:	f000 8087 	beq.w	800e8ec <HAL_RCC_ClockConfig+0x114>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 800e7de:	4a48      	ldr	r2, [pc, #288]	@ (800e900 <HAL_RCC_ClockConfig+0x128>)
 800e7e0:	6813      	ldr	r3, [r2, #0]
 800e7e2:	f003 030f 	and.w	r3, r3, #15
 800e7e6:	428b      	cmp	r3, r1
{
 800e7e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e7ec:	460d      	mov	r5, r1
 800e7ee:	4604      	mov	r4, r0
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 800e7f0:	d209      	bcs.n	800e806 <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800e7f2:	b2cb      	uxtb	r3, r1
 800e7f4:	7013      	strb	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800e7f6:	6813      	ldr	r3, [r2, #0]
 800e7f8:	f003 030f 	and.w	r3, r3, #15
 800e7fc:	428b      	cmp	r3, r1
 800e7fe:	d002      	beq.n	800e806 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800e800:	2001      	movs	r0, #1
}
 800e802:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800e806:	6823      	ldr	r3, [r4, #0]
 800e808:	0798      	lsls	r0, r3, #30
 800e80a:	d514      	bpl.n	800e836 <HAL_RCC_ClockConfig+0x5e>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800e80c:	0759      	lsls	r1, r3, #29
 800e80e:	d504      	bpl.n	800e81a <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800e810:	493c      	ldr	r1, [pc, #240]	@ (800e904 <HAL_RCC_ClockConfig+0x12c>)
 800e812:	688a      	ldr	r2, [r1, #8]
 800e814:	f442 52e0 	orr.w	r2, r2, #7168	@ 0x1c00
 800e818:	608a      	str	r2, [r1, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800e81a:	071a      	lsls	r2, r3, #28
 800e81c:	d504      	bpl.n	800e828 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800e81e:	4939      	ldr	r1, [pc, #228]	@ (800e904 <HAL_RCC_ClockConfig+0x12c>)
 800e820:	688a      	ldr	r2, [r1, #8]
 800e822:	f442 4260 	orr.w	r2, r2, #57344	@ 0xe000
 800e826:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800e828:	4936      	ldr	r1, [pc, #216]	@ (800e904 <HAL_RCC_ClockConfig+0x12c>)
 800e82a:	68a0      	ldr	r0, [r4, #8]
 800e82c:	688a      	ldr	r2, [r1, #8]
 800e82e:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 800e832:	4302      	orrs	r2, r0
 800e834:	608a      	str	r2, [r1, #8]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800e836:	07df      	lsls	r7, r3, #31
 800e838:	d521      	bpl.n	800e87e <HAL_RCC_ClockConfig+0xa6>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800e83a:	6862      	ldr	r2, [r4, #4]
 800e83c:	2a01      	cmp	r2, #1
 800e83e:	d057      	beq.n	800e8f0 <HAL_RCC_ClockConfig+0x118>
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800e840:	1e93      	subs	r3, r2, #2
 800e842:	2b01      	cmp	r3, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800e844:	4b2f      	ldr	r3, [pc, #188]	@ (800e904 <HAL_RCC_ClockConfig+0x12c>)
 800e846:	681b      	ldr	r3, [r3, #0]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800e848:	d94d      	bls.n	800e8e6 <HAL_RCC_ClockConfig+0x10e>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800e84a:	0799      	lsls	r1, r3, #30
 800e84c:	d5d8      	bpl.n	800e800 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800e84e:	4e2d      	ldr	r6, [pc, #180]	@ (800e904 <HAL_RCC_ClockConfig+0x12c>)
 800e850:	68b3      	ldr	r3, [r6, #8]
 800e852:	f023 0303 	bic.w	r3, r3, #3
 800e856:	4313      	orrs	r3, r2
 800e858:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800e85a:	f7fd f8ed 	bl	800ba38 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800e85e:	f241 3888 	movw	r8, #5000	@ 0x1388
    tickstart = HAL_GetTick();
 800e862:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800e864:	e004      	b.n	800e870 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800e866:	f7fd f8e7 	bl	800ba38 <HAL_GetTick>
 800e86a:	1bc0      	subs	r0, r0, r7
 800e86c:	4540      	cmp	r0, r8
 800e86e:	d844      	bhi.n	800e8fa <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800e870:	68b3      	ldr	r3, [r6, #8]
 800e872:	6862      	ldr	r2, [r4, #4]
 800e874:	f003 030c 	and.w	r3, r3, #12
 800e878:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800e87c:	d1f3      	bne.n	800e866 <HAL_RCC_ClockConfig+0x8e>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 800e87e:	4a20      	ldr	r2, [pc, #128]	@ (800e900 <HAL_RCC_ClockConfig+0x128>)
 800e880:	6813      	ldr	r3, [r2, #0]
 800e882:	f003 030f 	and.w	r3, r3, #15
 800e886:	42ab      	cmp	r3, r5
 800e888:	d906      	bls.n	800e898 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800e88a:	b2eb      	uxtb	r3, r5
 800e88c:	7013      	strb	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800e88e:	6813      	ldr	r3, [r2, #0]
 800e890:	f003 030f 	and.w	r3, r3, #15
 800e894:	42ab      	cmp	r3, r5
 800e896:	d1b3      	bne.n	800e800 <HAL_RCC_ClockConfig+0x28>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800e898:	6823      	ldr	r3, [r4, #0]
 800e89a:	075a      	lsls	r2, r3, #29
 800e89c:	d506      	bpl.n	800e8ac <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800e89e:	4919      	ldr	r1, [pc, #100]	@ (800e904 <HAL_RCC_ClockConfig+0x12c>)
 800e8a0:	68e0      	ldr	r0, [r4, #12]
 800e8a2:	688a      	ldr	r2, [r1, #8]
 800e8a4:	f422 52e0 	bic.w	r2, r2, #7168	@ 0x1c00
 800e8a8:	4302      	orrs	r2, r0
 800e8aa:	608a      	str	r2, [r1, #8]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800e8ac:	071b      	lsls	r3, r3, #28
 800e8ae:	d507      	bpl.n	800e8c0 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800e8b0:	4a14      	ldr	r2, [pc, #80]	@ (800e904 <HAL_RCC_ClockConfig+0x12c>)
 800e8b2:	6921      	ldr	r1, [r4, #16]
 800e8b4:	6893      	ldr	r3, [r2, #8]
 800e8b6:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 800e8ba:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800e8be:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 800e8c0:	f7ff ff56 	bl	800e770 <HAL_RCC_GetSysClockFreq>
 800e8c4:	4a0f      	ldr	r2, [pc, #60]	@ (800e904 <HAL_RCC_ClockConfig+0x12c>)
 800e8c6:	4c10      	ldr	r4, [pc, #64]	@ (800e908 <HAL_RCC_ClockConfig+0x130>)
 800e8c8:	6892      	ldr	r2, [r2, #8]
 800e8ca:	4910      	ldr	r1, [pc, #64]	@ (800e90c <HAL_RCC_ClockConfig+0x134>)
 800e8cc:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800e8d0:	4603      	mov	r3, r0
 800e8d2:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick(uwTickPrio);
 800e8d4:	480e      	ldr	r0, [pc, #56]	@ (800e910 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 800e8d6:	40d3      	lsrs	r3, r2
  HAL_InitTick(uwTickPrio);
 800e8d8:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 800e8da:	600b      	str	r3, [r1, #0]
  HAL_InitTick(uwTickPrio);
 800e8dc:	f7f5 fd40 	bl	8004360 <HAL_InitTick>
  return HAL_OK;
 800e8e0:	2000      	movs	r0, #0
}
 800e8e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800e8e6:	0198      	lsls	r0, r3, #6
 800e8e8:	d4b1      	bmi.n	800e84e <HAL_RCC_ClockConfig+0x76>
 800e8ea:	e789      	b.n	800e800 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800e8ec:	2001      	movs	r0, #1
}
 800e8ee:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800e8f0:	4b04      	ldr	r3, [pc, #16]	@ (800e904 <HAL_RCC_ClockConfig+0x12c>)
 800e8f2:	681b      	ldr	r3, [r3, #0]
 800e8f4:	039e      	lsls	r6, r3, #14
 800e8f6:	d4aa      	bmi.n	800e84e <HAL_RCC_ClockConfig+0x76>
 800e8f8:	e782      	b.n	800e800 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800e8fa:	2003      	movs	r0, #3
 800e8fc:	e781      	b.n	800e802 <HAL_RCC_ClockConfig+0x2a>
 800e8fe:	bf00      	nop
 800e900:	40023c00 	.word	0x40023c00
 800e904:	40023800 	.word	0x40023800
 800e908:	08032180 	.word	0x08032180
 800e90c:	20000038 	.word	0x20000038
 800e910:	20000040 	.word	0x20000040

0800e914 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 800e914:	4b04      	ldr	r3, [pc, #16]	@ (800e928 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800e916:	4905      	ldr	r1, [pc, #20]	@ (800e92c <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 800e918:	689b      	ldr	r3, [r3, #8]
 800e91a:	4a05      	ldr	r2, [pc, #20]	@ (800e930 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800e91c:	6808      	ldr	r0, [r1, #0]
 800e91e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800e922:	5cd3      	ldrb	r3, [r2, r3]
}
 800e924:	40d8      	lsrs	r0, r3
 800e926:	4770      	bx	lr
 800e928:	40023800 	.word	0x40023800
 800e92c:	20000038 	.word	0x20000038
 800e930:	08032178 	.word	0x08032178

0800e934 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800e934:	4b0e      	ldr	r3, [pc, #56]	@ (800e970 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800e936:	220f      	movs	r2, #15
 800e938:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800e93a:	689a      	ldr	r2, [r3, #8]
 800e93c:	f002 0203 	and.w	r2, r2, #3
 800e940:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800e942:	689a      	ldr	r2, [r3, #8]
 800e944:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 800e948:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800e94a:	689a      	ldr	r2, [r3, #8]
 800e94c:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 800e950:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800e952:	689b      	ldr	r3, [r3, #8]
 800e954:	08db      	lsrs	r3, r3, #3
{
 800e956:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800e958:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800e95c:	4c05      	ldr	r4, [pc, #20]	@ (800e974 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800e95e:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800e960:	6823      	ldr	r3, [r4, #0]
}
 800e962:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800e966:	f003 030f 	and.w	r3, r3, #15
 800e96a:	600b      	str	r3, [r1, #0]
}
 800e96c:	4770      	bx	lr
 800e96e:	bf00      	nop
 800e970:	40023800 	.word	0x40023800
 800e974:	40023c00 	.word	0x40023c00

0800e978 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800e978:	b5f0      	push	{r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*--------------------------- CLK48 Configuration --------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 800e97a:	6803      	ldr	r3, [r0, #0]
 800e97c:	0619      	lsls	r1, r3, #24
{
 800e97e:	b083      	sub	sp, #12
 800e980:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 800e982:	d508      	bpl.n	800e996 <HAL_RCCEx_PeriphCLKConfig+0x1e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 clock source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 800e984:	49ac      	ldr	r1, [pc, #688]	@ (800ec38 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 800e986:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 800e988:	f8d1 208c 	ldr.w	r2, [r1, #140]	@ 0x8c
 800e98c:	f022 6200 	bic.w	r2, r2, #134217728	@ 0x8000000
 800e990:	4302      	orrs	r2, r0
 800e992:	f8c1 208c 	str.w	r2, [r1, #140]	@ 0x8c
  }
  /*--------------------------------------------------------------------------*/

  /*------------------------------ SDIO Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 800e996:	05da      	lsls	r2, r3, #23
 800e998:	d508      	bpl.n	800e9ac <HAL_RCCEx_PeriphCLKConfig+0x34>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));

    /* Configure the SDIO clock source */
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 800e99a:	49a7      	ldr	r1, [pc, #668]	@ (800ec38 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 800e99c:	6ba0      	ldr	r0, [r4, #56]	@ 0x38
 800e99e:	f8d1 208c 	ldr.w	r2, [r1, #140]	@ 0x8c
 800e9a2:	f022 5280 	bic.w	r2, r2, #268435456	@ 0x10000000
 800e9a6:	4302      	orrs	r2, r0
 800e9a8:	f8c1 208c 	str.w	r2, [r1, #140]	@ 0x8c

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*------------------- Common configuration SAI/I2S -------------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800e9ac:	f013 0f43 	tst.w	r3, #67	@ 0x43
 800e9b0:	f040 809d 	bne.w	800eaee <HAL_RCCEx_PeriphCLKConfig+0x176>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI, LTDC or CLK48 Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for these peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800e9b4:	f013 0f0c 	tst.w	r3, #12
 800e9b8:	d112      	bne.n	800e9e0 <HAL_RCCEx_PeriphCLKConfig+0x68>
      (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)             ||
 800e9ba:	061a      	lsls	r2, r3, #24
 800e9bc:	d503      	bpl.n	800e9c6 <HAL_RCCEx_PeriphCLKConfig+0x4e>
      ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)          &&
 800e9be:	6b62      	ldr	r2, [r4, #52]	@ 0x34
 800e9c0:	f1b2 6f00 	cmp.w	r2, #134217728	@ 0x8000000
 800e9c4:	d00c      	beq.n	800e9e0 <HAL_RCCEx_PeriphCLKConfig+0x68>
  }

  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800e9c6:	069d      	lsls	r5, r3, #26
 800e9c8:	f100 80e1 	bmi.w	800eb8e <HAL_RCCEx_PeriphCLKConfig+0x216>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800e9cc:	06db      	lsls	r3, r3, #27
 800e9ce:	d504      	bpl.n	800e9da <HAL_RCCEx_PeriphCLKConfig+0x62>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800e9d0:	4b9a      	ldr	r3, [pc, #616]	@ (800ec3c <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 800e9d2:	f894 2030 	ldrb.w	r2, [r4, #48]	@ 0x30
 800e9d6:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
  }
  return HAL_OK;
 800e9da:	2000      	movs	r0, #0
}
 800e9dc:	b003      	add	sp, #12
 800e9de:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800e9e0:	4b97      	ldr	r3, [pc, #604]	@ (800ec40 <HAL_RCCEx_PeriphCLKConfig+0x2c8>)
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800e9e2:	4e95      	ldr	r6, [pc, #596]	@ (800ec38 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
    __HAL_RCC_PLLSAI_DISABLE();
 800e9e4:	2200      	movs	r2, #0
 800e9e6:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 800e9e8:	f7fd f826 	bl	800ba38 <HAL_GetTick>
 800e9ec:	4605      	mov	r5, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800e9ee:	e004      	b.n	800e9fa <HAL_RCCEx_PeriphCLKConfig+0x82>
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 800e9f0:	f7fd f822 	bl	800ba38 <HAL_GetTick>
 800e9f4:	1b43      	subs	r3, r0, r5
 800e9f6:	2b02      	cmp	r3, #2
 800e9f8:	d876      	bhi.n	800eae8 <HAL_RCCEx_PeriphCLKConfig+0x170>
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800e9fa:	6833      	ldr	r3, [r6, #0]
 800e9fc:	009f      	lsls	r7, r3, #2
 800e9fe:	d4f7      	bmi.n	800e9f0 <HAL_RCCEx_PeriphCLKConfig+0x78>
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800ea00:	6822      	ldr	r2, [r4, #0]
 800ea02:	0750      	lsls	r0, r2, #29
 800ea04:	d51a      	bpl.n	800ea3c <HAL_RCCEx_PeriphCLKConfig+0xc4>
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 800ea06:	f8d6 3088 	ldr.w	r3, [r6, #136]	@ 0x88
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800ea0a:	f8d6 1088 	ldr.w	r1, [r6, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, PeriphClkInit->PLLSAI.PLLSAIQ, pllsair);
 800ea0e:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 800ea12:	f001 41e0 	and.w	r1, r1, #1879048192	@ 0x70000000
 800ea16:	430b      	orrs	r3, r1
 800ea18:	6921      	ldr	r1, [r4, #16]
 800ea1a:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 800ea1e:	69a1      	ldr	r1, [r4, #24]
 800ea20:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800ea24:	f8c6 3088 	str.w	r3, [r6, #136]	@ 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800ea28:	f8d6 308c 	ldr.w	r3, [r6, #140]	@ 0x8c
 800ea2c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800ea2e:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 800ea32:	3901      	subs	r1, #1
 800ea34:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800ea38:	f8c6 308c 	str.w	r3, [r6, #140]	@ 0x8c
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800ea3c:	0711      	lsls	r1, r2, #28
 800ea3e:	d519      	bpl.n	800ea74 <HAL_RCCEx_PeriphCLKConfig+0xfc>
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 800ea40:	497d      	ldr	r1, [pc, #500]	@ (800ec38 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 800ea42:	f8d1 3088 	ldr.w	r3, [r1, #136]	@ 0x88
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800ea46:	f8d1 0088 	ldr.w	r0, [r1, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, pllsaiq, PeriphClkInit->PLLSAI.PLLSAIR);
 800ea4a:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 800ea4e:	f000 6070 	and.w	r0, r0, #251658240	@ 0xf000000
 800ea52:	4303      	orrs	r3, r0
 800ea54:	6920      	ldr	r0, [r4, #16]
 800ea56:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800ea5a:	69e0      	ldr	r0, [r4, #28]
 800ea5c:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 800ea60:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800ea64:	f8d1 308c 	ldr.w	r3, [r1, #140]	@ 0x8c
 800ea68:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800ea6a:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 800ea6e:	4303      	orrs	r3, r0
 800ea70:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
    if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == (RCC_PERIPHCLK_CLK48)) &&
 800ea74:	0613      	lsls	r3, r2, #24
 800ea76:	d517      	bpl.n	800eaa8 <HAL_RCCEx_PeriphCLKConfig+0x130>
 800ea78:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800ea7a:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800ea7e:	d113      	bne.n	800eaa8 <HAL_RCCEx_PeriphCLKConfig+0x130>
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800ea80:	496d      	ldr	r1, [pc, #436]	@ (800ec38 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq, pllsair);
 800ea82:	6962      	ldr	r2, [r4, #20]
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800ea84:	f8d1 3088 	ldr.w	r3, [r1, #136]	@ 0x88
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800ea88:	f8d1 0088 	ldr.w	r0, [r1, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq, pllsair);
 800ea8c:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
 800ea90:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 800ea94:	4303      	orrs	r3, r0
 800ea96:	6920      	ldr	r0, [r4, #16]
 800ea98:	0852      	lsrs	r2, r2, #1
 800ea9a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800ea9e:	3a01      	subs	r2, #1
 800eaa0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800eaa4:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
    __HAL_RCC_PLLSAI_ENABLE();
 800eaa8:	4b65      	ldr	r3, [pc, #404]	@ (800ec40 <HAL_RCCEx_PeriphCLKConfig+0x2c8>)
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800eaaa:	4e63      	ldr	r6, [pc, #396]	@ (800ec38 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
    __HAL_RCC_PLLSAI_ENABLE();
 800eaac:	2201      	movs	r2, #1
 800eaae:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 800eab0:	f7fc ffc2 	bl	800ba38 <HAL_GetTick>
 800eab4:	4605      	mov	r5, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800eab6:	e004      	b.n	800eac2 <HAL_RCCEx_PeriphCLKConfig+0x14a>
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 800eab8:	f7fc ffbe 	bl	800ba38 <HAL_GetTick>
 800eabc:	1b40      	subs	r0, r0, r5
 800eabe:	2802      	cmp	r0, #2
 800eac0:	d812      	bhi.n	800eae8 <HAL_RCCEx_PeriphCLKConfig+0x170>
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800eac2:	6833      	ldr	r3, [r6, #0]
 800eac4:	009f      	lsls	r7, r3, #2
 800eac6:	d5f7      	bpl.n	800eab8 <HAL_RCCEx_PeriphCLKConfig+0x140>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800eac8:	6823      	ldr	r3, [r4, #0]
 800eaca:	e77c      	b.n	800e9c6 <HAL_RCCEx_PeriphCLKConfig+0x4e>
        tickstart = HAL_GetTick();
 800eacc:	f7fc ffb4 	bl	800ba38 <HAL_GetTick>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800ead0:	f241 3788 	movw	r7, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 800ead4:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800ead6:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800ead8:	079a      	lsls	r2, r3, #30
 800eada:	f100 808e 	bmi.w	800ebfa <HAL_RCCEx_PeriphCLKConfig+0x282>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800eade:	f7fc ffab 	bl	800ba38 <HAL_GetTick>
 800eae2:	1b80      	subs	r0, r0, r6
 800eae4:	42b8      	cmp	r0, r7
 800eae6:	d9f6      	bls.n	800ead6 <HAL_RCCEx_PeriphCLKConfig+0x15e>
        return HAL_TIMEOUT;
 800eae8:	2003      	movs	r0, #3
}
 800eaea:	b003      	add	sp, #12
 800eaec:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800eaee:	4b54      	ldr	r3, [pc, #336]	@ (800ec40 <HAL_RCCEx_PeriphCLKConfig+0x2c8>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800eaf0:	4e51      	ldr	r6, [pc, #324]	@ (800ec38 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
    __HAL_RCC_PLLI2S_DISABLE();
 800eaf2:	2200      	movs	r2, #0
 800eaf4:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 800eaf6:	f7fc ff9f 	bl	800ba38 <HAL_GetTick>
 800eafa:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800eafc:	e004      	b.n	800eb08 <HAL_RCCEx_PeriphCLKConfig+0x190>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 800eafe:	f7fc ff9b 	bl	800ba38 <HAL_GetTick>
 800eb02:	1b43      	subs	r3, r0, r5
 800eb04:	2b02      	cmp	r3, #2
 800eb06:	d8ef      	bhi.n	800eae8 <HAL_RCCEx_PeriphCLKConfig+0x170>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800eb08:	6833      	ldr	r3, [r6, #0]
 800eb0a:	011b      	lsls	r3, r3, #4
 800eb0c:	d4f7      	bmi.n	800eafe <HAL_RCCEx_PeriphCLKConfig+0x186>
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800eb0e:	6823      	ldr	r3, [r4, #0]
 800eb10:	07df      	lsls	r7, r3, #31
 800eb12:	d506      	bpl.n	800eb22 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SR);
 800eb14:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800eb18:	0712      	lsls	r2, r2, #28
 800eb1a:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800eb1e:	f8c6 2084 	str.w	r2, [r6, #132]	@ 0x84
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800eb22:	079d      	lsls	r5, r3, #30
 800eb24:	d515      	bpl.n	800eb52 <HAL_RCCEx_PeriphCLKConfig+0x1da>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800eb26:	4944      	ldr	r1, [pc, #272]	@ (800ec38 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 800eb28:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800eb2a:	f8d1 0084 	ldr.w	r0, [r1, #132]	@ 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 800eb2e:	6865      	ldr	r5, [r4, #4]
 800eb30:	0612      	lsls	r2, r2, #24
 800eb32:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 800eb36:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800eb3a:	4302      	orrs	r2, r0
 800eb3c:	f8c1 2084 	str.w	r2, [r1, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800eb40:	f8d1 008c 	ldr.w	r0, [r1, #140]	@ 0x8c
 800eb44:	6a22      	ldr	r2, [r4, #32]
 800eb46:	f020 001f 	bic.w	r0, r0, #31
 800eb4a:	3a01      	subs	r2, #1
 800eb4c:	4302      	orrs	r2, r0
 800eb4e:	f8c1 208c 	str.w	r2, [r1, #140]	@ 0x8c
    if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800eb52:	0658      	lsls	r0, r3, #25
 800eb54:	d509      	bpl.n	800eb6a <HAL_RCCEx_PeriphCLKConfig+0x1f2>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ,
 800eb56:	1d20      	adds	r0, r4, #4
 800eb58:	c80b      	ldmia	r0, {r0, r1, r3}
 800eb5a:	061b      	lsls	r3, r3, #24
 800eb5c:	4a36      	ldr	r2, [pc, #216]	@ (800ec38 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 800eb5e:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800eb62:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800eb66:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800eb6a:	4b35      	ldr	r3, [pc, #212]	@ (800ec40 <HAL_RCCEx_PeriphCLKConfig+0x2c8>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800eb6c:	4e32      	ldr	r6, [pc, #200]	@ (800ec38 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
    __HAL_RCC_PLLI2S_ENABLE();
 800eb6e:	2201      	movs	r2, #1
 800eb70:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 800eb72:	f7fc ff61 	bl	800ba38 <HAL_GetTick>
 800eb76:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800eb78:	e004      	b.n	800eb84 <HAL_RCCEx_PeriphCLKConfig+0x20c>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 800eb7a:	f7fc ff5d 	bl	800ba38 <HAL_GetTick>
 800eb7e:	1b40      	subs	r0, r0, r5
 800eb80:	2802      	cmp	r0, #2
 800eb82:	d8b1      	bhi.n	800eae8 <HAL_RCCEx_PeriphCLKConfig+0x170>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800eb84:	6833      	ldr	r3, [r6, #0]
 800eb86:	0119      	lsls	r1, r3, #4
 800eb88:	d5f7      	bpl.n	800eb7a <HAL_RCCEx_PeriphCLKConfig+0x202>
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800eb8a:	6823      	ldr	r3, [r4, #0]
 800eb8c:	e712      	b.n	800e9b4 <HAL_RCCEx_PeriphCLKConfig+0x3c>
    __HAL_RCC_PWR_CLK_ENABLE();
 800eb8e:	4b2a      	ldr	r3, [pc, #168]	@ (800ec38 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
    PWR->CR |= PWR_CR_DBP;
 800eb90:	4d2c      	ldr	r5, [pc, #176]	@ (800ec44 <HAL_RCCEx_PeriphCLKConfig+0x2cc>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800eb92:	2200      	movs	r2, #0
 800eb94:	9201      	str	r2, [sp, #4]
 800eb96:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800eb98:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800eb9c:	641a      	str	r2, [r3, #64]	@ 0x40
 800eb9e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800eba0:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800eba4:	9301      	str	r3, [sp, #4]
 800eba6:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800eba8:	682b      	ldr	r3, [r5, #0]
 800ebaa:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800ebae:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800ebb0:	f7fc ff42 	bl	800ba38 <HAL_GetTick>
 800ebb4:	4606      	mov	r6, r0
    while ((PWR->CR & PWR_CR_DBP) == RESET)
 800ebb6:	e004      	b.n	800ebc2 <HAL_RCCEx_PeriphCLKConfig+0x24a>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800ebb8:	f7fc ff3e 	bl	800ba38 <HAL_GetTick>
 800ebbc:	1b80      	subs	r0, r0, r6
 800ebbe:	2802      	cmp	r0, #2
 800ebc0:	d892      	bhi.n	800eae8 <HAL_RCCEx_PeriphCLKConfig+0x170>
    while ((PWR->CR & PWR_CR_DBP) == RESET)
 800ebc2:	682b      	ldr	r3, [r5, #0]
 800ebc4:	05d8      	lsls	r0, r3, #23
 800ebc6:	d5f7      	bpl.n	800ebb8 <HAL_RCCEx_PeriphCLKConfig+0x240>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800ebc8:	4d1b      	ldr	r5, [pc, #108]	@ (800ec38 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800ebca:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800ebcc:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800ebce:	f412 7240 	ands.w	r2, r2, #768	@ 0x300
 800ebd2:	f403 7140 	and.w	r1, r3, #768	@ 0x300
 800ebd6:	d013      	beq.n	800ec00 <HAL_RCCEx_PeriphCLKConfig+0x288>
 800ebd8:	428a      	cmp	r2, r1
 800ebda:	d011      	beq.n	800ec00 <HAL_RCCEx_PeriphCLKConfig+0x288>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800ebdc:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800ebde:	4a18      	ldr	r2, [pc, #96]	@ (800ec40 <HAL_RCCEx_PeriphCLKConfig+0x2c8>)
 800ebe0:	2101      	movs	r1, #1
 800ebe2:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800ebe6:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800ebea:	2100      	movs	r1, #0
 800ebec:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      RCC->BDCR = tmpreg1;
 800ebf0:	672b      	str	r3, [r5, #112]	@ 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800ebf2:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800ebf4:	07d9      	lsls	r1, r3, #31
 800ebf6:	f53f af69 	bmi.w	800eacc <HAL_RCCEx_PeriphCLKConfig+0x154>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800ebfa:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800ebfc:	f403 7140 	and.w	r1, r3, #768	@ 0x300
 800ec00:	f5b1 7f40 	cmp.w	r1, #768	@ 0x300
 800ec04:	d00c      	beq.n	800ec20 <HAL_RCCEx_PeriphCLKConfig+0x2a8>
 800ec06:	490c      	ldr	r1, [pc, #48]	@ (800ec38 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 800ec08:	688a      	ldr	r2, [r1, #8]
 800ec0a:	f422 12f8 	bic.w	r2, r2, #2031616	@ 0x1f0000
 800ec0e:	608a      	str	r2, [r1, #8]
 800ec10:	4a09      	ldr	r2, [pc, #36]	@ (800ec38 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 800ec12:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 800ec14:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800ec18:	430b      	orrs	r3, r1
 800ec1a:	6713      	str	r3, [r2, #112]	@ 0x70
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800ec1c:	6823      	ldr	r3, [r4, #0]
 800ec1e:	e6d5      	b.n	800e9cc <HAL_RCCEx_PeriphCLKConfig+0x54>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800ec20:	4805      	ldr	r0, [pc, #20]	@ (800ec38 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 800ec22:	6882      	ldr	r2, [r0, #8]
 800ec24:	f023 4170 	bic.w	r1, r3, #4026531840	@ 0xf0000000
 800ec28:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
 800ec2c:	f422 12f8 	bic.w	r2, r2, #2031616	@ 0x1f0000
 800ec30:	430a      	orrs	r2, r1
 800ec32:	6082      	str	r2, [r0, #8]
 800ec34:	e7ec      	b.n	800ec10 <HAL_RCCEx_PeriphCLKConfig+0x298>
 800ec36:	bf00      	nop
 800ec38:	40023800 	.word	0x40023800
 800ec3c:	42471000 	.word	0x42471000
 800ec40:	42470000 	.word	0x42470000
 800ec44:	40007000 	.word	0x40007000

0800ec48 <HAL_RCC_OscConfig>:
{
  uint32_t tickstart;
  uint32_t pll_config;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 800ec48:	2800      	cmp	r0, #0
 800ec4a:	f000 81e2 	beq.w	800f012 <HAL_RCC_OscConfig+0x3ca>
{
 800ec4e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800ec52:	6803      	ldr	r3, [r0, #0]
 800ec54:	07dd      	lsls	r5, r3, #31
{
 800ec56:	b082      	sub	sp, #8
 800ec58:	4604      	mov	r4, r0
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800ec5a:	d52f      	bpl.n	800ecbc <HAL_RCC_OscConfig+0x74>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
#else
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)
 800ec5c:	499d      	ldr	r1, [pc, #628]	@ (800eed4 <HAL_RCC_OscConfig+0x28c>)
 800ec5e:	688a      	ldr	r2, [r1, #8]
 800ec60:	f002 020c 	and.w	r2, r2, #12
 800ec64:	2a04      	cmp	r2, #4
 800ec66:	f000 80ec 	beq.w	800ee42 <HAL_RCC_OscConfig+0x1fa>
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800ec6a:	688a      	ldr	r2, [r1, #8]
 800ec6c:	f002 020c 	and.w	r2, r2, #12
        || \
 800ec70:	2a08      	cmp	r2, #8
 800ec72:	f000 80e2 	beq.w	800ee3a <HAL_RCC_OscConfig+0x1f2>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800ec76:	6863      	ldr	r3, [r4, #4]
 800ec78:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800ec7c:	f000 80eb 	beq.w	800ee56 <HAL_RCC_OscConfig+0x20e>
 800ec80:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 800ec84:	f000 817a 	beq.w	800ef7c <HAL_RCC_OscConfig+0x334>
 800ec88:	4d92      	ldr	r5, [pc, #584]	@ (800eed4 <HAL_RCC_OscConfig+0x28c>)
 800ec8a:	682a      	ldr	r2, [r5, #0]
 800ec8c:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 800ec90:	602a      	str	r2, [r5, #0]
 800ec92:	682a      	ldr	r2, [r5, #0]
 800ec94:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 800ec98:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800ec9a:	2b00      	cmp	r3, #0
 800ec9c:	f040 80e0 	bne.w	800ee60 <HAL_RCC_OscConfig+0x218>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800eca0:	f7fc feca 	bl	800ba38 <HAL_GetTick>
 800eca4:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800eca6:	e005      	b.n	800ecb4 <HAL_RCC_OscConfig+0x6c>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800eca8:	f7fc fec6 	bl	800ba38 <HAL_GetTick>
 800ecac:	1b80      	subs	r0, r0, r6
 800ecae:	2864      	cmp	r0, #100	@ 0x64
 800ecb0:	f200 8100 	bhi.w	800eeb4 <HAL_RCC_OscConfig+0x26c>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800ecb4:	682b      	ldr	r3, [r5, #0]
 800ecb6:	039f      	lsls	r7, r3, #14
 800ecb8:	d4f6      	bmi.n	800eca8 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800ecba:	6823      	ldr	r3, [r4, #0]
 800ecbc:	079d      	lsls	r5, r3, #30
 800ecbe:	d528      	bpl.n	800ed12 <HAL_RCC_OscConfig+0xca>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
#else
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)
 800ecc0:	4a84      	ldr	r2, [pc, #528]	@ (800eed4 <HAL_RCC_OscConfig+0x28c>)
 800ecc2:	6891      	ldr	r1, [r2, #8]
 800ecc4:	f011 0f0c 	tst.w	r1, #12
 800ecc8:	f000 809b 	beq.w	800ee02 <HAL_RCC_OscConfig+0x1ba>
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800eccc:	6891      	ldr	r1, [r2, #8]
 800ecce:	f001 010c 	and.w	r1, r1, #12
        || \
 800ecd2:	2908      	cmp	r1, #8
 800ecd4:	f000 8091 	beq.w	800edfa <HAL_RCC_OscConfig+0x1b2>
      }
    }
    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 800ecd8:	68e3      	ldr	r3, [r4, #12]
 800ecda:	2b00      	cmp	r3, #0
 800ecdc:	f000 810c 	beq.w	800eef8 <HAL_RCC_OscConfig+0x2b0>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800ece0:	4b7d      	ldr	r3, [pc, #500]	@ (800eed8 <HAL_RCC_OscConfig+0x290>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800ece2:	4e7c      	ldr	r6, [pc, #496]	@ (800eed4 <HAL_RCC_OscConfig+0x28c>)
        __HAL_RCC_HSI_ENABLE();
 800ece4:	2201      	movs	r2, #1
 800ece6:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800ece8:	f7fc fea6 	bl	800ba38 <HAL_GetTick>
 800ecec:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800ecee:	e005      	b.n	800ecfc <HAL_RCC_OscConfig+0xb4>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 800ecf0:	f7fc fea2 	bl	800ba38 <HAL_GetTick>
 800ecf4:	1b40      	subs	r0, r0, r5
 800ecf6:	2802      	cmp	r0, #2
 800ecf8:	f200 80dc 	bhi.w	800eeb4 <HAL_RCC_OscConfig+0x26c>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800ecfc:	6833      	ldr	r3, [r6, #0]
 800ecfe:	079f      	lsls	r7, r3, #30
 800ed00:	d5f6      	bpl.n	800ecf0 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800ed02:	6833      	ldr	r3, [r6, #0]
 800ed04:	6922      	ldr	r2, [r4, #16]
 800ed06:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 800ed0a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800ed0e:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800ed10:	6823      	ldr	r3, [r4, #0]
 800ed12:	071a      	lsls	r2, r3, #28
 800ed14:	d45c      	bmi.n	800edd0 <HAL_RCC_OscConfig+0x188>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800ed16:	075d      	lsls	r5, r3, #29
 800ed18:	d53a      	bpl.n	800ed90 <HAL_RCC_OscConfig+0x148>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 800ed1a:	4a6e      	ldr	r2, [pc, #440]	@ (800eed4 <HAL_RCC_OscConfig+0x28c>)
 800ed1c:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 800ed1e:	f013 5380 	ands.w	r3, r3, #268435456	@ 0x10000000
 800ed22:	f040 8088 	bne.w	800ee36 <HAL_RCC_OscConfig+0x1ee>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 800ed26:	9301      	str	r3, [sp, #4]
 800ed28:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 800ed2a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800ed2e:	6413      	str	r3, [r2, #64]	@ 0x40
 800ed30:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 800ed32:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800ed36:	9301      	str	r3, [sp, #4]
 800ed38:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800ed3a:	2501      	movs	r5, #1
    }

    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800ed3c:	4e67      	ldr	r6, [pc, #412]	@ (800eedc <HAL_RCC_OscConfig+0x294>)
 800ed3e:	6833      	ldr	r3, [r6, #0]
 800ed40:	05d8      	lsls	r0, r3, #23
 800ed42:	f140 80a7 	bpl.w	800ee94 <HAL_RCC_OscConfig+0x24c>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800ed46:	68a3      	ldr	r3, [r4, #8]
 800ed48:	2b01      	cmp	r3, #1
 800ed4a:	f000 80b7 	beq.w	800eebc <HAL_RCC_OscConfig+0x274>
 800ed4e:	2b05      	cmp	r3, #5
 800ed50:	f000 8124 	beq.w	800ef9c <HAL_RCC_OscConfig+0x354>
 800ed54:	4e5f      	ldr	r6, [pc, #380]	@ (800eed4 <HAL_RCC_OscConfig+0x28c>)
 800ed56:	6f32      	ldr	r2, [r6, #112]	@ 0x70
 800ed58:	f022 0201 	bic.w	r2, r2, #1
 800ed5c:	6732      	str	r2, [r6, #112]	@ 0x70
 800ed5e:	6f32      	ldr	r2, [r6, #112]	@ 0x70
 800ed60:	f022 0204 	bic.w	r2, r2, #4
 800ed64:	6732      	str	r2, [r6, #112]	@ 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800ed66:	2b00      	cmp	r3, #0
 800ed68:	f040 80ad 	bne.w	800eec6 <HAL_RCC_OscConfig+0x27e>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800ed6c:	f7fc fe64 	bl	800ba38 <HAL_GetTick>

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800ed70:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 800ed74:	4607      	mov	r7, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800ed76:	e005      	b.n	800ed84 <HAL_RCC_OscConfig+0x13c>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800ed78:	f7fc fe5e 	bl	800ba38 <HAL_GetTick>
 800ed7c:	1bc0      	subs	r0, r0, r7
 800ed7e:	4540      	cmp	r0, r8
 800ed80:	f200 8098 	bhi.w	800eeb4 <HAL_RCC_OscConfig+0x26c>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800ed84:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 800ed86:	079b      	lsls	r3, r3, #30
 800ed88:	d4f6      	bmi.n	800ed78 <HAL_RCC_OscConfig+0x130>
        }
      }
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 800ed8a:	2d00      	cmp	r5, #0
 800ed8c:	f040 8100 	bne.w	800ef90 <HAL_RCC_OscConfig+0x348>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800ed90:	69a3      	ldr	r3, [r4, #24]
 800ed92:	b1cb      	cbz	r3, 800edc8 <HAL_RCC_OscConfig+0x180>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800ed94:	4d4f      	ldr	r5, [pc, #316]	@ (800eed4 <HAL_RCC_OscConfig+0x28c>)
 800ed96:	68aa      	ldr	r2, [r5, #8]
 800ed98:	f002 020c 	and.w	r2, r2, #12
 800ed9c:	2a08      	cmp	r2, #8
 800ed9e:	f000 80bc 	beq.w	800ef1a <HAL_RCC_OscConfig+0x2d2>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800eda2:	2b02      	cmp	r3, #2
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800eda4:	4b4c      	ldr	r3, [pc, #304]	@ (800eed8 <HAL_RCC_OscConfig+0x290>)
 800eda6:	f04f 0200 	mov.w	r2, #0
 800edaa:	661a      	str	r2, [r3, #96]	@ 0x60
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800edac:	f000 8100 	beq.w	800efb0 <HAL_RCC_OscConfig+0x368>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800edb0:	f7fc fe42 	bl	800ba38 <HAL_GetTick>
 800edb4:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800edb6:	e004      	b.n	800edc2 <HAL_RCC_OscConfig+0x17a>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800edb8:	f7fc fe3e 	bl	800ba38 <HAL_GetTick>
 800edbc:	1b00      	subs	r0, r0, r4
 800edbe:	2802      	cmp	r0, #2
 800edc0:	d878      	bhi.n	800eeb4 <HAL_RCC_OscConfig+0x26c>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800edc2:	682b      	ldr	r3, [r5, #0]
 800edc4:	019b      	lsls	r3, r3, #6
 800edc6:	d4f7      	bmi.n	800edb8 <HAL_RCC_OscConfig+0x170>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800edc8:	2000      	movs	r0, #0
}
 800edca:	b002      	add	sp, #8
 800edcc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 800edd0:	6963      	ldr	r3, [r4, #20]
 800edd2:	b1fb      	cbz	r3, 800ee14 <HAL_RCC_OscConfig+0x1cc>
      __HAL_RCC_LSI_ENABLE();
 800edd4:	4b40      	ldr	r3, [pc, #256]	@ (800eed8 <HAL_RCC_OscConfig+0x290>)
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800edd6:	4e3f      	ldr	r6, [pc, #252]	@ (800eed4 <HAL_RCC_OscConfig+0x28c>)
      __HAL_RCC_LSI_ENABLE();
 800edd8:	2201      	movs	r2, #1
 800edda:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 800edde:	f7fc fe2b 	bl	800ba38 <HAL_GetTick>
 800ede2:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800ede4:	e004      	b.n	800edf0 <HAL_RCC_OscConfig+0x1a8>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 800ede6:	f7fc fe27 	bl	800ba38 <HAL_GetTick>
 800edea:	1b40      	subs	r0, r0, r5
 800edec:	2802      	cmp	r0, #2
 800edee:	d861      	bhi.n	800eeb4 <HAL_RCC_OscConfig+0x26c>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800edf0:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 800edf2:	079b      	lsls	r3, r3, #30
 800edf4:	d5f7      	bpl.n	800ede6 <HAL_RCC_OscConfig+0x19e>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800edf6:	6823      	ldr	r3, [r4, #0]
 800edf8:	e78d      	b.n	800ed16 <HAL_RCC_OscConfig+0xce>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800edfa:	6852      	ldr	r2, [r2, #4]
 800edfc:	0251      	lsls	r1, r2, #9
 800edfe:	f53f af6b 	bmi.w	800ecd8 <HAL_RCC_OscConfig+0x90>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800ee02:	4a34      	ldr	r2, [pc, #208]	@ (800eed4 <HAL_RCC_OscConfig+0x28c>)
 800ee04:	6812      	ldr	r2, [r2, #0]
 800ee06:	0792      	lsls	r2, r2, #30
 800ee08:	d538      	bpl.n	800ee7c <HAL_RCC_OscConfig+0x234>
 800ee0a:	68e2      	ldr	r2, [r4, #12]
 800ee0c:	2a01      	cmp	r2, #1
 800ee0e:	d035      	beq.n	800ee7c <HAL_RCC_OscConfig+0x234>
    return HAL_ERROR;
 800ee10:	2001      	movs	r0, #1
 800ee12:	e7da      	b.n	800edca <HAL_RCC_OscConfig+0x182>
      __HAL_RCC_LSI_DISABLE();
 800ee14:	4a30      	ldr	r2, [pc, #192]	@ (800eed8 <HAL_RCC_OscConfig+0x290>)
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800ee16:	4e2f      	ldr	r6, [pc, #188]	@ (800eed4 <HAL_RCC_OscConfig+0x28c>)
      __HAL_RCC_LSI_DISABLE();
 800ee18:	f8c2 3e80 	str.w	r3, [r2, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 800ee1c:	f7fc fe0c 	bl	800ba38 <HAL_GetTick>
 800ee20:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800ee22:	e004      	b.n	800ee2e <HAL_RCC_OscConfig+0x1e6>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 800ee24:	f7fc fe08 	bl	800ba38 <HAL_GetTick>
 800ee28:	1b40      	subs	r0, r0, r5
 800ee2a:	2802      	cmp	r0, #2
 800ee2c:	d842      	bhi.n	800eeb4 <HAL_RCC_OscConfig+0x26c>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800ee2e:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 800ee30:	079f      	lsls	r7, r3, #30
 800ee32:	d4f7      	bmi.n	800ee24 <HAL_RCC_OscConfig+0x1dc>
 800ee34:	e7df      	b.n	800edf6 <HAL_RCC_OscConfig+0x1ae>
    FlagStatus       pwrclkchanged = RESET;
 800ee36:	2500      	movs	r5, #0
 800ee38:	e780      	b.n	800ed3c <HAL_RCC_OscConfig+0xf4>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800ee3a:	684a      	ldr	r2, [r1, #4]
 800ee3c:	0251      	lsls	r1, r2, #9
 800ee3e:	f57f af1a 	bpl.w	800ec76 <HAL_RCC_OscConfig+0x2e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800ee42:	4a24      	ldr	r2, [pc, #144]	@ (800eed4 <HAL_RCC_OscConfig+0x28c>)
 800ee44:	6812      	ldr	r2, [r2, #0]
 800ee46:	0392      	lsls	r2, r2, #14
 800ee48:	f57f af38 	bpl.w	800ecbc <HAL_RCC_OscConfig+0x74>
 800ee4c:	6862      	ldr	r2, [r4, #4]
 800ee4e:	2a00      	cmp	r2, #0
 800ee50:	f47f af34 	bne.w	800ecbc <HAL_RCC_OscConfig+0x74>
 800ee54:	e7dc      	b.n	800ee10 <HAL_RCC_OscConfig+0x1c8>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800ee56:	4a1f      	ldr	r2, [pc, #124]	@ (800eed4 <HAL_RCC_OscConfig+0x28c>)
 800ee58:	6813      	ldr	r3, [r2, #0]
 800ee5a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800ee5e:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800ee60:	f7fc fdea 	bl	800ba38 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800ee64:	4e1b      	ldr	r6, [pc, #108]	@ (800eed4 <HAL_RCC_OscConfig+0x28c>)
        tickstart = HAL_GetTick();
 800ee66:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800ee68:	e004      	b.n	800ee74 <HAL_RCC_OscConfig+0x22c>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800ee6a:	f7fc fde5 	bl	800ba38 <HAL_GetTick>
 800ee6e:	1b40      	subs	r0, r0, r5
 800ee70:	2864      	cmp	r0, #100	@ 0x64
 800ee72:	d81f      	bhi.n	800eeb4 <HAL_RCC_OscConfig+0x26c>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800ee74:	6833      	ldr	r3, [r6, #0]
 800ee76:	039b      	lsls	r3, r3, #14
 800ee78:	d5f7      	bpl.n	800ee6a <HAL_RCC_OscConfig+0x222>
 800ee7a:	e71e      	b.n	800ecba <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800ee7c:	4915      	ldr	r1, [pc, #84]	@ (800eed4 <HAL_RCC_OscConfig+0x28c>)
 800ee7e:	6920      	ldr	r0, [r4, #16]
 800ee80:	680a      	ldr	r2, [r1, #0]
 800ee82:	f022 02f8 	bic.w	r2, r2, #248	@ 0xf8
 800ee86:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800ee8a:	600a      	str	r2, [r1, #0]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800ee8c:	071a      	lsls	r2, r3, #28
 800ee8e:	f57f af42 	bpl.w	800ed16 <HAL_RCC_OscConfig+0xce>
 800ee92:	e79d      	b.n	800edd0 <HAL_RCC_OscConfig+0x188>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800ee94:	6833      	ldr	r3, [r6, #0]
 800ee96:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800ee9a:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800ee9c:	f7fc fdcc 	bl	800ba38 <HAL_GetTick>
 800eea0:	4607      	mov	r7, r0
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800eea2:	6833      	ldr	r3, [r6, #0]
 800eea4:	05d9      	lsls	r1, r3, #23
 800eea6:	f53f af4e 	bmi.w	800ed46 <HAL_RCC_OscConfig+0xfe>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800eeaa:	f7fc fdc5 	bl	800ba38 <HAL_GetTick>
 800eeae:	1bc0      	subs	r0, r0, r7
 800eeb0:	2802      	cmp	r0, #2
 800eeb2:	d9f6      	bls.n	800eea2 <HAL_RCC_OscConfig+0x25a>
            return HAL_TIMEOUT;
 800eeb4:	2003      	movs	r0, #3
}
 800eeb6:	b002      	add	sp, #8
 800eeb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800eebc:	4a05      	ldr	r2, [pc, #20]	@ (800eed4 <HAL_RCC_OscConfig+0x28c>)
 800eebe:	6f13      	ldr	r3, [r2, #112]	@ 0x70
 800eec0:	f043 0301 	orr.w	r3, r3, #1
 800eec4:	6713      	str	r3, [r2, #112]	@ 0x70
      tickstart = HAL_GetTick();
 800eec6:	f7fc fdb7 	bl	800ba38 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800eeca:	4f02      	ldr	r7, [pc, #8]	@ (800eed4 <HAL_RCC_OscConfig+0x28c>)
      tickstart = HAL_GetTick();
 800eecc:	4606      	mov	r6, r0
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800eece:	f241 3888 	movw	r8, #5000	@ 0x1388
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800eed2:	e00a      	b.n	800eeea <HAL_RCC_OscConfig+0x2a2>
 800eed4:	40023800 	.word	0x40023800
 800eed8:	42470000 	.word	0x42470000
 800eedc:	40007000 	.word	0x40007000
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800eee0:	f7fc fdaa 	bl	800ba38 <HAL_GetTick>
 800eee4:	1b80      	subs	r0, r0, r6
 800eee6:	4540      	cmp	r0, r8
 800eee8:	d8e4      	bhi.n	800eeb4 <HAL_RCC_OscConfig+0x26c>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800eeea:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800eeec:	079a      	lsls	r2, r3, #30
 800eeee:	d5f7      	bpl.n	800eee0 <HAL_RCC_OscConfig+0x298>
    if (pwrclkchanged == SET)
 800eef0:	2d00      	cmp	r5, #0
 800eef2:	f43f af4d 	beq.w	800ed90 <HAL_RCC_OscConfig+0x148>
 800eef6:	e04b      	b.n	800ef90 <HAL_RCC_OscConfig+0x348>
        __HAL_RCC_HSI_DISABLE();
 800eef8:	4a47      	ldr	r2, [pc, #284]	@ (800f018 <HAL_RCC_OscConfig+0x3d0>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800eefa:	4e48      	ldr	r6, [pc, #288]	@ (800f01c <HAL_RCC_OscConfig+0x3d4>)
        __HAL_RCC_HSI_DISABLE();
 800eefc:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800eefe:	f7fc fd9b 	bl	800ba38 <HAL_GetTick>
 800ef02:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800ef04:	e004      	b.n	800ef10 <HAL_RCC_OscConfig+0x2c8>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 800ef06:	f7fc fd97 	bl	800ba38 <HAL_GetTick>
 800ef0a:	1b40      	subs	r0, r0, r5
 800ef0c:	2802      	cmp	r0, #2
 800ef0e:	d8d1      	bhi.n	800eeb4 <HAL_RCC_OscConfig+0x26c>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800ef10:	6833      	ldr	r3, [r6, #0]
 800ef12:	0799      	lsls	r1, r3, #30
 800ef14:	d4f7      	bmi.n	800ef06 <HAL_RCC_OscConfig+0x2be>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800ef16:	6823      	ldr	r3, [r4, #0]
 800ef18:	e6fb      	b.n	800ed12 <HAL_RCC_OscConfig+0xca>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800ef1a:	2b01      	cmp	r3, #1
 800ef1c:	f43f af78 	beq.w	800ee10 <HAL_RCC_OscConfig+0x1c8>
        pll_config = RCC->PLLCFGR;
 800ef20:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800ef22:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800ef24:	f403 0180 	and.w	r1, r3, #4194304	@ 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800ef28:	4291      	cmp	r1, r2
 800ef2a:	f47f af71 	bne.w	800ee10 <HAL_RCC_OscConfig+0x1c8>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800ef2e:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800ef30:	f003 013f 	and.w	r1, r3, #63	@ 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800ef34:	4291      	cmp	r1, r2
 800ef36:	f47f af6b 	bne.w	800ee10 <HAL_RCC_OscConfig+0x1c8>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800ef3a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800ef3c:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
 800ef40:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800ef42:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800ef46:	f47f af63 	bne.w	800ee10 <HAL_RCC_OscConfig+0x1c8>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800ef4a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800ef4c:	0852      	lsrs	r2, r2, #1
 800ef4e:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 800ef52:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800ef54:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800ef58:	f47f af5a 	bne.w	800ee10 <HAL_RCC_OscConfig+0x1c8>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 800ef5c:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800ef5e:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800ef62:	ebb2 6f01 	cmp.w	r2, r1, lsl #24
 800ef66:	f47f af53 	bne.w	800ee10 <HAL_RCC_OscConfig+0x1c8>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 800ef6a:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800ef6c:	f003 43e0 	and.w	r3, r3, #1879048192	@ 0x70000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 800ef70:	ebb3 7f02 	cmp.w	r3, r2, lsl #28
 800ef74:	bf14      	ite	ne
 800ef76:	2001      	movne	r0, #1
 800ef78:	2000      	moveq	r0, #0
 800ef7a:	e726      	b.n	800edca <HAL_RCC_OscConfig+0x182>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800ef7c:	4b27      	ldr	r3, [pc, #156]	@ (800f01c <HAL_RCC_OscConfig+0x3d4>)
 800ef7e:	681a      	ldr	r2, [r3, #0]
 800ef80:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 800ef84:	601a      	str	r2, [r3, #0]
 800ef86:	681a      	ldr	r2, [r3, #0]
 800ef88:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 800ef8c:	601a      	str	r2, [r3, #0]
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800ef8e:	e767      	b.n	800ee60 <HAL_RCC_OscConfig+0x218>
      __HAL_RCC_PWR_CLK_DISABLE();
 800ef90:	4a22      	ldr	r2, [pc, #136]	@ (800f01c <HAL_RCC_OscConfig+0x3d4>)
 800ef92:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 800ef94:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800ef98:	6413      	str	r3, [r2, #64]	@ 0x40
 800ef9a:	e6f9      	b.n	800ed90 <HAL_RCC_OscConfig+0x148>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800ef9c:	4b1f      	ldr	r3, [pc, #124]	@ (800f01c <HAL_RCC_OscConfig+0x3d4>)
 800ef9e:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
 800efa0:	f042 0204 	orr.w	r2, r2, #4
 800efa4:	671a      	str	r2, [r3, #112]	@ 0x70
 800efa6:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
 800efa8:	f042 0201 	orr.w	r2, r2, #1
 800efac:	671a      	str	r2, [r3, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800efae:	e78a      	b.n	800eec6 <HAL_RCC_OscConfig+0x27e>
        tickstart = HAL_GetTick();
 800efb0:	f7fc fd42 	bl	800ba38 <HAL_GetTick>
 800efb4:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800efb6:	e005      	b.n	800efc4 <HAL_RCC_OscConfig+0x37c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800efb8:	f7fc fd3e 	bl	800ba38 <HAL_GetTick>
 800efbc:	1b80      	subs	r0, r0, r6
 800efbe:	2802      	cmp	r0, #2
 800efc0:	f63f af78 	bhi.w	800eeb4 <HAL_RCC_OscConfig+0x26c>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800efc4:	682b      	ldr	r3, [r5, #0]
 800efc6:	0199      	lsls	r1, r3, #6
 800efc8:	d4f6      	bmi.n	800efb8 <HAL_RCC_OscConfig+0x370>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800efca:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800efce:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800efd0:	430b      	orrs	r3, r1
 800efd2:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800efd6:	e9d4 200a 	ldrd	r2, r0, [r4, #40]	@ 0x28
 800efda:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800efdc:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 800efe0:	0852      	lsrs	r2, r2, #1
 800efe2:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800efe6:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800efe8:	490b      	ldr	r1, [pc, #44]	@ (800f018 <HAL_RCC_OscConfig+0x3d0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800efea:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800efee:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800eff0:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800eff2:	660a      	str	r2, [r1, #96]	@ 0x60
        tickstart = HAL_GetTick();
 800eff4:	f7fc fd20 	bl	800ba38 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800eff8:	4d08      	ldr	r5, [pc, #32]	@ (800f01c <HAL_RCC_OscConfig+0x3d4>)
        tickstart = HAL_GetTick();
 800effa:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800effc:	e005      	b.n	800f00a <HAL_RCC_OscConfig+0x3c2>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800effe:	f7fc fd1b 	bl	800ba38 <HAL_GetTick>
 800f002:	1b00      	subs	r0, r0, r4
 800f004:	2802      	cmp	r0, #2
 800f006:	f63f af55 	bhi.w	800eeb4 <HAL_RCC_OscConfig+0x26c>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800f00a:	682b      	ldr	r3, [r5, #0]
 800f00c:	019a      	lsls	r2, r3, #6
 800f00e:	d5f6      	bpl.n	800effe <HAL_RCC_OscConfig+0x3b6>
 800f010:	e6da      	b.n	800edc8 <HAL_RCC_OscConfig+0x180>
    return HAL_ERROR;
 800f012:	2001      	movs	r0, #1
}
 800f014:	4770      	bx	lr
 800f016:	bf00      	nop
 800f018:	42470000 	.word	0x42470000
 800f01c:	40023800 	.word	0x40023800

0800f020 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800f020:	b1f0      	cbz	r0, 800f060 <HAL_SDRAM_Init+0x40>
{
 800f022:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800f024:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800f028:	460d      	mov	r5, r1
 800f02a:	4604      	mov	r4, r0
 800f02c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800f030:	b18b      	cbz	r3, 800f056 <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800f032:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800f034:	2302      	movs	r3, #2
 800f036:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800f03a:	f851 0b04 	ldr.w	r0, [r1], #4
 800f03e:	f000 fdad 	bl	800fb9c <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800f042:	e9d4 0200 	ldrd	r0, r2, [r4]
 800f046:	4629      	mov	r1, r5
 800f048:	f000 fde0 	bl	800fc0c <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800f04c:	2301      	movs	r3, #1
 800f04e:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  return HAL_OK;
 800f052:	2000      	movs	r0, #0
}
 800f054:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800f056:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800f05a:	f7f5 f8c9 	bl	80041f0 <HAL_SDRAM_MspInit>
 800f05e:	e7e8      	b.n	800f032 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800f060:	2001      	movs	r0, #1
}
 800f062:	4770      	bx	lr

0800f064 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 800f064:	b510      	push	{r4, lr}
 800f066:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 800f068:	f7f5 f938 	bl	80042dc <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 800f06c:	e9d4 0100 	ldrd	r0, r1, [r4]
 800f070:	f000 fe0a 	bl	800fc88 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 800f074:	2000      	movs	r0, #0
 800f076:	f884 002c 	strb.w	r0, [r4, #44]	@ 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 800f07a:	f884 002d 	strb.w	r0, [r4, #45]	@ 0x2d

  return HAL_OK;
}
 800f07e:	bd10      	pop	{r4, pc}

0800f080 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800f080:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800f082:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800f086:	2b02      	cmp	r3, #2
{
 800f088:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800f08a:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800f08c:	d004      	beq.n	800f098 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800f08e:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 800f092:	2c01      	cmp	r4, #1
 800f094:	d001      	beq.n	800f09a <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800f096:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800f098:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800f09a:	460e      	mov	r6, r1
 800f09c:	2302      	movs	r3, #2
 800f09e:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800f0a2:	6828      	ldr	r0, [r5, #0]
 800f0a4:	f000 fe02 	bl	800fcac <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800f0a8:	6833      	ldr	r3, [r6, #0]
 800f0aa:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800f0ac:	bf06      	itte	eq
 800f0ae:	2305      	moveq	r3, #5
 800f0b0:	f885 302c 	strbeq.w	r3, [r5, #44]	@ 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800f0b4:	f885 402c 	strbne.w	r4, [r5, #44]	@ 0x2c
  return HAL_OK;
 800f0b8:	2000      	movs	r0, #0
}
 800f0ba:	bd70      	pop	{r4, r5, r6, pc}

0800f0bc <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800f0bc:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800f0be:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800f0c2:	2b02      	cmp	r3, #2
{
 800f0c4:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800f0c6:	b2d8      	uxtb	r0, r3
 800f0c8:	d005      	beq.n	800f0d6 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800f0ca:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 800f0ce:	2b01      	cmp	r3, #1
 800f0d0:	b2dd      	uxtb	r5, r3
 800f0d2:	d001      	beq.n	800f0d8 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800f0d4:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800f0d6:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800f0d8:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800f0da:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800f0dc:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800f0e0:	f000 fe10 	bl	800fd04 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800f0e4:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
  return HAL_OK;
 800f0e8:	2000      	movs	r0, #0
}
 800f0ea:	bd38      	pop	{r3, r4, r5, pc}

0800f0ec <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800f0ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f0f0:	b082      	sub	sp, #8
 800f0f2:	461c      	mov	r4, r3
 800f0f4:	460e      	mov	r6, r1
 800f0f6:	4615      	mov	r5, r2
 800f0f8:	4680      	mov	r8, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800f0fa:	f7fc fc9d 	bl	800ba38 <HAL_GetTick>
 800f0fe:	3464      	adds	r4, #100	@ 0x64
 800f100:	1a24      	subs	r4, r4, r0
  tmp_tickstart = HAL_GetTick();
 800f102:	f7fc fc99 	bl	800ba38 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800f106:	4b2d      	ldr	r3, [pc, #180]	@ (800f1bc <SPI_WaitFlagStateUntilTimeout.constprop.0+0xd0>)
 800f108:	681b      	ldr	r3, [r3, #0]
 800f10a:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800f10e:	fb04 f303 	mul.w	r3, r4, r3
 800f112:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800f114:	f8d8 3000 	ldr.w	r3, [r8]
 800f118:	689b      	ldr	r3, [r3, #8]
 800f11a:	ea36 0303 	bics.w	r3, r6, r3
 800f11e:	bf0c      	ite	eq
 800f120:	2301      	moveq	r3, #1
 800f122:	2300      	movne	r3, #0
 800f124:	42ab      	cmp	r3, r5
 800f126:	d037      	beq.n	800f198 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xac>
 800f128:	4607      	mov	r7, r0
 800f12a:	e010      	b.n	800f14e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x62>
        __HAL_UNLOCK(hspi);

        return HAL_TIMEOUT;
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 800f12c:	9901      	ldr	r1, [sp, #4]
      {
        tmp_timeout = 0U;
      }
      count--;
 800f12e:	9b01      	ldr	r3, [sp, #4]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800f130:	f8d8 2000 	ldr.w	r2, [r8]
      count--;
 800f134:	3b01      	subs	r3, #1
 800f136:	9301      	str	r3, [sp, #4]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800f138:	6893      	ldr	r3, [r2, #8]
        tmp_timeout = 0U;
 800f13a:	2900      	cmp	r1, #0
 800f13c:	bf08      	it	eq
 800f13e:	2400      	moveq	r4, #0
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800f140:	ea36 0303 	bics.w	r3, r6, r3
 800f144:	bf0c      	ite	eq
 800f146:	2301      	moveq	r3, #1
 800f148:	2300      	movne	r3, #0
 800f14a:	42ab      	cmp	r3, r5
 800f14c:	d024      	beq.n	800f198 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xac>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800f14e:	f7fc fc73 	bl	800ba38 <HAL_GetTick>
 800f152:	1bc0      	subs	r0, r0, r7
 800f154:	42a0      	cmp	r0, r4
 800f156:	d3e9      	bcc.n	800f12c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800f158:	e9d8 3100 	ldrd	r3, r1, [r8]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800f15c:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800f15e:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800f162:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 800f166:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800f168:	d01a      	beq.n	800f1a0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb4>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800f16a:	f8d8 2028 	ldr.w	r2, [r8, #40]	@ 0x28
 800f16e:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 800f172:	d107      	bne.n	800f184 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x98>
          SPI_RESET_CRC(hspi);
 800f174:	681a      	ldr	r2, [r3, #0]
 800f176:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800f17a:	601a      	str	r2, [r3, #0]
 800f17c:	681a      	ldr	r2, [r3, #0]
 800f17e:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800f182:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800f184:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800f186:	2300      	movs	r3, #0
 800f188:	2003      	movs	r0, #3
        hspi->State = HAL_SPI_STATE_READY;
 800f18a:	f888 2051 	strb.w	r2, [r8, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 800f18e:	f888 3050 	strb.w	r3, [r8, #80]	@ 0x50
    }
  }

  return HAL_OK;
}
 800f192:	b002      	add	sp, #8
 800f194:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  return HAL_OK;
 800f198:	2000      	movs	r0, #0
}
 800f19a:	b002      	add	sp, #8
 800f19c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800f1a0:	f8d8 2008 	ldr.w	r2, [r8, #8]
 800f1a4:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 800f1a8:	d002      	beq.n	800f1b0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xc4>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800f1aa:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 800f1ae:	d1dc      	bne.n	800f16a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x7e>
          __HAL_SPI_DISABLE(hspi);
 800f1b0:	681a      	ldr	r2, [r3, #0]
 800f1b2:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800f1b6:	601a      	str	r2, [r3, #0]
 800f1b8:	e7d7      	b.n	800f16a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x7e>
 800f1ba:	bf00      	nop
 800f1bc:	20000038 	.word	0x20000038

0800f1c0 <SPI_EndRxTxTransaction.constprop.0>:
  * @param  hspi SPI handle
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
 800f1c0:	b5f0      	push	{r4, r5, r6, r7, lr}
{
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 800f1c2:	460b      	mov	r3, r1
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
 800f1c4:	b083      	sub	sp, #12
 800f1c6:	460f      	mov	r7, r1
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 800f1c8:	2201      	movs	r2, #1
 800f1ca:	2102      	movs	r1, #2
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
 800f1cc:	4604      	mov	r4, r0
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 800f1ce:	f7ff ff8d 	bl	800f0ec <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800f1d2:	bb28      	cbnz	r0, 800f220 <SPI_EndRxTxTransaction.constprop.0+0x60>
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
    return HAL_TIMEOUT;
  }

  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800f1d4:	4a16      	ldr	r2, [pc, #88]	@ (800f230 <SPI_EndRxTxTransaction.constprop.0+0x70>)
 800f1d6:	4b17      	ldr	r3, [pc, #92]	@ (800f234 <SPI_EndRxTxTransaction.constprop.0+0x74>)
 800f1d8:	6815      	ldr	r5, [r2, #0]
 800f1da:	fba3 3505 	umull	r3, r5, r3, r5
 800f1de:	0d6d      	lsrs	r5, r5, #21
 800f1e0:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800f1e4:	fb03 f505 	mul.w	r5, r3, r5
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800f1e8:	6863      	ldr	r3, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800f1ea:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800f1ec:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800f1f0:	4606      	mov	r6, r0
 800f1f2:	d107      	bne.n	800f204 <SPI_EndRxTxTransaction.constprop.0+0x44>
 800f1f4:	e00c      	b.n	800f210 <SPI_EndRxTxTransaction.constprop.0+0x50>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800f1f6:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800f1f8:	6821      	ldr	r1, [r4, #0]
      count--;
 800f1fa:	3b01      	subs	r3, #1
 800f1fc:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800f1fe:	688b      	ldr	r3, [r1, #8]
 800f200:	061b      	lsls	r3, r3, #24
 800f202:	d502      	bpl.n	800f20a <SPI_EndRxTxTransaction.constprop.0+0x4a>
      if (count == 0U)
 800f204:	9b01      	ldr	r3, [sp, #4]
 800f206:	2b00      	cmp	r3, #0
 800f208:	d1f5      	bne.n	800f1f6 <SPI_EndRxTxTransaction.constprop.0+0x36>
  }

  return HAL_OK;
}
 800f20a:	4630      	mov	r0, r6
 800f20c:	b003      	add	sp, #12
 800f20e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800f210:	4602      	mov	r2, r0
 800f212:	463b      	mov	r3, r7
 800f214:	2180      	movs	r1, #128	@ 0x80
 800f216:	4620      	mov	r0, r4
 800f218:	f7ff ff68 	bl	800f0ec <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800f21c:	2800      	cmp	r0, #0
 800f21e:	d0f4      	beq.n	800f20a <SPI_EndRxTxTransaction.constprop.0+0x4a>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800f220:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    return HAL_TIMEOUT;
 800f222:	2603      	movs	r6, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800f224:	f043 0320 	orr.w	r3, r3, #32
}
 800f228:	4630      	mov	r0, r6
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800f22a:	6563      	str	r3, [r4, #84]	@ 0x54
}
 800f22c:	b003      	add	sp, #12
 800f22e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f230:	20000038 	.word	0x20000038
 800f234:	165e9f81 	.word	0x165e9f81

0800f238 <HAL_SPI_Init>:
  if (hspi == NULL)
 800f238:	2800      	cmp	r0, #0
 800f23a:	d05c      	beq.n	800f2f6 <HAL_SPI_Init+0xbe>
{
 800f23c:	b570      	push	{r4, r5, r6, lr}
 800f23e:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800f240:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 800f242:	2800      	cmp	r0, #0
 800f244:	d047      	beq.n	800f2d6 <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800f246:	2300      	movs	r3, #0
 800f248:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800f24c:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800f250:	2200      	movs	r2, #0
 800f252:	62a2      	str	r2, [r4, #40]	@ 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800f254:	f003 01ff 	and.w	r1, r3, #255	@ 0xff
 800f258:	2b00      	cmp	r3, #0
 800f25a:	d042      	beq.n	800f2e2 <HAL_SPI_Init+0xaa>
 800f25c:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800f25e:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800f260:	68a5      	ldr	r5, [r4, #8]
 800f262:	69a2      	ldr	r2, [r4, #24]
 800f264:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800f266:	2302      	movs	r3, #2
 800f268:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_SPI_DISABLE(hspi);
 800f26c:	680b      	ldr	r3, [r1, #0]
 800f26e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800f272:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800f274:	6863      	ldr	r3, [r4, #4]
 800f276:	f405 4504 	and.w	r5, r5, #33792	@ 0x8400
 800f27a:	f403 7382 	and.w	r3, r3, #260	@ 0x104
 800f27e:	432b      	orrs	r3, r5
 800f280:	68e5      	ldr	r5, [r4, #12]
 800f282:	f405 6500 	and.w	r5, r5, #2048	@ 0x800
 800f286:	432b      	orrs	r3, r5
 800f288:	6925      	ldr	r5, [r4, #16]
 800f28a:	f005 0502 	and.w	r5, r5, #2
 800f28e:	432b      	orrs	r3, r5
 800f290:	6965      	ldr	r5, [r4, #20]
 800f292:	f005 0501 	and.w	r5, r5, #1
 800f296:	432b      	orrs	r3, r5
 800f298:	69e5      	ldr	r5, [r4, #28]
 800f29a:	f006 0e80 	and.w	lr, r6, #128	@ 0x80
 800f29e:	f402 7600 	and.w	r6, r2, #512	@ 0x200
 800f2a2:	f005 0538 	and.w	r5, r5, #56	@ 0x38
 800f2a6:	4333      	orrs	r3, r6
 800f2a8:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800f2aa:	0c12      	lsrs	r2, r2, #16
 800f2ac:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800f2b0:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800f2b4:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800f2b8:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800f2bc:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800f2be:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800f2c0:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800f2c2:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800f2c4:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800f2c6:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800f2ca:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800f2cc:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800f2ce:	6560      	str	r0, [r4, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800f2d0:	f884 2051 	strb.w	r2, [r4, #81]	@ 0x51
}
 800f2d4:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800f2d6:	6863      	ldr	r3, [r4, #4]
 800f2d8:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800f2dc:	d0b6      	beq.n	800f24c <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800f2de:	61e0      	str	r0, [r4, #28]
 800f2e0:	e7b4      	b.n	800f24c <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800f2e2:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800f2e4:	f884 1050 	strb.w	r1, [r4, #80]	@ 0x50
    HAL_SPI_MspInit(hspi);
 800f2e8:	f7f4 feee 	bl	80040c8 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800f2ec:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	@ 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800f2f0:	f403 5c00 	and.w	ip, r3, #8192	@ 0x2000
 800f2f4:	e7b3      	b.n	800f25e <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800f2f6:	2001      	movs	r0, #1
}
 800f2f8:	4770      	bx	lr
 800f2fa:	bf00      	nop

0800f2fc <HAL_SPI_Transmit_DMA>:
{
 800f2fc:	b538      	push	{r3, r4, r5, lr}
  if (hspi->State != HAL_SPI_STATE_READY)
 800f2fe:	f890 3051 	ldrb.w	r3, [r0, #81]	@ 0x51
 800f302:	2b01      	cmp	r3, #1
 800f304:	d148      	bne.n	800f398 <HAL_SPI_Transmit_DMA+0x9c>
  if ((pData == NULL) || (Size == 0U))
 800f306:	2900      	cmp	r1, #0
 800f308:	d04e      	beq.n	800f3a8 <HAL_SPI_Transmit_DMA+0xac>
 800f30a:	2a00      	cmp	r2, #0
 800f30c:	d04c      	beq.n	800f3a8 <HAL_SPI_Transmit_DMA+0xac>
 800f30e:	4604      	mov	r4, r0
 800f310:	b2d8      	uxtb	r0, r3
  __HAL_LOCK(hspi);
 800f312:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 800f316:	2b01      	cmp	r3, #1
 800f318:	d03e      	beq.n	800f398 <HAL_SPI_Transmit_DMA+0x9c>
 800f31a:	f884 0050 	strb.w	r0, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800f31e:	68a0      	ldr	r0, [r4, #8]
  hspi->TxXferSize  = Size;
 800f320:	86a2      	strh	r2, [r4, #52]	@ 0x34
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800f322:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800f324:	2503      	movs	r5, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800f326:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800f32a:	f884 5051 	strb.w	r5, [r4, #81]	@ 0x51
  hspi->RxISR       = NULL;
 800f32e:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800f332:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 800f334:	6321      	str	r1, [r4, #48]	@ 0x30
  hspi->TxXferCount = Size;
 800f336:	86e2      	strh	r2, [r4, #54]	@ 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800f338:	63a3      	str	r3, [r4, #56]	@ 0x38
    __HAL_SPI_DISABLE(hspi);
 800f33a:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = 0U;
 800f33c:	87a3      	strh	r3, [r4, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 800f33e:	87e3      	strh	r3, [r4, #62]	@ 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800f340:	d107      	bne.n	800f352 <HAL_SPI_Transmit_DMA+0x56>
    __HAL_SPI_DISABLE(hspi);
 800f342:	6813      	ldr	r3, [r2, #0]
 800f344:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800f348:	6013      	str	r3, [r2, #0]
    SPI_1LINE_TX(hspi);
 800f34a:	6813      	ldr	r3, [r2, #0]
 800f34c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800f350:	6013      	str	r3, [r2, #0]
  hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 800f352:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
 800f354:	4b15      	ldr	r3, [pc, #84]	@ (800f3ac <HAL_SPI_Transmit_DMA+0xb0>)
 800f356:	6403      	str	r3, [r0, #64]	@ 0x40
  hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 800f358:	4b15      	ldr	r3, [pc, #84]	@ (800f3b0 <HAL_SPI_Transmit_DMA+0xb4>)
 800f35a:	63c3      	str	r3, [r0, #60]	@ 0x3c
  hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 800f35c:	4b15      	ldr	r3, [pc, #84]	@ (800f3b4 <HAL_SPI_Transmit_DMA+0xb8>)
 800f35e:	64c3      	str	r3, [r0, #76]	@ 0x4c
                                 hspi->TxXferCount))
 800f360:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
  hspi->hdmatx->XferAbortCallback = NULL;
 800f362:	2500      	movs	r5, #0
 800f364:	6505      	str	r5, [r0, #80]	@ 0x50
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 800f366:	320c      	adds	r2, #12
 800f368:	b29b      	uxth	r3, r3
 800f36a:	f7fc fcd5 	bl	800bd18 <HAL_DMA_Start_IT>
 800f36e:	b9a8      	cbnz	r0, 800f39c <HAL_SPI_Transmit_DMA+0xa0>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800f370:	6823      	ldr	r3, [r4, #0]
 800f372:	681a      	ldr	r2, [r3, #0]
 800f374:	0652      	lsls	r2, r2, #25
 800f376:	d403      	bmi.n	800f380 <HAL_SPI_Transmit_DMA+0x84>
    __HAL_SPI_ENABLE(hspi);
 800f378:	681a      	ldr	r2, [r3, #0]
 800f37a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800f37e:	601a      	str	r2, [r3, #0]
  __HAL_UNLOCK(hspi);
 800f380:	2200      	movs	r2, #0
 800f382:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
  __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 800f386:	685a      	ldr	r2, [r3, #4]
 800f388:	f042 0220 	orr.w	r2, r2, #32
 800f38c:	605a      	str	r2, [r3, #4]
  SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 800f38e:	685a      	ldr	r2, [r3, #4]
 800f390:	f042 0202 	orr.w	r2, r2, #2
 800f394:	605a      	str	r2, [r3, #4]
}
 800f396:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_BUSY;
 800f398:	2002      	movs	r0, #2
}
 800f39a:	bd38      	pop	{r3, r4, r5, pc}
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 800f39c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 800f39e:	f884 5050 	strb.w	r5, [r4, #80]	@ 0x50
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 800f3a2:	f043 0310 	orr.w	r3, r3, #16
 800f3a6:	6563      	str	r3, [r4, #84]	@ 0x54
    return HAL_ERROR;
 800f3a8:	2001      	movs	r0, #1
}
 800f3aa:	bd38      	pop	{r3, r4, r5, pc}
 800f3ac:	0800f5bd 	.word	0x0800f5bd
 800f3b0:	0800f611 	.word	0x0800f611
 800f3b4:	0800f5ed 	.word	0x0800f5ed

0800f3b8 <HAL_SPI_TransmitReceive_DMA>:
{
 800f3b8:	b570      	push	{r4, r5, r6, lr}
 800f3ba:	4604      	mov	r4, r0
  tmp_state           = hspi->State;
 800f3bc:	f890 0051 	ldrb.w	r0, [r0, #81]	@ 0x51
  tmp_mode            = hspi->Init.Mode;
 800f3c0:	6865      	ldr	r5, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) ||
 800f3c2:	2801      	cmp	r0, #1
 800f3c4:	d00a      	beq.n	800f3dc <HAL_SPI_TransmitReceive_DMA+0x24>
 800f3c6:	f5b5 7f82 	cmp.w	r5, #260	@ 0x104
 800f3ca:	d148      	bne.n	800f45e <HAL_SPI_TransmitReceive_DMA+0xa6>
 800f3cc:	fa5f fc80 	uxtb.w	ip, r0
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800f3d0:	68a0      	ldr	r0, [r4, #8]
 800f3d2:	2800      	cmp	r0, #0
 800f3d4:	d143      	bne.n	800f45e <HAL_SPI_TransmitReceive_DMA+0xa6>
 800f3d6:	f1bc 0f04 	cmp.w	ip, #4
 800f3da:	d140      	bne.n	800f45e <HAL_SPI_TransmitReceive_DMA+0xa6>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800f3dc:	2900      	cmp	r1, #0
 800f3de:	d03c      	beq.n	800f45a <HAL_SPI_TransmitReceive_DMA+0xa2>
 800f3e0:	2a00      	cmp	r2, #0
 800f3e2:	d03a      	beq.n	800f45a <HAL_SPI_TransmitReceive_DMA+0xa2>
 800f3e4:	2b00      	cmp	r3, #0
 800f3e6:	d038      	beq.n	800f45a <HAL_SPI_TransmitReceive_DMA+0xa2>
  __HAL_LOCK(hspi);
 800f3e8:	f894 0050 	ldrb.w	r0, [r4, #80]	@ 0x50
 800f3ec:	2801      	cmp	r0, #1
 800f3ee:	d036      	beq.n	800f45e <HAL_SPI_TransmitReceive_DMA+0xa6>
 800f3f0:	2001      	movs	r0, #1
 800f3f2:	f884 0050 	strb.w	r0, [r4, #80]	@ 0x50
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800f3f6:	f894 0051 	ldrb.w	r0, [r4, #81]	@ 0x51
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 800f3fa:	6321      	str	r1, [r4, #48]	@ 0x30
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800f3fc:	2804      	cmp	r0, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800f3fe:	bf18      	it	ne
 800f400:	2005      	movne	r0, #5
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800f402:	f04f 0600 	mov.w	r6, #0
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800f406:	bf18      	it	ne
 800f408:	f884 0051 	strbne.w	r0, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800f40c:	6566      	str	r6, [r4, #84]	@ 0x54
  hspi->TxXferCount = Size;
 800f40e:	86e3      	strh	r3, [r4, #54]	@ 0x36
  hspi->RxXferCount = Size;
 800f410:	87e3      	strh	r3, [r4, #62]	@ 0x3e
  if (hspi->State == HAL_SPI_STATE_BUSY_RX)
 800f412:	f894 1051 	ldrb.w	r1, [r4, #81]	@ 0x51
    hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
 800f416:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
  if (hspi->State == HAL_SPI_STATE_BUSY_RX)
 800f418:	4d28      	ldr	r5, [pc, #160]	@ (800f4bc <HAL_SPI_TransmitReceive_DMA+0x104>)
  hspi->TxXferSize  = Size;
 800f41a:	86a3      	strh	r3, [r4, #52]	@ 0x34
  if (hspi->State == HAL_SPI_STATE_BUSY_RX)
 800f41c:	2904      	cmp	r1, #4
 800f41e:	4928      	ldr	r1, [pc, #160]	@ (800f4c0 <HAL_SPI_TransmitReceive_DMA+0x108>)
  hspi->RxXferSize  = Size;
 800f420:	87a3      	strh	r3, [r4, #60]	@ 0x3c
  if (hspi->State == HAL_SPI_STATE_BUSY_RX)
 800f422:	4b28      	ldr	r3, [pc, #160]	@ (800f4c4 <HAL_SPI_TransmitReceive_DMA+0x10c>)
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800f424:	63a2      	str	r2, [r4, #56]	@ 0x38
  if (hspi->State == HAL_SPI_STATE_BUSY_RX)
 800f426:	bf18      	it	ne
 800f428:	460b      	movne	r3, r1
  hspi->RxISR       = NULL;
 800f42a:	e9c4 6610 	strd	r6, r6, [r4, #64]	@ 0x40
  if (hspi->State == HAL_SPI_STATE_BUSY_RX)
 800f42e:	4926      	ldr	r1, [pc, #152]	@ (800f4c8 <HAL_SPI_TransmitReceive_DMA+0x110>)
    hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
 800f430:	6403      	str	r3, [r0, #64]	@ 0x40
  if (hspi->State == HAL_SPI_STATE_BUSY_RX)
 800f432:	bf18      	it	ne
 800f434:	4629      	movne	r1, r5
  hspi->hdmarx->XferErrorCallback = SPI_DMAError;
 800f436:	4b25      	ldr	r3, [pc, #148]	@ (800f4cc <HAL_SPI_TransmitReceive_DMA+0x114>)
 800f438:	64c3      	str	r3, [r0, #76]	@ 0x4c
                                 hspi->RxXferCount))
 800f43a:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
    hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
 800f43c:	63c1      	str	r1, [r0, #60]	@ 0x3c
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBuffPtr,
 800f43e:	6821      	ldr	r1, [r4, #0]
  hspi->hdmarx->XferAbortCallback = NULL;
 800f440:	6506      	str	r6, [r0, #80]	@ 0x50
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBuffPtr,
 800f442:	b29b      	uxth	r3, r3
 800f444:	310c      	adds	r1, #12
 800f446:	f7fc fc67 	bl	800bd18 <HAL_DMA_Start_IT>
 800f44a:	4605      	mov	r5, r0
 800f44c:	b148      	cbz	r0, 800f462 <HAL_SPI_TransmitReceive_DMA+0xaa>
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 800f44e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 800f450:	f884 6050 	strb.w	r6, [r4, #80]	@ 0x50
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 800f454:	f043 0310 	orr.w	r3, r3, #16
 800f458:	6563      	str	r3, [r4, #84]	@ 0x54
    return HAL_ERROR;
 800f45a:	2001      	movs	r0, #1
}
 800f45c:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_BUSY;
 800f45e:	2002      	movs	r0, #2
}
 800f460:	bd70      	pop	{r4, r5, r6, pc}
  SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 800f462:	6822      	ldr	r2, [r4, #0]
  hspi->hdmatx->XferHalfCpltCallback = NULL;
 800f464:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
  SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 800f466:	6853      	ldr	r3, [r2, #4]
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 800f468:	6b21      	ldr	r1, [r4, #48]	@ 0x30
  SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 800f46a:	f043 0301 	orr.w	r3, r3, #1
 800f46e:	6053      	str	r3, [r2, #4]
                                 hspi->TxXferCount))
 800f470:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 800f472:	320c      	adds	r2, #12
  hspi->hdmatx->XferCpltCallback     = NULL;
 800f474:	e9c0 550f 	strd	r5, r5, [r0, #60]	@ 0x3c
  hspi->hdmatx->XferErrorCallback    = NULL;
 800f478:	e9c0 5513 	strd	r5, r5, [r0, #76]	@ 0x4c
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 800f47c:	b29b      	uxth	r3, r3
 800f47e:	f7fc fc4b 	bl	800bd18 <HAL_DMA_Start_IT>
 800f482:	b998      	cbnz	r0, 800f4ac <HAL_SPI_TransmitReceive_DMA+0xf4>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800f484:	6823      	ldr	r3, [r4, #0]
 800f486:	681a      	ldr	r2, [r3, #0]
 800f488:	0652      	lsls	r2, r2, #25
 800f48a:	d403      	bmi.n	800f494 <HAL_SPI_TransmitReceive_DMA+0xdc>
    __HAL_SPI_ENABLE(hspi);
 800f48c:	681a      	ldr	r2, [r3, #0]
 800f48e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800f492:	601a      	str	r2, [r3, #0]
  __HAL_UNLOCK(hspi);
 800f494:	2200      	movs	r2, #0
 800f496:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
  __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 800f49a:	685a      	ldr	r2, [r3, #4]
 800f49c:	f042 0220 	orr.w	r2, r2, #32
 800f4a0:	605a      	str	r2, [r3, #4]
  SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 800f4a2:	685a      	ldr	r2, [r3, #4]
 800f4a4:	f042 0202 	orr.w	r2, r2, #2
 800f4a8:	605a      	str	r2, [r3, #4]
}
 800f4aa:	bd70      	pop	{r4, r5, r6, pc}
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 800f4ac:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 800f4ae:	f884 5050 	strb.w	r5, [r4, #80]	@ 0x50
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 800f4b2:	f043 0310 	orr.w	r3, r3, #16
 800f4b6:	6563      	str	r3, [r4, #84]	@ 0x54
    return HAL_ERROR;
 800f4b8:	e7cf      	b.n	800f45a <HAL_SPI_TransmitReceive_DMA+0xa2>
 800f4ba:	bf00      	nop
 800f4bc:	0800f739 	.word	0x0800f739
 800f4c0:	0800f5dd 	.word	0x0800f5dd
 800f4c4:	0800f5cd 	.word	0x0800f5cd
 800f4c8:	0800f67d 	.word	0x0800f67d
 800f4cc:	0800f5ed 	.word	0x0800f5ed

0800f4d0 <HAL_SPI_Receive_DMA>:
  if (hspi->State != HAL_SPI_STATE_READY)
 800f4d0:	f890 3051 	ldrb.w	r3, [r0, #81]	@ 0x51
 800f4d4:	2b01      	cmp	r3, #1
 800f4d6:	d152      	bne.n	800f57e <HAL_SPI_Receive_DMA+0xae>
{
 800f4d8:	b570      	push	{r4, r5, r6, lr}
  if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
 800f4da:	6886      	ldr	r6, [r0, #8]
 800f4dc:	4604      	mov	r4, r0
 800f4de:	460d      	mov	r5, r1
 800f4e0:	2e00      	cmp	r6, #0
 800f4e2:	d03f      	beq.n	800f564 <HAL_SPI_Receive_DMA+0x94>
  if ((pData == NULL) || (Size == 0U))
 800f4e4:	2d00      	cmp	r5, #0
 800f4e6:	d052      	beq.n	800f58e <HAL_SPI_Receive_DMA+0xbe>
 800f4e8:	2a00      	cmp	r2, #0
 800f4ea:	d050      	beq.n	800f58e <HAL_SPI_Receive_DMA+0xbe>
  __HAL_LOCK(hspi);
 800f4ec:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 800f4f0:	2b01      	cmp	r3, #1
 800f4f2:	d057      	beq.n	800f5a4 <HAL_SPI_Receive_DMA+0xd4>
 800f4f4:	2301      	movs	r3, #1
 800f4f6:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800f4fa:	2304      	movs	r3, #4
 800f4fc:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800f500:	f5b6 4f00 	cmp.w	r6, #32768	@ 0x8000
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800f504:	f04f 0300 	mov.w	r3, #0
 800f508:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->RxISR       = NULL;
 800f50a:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  hspi->RxXferCount = Size;
 800f50e:	87e2      	strh	r2, [r4, #62]	@ 0x3e
    __HAL_SPI_DISABLE(hspi);
 800f510:	6821      	ldr	r1, [r4, #0]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800f512:	63a5      	str	r5, [r4, #56]	@ 0x38
  hspi->RxXferSize  = Size;
 800f514:	87a2      	strh	r2, [r4, #60]	@ 0x3c
  hspi->TxXferSize  = 0U;
 800f516:	86a3      	strh	r3, [r4, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 800f518:	86e3      	strh	r3, [r4, #54]	@ 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800f51a:	d03a      	beq.n	800f592 <HAL_SPI_Receive_DMA+0xc2>
  hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
 800f51c:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800f51e:	4b22      	ldr	r3, [pc, #136]	@ (800f5a8 <HAL_SPI_Receive_DMA+0xd8>)
 800f520:	6403      	str	r3, [r0, #64]	@ 0x40
  hspi->hdmarx->XferCpltCallback = SPI_DMAReceiveCplt;
 800f522:	4b22      	ldr	r3, [pc, #136]	@ (800f5ac <HAL_SPI_Receive_DMA+0xdc>)
 800f524:	63c3      	str	r3, [r0, #60]	@ 0x3c
  hspi->hdmarx->XferErrorCallback = SPI_DMAError;
 800f526:	4b22      	ldr	r3, [pc, #136]	@ (800f5b0 <HAL_SPI_Receive_DMA+0xe0>)
 800f528:	64c3      	str	r3, [r0, #76]	@ 0x4c
                                 hspi->RxXferCount))
 800f52a:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
  hspi->hdmarx->XferAbortCallback = NULL;
 800f52c:	2600      	movs	r6, #0
 800f52e:	6506      	str	r6, [r0, #80]	@ 0x50
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBuffPtr,
 800f530:	462a      	mov	r2, r5
 800f532:	310c      	adds	r1, #12
 800f534:	b29b      	uxth	r3, r3
 800f536:	f7fc fbef 	bl	800bd18 <HAL_DMA_Start_IT>
 800f53a:	bb10      	cbnz	r0, 800f582 <HAL_SPI_Receive_DMA+0xb2>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800f53c:	6823      	ldr	r3, [r4, #0]
 800f53e:	681a      	ldr	r2, [r3, #0]
 800f540:	0652      	lsls	r2, r2, #25
 800f542:	d403      	bmi.n	800f54c <HAL_SPI_Receive_DMA+0x7c>
    __HAL_SPI_ENABLE(hspi);
 800f544:	681a      	ldr	r2, [r3, #0]
 800f546:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800f54a:	601a      	str	r2, [r3, #0]
  __HAL_UNLOCK(hspi);
 800f54c:	2200      	movs	r2, #0
 800f54e:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
  __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 800f552:	685a      	ldr	r2, [r3, #4]
 800f554:	f042 0220 	orr.w	r2, r2, #32
 800f558:	605a      	str	r2, [r3, #4]
  SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 800f55a:	685a      	ldr	r2, [r3, #4]
 800f55c:	f042 0201 	orr.w	r2, r2, #1
 800f560:	605a      	str	r2, [r3, #4]
}
 800f562:	bd70      	pop	{r4, r5, r6, pc}
  if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
 800f564:	6843      	ldr	r3, [r0, #4]
 800f566:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800f56a:	d1bb      	bne.n	800f4e4 <HAL_SPI_Receive_DMA+0x14>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800f56c:	2504      	movs	r5, #4
 800f56e:	f880 5051 	strb.w	r5, [r0, #81]	@ 0x51
    return HAL_SPI_TransmitReceive_DMA(hspi, pData, pData, Size);
 800f572:	4613      	mov	r3, r2
}
 800f574:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return HAL_SPI_TransmitReceive_DMA(hspi, pData, pData, Size);
 800f578:	460a      	mov	r2, r1
 800f57a:	f7ff bf1d 	b.w	800f3b8 <HAL_SPI_TransmitReceive_DMA>
    return HAL_BUSY;
 800f57e:	2002      	movs	r0, #2
}
 800f580:	4770      	bx	lr
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 800f582:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 800f584:	f884 6050 	strb.w	r6, [r4, #80]	@ 0x50
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 800f588:	f043 0310 	orr.w	r3, r3, #16
 800f58c:	6563      	str	r3, [r4, #84]	@ 0x54
    return HAL_ERROR;
 800f58e:	2001      	movs	r0, #1
}
 800f590:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_SPI_DISABLE(hspi);
 800f592:	680b      	ldr	r3, [r1, #0]
 800f594:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800f598:	600b      	str	r3, [r1, #0]
    SPI_1LINE_RX(hspi);
 800f59a:	680b      	ldr	r3, [r1, #0]
 800f59c:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800f5a0:	600b      	str	r3, [r1, #0]
 800f5a2:	e7bb      	b.n	800f51c <HAL_SPI_Receive_DMA+0x4c>
    return HAL_BUSY;
 800f5a4:	2002      	movs	r0, #2
}
 800f5a6:	bd70      	pop	{r4, r5, r6, pc}
 800f5a8:	0800f5cd 	.word	0x0800f5cd
 800f5ac:	0800f67d 	.word	0x0800f67d
 800f5b0:	0800f5ed 	.word	0x0800f5ed

0800f5b4 <HAL_SPI_TxRxCpltCallback>:
__weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi)
 800f5b4:	4770      	bx	lr
 800f5b6:	bf00      	nop

0800f5b8 <HAL_SPI_TxHalfCpltCallback>:
__weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
 800f5b8:	4770      	bx	lr
 800f5ba:	bf00      	nop

0800f5bc <SPI_DMAHalfTransmitCplt>:
{
 800f5bc:	b508      	push	{r3, lr}
  HAL_SPI_TxHalfCpltCallback(hspi);
 800f5be:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 800f5c0:	f7ff fffa 	bl	800f5b8 <HAL_SPI_TxHalfCpltCallback>
}
 800f5c4:	bd08      	pop	{r3, pc}
 800f5c6:	bf00      	nop

0800f5c8 <HAL_SPI_RxHalfCpltCallback>:
__weak void HAL_SPI_RxHalfCpltCallback(SPI_HandleTypeDef *hspi)
 800f5c8:	4770      	bx	lr
 800f5ca:	bf00      	nop

0800f5cc <SPI_DMAHalfReceiveCplt>:
{
 800f5cc:	b508      	push	{r3, lr}
  HAL_SPI_RxHalfCpltCallback(hspi);
 800f5ce:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 800f5d0:	f7ff fffa 	bl	800f5c8 <HAL_SPI_RxHalfCpltCallback>
}
 800f5d4:	bd08      	pop	{r3, pc}
 800f5d6:	bf00      	nop

0800f5d8 <HAL_SPI_TxRxHalfCpltCallback>:
__weak void HAL_SPI_TxRxHalfCpltCallback(SPI_HandleTypeDef *hspi)
 800f5d8:	4770      	bx	lr
 800f5da:	bf00      	nop

0800f5dc <SPI_DMAHalfTransmitReceiveCplt>:
{
 800f5dc:	b508      	push	{r3, lr}
  HAL_SPI_TxRxHalfCpltCallback(hspi);
 800f5de:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 800f5e0:	f7ff fffa 	bl	800f5d8 <HAL_SPI_TxRxHalfCpltCallback>
}
 800f5e4:	bd08      	pop	{r3, pc}
 800f5e6:	bf00      	nop

0800f5e8 <HAL_SPI_ErrorCallback>:
__weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
 800f5e8:	4770      	bx	lr
 800f5ea:	bf00      	nop

0800f5ec <SPI_DMAError>:
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 800f5ec:	6b80      	ldr	r0, [r0, #56]	@ 0x38
  CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 800f5ee:	6802      	ldr	r2, [r0, #0]
{
 800f5f0:	b508      	push	{r3, lr}
  CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 800f5f2:	6853      	ldr	r3, [r2, #4]
 800f5f4:	f023 0303 	bic.w	r3, r3, #3
 800f5f8:	6053      	str	r3, [r2, #4]
  SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 800f5fa:	6d43      	ldr	r3, [r0, #84]	@ 0x54
  hspi->State = HAL_SPI_STATE_READY;
 800f5fc:	2101      	movs	r1, #1
  SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 800f5fe:	f043 0310 	orr.w	r3, r3, #16
 800f602:	6543      	str	r3, [r0, #84]	@ 0x54
  hspi->State = HAL_SPI_STATE_READY;
 800f604:	f880 1051 	strb.w	r1, [r0, #81]	@ 0x51
  HAL_SPI_ErrorCallback(hspi);
 800f608:	f7ff ffee 	bl	800f5e8 <HAL_SPI_ErrorCallback>
}
 800f60c:	bd08      	pop	{r3, pc}
 800f60e:	bf00      	nop

0800f610 <SPI_DMATransmitCplt>:
{
 800f610:	b530      	push	{r4, r5, lr}
 800f612:	4605      	mov	r5, r0
 800f614:	b083      	sub	sp, #12
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 800f616:	6b84      	ldr	r4, [r0, #56]	@ 0x38
  tickstart = HAL_GetTick();
 800f618:	f7fc fa0e 	bl	800ba38 <HAL_GetTick>
  if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
 800f61c:	682b      	ldr	r3, [r5, #0]
 800f61e:	681b      	ldr	r3, [r3, #0]
 800f620:	05db      	lsls	r3, r3, #23
 800f622:	d421      	bmi.n	800f668 <SPI_DMATransmitCplt+0x58>
    __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 800f624:	6823      	ldr	r3, [r4, #0]
 800f626:	685a      	ldr	r2, [r3, #4]
 800f628:	f022 0220 	bic.w	r2, r2, #32
 800f62c:	605a      	str	r2, [r3, #4]
    CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 800f62e:	685a      	ldr	r2, [r3, #4]
 800f630:	f022 0202 	bic.w	r2, r2, #2
 800f634:	4601      	mov	r1, r0
 800f636:	605a      	str	r2, [r3, #4]
    if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 800f638:	4620      	mov	r0, r4
 800f63a:	f7ff fdc1 	bl	800f1c0 <SPI_EndRxTxTransaction.constprop.0>
 800f63e:	b118      	cbz	r0, 800f648 <SPI_DMATransmitCplt+0x38>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800f640:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800f642:	f043 0320 	orr.w	r3, r3, #32
 800f646:	6563      	str	r3, [r4, #84]	@ 0x54
    if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800f648:	68a3      	ldr	r3, [r4, #8]
 800f64a:	b933      	cbnz	r3, 800f65a <SPI_DMATransmitCplt+0x4a>
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800f64c:	6822      	ldr	r2, [r4, #0]
 800f64e:	9301      	str	r3, [sp, #4]
 800f650:	68d3      	ldr	r3, [r2, #12]
 800f652:	9301      	str	r3, [sp, #4]
 800f654:	6893      	ldr	r3, [r2, #8]
 800f656:	9301      	str	r3, [sp, #4]
 800f658:	9b01      	ldr	r3, [sp, #4]
    hspi->State = HAL_SPI_STATE_READY;
 800f65a:	2301      	movs	r3, #1
    hspi->TxXferCount = 0U;
 800f65c:	2200      	movs	r2, #0
 800f65e:	86e2      	strh	r2, [r4, #54]	@ 0x36
    hspi->State = HAL_SPI_STATE_READY;
 800f660:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800f664:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800f666:	b923      	cbnz	r3, 800f672 <SPI_DMATransmitCplt+0x62>
  HAL_SPI_TxCpltCallback(hspi);
 800f668:	4620      	mov	r0, r4
 800f66a:	f7f2 f9c3 	bl	80019f4 <HAL_SPI_TxCpltCallback>
}
 800f66e:	b003      	add	sp, #12
 800f670:	bd30      	pop	{r4, r5, pc}
      HAL_SPI_ErrorCallback(hspi);
 800f672:	4620      	mov	r0, r4
 800f674:	f7ff ffb8 	bl	800f5e8 <HAL_SPI_ErrorCallback>
}
 800f678:	b003      	add	sp, #12
 800f67a:	bd30      	pop	{r4, r5, pc}

0800f67c <SPI_DMAReceiveCplt>:
{
 800f67c:	b570      	push	{r4, r5, r6, lr}
 800f67e:	4605      	mov	r5, r0
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 800f680:	6b84      	ldr	r4, [r0, #56]	@ 0x38
  tickstart = HAL_GetTick();
 800f682:	f7fc f9d9 	bl	800ba38 <HAL_GetTick>
  if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
 800f686:	682a      	ldr	r2, [r5, #0]
 800f688:	6812      	ldr	r2, [r2, #0]
 800f68a:	f412 7280 	ands.w	r2, r2, #256	@ 0x100
 800f68e:	d11c      	bne.n	800f6ca <SPI_DMAReceiveCplt+0x4e>
    __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 800f690:	6821      	ldr	r1, [r4, #0]
 800f692:	684d      	ldr	r5, [r1, #4]
 800f694:	f025 0520 	bic.w	r5, r5, #32
 800f698:	4603      	mov	r3, r0
 800f69a:	604d      	str	r5, [r1, #4]
    if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
 800f69c:	e9d4 5001 	ldrd	r5, r0, [r4, #4]
 800f6a0:	b1b8      	cbz	r0, 800f6d2 <SPI_DMAReceiveCplt+0x56>
      CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 800f6a2:	684e      	ldr	r6, [r1, #4]
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800f6a4:	f5b5 7f82 	cmp.w	r5, #260	@ 0x104
      CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 800f6a8:	f026 0601 	bic.w	r6, r6, #1
 800f6ac:	604e      	str	r6, [r1, #4]
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800f6ae:	d01c      	beq.n	800f6ea <SPI_DMAReceiveCplt+0x6e>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800f6b0:	2200      	movs	r2, #0
 800f6b2:	2101      	movs	r1, #1
 800f6b4:	4620      	mov	r0, r4
 800f6b6:	f7ff fd19 	bl	800f0ec <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800f6ba:	bb20      	cbnz	r0, 800f706 <SPI_DMAReceiveCplt+0x8a>
    hspi->State = HAL_SPI_STATE_READY;
 800f6bc:	2301      	movs	r3, #1
    hspi->RxXferCount = 0U;
 800f6be:	2200      	movs	r2, #0
 800f6c0:	87e2      	strh	r2, [r4, #62]	@ 0x3e
    hspi->State = HAL_SPI_STATE_READY;
 800f6c2:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800f6c6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800f6c8:	b95b      	cbnz	r3, 800f6e2 <SPI_DMAReceiveCplt+0x66>
  HAL_SPI_RxCpltCallback(hspi);
 800f6ca:	4620      	mov	r0, r4
 800f6cc:	f7f2 f998 	bl	8001a00 <HAL_SPI_RxCpltCallback>
}
 800f6d0:	bd70      	pop	{r4, r5, r6, pc}
    if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
 800f6d2:	f5b5 7f82 	cmp.w	r5, #260	@ 0x104
      CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 800f6d6:	684a      	ldr	r2, [r1, #4]
    if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
 800f6d8:	d01c      	beq.n	800f714 <SPI_DMAReceiveCplt+0x98>
      CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 800f6da:	f022 0201 	bic.w	r2, r2, #1
 800f6de:	604a      	str	r2, [r1, #4]
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800f6e0:	e7e6      	b.n	800f6b0 <SPI_DMAReceiveCplt+0x34>
      HAL_SPI_ErrorCallback(hspi);
 800f6e2:	4620      	mov	r0, r4
 800f6e4:	f7ff ff80 	bl	800f5e8 <HAL_SPI_ErrorCallback>
}
 800f6e8:	bd70      	pop	{r4, r5, r6, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800f6ea:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 800f6ee:	d115      	bne.n	800f71c <SPI_DMAReceiveCplt+0xa0>
    __HAL_SPI_DISABLE(hspi);
 800f6f0:	680a      	ldr	r2, [r1, #0]
 800f6f2:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800f6f6:	600a      	str	r2, [r1, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800f6f8:	2200      	movs	r2, #0
 800f6fa:	2180      	movs	r1, #128	@ 0x80
 800f6fc:	4620      	mov	r0, r4
 800f6fe:	f7ff fcf5 	bl	800f0ec <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800f702:	2800      	cmp	r0, #0
 800f704:	d0da      	beq.n	800f6bc <SPI_DMAReceiveCplt+0x40>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800f706:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800f708:	f043 0320 	orr.w	r3, r3, #32
 800f70c:	6563      	str	r3, [r4, #84]	@ 0x54
      hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800f70e:	2320      	movs	r3, #32
 800f710:	6563      	str	r3, [r4, #84]	@ 0x54
 800f712:	e7d3      	b.n	800f6bc <SPI_DMAReceiveCplt+0x40>
      CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 800f714:	f022 0203 	bic.w	r2, r2, #3
 800f718:	604a      	str	r2, [r1, #4]
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800f71a:	e7ed      	b.n	800f6f8 <SPI_DMAReceiveCplt+0x7c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800f71c:	f5b0 6f80 	cmp.w	r0, #1024	@ 0x400
 800f720:	d1ea      	bne.n	800f6f8 <SPI_DMAReceiveCplt+0x7c>
    __HAL_SPI_DISABLE(hspi);
 800f722:	6808      	ldr	r0, [r1, #0]
 800f724:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 800f728:	6008      	str	r0, [r1, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800f72a:	2101      	movs	r1, #1
 800f72c:	4620      	mov	r0, r4
 800f72e:	f7ff fcdd 	bl	800f0ec <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800f732:	2800      	cmp	r0, #0
 800f734:	d0c2      	beq.n	800f6bc <SPI_DMAReceiveCplt+0x40>
 800f736:	e7e6      	b.n	800f706 <SPI_DMAReceiveCplt+0x8a>

0800f738 <SPI_DMATransmitReceiveCplt>:
{
 800f738:	b538      	push	{r3, r4, r5, lr}
 800f73a:	4605      	mov	r5, r0
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 800f73c:	6b84      	ldr	r4, [r0, #56]	@ 0x38
  tickstart = HAL_GetTick();
 800f73e:	f7fc f97b 	bl	800ba38 <HAL_GetTick>
  if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
 800f742:	682b      	ldr	r3, [r5, #0]
 800f744:	681b      	ldr	r3, [r3, #0]
 800f746:	05db      	lsls	r3, r3, #23
 800f748:	d41a      	bmi.n	800f780 <SPI_DMATransmitReceiveCplt+0x48>
    __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 800f74a:	6822      	ldr	r2, [r4, #0]
 800f74c:	6853      	ldr	r3, [r2, #4]
 800f74e:	f023 0320 	bic.w	r3, r3, #32
 800f752:	4601      	mov	r1, r0
 800f754:	6053      	str	r3, [r2, #4]
    if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 800f756:	4620      	mov	r0, r4
 800f758:	f7ff fd32 	bl	800f1c0 <SPI_EndRxTxTransaction.constprop.0>
 800f75c:	b118      	cbz	r0, 800f766 <SPI_DMATransmitReceiveCplt+0x2e>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800f75e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800f760:	f043 0320 	orr.w	r3, r3, #32
 800f764:	6563      	str	r3, [r4, #84]	@ 0x54
    CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 800f766:	6821      	ldr	r1, [r4, #0]
 800f768:	684b      	ldr	r3, [r1, #4]
    hspi->TxXferCount = 0U;
 800f76a:	2200      	movs	r2, #0
    CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 800f76c:	f023 0303 	bic.w	r3, r3, #3
    hspi->State = HAL_SPI_STATE_READY;
 800f770:	2001      	movs	r0, #1
    CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 800f772:	604b      	str	r3, [r1, #4]
    hspi->TxXferCount = 0U;
 800f774:	86e2      	strh	r2, [r4, #54]	@ 0x36
    hspi->RxXferCount = 0U;
 800f776:	87e2      	strh	r2, [r4, #62]	@ 0x3e
    hspi->State = HAL_SPI_STATE_READY;
 800f778:	f884 0051 	strb.w	r0, [r4, #81]	@ 0x51
    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800f77c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800f77e:	b91b      	cbnz	r3, 800f788 <SPI_DMATransmitReceiveCplt+0x50>
  HAL_SPI_TxRxCpltCallback(hspi);
 800f780:	4620      	mov	r0, r4
 800f782:	f7ff ff17 	bl	800f5b4 <HAL_SPI_TxRxCpltCallback>
}
 800f786:	bd38      	pop	{r3, r4, r5, pc}
      HAL_SPI_ErrorCallback(hspi);
 800f788:	4620      	mov	r0, r4
 800f78a:	f7ff ff2d 	bl	800f5e8 <HAL_SPI_ErrorCallback>
}
 800f78e:	bd38      	pop	{r3, r4, r5, pc}

0800f790 <HAL_SPI_IRQHandler>:
  uint32_t itsource = hspi->Instance->CR2;
 800f790:	6802      	ldr	r2, [r0, #0]
{
 800f792:	b510      	push	{r4, lr}
  uint32_t itsource = hspi->Instance->CR2;
 800f794:	6851      	ldr	r1, [r2, #4]
  uint32_t itflag   = hspi->Instance->SR;
 800f796:	6893      	ldr	r3, [r2, #8]
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 800f798:	f003 0c41 	and.w	ip, r3, #65	@ 0x41
 800f79c:	f1bc 0f01 	cmp.w	ip, #1
{
 800f7a0:	b084      	sub	sp, #16
 800f7a2:	4604      	mov	r4, r0
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 800f7a4:	d05a      	beq.n	800f85c <HAL_SPI_IRQHandler+0xcc>
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE) != RESET))
 800f7a6:	0798      	lsls	r0, r3, #30
 800f7a8:	d501      	bpl.n	800f7ae <HAL_SPI_IRQHandler+0x1e>
 800f7aa:	0608      	lsls	r0, r1, #24
 800f7ac:	d45e      	bmi.n	800f86c <HAL_SPI_IRQHandler+0xdc>
  if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 800f7ae:	f413 7fb0 	tst.w	r3, #352	@ 0x160
 800f7b2:	d051      	beq.n	800f858 <HAL_SPI_IRQHandler+0xc8>
       || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
 800f7b4:	0688      	lsls	r0, r1, #26
 800f7b6:	d54f      	bpl.n	800f858 <HAL_SPI_IRQHandler+0xc8>
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 800f7b8:	0658      	lsls	r0, r3, #25
 800f7ba:	d50e      	bpl.n	800f7da <HAL_SPI_IRQHandler+0x4a>
      if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 800f7bc:	f894 0051 	ldrb.w	r0, [r4, #81]	@ 0x51
 800f7c0:	2803      	cmp	r0, #3
 800f7c2:	d05d      	beq.n	800f880 <HAL_SPI_IRQHandler+0xf0>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 800f7c4:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 800f7c6:	f040 0004 	orr.w	r0, r0, #4
 800f7ca:	6560      	str	r0, [r4, #84]	@ 0x54
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800f7cc:	2000      	movs	r0, #0
 800f7ce:	9000      	str	r0, [sp, #0]
 800f7d0:	68d0      	ldr	r0, [r2, #12]
 800f7d2:	9000      	str	r0, [sp, #0]
 800f7d4:	6890      	ldr	r0, [r2, #8]
 800f7d6:	9000      	str	r0, [sp, #0]
 800f7d8:	9800      	ldr	r0, [sp, #0]
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
 800f7da:	0698      	lsls	r0, r3, #26
 800f7dc:	d50c      	bpl.n	800f7f8 <HAL_SPI_IRQHandler+0x68>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 800f7de:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 800f7e0:	f040 0001 	orr.w	r0, r0, #1
 800f7e4:	6560      	str	r0, [r4, #84]	@ 0x54
      __HAL_SPI_CLEAR_MODFFLAG(hspi);
 800f7e6:	2000      	movs	r0, #0
 800f7e8:	9002      	str	r0, [sp, #8]
 800f7ea:	6890      	ldr	r0, [r2, #8]
 800f7ec:	9002      	str	r0, [sp, #8]
 800f7ee:	6810      	ldr	r0, [r2, #0]
 800f7f0:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 800f7f4:	6010      	str	r0, [r2, #0]
 800f7f6:	9802      	ldr	r0, [sp, #8]
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)
 800f7f8:	05d8      	lsls	r0, r3, #23
 800f7fa:	d508      	bpl.n	800f80e <HAL_SPI_IRQHandler+0x7e>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 800f7fc:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      __HAL_SPI_CLEAR_FREFLAG(hspi);
 800f7fe:	2000      	movs	r0, #0
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 800f800:	f043 0308 	orr.w	r3, r3, #8
 800f804:	6563      	str	r3, [r4, #84]	@ 0x54
      __HAL_SPI_CLEAR_FREFLAG(hspi);
 800f806:	9003      	str	r0, [sp, #12]
 800f808:	6893      	ldr	r3, [r2, #8]
 800f80a:	9303      	str	r3, [sp, #12]
 800f80c:	9b03      	ldr	r3, [sp, #12]
    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800f80e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800f810:	b313      	cbz	r3, 800f858 <HAL_SPI_IRQHandler+0xc8>
      __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
 800f812:	6853      	ldr	r3, [r2, #4]
 800f814:	f023 03e0 	bic.w	r3, r3, #224	@ 0xe0
 800f818:	6053      	str	r3, [r2, #4]
      hspi->State = HAL_SPI_STATE_READY;
 800f81a:	2001      	movs	r0, #1
      if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)))
 800f81c:	078b      	lsls	r3, r1, #30
      hspi->State = HAL_SPI_STATE_READY;
 800f81e:	f884 0051 	strb.w	r0, [r4, #81]	@ 0x51
      if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)))
 800f822:	d029      	beq.n	800f878 <HAL_SPI_IRQHandler+0xe8>
        CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
 800f824:	6853      	ldr	r3, [r2, #4]
        if (hspi->hdmarx != NULL)
 800f826:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
        CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
 800f828:	f023 0303 	bic.w	r3, r3, #3
 800f82c:	6053      	str	r3, [r2, #4]
        if (hspi->hdmarx != NULL)
 800f82e:	b140      	cbz	r0, 800f842 <HAL_SPI_IRQHandler+0xb2>
          hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 800f830:	4b17      	ldr	r3, [pc, #92]	@ (800f890 <HAL_SPI_IRQHandler+0x100>)
 800f832:	6503      	str	r3, [r0, #80]	@ 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 800f834:	f7fc faf6 	bl	800be24 <HAL_DMA_Abort_IT>
 800f838:	b118      	cbz	r0, 800f842 <HAL_SPI_IRQHandler+0xb2>
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 800f83a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800f83c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800f840:	6563      	str	r3, [r4, #84]	@ 0x54
        if (hspi->hdmatx != NULL)
 800f842:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
 800f844:	b140      	cbz	r0, 800f858 <HAL_SPI_IRQHandler+0xc8>
          hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 800f846:	4b12      	ldr	r3, [pc, #72]	@ (800f890 <HAL_SPI_IRQHandler+0x100>)
 800f848:	6503      	str	r3, [r0, #80]	@ 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 800f84a:	f7fc faeb 	bl	800be24 <HAL_DMA_Abort_IT>
 800f84e:	b118      	cbz	r0, 800f858 <HAL_SPI_IRQHandler+0xc8>
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 800f850:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800f852:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800f856:	6563      	str	r3, [r4, #84]	@ 0x54
}
 800f858:	b004      	add	sp, #16
 800f85a:	bd10      	pop	{r4, pc}
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 800f85c:	f011 0f40 	tst.w	r1, #64	@ 0x40
 800f860:	d0a1      	beq.n	800f7a6 <HAL_SPI_IRQHandler+0x16>
    hspi->RxISR(hspi);
 800f862:	6c03      	ldr	r3, [r0, #64]	@ 0x40
}
 800f864:	b004      	add	sp, #16
 800f866:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    hspi->TxISR(hspi);
 800f86a:	4718      	bx	r3
 800f86c:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800f86e:	4620      	mov	r0, r4
}
 800f870:	b004      	add	sp, #16
 800f872:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    hspi->TxISR(hspi);
 800f876:	4718      	bx	r3
        HAL_SPI_ErrorCallback(hspi);
 800f878:	4620      	mov	r0, r4
 800f87a:	f7ff feb5 	bl	800f5e8 <HAL_SPI_ErrorCallback>
 800f87e:	e7eb      	b.n	800f858 <HAL_SPI_IRQHandler+0xc8>
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800f880:	2300      	movs	r3, #0
 800f882:	9301      	str	r3, [sp, #4]
 800f884:	68d3      	ldr	r3, [r2, #12]
 800f886:	9301      	str	r3, [sp, #4]
 800f888:	6893      	ldr	r3, [r2, #8]
 800f88a:	9301      	str	r3, [sp, #4]
 800f88c:	9b01      	ldr	r3, [sp, #4]
        return;
 800f88e:	e7e3      	b.n	800f858 <HAL_SPI_IRQHandler+0xc8>
 800f890:	0800f895 	.word	0x0800f895

0800f894 <SPI_DMAAbortOnError>:
{
 800f894:	b508      	push	{r3, lr}
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 800f896:	6b80      	ldr	r0, [r0, #56]	@ 0x38
  hspi->RxXferCount = 0U;
 800f898:	2300      	movs	r3, #0
 800f89a:	87c3      	strh	r3, [r0, #62]	@ 0x3e
  hspi->TxXferCount = 0U;
 800f89c:	86c3      	strh	r3, [r0, #54]	@ 0x36
  HAL_SPI_ErrorCallback(hspi);
 800f89e:	f7ff fea3 	bl	800f5e8 <HAL_SPI_ErrorCallback>
}
 800f8a2:	bd08      	pop	{r3, pc}

0800f8a4 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 800f8a4:	4770      	bx	lr
 800f8a6:	bf00      	nop

0800f8a8 <HAL_TIM_Base_Init>:
  if (htim == NULL)
 800f8a8:	2800      	cmp	r0, #0
 800f8aa:	f000 808f 	beq.w	800f9cc <HAL_TIM_Base_Init+0x124>
{
 800f8ae:	b538      	push	{r3, r4, r5, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
 800f8b0:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800f8b4:	4604      	mov	r4, r0
 800f8b6:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800f8ba:	2b00      	cmp	r3, #0
 800f8bc:	f000 8081 	beq.w	800f9c2 <HAL_TIM_Base_Init+0x11a>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800f8c0:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800f8c2:	4943      	ldr	r1, [pc, #268]	@ (800f9d0 <HAL_TIM_Base_Init+0x128>)
  htim->State = HAL_TIM_STATE_BUSY;
 800f8c4:	2302      	movs	r3, #2
 800f8c6:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800f8ca:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800f8cc:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800f8ce:	d064      	beq.n	800f99a <HAL_TIM_Base_Init+0xf2>
 800f8d0:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
 800f8d4:	d030      	beq.n	800f938 <HAL_TIM_Base_Init+0x90>
 800f8d6:	f5a1 417c 	sub.w	r1, r1, #64512	@ 0xfc00
 800f8da:	428a      	cmp	r2, r1
 800f8dc:	d02c      	beq.n	800f938 <HAL_TIM_Base_Init+0x90>
 800f8de:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
 800f8e2:	428a      	cmp	r2, r1
 800f8e4:	d028      	beq.n	800f938 <HAL_TIM_Base_Init+0x90>
 800f8e6:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
 800f8ea:	428a      	cmp	r2, r1
 800f8ec:	d024      	beq.n	800f938 <HAL_TIM_Base_Init+0x90>
 800f8ee:	f501 4178 	add.w	r1, r1, #63488	@ 0xf800
 800f8f2:	428a      	cmp	r2, r1
 800f8f4:	d051      	beq.n	800f99a <HAL_TIM_Base_Init+0xf2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800f8f6:	f501 5170 	add.w	r1, r1, #15360	@ 0x3c00
 800f8fa:	428a      	cmp	r2, r1
 800f8fc:	d020      	beq.n	800f940 <HAL_TIM_Base_Init+0x98>
 800f8fe:	4935      	ldr	r1, [pc, #212]	@ (800f9d4 <HAL_TIM_Base_Init+0x12c>)
 800f900:	428a      	cmp	r2, r1
 800f902:	d01d      	beq.n	800f940 <HAL_TIM_Base_Init+0x98>
 800f904:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
 800f908:	428a      	cmp	r2, r1
 800f90a:	d019      	beq.n	800f940 <HAL_TIM_Base_Init+0x98>
 800f90c:	f5a1 3198 	sub.w	r1, r1, #77824	@ 0x13000
 800f910:	428a      	cmp	r2, r1
 800f912:	d015      	beq.n	800f940 <HAL_TIM_Base_Init+0x98>
 800f914:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
 800f918:	428a      	cmp	r2, r1
 800f91a:	d011      	beq.n	800f940 <HAL_TIM_Base_Init+0x98>
 800f91c:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
 800f920:	428a      	cmp	r2, r1
 800f922:	d00d      	beq.n	800f940 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800f924:	69a5      	ldr	r5, [r4, #24]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800f926:	6861      	ldr	r1, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800f928:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800f92a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800f92e:	432b      	orrs	r3, r5
  TIMx->CR1 = tmpcr1;
 800f930:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800f932:	62d0      	str	r0, [r2, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
 800f934:	6291      	str	r1, [r2, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800f936:	e010      	b.n	800f95a <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800f938:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800f93a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 800f93e:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800f940:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800f942:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800f944:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800f948:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800f94a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800f94e:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800f950:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800f952:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800f954:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800f956:	62d0      	str	r0, [r2, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
 800f958:	6291      	str	r1, [r2, #40]	@ 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800f95a:	2301      	movs	r3, #1
 800f95c:	6153      	str	r3, [r2, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 800f95e:	6913      	ldr	r3, [r2, #16]
 800f960:	07db      	lsls	r3, r3, #31
 800f962:	d503      	bpl.n	800f96c <HAL_TIM_Base_Init+0xc4>
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 800f964:	6913      	ldr	r3, [r2, #16]
 800f966:	f023 0301 	bic.w	r3, r3, #1
 800f96a:	6113      	str	r3, [r2, #16]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800f96c:	2301      	movs	r3, #1
 800f96e:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800f972:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 800f976:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 800f97a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 800f97e:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800f982:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800f986:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800f98a:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 800f98e:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
  htim->State = HAL_TIM_STATE_READY;
 800f992:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  return HAL_OK;
 800f996:	2000      	movs	r0, #0
}
 800f998:	bd38      	pop	{r3, r4, r5, pc}
    tmpcr1 |= Structure->CounterMode;
 800f99a:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800f99c:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800f99e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 800f9a2:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800f9a4:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800f9a8:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800f9aa:	69a1      	ldr	r1, [r4, #24]
 800f9ac:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800f9b0:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800f9b2:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800f9b4:	68e3      	ldr	r3, [r4, #12]
 800f9b6:	62d3      	str	r3, [r2, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
 800f9b8:	6863      	ldr	r3, [r4, #4]
 800f9ba:	6293      	str	r3, [r2, #40]	@ 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800f9bc:	6963      	ldr	r3, [r4, #20]
 800f9be:	6313      	str	r3, [r2, #48]	@ 0x30
 800f9c0:	e7cb      	b.n	800f95a <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800f9c2:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 800f9c6:	f7ff ff6d 	bl	800f8a4 <HAL_TIM_Base_MspInit>
 800f9ca:	e779      	b.n	800f8c0 <HAL_TIM_Base_Init+0x18>
    return HAL_ERROR;
 800f9cc:	2001      	movs	r0, #1
}
 800f9ce:	4770      	bx	lr
 800f9d0:	40010000 	.word	0x40010000
 800f9d4:	40014400 	.word	0x40014400

0800f9d8 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800f9d8:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800f9dc:	2b01      	cmp	r3, #1
 800f9de:	d12f      	bne.n	800fa40 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800f9e0:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800f9e2:	4918      	ldr	r1, [pc, #96]	@ (800fa44 <HAL_TIM_Base_Start_IT+0x6c>)
  htim->State = HAL_TIM_STATE_BUSY;
 800f9e4:	2202      	movs	r2, #2
 800f9e6:	f880 203d 	strb.w	r2, [r0, #61]	@ 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800f9ea:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800f9ec:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800f9ee:	f042 0201 	orr.w	r2, r2, #1
 800f9f2:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800f9f4:	d019      	beq.n	800fa2a <HAL_TIM_Base_Start_IT+0x52>
 800f9f6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800f9fa:	d016      	beq.n	800fa2a <HAL_TIM_Base_Start_IT+0x52>
 800f9fc:	4a12      	ldr	r2, [pc, #72]	@ (800fa48 <HAL_TIM_Base_Start_IT+0x70>)
 800f9fe:	4293      	cmp	r3, r2
 800fa00:	d013      	beq.n	800fa2a <HAL_TIM_Base_Start_IT+0x52>
 800fa02:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800fa06:	4293      	cmp	r3, r2
 800fa08:	d00f      	beq.n	800fa2a <HAL_TIM_Base_Start_IT+0x52>
 800fa0a:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800fa0e:	4293      	cmp	r3, r2
 800fa10:	d00b      	beq.n	800fa2a <HAL_TIM_Base_Start_IT+0x52>
 800fa12:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 800fa16:	4293      	cmp	r3, r2
 800fa18:	d007      	beq.n	800fa2a <HAL_TIM_Base_Start_IT+0x52>
 800fa1a:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 800fa1e:	4293      	cmp	r3, r2
 800fa20:	d003      	beq.n	800fa2a <HAL_TIM_Base_Start_IT+0x52>
 800fa22:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 800fa26:	4293      	cmp	r3, r2
 800fa28:	d104      	bne.n	800fa34 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800fa2a:	689a      	ldr	r2, [r3, #8]
 800fa2c:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800fa30:	2a06      	cmp	r2, #6
 800fa32:	d003      	beq.n	800fa3c <HAL_TIM_Base_Start_IT+0x64>
      __HAL_TIM_ENABLE(htim);
 800fa34:	681a      	ldr	r2, [r3, #0]
 800fa36:	f042 0201 	orr.w	r2, r2, #1
 800fa3a:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 800fa3c:	2000      	movs	r0, #0
 800fa3e:	4770      	bx	lr
    return HAL_ERROR;
 800fa40:	2001      	movs	r0, #1
}
 800fa42:	4770      	bx	lr
 800fa44:	40010000 	.word	0x40010000
 800fa48:	40000400 	.word	0x40000400

0800fa4c <HAL_TIM_OC_DelayElapsedCallback>:
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 800fa4c:	4770      	bx	lr
 800fa4e:	bf00      	nop

0800fa50 <HAL_TIM_IC_CaptureCallback>:
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 800fa50:	4770      	bx	lr
 800fa52:	bf00      	nop

0800fa54 <HAL_TIM_PWM_PulseFinishedCallback>:
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 800fa54:	4770      	bx	lr
 800fa56:	bf00      	nop

0800fa58 <HAL_TIM_TriggerCallback>:
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 800fa58:	4770      	bx	lr
 800fa5a:	bf00      	nop

0800fa5c <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
 800fa5c:	6803      	ldr	r3, [r0, #0]
{
 800fa5e:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 800fa60:	68de      	ldr	r6, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 800fa62:	691d      	ldr	r5, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 800fa64:	07a9      	lsls	r1, r5, #30
{
 800fa66:	4604      	mov	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 800fa68:	d501      	bpl.n	800fa6e <HAL_TIM_IRQHandler+0x12>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 800fa6a:	07b2      	lsls	r2, r6, #30
 800fa6c:	d451      	bmi.n	800fb12 <HAL_TIM_IRQHandler+0xb6>
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 800fa6e:	0769      	lsls	r1, r5, #29
 800fa70:	d501      	bpl.n	800fa76 <HAL_TIM_IRQHandler+0x1a>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 800fa72:	0772      	lsls	r2, r6, #29
 800fa74:	d43a      	bmi.n	800faec <HAL_TIM_IRQHandler+0x90>
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 800fa76:	072b      	lsls	r3, r5, #28
 800fa78:	d501      	bpl.n	800fa7e <HAL_TIM_IRQHandler+0x22>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 800fa7a:	0730      	lsls	r0, r6, #28
 800fa7c:	d424      	bmi.n	800fac8 <HAL_TIM_IRQHandler+0x6c>
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 800fa7e:	06ea      	lsls	r2, r5, #27
 800fa80:	d501      	bpl.n	800fa86 <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 800fa82:	06f3      	lsls	r3, r6, #27
 800fa84:	d410      	bmi.n	800faa8 <HAL_TIM_IRQHandler+0x4c>
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 800fa86:	07e8      	lsls	r0, r5, #31
 800fa88:	d501      	bpl.n	800fa8e <HAL_TIM_IRQHandler+0x32>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 800fa8a:	07f1      	lsls	r1, r6, #31
 800fa8c:	d457      	bmi.n	800fb3e <HAL_TIM_IRQHandler+0xe2>
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 800fa8e:	062a      	lsls	r2, r5, #24
 800fa90:	d501      	bpl.n	800fa96 <HAL_TIM_IRQHandler+0x3a>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 800fa92:	0633      	lsls	r3, r6, #24
 800fa94:	d45b      	bmi.n	800fb4e <HAL_TIM_IRQHandler+0xf2>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 800fa96:	0668      	lsls	r0, r5, #25
 800fa98:	d501      	bpl.n	800fa9e <HAL_TIM_IRQHandler+0x42>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 800fa9a:	0671      	lsls	r1, r6, #25
 800fa9c:	d45f      	bmi.n	800fb5e <HAL_TIM_IRQHandler+0x102>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 800fa9e:	06aa      	lsls	r2, r5, #26
 800faa0:	d501      	bpl.n	800faa6 <HAL_TIM_IRQHandler+0x4a>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 800faa2:	06b3      	lsls	r3, r6, #26
 800faa4:	d442      	bmi.n	800fb2c <HAL_TIM_IRQHandler+0xd0>
}
 800faa6:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 800faa8:	6823      	ldr	r3, [r4, #0]
 800faaa:	f06f 0210 	mvn.w	r2, #16
 800faae:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800fab0:	2208      	movs	r2, #8
 800fab2:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800fab4:	69db      	ldr	r3, [r3, #28]
 800fab6:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800faba:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800fabc:	d063      	beq.n	800fb86 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 800fabe:	f7ff ffc7 	bl	800fa50 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800fac2:	2300      	movs	r3, #0
 800fac4:	7723      	strb	r3, [r4, #28]
 800fac6:	e7de      	b.n	800fa86 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 800fac8:	6823      	ldr	r3, [r4, #0]
 800faca:	f06f 0208 	mvn.w	r2, #8
 800face:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800fad0:	2204      	movs	r2, #4
 800fad2:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800fad4:	69db      	ldr	r3, [r3, #28]
 800fad6:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800fad8:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800fada:	d151      	bne.n	800fb80 <HAL_TIM_IRQHandler+0x124>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800fadc:	f7ff ffb6 	bl	800fa4c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800fae0:	4620      	mov	r0, r4
 800fae2:	f7ff ffb7 	bl	800fa54 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800fae6:	2300      	movs	r3, #0
 800fae8:	7723      	strb	r3, [r4, #28]
 800faea:	e7c8      	b.n	800fa7e <HAL_TIM_IRQHandler+0x22>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 800faec:	6823      	ldr	r3, [r4, #0]
 800faee:	f06f 0204 	mvn.w	r2, #4
 800faf2:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800faf4:	2202      	movs	r2, #2
 800faf6:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800faf8:	699b      	ldr	r3, [r3, #24]
 800fafa:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800fafe:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800fb00:	d13b      	bne.n	800fb7a <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800fb02:	f7ff ffa3 	bl	800fa4c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800fb06:	4620      	mov	r0, r4
 800fb08:	f7ff ffa4 	bl	800fa54 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800fb0c:	2300      	movs	r3, #0
 800fb0e:	7723      	strb	r3, [r4, #28]
 800fb10:	e7b1      	b.n	800fa76 <HAL_TIM_IRQHandler+0x1a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 800fb12:	f06f 0202 	mvn.w	r2, #2
 800fb16:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800fb18:	2201      	movs	r2, #1
 800fb1a:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800fb1c:	699b      	ldr	r3, [r3, #24]
 800fb1e:	079b      	lsls	r3, r3, #30
 800fb20:	d025      	beq.n	800fb6e <HAL_TIM_IRQHandler+0x112>
          HAL_TIM_IC_CaptureCallback(htim);
 800fb22:	f7ff ff95 	bl	800fa50 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800fb26:	2300      	movs	r3, #0
 800fb28:	7723      	strb	r3, [r4, #28]
 800fb2a:	e7a0      	b.n	800fa6e <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 800fb2c:	6823      	ldr	r3, [r4, #0]
 800fb2e:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800fb32:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 800fb34:	611a      	str	r2, [r3, #16]
}
 800fb36:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
 800fb3a:	f000 b82b 	b.w	800fb94 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 800fb3e:	6823      	ldr	r3, [r4, #0]
 800fb40:	f06f 0201 	mvn.w	r2, #1
 800fb44:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800fb46:	4620      	mov	r0, r4
 800fb48:	f7f4 f924 	bl	8003d94 <HAL_TIM_PeriodElapsedCallback>
 800fb4c:	e79f      	b.n	800fa8e <HAL_TIM_IRQHandler+0x32>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 800fb4e:	6823      	ldr	r3, [r4, #0]
 800fb50:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 800fb54:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800fb56:	4620      	mov	r0, r4
 800fb58:	f000 f81e 	bl	800fb98 <HAL_TIMEx_BreakCallback>
 800fb5c:	e79b      	b.n	800fa96 <HAL_TIM_IRQHandler+0x3a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 800fb5e:	6823      	ldr	r3, [r4, #0]
 800fb60:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 800fb64:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800fb66:	4620      	mov	r0, r4
 800fb68:	f7ff ff76 	bl	800fa58 <HAL_TIM_TriggerCallback>
 800fb6c:	e797      	b.n	800fa9e <HAL_TIM_IRQHandler+0x42>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800fb6e:	f7ff ff6d 	bl	800fa4c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800fb72:	4620      	mov	r0, r4
 800fb74:	f7ff ff6e 	bl	800fa54 <HAL_TIM_PWM_PulseFinishedCallback>
 800fb78:	e7d5      	b.n	800fb26 <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800fb7a:	f7ff ff69 	bl	800fa50 <HAL_TIM_IC_CaptureCallback>
 800fb7e:	e7c5      	b.n	800fb0c <HAL_TIM_IRQHandler+0xb0>
        HAL_TIM_IC_CaptureCallback(htim);
 800fb80:	f7ff ff66 	bl	800fa50 <HAL_TIM_IC_CaptureCallback>
 800fb84:	e7af      	b.n	800fae6 <HAL_TIM_IRQHandler+0x8a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800fb86:	f7ff ff61 	bl	800fa4c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800fb8a:	4620      	mov	r0, r4
 800fb8c:	f7ff ff62 	bl	800fa54 <HAL_TIM_PWM_PulseFinishedCallback>
 800fb90:	e797      	b.n	800fac2 <HAL_TIM_IRQHandler+0x66>
 800fb92:	bf00      	nop

0800fb94 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 800fb94:	4770      	bx	lr
 800fb96:	bf00      	nop

0800fb98 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 800fb98:	4770      	bx	lr
 800fb9a:	bf00      	nop

0800fb9c <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800fb9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800fba0:	e9d1 3e07 	ldrd	r3, lr, [r1, #28]
 800fba4:	e9d1 8200 	ldrd	r8, r2, [r1]
 800fba8:	f8d1 c024 	ldr.w	ip, [r1, #36]	@ 0x24
 800fbac:	ea43 030e 	orr.w	r3, r3, lr
 800fbb0:	e9d1 7602 	ldrd	r7, r6, [r1, #8]
 800fbb4:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800fbb8:	ea43 030c 	orr.w	r3, r3, ip
 800fbbc:	6989      	ldr	r1, [r1, #24]
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800fbbe:	f1b8 0f00 	cmp.w	r8, #0
 800fbc2:	d10f      	bne.n	800fbe4 <FMC_SDRAM_Init+0x48>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800fbc4:	4313      	orrs	r3, r2
 800fbc6:	433b      	orrs	r3, r7
 800fbc8:	6802      	ldr	r2, [r0, #0]
 800fbca:	4333      	orrs	r3, r6
 800fbcc:	432b      	orrs	r3, r5
 800fbce:	4323      	orrs	r3, r4
 800fbd0:	f422 42ff 	bic.w	r2, r2, #32640	@ 0x7f80
 800fbd4:	430b      	orrs	r3, r1
 800fbd6:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 800fbda:	4313      	orrs	r3, r2
 800fbdc:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800fbde:	2000      	movs	r0, #0
 800fbe0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800fbe4:	433a      	orrs	r2, r7
 800fbe6:	4332      	orrs	r2, r6
 800fbe8:	432a      	orrs	r2, r5
 800fbea:	4322      	orrs	r2, r4
 800fbec:	430a      	orrs	r2, r1
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800fbee:	6801      	ldr	r1, [r0, #0]
 800fbf0:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 800fbf4:	430b      	orrs	r3, r1
 800fbf6:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800fbf8:	6843      	ldr	r3, [r0, #4]
 800fbfa:	f423 43ff 	bic.w	r3, r3, #32640	@ 0x7f80
 800fbfe:	f023 037f 	bic.w	r3, r3, #127	@ 0x7f
 800fc02:	4313      	orrs	r3, r2
 800fc04:	6043      	str	r3, [r0, #4]
}
 800fc06:	2000      	movs	r0, #0
 800fc08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fc0c <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800fc0c:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800fc0e:	68cc      	ldr	r4, [r1, #12]
 800fc10:	694b      	ldr	r3, [r1, #20]
 800fc12:	688d      	ldr	r5, [r1, #8]
 800fc14:	698f      	ldr	r7, [r1, #24]
 800fc16:	680e      	ldr	r6, [r1, #0]
 800fc18:	3c01      	subs	r4, #1
 800fc1a:	ea4f 3e04 	mov.w	lr, r4, lsl #12
 800fc1e:	684c      	ldr	r4, [r1, #4]
 800fc20:	3c01      	subs	r4, #1
 800fc22:	ea4f 1c04 	mov.w	ip, r4, lsl #4
 800fc26:	690c      	ldr	r4, [r1, #16]
 800fc28:	3b01      	subs	r3, #1
 800fc2a:	3d01      	subs	r5, #1
 800fc2c:	3c01      	subs	r4, #1
 800fc2e:	1e79      	subs	r1, r7, #1
 800fc30:	051b      	lsls	r3, r3, #20
 800fc32:	022d      	lsls	r5, r5, #8
 800fc34:	0424      	lsls	r4, r4, #16
 800fc36:	3e01      	subs	r6, #1
 800fc38:	0609      	lsls	r1, r1, #24
  if (Bank == FMC_SDRAM_BANK1)
 800fc3a:	b972      	cbnz	r2, 800fc5a <FMC_SDRAM_Timing_Init+0x4e>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800fc3c:	ea4e 0303 	orr.w	r3, lr, r3
 800fc40:	4333      	orrs	r3, r6
 800fc42:	ea43 030c 	orr.w	r3, r3, ip
 800fc46:	6882      	ldr	r2, [r0, #8]
 800fc48:	432b      	orrs	r3, r5
 800fc4a:	4323      	orrs	r3, r4
 800fc4c:	430b      	orrs	r3, r1
 800fc4e:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 800fc52:	4313      	orrs	r3, r2
 800fc54:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800fc56:	2000      	movs	r0, #0
 800fc58:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800fc5a:	6882      	ldr	r2, [r0, #8]
 800fc5c:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 800fc60:	ea4e 0e03 	orr.w	lr, lr, r3
 800fc64:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 800fc68:	ea42 020e 	orr.w	r2, r2, lr
 800fc6c:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800fc6e:	ea4c 0305 	orr.w	r3, ip, r5
 800fc72:	68c2      	ldr	r2, [r0, #12]
 800fc74:	4333      	orrs	r3, r6
 800fc76:	4323      	orrs	r3, r4
 800fc78:	430b      	orrs	r3, r1
 800fc7a:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 800fc7e:	4313      	orrs	r3, r2
 800fc80:	60c3      	str	r3, [r0, #12]
}
 800fc82:	2000      	movs	r0, #0
 800fc84:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fc86:	bf00      	nop

0800fc88 <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
 800fc88:	4603      	mov	r3, r0
 800fc8a:	b410      	push	{r4}
 800fc8c:	eb00 0281 	add.w	r2, r0, r1, lsl #2
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 800fc90:	f44f 7434 	mov.w	r4, #720	@ 0x2d0
 800fc94:	f843 4021 	str.w	r4, [r3, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
 800fc98:	2000      	movs	r0, #0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
 800fc9a:	f06f 4170 	mvn.w	r1, #4026531840	@ 0xf0000000
 800fc9e:	6091      	str	r1, [r2, #8]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
 800fca0:	f85d 4b04 	ldr.w	r4, [sp], #4
  Device->SDCMR      = 0x00000000U;
 800fca4:	6118      	str	r0, [r3, #16]
  Device->SDRTR      = 0x00000000U;
 800fca6:	6158      	str	r0, [r3, #20]
  Device->SDSR       = 0x00000000U;
 800fca8:	6198      	str	r0, [r3, #24]
}
 800fcaa:	4770      	bx	lr

0800fcac <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800fcac:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800fcae:	680b      	ldr	r3, [r1, #0]
{
 800fcb0:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800fcb2:	684a      	ldr	r2, [r1, #4]
{
 800fcb4:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800fcb6:	4313      	orrs	r3, r2
 800fcb8:	6900      	ldr	r0, [r0, #16]
 800fcba:	68ca      	ldr	r2, [r1, #12]
 800fcbc:	0d80      	lsrs	r0, r0, #22
 800fcbe:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800fcc2:	688a      	ldr	r2, [r1, #8]
 800fcc4:	0580      	lsls	r0, r0, #22
 800fcc6:	4303      	orrs	r3, r0
 800fcc8:	3a01      	subs	r2, #1
 800fcca:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800fcce:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800fcd0:	f7fb feb2 	bl	800ba38 <HAL_GetTick>

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800fcd4:	1c6e      	adds	r6, r5, #1
 800fcd6:	d104      	bne.n	800fce2 <FMC_SDRAM_SendCommand+0x36>
 800fcd8:	69a3      	ldr	r3, [r4, #24]
 800fcda:	069a      	lsls	r2, r3, #26
 800fcdc:	d4fc      	bmi.n	800fcd8 <FMC_SDRAM_SendCommand+0x2c>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800fcde:	2000      	movs	r0, #0
}
 800fce0:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800fce2:	69a3      	ldr	r3, [r4, #24]
 800fce4:	069b      	lsls	r3, r3, #26
 800fce6:	d5fa      	bpl.n	800fcde <FMC_SDRAM_SendCommand+0x32>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800fce8:	4606      	mov	r6, r0
 800fcea:	b145      	cbz	r5, 800fcfe <FMC_SDRAM_SendCommand+0x52>
 800fcec:	f7fb fea4 	bl	800ba38 <HAL_GetTick>
 800fcf0:	1b80      	subs	r0, r0, r6
 800fcf2:	42a8      	cmp	r0, r5
 800fcf4:	d803      	bhi.n	800fcfe <FMC_SDRAM_SendCommand+0x52>
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800fcf6:	69a3      	ldr	r3, [r4, #24]
 800fcf8:	0699      	lsls	r1, r3, #26
 800fcfa:	d4f7      	bmi.n	800fcec <FMC_SDRAM_SendCommand+0x40>
 800fcfc:	e7ef      	b.n	800fcde <FMC_SDRAM_SendCommand+0x32>
        return HAL_TIMEOUT;
 800fcfe:	2003      	movs	r0, #3
}
 800fd00:	bd70      	pop	{r4, r5, r6, pc}
 800fd02:	bf00      	nop

0800fd04 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800fd04:	6943      	ldr	r3, [r0, #20]
 800fd06:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
{
 800fd0a:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800fd0c:	f023 033e 	bic.w	r3, r3, #62	@ 0x3e
 800fd10:	ea43 0341 	orr.w	r3, r3, r1, lsl #1

  return HAL_OK;
}
 800fd14:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800fd16:	6153      	str	r3, [r2, #20]
}
 800fd18:	4770      	bx	lr
 800fd1a:	bf00      	nop

0800fd1c <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800fd1c:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800fd1e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800fd22:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800fd24:	f002 faec 	bl	8012300 <xTaskGetSchedulerState>
 800fd28:	2801      	cmp	r0, #1
 800fd2a:	d100      	bne.n	800fd2e <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800fd2c:	bd08      	pop	{r3, pc}
 800fd2e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800fd32:	f000 bc2f 	b.w	8010594 <xPortSysTickHandler>
 800fd36:	bf00      	nop

0800fd38 <osKernelInitialize>:
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800fd38:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800fd3c:	b92b      	cbnz	r3, 800fd4a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800fd3e:	4b06      	ldr	r3, [pc, #24]	@ (800fd58 <osKernelInitialize+0x20>)
 800fd40:	6818      	ldr	r0, [r3, #0]
 800fd42:	b928      	cbnz	r0, 800fd50 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800fd44:	2201      	movs	r2, #1
 800fd46:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800fd48:	4770      	bx	lr
    stat = osErrorISR;
 800fd4a:	f06f 0005 	mvn.w	r0, #5
 800fd4e:	4770      	bx	lr
    } else {
      stat = osError;
 800fd50:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800fd54:	4770      	bx	lr
 800fd56:	bf00      	nop
 800fd58:	20005d68 	.word	0x20005d68

0800fd5c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800fd5c:	b510      	push	{r4, lr}
 800fd5e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800fd62:	b974      	cbnz	r4, 800fd82 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800fd64:	4b08      	ldr	r3, [pc, #32]	@ (800fd88 <osKernelStart+0x2c>)
 800fd66:	681a      	ldr	r2, [r3, #0]
 800fd68:	2a01      	cmp	r2, #1
 800fd6a:	d107      	bne.n	800fd7c <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800fd6c:	4907      	ldr	r1, [pc, #28]	@ (800fd8c <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800fd6e:	2202      	movs	r2, #2
 800fd70:	77cc      	strb	r4, [r1, #31]
 800fd72:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800fd74:	f002 f878 	bl	8011e68 <vTaskStartScheduler>
      stat = osOK;
 800fd78:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800fd7a:	bd10      	pop	{r4, pc}
      stat = osError;
 800fd7c:	f04f 30ff 	mov.w	r0, #4294967295
}
 800fd80:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800fd82:	f06f 0005 	mvn.w	r0, #5
}
 800fd86:	bd10      	pop	{r4, pc}
 800fd88:	20005d68 	.word	0x20005d68
 800fd8c:	e000ed00 	.word	0xe000ed00

0800fd90 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800fd90:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fd92:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800fd94:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800fd96:	4614      	mov	r4, r2
  hTask = NULL;
 800fd98:	9505      	str	r5, [sp, #20]
 800fd9a:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800fd9e:	b112      	cbz	r2, 800fda6 <osThreadNew+0x16>
      if (attr->priority != osPriorityNone) {
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
        return (NULL);
 800fda0:	2000      	movs	r0, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800fda2:	b007      	add	sp, #28
 800fda4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (func != NULL)) {
 800fda6:	2800      	cmp	r0, #0
 800fda8:	d0fa      	beq.n	800fda0 <osThreadNew+0x10>
    if (attr != NULL) {
 800fdaa:	b304      	cbz	r4, 800fdee <osThreadNew+0x5e>
      if (attr->priority != osPriorityNone) {
 800fdac:	69a3      	ldr	r3, [r4, #24]
 800fdae:	b9d3      	cbnz	r3, 800fde6 <osThreadNew+0x56>
 800fdb0:	2318      	movs	r3, #24
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800fdb2:	6862      	ldr	r2, [r4, #4]
 800fdb4:	07d2      	lsls	r2, r2, #31
 800fdb6:	d4f3      	bmi.n	800fda0 <osThreadNew+0x10>
      if (attr->stack_size > 0U) {
 800fdb8:	6965      	ldr	r5, [r4, #20]
 800fdba:	b32d      	cbz	r5, 800fe08 <osThreadNew+0x78>
        stack = attr->stack_size / sizeof(StackType_t);
 800fdbc:	08aa      	lsrs	r2, r5, #2
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800fdbe:	68a6      	ldr	r6, [r4, #8]
      if (attr->name != NULL) {
 800fdc0:	f8d4 c000 	ldr.w	ip, [r4]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800fdc4:	68e7      	ldr	r7, [r4, #12]
 800fdc6:	b30e      	cbz	r6, 800fe0c <osThreadNew+0x7c>
 800fdc8:	2fab      	cmp	r7, #171	@ 0xab
 800fdca:	d9e9      	bls.n	800fda0 <osThreadNew+0x10>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800fdcc:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800fdce:	2c00      	cmp	r4, #0
 800fdd0:	d0e6      	beq.n	800fda0 <osThreadNew+0x10>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800fdd2:	2d00      	cmp	r5, #0
 800fdd4:	d0e4      	beq.n	800fda0 <osThreadNew+0x10>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800fdd6:	9300      	str	r3, [sp, #0]
 800fdd8:	e9cd 4601 	strd	r4, r6, [sp, #4]
 800fddc:	460b      	mov	r3, r1
 800fdde:	4661      	mov	r1, ip
 800fde0:	f001 ff82 	bl	8011ce8 <xTaskCreateStatic>
 800fde4:	e7dd      	b.n	800fda2 <osThreadNew+0x12>
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800fde6:	1e5d      	subs	r5, r3, #1
 800fde8:	2d37      	cmp	r5, #55	@ 0x37
 800fdea:	d9e2      	bls.n	800fdb2 <osThreadNew+0x22>
 800fdec:	e7d8      	b.n	800fda0 <osThreadNew+0x10>
 800fdee:	2280      	movs	r2, #128	@ 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800fdf0:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800fdf2:	9300      	str	r3, [sp, #0]
 800fdf4:	460b      	mov	r3, r1
 800fdf6:	4621      	mov	r1, r4
 800fdf8:	ac05      	add	r4, sp, #20
 800fdfa:	9401      	str	r4, [sp, #4]
 800fdfc:	f001 ffae 	bl	8011d5c <xTaskCreate>
 800fe00:	2801      	cmp	r0, #1
 800fe02:	d1cd      	bne.n	800fda0 <osThreadNew+0x10>
  return ((osThreadId_t)hTask);
 800fe04:	9805      	ldr	r0, [sp, #20]
 800fe06:	e7cc      	b.n	800fda2 <osThreadNew+0x12>
    stack = configMINIMAL_STACK_SIZE;
 800fe08:	2280      	movs	r2, #128	@ 0x80
 800fe0a:	e7d8      	b.n	800fdbe <osThreadNew+0x2e>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800fe0c:	2f00      	cmp	r7, #0
 800fe0e:	d1c7      	bne.n	800fda0 <osThreadNew+0x10>
 800fe10:	6924      	ldr	r4, [r4, #16]
 800fe12:	2c00      	cmp	r4, #0
 800fe14:	d1c4      	bne.n	800fda0 <osThreadNew+0x10>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800fe16:	b292      	uxth	r2, r2
 800fe18:	4664      	mov	r4, ip
 800fe1a:	e7ea      	b.n	800fdf2 <osThreadNew+0x62>

0800fe1c <osDelay>:
 800fe1c:	f3ef 8205 	mrs	r2, IPSR
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800fe20:	b93a      	cbnz	r2, 800fe32 <osDelay+0x16>
osStatus_t osDelay (uint32_t ticks) {
 800fe22:	b508      	push	{r3, lr}
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800fe24:	b908      	cbnz	r0, 800fe2a <osDelay+0xe>
    stat = osOK;
 800fe26:	2000      	movs	r0, #0
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800fe28:	bd08      	pop	{r3, pc}
      vTaskDelay(ticks);
 800fe2a:	f001 ffc7 	bl	8011dbc <vTaskDelay>
    stat = osOK;
 800fe2e:	2000      	movs	r0, #0
}
 800fe30:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 800fe32:	f06f 0005 	mvn.w	r0, #5
}
 800fe36:	4770      	bx	lr

0800fe38 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800fe38:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fe3a:	b083      	sub	sp, #12
 800fe3c:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800fe40:	b956      	cbnz	r6, 800fe58 <osSemaphoreNew+0x20>
 800fe42:	b148      	cbz	r0, 800fe58 <osSemaphoreNew+0x20>
 800fe44:	4288      	cmp	r0, r1
 800fe46:	460f      	mov	r7, r1
 800fe48:	d306      	bcc.n	800fe58 <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 800fe4a:	4615      	mov	r5, r2
 800fe4c:	b1fa      	cbz	r2, 800fe8e <osSemaphoreNew+0x56>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800fe4e:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800fe52:	b12a      	cbz	r2, 800fe60 <osSemaphoreNew+0x28>
 800fe54:	2b4f      	cmp	r3, #79	@ 0x4f
 800fe56:	d828      	bhi.n	800feaa <osSemaphoreNew+0x72>
  hSemaphore = NULL;
 800fe58:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800fe5a:	4620      	mov	r0, r4
 800fe5c:	b003      	add	sp, #12
 800fe5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800fe60:	2b00      	cmp	r3, #0
 800fe62:	d1f9      	bne.n	800fe58 <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 800fe64:	2801      	cmp	r0, #1
 800fe66:	d006      	beq.n	800fe76 <osSemaphoreNew+0x3e>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800fe68:	f000 fdd8 	bl	8010a1c <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800fe6c:	4604      	mov	r4, r0
 800fe6e:	2800      	cmp	r0, #0
 800fe70:	d0f2      	beq.n	800fe58 <osSemaphoreNew+0x20>
          name = attr->name;
 800fe72:	682d      	ldr	r5, [r5, #0]
 800fe74:	e012      	b.n	800fe9c <osSemaphoreNew+0x64>
            hSemaphore = xSemaphoreCreateBinary();
 800fe76:	2203      	movs	r2, #3
 800fe78:	2100      	movs	r1, #0
 800fe7a:	2001      	movs	r0, #1
 800fe7c:	f000 fd2c 	bl	80108d8 <xQueueGenericCreate>
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800fe80:	4604      	mov	r4, r0
 800fe82:	2800      	cmp	r0, #0
 800fe84:	d0e8      	beq.n	800fe58 <osSemaphoreNew+0x20>
 800fe86:	b9c7      	cbnz	r7, 800feba <osSemaphoreNew+0x82>
        if (attr != NULL) {
 800fe88:	2d00      	cmp	r5, #0
 800fe8a:	d1f2      	bne.n	800fe72 <osSemaphoreNew+0x3a>
 800fe8c:	e006      	b.n	800fe9c <osSemaphoreNew+0x64>
      if (max_count == 1U) {
 800fe8e:	2801      	cmp	r0, #1
 800fe90:	d0f1      	beq.n	800fe76 <osSemaphoreNew+0x3e>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800fe92:	f000 fdc3 	bl	8010a1c <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800fe96:	4604      	mov	r4, r0
 800fe98:	2800      	cmp	r0, #0
 800fe9a:	d0dd      	beq.n	800fe58 <osSemaphoreNew+0x20>
        vQueueAddToRegistry (hSemaphore, name);
 800fe9c:	4620      	mov	r0, r4
 800fe9e:	4629      	mov	r1, r5
 800fea0:	f001 fbec 	bl	801167c <vQueueAddToRegistry>
}
 800fea4:	4620      	mov	r0, r4
 800fea6:	b003      	add	sp, #12
 800fea8:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800feaa:	2801      	cmp	r0, #1
 800feac:	d010      	beq.n	800fed0 <osSemaphoreNew+0x98>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800feae:	f000 fd55 	bl	801095c <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800feb2:	4604      	mov	r4, r0
 800feb4:	2800      	cmp	r0, #0
 800feb6:	d1dc      	bne.n	800fe72 <osSemaphoreNew+0x3a>
 800feb8:	e7ce      	b.n	800fe58 <osSemaphoreNew+0x20>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800feba:	2300      	movs	r3, #0
 800febc:	461a      	mov	r2, r3
 800febe:	4619      	mov	r1, r3
 800fec0:	f000 fdf2 	bl	8010aa8 <xQueueGenericSend>
 800fec4:	2801      	cmp	r0, #1
 800fec6:	d0df      	beq.n	800fe88 <osSemaphoreNew+0x50>
            vSemaphoreDelete (hSemaphore);
 800fec8:	4620      	mov	r0, r4
 800feca:	f001 fb91 	bl	80115f0 <vQueueDelete>
      if (hSemaphore != NULL) {
 800fece:	e7c3      	b.n	800fe58 <osSemaphoreNew+0x20>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800fed0:	4613      	mov	r3, r2
 800fed2:	2203      	movs	r2, #3
 800fed4:	9200      	str	r2, [sp, #0]
 800fed6:	4631      	mov	r1, r6
 800fed8:	4632      	mov	r2, r6
 800feda:	f000 fc8d 	bl	80107f8 <xQueueGenericCreateStatic>
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800fede:	4604      	mov	r4, r0
 800fee0:	2800      	cmp	r0, #0
 800fee2:	d0b9      	beq.n	800fe58 <osSemaphoreNew+0x20>
 800fee4:	2f00      	cmp	r7, #0
 800fee6:	d0c4      	beq.n	800fe72 <osSemaphoreNew+0x3a>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800fee8:	4633      	mov	r3, r6
 800feea:	4632      	mov	r2, r6
 800feec:	4631      	mov	r1, r6
 800feee:	f000 fddb 	bl	8010aa8 <xQueueGenericSend>
 800fef2:	2801      	cmp	r0, #1
 800fef4:	d0bd      	beq.n	800fe72 <osSemaphoreNew+0x3a>
 800fef6:	e7e7      	b.n	800fec8 <osSemaphoreNew+0x90>

0800fef8 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800fef8:	b360      	cbz	r0, 800ff54 <osSemaphoreAcquire+0x5c>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800fefa:	b510      	push	{r4, lr}
 800fefc:	460c      	mov	r4, r1
 800fefe:	b082      	sub	sp, #8
 800ff00:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800ff04:	b1b3      	cbz	r3, 800ff34 <osSemaphoreAcquire+0x3c>
    if (timeout != 0U) {
 800ff06:	bb11      	cbnz	r1, 800ff4e <osSemaphoreAcquire+0x56>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800ff08:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800ff0a:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800ff0c:	f001 fb16 	bl	801153c <xQueueReceiveFromISR>
 800ff10:	2801      	cmp	r0, #1
 800ff12:	d118      	bne.n	800ff46 <osSemaphoreAcquire+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800ff14:	9b01      	ldr	r3, [sp, #4]
 800ff16:	b913      	cbnz	r3, 800ff1e <osSemaphoreAcquire+0x26>
  stat = osOK;
 800ff18:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800ff1a:	b002      	add	sp, #8
 800ff1c:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800ff1e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800ff22:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800ff26:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800ff2a:	f3bf 8f4f 	dsb	sy
 800ff2e:	f3bf 8f6f 	isb	sy
 800ff32:	e7f1      	b.n	800ff18 <osSemaphoreAcquire+0x20>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800ff34:	f001 f976 	bl	8011224 <xQueueSemaphoreTake>
 800ff38:	2801      	cmp	r0, #1
 800ff3a:	d0ed      	beq.n	800ff18 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800ff3c:	b11c      	cbz	r4, 800ff46 <osSemaphoreAcquire+0x4e>
        stat = osErrorTimeout;
 800ff3e:	f06f 0001 	mvn.w	r0, #1
}
 800ff42:	b002      	add	sp, #8
 800ff44:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800ff46:	f06f 0002 	mvn.w	r0, #2
}
 800ff4a:	b002      	add	sp, #8
 800ff4c:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800ff4e:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800ff52:	e7e2      	b.n	800ff1a <osSemaphoreAcquire+0x22>
    stat = osErrorParameter;
 800ff54:	f06f 0003 	mvn.w	r0, #3
}
 800ff58:	4770      	bx	lr
 800ff5a:	bf00      	nop

0800ff5c <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800ff5c:	b328      	cbz	r0, 800ffaa <osSemaphoreRelease+0x4e>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800ff5e:	b500      	push	{lr}
 800ff60:	b083      	sub	sp, #12
 800ff62:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800ff66:	b19b      	cbz	r3, 800ff90 <osSemaphoreRelease+0x34>
    yield = pdFALSE;
 800ff68:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800ff6a:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800ff6c:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800ff6e:	f000 ff7d 	bl	8010e6c <xQueueGiveFromISR>
 800ff72:	2801      	cmp	r0, #1
 800ff74:	d116      	bne.n	800ffa4 <osSemaphoreRelease+0x48>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800ff76:	9b01      	ldr	r3, [sp, #4]
 800ff78:	b183      	cbz	r3, 800ff9c <osSemaphoreRelease+0x40>
 800ff7a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800ff7e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800ff82:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800ff86:	f3bf 8f4f 	dsb	sy
 800ff8a:	f3bf 8f6f 	isb	sy
 800ff8e:	e005      	b.n	800ff9c <osSemaphoreRelease+0x40>
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800ff90:	461a      	mov	r2, r3
 800ff92:	4619      	mov	r1, r3
 800ff94:	f000 fd88 	bl	8010aa8 <xQueueGenericSend>
 800ff98:	2801      	cmp	r0, #1
 800ff9a:	d103      	bne.n	800ffa4 <osSemaphoreRelease+0x48>
  stat = osOK;
 800ff9c:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800ff9e:	b003      	add	sp, #12
 800ffa0:	f85d fb04 	ldr.w	pc, [sp], #4
      stat = osErrorResource;
 800ffa4:	f06f 0002 	mvn.w	r0, #2
 800ffa8:	e7f9      	b.n	800ff9e <osSemaphoreRelease+0x42>
    stat = osErrorParameter;
 800ffaa:	f06f 0003 	mvn.w	r0, #3
}
 800ffae:	4770      	bx	lr

0800ffb0 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800ffb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ffb2:	b085      	sub	sp, #20
 800ffb4:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800ffb8:	b987      	cbnz	r7, 800ffdc <osMessageQueueNew+0x2c>
 800ffba:	4605      	mov	r5, r0
 800ffbc:	b170      	cbz	r0, 800ffdc <osMessageQueueNew+0x2c>
 800ffbe:	b169      	cbz	r1, 800ffdc <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800ffc0:	4614      	mov	r4, r2
 800ffc2:	b1e2      	cbz	r2, 800fffe <osMessageQueueNew+0x4e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800ffc4:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 800ffc8:	b15b      	cbz	r3, 800ffe2 <osMessageQueueNew+0x32>
 800ffca:	2a4f      	cmp	r2, #79	@ 0x4f
 800ffcc:	d906      	bls.n	800ffdc <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800ffce:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800ffd0:	b122      	cbz	r2, 800ffdc <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800ffd2:	6966      	ldr	r6, [r4, #20]
 800ffd4:	fb01 f505 	mul.w	r5, r1, r5
 800ffd8:	42ae      	cmp	r6, r5
 800ffda:	d21b      	bcs.n	8010014 <osMessageQueueNew+0x64>
  hQueue = NULL;
 800ffdc:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800ffde:	b005      	add	sp, #20
 800ffe0:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800ffe2:	2a00      	cmp	r2, #0
 800ffe4:	d1fa      	bne.n	800ffdc <osMessageQueueNew+0x2c>
 800ffe6:	6923      	ldr	r3, [r4, #16]
 800ffe8:	2b00      	cmp	r3, #0
 800ffea:	d1f7      	bne.n	800ffdc <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800ffec:	6962      	ldr	r2, [r4, #20]
 800ffee:	2a00      	cmp	r2, #0
 800fff0:	d1f4      	bne.n	800ffdc <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800fff2:	f000 fc71 	bl	80108d8 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800fff6:	2800      	cmp	r0, #0
 800fff8:	d0f0      	beq.n	800ffdc <osMessageQueueNew+0x2c>
        name = attr->name;
 800fffa:	6824      	ldr	r4, [r4, #0]
 800fffc:	e003      	b.n	8010006 <osMessageQueueNew+0x56>
          hQueue = xQueueCreate (msg_count, msg_size);
 800fffe:	f000 fc6b 	bl	80108d8 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8010002:	2800      	cmp	r0, #0
 8010004:	d0ea      	beq.n	800ffdc <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 8010006:	4621      	mov	r1, r4
 8010008:	9003      	str	r0, [sp, #12]
 801000a:	f001 fb37 	bl	801167c <vQueueAddToRegistry>
 801000e:	9803      	ldr	r0, [sp, #12]
}
 8010010:	b005      	add	sp, #20
 8010012:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8010014:	9700      	str	r7, [sp, #0]
 8010016:	f000 fbef 	bl	80107f8 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 801001a:	2800      	cmp	r0, #0
 801001c:	d1ed      	bne.n	800fffa <osMessageQueueNew+0x4a>
 801001e:	e7dd      	b.n	800ffdc <osMessageQueueNew+0x2c>

08010020 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8010020:	b570      	push	{r4, r5, r6, lr}
 8010022:	461c      	mov	r4, r3
 8010024:	b082      	sub	sp, #8
 8010026:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 801002a:	b1be      	cbz	r6, 801005c <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 801002c:	b338      	cbz	r0, 801007e <osMessageQueuePut+0x5e>
 801002e:	b331      	cbz	r1, 801007e <osMessageQueuePut+0x5e>
 8010030:	bb2b      	cbnz	r3, 801007e <osMessageQueuePut+0x5e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8010032:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8010034:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8010036:	f000 feb7 	bl	8010da8 <xQueueGenericSendFromISR>
 801003a:	2801      	cmp	r0, #1
 801003c:	d11b      	bne.n	8010076 <osMessageQueuePut+0x56>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 801003e:	9b01      	ldr	r3, [sp, #4]
 8010040:	b14b      	cbz	r3, 8010056 <osMessageQueuePut+0x36>
 8010042:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8010046:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801004a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 801004e:	f3bf 8f4f 	dsb	sy
 8010052:	f3bf 8f6f 	isb	sy
  stat = osOK;
 8010056:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8010058:	b002      	add	sp, #8
 801005a:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 801005c:	b178      	cbz	r0, 801007e <osMessageQueuePut+0x5e>
 801005e:	b171      	cbz	r1, 801007e <osMessageQueuePut+0x5e>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8010060:	4633      	mov	r3, r6
 8010062:	4622      	mov	r2, r4
 8010064:	f000 fd20 	bl	8010aa8 <xQueueGenericSend>
 8010068:	2801      	cmp	r0, #1
 801006a:	d0f4      	beq.n	8010056 <osMessageQueuePut+0x36>
        if (timeout != 0U) {
 801006c:	b11c      	cbz	r4, 8010076 <osMessageQueuePut+0x56>
          stat = osErrorTimeout;
 801006e:	f06f 0001 	mvn.w	r0, #1
}
 8010072:	b002      	add	sp, #8
 8010074:	bd70      	pop	{r4, r5, r6, pc}
        stat = osErrorResource;
 8010076:	f06f 0002 	mvn.w	r0, #2
}
 801007a:	b002      	add	sp, #8
 801007c:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 801007e:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8010082:	e7e9      	b.n	8010058 <osMessageQueuePut+0x38>

08010084 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8010084:	b530      	push	{r4, r5, lr}
 8010086:	461c      	mov	r4, r3
 8010088:	b083      	sub	sp, #12
 801008a:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 801008e:	b1bb      	cbz	r3, 80100c0 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8010090:	b330      	cbz	r0, 80100e0 <osMessageQueueGet+0x5c>
 8010092:	b329      	cbz	r1, 80100e0 <osMessageQueueGet+0x5c>
 8010094:	bb24      	cbnz	r4, 80100e0 <osMessageQueueGet+0x5c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8010096:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8010098:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 801009a:	f001 fa4f 	bl	801153c <xQueueReceiveFromISR>
 801009e:	2801      	cmp	r0, #1
 80100a0:	d11a      	bne.n	80100d8 <osMessageQueueGet+0x54>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 80100a2:	9b01      	ldr	r3, [sp, #4]
 80100a4:	b14b      	cbz	r3, 80100ba <osMessageQueueGet+0x36>
 80100a6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80100aa:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80100ae:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80100b2:	f3bf 8f4f 	dsb	sy
 80100b6:	f3bf 8f6f 	isb	sy
  stat = osOK;
 80100ba:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 80100bc:	b003      	add	sp, #12
 80100be:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80100c0:	b170      	cbz	r0, 80100e0 <osMessageQueueGet+0x5c>
 80100c2:	b169      	cbz	r1, 80100e0 <osMessageQueueGet+0x5c>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80100c4:	4622      	mov	r2, r4
 80100c6:	f000 ff27 	bl	8010f18 <xQueueReceive>
 80100ca:	2801      	cmp	r0, #1
 80100cc:	d0f5      	beq.n	80100ba <osMessageQueueGet+0x36>
        if (timeout != 0U) {
 80100ce:	b11c      	cbz	r4, 80100d8 <osMessageQueueGet+0x54>
          stat = osErrorTimeout;
 80100d0:	f06f 0001 	mvn.w	r0, #1
}
 80100d4:	b003      	add	sp, #12
 80100d6:	bd30      	pop	{r4, r5, pc}
        stat = osErrorResource;
 80100d8:	f06f 0002 	mvn.w	r0, #2
}
 80100dc:	b003      	add	sp, #12
 80100de:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 80100e0:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80100e4:	e7ea      	b.n	80100bc <osMessageQueueGet+0x38>
 80100e6:	bf00      	nop

080100e8 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 80100e8:	4b04      	ldr	r3, [pc, #16]	@ (80100fc <vApplicationGetIdleTaskMemory+0x14>)
 80100ea:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 80100ec:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 80100ee:	2380      	movs	r3, #128	@ 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 80100f0:	4c03      	ldr	r4, [pc, #12]	@ (8010100 <vApplicationGetIdleTaskMemory+0x18>)
 80100f2:	600c      	str	r4, [r1, #0]
}
 80100f4:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 80100f8:	6013      	str	r3, [r2, #0]
}
 80100fa:	4770      	bx	lr
 80100fc:	20005cbc 	.word	0x20005cbc
 8010100:	20005abc 	.word	0x20005abc

08010104 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8010104:	4b05      	ldr	r3, [pc, #20]	@ (801011c <vApplicationGetTimerTaskMemory+0x18>)
 8010106:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 8010108:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 801010a:	f44f 7380 	mov.w	r3, #256	@ 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 801010e:	4c04      	ldr	r4, [pc, #16]	@ (8010120 <vApplicationGetTimerTaskMemory+0x1c>)
 8010110:	600c      	str	r4, [r1, #0]
}
 8010112:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8010116:	6013      	str	r3, [r2, #0]
}
 8010118:	4770      	bx	lr
 801011a:	bf00      	nop
 801011c:	20005a10 	.word	0x20005a10
 8010120:	20005610 	.word	0x20005610

08010124 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 8010124:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010128:	4604      	mov	r4, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 801012a:	f001 ff21 	bl	8011f70 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 801012e:	4a51      	ldr	r2, [pc, #324]	@ (8010274 <pvPortMalloc+0x150>)
 8010130:	6815      	ldr	r5, [r2, #0]
 8010132:	2d00      	cmp	r5, #0
 8010134:	d035      	beq.n	80101a2 <pvPortMalloc+0x7e>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8010136:	4b50      	ldr	r3, [pc, #320]	@ (8010278 <pvPortMalloc+0x154>)
 8010138:	681e      	ldr	r6, [r3, #0]
 801013a:	4234      	tst	r4, r6
 801013c:	d12b      	bne.n	8010196 <pvPortMalloc+0x72>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 801013e:	b354      	cbz	r4, 8010196 <pvPortMalloc+0x72>
			{
				xWantedSize += xHeapStructSize;
 8010140:	f104 0008 	add.w	r0, r4, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8010144:	0764      	lsls	r4, r4, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8010146:	bf1c      	itt	ne
 8010148:	f020 0007 	bicne.w	r0, r0, #7
 801014c:	3008      	addne	r0, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 801014e:	b310      	cbz	r0, 8010196 <pvPortMalloc+0x72>
 8010150:	f8df e138 	ldr.w	lr, [pc, #312]	@ 801028c <pvPortMalloc+0x168>
 8010154:	f8de c000 	ldr.w	ip, [lr]
 8010158:	4584      	cmp	ip, r0
 801015a:	d31c      	bcc.n	8010196 <pvPortMalloc+0x72>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 801015c:	4c47      	ldr	r4, [pc, #284]	@ (801027c <pvPortMalloc+0x158>)
 801015e:	6823      	ldr	r3, [r4, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8010160:	e003      	b.n	801016a <pvPortMalloc+0x46>
 8010162:	681a      	ldr	r2, [r3, #0]
 8010164:	b122      	cbz	r2, 8010170 <pvPortMalloc+0x4c>
 8010166:	461c      	mov	r4, r3
 8010168:	4613      	mov	r3, r2
 801016a:	6859      	ldr	r1, [r3, #4]
 801016c:	4281      	cmp	r1, r0
 801016e:	d3f8      	bcc.n	8010162 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 8010170:	42ab      	cmp	r3, r5
 8010172:	d010      	beq.n	8010196 <pvPortMalloc+0x72>
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );

					/* This block is being returned for use so must be taken out
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8010174:	681a      	ldr	r2, [r3, #0]
 8010176:	6022      	str	r2, [r4, #0]

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8010178:	1a0a      	subs	r2, r1, r0
 801017a:	2a10      	cmp	r2, #16
 801017c:	d946      	bls.n	801020c <pvPortMalloc+0xe8>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 801017e:	181c      	adds	r4, r3, r0
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8010180:	0761      	lsls	r1, r4, #29
 8010182:	d02c      	beq.n	80101de <pvPortMalloc+0xba>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8010184:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010188:	f383 8811 	msr	BASEPRI, r3
 801018c:	f3bf 8f6f 	isb	sy
 8010190:	f3bf 8f4f 	dsb	sy
 8010194:	e7fe      	b.n	8010194 <pvPortMalloc+0x70>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 8010196:	f001 fef3 	bl	8011f80 <xTaskResumeAll>
void *pvReturn = NULL;
 801019a:	2400      	movs	r4, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 801019c:	4620      	mov	r0, r4
 801019e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
uint8_t *pucAlignedHeap;
size_t uxAddress;
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;

	/* Ensure the heap starts on a correctly aligned boundary. */
	uxAddress = ( size_t ) ucHeap;
 80101a2:	4b37      	ldr	r3, [pc, #220]	@ (8010280 <pvPortMalloc+0x15c>)

	pucAlignedHeap = ( uint8_t * ) uxAddress;

	/* xStart is used to hold a pointer to the first item in the list of free
	blocks.  The void cast is used to prevent compiler warnings. */
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80101a4:	4835      	ldr	r0, [pc, #212]	@ (801027c <pvPortMalloc+0x158>)
	/* Only one block exists - and it covers the entire usable heap space. */
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;

	/* Work out the position of the top bit in a size_t variable. */
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 80101a6:	4f34      	ldr	r7, [pc, #208]	@ (8010278 <pvPortMalloc+0x154>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 80101a8:	075d      	lsls	r5, r3, #29
	uxAddress -= xHeapStructSize;
 80101aa:	4d36      	ldr	r5, [pc, #216]	@ (8010284 <pvPortMalloc+0x160>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 80101ac:	bf18      	it	ne
 80101ae:	3307      	addne	r3, #7
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80101b0:	f025 0507 	bic.w	r5, r5, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80101b4:	bf18      	it	ne
 80101b6:	f023 0307 	bicne.w	r3, r3, #7
	pxEnd = ( void * ) uxAddress;
 80101ba:	6015      	str	r5, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80101bc:	4a32      	ldr	r2, [pc, #200]	@ (8010288 <pvPortMalloc+0x164>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80101be:	6003      	str	r3, [r0, #0]
 80101c0:	4619      	mov	r1, r3
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 80101c2:	1aeb      	subs	r3, r5, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80101c4:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80101c6:	4a31      	ldr	r2, [pc, #196]	@ (801028c <pvPortMalloc+0x168>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 80101c8:	f04f 4600 	mov.w	r6, #2147483648	@ 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80101cc:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 80101ce:	2200      	movs	r2, #0
 80101d0:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 80101d2:	603e      	str	r6, [r7, #0]
	pxEnd->pxNextFreeBlock = NULL;
 80101d4:	e9c5 2200 	strd	r2, r2, [r5]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 80101d8:	e9c1 5300 	strd	r5, r3, [r1]
}
 80101dc:	e7ad      	b.n	801013a <pvPortMalloc+0x16>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 80101de:	6062      	str	r2, [r4, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80101e0:	4a26      	ldr	r2, [pc, #152]	@ (801027c <pvPortMalloc+0x158>)
						pxBlock->xBlockSize = xWantedSize;
 80101e2:	6058      	str	r0, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80101e4:	4617      	mov	r7, r2
 80101e6:	6812      	ldr	r2, [r2, #0]
 80101e8:	4294      	cmp	r4, r2
 80101ea:	d8fb      	bhi.n	80101e4 <pvPortMalloc+0xc0>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 80101ec:	6879      	ldr	r1, [r7, #4]
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 80101ee:	f8d4 8004 	ldr.w	r8, [r4, #4]
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 80101f2:	eb07 0901 	add.w	r9, r7, r1
 80101f6:	454c      	cmp	r4, r9
 80101f8:	d028      	beq.n	801024c <pvPortMalloc+0x128>
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 80101fa:	eb04 0108 	add.w	r1, r4, r8
 80101fe:	428a      	cmp	r2, r1
 8010200:	d02e      	beq.n	8010260 <pvPortMalloc+0x13c>
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
		}
	}
	else
	{
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8010202:	6022      	str	r2, [r4, #0]
 8010204:	4601      	mov	r1, r0

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8010206:	42a7      	cmp	r7, r4
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8010208:	bf18      	it	ne
 801020a:	603c      	strne	r4, [r7, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 801020c:	481e      	ldr	r0, [pc, #120]	@ (8010288 <pvPortMalloc+0x164>)
 801020e:	6804      	ldr	r4, [r0, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8010210:	ebac 0201 	sub.w	r2, ip, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8010214:	42a2      	cmp	r2, r4
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8010216:	bf38      	it	cc
 8010218:	6002      	strcc	r2, [r0, #0]
					xNumberOfSuccessfulAllocations++;
 801021a:	481d      	ldr	r0, [pc, #116]	@ (8010290 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 801021c:	f8ce 2000 	str.w	r2, [lr]
					xNumberOfSuccessfulAllocations++;
 8010220:	6802      	ldr	r2, [r0, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8010222:	4331      	orrs	r1, r6
					pxBlock->pxNextFreeBlock = NULL;
 8010224:	2500      	movs	r5, #0
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8010226:	f103 0408 	add.w	r4, r3, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 801022a:	6059      	str	r1, [r3, #4]
					xNumberOfSuccessfulAllocations++;
 801022c:	3201      	adds	r2, #1
					pxBlock->pxNextFreeBlock = NULL;
 801022e:	601d      	str	r5, [r3, #0]
					xNumberOfSuccessfulAllocations++;
 8010230:	6002      	str	r2, [r0, #0]
	( void ) xTaskResumeAll();
 8010232:	f001 fea5 	bl	8011f80 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8010236:	0763      	lsls	r3, r4, #29
 8010238:	d0b0      	beq.n	801019c <pvPortMalloc+0x78>
 801023a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801023e:	f383 8811 	msr	BASEPRI, r3
 8010242:	f3bf 8f6f 	isb	sy
 8010246:	f3bf 8f4f 	dsb	sy
 801024a:	e7fe      	b.n	801024a <pvPortMalloc+0x126>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 801024c:	4488      	add	r8, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 801024e:	eb07 0108 	add.w	r1, r7, r8
 8010252:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8010254:	f8c7 8004 	str.w	r8, [r7, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8010258:	d001      	beq.n	801025e <pvPortMalloc+0x13a>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 801025a:	6859      	ldr	r1, [r3, #4]
 801025c:	e7d6      	b.n	801020c <pvPortMalloc+0xe8>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 801025e:	463c      	mov	r4, r7
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8010260:	42aa      	cmp	r2, r5
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8010262:	bf1c      	itt	ne
 8010264:	6851      	ldrne	r1, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8010266:	6812      	ldrne	r2, [r2, #0]
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 8010268:	6022      	str	r2, [r4, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 801026a:	bf1c      	itt	ne
 801026c:	4441      	addne	r1, r8
 801026e:	6061      	strne	r1, [r4, #4]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8010270:	6859      	ldr	r1, [r3, #4]
 8010272:	e7c8      	b.n	8010206 <pvPortMalloc+0xe2>
 8010274:	20005d80 	.word	0x20005d80
 8010278:	20005d6c 	.word	0x20005d6c
 801027c:	20005d84 	.word	0x20005d84
 8010280:	20005d8c 	.word	0x20005d8c
 8010284:	2000dd84 	.word	0x2000dd84
 8010288:	20005d78 	.word	0x20005d78
 801028c:	20005d7c 	.word	0x20005d7c
 8010290:	20005d74 	.word	0x20005d74

08010294 <vPortFree>:
	if( pv != NULL )
 8010294:	b1d0      	cbz	r0, 80102cc <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8010296:	4a2c      	ldr	r2, [pc, #176]	@ (8010348 <vPortFree+0xb4>)
 8010298:	f850 3c04 	ldr.w	r3, [r0, #-4]
 801029c:	6812      	ldr	r2, [r2, #0]
 801029e:	4213      	tst	r3, r2
 80102a0:	d00b      	beq.n	80102ba <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 80102a2:	f850 1c08 	ldr.w	r1, [r0, #-8]
 80102a6:	b191      	cbz	r1, 80102ce <vPortFree+0x3a>
 80102a8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80102ac:	f383 8811 	msr	BASEPRI, r3
 80102b0:	f3bf 8f6f 	isb	sy
 80102b4:	f3bf 8f4f 	dsb	sy
 80102b8:	e7fe      	b.n	80102b8 <vPortFree+0x24>
 80102ba:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80102be:	f383 8811 	msr	BASEPRI, r3
 80102c2:	f3bf 8f6f 	isb	sy
 80102c6:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 80102ca:	e7fe      	b.n	80102ca <vPortFree+0x36>
 80102cc:	4770      	bx	lr
{
 80102ce:	b570      	push	{r4, r5, r6, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 80102d0:	ea23 0302 	bic.w	r3, r3, r2
{
 80102d4:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 80102d6:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 80102da:	4c1c      	ldr	r4, [pc, #112]	@ (801034c <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 80102dc:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 80102de:	f001 fe47 	bl	8011f70 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 80102e2:	9801      	ldr	r0, [sp, #4]
 80102e4:	6822      	ldr	r2, [r4, #0]
 80102e6:	f850 5c04 	ldr.w	r5, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80102ea:	4b19      	ldr	r3, [pc, #100]	@ (8010350 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 80102ec:	1951      	adds	r1, r2, r5
 80102ee:	6021      	str	r1, [r4, #0]
		puc -= xHeapStructSize;
 80102f0:	f1a0 0208 	sub.w	r2, r0, #8
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80102f4:	4619      	mov	r1, r3
 80102f6:	681b      	ldr	r3, [r3, #0]
 80102f8:	429a      	cmp	r2, r3
 80102fa:	d8fb      	bhi.n	80102f4 <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 80102fc:	684e      	ldr	r6, [r1, #4]
 80102fe:	198c      	adds	r4, r1, r6
 8010300:	42a2      	cmp	r2, r4
 8010302:	d011      	beq.n	8010328 <vPortFree+0x94>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8010304:	eb02 0e05 	add.w	lr, r2, r5
 8010308:	4573      	cmp	r3, lr
 801030a:	d013      	beq.n	8010334 <vPortFree+0xa0>
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 801030c:	f840 3c08 	str.w	r3, [r0, #-8]
	if( pxIterator != pxBlockToInsert )
 8010310:	4291      	cmp	r1, r2
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8010312:	bf18      	it	ne
 8010314:	600a      	strne	r2, [r1, #0]
					xNumberOfSuccessfulFrees++;
 8010316:	4a0f      	ldr	r2, [pc, #60]	@ (8010354 <vPortFree+0xc0>)
 8010318:	6813      	ldr	r3, [r2, #0]
 801031a:	3301      	adds	r3, #1
 801031c:	6013      	str	r3, [r2, #0]
}
 801031e:	b002      	add	sp, #8
 8010320:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				( void ) xTaskResumeAll();
 8010324:	f001 be2c 	b.w	8011f80 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8010328:	4435      	add	r5, r6
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 801032a:	194a      	adds	r2, r1, r5
 801032c:	4293      	cmp	r3, r2
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 801032e:	604d      	str	r5, [r1, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8010330:	d1f1      	bne.n	8010316 <vPortFree+0x82>
 8010332:	460a      	mov	r2, r1
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8010334:	4808      	ldr	r0, [pc, #32]	@ (8010358 <vPortFree+0xc4>)
 8010336:	6800      	ldr	r0, [r0, #0]
 8010338:	4283      	cmp	r3, r0
 801033a:	d003      	beq.n	8010344 <vPortFree+0xb0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 801033c:	e9d3 0400 	ldrd	r0, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8010340:	1963      	adds	r3, r4, r5
 8010342:	6053      	str	r3, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8010344:	6010      	str	r0, [r2, #0]
 8010346:	e7e3      	b.n	8010310 <vPortFree+0x7c>
 8010348:	20005d6c 	.word	0x20005d6c
 801034c:	20005d7c 	.word	0x20005d7c
 8010350:	20005d84 	.word	0x20005d84
 8010354:	20005d70 	.word	0x20005d70
 8010358:	20005d80 	.word	0x20005d80

0801035c <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 801035c:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8010360:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8010364:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8010366:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 801036a:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 801036e:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8010370:	4770      	bx	lr
 8010372:	bf00      	nop

08010374 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8010374:	2300      	movs	r3, #0
 8010376:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8010378:	4770      	bx	lr
 801037a:	bf00      	nop

0801037c <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 801037c:	6842      	ldr	r2, [r0, #4]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 801037e:	6803      	ldr	r3, [r0, #0]
{
 8010380:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8010382:	6894      	ldr	r4, [r2, #8]
	( pxList->uxNumberOfItems )++;
 8010384:	3301      	adds	r3, #1
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8010386:	e9c1 2401 	strd	r2, r4, [r1, #4]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 801038a:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 801038c:	6091      	str	r1, [r2, #8]
}
 801038e:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 8010392:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8010394:	6003      	str	r3, [r0, #0]
}
 8010396:	4770      	bx	lr

08010398 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8010398:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 801039a:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 801039c:	1c6b      	adds	r3, r5, #1
 801039e:	d010      	beq.n	80103c2 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 80103a0:	f100 0308 	add.w	r3, r0, #8
 80103a4:	461c      	mov	r4, r3
 80103a6:	685b      	ldr	r3, [r3, #4]
 80103a8:	681a      	ldr	r2, [r3, #0]
 80103aa:	42aa      	cmp	r2, r5
 80103ac:	d9fa      	bls.n	80103a4 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80103ae:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 80103b0:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 80103b2:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 80103b4:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 80103b6:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 80103b8:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 80103ba:	6108      	str	r0, [r1, #16]
}
 80103bc:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 80103be:	6002      	str	r2, [r0, #0]
}
 80103c0:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 80103c2:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 80103c4:	6863      	ldr	r3, [r4, #4]
 80103c6:	e7f2      	b.n	80103ae <vListInsert+0x16>

080103c8 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 80103c8:	6903      	ldr	r3, [r0, #16]
{
 80103ca:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 80103cc:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 80103d0:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 80103d2:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 80103d4:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 80103d6:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 80103d8:	bf08      	it	eq
 80103da:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 80103dc:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 80103de:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 80103e2:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 80103e4:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 80103e6:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 80103e8:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 80103ea:	6818      	ldr	r0, [r3, #0]
}
 80103ec:	4770      	bx	lr
 80103ee:	bf00      	nop

080103f0 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 80103f0:	4808      	ldr	r0, [pc, #32]	@ (8010414 <prvPortStartFirstTask+0x24>)
 80103f2:	6800      	ldr	r0, [r0, #0]
 80103f4:	6800      	ldr	r0, [r0, #0]
 80103f6:	f380 8808 	msr	MSP, r0
 80103fa:	f04f 0000 	mov.w	r0, #0
 80103fe:	f380 8814 	msr	CONTROL, r0
 8010402:	b662      	cpsie	i
 8010404:	b661      	cpsie	f
 8010406:	f3bf 8f4f 	dsb	sy
 801040a:	f3bf 8f6f 	isb	sy
 801040e:	df00      	svc	0
 8010410:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8010412:	0000      	.short	0x0000
 8010414:	e000ed08 	.word	0xe000ed08

08010418 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8010418:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 8010428 <vPortEnableVFP+0x10>
 801041c:	6801      	ldr	r1, [r0, #0]
 801041e:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8010422:	6001      	str	r1, [r0, #0]
 8010424:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8010426:	0000      	.short	0x0000
 8010428:	e000ed88 	.word	0xe000ed88

0801042c <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 801042c:	4b0e      	ldr	r3, [pc, #56]	@ (8010468 <prvTaskExitError+0x3c>)
 801042e:	681b      	ldr	r3, [r3, #0]
{
 8010430:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8010432:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 8010434:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 8010436:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8010438:	d008      	beq.n	801044c <prvTaskExitError+0x20>
 801043a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801043e:	f383 8811 	msr	BASEPRI, r3
 8010442:	f3bf 8f6f 	isb	sy
 8010446:	f3bf 8f4f 	dsb	sy
 801044a:	e7fe      	b.n	801044a <prvTaskExitError+0x1e>
 801044c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010450:	f383 8811 	msr	BASEPRI, r3
 8010454:	f3bf 8f6f 	isb	sy
 8010458:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 801045c:	9b01      	ldr	r3, [sp, #4]
 801045e:	2b00      	cmp	r3, #0
 8010460:	d0fc      	beq.n	801045c <prvTaskExitError+0x30>
}
 8010462:	b002      	add	sp, #8
 8010464:	4770      	bx	lr
 8010466:	bf00      	nop
 8010468:	20000044 	.word	0x20000044

0801046c <pxPortInitialiseStack>:
{
 801046c:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 801046e:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8010472:	4c07      	ldr	r4, [pc, #28]	@ (8010490 <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8010474:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8010478:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 801047c:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8010480:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8010484:	e940 3209 	strd	r3, r2, [r0, #-36]	@ 0x24
}
 8010488:	f85d 4b04 	ldr.w	r4, [sp], #4
 801048c:	3844      	subs	r0, #68	@ 0x44
 801048e:	4770      	bx	lr
 8010490:	0801042d 	.word	0x0801042d
	...

080104a0 <SVC_Handler>:
	__asm volatile (
 80104a0:	4b07      	ldr	r3, [pc, #28]	@ (80104c0 <pxCurrentTCBConst2>)
 80104a2:	6819      	ldr	r1, [r3, #0]
 80104a4:	6808      	ldr	r0, [r1, #0]
 80104a6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80104aa:	f380 8809 	msr	PSP, r0
 80104ae:	f3bf 8f6f 	isb	sy
 80104b2:	f04f 0000 	mov.w	r0, #0
 80104b6:	f380 8811 	msr	BASEPRI, r0
 80104ba:	4770      	bx	lr
 80104bc:	f3af 8000 	nop.w

080104c0 <pxCurrentTCBConst2>:
 80104c0:	2000e2d0 	.word	0x2000e2d0

080104c4 <vPortEnterCritical>:
 80104c4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80104c8:	f383 8811 	msr	BASEPRI, r3
 80104cc:	f3bf 8f6f 	isb	sy
 80104d0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 80104d4:	4a0b      	ldr	r2, [pc, #44]	@ (8010504 <vPortEnterCritical+0x40>)
 80104d6:	6813      	ldr	r3, [r2, #0]
 80104d8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 80104da:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 80104dc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 80104de:	d000      	beq.n	80104e2 <vPortEnterCritical+0x1e>
}
 80104e0:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 80104e2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80104e6:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 80104ea:	b2db      	uxtb	r3, r3
 80104ec:	2b00      	cmp	r3, #0
 80104ee:	d0f7      	beq.n	80104e0 <vPortEnterCritical+0x1c>
 80104f0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80104f4:	f383 8811 	msr	BASEPRI, r3
 80104f8:	f3bf 8f6f 	isb	sy
 80104fc:	f3bf 8f4f 	dsb	sy
 8010500:	e7fe      	b.n	8010500 <vPortEnterCritical+0x3c>
 8010502:	bf00      	nop
 8010504:	20000044 	.word	0x20000044

08010508 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8010508:	4a08      	ldr	r2, [pc, #32]	@ (801052c <vPortExitCritical+0x24>)
 801050a:	6813      	ldr	r3, [r2, #0]
 801050c:	b943      	cbnz	r3, 8010520 <vPortExitCritical+0x18>
 801050e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010512:	f383 8811 	msr	BASEPRI, r3
 8010516:	f3bf 8f6f 	isb	sy
 801051a:	f3bf 8f4f 	dsb	sy
 801051e:	e7fe      	b.n	801051e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8010520:	3b01      	subs	r3, #1
 8010522:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8010524:	b90b      	cbnz	r3, 801052a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8010526:	f383 8811 	msr	BASEPRI, r3
}
 801052a:	4770      	bx	lr
 801052c:	20000044 	.word	0x20000044

08010530 <PendSV_Handler>:
	__asm volatile
 8010530:	f3ef 8009 	mrs	r0, PSP
 8010534:	f3bf 8f6f 	isb	sy
 8010538:	4b15      	ldr	r3, [pc, #84]	@ (8010590 <pxCurrentTCBConst>)
 801053a:	681a      	ldr	r2, [r3, #0]
 801053c:	f01e 0f10 	tst.w	lr, #16
 8010540:	bf08      	it	eq
 8010542:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8010546:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801054a:	6010      	str	r0, [r2, #0]
 801054c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8010550:	f04f 0050 	mov.w	r0, #80	@ 0x50
 8010554:	f380 8811 	msr	BASEPRI, r0
 8010558:	f3bf 8f4f 	dsb	sy
 801055c:	f3bf 8f6f 	isb	sy
 8010560:	f001 fd4a 	bl	8011ff8 <vTaskSwitchContext>
 8010564:	f04f 0000 	mov.w	r0, #0
 8010568:	f380 8811 	msr	BASEPRI, r0
 801056c:	bc09      	pop	{r0, r3}
 801056e:	6819      	ldr	r1, [r3, #0]
 8010570:	6808      	ldr	r0, [r1, #0]
 8010572:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010576:	f01e 0f10 	tst.w	lr, #16
 801057a:	bf08      	it	eq
 801057c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8010580:	f380 8809 	msr	PSP, r0
 8010584:	f3bf 8f6f 	isb	sy
 8010588:	4770      	bx	lr
 801058a:	bf00      	nop
 801058c:	f3af 8000 	nop.w

08010590 <pxCurrentTCBConst>:
 8010590:	2000e2d0 	.word	0x2000e2d0

08010594 <xPortSysTickHandler>:
{
 8010594:	b508      	push	{r3, lr}
	__asm volatile
 8010596:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801059a:	f383 8811 	msr	BASEPRI, r3
 801059e:	f3bf 8f6f 	isb	sy
 80105a2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 80105a6:	f001 fd01 	bl	8011fac <xTaskIncrementTick>
 80105aa:	b128      	cbz	r0, 80105b8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 80105ac:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80105b0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80105b4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 80105b8:	2300      	movs	r3, #0
 80105ba:	f383 8811 	msr	BASEPRI, r3
}
 80105be:	bd08      	pop	{r3, pc}

080105c0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80105c0:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 80105c4:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80105c6:	4906      	ldr	r1, [pc, #24]	@ (80105e0 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80105c8:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 80105ca:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80105cc:	680b      	ldr	r3, [r1, #0]
 80105ce:	4905      	ldr	r1, [pc, #20]	@ (80105e4 <vPortSetupTimerInterrupt+0x24>)
 80105d0:	fba1 1303 	umull	r1, r3, r1, r3
 80105d4:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 80105d6:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80105d8:	3b01      	subs	r3, #1
 80105da:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 80105dc:	6110      	str	r0, [r2, #16]
}
 80105de:	4770      	bx	lr
 80105e0:	20000038 	.word	0x20000038
 80105e4:	10624dd3 	.word	0x10624dd3

080105e8 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 80105e8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80105ec:	4a48      	ldr	r2, [pc, #288]	@ (8010710 <xPortStartScheduler+0x128>)
 80105ee:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
 80105f2:	4291      	cmp	r1, r2
 80105f4:	d041      	beq.n	801067a <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 80105f6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
 80105fa:	4b46      	ldr	r3, [pc, #280]	@ (8010714 <xPortStartScheduler+0x12c>)
 80105fc:	429a      	cmp	r2, r3
 80105fe:	d033      	beq.n	8010668 <xPortStartScheduler+0x80>
{
 8010600:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8010602:	4b45      	ldr	r3, [pc, #276]	@ (8010718 <xPortStartScheduler+0x130>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8010604:	4c45      	ldr	r4, [pc, #276]	@ (801071c <xPortStartScheduler+0x134>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8010606:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8010608:	4845      	ldr	r0, [pc, #276]	@ (8010720 <xPortStartScheduler+0x138>)
{
 801060a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 801060c:	21ff      	movs	r1, #255	@ 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 801060e:	b2d2      	uxtb	r2, r2
 8010610:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8010612:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8010614:	781b      	ldrb	r3, [r3, #0]
 8010616:	b2db      	uxtb	r3, r3
 8010618:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 801061c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8010620:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8010624:	f003 0350 	and.w	r3, r3, #80	@ 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8010628:	2107      	movs	r1, #7
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 801062a:	0612      	lsls	r2, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 801062c:	7023      	strb	r3, [r4, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 801062e:	6001      	str	r1, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8010630:	bf48      	it	mi
 8010632:	2206      	movmi	r2, #6
 8010634:	d50f      	bpl.n	8010656 <xPortStartScheduler+0x6e>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8010636:	f89d 3007 	ldrb.w	r3, [sp, #7]
 801063a:	005b      	lsls	r3, r3, #1
 801063c:	b2db      	uxtb	r3, r3
 801063e:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8010642:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8010646:	061b      	lsls	r3, r3, #24
 8010648:	4611      	mov	r1, r2
 801064a:	f102 32ff 	add.w	r2, r2, #4294967295
 801064e:	d4f2      	bmi.n	8010636 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8010650:	2903      	cmp	r1, #3
 8010652:	d01b      	beq.n	801068c <xPortStartScheduler+0xa4>
 8010654:	6001      	str	r1, [r0, #0]
	__asm volatile
 8010656:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801065a:	f383 8811 	msr	BASEPRI, r3
 801065e:	f3bf 8f6f 	isb	sy
 8010662:	f3bf 8f4f 	dsb	sy
 8010666:	e7fe      	b.n	8010666 <xPortStartScheduler+0x7e>
 8010668:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801066c:	f383 8811 	msr	BASEPRI, r3
 8010670:	f3bf 8f6f 	isb	sy
 8010674:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8010678:	e7fe      	b.n	8010678 <xPortStartScheduler+0x90>
 801067a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801067e:	f383 8811 	msr	BASEPRI, r3
 8010682:	f3bf 8f6f 	isb	sy
 8010686:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 801068a:	e7fe      	b.n	801068a <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 801068c:	9b02      	ldr	r3, [sp, #8]
 801068e:	4a22      	ldr	r2, [pc, #136]	@ (8010718 <xPortStartScheduler+0x130>)
	uxCriticalNesting = 0;
 8010690:	4d24      	ldr	r5, [pc, #144]	@ (8010724 <xPortStartScheduler+0x13c>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8010692:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8010696:	f44f 7140 	mov.w	r1, #768	@ 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 801069a:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 801069c:	6001      	str	r1, [r0, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 801069e:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80106a0:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 80106a4:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80106a8:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 80106ac:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 80106b0:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 80106b4:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	uxCriticalNesting = 0;
 80106b8:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 80106ba:	f7ff ff81 	bl	80105c0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 80106be:	602e      	str	r6, [r5, #0]
	vPortEnableVFP();
 80106c0:	f7ff feaa 	bl	8010418 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 80106c4:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 80106c8:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 80106cc:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 80106d0:	f7ff fe8e 	bl	80103f0 <prvPortStartFirstTask>
	vTaskSwitchContext();
 80106d4:	f001 fc90 	bl	8011ff8 <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 80106d8:	682b      	ldr	r3, [r5, #0]
volatile uint32_t ulDummy = 0;
 80106da:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 80106dc:	3301      	adds	r3, #1
 80106de:	d008      	beq.n	80106f2 <xPortStartScheduler+0x10a>
 80106e0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80106e4:	f383 8811 	msr	BASEPRI, r3
 80106e8:	f3bf 8f6f 	isb	sy
 80106ec:	f3bf 8f4f 	dsb	sy
 80106f0:	e7fe      	b.n	80106f0 <xPortStartScheduler+0x108>
 80106f2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80106f6:	f383 8811 	msr	BASEPRI, r3
 80106fa:	f3bf 8f6f 	isb	sy
 80106fe:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8010702:	9b03      	ldr	r3, [sp, #12]
 8010704:	2b00      	cmp	r3, #0
 8010706:	d0fc      	beq.n	8010702 <xPortStartScheduler+0x11a>
}
 8010708:	2000      	movs	r0, #0
 801070a:	b004      	add	sp, #16
 801070c:	bd70      	pop	{r4, r5, r6, pc}
 801070e:	bf00      	nop
 8010710:	410fc271 	.word	0x410fc271
 8010714:	410fc270 	.word	0x410fc270
 8010718:	e000e400 	.word	0xe000e400
 801071c:	2000dd90 	.word	0x2000dd90
 8010720:	2000dd8c 	.word	0x2000dd8c
 8010724:	20000044 	.word	0x20000044

08010728 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8010728:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 801072c:	2b0f      	cmp	r3, #15
 801072e:	d90e      	bls.n	801074e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8010730:	4911      	ldr	r1, [pc, #68]	@ (8010778 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8010732:	4a12      	ldr	r2, [pc, #72]	@ (801077c <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8010734:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8010736:	7812      	ldrb	r2, [r2, #0]
 8010738:	429a      	cmp	r2, r3
 801073a:	d908      	bls.n	801074e <vPortValidateInterruptPriority+0x26>
 801073c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010740:	f383 8811 	msr	BASEPRI, r3
 8010744:	f3bf 8f6f 	isb	sy
 8010748:	f3bf 8f4f 	dsb	sy
 801074c:	e7fe      	b.n	801074c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 801074e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8010752:	4a0b      	ldr	r2, [pc, #44]	@ (8010780 <vPortValidateInterruptPriority+0x58>)
 8010754:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 8010758:	6812      	ldr	r2, [r2, #0]
 801075a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 801075e:	4293      	cmp	r3, r2
 8010760:	d908      	bls.n	8010774 <vPortValidateInterruptPriority+0x4c>
 8010762:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010766:	f383 8811 	msr	BASEPRI, r3
 801076a:	f3bf 8f6f 	isb	sy
 801076e:	f3bf 8f4f 	dsb	sy
 8010772:	e7fe      	b.n	8010772 <vPortValidateInterruptPriority+0x4a>
	}
 8010774:	4770      	bx	lr
 8010776:	bf00      	nop
 8010778:	e000e3f0 	.word	0xe000e3f0
 801077c:	2000dd90 	.word	0x2000dd90
 8010780:	2000dd8c 	.word	0x2000dd8c

08010784 <prvCopyDataToQueue>:

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8010784:	6c03      	ldr	r3, [r0, #64]	@ 0x40
{
 8010786:	b570      	push	{r4, r5, r6, lr}
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010788:	6b85      	ldr	r5, [r0, #56]	@ 0x38
{
 801078a:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 801078c:	b92b      	cbnz	r3, 801079a <prvCopyDataToQueue+0x16>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 801078e:	6806      	ldr	r6, [r0, #0]
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8010790:	3501      	adds	r5, #1
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8010792:	b35e      	cbz	r6, 80107ec <prvCopyDataToQueue+0x68>
BaseType_t xReturn = pdFALSE;
 8010794:	4618      	mov	r0, r3
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8010796:	63a5      	str	r5, [r4, #56]	@ 0x38

	return xReturn;
}
 8010798:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 801079a:	4616      	mov	r6, r2
 801079c:	b982      	cbnz	r2, 80107c0 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 801079e:	461a      	mov	r2, r3
 80107a0:	6840      	ldr	r0, [r0, #4]
 80107a2:	f01e faf8 	bl	802ed96 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80107a6:	6863      	ldr	r3, [r4, #4]
 80107a8:	6c21      	ldr	r1, [r4, #64]	@ 0x40
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80107aa:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80107ac:	440b      	add	r3, r1
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80107ae:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80107b0:	6063      	str	r3, [r4, #4]
			pxQueue->pcWriteTo = pxQueue->pcHead;
 80107b2:	bf24      	itt	cs
 80107b4:	6823      	ldrcs	r3, [r4, #0]
 80107b6:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80107b8:	3501      	adds	r5, #1
BaseType_t xReturn = pdFALSE;
 80107ba:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80107bc:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 80107be:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 80107c0:	461a      	mov	r2, r3
 80107c2:	68c0      	ldr	r0, [r0, #12]
 80107c4:	f01e fae7 	bl	802ed96 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80107c8:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80107ca:	68e3      	ldr	r3, [r4, #12]
 80107cc:	4251      	negs	r1, r2
 80107ce:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80107d0:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80107d2:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80107d4:	4293      	cmp	r3, r2
 80107d6:	d202      	bcs.n	80107de <prvCopyDataToQueue+0x5a>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 80107d8:	68a3      	ldr	r3, [r4, #8]
 80107da:	440b      	add	r3, r1
 80107dc:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 80107de:	2e02      	cmp	r6, #2
 80107e0:	d1ea      	bne.n	80107b8 <prvCopyDataToQueue+0x34>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80107e2:	2d01      	cmp	r5, #1
 80107e4:	bf38      	it	cc
 80107e6:	2501      	movcc	r5, #1
BaseType_t xReturn = pdFALSE;
 80107e8:	2000      	movs	r0, #0
 80107ea:	e7d4      	b.n	8010796 <prvCopyDataToQueue+0x12>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80107ec:	6880      	ldr	r0, [r0, #8]
 80107ee:	f001 fdd7 	bl	80123a0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 80107f2:	60a6      	str	r6, [r4, #8]
 80107f4:	e7cf      	b.n	8010796 <prvCopyDataToQueue+0x12>
 80107f6:	bf00      	nop

080107f8 <xQueueGenericCreateStatic>:
	{
 80107f8:	b530      	push	{r4, r5, lr}
 80107fa:	b083      	sub	sp, #12
 80107fc:	f89d 5018 	ldrb.w	r5, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8010800:	b940      	cbnz	r0, 8010814 <xQueueGenericCreateStatic+0x1c>
 8010802:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010806:	f383 8811 	msr	BASEPRI, r3
 801080a:	f3bf 8f6f 	isb	sy
 801080e:	f3bf 8f4f 	dsb	sy
 8010812:	e7fe      	b.n	8010812 <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 8010814:	461c      	mov	r4, r3
 8010816:	b183      	cbz	r3, 801083a <xQueueGenericCreateStatic+0x42>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8010818:	2a00      	cmp	r2, #0
 801081a:	d04a      	beq.n	80108b2 <xQueueGenericCreateStatic+0xba>
 801081c:	b1b1      	cbz	r1, 801084c <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 801081e:	2350      	movs	r3, #80	@ 0x50
 8010820:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8010822:	9b01      	ldr	r3, [sp, #4]
 8010824:	2b50      	cmp	r3, #80	@ 0x50
 8010826:	d01a      	beq.n	801085e <xQueueGenericCreateStatic+0x66>
 8010828:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801082c:	f383 8811 	msr	BASEPRI, r3
 8010830:	f3bf 8f6f 	isb	sy
 8010834:	f3bf 8f4f 	dsb	sy
 8010838:	e7fe      	b.n	8010838 <xQueueGenericCreateStatic+0x40>
 801083a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801083e:	f383 8811 	msr	BASEPRI, r3
 8010842:	f3bf 8f6f 	isb	sy
 8010846:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 801084a:	e7fe      	b.n	801084a <xQueueGenericCreateStatic+0x52>
 801084c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010850:	f383 8811 	msr	BASEPRI, r3
 8010854:	f3bf 8f6f 	isb	sy
 8010858:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 801085c:	e7fe      	b.n	801085c <xQueueGenericCreateStatic+0x64>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 801085e:	9b01      	ldr	r3, [sp, #4]
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8010860:	6022      	str	r2, [r4, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8010862:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8010864:	e9c4 010f 	strd	r0, r1, [r4, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8010868:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
	taskENTER_CRITICAL();
 801086c:	f7ff fe2a 	bl	80104c4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010870:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	@ 0x3c
 8010874:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8010876:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010878:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801087c:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801087e:	440a      	add	r2, r1
 8010880:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8010882:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010884:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8010886:	63a2      	str	r2, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8010888:	22ff      	movs	r2, #255	@ 0xff
 801088a:	f884 2044 	strb.w	r2, [r4, #68]	@ 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801088e:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 8010890:	f884 2045 	strb.w	r2, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8010894:	f104 0010 	add.w	r0, r4, #16
 8010898:	f7ff fd60 	bl	801035c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 801089c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80108a0:	f7ff fd5c 	bl	801035c <vListInitialise>
	taskEXIT_CRITICAL();
 80108a4:	f7ff fe30 	bl	8010508 <vPortExitCritical>
	}
 80108a8:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
 80108aa:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
	}
 80108ae:	b003      	add	sp, #12
 80108b0:	bd30      	pop	{r4, r5, pc}
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80108b2:	b939      	cbnz	r1, 80108c4 <xQueueGenericCreateStatic+0xcc>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80108b4:	2350      	movs	r3, #80	@ 0x50
 80108b6:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80108b8:	9b01      	ldr	r3, [sp, #4]
 80108ba:	2b50      	cmp	r3, #80	@ 0x50
 80108bc:	d1b4      	bne.n	8010828 <xQueueGenericCreateStatic+0x30>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80108be:	9b01      	ldr	r3, [sp, #4]
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 80108c0:	4622      	mov	r2, r4
 80108c2:	e7cd      	b.n	8010860 <xQueueGenericCreateStatic+0x68>
 80108c4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80108c8:	f383 8811 	msr	BASEPRI, r3
 80108cc:	f3bf 8f6f 	isb	sy
 80108d0:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80108d4:	e7fe      	b.n	80108d4 <xQueueGenericCreateStatic+0xdc>
 80108d6:	bf00      	nop

080108d8 <xQueueGenericCreate>:
	{
 80108d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80108da:	b940      	cbnz	r0, 80108ee <xQueueGenericCreate+0x16>
 80108dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80108e0:	f383 8811 	msr	BASEPRI, r3
 80108e4:	f3bf 8f6f 	isb	sy
 80108e8:	f3bf 8f4f 	dsb	sy
 80108ec:	e7fe      	b.n	80108ec <xQueueGenericCreate+0x14>
 80108ee:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80108f0:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 80108f4:	3050      	adds	r0, #80	@ 0x50
 80108f6:	460e      	mov	r6, r1
 80108f8:	4617      	mov	r7, r2
 80108fa:	f7ff fc13 	bl	8010124 <pvPortMalloc>
		if( pxNewQueue != NULL )
 80108fe:	4604      	mov	r4, r0
 8010900:	b340      	cbz	r0, 8010954 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8010902:	2300      	movs	r3, #0
 8010904:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8010908:	b336      	cbz	r6, 8010958 <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801090a:	f100 0350 	add.w	r3, r0, #80	@ 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 801090e:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 8010910:	e9c4 560f 	strd	r5, r6, [r4, #60]	@ 0x3c
	taskENTER_CRITICAL();
 8010914:	f7ff fdd6 	bl	80104c4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010918:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	@ 0x3c
 801091c:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 801091e:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010920:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010924:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010926:	440a      	add	r2, r1
 8010928:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 801092a:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801092c:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 801092e:	63a2      	str	r2, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8010930:	22ff      	movs	r2, #255	@ 0xff
 8010932:	f884 2044 	strb.w	r2, [r4, #68]	@ 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010936:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 8010938:	f884 2045 	strb.w	r2, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 801093c:	f104 0010 	add.w	r0, r4, #16
 8010940:	f7ff fd0c 	bl	801035c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8010944:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8010948:	f7ff fd08 	bl	801035c <vListInitialise>
	taskEXIT_CRITICAL();
 801094c:	f7ff fddc 	bl	8010508 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 8010950:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 8010954:	4620      	mov	r0, r4
 8010956:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8010958:	4603      	mov	r3, r0
 801095a:	e7d8      	b.n	801090e <xQueueGenericCreate+0x36>

0801095c <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 801095c:	b940      	cbnz	r0, 8010970 <xQueueCreateCountingSemaphoreStatic+0x14>
 801095e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010962:	f383 8811 	msr	BASEPRI, r3
 8010966:	f3bf 8f6f 	isb	sy
 801096a:	f3bf 8f4f 	dsb	sy
 801096e:	e7fe      	b.n	801096e <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 8010970:	4288      	cmp	r0, r1
 8010972:	d208      	bcs.n	8010986 <xQueueCreateCountingSemaphoreStatic+0x2a>
 8010974:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010978:	f383 8811 	msr	BASEPRI, r3
 801097c:	f3bf 8f6f 	isb	sy
 8010980:	f3bf 8f4f 	dsb	sy
 8010984:	e7fe      	b.n	8010984 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 8010986:	b530      	push	{r4, r5, lr}
 8010988:	4614      	mov	r4, r2
 801098a:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 801098c:	2a00      	cmp	r2, #0
 801098e:	d03b      	beq.n	8010a08 <xQueueCreateCountingSemaphoreStatic+0xac>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8010990:	2350      	movs	r3, #80	@ 0x50
 8010992:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 8010994:	9b03      	ldr	r3, [sp, #12]
 8010996:	2b50      	cmp	r3, #80	@ 0x50
 8010998:	d008      	beq.n	80109ac <xQueueCreateCountingSemaphoreStatic+0x50>
 801099a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801099e:	f383 8811 	msr	BASEPRI, r3
 80109a2:	f3bf 8f6f 	isb	sy
 80109a6:	f3bf 8f4f 	dsb	sy
 80109aa:	e7fe      	b.n	80109aa <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 80109ac:	2500      	movs	r5, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80109ae:	2301      	movs	r3, #1
 80109b0:	f882 3046 	strb.w	r3, [r2, #70]	@ 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 80109b4:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 80109b6:	e9c2 050f 	strd	r0, r5, [r2, #60]	@ 0x3c
 80109ba:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80109bc:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 80109be:	f7ff fd81 	bl	80104c4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80109c2:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	@ 0x3c
 80109c6:	6820      	ldr	r0, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80109c8:	63a5      	str	r5, [r4, #56]	@ 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80109ca:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80109ce:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80109d0:	4402      	add	r2, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80109d2:	4403      	add	r3, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80109d4:	60a2      	str	r2, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 80109d6:	22ff      	movs	r2, #255	@ 0xff
 80109d8:	f884 2044 	strb.w	r2, [r4, #68]	@ 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80109dc:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 80109de:	f884 2045 	strb.w	r2, [r4, #69]	@ 0x45
		pxQueue->pcWriteTo = pxQueue->pcHead;
 80109e2:	6060      	str	r0, [r4, #4]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 80109e4:	f104 0010 	add.w	r0, r4, #16
 80109e8:	f7ff fcb8 	bl	801035c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 80109ec:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80109f0:	f7ff fcb4 	bl	801035c <vListInitialise>
	taskEXIT_CRITICAL();
 80109f4:	f7ff fd88 	bl	8010508 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80109f8:	9901      	ldr	r1, [sp, #4]
 80109fa:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 80109fc:	2302      	movs	r3, #2
	}
 80109fe:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
 8010a00:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 8010a04:	b005      	add	sp, #20
 8010a06:	bd30      	pop	{r4, r5, pc}
 8010a08:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010a0c:	f383 8811 	msr	BASEPRI, r3
 8010a10:	f3bf 8f6f 	isb	sy
 8010a14:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 8010a18:	e7fe      	b.n	8010a18 <xQueueCreateCountingSemaphoreStatic+0xbc>
 8010a1a:	bf00      	nop

08010a1c <xQueueCreateCountingSemaphore>:
	{
 8010a1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 8010a1e:	b940      	cbnz	r0, 8010a32 <xQueueCreateCountingSemaphore+0x16>
 8010a20:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010a24:	f383 8811 	msr	BASEPRI, r3
 8010a28:	f3bf 8f6f 	isb	sy
 8010a2c:	f3bf 8f4f 	dsb	sy
 8010a30:	e7fe      	b.n	8010a30 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 8010a32:	4288      	cmp	r0, r1
 8010a34:	460e      	mov	r6, r1
 8010a36:	4604      	mov	r4, r0
 8010a38:	d208      	bcs.n	8010a4c <xQueueCreateCountingSemaphore+0x30>
 8010a3a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010a3e:	f383 8811 	msr	BASEPRI, r3
 8010a42:	f3bf 8f6f 	isb	sy
 8010a46:	f3bf 8f4f 	dsb	sy
 8010a4a:	e7fe      	b.n	8010a4a <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8010a4c:	2050      	movs	r0, #80	@ 0x50
 8010a4e:	f7ff fb69 	bl	8010124 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8010a52:	4605      	mov	r5, r0
 8010a54:	b330      	cbz	r0, 8010aa4 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8010a56:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 8010a58:	e9c0 470f 	strd	r4, r7, [r0, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8010a5c:	f880 7046 	strb.w	r7, [r0, #70]	@ 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8010a60:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 8010a62:	f7ff fd2f 	bl	80104c4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010a66:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	@ 0x3c
 8010a6a:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8010a6c:	63af      	str	r7, [r5, #56]	@ 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010a6e:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010a72:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010a74:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010a76:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010a78:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 8010a7a:	22ff      	movs	r2, #255	@ 0xff
 8010a7c:	f885 2044 	strb.w	r2, [r5, #68]	@ 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010a80:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8010a82:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 8010a84:	f885 2045 	strb.w	r2, [r5, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8010a88:	f105 0010 	add.w	r0, r5, #16
 8010a8c:	f7ff fc66 	bl	801035c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8010a90:	f105 0024 	add.w	r0, r5, #36	@ 0x24
 8010a94:	f7ff fc62 	bl	801035c <vListInitialise>
	taskEXIT_CRITICAL();
 8010a98:	f7ff fd36 	bl	8010508 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 8010a9c:	2302      	movs	r3, #2
 8010a9e:	f885 304c 	strb.w	r3, [r5, #76]	@ 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8010aa2:	63ae      	str	r6, [r5, #56]	@ 0x38
	}
 8010aa4:	4628      	mov	r0, r5
 8010aa6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08010aa8 <xQueueGenericSend>:
{
 8010aa8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010aac:	b085      	sub	sp, #20
 8010aae:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 8010ab0:	2800      	cmp	r0, #0
 8010ab2:	d043      	beq.n	8010b3c <xQueueGenericSend+0x94>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010ab4:	4688      	mov	r8, r1
 8010ab6:	461f      	mov	r7, r3
 8010ab8:	4604      	mov	r4, r0
 8010aba:	b399      	cbz	r1, 8010b24 <xQueueGenericSend+0x7c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8010abc:	2f02      	cmp	r7, #2
 8010abe:	d10b      	bne.n	8010ad8 <xQueueGenericSend+0x30>
 8010ac0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8010ac2:	2b01      	cmp	r3, #1
 8010ac4:	d008      	beq.n	8010ad8 <xQueueGenericSend+0x30>
 8010ac6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010aca:	f383 8811 	msr	BASEPRI, r3
 8010ace:	f3bf 8f6f 	isb	sy
 8010ad2:	f3bf 8f4f 	dsb	sy
 8010ad6:	e7fe      	b.n	8010ad6 <xQueueGenericSend+0x2e>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010ad8:	f001 fc12 	bl	8012300 <xTaskGetSchedulerState>
 8010adc:	2800      	cmp	r0, #0
 8010ade:	d036      	beq.n	8010b4e <xQueueGenericSend+0xa6>
		taskENTER_CRITICAL();
 8010ae0:	f7ff fcf0 	bl	80104c4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8010ae4:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8010ae6:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8010ae8:	429a      	cmp	r2, r3
 8010aea:	d301      	bcc.n	8010af0 <xQueueGenericSend+0x48>
 8010aec:	2f02      	cmp	r7, #2
 8010aee:	d13a      	bne.n	8010b66 <xQueueGenericSend+0xbe>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8010af0:	463a      	mov	r2, r7
 8010af2:	4641      	mov	r1, r8
 8010af4:	4620      	mov	r0, r4
 8010af6:	f7ff fe45 	bl	8010784 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010afa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8010afc:	2b00      	cmp	r3, #0
 8010afe:	f040 814b 	bne.w	8010d98 <xQueueGenericSend+0x2f0>
					else if( xYieldRequired != pdFALSE )
 8010b02:	b148      	cbz	r0, 8010b18 <xQueueGenericSend+0x70>
						queueYIELD_IF_USING_PREEMPTION();
 8010b04:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8010b08:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8010b0c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8010b10:	f3bf 8f4f 	dsb	sy
 8010b14:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8010b18:	f7ff fcf6 	bl	8010508 <vPortExitCritical>
				return pdPASS;
 8010b1c:	2001      	movs	r0, #1
}
 8010b1e:	b005      	add	sp, #20
 8010b20:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010b24:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8010b26:	2b00      	cmp	r3, #0
 8010b28:	d0c8      	beq.n	8010abc <xQueueGenericSend+0x14>
 8010b2a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010b2e:	f383 8811 	msr	BASEPRI, r3
 8010b32:	f3bf 8f6f 	isb	sy
 8010b36:	f3bf 8f4f 	dsb	sy
 8010b3a:	e7fe      	b.n	8010b3a <xQueueGenericSend+0x92>
 8010b3c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010b40:	f383 8811 	msr	BASEPRI, r3
 8010b44:	f3bf 8f6f 	isb	sy
 8010b48:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8010b4c:	e7fe      	b.n	8010b4c <xQueueGenericSend+0xa4>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010b4e:	9b01      	ldr	r3, [sp, #4]
 8010b50:	2b00      	cmp	r3, #0
 8010b52:	d0c5      	beq.n	8010ae0 <xQueueGenericSend+0x38>
 8010b54:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010b58:	f383 8811 	msr	BASEPRI, r3
 8010b5c:	f3bf 8f6f 	isb	sy
 8010b60:	f3bf 8f4f 	dsb	sy
 8010b64:	e7fe      	b.n	8010b64 <xQueueGenericSend+0xbc>
 8010b66:	2200      	movs	r2, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010b68:	f104 0624 	add.w	r6, r4, #36	@ 0x24
				if( xTicksToWait == ( TickType_t ) 0 )
 8010b6c:	9b01      	ldr	r3, [sp, #4]
 8010b6e:	2b00      	cmp	r3, #0
 8010b70:	f000 80d1 	beq.w	8010d16 <xQueueGenericSend+0x26e>
				else if( xEntryTimeSet == pdFALSE )
 8010b74:	2a00      	cmp	r2, #0
 8010b76:	f000 80ca 	beq.w	8010d0e <xQueueGenericSend+0x266>
		taskEXIT_CRITICAL();
 8010b7a:	f7ff fcc5 	bl	8010508 <vPortExitCritical>
		vTaskSuspendAll();
 8010b7e:	f001 f9f7 	bl	8011f70 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8010b82:	f7ff fc9f 	bl	80104c4 <vPortEnterCritical>
 8010b86:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8010b8a:	2bff      	cmp	r3, #255	@ 0xff
 8010b8c:	bf04      	itt	eq
 8010b8e:	2300      	moveq	r3, #0
 8010b90:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 8010b94:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8010b98:	2bff      	cmp	r3, #255	@ 0xff
 8010b9a:	bf04      	itt	eq
 8010b9c:	2300      	moveq	r3, #0
 8010b9e:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 8010ba2:	f7ff fcb1 	bl	8010508 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8010ba6:	a901      	add	r1, sp, #4
 8010ba8:	a802      	add	r0, sp, #8
 8010baa:	f001 fb61 	bl	8012270 <xTaskCheckForTimeOut>
 8010bae:	2800      	cmp	r0, #0
 8010bb0:	f040 80b5 	bne.w	8010d1e <xQueueGenericSend+0x276>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8010bb4:	f7ff fc86 	bl	80104c4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8010bb8:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8010bba:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8010bbc:	429a      	cmp	r2, r3
 8010bbe:	d04c      	beq.n	8010c5a <xQueueGenericSend+0x1b2>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8010bc0:	f7ff fca2 	bl	8010508 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010bc4:	f7ff fc7e 	bl	80104c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010bc8:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
 8010bcc:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010bce:	2d00      	cmp	r5, #0
 8010bd0:	dc04      	bgt.n	8010bdc <xQueueGenericSend+0x134>
 8010bd2:	e011      	b.n	8010bf8 <xQueueGenericSend+0x150>
			--cTxLock;
 8010bd4:	1e6a      	subs	r2, r5, #1
 8010bd6:	b2d3      	uxtb	r3, r2
 8010bd8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010bda:	b16b      	cbz	r3, 8010bf8 <xQueueGenericSend+0x150>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010bdc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010bde:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010be0:	b153      	cbz	r3, 8010bf8 <xQueueGenericSend+0x150>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010be2:	f001 faf5 	bl	80121d0 <xTaskRemoveFromEventList>
 8010be6:	2800      	cmp	r0, #0
 8010be8:	d0f4      	beq.n	8010bd4 <xQueueGenericSend+0x12c>
						vTaskMissedYield();
 8010bea:	f001 fb83 	bl	80122f4 <vTaskMissedYield>
			--cTxLock;
 8010bee:	1e6a      	subs	r2, r5, #1
 8010bf0:	b2d3      	uxtb	r3, r2
 8010bf2:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010bf4:	2b00      	cmp	r3, #0
 8010bf6:	d1f1      	bne.n	8010bdc <xQueueGenericSend+0x134>
		pxQueue->cTxLock = queueUNLOCKED;
 8010bf8:	23ff      	movs	r3, #255	@ 0xff
 8010bfa:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 8010bfe:	f7ff fc83 	bl	8010508 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010c02:	f7ff fc5f 	bl	80104c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010c06:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
 8010c0a:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010c0c:	2d00      	cmp	r5, #0
 8010c0e:	dd14      	ble.n	8010c3a <xQueueGenericSend+0x192>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010c10:	f104 0910 	add.w	r9, r4, #16
 8010c14:	e003      	b.n	8010c1e <xQueueGenericSend+0x176>
				--cRxLock;
 8010c16:	1e6a      	subs	r2, r5, #1
 8010c18:	b2d3      	uxtb	r3, r2
 8010c1a:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010c1c:	b16b      	cbz	r3, 8010c3a <xQueueGenericSend+0x192>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010c1e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010c20:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010c22:	b153      	cbz	r3, 8010c3a <xQueueGenericSend+0x192>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010c24:	f001 fad4 	bl	80121d0 <xTaskRemoveFromEventList>
 8010c28:	2800      	cmp	r0, #0
 8010c2a:	d0f4      	beq.n	8010c16 <xQueueGenericSend+0x16e>
					vTaskMissedYield();
 8010c2c:	f001 fb62 	bl	80122f4 <vTaskMissedYield>
				--cRxLock;
 8010c30:	1e6a      	subs	r2, r5, #1
 8010c32:	b2d3      	uxtb	r3, r2
 8010c34:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010c36:	2b00      	cmp	r3, #0
 8010c38:	d1f1      	bne.n	8010c1e <xQueueGenericSend+0x176>
		pxQueue->cRxLock = queueUNLOCKED;
 8010c3a:	23ff      	movs	r3, #255	@ 0xff
 8010c3c:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
 8010c40:	f7ff fc62 	bl	8010508 <vPortExitCritical>
				( void ) xTaskResumeAll();
 8010c44:	f001 f99c 	bl	8011f80 <xTaskResumeAll>
		taskENTER_CRITICAL();
 8010c48:	f7ff fc3c 	bl	80104c4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8010c4c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8010c4e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8010c50:	429a      	cmp	r2, r3
 8010c52:	f4ff af4d 	bcc.w	8010af0 <xQueueGenericSend+0x48>
{
 8010c56:	2201      	movs	r2, #1
 8010c58:	e788      	b.n	8010b6c <xQueueGenericSend+0xc4>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8010c5a:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 8010c5e:	f7ff fc53 	bl	8010508 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8010c62:	9901      	ldr	r1, [sp, #4]
 8010c64:	4648      	mov	r0, r9
 8010c66:	f001 fa25 	bl	80120b4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 8010c6a:	f7ff fc2b 	bl	80104c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010c6e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8010c72:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010c74:	2d00      	cmp	r5, #0
 8010c76:	dc04      	bgt.n	8010c82 <xQueueGenericSend+0x1da>
 8010c78:	e011      	b.n	8010c9e <xQueueGenericSend+0x1f6>
			--cTxLock;
 8010c7a:	1e6b      	subs	r3, r5, #1
 8010c7c:	b2da      	uxtb	r2, r3
 8010c7e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010c80:	b16a      	cbz	r2, 8010c9e <xQueueGenericSend+0x1f6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010c82:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010c84:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010c86:	b153      	cbz	r3, 8010c9e <xQueueGenericSend+0x1f6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010c88:	f001 faa2 	bl	80121d0 <xTaskRemoveFromEventList>
 8010c8c:	2800      	cmp	r0, #0
 8010c8e:	d0f4      	beq.n	8010c7a <xQueueGenericSend+0x1d2>
						vTaskMissedYield();
 8010c90:	f001 fb30 	bl	80122f4 <vTaskMissedYield>
			--cTxLock;
 8010c94:	1e6b      	subs	r3, r5, #1
 8010c96:	b2da      	uxtb	r2, r3
 8010c98:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010c9a:	2a00      	cmp	r2, #0
 8010c9c:	d1f1      	bne.n	8010c82 <xQueueGenericSend+0x1da>
		pxQueue->cTxLock = queueUNLOCKED;
 8010c9e:	23ff      	movs	r3, #255	@ 0xff
 8010ca0:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 8010ca4:	f7ff fc30 	bl	8010508 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010ca8:	f7ff fc0c 	bl	80104c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010cac:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8010cb0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010cb2:	2d00      	cmp	r5, #0
 8010cb4:	dc04      	bgt.n	8010cc0 <xQueueGenericSend+0x218>
 8010cb6:	e011      	b.n	8010cdc <xQueueGenericSend+0x234>
				--cRxLock;
 8010cb8:	1e6b      	subs	r3, r5, #1
 8010cba:	b2da      	uxtb	r2, r3
 8010cbc:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010cbe:	b16a      	cbz	r2, 8010cdc <xQueueGenericSend+0x234>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010cc0:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010cc2:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010cc4:	b153      	cbz	r3, 8010cdc <xQueueGenericSend+0x234>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010cc6:	f001 fa83 	bl	80121d0 <xTaskRemoveFromEventList>
 8010cca:	2800      	cmp	r0, #0
 8010ccc:	d0f4      	beq.n	8010cb8 <xQueueGenericSend+0x210>
					vTaskMissedYield();
 8010cce:	f001 fb11 	bl	80122f4 <vTaskMissedYield>
				--cRxLock;
 8010cd2:	1e6b      	subs	r3, r5, #1
 8010cd4:	b2da      	uxtb	r2, r3
 8010cd6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010cd8:	2a00      	cmp	r2, #0
 8010cda:	d1f1      	bne.n	8010cc0 <xQueueGenericSend+0x218>
		pxQueue->cRxLock = queueUNLOCKED;
 8010cdc:	23ff      	movs	r3, #255	@ 0xff
 8010cde:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
 8010ce2:	f7ff fc11 	bl	8010508 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 8010ce6:	f001 f94b 	bl	8011f80 <xTaskResumeAll>
 8010cea:	b948      	cbnz	r0, 8010d00 <xQueueGenericSend+0x258>
					portYIELD_WITHIN_API();
 8010cec:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8010cf0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8010cf4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8010cf8:	f3bf 8f4f 	dsb	sy
 8010cfc:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 8010d00:	f7ff fbe0 	bl	80104c4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8010d04:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8010d06:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 8010d08:	429a      	cmp	r2, r3
 8010d0a:	d9a4      	bls.n	8010c56 <xQueueGenericSend+0x1ae>
 8010d0c:	e6f0      	b.n	8010af0 <xQueueGenericSend+0x48>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8010d0e:	a802      	add	r0, sp, #8
 8010d10:	f001 faa2 	bl	8012258 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 8010d14:	e731      	b.n	8010b7a <xQueueGenericSend+0xd2>
					taskEXIT_CRITICAL();
 8010d16:	f7ff fbf7 	bl	8010508 <vPortExitCritical>
					return errQUEUE_FULL;
 8010d1a:	2000      	movs	r0, #0
 8010d1c:	e6ff      	b.n	8010b1e <xQueueGenericSend+0x76>
	taskENTER_CRITICAL();
 8010d1e:	f7ff fbd1 	bl	80104c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010d22:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8010d26:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010d28:	2d00      	cmp	r5, #0
 8010d2a:	dd10      	ble.n	8010d4e <xQueueGenericSend+0x2a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010d2c:	f104 0624 	add.w	r6, r4, #36	@ 0x24
 8010d30:	e003      	b.n	8010d3a <xQueueGenericSend+0x292>
			--cTxLock;
 8010d32:	1e6b      	subs	r3, r5, #1
 8010d34:	b2da      	uxtb	r2, r3
 8010d36:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010d38:	b14a      	cbz	r2, 8010d4e <xQueueGenericSend+0x2a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010d3a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010d3c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010d3e:	b133      	cbz	r3, 8010d4e <xQueueGenericSend+0x2a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010d40:	f001 fa46 	bl	80121d0 <xTaskRemoveFromEventList>
 8010d44:	2800      	cmp	r0, #0
 8010d46:	d0f4      	beq.n	8010d32 <xQueueGenericSend+0x28a>
						vTaskMissedYield();
 8010d48:	f001 fad4 	bl	80122f4 <vTaskMissedYield>
 8010d4c:	e7f1      	b.n	8010d32 <xQueueGenericSend+0x28a>
		pxQueue->cTxLock = queueUNLOCKED;
 8010d4e:	23ff      	movs	r3, #255	@ 0xff
 8010d50:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 8010d54:	f7ff fbd8 	bl	8010508 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010d58:	f7ff fbb4 	bl	80104c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010d5c:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8010d60:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010d62:	2d00      	cmp	r5, #0
 8010d64:	dd10      	ble.n	8010d88 <xQueueGenericSend+0x2e0>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010d66:	f104 0610 	add.w	r6, r4, #16
 8010d6a:	e003      	b.n	8010d74 <xQueueGenericSend+0x2cc>
				--cRxLock;
 8010d6c:	1e6b      	subs	r3, r5, #1
 8010d6e:	b2da      	uxtb	r2, r3
 8010d70:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010d72:	b14a      	cbz	r2, 8010d88 <xQueueGenericSend+0x2e0>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010d74:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010d76:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010d78:	b133      	cbz	r3, 8010d88 <xQueueGenericSend+0x2e0>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010d7a:	f001 fa29 	bl	80121d0 <xTaskRemoveFromEventList>
 8010d7e:	2800      	cmp	r0, #0
 8010d80:	d0f4      	beq.n	8010d6c <xQueueGenericSend+0x2c4>
					vTaskMissedYield();
 8010d82:	f001 fab7 	bl	80122f4 <vTaskMissedYield>
 8010d86:	e7f1      	b.n	8010d6c <xQueueGenericSend+0x2c4>
		pxQueue->cRxLock = queueUNLOCKED;
 8010d88:	23ff      	movs	r3, #255	@ 0xff
 8010d8a:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
 8010d8e:	f7ff fbbb 	bl	8010508 <vPortExitCritical>
			( void ) xTaskResumeAll();
 8010d92:	f001 f8f5 	bl	8011f80 <xTaskResumeAll>
			return errQUEUE_FULL;
 8010d96:	e7c0      	b.n	8010d1a <xQueueGenericSend+0x272>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010d98:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8010d9c:	f001 fa18 	bl	80121d0 <xTaskRemoveFromEventList>
 8010da0:	2800      	cmp	r0, #0
 8010da2:	f43f aeb9 	beq.w	8010b18 <xQueueGenericSend+0x70>
 8010da6:	e6ad      	b.n	8010b04 <xQueueGenericSend+0x5c>

08010da8 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 8010da8:	2800      	cmp	r0, #0
 8010daa:	d048      	beq.n	8010e3e <xQueueGenericSendFromISR+0x96>
{
 8010dac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010db0:	460e      	mov	r6, r1
 8010db2:	4617      	mov	r7, r2
 8010db4:	461d      	mov	r5, r3
 8010db6:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010db8:	b321      	cbz	r1, 8010e04 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8010dba:	2d02      	cmp	r5, #2
 8010dbc:	d10b      	bne.n	8010dd6 <xQueueGenericSendFromISR+0x2e>
 8010dbe:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8010dc0:	2b01      	cmp	r3, #1
 8010dc2:	d008      	beq.n	8010dd6 <xQueueGenericSendFromISR+0x2e>
 8010dc4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010dc8:	f383 8811 	msr	BASEPRI, r3
 8010dcc:	f3bf 8f6f 	isb	sy
 8010dd0:	f3bf 8f4f 	dsb	sy
 8010dd4:	e7fe      	b.n	8010dd4 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8010dd6:	f7ff fca7 	bl	8010728 <vPortValidateInterruptPriority>
	__asm volatile
 8010dda:	f3ef 8811 	mrs	r8, BASEPRI
 8010dde:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010de2:	f383 8811 	msr	BASEPRI, r3
 8010de6:	f3bf 8f6f 	isb	sy
 8010dea:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8010dee:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8010df0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8010df2:	429a      	cmp	r2, r3
 8010df4:	d312      	bcc.n	8010e1c <xQueueGenericSendFromISR+0x74>
 8010df6:	2d02      	cmp	r5, #2
 8010df8:	d010      	beq.n	8010e1c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 8010dfa:	2000      	movs	r0, #0
	__asm volatile
 8010dfc:	f388 8811 	msr	BASEPRI, r8
}
 8010e00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010e04:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8010e06:	2b00      	cmp	r3, #0
 8010e08:	d0d7      	beq.n	8010dba <xQueueGenericSendFromISR+0x12>
	__asm volatile
 8010e0a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010e0e:	f383 8811 	msr	BASEPRI, r3
 8010e12:	f3bf 8f6f 	isb	sy
 8010e16:	f3bf 8f4f 	dsb	sy
 8010e1a:	e7fe      	b.n	8010e1a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8010e1c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 8010e1e:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010e22:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8010e24:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 8010e26:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8010e28:	4620      	mov	r0, r4
 8010e2a:	f7ff fcab 	bl	8010784 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8010e2e:	1c6b      	adds	r3, r5, #1
 8010e30:	d00e      	beq.n	8010e50 <xQueueGenericSendFromISR+0xa8>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8010e32:	1c6b      	adds	r3, r5, #1
 8010e34:	b25b      	sxtb	r3, r3
 8010e36:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
 8010e3a:	2001      	movs	r0, #1
 8010e3c:	e7de      	b.n	8010dfc <xQueueGenericSendFromISR+0x54>
 8010e3e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010e42:	f383 8811 	msr	BASEPRI, r3
 8010e46:	f3bf 8f6f 	isb	sy
 8010e4a:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8010e4e:	e7fe      	b.n	8010e4e <xQueueGenericSendFromISR+0xa6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010e50:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8010e52:	2b00      	cmp	r3, #0
 8010e54:	d0f1      	beq.n	8010e3a <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010e56:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8010e5a:	f001 f9b9 	bl	80121d0 <xTaskRemoveFromEventList>
 8010e5e:	2800      	cmp	r0, #0
 8010e60:	d0eb      	beq.n	8010e3a <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 8010e62:	2f00      	cmp	r7, #0
 8010e64:	d0e9      	beq.n	8010e3a <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8010e66:	2301      	movs	r3, #1
 8010e68:	603b      	str	r3, [r7, #0]
 8010e6a:	e7e6      	b.n	8010e3a <xQueueGenericSendFromISR+0x92>

08010e6c <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 8010e6c:	b360      	cbz	r0, 8010ec8 <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
 8010e6e:	6c03      	ldr	r3, [r0, #64]	@ 0x40
{
 8010e70:	b570      	push	{r4, r5, r6, lr}
 8010e72:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 8010e74:	b143      	cbz	r3, 8010e88 <xQueueGiveFromISR+0x1c>
 8010e76:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010e7a:	f383 8811 	msr	BASEPRI, r3
 8010e7e:	f3bf 8f6f 	isb	sy
 8010e82:	f3bf 8f4f 	dsb	sy
 8010e86:	e7fe      	b.n	8010e86 <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8010e88:	6803      	ldr	r3, [r0, #0]
 8010e8a:	460d      	mov	r5, r1
 8010e8c:	b32b      	cbz	r3, 8010eda <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8010e8e:	f7ff fc4b 	bl	8010728 <vPortValidateInterruptPriority>
	__asm volatile
 8010e92:	f3ef 8611 	mrs	r6, BASEPRI
 8010e96:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010e9a:	f383 8811 	msr	BASEPRI, r3
 8010e9e:	f3bf 8f6f 	isb	sy
 8010ea2:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010ea6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8010ea8:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 8010eaa:	429a      	cmp	r2, r3
 8010eac:	d921      	bls.n	8010ef2 <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
 8010eae:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8010eb2:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 8010eb4:	2aff      	cmp	r2, #255	@ 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8010eb6:	63a3      	str	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 8010eb8:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 8010eba:	d01e      	beq.n	8010efa <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8010ebc:	3301      	adds	r3, #1
 8010ebe:	b25b      	sxtb	r3, r3
 8010ec0:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
 8010ec4:	2001      	movs	r0, #1
 8010ec6:	e015      	b.n	8010ef4 <xQueueGiveFromISR+0x88>
	__asm volatile
 8010ec8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010ecc:	f383 8811 	msr	BASEPRI, r3
 8010ed0:	f3bf 8f6f 	isb	sy
 8010ed4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8010ed8:	e7fe      	b.n	8010ed8 <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8010eda:	6883      	ldr	r3, [r0, #8]
 8010edc:	2b00      	cmp	r3, #0
 8010ede:	d0d6      	beq.n	8010e8e <xQueueGiveFromISR+0x22>
 8010ee0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010ee4:	f383 8811 	msr	BASEPRI, r3
 8010ee8:	f3bf 8f6f 	isb	sy
 8010eec:	f3bf 8f4f 	dsb	sy
 8010ef0:	e7fe      	b.n	8010ef0 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
 8010ef2:	2000      	movs	r0, #0
	__asm volatile
 8010ef4:	f386 8811 	msr	BASEPRI, r6
}
 8010ef8:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010efa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8010efc:	2b00      	cmp	r3, #0
 8010efe:	d0e1      	beq.n	8010ec4 <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010f00:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8010f04:	f001 f964 	bl	80121d0 <xTaskRemoveFromEventList>
 8010f08:	2800      	cmp	r0, #0
 8010f0a:	d0db      	beq.n	8010ec4 <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 8010f0c:	2d00      	cmp	r5, #0
 8010f0e:	d0d9      	beq.n	8010ec4 <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8010f10:	2301      	movs	r3, #1
 8010f12:	602b      	str	r3, [r5, #0]
 8010f14:	e7d6      	b.n	8010ec4 <xQueueGiveFromISR+0x58>
 8010f16:	bf00      	nop

08010f18 <xQueueReceive>:
{
 8010f18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010f1c:	b085      	sub	sp, #20
 8010f1e:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8010f20:	2800      	cmp	r0, #0
 8010f22:	f000 8164 	beq.w	80111ee <xQueueReceive+0x2d6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010f26:	460f      	mov	r7, r1
 8010f28:	4604      	mov	r4, r0
 8010f2a:	2900      	cmp	r1, #0
 8010f2c:	f000 8097 	beq.w	801105e <xQueueReceive+0x146>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010f30:	f001 f9e6 	bl	8012300 <xTaskGetSchedulerState>
 8010f34:	2800      	cmp	r0, #0
 8010f36:	f000 809f 	beq.w	8011078 <xQueueReceive+0x160>
		taskENTER_CRITICAL();
 8010f3a:	f7ff fac3 	bl	80104c4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010f3e:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010f40:	2d00      	cmp	r5, #0
 8010f42:	d175      	bne.n	8011030 <xQueueReceive+0x118>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010f44:	9b01      	ldr	r3, [sp, #4]
 8010f46:	2b00      	cmp	r3, #0
 8010f48:	f000 80f4 	beq.w	8011134 <xQueueReceive+0x21c>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8010f4c:	a802      	add	r0, sp, #8
 8010f4e:	f001 f983 	bl	8012258 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 8010f52:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010f54:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		taskEXIT_CRITICAL();
 8010f58:	f7ff fad6 	bl	8010508 <vPortExitCritical>
		vTaskSuspendAll();
 8010f5c:	f001 f808 	bl	8011f70 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8010f60:	f7ff fab0 	bl	80104c4 <vPortEnterCritical>
 8010f64:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8010f68:	2bff      	cmp	r3, #255	@ 0xff
 8010f6a:	bf08      	it	eq
 8010f6c:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 8010f70:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8010f74:	2bff      	cmp	r3, #255	@ 0xff
 8010f76:	bf08      	it	eq
 8010f78:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 8010f7c:	f7ff fac4 	bl	8010508 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8010f80:	a901      	add	r1, sp, #4
 8010f82:	a802      	add	r0, sp, #8
 8010f84:	f001 f974 	bl	8012270 <xTaskCheckForTimeOut>
 8010f88:	2800      	cmp	r0, #0
 8010f8a:	f040 8082 	bne.w	8011092 <xQueueReceive+0x17a>
	taskENTER_CRITICAL();
 8010f8e:	f7ff fa99 	bl	80104c4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8010f92:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8010f94:	2b00      	cmp	r3, #0
 8010f96:	f000 80d3 	beq.w	8011140 <xQueueReceive+0x228>
	taskEXIT_CRITICAL();
 8010f9a:	f7ff fab5 	bl	8010508 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010f9e:	f7ff fa91 	bl	80104c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010fa2:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8010fa6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010fa8:	2d00      	cmp	r5, #0
 8010faa:	dd14      	ble.n	8010fd6 <xQueueReceive+0xbe>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010fac:	f104 0924 	add.w	r9, r4, #36	@ 0x24
 8010fb0:	e003      	b.n	8010fba <xQueueReceive+0xa2>
			--cTxLock;
 8010fb2:	1e6b      	subs	r3, r5, #1
 8010fb4:	b2da      	uxtb	r2, r3
 8010fb6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010fb8:	b16a      	cbz	r2, 8010fd6 <xQueueReceive+0xbe>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010fba:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010fbc:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010fbe:	b153      	cbz	r3, 8010fd6 <xQueueReceive+0xbe>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010fc0:	f001 f906 	bl	80121d0 <xTaskRemoveFromEventList>
 8010fc4:	2800      	cmp	r0, #0
 8010fc6:	d0f4      	beq.n	8010fb2 <xQueueReceive+0x9a>
						vTaskMissedYield();
 8010fc8:	f001 f994 	bl	80122f4 <vTaskMissedYield>
			--cTxLock;
 8010fcc:	1e6b      	subs	r3, r5, #1
 8010fce:	b2da      	uxtb	r2, r3
 8010fd0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010fd2:	2a00      	cmp	r2, #0
 8010fd4:	d1f1      	bne.n	8010fba <xQueueReceive+0xa2>
		pxQueue->cTxLock = queueUNLOCKED;
 8010fd6:	23ff      	movs	r3, #255	@ 0xff
 8010fd8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 8010fdc:	f7ff fa94 	bl	8010508 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010fe0:	f7ff fa70 	bl	80104c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010fe4:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8010fe8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010fea:	2d00      	cmp	r5, #0
 8010fec:	dd14      	ble.n	8011018 <xQueueReceive+0x100>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010fee:	f104 0910 	add.w	r9, r4, #16
 8010ff2:	e003      	b.n	8010ffc <xQueueReceive+0xe4>
				--cRxLock;
 8010ff4:	1e6b      	subs	r3, r5, #1
 8010ff6:	b2da      	uxtb	r2, r3
 8010ff8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010ffa:	b16a      	cbz	r2, 8011018 <xQueueReceive+0x100>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010ffc:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010ffe:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8011000:	b153      	cbz	r3, 8011018 <xQueueReceive+0x100>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8011002:	f001 f8e5 	bl	80121d0 <xTaskRemoveFromEventList>
 8011006:	2800      	cmp	r0, #0
 8011008:	d0f4      	beq.n	8010ff4 <xQueueReceive+0xdc>
					vTaskMissedYield();
 801100a:	f001 f973 	bl	80122f4 <vTaskMissedYield>
				--cRxLock;
 801100e:	1e6b      	subs	r3, r5, #1
 8011010:	b2da      	uxtb	r2, r3
 8011012:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8011014:	2a00      	cmp	r2, #0
 8011016:	d1f1      	bne.n	8010ffc <xQueueReceive+0xe4>
		pxQueue->cRxLock = queueUNLOCKED;
 8011018:	23ff      	movs	r3, #255	@ 0xff
 801101a:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
 801101e:	f7ff fa73 	bl	8010508 <vPortExitCritical>
				( void ) xTaskResumeAll();
 8011022:	f000 ffad 	bl	8011f80 <xTaskResumeAll>
		taskENTER_CRITICAL();
 8011026:	f7ff fa4d 	bl	80104c4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 801102a:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 801102c:	2d00      	cmp	r5, #0
 801102e:	d07d      	beq.n	801112c <xQueueReceive+0x214>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8011030:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8011032:	b152      	cbz	r2, 801104a <xQueueReceive+0x132>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8011034:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8011036:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8011038:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 801103a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 801103c:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 801103e:	bf24      	itt	cs
 8011040:	6821      	ldrcs	r1, [r4, #0]
 8011042:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8011044:	4638      	mov	r0, r7
 8011046:	f01d fea6 	bl	802ed96 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 801104a:	3d01      	subs	r5, #1
 801104c:	63a5      	str	r5, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 801104e:	6923      	ldr	r3, [r4, #16]
 8011050:	2b00      	cmp	r3, #0
 8011052:	f040 80d5 	bne.w	8011200 <xQueueReceive+0x2e8>
				taskEXIT_CRITICAL();
 8011056:	f7ff fa57 	bl	8010508 <vPortExitCritical>
				return pdPASS;
 801105a:	2001      	movs	r0, #1
 801105c:	e06d      	b.n	801113a <xQueueReceive+0x222>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 801105e:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8011060:	2b00      	cmp	r3, #0
 8011062:	f43f af65 	beq.w	8010f30 <xQueueReceive+0x18>
	__asm volatile
 8011066:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801106a:	f383 8811 	msr	BASEPRI, r3
 801106e:	f3bf 8f6f 	isb	sy
 8011072:	f3bf 8f4f 	dsb	sy
 8011076:	e7fe      	b.n	8011076 <xQueueReceive+0x15e>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8011078:	9b01      	ldr	r3, [sp, #4]
 801107a:	2b00      	cmp	r3, #0
 801107c:	f43f af5d 	beq.w	8010f3a <xQueueReceive+0x22>
 8011080:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8011084:	f383 8811 	msr	BASEPRI, r3
 8011088:	f3bf 8f6f 	isb	sy
 801108c:	f3bf 8f4f 	dsb	sy
 8011090:	e7fe      	b.n	8011090 <xQueueReceive+0x178>
	taskENTER_CRITICAL();
 8011092:	f7ff fa17 	bl	80104c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8011096:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 801109a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 801109c:	2d00      	cmp	r5, #0
 801109e:	dc04      	bgt.n	80110aa <xQueueReceive+0x192>
 80110a0:	e011      	b.n	80110c6 <xQueueReceive+0x1ae>
			--cTxLock;
 80110a2:	1e6b      	subs	r3, r5, #1
 80110a4:	b2da      	uxtb	r2, r3
 80110a6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80110a8:	b16a      	cbz	r2, 80110c6 <xQueueReceive+0x1ae>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80110aa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80110ac:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80110ae:	b153      	cbz	r3, 80110c6 <xQueueReceive+0x1ae>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80110b0:	f001 f88e 	bl	80121d0 <xTaskRemoveFromEventList>
 80110b4:	2800      	cmp	r0, #0
 80110b6:	d0f4      	beq.n	80110a2 <xQueueReceive+0x18a>
						vTaskMissedYield();
 80110b8:	f001 f91c 	bl	80122f4 <vTaskMissedYield>
			--cTxLock;
 80110bc:	1e6b      	subs	r3, r5, #1
 80110be:	b2da      	uxtb	r2, r3
 80110c0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80110c2:	2a00      	cmp	r2, #0
 80110c4:	d1f1      	bne.n	80110aa <xQueueReceive+0x192>
		pxQueue->cTxLock = queueUNLOCKED;
 80110c6:	23ff      	movs	r3, #255	@ 0xff
 80110c8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 80110cc:	f7ff fa1c 	bl	8010508 <vPortExitCritical>
	taskENTER_CRITICAL();
 80110d0:	f7ff f9f8 	bl	80104c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80110d4:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80110d8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80110da:	2d00      	cmp	r5, #0
 80110dc:	dd14      	ble.n	8011108 <xQueueReceive+0x1f0>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80110de:	f104 0910 	add.w	r9, r4, #16
 80110e2:	e003      	b.n	80110ec <xQueueReceive+0x1d4>
				--cRxLock;
 80110e4:	1e6b      	subs	r3, r5, #1
 80110e6:	b2da      	uxtb	r2, r3
 80110e8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80110ea:	b16a      	cbz	r2, 8011108 <xQueueReceive+0x1f0>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80110ec:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80110ee:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80110f0:	b153      	cbz	r3, 8011108 <xQueueReceive+0x1f0>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80110f2:	f001 f86d 	bl	80121d0 <xTaskRemoveFromEventList>
 80110f6:	2800      	cmp	r0, #0
 80110f8:	d0f4      	beq.n	80110e4 <xQueueReceive+0x1cc>
					vTaskMissedYield();
 80110fa:	f001 f8fb 	bl	80122f4 <vTaskMissedYield>
				--cRxLock;
 80110fe:	1e6b      	subs	r3, r5, #1
 8011100:	b2da      	uxtb	r2, r3
 8011102:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8011104:	2a00      	cmp	r2, #0
 8011106:	d1f1      	bne.n	80110ec <xQueueReceive+0x1d4>
		pxQueue->cRxLock = queueUNLOCKED;
 8011108:	23ff      	movs	r3, #255	@ 0xff
 801110a:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
 801110e:	f7ff f9fb 	bl	8010508 <vPortExitCritical>
			( void ) xTaskResumeAll();
 8011112:	f000 ff35 	bl	8011f80 <xTaskResumeAll>
	taskENTER_CRITICAL();
 8011116:	f7ff f9d5 	bl	80104c4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 801111a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 801111c:	b153      	cbz	r3, 8011134 <xQueueReceive+0x21c>
	taskEXIT_CRITICAL();
 801111e:	f7ff f9f3 	bl	8010508 <vPortExitCritical>
		taskENTER_CRITICAL();
 8011122:	f7ff f9cf 	bl	80104c4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8011126:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8011128:	2d00      	cmp	r5, #0
 801112a:	d181      	bne.n	8011030 <xQueueReceive+0x118>
				if( xTicksToWait == ( TickType_t ) 0 )
 801112c:	9b01      	ldr	r3, [sp, #4]
 801112e:	2b00      	cmp	r3, #0
 8011130:	f47f af12 	bne.w	8010f58 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 8011134:	f7ff f9e8 	bl	8010508 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8011138:	2000      	movs	r0, #0
}
 801113a:	b005      	add	sp, #20
 801113c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8011140:	f104 0924 	add.w	r9, r4, #36	@ 0x24
	taskEXIT_CRITICAL();
 8011144:	f7ff f9e0 	bl	8010508 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8011148:	9901      	ldr	r1, [sp, #4]
 801114a:	4648      	mov	r0, r9
 801114c:	f000 ffb2 	bl	80120b4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 8011150:	f7ff f9b8 	bl	80104c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8011154:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8011158:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 801115a:	2d00      	cmp	r5, #0
 801115c:	dc04      	bgt.n	8011168 <xQueueReceive+0x250>
 801115e:	e011      	b.n	8011184 <xQueueReceive+0x26c>
			--cTxLock;
 8011160:	1e6b      	subs	r3, r5, #1
 8011162:	b2da      	uxtb	r2, r3
 8011164:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8011166:	b16a      	cbz	r2, 8011184 <xQueueReceive+0x26c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8011168:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801116a:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 801116c:	b153      	cbz	r3, 8011184 <xQueueReceive+0x26c>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801116e:	f001 f82f 	bl	80121d0 <xTaskRemoveFromEventList>
 8011172:	2800      	cmp	r0, #0
 8011174:	d0f4      	beq.n	8011160 <xQueueReceive+0x248>
						vTaskMissedYield();
 8011176:	f001 f8bd 	bl	80122f4 <vTaskMissedYield>
			--cTxLock;
 801117a:	1e6b      	subs	r3, r5, #1
 801117c:	b2da      	uxtb	r2, r3
 801117e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8011180:	2a00      	cmp	r2, #0
 8011182:	d1f1      	bne.n	8011168 <xQueueReceive+0x250>
		pxQueue->cTxLock = queueUNLOCKED;
 8011184:	23ff      	movs	r3, #255	@ 0xff
 8011186:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 801118a:	f7ff f9bd 	bl	8010508 <vPortExitCritical>
	taskENTER_CRITICAL();
 801118e:	f7ff f999 	bl	80104c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8011192:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8011196:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8011198:	2d00      	cmp	r5, #0
 801119a:	dd14      	ble.n	80111c6 <xQueueReceive+0x2ae>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801119c:	f104 0910 	add.w	r9, r4, #16
 80111a0:	e003      	b.n	80111aa <xQueueReceive+0x292>
				--cRxLock;
 80111a2:	1e6b      	subs	r3, r5, #1
 80111a4:	b2da      	uxtb	r2, r3
 80111a6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80111a8:	b16a      	cbz	r2, 80111c6 <xQueueReceive+0x2ae>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80111aa:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80111ac:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80111ae:	b153      	cbz	r3, 80111c6 <xQueueReceive+0x2ae>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80111b0:	f001 f80e 	bl	80121d0 <xTaskRemoveFromEventList>
 80111b4:	2800      	cmp	r0, #0
 80111b6:	d0f4      	beq.n	80111a2 <xQueueReceive+0x28a>
					vTaskMissedYield();
 80111b8:	f001 f89c 	bl	80122f4 <vTaskMissedYield>
				--cRxLock;
 80111bc:	1e6b      	subs	r3, r5, #1
 80111be:	b2da      	uxtb	r2, r3
 80111c0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80111c2:	2a00      	cmp	r2, #0
 80111c4:	d1f1      	bne.n	80111aa <xQueueReceive+0x292>
		pxQueue->cRxLock = queueUNLOCKED;
 80111c6:	23ff      	movs	r3, #255	@ 0xff
 80111c8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
 80111cc:	f7ff f99c 	bl	8010508 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 80111d0:	f000 fed6 	bl	8011f80 <xTaskResumeAll>
 80111d4:	2800      	cmp	r0, #0
 80111d6:	d1a4      	bne.n	8011122 <xQueueReceive+0x20a>
					portYIELD_WITHIN_API();
 80111d8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80111dc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80111e0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80111e4:	f3bf 8f4f 	dsb	sy
 80111e8:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 80111ec:	e799      	b.n	8011122 <xQueueReceive+0x20a>
 80111ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80111f2:	f383 8811 	msr	BASEPRI, r3
 80111f6:	f3bf 8f6f 	isb	sy
 80111fa:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 80111fe:	e7fe      	b.n	80111fe <xQueueReceive+0x2e6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8011200:	f104 0010 	add.w	r0, r4, #16
 8011204:	f000 ffe4 	bl	80121d0 <xTaskRemoveFromEventList>
 8011208:	2800      	cmp	r0, #0
 801120a:	f43f af24 	beq.w	8011056 <xQueueReceive+0x13e>
						queueYIELD_IF_USING_PREEMPTION();
 801120e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8011212:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8011216:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 801121a:	f3bf 8f4f 	dsb	sy
 801121e:	f3bf 8f6f 	isb	sy
 8011222:	e718      	b.n	8011056 <xQueueReceive+0x13e>

08011224 <xQueueSemaphoreTake>:
{
 8011224:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011228:	b084      	sub	sp, #16
 801122a:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 801122c:	2800      	cmp	r0, #0
 801122e:	d05e      	beq.n	80112ee <xQueueSemaphoreTake+0xca>
	configASSERT( pxQueue->uxItemSize == 0 );
 8011230:	6c07      	ldr	r7, [r0, #64]	@ 0x40
 8011232:	4604      	mov	r4, r0
 8011234:	b147      	cbz	r7, 8011248 <xQueueSemaphoreTake+0x24>
 8011236:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801123a:	f383 8811 	msr	BASEPRI, r3
 801123e:	f3bf 8f6f 	isb	sy
 8011242:	f3bf 8f4f 	dsb	sy
 8011246:	e7fe      	b.n	8011246 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8011248:	f001 f85a 	bl	8012300 <xTaskGetSchedulerState>
 801124c:	4605      	mov	r5, r0
 801124e:	2800      	cmp	r0, #0
 8011250:	d056      	beq.n	8011300 <xQueueSemaphoreTake+0xdc>
 8011252:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8011254:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		taskENTER_CRITICAL();
 8011258:	f7ff f934 	bl	80104c4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 801125c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 801125e:	2b00      	cmp	r3, #0
 8011260:	f040 814d 	bne.w	80114fe <xQueueSemaphoreTake+0x2da>
				if( xTicksToWait == ( TickType_t ) 0 )
 8011264:	9b01      	ldr	r3, [sp, #4]
 8011266:	2b00      	cmp	r3, #0
 8011268:	f000 813e 	beq.w	80114e8 <xQueueSemaphoreTake+0x2c4>
				else if( xEntryTimeSet == pdFALSE )
 801126c:	2d00      	cmp	r5, #0
 801126e:	f000 80a3 	beq.w	80113b8 <xQueueSemaphoreTake+0x194>
		taskEXIT_CRITICAL();
 8011272:	f7ff f949 	bl	8010508 <vPortExitCritical>
		vTaskSuspendAll();
 8011276:	f000 fe7b 	bl	8011f70 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 801127a:	f7ff f923 	bl	80104c4 <vPortEnterCritical>
 801127e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8011282:	2bff      	cmp	r3, #255	@ 0xff
 8011284:	bf04      	itt	eq
 8011286:	2300      	moveq	r3, #0
 8011288:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 801128c:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8011290:	2bff      	cmp	r3, #255	@ 0xff
 8011292:	bf04      	itt	eq
 8011294:	2300      	moveq	r3, #0
 8011296:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 801129a:	f7ff f935 	bl	8010508 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 801129e:	a901      	add	r1, sp, #4
 80112a0:	a802      	add	r0, sp, #8
 80112a2:	f000 ffe5 	bl	8012270 <xTaskCheckForTimeOut>
 80112a6:	2800      	cmp	r0, #0
 80112a8:	d137      	bne.n	801131a <xQueueSemaphoreTake+0xf6>
	taskENTER_CRITICAL();
 80112aa:	f7ff f90b 	bl	80104c4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 80112ae:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80112b0:	2b00      	cmp	r3, #0
 80112b2:	f000 80ae 	beq.w	8011412 <xQueueSemaphoreTake+0x1ee>
	taskEXIT_CRITICAL();
 80112b6:	f7ff f927 	bl	8010508 <vPortExitCritical>
	taskENTER_CRITICAL();
 80112ba:	f7ff f903 	bl	80104c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 80112be:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 80112c2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80112c4:	2d00      	cmp	r5, #0
 80112c6:	dd7f      	ble.n	80113c8 <xQueueSemaphoreTake+0x1a4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80112c8:	f104 0824 	add.w	r8, r4, #36	@ 0x24
 80112cc:	e004      	b.n	80112d8 <xQueueSemaphoreTake+0xb4>
			--cTxLock;
 80112ce:	1e6b      	subs	r3, r5, #1
 80112d0:	b2da      	uxtb	r2, r3
 80112d2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80112d4:	2a00      	cmp	r2, #0
 80112d6:	d077      	beq.n	80113c8 <xQueueSemaphoreTake+0x1a4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80112d8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80112da:	4640      	mov	r0, r8
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80112dc:	2b00      	cmp	r3, #0
 80112de:	d073      	beq.n	80113c8 <xQueueSemaphoreTake+0x1a4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80112e0:	f000 ff76 	bl	80121d0 <xTaskRemoveFromEventList>
 80112e4:	2800      	cmp	r0, #0
 80112e6:	d0f2      	beq.n	80112ce <xQueueSemaphoreTake+0xaa>
						vTaskMissedYield();
 80112e8:	f001 f804 	bl	80122f4 <vTaskMissedYield>
 80112ec:	e7ef      	b.n	80112ce <xQueueSemaphoreTake+0xaa>
 80112ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80112f2:	f383 8811 	msr	BASEPRI, r3
 80112f6:	f3bf 8f6f 	isb	sy
 80112fa:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 80112fe:	e7fe      	b.n	80112fe <xQueueSemaphoreTake+0xda>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8011300:	9b01      	ldr	r3, [sp, #4]
 8011302:	2b00      	cmp	r3, #0
 8011304:	f000 80d7 	beq.w	80114b6 <xQueueSemaphoreTake+0x292>
 8011308:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801130c:	f383 8811 	msr	BASEPRI, r3
 8011310:	f3bf 8f6f 	isb	sy
 8011314:	f3bf 8f4f 	dsb	sy
 8011318:	e7fe      	b.n	8011318 <xQueueSemaphoreTake+0xf4>
	taskENTER_CRITICAL();
 801131a:	f7ff f8d3 	bl	80104c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 801131e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8011322:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8011324:	2d00      	cmp	r5, #0
 8011326:	dc04      	bgt.n	8011332 <xQueueSemaphoreTake+0x10e>
 8011328:	e011      	b.n	801134e <xQueueSemaphoreTake+0x12a>
			--cTxLock;
 801132a:	1e6b      	subs	r3, r5, #1
 801132c:	b2da      	uxtb	r2, r3
 801132e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8011330:	b16a      	cbz	r2, 801134e <xQueueSemaphoreTake+0x12a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8011332:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8011334:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8011336:	b153      	cbz	r3, 801134e <xQueueSemaphoreTake+0x12a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8011338:	f000 ff4a 	bl	80121d0 <xTaskRemoveFromEventList>
 801133c:	2800      	cmp	r0, #0
 801133e:	d0f4      	beq.n	801132a <xQueueSemaphoreTake+0x106>
						vTaskMissedYield();
 8011340:	f000 ffd8 	bl	80122f4 <vTaskMissedYield>
			--cTxLock;
 8011344:	1e6b      	subs	r3, r5, #1
 8011346:	b2da      	uxtb	r2, r3
 8011348:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 801134a:	2a00      	cmp	r2, #0
 801134c:	d1f1      	bne.n	8011332 <xQueueSemaphoreTake+0x10e>
		pxQueue->cTxLock = queueUNLOCKED;
 801134e:	23ff      	movs	r3, #255	@ 0xff
 8011350:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 8011354:	f7ff f8d8 	bl	8010508 <vPortExitCritical>
	taskENTER_CRITICAL();
 8011358:	f7ff f8b4 	bl	80104c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 801135c:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8011360:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8011362:	2d00      	cmp	r5, #0
 8011364:	dd14      	ble.n	8011390 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8011366:	f104 0810 	add.w	r8, r4, #16
 801136a:	e003      	b.n	8011374 <xQueueSemaphoreTake+0x150>
				--cRxLock;
 801136c:	1e6b      	subs	r3, r5, #1
 801136e:	b2da      	uxtb	r2, r3
 8011370:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8011372:	b16a      	cbz	r2, 8011390 <xQueueSemaphoreTake+0x16c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8011374:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8011376:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8011378:	b153      	cbz	r3, 8011390 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801137a:	f000 ff29 	bl	80121d0 <xTaskRemoveFromEventList>
 801137e:	2800      	cmp	r0, #0
 8011380:	d0f4      	beq.n	801136c <xQueueSemaphoreTake+0x148>
					vTaskMissedYield();
 8011382:	f000 ffb7 	bl	80122f4 <vTaskMissedYield>
				--cRxLock;
 8011386:	1e6b      	subs	r3, r5, #1
 8011388:	b2da      	uxtb	r2, r3
 801138a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 801138c:	2a00      	cmp	r2, #0
 801138e:	d1f1      	bne.n	8011374 <xQueueSemaphoreTake+0x150>
		pxQueue->cRxLock = queueUNLOCKED;
 8011390:	23ff      	movs	r3, #255	@ 0xff
 8011392:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
 8011396:	f7ff f8b7 	bl	8010508 <vPortExitCritical>
			( void ) xTaskResumeAll();
 801139a:	f000 fdf1 	bl	8011f80 <xTaskResumeAll>
	taskENTER_CRITICAL();
 801139e:	f7ff f891 	bl	80104c4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 80113a2:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80113a4:	b963      	cbnz	r3, 80113c0 <xQueueSemaphoreTake+0x19c>
	taskEXIT_CRITICAL();
 80113a6:	f7ff f8af 	bl	8010508 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 80113aa:	2f00      	cmp	r7, #0
 80113ac:	f040 8085 	bne.w	80114ba <xQueueSemaphoreTake+0x296>
					return errQUEUE_EMPTY;
 80113b0:	2000      	movs	r0, #0
}
 80113b2:	b004      	add	sp, #16
 80113b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
					vTaskInternalSetTimeOutState( &xTimeOut );
 80113b8:	a802      	add	r0, sp, #8
 80113ba:	f000 ff4d 	bl	8012258 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 80113be:	e758      	b.n	8011272 <xQueueSemaphoreTake+0x4e>
	taskEXIT_CRITICAL();
 80113c0:	f7ff f8a2 	bl	8010508 <vPortExitCritical>
	return xReturn;
 80113c4:	2501      	movs	r5, #1
 80113c6:	e747      	b.n	8011258 <xQueueSemaphoreTake+0x34>
		pxQueue->cTxLock = queueUNLOCKED;
 80113c8:	23ff      	movs	r3, #255	@ 0xff
 80113ca:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 80113ce:	f7ff f89b 	bl	8010508 <vPortExitCritical>
	taskENTER_CRITICAL();
 80113d2:	f7ff f877 	bl	80104c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80113d6:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80113da:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80113dc:	2d00      	cmp	r5, #0
 80113de:	dd10      	ble.n	8011402 <xQueueSemaphoreTake+0x1de>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80113e0:	f104 0810 	add.w	r8, r4, #16
 80113e4:	e003      	b.n	80113ee <xQueueSemaphoreTake+0x1ca>
				--cRxLock;
 80113e6:	1e6b      	subs	r3, r5, #1
 80113e8:	b2da      	uxtb	r2, r3
 80113ea:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80113ec:	b14a      	cbz	r2, 8011402 <xQueueSemaphoreTake+0x1de>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80113ee:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80113f0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80113f2:	b133      	cbz	r3, 8011402 <xQueueSemaphoreTake+0x1de>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80113f4:	f000 feec 	bl	80121d0 <xTaskRemoveFromEventList>
 80113f8:	2800      	cmp	r0, #0
 80113fa:	d0f4      	beq.n	80113e6 <xQueueSemaphoreTake+0x1c2>
					vTaskMissedYield();
 80113fc:	f000 ff7a 	bl	80122f4 <vTaskMissedYield>
 8011400:	e7f1      	b.n	80113e6 <xQueueSemaphoreTake+0x1c2>
		pxQueue->cRxLock = queueUNLOCKED;
 8011402:	23ff      	movs	r3, #255	@ 0xff
 8011404:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
 8011408:	f7ff f87e 	bl	8010508 <vPortExitCritical>
				( void ) xTaskResumeAll();
 801140c:	f000 fdb8 	bl	8011f80 <xTaskResumeAll>
 8011410:	e7d8      	b.n	80113c4 <xQueueSemaphoreTake+0x1a0>
	taskEXIT_CRITICAL();
 8011412:	f7ff f879 	bl	8010508 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8011416:	6823      	ldr	r3, [r4, #0]
 8011418:	2b00      	cmp	r3, #0
 801141a:	d05c      	beq.n	80114d6 <xQueueSemaphoreTake+0x2b2>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 801141c:	f104 0824 	add.w	r8, r4, #36	@ 0x24
 8011420:	9901      	ldr	r1, [sp, #4]
 8011422:	4640      	mov	r0, r8
 8011424:	f000 fe46 	bl	80120b4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 8011428:	f7ff f84c 	bl	80104c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 801142c:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8011430:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8011432:	2d00      	cmp	r5, #0
 8011434:	dc04      	bgt.n	8011440 <xQueueSemaphoreTake+0x21c>
 8011436:	e00d      	b.n	8011454 <xQueueSemaphoreTake+0x230>
			--cTxLock;
 8011438:	1e6b      	subs	r3, r5, #1
 801143a:	b2da      	uxtb	r2, r3
 801143c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 801143e:	b14a      	cbz	r2, 8011454 <xQueueSemaphoreTake+0x230>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8011440:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8011442:	4640      	mov	r0, r8
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8011444:	b133      	cbz	r3, 8011454 <xQueueSemaphoreTake+0x230>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8011446:	f000 fec3 	bl	80121d0 <xTaskRemoveFromEventList>
 801144a:	2800      	cmp	r0, #0
 801144c:	d0f4      	beq.n	8011438 <xQueueSemaphoreTake+0x214>
						vTaskMissedYield();
 801144e:	f000 ff51 	bl	80122f4 <vTaskMissedYield>
 8011452:	e7f1      	b.n	8011438 <xQueueSemaphoreTake+0x214>
		pxQueue->cTxLock = queueUNLOCKED;
 8011454:	23ff      	movs	r3, #255	@ 0xff
 8011456:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 801145a:	f7ff f855 	bl	8010508 <vPortExitCritical>
	taskENTER_CRITICAL();
 801145e:	f7ff f831 	bl	80104c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8011462:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8011466:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8011468:	2d00      	cmp	r5, #0
 801146a:	dd10      	ble.n	801148e <xQueueSemaphoreTake+0x26a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801146c:	f104 0810 	add.w	r8, r4, #16
 8011470:	e003      	b.n	801147a <xQueueSemaphoreTake+0x256>
				--cRxLock;
 8011472:	1e6b      	subs	r3, r5, #1
 8011474:	b2da      	uxtb	r2, r3
 8011476:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8011478:	b14a      	cbz	r2, 801148e <xQueueSemaphoreTake+0x26a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 801147a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801147c:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 801147e:	b133      	cbz	r3, 801148e <xQueueSemaphoreTake+0x26a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8011480:	f000 fea6 	bl	80121d0 <xTaskRemoveFromEventList>
 8011484:	2800      	cmp	r0, #0
 8011486:	d0f4      	beq.n	8011472 <xQueueSemaphoreTake+0x24e>
					vTaskMissedYield();
 8011488:	f000 ff34 	bl	80122f4 <vTaskMissedYield>
 801148c:	e7f1      	b.n	8011472 <xQueueSemaphoreTake+0x24e>
		pxQueue->cRxLock = queueUNLOCKED;
 801148e:	23ff      	movs	r3, #255	@ 0xff
 8011490:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
 8011494:	f7ff f838 	bl	8010508 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 8011498:	f000 fd72 	bl	8011f80 <xTaskResumeAll>
 801149c:	2800      	cmp	r0, #0
 801149e:	d191      	bne.n	80113c4 <xQueueSemaphoreTake+0x1a0>
					portYIELD_WITHIN_API();
 80114a0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80114a4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80114a8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80114ac:	f3bf 8f4f 	dsb	sy
 80114b0:	f3bf 8f6f 	isb	sy
 80114b4:	e786      	b.n	80113c4 <xQueueSemaphoreTake+0x1a0>
 80114b6:	462f      	mov	r7, r5
 80114b8:	e6cc      	b.n	8011254 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 80114ba:	f7ff f803 	bl	80104c4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 80114be:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 80114c0:	b119      	cbz	r1, 80114ca <xQueueSemaphoreTake+0x2a6>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 80114c2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80114c4:	6819      	ldr	r1, [r3, #0]
 80114c6:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 80114ca:	68a0      	ldr	r0, [r4, #8]
 80114cc:	f000 ffac 	bl	8012428 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 80114d0:	f7ff f81a 	bl	8010508 <vPortExitCritical>
 80114d4:	e76c      	b.n	80113b0 <xQueueSemaphoreTake+0x18c>
						taskENTER_CRITICAL();
 80114d6:	f7fe fff5 	bl	80104c4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 80114da:	68a0      	ldr	r0, [r4, #8]
 80114dc:	f000 ff20 	bl	8012320 <xTaskPriorityInherit>
 80114e0:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 80114e2:	f7ff f811 	bl	8010508 <vPortExitCritical>
 80114e6:	e799      	b.n	801141c <xQueueSemaphoreTake+0x1f8>
						configASSERT( xInheritanceOccurred == pdFALSE );
 80114e8:	2f00      	cmp	r7, #0
 80114ea:	d0f1      	beq.n	80114d0 <xQueueSemaphoreTake+0x2ac>
 80114ec:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80114f0:	f383 8811 	msr	BASEPRI, r3
 80114f4:	f3bf 8f6f 	isb	sy
 80114f8:	f3bf 8f4f 	dsb	sy
 80114fc:	e7fe      	b.n	80114fc <xQueueSemaphoreTake+0x2d8>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80114fe:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8011500:	3b01      	subs	r3, #1
 8011502:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8011504:	b12a      	cbz	r2, 8011512 <xQueueSemaphoreTake+0x2ee>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8011506:	6923      	ldr	r3, [r4, #16]
 8011508:	b93b      	cbnz	r3, 801151a <xQueueSemaphoreTake+0x2f6>
				taskEXIT_CRITICAL();
 801150a:	f7fe fffd 	bl	8010508 <vPortExitCritical>
				return pdPASS;
 801150e:	2001      	movs	r0, #1
 8011510:	e74f      	b.n	80113b2 <xQueueSemaphoreTake+0x18e>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8011512:	f000 ffd9 	bl	80124c8 <pvTaskIncrementMutexHeldCount>
 8011516:	60a0      	str	r0, [r4, #8]
 8011518:	e7f5      	b.n	8011506 <xQueueSemaphoreTake+0x2e2>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801151a:	f104 0010 	add.w	r0, r4, #16
 801151e:	f000 fe57 	bl	80121d0 <xTaskRemoveFromEventList>
 8011522:	2800      	cmp	r0, #0
 8011524:	d0f1      	beq.n	801150a <xQueueSemaphoreTake+0x2e6>
						queueYIELD_IF_USING_PREEMPTION();
 8011526:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 801152a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801152e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8011532:	f3bf 8f4f 	dsb	sy
 8011536:	f3bf 8f6f 	isb	sy
 801153a:	e7e6      	b.n	801150a <xQueueSemaphoreTake+0x2e6>

0801153c <xQueueReceiveFromISR>:
{
 801153c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 8011540:	b310      	cbz	r0, 8011588 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8011542:	460e      	mov	r6, r1
 8011544:	4617      	mov	r7, r2
 8011546:	4604      	mov	r4, r0
 8011548:	b191      	cbz	r1, 8011570 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 801154a:	f7ff f8ed 	bl	8010728 <vPortValidateInterruptPriority>
	__asm volatile
 801154e:	f3ef 8911 	mrs	r9, BASEPRI
 8011552:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8011556:	f383 8811 	msr	BASEPRI, r3
 801155a:	f3bf 8f6f 	isb	sy
 801155e:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8011562:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8011564:	b9cd      	cbnz	r5, 801159a <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 8011566:	4628      	mov	r0, r5
	__asm volatile
 8011568:	f389 8811 	msr	BASEPRI, r9
}
 801156c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8011570:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8011572:	2b00      	cmp	r3, #0
 8011574:	d0e9      	beq.n	801154a <xQueueReceiveFromISR+0xe>
	__asm volatile
 8011576:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801157a:	f383 8811 	msr	BASEPRI, r3
 801157e:	f3bf 8f6f 	isb	sy
 8011582:	f3bf 8f4f 	dsb	sy
 8011586:	e7fe      	b.n	8011586 <xQueueReceiveFromISR+0x4a>
 8011588:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801158c:	f383 8811 	msr	BASEPRI, r3
 8011590:	f3bf 8f6f 	isb	sy
 8011594:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8011598:	e7fe      	b.n	8011598 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 801159a:	f894 8044 	ldrb.w	r8, [r4, #68]	@ 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 801159e:	6c22      	ldr	r2, [r4, #64]	@ 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 80115a0:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 80115a4:	b152      	cbz	r2, 80115bc <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80115a6:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80115a8:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80115aa:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80115ac:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80115ae:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 80115b0:	bf24      	itt	cs
 80115b2:	6821      	ldrcs	r1, [r4, #0]
 80115b4:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80115b6:	4630      	mov	r0, r6
 80115b8:	f01d fbed 	bl	802ed96 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80115bc:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 80115be:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80115c2:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 80115c4:	d006      	beq.n	80115d4 <xQueueReceiveFromISR+0x98>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80115c6:	f108 0301 	add.w	r3, r8, #1
 80115ca:	b25b      	sxtb	r3, r3
 80115cc:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
			xReturn = pdPASS;
 80115d0:	2001      	movs	r0, #1
 80115d2:	e7c9      	b.n	8011568 <xQueueReceiveFromISR+0x2c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80115d4:	6923      	ldr	r3, [r4, #16]
 80115d6:	2b00      	cmp	r3, #0
 80115d8:	d0fa      	beq.n	80115d0 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80115da:	f104 0010 	add.w	r0, r4, #16
 80115de:	f000 fdf7 	bl	80121d0 <xTaskRemoveFromEventList>
 80115e2:	2800      	cmp	r0, #0
 80115e4:	d0f4      	beq.n	80115d0 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 80115e6:	2f00      	cmp	r7, #0
 80115e8:	d0f2      	beq.n	80115d0 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80115ea:	2301      	movs	r3, #1
 80115ec:	603b      	str	r3, [r7, #0]
 80115ee:	e7ef      	b.n	80115d0 <xQueueReceiveFromISR+0x94>

080115f0 <vQueueDelete>:
	configASSERT( pxQueue );
 80115f0:	b1f0      	cbz	r0, 8011630 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80115f2:	4b21      	ldr	r3, [pc, #132]	@ (8011678 <vQueueDelete+0x88>)
 80115f4:	685a      	ldr	r2, [r3, #4]
 80115f6:	4290      	cmp	r0, r2
 80115f8:	d025      	beq.n	8011646 <vQueueDelete+0x56>
 80115fa:	68da      	ldr	r2, [r3, #12]
 80115fc:	4290      	cmp	r0, r2
 80115fe:	d02c      	beq.n	801165a <vQueueDelete+0x6a>
 8011600:	695a      	ldr	r2, [r3, #20]
 8011602:	4290      	cmp	r0, r2
 8011604:	d02b      	beq.n	801165e <vQueueDelete+0x6e>
 8011606:	69da      	ldr	r2, [r3, #28]
 8011608:	4290      	cmp	r0, r2
 801160a:	d02a      	beq.n	8011662 <vQueueDelete+0x72>
 801160c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 801160e:	4290      	cmp	r0, r2
 8011610:	d029      	beq.n	8011666 <vQueueDelete+0x76>
 8011612:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8011614:	4290      	cmp	r0, r2
 8011616:	d01e      	beq.n	8011656 <vQueueDelete+0x66>
 8011618:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 801161a:	4290      	cmp	r0, r2
 801161c:	d025      	beq.n	801166a <vQueueDelete+0x7a>
 801161e:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8011620:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8011622:	bf08      	it	eq
 8011624:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8011626:	d00f      	beq.n	8011648 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8011628:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 801162c:	b14b      	cbz	r3, 8011642 <vQueueDelete+0x52>
}
 801162e:	4770      	bx	lr
 8011630:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8011634:	f383 8811 	msr	BASEPRI, r3
 8011638:	f3bf 8f6f 	isb	sy
 801163c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8011640:	e7fe      	b.n	8011640 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 8011642:	f7fe be27 	b.w	8010294 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8011646:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8011648:	ed9f 7b09 	vldr	d7, [pc, #36]	@ 8011670 <vQueueDelete+0x80>
 801164c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8011650:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 8011654:	e7e8      	b.n	8011628 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8011656:	2205      	movs	r2, #5
 8011658:	e7f6      	b.n	8011648 <vQueueDelete+0x58>
 801165a:	2201      	movs	r2, #1
 801165c:	e7f4      	b.n	8011648 <vQueueDelete+0x58>
 801165e:	2202      	movs	r2, #2
 8011660:	e7f2      	b.n	8011648 <vQueueDelete+0x58>
 8011662:	2203      	movs	r2, #3
 8011664:	e7f0      	b.n	8011648 <vQueueDelete+0x58>
 8011666:	2204      	movs	r2, #4
 8011668:	e7ee      	b.n	8011648 <vQueueDelete+0x58>
 801166a:	2206      	movs	r2, #6
 801166c:	e7ec      	b.n	8011648 <vQueueDelete+0x58>
 801166e:	bf00      	nop
	...
 8011678:	2000dd98 	.word	0x2000dd98

0801167c <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 801167c:	4b12      	ldr	r3, [pc, #72]	@ (80116c8 <vQueueAddToRegistry+0x4c>)
 801167e:	681a      	ldr	r2, [r3, #0]
 8011680:	b17a      	cbz	r2, 80116a2 <vQueueAddToRegistry+0x26>
 8011682:	689a      	ldr	r2, [r3, #8]
 8011684:	b162      	cbz	r2, 80116a0 <vQueueAddToRegistry+0x24>
 8011686:	691a      	ldr	r2, [r3, #16]
 8011688:	b192      	cbz	r2, 80116b0 <vQueueAddToRegistry+0x34>
 801168a:	699a      	ldr	r2, [r3, #24]
 801168c:	b192      	cbz	r2, 80116b4 <vQueueAddToRegistry+0x38>
 801168e:	6a1a      	ldr	r2, [r3, #32]
 8011690:	b192      	cbz	r2, 80116b8 <vQueueAddToRegistry+0x3c>
 8011692:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8011694:	b192      	cbz	r2, 80116bc <vQueueAddToRegistry+0x40>
 8011696:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8011698:	b192      	cbz	r2, 80116c0 <vQueueAddToRegistry+0x44>
 801169a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 801169c:	b192      	cbz	r2, 80116c4 <vQueueAddToRegistry+0x48>
	}
 801169e:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80116a0:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 80116a2:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80116a6:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 80116aa:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 80116ae:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80116b0:	2202      	movs	r2, #2
 80116b2:	e7f6      	b.n	80116a2 <vQueueAddToRegistry+0x26>
 80116b4:	2203      	movs	r2, #3
 80116b6:	e7f4      	b.n	80116a2 <vQueueAddToRegistry+0x26>
 80116b8:	2204      	movs	r2, #4
 80116ba:	e7f2      	b.n	80116a2 <vQueueAddToRegistry+0x26>
 80116bc:	2205      	movs	r2, #5
 80116be:	e7f0      	b.n	80116a2 <vQueueAddToRegistry+0x26>
 80116c0:	2206      	movs	r2, #6
 80116c2:	e7ee      	b.n	80116a2 <vQueueAddToRegistry+0x26>
 80116c4:	2207      	movs	r2, #7
 80116c6:	e7ec      	b.n	80116a2 <vQueueAddToRegistry+0x26>
 80116c8:	2000dd98 	.word	0x2000dd98

080116cc <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 80116cc:	b570      	push	{r4, r5, r6, lr}
 80116ce:	4605      	mov	r5, r0
 80116d0:	460e      	mov	r6, r1
 80116d2:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 80116d4:	f7fe fef6 	bl	80104c4 <vPortEnterCritical>
 80116d8:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
 80116dc:	2bff      	cmp	r3, #255	@ 0xff
 80116de:	bf04      	itt	eq
 80116e0:	2300      	moveq	r3, #0
 80116e2:	f885 3044 	strbeq.w	r3, [r5, #68]	@ 0x44
 80116e6:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
 80116ea:	2bff      	cmp	r3, #255	@ 0xff
 80116ec:	bf04      	itt	eq
 80116ee:	2300      	moveq	r3, #0
 80116f0:	f885 3045 	strbeq.w	r3, [r5, #69]	@ 0x45
 80116f4:	f7fe ff08 	bl	8010508 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 80116f8:	6bab      	ldr	r3, [r5, #56]	@ 0x38
 80116fa:	2b00      	cmp	r3, #0
 80116fc:	d043      	beq.n	8011786 <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 80116fe:	f7fe fee1 	bl	80104c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8011702:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
 8011706:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8011708:	2c00      	cmp	r4, #0
 801170a:	dd14      	ble.n	8011736 <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801170c:	f105 0624 	add.w	r6, r5, #36	@ 0x24
 8011710:	e003      	b.n	801171a <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 8011712:	1e63      	subs	r3, r4, #1
 8011714:	b2da      	uxtb	r2, r3
 8011716:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8011718:	b16a      	cbz	r2, 8011736 <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 801171a:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801171c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 801171e:	b153      	cbz	r3, 8011736 <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8011720:	f000 fd56 	bl	80121d0 <xTaskRemoveFromEventList>
 8011724:	2800      	cmp	r0, #0
 8011726:	d0f4      	beq.n	8011712 <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 8011728:	f000 fde4 	bl	80122f4 <vTaskMissedYield>
			--cTxLock;
 801172c:	1e63      	subs	r3, r4, #1
 801172e:	b2da      	uxtb	r2, r3
 8011730:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8011732:	2a00      	cmp	r2, #0
 8011734:	d1f1      	bne.n	801171a <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 8011736:	23ff      	movs	r3, #255	@ 0xff
 8011738:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
	taskEXIT_CRITICAL();
 801173c:	f7fe fee4 	bl	8010508 <vPortExitCritical>
	taskENTER_CRITICAL();
 8011740:	f7fe fec0 	bl	80104c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8011744:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
 8011748:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 801174a:	2c00      	cmp	r4, #0
 801174c:	dd14      	ble.n	8011778 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801174e:	f105 0610 	add.w	r6, r5, #16
 8011752:	e003      	b.n	801175c <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 8011754:	1e63      	subs	r3, r4, #1
 8011756:	b2da      	uxtb	r2, r3
 8011758:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 801175a:	b16a      	cbz	r2, 8011778 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 801175c:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801175e:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8011760:	b153      	cbz	r3, 8011778 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8011762:	f000 fd35 	bl	80121d0 <xTaskRemoveFromEventList>
 8011766:	2800      	cmp	r0, #0
 8011768:	d0f4      	beq.n	8011754 <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 801176a:	f000 fdc3 	bl	80122f4 <vTaskMissedYield>
				--cRxLock;
 801176e:	1e63      	subs	r3, r4, #1
 8011770:	b2da      	uxtb	r2, r3
 8011772:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8011774:	2a00      	cmp	r2, #0
 8011776:	d1f1      	bne.n	801175c <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 8011778:	23ff      	movs	r3, #255	@ 0xff
 801177a:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 801177e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8011782:	f7fe bec1 	b.w	8010508 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8011786:	4622      	mov	r2, r4
 8011788:	4631      	mov	r1, r6
 801178a:	f105 0024 	add.w	r0, r5, #36	@ 0x24
 801178e:	f000 fcd5 	bl	801213c <vTaskPlaceOnEventListRestricted>
 8011792:	e7b4      	b.n	80116fe <vQueueWaitForMessageRestricted+0x32>

08011794 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8011794:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011798:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 801179a:	f7fe fe93 	bl	80104c4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 801179e:	4a34      	ldr	r2, [pc, #208]	@ (8011870 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 80117a0:	4e34      	ldr	r6, [pc, #208]	@ (8011874 <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 80117a2:	6813      	ldr	r3, [r2, #0]
 80117a4:	3301      	adds	r3, #1
 80117a6:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 80117a8:	6833      	ldr	r3, [r6, #0]
 80117aa:	2b00      	cmp	r3, #0
 80117ac:	d031      	beq.n	8011812 <prvAddNewTaskToReadyList+0x7e>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 80117ae:	4c32      	ldr	r4, [pc, #200]	@ (8011878 <prvAddNewTaskToReadyList+0xe4>)
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 80117b0:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 80117b2:	6823      	ldr	r3, [r4, #0]
 80117b4:	b333      	cbz	r3, 8011804 <prvAddNewTaskToReadyList+0x70>
 80117b6:	4f31      	ldr	r7, [pc, #196]	@ (801187c <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 80117b8:	4a31      	ldr	r2, [pc, #196]	@ (8011880 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 80117ba:	4932      	ldr	r1, [pc, #200]	@ (8011884 <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 80117bc:	6813      	ldr	r3, [r2, #0]
 80117be:	3301      	adds	r3, #1
 80117c0:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 80117c2:	646b      	str	r3, [r5, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 80117c4:	680b      	ldr	r3, [r1, #0]
 80117c6:	4283      	cmp	r3, r0
 80117c8:	bf38      	it	cc
 80117ca:	6008      	strcc	r0, [r1, #0]
 80117cc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80117d0:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 80117d4:	1d29      	adds	r1, r5, #4
 80117d6:	f7fe fdd1 	bl	801037c <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 80117da:	f7fe fe95 	bl	8010508 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 80117de:	6823      	ldr	r3, [r4, #0]
 80117e0:	b173      	cbz	r3, 8011800 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 80117e2:	6832      	ldr	r2, [r6, #0]
 80117e4:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
 80117e6:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 80117e8:	429a      	cmp	r2, r3
 80117ea:	d209      	bcs.n	8011800 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 80117ec:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80117f0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80117f4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80117f8:	f3bf 8f4f 	dsb	sy
 80117fc:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8011800:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8011804:	6833      	ldr	r3, [r6, #0]
 8011806:	4f1d      	ldr	r7, [pc, #116]	@ (801187c <prvAddNewTaskToReadyList+0xe8>)
 8011808:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801180a:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 801180c:	bf98      	it	ls
 801180e:	6035      	strls	r5, [r6, #0]
 8011810:	e7d2      	b.n	80117b8 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 8011812:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8011814:	6813      	ldr	r3, [r2, #0]
 8011816:	2b01      	cmp	r3, #1
 8011818:	d003      	beq.n	8011822 <prvAddNewTaskToReadyList+0x8e>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 801181a:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
 801181c:	4f17      	ldr	r7, [pc, #92]	@ (801187c <prvAddNewTaskToReadyList+0xe8>)
 801181e:	4c16      	ldr	r4, [pc, #88]	@ (8011878 <prvAddNewTaskToReadyList+0xe4>)
 8011820:	e7ca      	b.n	80117b8 <prvAddNewTaskToReadyList+0x24>
 8011822:	4f16      	ldr	r7, [pc, #88]	@ (801187c <prvAddNewTaskToReadyList+0xe8>)
 8011824:	463c      	mov	r4, r7
 8011826:	f507 688c 	add.w	r8, r7, #1120	@ 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 801182a:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 801182c:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 801182e:	f7fe fd95 	bl	801035c <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8011832:	45a0      	cmp	r8, r4
 8011834:	d1f9      	bne.n	801182a <prvAddNewTaskToReadyList+0x96>
	}

	vListInitialise( &xDelayedTaskList1 );
 8011836:	f8df 9064 	ldr.w	r9, [pc, #100]	@ 801189c <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 801183a:	f8df 8064 	ldr.w	r8, [pc, #100]	@ 80118a0 <prvAddNewTaskToReadyList+0x10c>
 801183e:	4c0e      	ldr	r4, [pc, #56]	@ (8011878 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 8011840:	4648      	mov	r0, r9
 8011842:	f7fe fd8b 	bl	801035c <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8011846:	4640      	mov	r0, r8
 8011848:	f7fe fd88 	bl	801035c <vListInitialise>
	vListInitialise( &xPendingReadyList );
 801184c:	480e      	ldr	r0, [pc, #56]	@ (8011888 <prvAddNewTaskToReadyList+0xf4>)
 801184e:	f7fe fd85 	bl	801035c <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8011852:	480e      	ldr	r0, [pc, #56]	@ (801188c <prvAddNewTaskToReadyList+0xf8>)
 8011854:	f7fe fd82 	bl	801035c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8011858:	480d      	ldr	r0, [pc, #52]	@ (8011890 <prvAddNewTaskToReadyList+0xfc>)
 801185a:	f7fe fd7f 	bl	801035c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 801185e:	4b0d      	ldr	r3, [pc, #52]	@ (8011894 <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 8011860:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 8011862:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8011866:	4b0c      	ldr	r3, [pc, #48]	@ (8011898 <prvAddNewTaskToReadyList+0x104>)
 8011868:	f8c3 8000 	str.w	r8, [r3]
}
 801186c:	e7a4      	b.n	80117b8 <prvAddNewTaskToReadyList+0x24>
 801186e:	bf00      	nop
 8011870:	2000ddfc 	.word	0x2000ddfc
 8011874:	2000e2d0 	.word	0x2000e2d0
 8011878:	2000ddf0 	.word	0x2000ddf0
 801187c:	2000de70 	.word	0x2000de70
 8011880:	2000dde0 	.word	0x2000dde0
 8011884:	2000ddf4 	.word	0x2000ddf4
 8011888:	2000de2c 	.word	0x2000de2c
 801188c:	2000de18 	.word	0x2000de18
 8011890:	2000de00 	.word	0x2000de00
 8011894:	2000de44 	.word	0x2000de44
 8011898:	2000de40 	.word	0x2000de40
 801189c:	2000de5c 	.word	0x2000de5c
 80118a0:	2000de48 	.word	0x2000de48

080118a4 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80118a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80118a8:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80118aa:	f8dd 9024 	ldr.w	r9, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80118ae:	0096      	lsls	r6, r2, #2
 80118b0:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80118b2:	4607      	mov	r7, r0
 80118b4:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80118b6:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80118b8:	21a5      	movs	r1, #165	@ 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80118ba:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80118bc:	f01d f945 	bl	802eb4a <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 80118c0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80118c2:	3e04      	subs	r6, #4
 80118c4:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 80118c6:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 80118ca:	2d00      	cmp	r5, #0
 80118cc:	d074      	beq.n	80119b8 <prvInitialiseNewTask.constprop.0+0x114>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80118ce:	782b      	ldrb	r3, [r5, #0]
 80118d0:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 80118d4:	2b00      	cmp	r3, #0
 80118d6:	d036      	beq.n	8011946 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80118d8:	786b      	ldrb	r3, [r5, #1]
 80118da:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 80118de:	b393      	cbz	r3, 8011946 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80118e0:	78ab      	ldrb	r3, [r5, #2]
 80118e2:	f884 3036 	strb.w	r3, [r4, #54]	@ 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 80118e6:	b373      	cbz	r3, 8011946 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80118e8:	78eb      	ldrb	r3, [r5, #3]
 80118ea:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 80118ee:	b353      	cbz	r3, 8011946 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80118f0:	792b      	ldrb	r3, [r5, #4]
 80118f2:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 80118f6:	b333      	cbz	r3, 8011946 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80118f8:	796b      	ldrb	r3, [r5, #5]
 80118fa:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 80118fe:	b313      	cbz	r3, 8011946 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011900:	79ab      	ldrb	r3, [r5, #6]
 8011902:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 8011906:	b1f3      	cbz	r3, 8011946 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011908:	79eb      	ldrb	r3, [r5, #7]
 801190a:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 801190e:	b1d3      	cbz	r3, 8011946 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011910:	7a2b      	ldrb	r3, [r5, #8]
 8011912:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 8011916:	b1b3      	cbz	r3, 8011946 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011918:	7a6b      	ldrb	r3, [r5, #9]
 801191a:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 801191e:	b193      	cbz	r3, 8011946 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011920:	7aab      	ldrb	r3, [r5, #10]
 8011922:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 8011926:	b173      	cbz	r3, 8011946 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011928:	7aeb      	ldrb	r3, [r5, #11]
 801192a:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 801192e:	b153      	cbz	r3, 8011946 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011930:	7b2b      	ldrb	r3, [r5, #12]
 8011932:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 8011936:	b133      	cbz	r3, 8011946 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011938:	7b6b      	ldrb	r3, [r5, #13]
 801193a:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 801193e:	b113      	cbz	r3, 8011946 <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011940:	7bab      	ldrb	r3, [r5, #14]
 8011942:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8011946:	2300      	movs	r3, #0
 8011948:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 801194c:	9d08      	ldr	r5, [sp, #32]
 801194e:	2d37      	cmp	r5, #55	@ 0x37
 8011950:	bf28      	it	cs
 8011952:	2537      	movcs	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8011954:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8011958:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 801195a:	64e5      	str	r5, [r4, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 801195c:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 801195e:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8011962:	f7fe fd07 	bl	8010374 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011966:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 801196a:	f104 0018 	add.w	r0, r4, #24
 801196e:	f7fe fd01 	bl	8010374 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011972:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 8011974:	f8c4 a0a4 	str.w	sl, [r4, #164]	@ 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8011978:	4651      	mov	r1, sl
 801197a:	224c      	movs	r2, #76	@ 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 801197c:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 801197e:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 8011980:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8011984:	f884 a0a8 	strb.w	sl, [r4, #168]	@ 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8011988:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 801198c:	f01d f8dd 	bl	802eb4a <memset>
 8011990:	4b0b      	ldr	r3, [pc, #44]	@ (80119c0 <prvInitialiseNewTask.constprop.0+0x11c>)
 8011992:	65e3      	str	r3, [r4, #92]	@ 0x5c
 8011994:	f103 0568 	add.w	r5, r3, #104	@ 0x68
 8011998:	33d0      	adds	r3, #208	@ 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 801199a:	4642      	mov	r2, r8
 801199c:	4639      	mov	r1, r7
 801199e:	4630      	mov	r0, r6
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 80119a0:	6625      	str	r5, [r4, #96]	@ 0x60
 80119a2:	6663      	str	r3, [r4, #100]	@ 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 80119a4:	f7fe fd62 	bl	801046c <pxPortInitialiseStack>
 80119a8:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 80119aa:	f1b9 0f00 	cmp.w	r9, #0
 80119ae:	d001      	beq.n	80119b4 <prvInitialiseNewTask.constprop.0+0x110>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 80119b0:	f8c9 4000 	str.w	r4, [r9]
}
 80119b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 80119b8:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 80119bc:	e7c6      	b.n	801194c <prvInitialiseNewTask.constprop.0+0xa8>
 80119be:	bf00      	nop
 80119c0:	2000ee70 	.word	0x2000ee70

080119c4 <prvIdleTask>:
{
 80119c4:	b580      	push	{r7, lr}
 80119c6:	4d24      	ldr	r5, [pc, #144]	@ (8011a58 <prvIdleTask+0x94>)
 80119c8:	4f24      	ldr	r7, [pc, #144]	@ (8011a5c <prvIdleTask+0x98>)
 80119ca:	4e25      	ldr	r6, [pc, #148]	@ (8011a60 <prvIdleTask+0x9c>)
 80119cc:	f8df 8094 	ldr.w	r8, [pc, #148]	@ 8011a64 <prvIdleTask+0xa0>
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80119d0:	682b      	ldr	r3, [r5, #0]
 80119d2:	b35b      	cbz	r3, 8011a2c <prvIdleTask+0x68>
		{
			taskENTER_CRITICAL();
 80119d4:	f7fe fd76 	bl	80104c4 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80119d8:	68fb      	ldr	r3, [r7, #12]
 80119da:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80119dc:	1d20      	adds	r0, r4, #4
 80119de:	f7fe fcf3 	bl	80103c8 <uxListRemove>
				--uxCurrentNumberOfTasks;
 80119e2:	6833      	ldr	r3, [r6, #0]
 80119e4:	3b01      	subs	r3, #1
 80119e6:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 80119e8:	682b      	ldr	r3, [r5, #0]
 80119ea:	3b01      	subs	r3, #1
 80119ec:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 80119ee:	f7fe fd8b 	bl	8010508 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 80119f2:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80119f6:	f01d f8f1 	bl	802ebdc <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80119fa:	f894 30a9 	ldrb.w	r3, [r4, #169]	@ 0xa9
 80119fe:	b163      	cbz	r3, 8011a1a <prvIdleTask+0x56>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8011a00:	2b01      	cmp	r3, #1
 8011a02:	d024      	beq.n	8011a4e <prvIdleTask+0x8a>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8011a04:	2b02      	cmp	r3, #2
 8011a06:	d0e3      	beq.n	80119d0 <prvIdleTask+0xc>
 8011a08:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8011a0c:	f383 8811 	msr	BASEPRI, r3
 8011a10:	f3bf 8f6f 	isb	sy
 8011a14:	f3bf 8f4f 	dsb	sy
 8011a18:	e7fe      	b.n	8011a18 <prvIdleTask+0x54>
				vPortFree( pxTCB->pxStack );
 8011a1a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8011a1c:	f7fe fc3a 	bl	8010294 <vPortFree>
				vPortFree( pxTCB );
 8011a20:	4620      	mov	r0, r4
 8011a22:	f7fe fc37 	bl	8010294 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8011a26:	682b      	ldr	r3, [r5, #0]
 8011a28:	2b00      	cmp	r3, #0
 8011a2a:	d1d3      	bne.n	80119d4 <prvIdleTask+0x10>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8011a2c:	f8d8 3000 	ldr.w	r3, [r8]
 8011a30:	2b01      	cmp	r3, #1
 8011a32:	d909      	bls.n	8011a48 <prvIdleTask+0x84>
				taskYIELD();
 8011a34:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8011a38:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8011a3c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8011a40:	f3bf 8f4f 	dsb	sy
 8011a44:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 8011a48:	f7f1 fdd6 	bl	80035f8 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 8011a4c:	e7c0      	b.n	80119d0 <prvIdleTask+0xc>
				vPortFree( pxTCB );
 8011a4e:	4620      	mov	r0, r4
 8011a50:	f7fe fc20 	bl	8010294 <vPortFree>
 8011a54:	e7bc      	b.n	80119d0 <prvIdleTask+0xc>
 8011a56:	bf00      	nop
 8011a58:	2000de14 	.word	0x2000de14
 8011a5c:	2000de18 	.word	0x2000de18
 8011a60:	2000ddfc 	.word	0x2000ddfc
 8011a64:	2000de70 	.word	0x2000de70

08011a68 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 8011a68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8011a6c:	4b46      	ldr	r3, [pc, #280]	@ (8011b88 <xTaskIncrementTick.part.0+0x120>)
 8011a6e:	681e      	ldr	r6, [r3, #0]
 8011a70:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 8011a72:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 8011a74:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8011a76:	2e00      	cmp	r6, #0
 8011a78:	d03e      	beq.n	8011af8 <xTaskIncrementTick.part.0+0x90>
 8011a7a:	4b44      	ldr	r3, [pc, #272]	@ (8011b8c <xTaskIncrementTick.part.0+0x124>)
 8011a7c:	9301      	str	r3, [sp, #4]
		if( xConstTickCount >= xNextTaskUnblockTime )
 8011a7e:	681b      	ldr	r3, [r3, #0]
 8011a80:	429e      	cmp	r6, r3
 8011a82:	d346      	bcc.n	8011b12 <xTaskIncrementTick.part.0+0xaa>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8011a84:	4f42      	ldr	r7, [pc, #264]	@ (8011b90 <xTaskIncrementTick.part.0+0x128>)
 8011a86:	f8df 9118 	ldr.w	r9, [pc, #280]	@ 8011ba0 <xTaskIncrementTick.part.0+0x138>
 8011a8a:	683b      	ldr	r3, [r7, #0]
 8011a8c:	f8df a114 	ldr.w	sl, [pc, #276]	@ 8011ba4 <xTaskIncrementTick.part.0+0x13c>
 8011a90:	681d      	ldr	r5, [r3, #0]
 8011a92:	2d00      	cmp	r5, #0
 8011a94:	d073      	beq.n	8011b7e <xTaskIncrementTick.part.0+0x116>
					prvAddTaskToReadyList( pxTCB );
 8011a96:	f8df 8110 	ldr.w	r8, [pc, #272]	@ 8011ba8 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 8011a9a:	2500      	movs	r5, #0
 8011a9c:	e020      	b.n	8011ae0 <xTaskIncrementTick.part.0+0x78>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8011a9e:	f7fe fc93 	bl	80103c8 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8011aa2:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8011aa4:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8011aa8:	b10b      	cbz	r3, 8011aae <xTaskIncrementTick.part.0+0x46>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8011aaa:	f7fe fc8d 	bl	80103c8 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8011aae:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8011ab0:	f8d8 2000 	ldr.w	r2, [r8]
 8011ab4:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 8011ab8:	4293      	cmp	r3, r2
 8011aba:	4659      	mov	r1, fp
 8011abc:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 8011ac0:	bf88      	it	hi
 8011ac2:	f8c8 3000 	strhi.w	r3, [r8]
 8011ac6:	f7fe fc59 	bl	801037c <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8011aca:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8011ace:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8011ad0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8011ad2:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8011ad4:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 8011ad6:	4291      	cmp	r1, r2
 8011ad8:	bf28      	it	cs
 8011ada:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8011adc:	2b00      	cmp	r3, #0
 8011ade:	d04e      	beq.n	8011b7e <xTaskIncrementTick.part.0+0x116>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011ae0:	683b      	ldr	r3, [r7, #0]
 8011ae2:	68db      	ldr	r3, [r3, #12]
 8011ae4:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8011ae6:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8011ae8:	f104 0b04 	add.w	fp, r4, #4
					if( xConstTickCount < xItemValue )
 8011aec:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8011aee:	4658      	mov	r0, fp
					if( xConstTickCount < xItemValue )
 8011af0:	d2d5      	bcs.n	8011a9e <xTaskIncrementTick.part.0+0x36>
						xNextTaskUnblockTime = xItemValue;
 8011af2:	9a01      	ldr	r2, [sp, #4]
 8011af4:	6013      	str	r3, [r2, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8011af6:	e011      	b.n	8011b1c <xTaskIncrementTick.part.0+0xb4>
			taskSWITCH_DELAYED_LISTS();
 8011af8:	4b25      	ldr	r3, [pc, #148]	@ (8011b90 <xTaskIncrementTick.part.0+0x128>)
 8011afa:	681a      	ldr	r2, [r3, #0]
 8011afc:	6812      	ldr	r2, [r2, #0]
 8011afe:	b30a      	cbz	r2, 8011b44 <xTaskIncrementTick.part.0+0xdc>
 8011b00:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8011b04:	f383 8811 	msr	BASEPRI, r3
 8011b08:	f3bf 8f6f 	isb	sy
 8011b0c:	f3bf 8f4f 	dsb	sy
 8011b10:	e7fe      	b.n	8011b10 <xTaskIncrementTick.part.0+0xa8>
 8011b12:	f8df 908c 	ldr.w	r9, [pc, #140]	@ 8011ba0 <xTaskIncrementTick.part.0+0x138>
 8011b16:	f8df a08c 	ldr.w	sl, [pc, #140]	@ 8011ba4 <xTaskIncrementTick.part.0+0x13c>
BaseType_t xSwitchRequired = pdFALSE;
 8011b1a:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8011b1c:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 8011b20:	491c      	ldr	r1, [pc, #112]	@ (8011b94 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8011b22:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011b24:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8011b28:	009b      	lsls	r3, r3, #2
 8011b2a:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 8011b2e:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 8011b30:	2a02      	cmp	r2, #2
 8011b32:	bf28      	it	cs
 8011b34:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 8011b36:	2b00      	cmp	r3, #0
}
 8011b38:	bf0c      	ite	eq
 8011b3a:	4628      	moveq	r0, r5
 8011b3c:	2001      	movne	r0, #1
 8011b3e:	b003      	add	sp, #12
 8011b40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 8011b44:	4a14      	ldr	r2, [pc, #80]	@ (8011b98 <xTaskIncrementTick.part.0+0x130>)
 8011b46:	6818      	ldr	r0, [r3, #0]
 8011b48:	6811      	ldr	r1, [r2, #0]
 8011b4a:	6019      	str	r1, [r3, #0]
 8011b4c:	4913      	ldr	r1, [pc, #76]	@ (8011b9c <xTaskIncrementTick.part.0+0x134>)
 8011b4e:	6010      	str	r0, [r2, #0]
 8011b50:	680a      	ldr	r2, [r1, #0]
 8011b52:	3201      	adds	r2, #1
 8011b54:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8011b56:	681a      	ldr	r2, [r3, #0]
 8011b58:	6812      	ldr	r2, [r2, #0]
 8011b5a:	b93a      	cbnz	r2, 8011b6c <xTaskIncrementTick.part.0+0x104>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 8011b5c:	4b0b      	ldr	r3, [pc, #44]	@ (8011b8c <xTaskIncrementTick.part.0+0x124>)
 8011b5e:	9301      	str	r3, [sp, #4]
 8011b60:	461a      	mov	r2, r3
 8011b62:	f04f 33ff 	mov.w	r3, #4294967295
 8011b66:	6013      	str	r3, [r2, #0]
 8011b68:	4613      	mov	r3, r2
 8011b6a:	e788      	b.n	8011a7e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011b6c:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8011b6e:	4a07      	ldr	r2, [pc, #28]	@ (8011b8c <xTaskIncrementTick.part.0+0x124>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011b70:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8011b72:	9201      	str	r2, [sp, #4]
 8011b74:	68db      	ldr	r3, [r3, #12]
 8011b76:	685b      	ldr	r3, [r3, #4]
 8011b78:	6013      	str	r3, [r2, #0]
 8011b7a:	4613      	mov	r3, r2
	}
}
 8011b7c:	e77f      	b.n	8011a7e <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011b7e:	9a01      	ldr	r2, [sp, #4]
 8011b80:	f04f 33ff 	mov.w	r3, #4294967295
 8011b84:	6013      	str	r3, [r2, #0]
					break;
 8011b86:	e7c9      	b.n	8011b1c <xTaskIncrementTick.part.0+0xb4>
 8011b88:	2000ddf8 	.word	0x2000ddf8
 8011b8c:	2000dddc 	.word	0x2000dddc
 8011b90:	2000de44 	.word	0x2000de44
 8011b94:	2000dde8 	.word	0x2000dde8
 8011b98:	2000de40 	.word	0x2000de40
 8011b9c:	2000dde4 	.word	0x2000dde4
 8011ba0:	2000de70 	.word	0x2000de70
 8011ba4:	2000e2d0 	.word	0x2000e2d0
 8011ba8:	2000ddf4 	.word	0x2000ddf4

08011bac <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 8011bac:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 8011bb0:	4d43      	ldr	r5, [pc, #268]	@ (8011cc0 <xTaskResumeAll.part.0+0x114>)
	taskENTER_CRITICAL();
 8011bb2:	f7fe fc87 	bl	80104c4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8011bb6:	682b      	ldr	r3, [r5, #0]
 8011bb8:	3b01      	subs	r3, #1
 8011bba:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011bbc:	682b      	ldr	r3, [r5, #0]
 8011bbe:	2b00      	cmp	r3, #0
 8011bc0:	d168      	bne.n	8011c94 <xTaskResumeAll.part.0+0xe8>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8011bc2:	4b40      	ldr	r3, [pc, #256]	@ (8011cc4 <xTaskResumeAll.part.0+0x118>)
 8011bc4:	681b      	ldr	r3, [r3, #0]
 8011bc6:	2b00      	cmp	r3, #0
 8011bc8:	d064      	beq.n	8011c94 <xTaskResumeAll.part.0+0xe8>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8011bca:	4e3f      	ldr	r6, [pc, #252]	@ (8011cc8 <xTaskResumeAll.part.0+0x11c>)
 8011bcc:	6833      	ldr	r3, [r6, #0]
 8011bce:	2b00      	cmp	r3, #0
 8011bd0:	d073      	beq.n	8011cba <xTaskResumeAll.part.0+0x10e>
 8011bd2:	4f3e      	ldr	r7, [pc, #248]	@ (8011ccc <xTaskResumeAll.part.0+0x120>)
 8011bd4:	f8df 9104 	ldr.w	r9, [pc, #260]	@ 8011cdc <xTaskResumeAll.part.0+0x130>
 8011bd8:	f8df 8104 	ldr.w	r8, [pc, #260]	@ 8011ce0 <xTaskResumeAll.part.0+0x134>
 8011bdc:	f8df a104 	ldr.w	sl, [pc, #260]	@ 8011ce4 <xTaskResumeAll.part.0+0x138>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011be0:	68f3      	ldr	r3, [r6, #12]
 8011be2:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8011be6:	f10b 0404 	add.w	r4, fp, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8011bea:	f10b 0018 	add.w	r0, fp, #24
 8011bee:	f7fe fbeb 	bl	80103c8 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8011bf2:	4620      	mov	r0, r4
 8011bf4:	f7fe fbe8 	bl	80103c8 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8011bf8:	f8db 202c 	ldr.w	r2, [fp, #44]	@ 0x2c
 8011bfc:	4621      	mov	r1, r4
 8011bfe:	683c      	ldr	r4, [r7, #0]
 8011c00:	eb02 0082 	add.w	r0, r2, r2, lsl #2
 8011c04:	42a2      	cmp	r2, r4
 8011c06:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 8011c0a:	bf88      	it	hi
 8011c0c:	603a      	strhi	r2, [r7, #0]
 8011c0e:	f7fe fbb5 	bl	801037c <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8011c12:	f8d8 1000 	ldr.w	r1, [r8]
 8011c16:	f8db 202c 	ldr.w	r2, [fp, #44]	@ 0x2c
 8011c1a:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
 8011c1c:	429a      	cmp	r2, r3
 8011c1e:	d33f      	bcc.n	8011ca0 <xTaskResumeAll.part.0+0xf4>
						xYieldPending = pdTRUE;
 8011c20:	2301      	movs	r3, #1
 8011c22:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8011c26:	6833      	ldr	r3, [r6, #0]
 8011c28:	2b00      	cmp	r3, #0
 8011c2a:	d1d9      	bne.n	8011be0 <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8011c2c:	4b28      	ldr	r3, [pc, #160]	@ (8011cd0 <xTaskResumeAll.part.0+0x124>)
 8011c2e:	681a      	ldr	r2, [r3, #0]
 8011c30:	6812      	ldr	r2, [r2, #0]
 8011c32:	2a00      	cmp	r2, #0
 8011c34:	d03c      	beq.n	8011cb0 <xTaskResumeAll.part.0+0x104>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011c36:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8011c38:	4b26      	ldr	r3, [pc, #152]	@ (8011cd4 <xTaskResumeAll.part.0+0x128>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011c3a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8011c3c:	68d2      	ldr	r2, [r2, #12]
 8011c3e:	6852      	ldr	r2, [r2, #4]
 8011c40:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8011c42:	4e25      	ldr	r6, [pc, #148]	@ (8011cd8 <xTaskResumeAll.part.0+0x12c>)
 8011c44:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8011c46:	b194      	cbz	r4, 8011c6e <xTaskResumeAll.part.0+0xc2>
								xYieldPending = pdTRUE;
 8011c48:	2701      	movs	r7, #1
 8011c4a:	e006      	b.n	8011c5a <xTaskResumeAll.part.0+0xae>
 8011c4c:	f7ff ff0c 	bl	8011a68 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 8011c50:	b108      	cbz	r0, 8011c56 <xTaskResumeAll.part.0+0xaa>
								xYieldPending = pdTRUE;
 8011c52:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8011c56:	3c01      	subs	r4, #1
 8011c58:	d008      	beq.n	8011c6c <xTaskResumeAll.part.0+0xc0>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011c5a:	682b      	ldr	r3, [r5, #0]
 8011c5c:	2b00      	cmp	r3, #0
 8011c5e:	d0f5      	beq.n	8011c4c <xTaskResumeAll.part.0+0xa0>
		++xPendedTicks;
 8011c60:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8011c62:	3c01      	subs	r4, #1
		++xPendedTicks;
 8011c64:	f103 0301 	add.w	r3, r3, #1
 8011c68:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8011c6a:	d1f6      	bne.n	8011c5a <xTaskResumeAll.part.0+0xae>
						xPendedTicks = 0;
 8011c6c:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 8011c6e:	f8da 3000 	ldr.w	r3, [sl]
 8011c72:	b17b      	cbz	r3, 8011c94 <xTaskResumeAll.part.0+0xe8>
					taskYIELD_IF_USING_PREEMPTION();
 8011c74:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8011c78:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8011c7c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8011c80:	f3bf 8f4f 	dsb	sy
 8011c84:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8011c88:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
 8011c8a:	f7fe fc3d 	bl	8010508 <vPortExitCritical>
}
 8011c8e:	4620      	mov	r0, r4
 8011c90:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
BaseType_t xAlreadyYielded = pdFALSE;
 8011c94:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8011c96:	f7fe fc37 	bl	8010508 <vPortExitCritical>
}
 8011c9a:	4620      	mov	r0, r4
 8011c9c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8011ca0:	6833      	ldr	r3, [r6, #0]
 8011ca2:	2b00      	cmp	r3, #0
 8011ca4:	d19c      	bne.n	8011be0 <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8011ca6:	4b0a      	ldr	r3, [pc, #40]	@ (8011cd0 <xTaskResumeAll.part.0+0x124>)
 8011ca8:	681a      	ldr	r2, [r3, #0]
 8011caa:	6812      	ldr	r2, [r2, #0]
 8011cac:	2a00      	cmp	r2, #0
 8011cae:	d1c2      	bne.n	8011c36 <xTaskResumeAll.part.0+0x8a>
		xNextTaskUnblockTime = portMAX_DELAY;
 8011cb0:	4b08      	ldr	r3, [pc, #32]	@ (8011cd4 <xTaskResumeAll.part.0+0x128>)
 8011cb2:	f04f 32ff 	mov.w	r2, #4294967295
 8011cb6:	601a      	str	r2, [r3, #0]
 8011cb8:	e7c3      	b.n	8011c42 <xTaskResumeAll.part.0+0x96>
 8011cba:	f8df a028 	ldr.w	sl, [pc, #40]	@ 8011ce4 <xTaskResumeAll.part.0+0x138>
 8011cbe:	e7c0      	b.n	8011c42 <xTaskResumeAll.part.0+0x96>
 8011cc0:	2000ddd8 	.word	0x2000ddd8
 8011cc4:	2000ddfc 	.word	0x2000ddfc
 8011cc8:	2000de2c 	.word	0x2000de2c
 8011ccc:	2000ddf4 	.word	0x2000ddf4
 8011cd0:	2000de44 	.word	0x2000de44
 8011cd4:	2000dddc 	.word	0x2000dddc
 8011cd8:	2000ddec 	.word	0x2000ddec
 8011cdc:	2000de70 	.word	0x2000de70
 8011ce0:	2000e2d0 	.word	0x2000e2d0
 8011ce4:	2000dde8 	.word	0x2000dde8

08011ce8 <xTaskCreateStatic>:
	{
 8011ce8:	b530      	push	{r4, r5, lr}
 8011cea:	b087      	sub	sp, #28
 8011cec:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 8011cee:	b1c4      	cbz	r4, 8011d22 <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 8011cf0:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8011cf2:	b16d      	cbz	r5, 8011d10 <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 8011cf4:	25ac      	movs	r5, #172	@ 0xac
 8011cf6:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8011cf8:	9d05      	ldr	r5, [sp, #20]
 8011cfa:	2dac      	cmp	r5, #172	@ 0xac
 8011cfc:	d01a      	beq.n	8011d34 <xTaskCreateStatic+0x4c>
 8011cfe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8011d02:	f383 8811 	msr	BASEPRI, r3
 8011d06:	f3bf 8f6f 	isb	sy
 8011d0a:	f3bf 8f4f 	dsb	sy
 8011d0e:	e7fe      	b.n	8011d0e <xTaskCreateStatic+0x26>
 8011d10:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8011d14:	f383 8811 	msr	BASEPRI, r3
 8011d18:	f3bf 8f6f 	isb	sy
 8011d1c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 8011d20:	e7fe      	b.n	8011d20 <xTaskCreateStatic+0x38>
 8011d22:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8011d26:	f383 8811 	msr	BASEPRI, r3
 8011d2a:	f3bf 8f6f 	isb	sy
 8011d2e:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 8011d32:	e7fe      	b.n	8011d32 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8011d34:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8011d36:	632c      	str	r4, [r5, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8011d38:	2402      	movs	r4, #2
 8011d3a:	f885 40a9 	strb.w	r4, [r5, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8011d3e:	ac04      	add	r4, sp, #16
 8011d40:	e9cd 4501 	strd	r4, r5, [sp, #4]
 8011d44:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8011d46:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8011d48:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8011d4a:	f7ff fdab 	bl	80118a4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8011d4e:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8011d50:	f7ff fd20 	bl	8011794 <prvAddNewTaskToReadyList>
	}
 8011d54:	9804      	ldr	r0, [sp, #16]
 8011d56:	b007      	add	sp, #28
 8011d58:	bd30      	pop	{r4, r5, pc}
 8011d5a:	bf00      	nop

08011d5c <xTaskCreate>:
	{
 8011d5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011d60:	4607      	mov	r7, r0
 8011d62:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8011d64:	0090      	lsls	r0, r2, #2
	{
 8011d66:	4615      	mov	r5, r2
 8011d68:	4688      	mov	r8, r1
 8011d6a:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8011d6c:	f7fe f9da 	bl	8010124 <pvPortMalloc>
			if( pxStack != NULL )
 8011d70:	b1f0      	cbz	r0, 8011db0 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8011d72:	4604      	mov	r4, r0
 8011d74:	20ac      	movs	r0, #172	@ 0xac
 8011d76:	f7fe f9d5 	bl	8010124 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8011d7a:	4606      	mov	r6, r0
 8011d7c:	b1a8      	cbz	r0, 8011daa <xTaskCreate+0x4e>
					pxNewTCB->pxStack = pxStack;
 8011d7e:	6304      	str	r4, [r0, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8011d80:	2400      	movs	r4, #0
 8011d82:	f886 40a9 	strb.w	r4, [r6, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8011d86:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8011d88:	9401      	str	r4, [sp, #4]
 8011d8a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8011d8c:	9602      	str	r6, [sp, #8]
 8011d8e:	464b      	mov	r3, r9
 8011d90:	462a      	mov	r2, r5
 8011d92:	4641      	mov	r1, r8
 8011d94:	4638      	mov	r0, r7
 8011d96:	9400      	str	r4, [sp, #0]
 8011d98:	f7ff fd84 	bl	80118a4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8011d9c:	4630      	mov	r0, r6
 8011d9e:	f7ff fcf9 	bl	8011794 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8011da2:	2001      	movs	r0, #1
	}
 8011da4:	b005      	add	sp, #20
 8011da6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8011daa:	4620      	mov	r0, r4
 8011dac:	f7fe fa72 	bl	8010294 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8011db0:	f04f 30ff 	mov.w	r0, #4294967295
	}
 8011db4:	b005      	add	sp, #20
 8011db6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011dba:	bf00      	nop

08011dbc <vTaskDelay>:
	{
 8011dbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8011dbe:	b950      	cbnz	r0, 8011dd6 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8011dc0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8011dc4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8011dc8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8011dcc:	f3bf 8f4f 	dsb	sy
 8011dd0:	f3bf 8f6f 	isb	sy
	}
 8011dd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8011dd6:	4d1e      	ldr	r5, [pc, #120]	@ (8011e50 <vTaskDelay+0x94>)
 8011dd8:	682b      	ldr	r3, [r5, #0]
 8011dda:	b143      	cbz	r3, 8011dee <vTaskDelay+0x32>
 8011ddc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8011de0:	f383 8811 	msr	BASEPRI, r3
 8011de4:	f3bf 8f6f 	isb	sy
 8011de8:	f3bf 8f4f 	dsb	sy
 8011dec:	e7fe      	b.n	8011dec <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 8011dee:	682b      	ldr	r3, [r5, #0]
 8011df0:	3301      	adds	r3, #1
 8011df2:	4604      	mov	r4, r0
 8011df4:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8011df6:	4b17      	ldr	r3, [pc, #92]	@ (8011e54 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011df8:	4e17      	ldr	r6, [pc, #92]	@ (8011e58 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 8011dfa:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011dfc:	6830      	ldr	r0, [r6, #0]
 8011dfe:	3004      	adds	r0, #4
 8011e00:	f7fe fae2 	bl	80103c8 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8011e04:	6833      	ldr	r3, [r6, #0]
 8011e06:	19e4      	adds	r4, r4, r7
 8011e08:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 8011e0a:	d310      	bcc.n	8011e2e <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011e0c:	4b13      	ldr	r3, [pc, #76]	@ (8011e5c <vTaskDelay+0xa0>)
 8011e0e:	6818      	ldr	r0, [r3, #0]
 8011e10:	6831      	ldr	r1, [r6, #0]
 8011e12:	3104      	adds	r1, #4
 8011e14:	f7fe fac0 	bl	8010398 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 8011e18:	682b      	ldr	r3, [r5, #0]
 8011e1a:	b9a3      	cbnz	r3, 8011e46 <vTaskDelay+0x8a>
 8011e1c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8011e20:	f383 8811 	msr	BASEPRI, r3
 8011e24:	f3bf 8f6f 	isb	sy
 8011e28:	f3bf 8f4f 	dsb	sy
 8011e2c:	e7fe      	b.n	8011e2c <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011e2e:	4b0c      	ldr	r3, [pc, #48]	@ (8011e60 <vTaskDelay+0xa4>)
 8011e30:	6818      	ldr	r0, [r3, #0]
 8011e32:	6831      	ldr	r1, [r6, #0]
 8011e34:	3104      	adds	r1, #4
 8011e36:	f7fe faaf 	bl	8010398 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 8011e3a:	4b0a      	ldr	r3, [pc, #40]	@ (8011e64 <vTaskDelay+0xa8>)
 8011e3c:	681a      	ldr	r2, [r3, #0]
 8011e3e:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 8011e40:	bf38      	it	cc
 8011e42:	601c      	strcc	r4, [r3, #0]
 8011e44:	e7e8      	b.n	8011e18 <vTaskDelay+0x5c>
 8011e46:	f7ff feb1 	bl	8011bac <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 8011e4a:	2800      	cmp	r0, #0
 8011e4c:	d0b8      	beq.n	8011dc0 <vTaskDelay+0x4>
	}
 8011e4e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011e50:	2000ddd8 	.word	0x2000ddd8
 8011e54:	2000ddf8 	.word	0x2000ddf8
 8011e58:	2000e2d0 	.word	0x2000e2d0
 8011e5c:	2000de40 	.word	0x2000de40
 8011e60:	2000de44 	.word	0x2000de44
 8011e64:	2000dddc 	.word	0x2000dddc

08011e68 <vTaskStartScheduler>:
{
 8011e68:	b530      	push	{r4, r5, lr}
 8011e6a:	b08b      	sub	sp, #44	@ 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8011e6c:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8011e6e:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8011e70:	a906      	add	r1, sp, #24
 8011e72:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8011e74:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8011e78:	f7fe f936 	bl	80100e8 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8011e7c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8011e80:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 8011e82:	b1bb      	cbz	r3, 8011eb4 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 8011e84:	b16d      	cbz	r5, 8011ea2 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 8011e86:	21ac      	movs	r1, #172	@ 0xac
 8011e88:	9109      	str	r1, [sp, #36]	@ 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 8011e8a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8011e8c:	29ac      	cmp	r1, #172	@ 0xac
 8011e8e:	d01a      	beq.n	8011ec6 <vTaskStartScheduler+0x5e>
 8011e90:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8011e94:	f383 8811 	msr	BASEPRI, r3
 8011e98:	f3bf 8f6f 	isb	sy
 8011e9c:	f3bf 8f4f 	dsb	sy
 8011ea0:	e7fe      	b.n	8011ea0 <vTaskStartScheduler+0x38>
 8011ea2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8011ea6:	f383 8811 	msr	BASEPRI, r3
 8011eaa:	f3bf 8f6f 	isb	sy
 8011eae:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 8011eb2:	e7fe      	b.n	8011eb2 <vTaskStartScheduler+0x4a>
 8011eb4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8011eb8:	f383 8811 	msr	BASEPRI, r3
 8011ebc:	f3bf 8f6f 	isb	sy
 8011ec0:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 8011ec4:	e7fe      	b.n	8011ec4 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8011ec6:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8011ec8:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8011eca:	632b      	str	r3, [r5, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8011ecc:	f885 10a9 	strb.w	r1, [r5, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8011ed0:	4623      	mov	r3, r4
 8011ed2:	e9cd 0501 	strd	r0, r5, [sp, #4]
 8011ed6:	491f      	ldr	r1, [pc, #124]	@ (8011f54 <vTaskStartScheduler+0xec>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8011ed8:	9809      	ldr	r0, [sp, #36]	@ 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8011eda:	9400      	str	r4, [sp, #0]
 8011edc:	481e      	ldr	r0, [pc, #120]	@ (8011f58 <vTaskStartScheduler+0xf0>)
 8011ede:	f7ff fce1 	bl	80118a4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8011ee2:	4628      	mov	r0, r5
 8011ee4:	f7ff fc56 	bl	8011794 <prvAddNewTaskToReadyList>
		return xReturn;
 8011ee8:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 8011eea:	b17b      	cbz	r3, 8011f0c <vTaskStartScheduler+0xa4>
			xReturn = xTimerCreateTimerTask();
 8011eec:	f000 fc88 	bl	8012800 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8011ef0:	2801      	cmp	r0, #1
			xReturn = xTimerCreateTimerTask();
 8011ef2:	4603      	mov	r3, r0
	if( xReturn == pdPASS )
 8011ef4:	d00c      	beq.n	8011f10 <vTaskStartScheduler+0xa8>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8011ef6:	3301      	adds	r3, #1
 8011ef8:	d108      	bne.n	8011f0c <vTaskStartScheduler+0xa4>
 8011efa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8011efe:	f383 8811 	msr	BASEPRI, r3
 8011f02:	f3bf 8f6f 	isb	sy
 8011f06:	f3bf 8f4f 	dsb	sy
 8011f0a:	e7fe      	b.n	8011f0a <vTaskStartScheduler+0xa2>
}
 8011f0c:	b00b      	add	sp, #44	@ 0x2c
 8011f0e:	bd30      	pop	{r4, r5, pc}
 8011f10:	f04f 0250 	mov.w	r2, #80	@ 0x50
 8011f14:	f382 8811 	msr	BASEPRI, r2
 8011f18:	f3bf 8f6f 	isb	sy
 8011f1c:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8011f20:	4a0e      	ldr	r2, [pc, #56]	@ (8011f5c <vTaskStartScheduler+0xf4>)
 8011f22:	480f      	ldr	r0, [pc, #60]	@ (8011f60 <vTaskStartScheduler+0xf8>)
 8011f24:	6811      	ldr	r1, [r2, #0]
 8011f26:	3158      	adds	r1, #88	@ 0x58
 8011f28:	6001      	str	r1, [r0, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 8011f2a:	490e      	ldr	r1, [pc, #56]	@ (8011f64 <vTaskStartScheduler+0xfc>)
 8011f2c:	f04f 30ff 	mov.w	r0, #4294967295
 8011f30:	6008      	str	r0, [r1, #0]
		xSchedulerRunning = pdTRUE;
 8011f32:	480d      	ldr	r0, [pc, #52]	@ (8011f68 <vTaskStartScheduler+0x100>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8011f34:	490d      	ldr	r1, [pc, #52]	@ (8011f6c <vTaskStartScheduler+0x104>)
		xSchedulerRunning = pdTRUE;
 8011f36:	6003      	str	r3, [r0, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8011f38:	600c      	str	r4, [r1, #0]
		traceTASK_SWITCHED_IN();
 8011f3a:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
 8011f3c:	b143      	cbz	r3, 8011f50 <vTaskStartScheduler+0xe8>
		if( xTCB->pxTaskTag != NULL )
 8011f3e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8011f40:	b10b      	cbz	r3, 8011f46 <vTaskStartScheduler+0xde>
			xReturn = xTCB->pxTaskTag( pvParameter );
 8011f42:	2000      	movs	r0, #0
 8011f44:	4798      	blx	r3
}
 8011f46:	b00b      	add	sp, #44	@ 0x2c
 8011f48:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 8011f4c:	f7fe bb4c 	b.w	80105e8 <xPortStartScheduler>
			xTCB = pxCurrentTCB;
 8011f50:	6813      	ldr	r3, [r2, #0]
 8011f52:	e7f4      	b.n	8011f3e <vTaskStartScheduler+0xd6>
 8011f54:	08032198 	.word	0x08032198
 8011f58:	080119c5 	.word	0x080119c5
 8011f5c:	2000e2d0 	.word	0x2000e2d0
 8011f60:	200000d4 	.word	0x200000d4
 8011f64:	2000dddc 	.word	0x2000dddc
 8011f68:	2000ddf0 	.word	0x2000ddf0
 8011f6c:	2000ddf8 	.word	0x2000ddf8

08011f70 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8011f70:	4a02      	ldr	r2, [pc, #8]	@ (8011f7c <vTaskSuspendAll+0xc>)
 8011f72:	6813      	ldr	r3, [r2, #0]
 8011f74:	3301      	adds	r3, #1
 8011f76:	6013      	str	r3, [r2, #0]
}
 8011f78:	4770      	bx	lr
 8011f7a:	bf00      	nop
 8011f7c:	2000ddd8 	.word	0x2000ddd8

08011f80 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 8011f80:	4b06      	ldr	r3, [pc, #24]	@ (8011f9c <xTaskResumeAll+0x1c>)
 8011f82:	681b      	ldr	r3, [r3, #0]
 8011f84:	b943      	cbnz	r3, 8011f98 <xTaskResumeAll+0x18>
 8011f86:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8011f8a:	f383 8811 	msr	BASEPRI, r3
 8011f8e:	f3bf 8f6f 	isb	sy
 8011f92:	f3bf 8f4f 	dsb	sy
 8011f96:	e7fe      	b.n	8011f96 <xTaskResumeAll+0x16>
 8011f98:	f7ff be08 	b.w	8011bac <xTaskResumeAll.part.0>
 8011f9c:	2000ddd8 	.word	0x2000ddd8

08011fa0 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8011fa0:	4b01      	ldr	r3, [pc, #4]	@ (8011fa8 <xTaskGetTickCount+0x8>)
 8011fa2:	6818      	ldr	r0, [r3, #0]
}
 8011fa4:	4770      	bx	lr
 8011fa6:	bf00      	nop
 8011fa8:	2000ddf8 	.word	0x2000ddf8

08011fac <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011fac:	4b05      	ldr	r3, [pc, #20]	@ (8011fc4 <xTaskIncrementTick+0x18>)
 8011fae:	681b      	ldr	r3, [r3, #0]
 8011fb0:	b90b      	cbnz	r3, 8011fb6 <xTaskIncrementTick+0xa>
 8011fb2:	f7ff bd59 	b.w	8011a68 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 8011fb6:	4a04      	ldr	r2, [pc, #16]	@ (8011fc8 <xTaskIncrementTick+0x1c>)
 8011fb8:	6813      	ldr	r3, [r2, #0]
 8011fba:	3301      	adds	r3, #1
}
 8011fbc:	2000      	movs	r0, #0
		++xPendedTicks;
 8011fbe:	6013      	str	r3, [r2, #0]
}
 8011fc0:	4770      	bx	lr
 8011fc2:	bf00      	nop
 8011fc4:	2000ddd8 	.word	0x2000ddd8
 8011fc8:	2000ddec 	.word	0x2000ddec

08011fcc <vTaskSetApplicationTaskTag>:
	{
 8011fcc:	b538      	push	{r3, r4, r5, lr}
 8011fce:	460d      	mov	r5, r1
		if( xTask == NULL )
 8011fd0:	b138      	cbz	r0, 8011fe2 <vTaskSetApplicationTaskTag+0x16>
 8011fd2:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
 8011fd4:	f7fe fa76 	bl	80104c4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 8011fd8:	6565      	str	r5, [r4, #84]	@ 0x54
	}
 8011fda:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 8011fde:	f7fe ba93 	b.w	8010508 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 8011fe2:	4b04      	ldr	r3, [pc, #16]	@ (8011ff4 <vTaskSetApplicationTaskTag+0x28>)
 8011fe4:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 8011fe6:	f7fe fa6d 	bl	80104c4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 8011fea:	6565      	str	r5, [r4, #84]	@ 0x54
	}
 8011fec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 8011ff0:	f7fe ba8a 	b.w	8010508 <vPortExitCritical>
 8011ff4:	2000e2d0 	.word	0x2000e2d0

08011ff8 <vTaskSwitchContext>:
{
 8011ff8:	b538      	push	{r3, r4, r5, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8011ffa:	4b28      	ldr	r3, [pc, #160]	@ (801209c <vTaskSwitchContext+0xa4>)
 8011ffc:	681b      	ldr	r3, [r3, #0]
 8011ffe:	b11b      	cbz	r3, 8012008 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8012000:	4b27      	ldr	r3, [pc, #156]	@ (80120a0 <vTaskSwitchContext+0xa8>)
 8012002:	2201      	movs	r2, #1
 8012004:	601a      	str	r2, [r3, #0]
}
 8012006:	bd38      	pop	{r3, r4, r5, pc}
		xYieldPending = pdFALSE;
 8012008:	4a25      	ldr	r2, [pc, #148]	@ (80120a0 <vTaskSwitchContext+0xa8>)
		traceTASK_SWITCHED_OUT();
 801200a:	4c26      	ldr	r4, [pc, #152]	@ (80120a4 <vTaskSwitchContext+0xac>)
		xYieldPending = pdFALSE;
 801200c:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
 801200e:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
 8012010:	2b00      	cmp	r3, #0
 8012012:	d03b      	beq.n	801208c <vTaskSwitchContext+0x94>
		if( xTCB->pxTaskTag != NULL )
 8012014:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8012016:	b10b      	cbz	r3, 801201c <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
 8012018:	2001      	movs	r0, #1
 801201a:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 801201c:	4d22      	ldr	r5, [pc, #136]	@ (80120a8 <vTaskSwitchContext+0xb0>)
 801201e:	4923      	ldr	r1, [pc, #140]	@ (80120ac <vTaskSwitchContext+0xb4>)
 8012020:	682b      	ldr	r3, [r5, #0]
 8012022:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 8012026:	0092      	lsls	r2, r2, #2
 8012028:	0098      	lsls	r0, r3, #2
 801202a:	588a      	ldr	r2, [r1, r2]
 801202c:	b942      	cbnz	r2, 8012040 <vTaskSwitchContext+0x48>
 801202e:	b323      	cbz	r3, 801207a <vTaskSwitchContext+0x82>
 8012030:	3b01      	subs	r3, #1
 8012032:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 8012036:	0098      	lsls	r0, r3, #2
 8012038:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 801203c:	2a00      	cmp	r2, #0
 801203e:	d0f6      	beq.n	801202e <vTaskSwitchContext+0x36>
 8012040:	4418      	add	r0, r3
 8012042:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 8012046:	4662      	mov	r2, ip
 8012048:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801204c:	6849      	ldr	r1, [r1, #4]
 801204e:	f8cc 1004 	str.w	r1, [ip, #4]
 8012052:	3208      	adds	r2, #8
 8012054:	4291      	cmp	r1, r2
 8012056:	bf04      	itt	eq
 8012058:	6849      	ldreq	r1, [r1, #4]
 801205a:	f8cc 1004 	streq.w	r1, [ip, #4]
 801205e:	68ca      	ldr	r2, [r1, #12]
 8012060:	6022      	str	r2, [r4, #0]
 8012062:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
 8012064:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
 8012066:	b1b3      	cbz	r3, 8012096 <vTaskSwitchContext+0x9e>
		if( xTCB->pxTaskTag != NULL )
 8012068:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 801206a:	b10b      	cbz	r3, 8012070 <vTaskSwitchContext+0x78>
			xReturn = xTCB->pxTaskTag( pvParameter );
 801206c:	2000      	movs	r0, #0
 801206e:	4798      	blx	r3
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8012070:	6823      	ldr	r3, [r4, #0]
 8012072:	4a0f      	ldr	r2, [pc, #60]	@ (80120b0 <vTaskSwitchContext+0xb8>)
 8012074:	3358      	adds	r3, #88	@ 0x58
 8012076:	6013      	str	r3, [r2, #0]
}
 8012078:	bd38      	pop	{r3, r4, r5, pc}
 801207a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801207e:	f383 8811 	msr	BASEPRI, r3
 8012082:	f3bf 8f6f 	isb	sy
 8012086:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 801208a:	e7fe      	b.n	801208a <vTaskSwitchContext+0x92>
			xTCB = pxCurrentTCB;
 801208c:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
 801208e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8012090:	2b00      	cmp	r3, #0
 8012092:	d1c1      	bne.n	8012018 <vTaskSwitchContext+0x20>
 8012094:	e7c2      	b.n	801201c <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
 8012096:	6823      	ldr	r3, [r4, #0]
 8012098:	e7e6      	b.n	8012068 <vTaskSwitchContext+0x70>
 801209a:	bf00      	nop
 801209c:	2000ddd8 	.word	0x2000ddd8
 80120a0:	2000dde8 	.word	0x2000dde8
 80120a4:	2000e2d0 	.word	0x2000e2d0
 80120a8:	2000ddf4 	.word	0x2000ddf4
 80120ac:	2000de70 	.word	0x2000de70
 80120b0:	200000d4 	.word	0x200000d4

080120b4 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 80120b4:	b1d0      	cbz	r0, 80120ec <vTaskPlaceOnEventList+0x38>
{
 80120b6:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 80120b8:	4d1a      	ldr	r5, [pc, #104]	@ (8012124 <vTaskPlaceOnEventList+0x70>)
 80120ba:	460c      	mov	r4, r1
 80120bc:	6829      	ldr	r1, [r5, #0]
 80120be:	3118      	adds	r1, #24
 80120c0:	f7fe f96a 	bl	8010398 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 80120c4:	4b18      	ldr	r3, [pc, #96]	@ (8012128 <vTaskPlaceOnEventList+0x74>)
 80120c6:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80120c8:	6828      	ldr	r0, [r5, #0]
 80120ca:	3004      	adds	r0, #4
 80120cc:	f7fe f97c 	bl	80103c8 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 80120d0:	1c63      	adds	r3, r4, #1
 80120d2:	d014      	beq.n	80120fe <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 80120d4:	682b      	ldr	r3, [r5, #0]
 80120d6:	19a4      	adds	r4, r4, r6
 80120d8:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 80120da:	d317      	bcc.n	801210c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80120dc:	4b13      	ldr	r3, [pc, #76]	@ (801212c <vTaskPlaceOnEventList+0x78>)
 80120de:	6818      	ldr	r0, [r3, #0]
 80120e0:	6829      	ldr	r1, [r5, #0]
}
 80120e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80120e6:	3104      	adds	r1, #4
 80120e8:	f7fe b956 	b.w	8010398 <vListInsert>
 80120ec:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80120f0:	f383 8811 	msr	BASEPRI, r3
 80120f4:	f3bf 8f6f 	isb	sy
 80120f8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 80120fc:	e7fe      	b.n	80120fc <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80120fe:	6829      	ldr	r1, [r5, #0]
 8012100:	480b      	ldr	r0, [pc, #44]	@ (8012130 <vTaskPlaceOnEventList+0x7c>)
}
 8012102:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8012106:	3104      	adds	r1, #4
 8012108:	f7fe b938 	b.w	801037c <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 801210c:	4b09      	ldr	r3, [pc, #36]	@ (8012134 <vTaskPlaceOnEventList+0x80>)
 801210e:	6818      	ldr	r0, [r3, #0]
 8012110:	6829      	ldr	r1, [r5, #0]
 8012112:	3104      	adds	r1, #4
 8012114:	f7fe f940 	bl	8010398 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8012118:	4b07      	ldr	r3, [pc, #28]	@ (8012138 <vTaskPlaceOnEventList+0x84>)
 801211a:	681a      	ldr	r2, [r3, #0]
 801211c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 801211e:	bf38      	it	cc
 8012120:	601c      	strcc	r4, [r3, #0]
}
 8012122:	bd70      	pop	{r4, r5, r6, pc}
 8012124:	2000e2d0 	.word	0x2000e2d0
 8012128:	2000ddf8 	.word	0x2000ddf8
 801212c:	2000de40 	.word	0x2000de40
 8012130:	2000de00 	.word	0x2000de00
 8012134:	2000de44 	.word	0x2000de44
 8012138:	2000dddc 	.word	0x2000dddc

0801213c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 801213c:	b330      	cbz	r0, 801218c <vTaskPlaceOnEventListRestricted+0x50>
	{
 801213e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8012140:	4e1d      	ldr	r6, [pc, #116]	@ (80121b8 <vTaskPlaceOnEventListRestricted+0x7c>)
 8012142:	460c      	mov	r4, r1
 8012144:	6831      	ldr	r1, [r6, #0]
 8012146:	4615      	mov	r5, r2
 8012148:	3118      	adds	r1, #24
 801214a:	f7fe f917 	bl	801037c <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 801214e:	4b1b      	ldr	r3, [pc, #108]	@ (80121bc <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 8012150:	b985      	cbnz	r5, 8012174 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 8012152:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8012154:	6830      	ldr	r0, [r6, #0]
 8012156:	3004      	adds	r0, #4
 8012158:	f7fe f936 	bl	80103c8 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 801215c:	6833      	ldr	r3, [r6, #0]
 801215e:	1964      	adds	r4, r4, r5
 8012160:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8012162:	d31c      	bcc.n	801219e <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8012164:	4b16      	ldr	r3, [pc, #88]	@ (80121c0 <vTaskPlaceOnEventListRestricted+0x84>)
 8012166:	6818      	ldr	r0, [r3, #0]
 8012168:	6831      	ldr	r1, [r6, #0]
	}
 801216a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 801216e:	3104      	adds	r1, #4
 8012170:	f7fe b912 	b.w	8010398 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 8012174:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8012176:	6830      	ldr	r0, [r6, #0]
 8012178:	3004      	adds	r0, #4
 801217a:	f7fe f925 	bl	80103c8 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 801217e:	6831      	ldr	r1, [r6, #0]
 8012180:	4810      	ldr	r0, [pc, #64]	@ (80121c4 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 8012182:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8012186:	3104      	adds	r1, #4
 8012188:	f7fe b8f8 	b.w	801037c <vListInsertEnd>
 801218c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8012190:	f383 8811 	msr	BASEPRI, r3
 8012194:	f3bf 8f6f 	isb	sy
 8012198:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 801219c:	e7fe      	b.n	801219c <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 801219e:	4b0a      	ldr	r3, [pc, #40]	@ (80121c8 <vTaskPlaceOnEventListRestricted+0x8c>)
 80121a0:	6818      	ldr	r0, [r3, #0]
 80121a2:	6831      	ldr	r1, [r6, #0]
 80121a4:	3104      	adds	r1, #4
 80121a6:	f7fe f8f7 	bl	8010398 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 80121aa:	4b08      	ldr	r3, [pc, #32]	@ (80121cc <vTaskPlaceOnEventListRestricted+0x90>)
 80121ac:	681a      	ldr	r2, [r3, #0]
 80121ae:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 80121b0:	bf38      	it	cc
 80121b2:	601c      	strcc	r4, [r3, #0]
	}
 80121b4:	bd70      	pop	{r4, r5, r6, pc}
 80121b6:	bf00      	nop
 80121b8:	2000e2d0 	.word	0x2000e2d0
 80121bc:	2000ddf8 	.word	0x2000ddf8
 80121c0:	2000de40 	.word	0x2000de40
 80121c4:	2000de00 	.word	0x2000de00
 80121c8:	2000de44 	.word	0x2000de44
 80121cc:	2000dddc 	.word	0x2000dddc

080121d0 <xTaskRemoveFromEventList>:
{
 80121d0:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80121d2:	68c3      	ldr	r3, [r0, #12]
 80121d4:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 80121d6:	b34c      	cbz	r4, 801222c <xTaskRemoveFromEventList+0x5c>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 80121d8:	f104 0518 	add.w	r5, r4, #24
 80121dc:	4628      	mov	r0, r5
 80121de:	f7fe f8f3 	bl	80103c8 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80121e2:	4b17      	ldr	r3, [pc, #92]	@ (8012240 <xTaskRemoveFromEventList+0x70>)
 80121e4:	681b      	ldr	r3, [r3, #0]
 80121e6:	b173      	cbz	r3, 8012206 <xTaskRemoveFromEventList+0x36>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 80121e8:	4816      	ldr	r0, [pc, #88]	@ (8012244 <xTaskRemoveFromEventList+0x74>)
 80121ea:	4629      	mov	r1, r5
 80121ec:	f7fe f8c6 	bl	801037c <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 80121f0:	4b15      	ldr	r3, [pc, #84]	@ (8012248 <xTaskRemoveFromEventList+0x78>)
 80121f2:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80121f4:	681b      	ldr	r3, [r3, #0]
 80121f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80121f8:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 80121fa:	bf83      	ittte	hi
 80121fc:	4b13      	ldrhi	r3, [pc, #76]	@ (801224c <xTaskRemoveFromEventList+0x7c>)
 80121fe:	2001      	movhi	r0, #1
 8012200:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 8012202:	2000      	movls	r0, #0
}
 8012204:	bd38      	pop	{r3, r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8012206:	1d25      	adds	r5, r4, #4
 8012208:	4628      	mov	r0, r5
 801220a:	f7fe f8dd 	bl	80103c8 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 801220e:	4a10      	ldr	r2, [pc, #64]	@ (8012250 <xTaskRemoveFromEventList+0x80>)
 8012210:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8012212:	6811      	ldr	r1, [r2, #0]
 8012214:	480f      	ldr	r0, [pc, #60]	@ (8012254 <xTaskRemoveFromEventList+0x84>)
 8012216:	428b      	cmp	r3, r1
 8012218:	bf88      	it	hi
 801221a:	6013      	strhi	r3, [r2, #0]
 801221c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8012220:	4629      	mov	r1, r5
 8012222:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8012226:	f7fe f8a9 	bl	801037c <vListInsertEnd>
 801222a:	e7e1      	b.n	80121f0 <xTaskRemoveFromEventList+0x20>
 801222c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8012230:	f383 8811 	msr	BASEPRI, r3
 8012234:	f3bf 8f6f 	isb	sy
 8012238:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 801223c:	e7fe      	b.n	801223c <xTaskRemoveFromEventList+0x6c>
 801223e:	bf00      	nop
 8012240:	2000ddd8 	.word	0x2000ddd8
 8012244:	2000de2c 	.word	0x2000de2c
 8012248:	2000e2d0 	.word	0x2000e2d0
 801224c:	2000dde8 	.word	0x2000dde8
 8012250:	2000ddf4 	.word	0x2000ddf4
 8012254:	2000de70 	.word	0x2000de70

08012258 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8012258:	4a03      	ldr	r2, [pc, #12]	@ (8012268 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 801225a:	4b04      	ldr	r3, [pc, #16]	@ (801226c <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 801225c:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 801225e:	681b      	ldr	r3, [r3, #0]
 8012260:	e9c0 2300 	strd	r2, r3, [r0]
}
 8012264:	4770      	bx	lr
 8012266:	bf00      	nop
 8012268:	2000dde4 	.word	0x2000dde4
 801226c:	2000ddf8 	.word	0x2000ddf8

08012270 <xTaskCheckForTimeOut>:
{
 8012270:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	configASSERT( pxTimeOut );
 8012272:	b308      	cbz	r0, 80122b8 <xTaskCheckForTimeOut+0x48>
	configASSERT( pxTicksToWait );
 8012274:	460d      	mov	r5, r1
 8012276:	b1b1      	cbz	r1, 80122a6 <xTaskCheckForTimeOut+0x36>
 8012278:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 801227a:	f7fe f923 	bl	80104c4 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 801227e:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 8012280:	4a1a      	ldr	r2, [pc, #104]	@ (80122ec <xTaskCheckForTimeOut+0x7c>)
			if( *pxTicksToWait == portMAX_DELAY )
 8012282:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 8012284:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8012286:	d02c      	beq.n	80122e2 <xTaskCheckForTimeOut+0x72>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8012288:	f8df c064 	ldr.w	ip, [pc, #100]	@ 80122f0 <xTaskCheckForTimeOut+0x80>
 801228c:	e9d4 6000 	ldrd	r6, r0, [r4]
 8012290:	f8dc 7000 	ldr.w	r7, [ip]
 8012294:	42be      	cmp	r6, r7
 8012296:	d018      	beq.n	80122ca <xTaskCheckForTimeOut+0x5a>
 8012298:	4288      	cmp	r0, r1
 801229a:	d816      	bhi.n	80122ca <xTaskCheckForTimeOut+0x5a>
			xReturn = pdTRUE;
 801229c:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
 801229e:	f7fe f933 	bl	8010508 <vPortExitCritical>
}
 80122a2:	4620      	mov	r0, r4
 80122a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80122a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80122aa:	f383 8811 	msr	BASEPRI, r3
 80122ae:	f3bf 8f6f 	isb	sy
 80122b2:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 80122b6:	e7fe      	b.n	80122b6 <xTaskCheckForTimeOut+0x46>
 80122b8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80122bc:	f383 8811 	msr	BASEPRI, r3
 80122c0:	f3bf 8f6f 	isb	sy
 80122c4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 80122c8:	e7fe      	b.n	80122c8 <xTaskCheckForTimeOut+0x58>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80122ca:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 80122ce:	4573      	cmp	r3, lr
 80122d0:	d909      	bls.n	80122e6 <xTaskCheckForTimeOut+0x76>
			*pxTicksToWait -= xElapsedTime;
 80122d2:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 80122d4:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 80122d8:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 80122da:	4403      	add	r3, r0
 80122dc:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 80122de:	e9c4 1200 	strd	r1, r2, [r4]
				xReturn = pdFALSE;
 80122e2:	2400      	movs	r4, #0
 80122e4:	e7db      	b.n	801229e <xTaskCheckForTimeOut+0x2e>
			*pxTicksToWait = 0;
 80122e6:	2300      	movs	r3, #0
 80122e8:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 80122ea:	e7d7      	b.n	801229c <xTaskCheckForTimeOut+0x2c>
 80122ec:	2000ddf8 	.word	0x2000ddf8
 80122f0:	2000dde4 	.word	0x2000dde4

080122f4 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 80122f4:	4b01      	ldr	r3, [pc, #4]	@ (80122fc <vTaskMissedYield+0x8>)
 80122f6:	2201      	movs	r2, #1
 80122f8:	601a      	str	r2, [r3, #0]
}
 80122fa:	4770      	bx	lr
 80122fc:	2000dde8 	.word	0x2000dde8

08012300 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8012300:	4b05      	ldr	r3, [pc, #20]	@ (8012318 <xTaskGetSchedulerState+0x18>)
 8012302:	681b      	ldr	r3, [r3, #0]
 8012304:	b133      	cbz	r3, 8012314 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8012306:	4b05      	ldr	r3, [pc, #20]	@ (801231c <xTaskGetSchedulerState+0x1c>)
 8012308:	6818      	ldr	r0, [r3, #0]
 801230a:	fab0 f080 	clz	r0, r0
 801230e:	0940      	lsrs	r0, r0, #5
 8012310:	0040      	lsls	r0, r0, #1
 8012312:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8012314:	2001      	movs	r0, #1
	}
 8012316:	4770      	bx	lr
 8012318:	2000ddf0 	.word	0x2000ddf0
 801231c:	2000ddd8 	.word	0x2000ddd8

08012320 <xTaskPriorityInherit>:
	{
 8012320:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 8012322:	4604      	mov	r4, r0
 8012324:	b1c8      	cbz	r0, 801235a <xTaskPriorityInherit+0x3a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8012326:	4d1b      	ldr	r5, [pc, #108]	@ (8012394 <xTaskPriorityInherit+0x74>)
 8012328:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 801232a:	682a      	ldr	r2, [r5, #0]
 801232c:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 801232e:	4293      	cmp	r3, r2
 8012330:	d214      	bcs.n	801235c <xTaskPriorityInherit+0x3c>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8012332:	6982      	ldr	r2, [r0, #24]
 8012334:	2a00      	cmp	r2, #0
 8012336:	db04      	blt.n	8012342 <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8012338:	682a      	ldr	r2, [r5, #0]
 801233a:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 801233c:	f1c2 0238 	rsb	r2, r2, #56	@ 0x38
 8012340:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8012342:	4e15      	ldr	r6, [pc, #84]	@ (8012398 <xTaskPriorityInherit+0x78>)
 8012344:	6962      	ldr	r2, [r4, #20]
 8012346:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801234a:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 801234e:	429a      	cmp	r2, r3
 8012350:	d00c      	beq.n	801236c <xTaskPriorityInherit+0x4c>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8012352:	682b      	ldr	r3, [r5, #0]
 8012354:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012356:	62e3      	str	r3, [r4, #44]	@ 0x2c
				xReturn = pdTRUE;
 8012358:	2001      	movs	r0, #1
	}
 801235a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 801235c:	682b      	ldr	r3, [r5, #0]
 801235e:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 8012360:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012362:	4298      	cmp	r0, r3
 8012364:	bf2c      	ite	cs
 8012366:	2000      	movcs	r0, #0
 8012368:	2001      	movcc	r0, #1
	}
 801236a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 801236c:	1d27      	adds	r7, r4, #4
 801236e:	4638      	mov	r0, r7
 8012370:	f7fe f82a 	bl	80103c8 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8012374:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8012376:	4b09      	ldr	r3, [pc, #36]	@ (801239c <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8012378:	6ad0      	ldr	r0, [r2, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 801237a:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 801237c:	62e0      	str	r0, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 801237e:	4290      	cmp	r0, r2
 8012380:	bf88      	it	hi
 8012382:	6018      	strhi	r0, [r3, #0]
 8012384:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8012388:	4639      	mov	r1, r7
 801238a:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 801238e:	f7fd fff5 	bl	801037c <vListInsertEnd>
 8012392:	e7e1      	b.n	8012358 <xTaskPriorityInherit+0x38>
 8012394:	2000e2d0 	.word	0x2000e2d0
 8012398:	2000de70 	.word	0x2000de70
 801239c:	2000ddf4 	.word	0x2000ddf4

080123a0 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 80123a0:	b308      	cbz	r0, 80123e6 <xTaskPriorityDisinherit+0x46>
	{
 80123a2:	b538      	push	{r3, r4, r5, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 80123a4:	4b1d      	ldr	r3, [pc, #116]	@ (801241c <xTaskPriorityDisinherit+0x7c>)
 80123a6:	681c      	ldr	r4, [r3, #0]
 80123a8:	4284      	cmp	r4, r0
 80123aa:	d008      	beq.n	80123be <xTaskPriorityDisinherit+0x1e>
 80123ac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80123b0:	f383 8811 	msr	BASEPRI, r3
 80123b4:	f3bf 8f6f 	isb	sy
 80123b8:	f3bf 8f4f 	dsb	sy
 80123bc:	e7fe      	b.n	80123bc <xTaskPriorityDisinherit+0x1c>
			configASSERT( pxTCB->uxMutexesHeld );
 80123be:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 80123c0:	b143      	cbz	r3, 80123d4 <xTaskPriorityDisinherit+0x34>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80123c2:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 80123c4:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 80123c6:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80123c8:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 80123ca:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80123cc:	d000      	beq.n	80123d0 <xTaskPriorityDisinherit+0x30>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 80123ce:	b163      	cbz	r3, 80123ea <xTaskPriorityDisinherit+0x4a>
	BaseType_t xReturn = pdFALSE;
 80123d0:	2000      	movs	r0, #0
	}
 80123d2:	bd38      	pop	{r3, r4, r5, pc}
 80123d4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80123d8:	f383 8811 	msr	BASEPRI, r3
 80123dc:	f3bf 8f6f 	isb	sy
 80123e0:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 80123e4:	e7fe      	b.n	80123e4 <xTaskPriorityDisinherit+0x44>
	BaseType_t xReturn = pdFALSE;
 80123e6:	2000      	movs	r0, #0
	}
 80123e8:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80123ea:	1d25      	adds	r5, r4, #4
 80123ec:	4628      	mov	r0, r5
 80123ee:	f7fd ffeb 	bl	80103c8 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 80123f2:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
					prvAddTaskToReadyList( pxTCB );
 80123f4:	4a0a      	ldr	r2, [pc, #40]	@ (8012420 <xTaskPriorityDisinherit+0x80>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 80123f6:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80123f8:	f1c3 0038 	rsb	r0, r3, #56	@ 0x38
 80123fc:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 80123fe:	6810      	ldr	r0, [r2, #0]
 8012400:	4283      	cmp	r3, r0
 8012402:	4808      	ldr	r0, [pc, #32]	@ (8012424 <xTaskPriorityDisinherit+0x84>)
 8012404:	bf88      	it	hi
 8012406:	6013      	strhi	r3, [r2, #0]
 8012408:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801240c:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8012410:	4629      	mov	r1, r5
 8012412:	f7fd ffb3 	bl	801037c <vListInsertEnd>
					xReturn = pdTRUE;
 8012416:	2001      	movs	r0, #1
	}
 8012418:	bd38      	pop	{r3, r4, r5, pc}
 801241a:	bf00      	nop
 801241c:	2000e2d0 	.word	0x2000e2d0
 8012420:	2000ddf4 	.word	0x2000ddf4
 8012424:	2000de70 	.word	0x2000de70

08012428 <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 8012428:	2800      	cmp	r0, #0
 801242a:	d03d      	beq.n	80124a8 <vTaskPriorityDisinheritAfterTimeout+0x80>
			configASSERT( pxTCB->uxMutexesHeld );
 801242c:	6d03      	ldr	r3, [r0, #80]	@ 0x50
	{
 801242e:	b570      	push	{r4, r5, r6, lr}
 8012430:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 8012432:	b14b      	cbz	r3, 8012448 <vTaskPriorityDisinheritAfterTimeout+0x20>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8012434:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 8012436:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8012438:	4281      	cmp	r1, r0
 801243a:	bf38      	it	cc
 801243c:	4601      	movcc	r1, r0
 801243e:	428a      	cmp	r2, r1
 8012440:	d001      	beq.n	8012446 <vTaskPriorityDisinheritAfterTimeout+0x1e>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8012442:	2b01      	cmp	r3, #1
 8012444:	d009      	beq.n	801245a <vTaskPriorityDisinheritAfterTimeout+0x32>
	}
 8012446:	bd70      	pop	{r4, r5, r6, pc}
 8012448:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801244c:	f383 8811 	msr	BASEPRI, r3
 8012450:	f3bf 8f6f 	isb	sy
 8012454:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 8012458:	e7fe      	b.n	8012458 <vTaskPriorityDisinheritAfterTimeout+0x30>
					configASSERT( pxTCB != pxCurrentTCB );
 801245a:	4b18      	ldr	r3, [pc, #96]	@ (80124bc <vTaskPriorityDisinheritAfterTimeout+0x94>)
 801245c:	681b      	ldr	r3, [r3, #0]
 801245e:	42a3      	cmp	r3, r4
 8012460:	d023      	beq.n	80124aa <vTaskPriorityDisinheritAfterTimeout+0x82>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8012462:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 8012464:	62e1      	str	r1, [r4, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8012466:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8012468:	bfa8      	it	ge
 801246a:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 801246e:	4d14      	ldr	r5, [pc, #80]	@ (80124c0 <vTaskPriorityDisinheritAfterTimeout+0x98>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8012470:	bfa8      	it	ge
 8012472:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8012474:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8012478:	6961      	ldr	r1, [r4, #20]
 801247a:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 801247e:	4299      	cmp	r1, r3
 8012480:	d1e1      	bne.n	8012446 <vTaskPriorityDisinheritAfterTimeout+0x1e>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8012482:	1d26      	adds	r6, r4, #4
 8012484:	4630      	mov	r0, r6
 8012486:	f7fd ff9f 	bl	80103c8 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 801248a:	4b0e      	ldr	r3, [pc, #56]	@ (80124c4 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 801248c:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 801248e:	681a      	ldr	r2, [r3, #0]
 8012490:	4290      	cmp	r0, r2
 8012492:	bf88      	it	hi
 8012494:	6018      	strhi	r0, [r3, #0]
 8012496:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801249a:	4631      	mov	r1, r6
 801249c:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 80124a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 80124a4:	f7fd bf6a 	b.w	801037c <vListInsertEnd>
 80124a8:	4770      	bx	lr
 80124aa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80124ae:	f383 8811 	msr	BASEPRI, r3
 80124b2:	f3bf 8f6f 	isb	sy
 80124b6:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 80124ba:	e7fe      	b.n	80124ba <vTaskPriorityDisinheritAfterTimeout+0x92>
 80124bc:	2000e2d0 	.word	0x2000e2d0
 80124c0:	2000de70 	.word	0x2000de70
 80124c4:	2000ddf4 	.word	0x2000ddf4

080124c8 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 80124c8:	4b04      	ldr	r3, [pc, #16]	@ (80124dc <pvTaskIncrementMutexHeldCount+0x14>)
 80124ca:	681a      	ldr	r2, [r3, #0]
 80124cc:	b11a      	cbz	r2, 80124d6 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 80124ce:	6819      	ldr	r1, [r3, #0]
 80124d0:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 80124d2:	3201      	adds	r2, #1
 80124d4:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 80124d6:	6818      	ldr	r0, [r3, #0]
	}
 80124d8:	4770      	bx	lr
 80124da:	bf00      	nop
 80124dc:	2000e2d0 	.word	0x2000e2d0

080124e0 <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 80124e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80124e4:	4e21      	ldr	r6, [pc, #132]	@ (801256c <prvSwitchTimerLists+0x8c>)
 80124e6:	b084      	sub	sp, #16

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 80124e8:	e00d      	b.n	8012506 <prvSwitchTimerLists+0x26>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80124ea:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80124ec:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80124ee:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80124f0:	1d25      	adds	r5, r4, #4
 80124f2:	4628      	mov	r0, r5
 80124f4:	f7fd ff68 	bl	80103c8 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80124f8:	6a23      	ldr	r3, [r4, #32]
 80124fa:	4620      	mov	r0, r4
 80124fc:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80124fe:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8012502:	075b      	lsls	r3, r3, #29
 8012504:	d40a      	bmi.n	801251c <prvSwitchTimerLists+0x3c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8012506:	6833      	ldr	r3, [r6, #0]
 8012508:	681a      	ldr	r2, [r3, #0]
 801250a:	2a00      	cmp	r2, #0
 801250c:	d1ed      	bne.n	80124ea <prvSwitchTimerLists+0xa>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 801250e:	4a18      	ldr	r2, [pc, #96]	@ (8012570 <prvSwitchTimerLists+0x90>)
 8012510:	6811      	ldr	r1, [r2, #0]
 8012512:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 8012514:	6013      	str	r3, [r2, #0]
}
 8012516:	b004      	add	sp, #16
 8012518:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 801251c:	69a3      	ldr	r3, [r4, #24]
	if( xTimerQueue != NULL )
 801251e:	f8df 8054 	ldr.w	r8, [pc, #84]	@ 8012574 <prvSwitchTimerLists+0x94>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8012522:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 8012524:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8012526:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 8012528:	d205      	bcs.n	8012536 <prvSwitchTimerLists+0x56>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801252a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 801252c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801252e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8012530:	f7fd ff32 	bl	8010398 <vListInsert>
 8012534:	e7e7      	b.n	8012506 <prvSwitchTimerLists+0x26>
	if( xTimerQueue != NULL )
 8012536:	f8d8 3000 	ldr.w	r3, [r8]
		xMessage.xMessageID = xCommandID;
 801253a:	2500      	movs	r5, #0
	if( xTimerQueue != NULL )
 801253c:	b16b      	cbz	r3, 801255a <prvSwitchTimerLists+0x7a>
		xMessage.xMessageID = xCommandID;
 801253e:	e9cd 5700 	strd	r5, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8012542:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8012544:	f7ff fedc 	bl	8012300 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8012548:	f8d8 0000 	ldr.w	r0, [r8]
 801254c:	462b      	mov	r3, r5
 801254e:	462a      	mov	r2, r5
 8012550:	4669      	mov	r1, sp
 8012552:	f7fe faa9 	bl	8010aa8 <xQueueGenericSend>
				configASSERT( xResult );
 8012556:	2800      	cmp	r0, #0
 8012558:	d1d5      	bne.n	8012506 <prvSwitchTimerLists+0x26>
 801255a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801255e:	f383 8811 	msr	BASEPRI, r3
 8012562:	f3bf 8f6f 	isb	sy
 8012566:	f3bf 8f4f 	dsb	sy
 801256a:	e7fe      	b.n	801256a <prvSwitchTimerLists+0x8a>
 801256c:	2000e3d4 	.word	0x2000e3d4
 8012570:	2000e3d0 	.word	0x2000e3d0
 8012574:	2000e3cc 	.word	0x2000e3cc

08012578 <prvTimerTask>:
{
 8012578:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801257c:	4e9c      	ldr	r6, [pc, #624]	@ (80127f0 <prvTimerTask+0x278>)
 801257e:	4d9d      	ldr	r5, [pc, #628]	@ (80127f4 <prvTimerTask+0x27c>)
 8012580:	4c9d      	ldr	r4, [pc, #628]	@ (80127f8 <prvTimerTask+0x280>)
 8012582:	b08b      	sub	sp, #44	@ 0x2c
					portYIELD_WITHIN_API();
 8012584:	f04f 29e0 	mov.w	r9, #3758153728	@ 0xe000e000
 8012588:	f04f 5880 	mov.w	r8, #268435456	@ 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 801258c:	6832      	ldr	r2, [r6, #0]
 801258e:	6817      	ldr	r7, [r2, #0]
 8012590:	2f00      	cmp	r7, #0
 8012592:	f000 80aa 	beq.w	80126ea <prvTimerTask+0x172>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8012596:	68d3      	ldr	r3, [r2, #12]
 8012598:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 801259a:	f7ff fce9 	bl	8011f70 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 801259e:	f7ff fcff 	bl	8011fa0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80125a2:	682a      	ldr	r2, [r5, #0]
 80125a4:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 80125a6:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 80125a8:	f0c0 80b0 	bcc.w	801270c <prvTimerTask+0x194>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80125ac:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 80125ae:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80125b0:	f240 80b6 	bls.w	8012720 <prvTimerTask+0x1a8>
 80125b4:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80125b6:	6820      	ldr	r0, [r4, #0]
 80125b8:	eba7 010a 	sub.w	r1, r7, sl
 80125bc:	f7ff f886 	bl	80116cc <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 80125c0:	f7ff fcde 	bl	8011f80 <xTaskResumeAll>
 80125c4:	b928      	cbnz	r0, 80125d2 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 80125c6:	f8c9 8d04 	str.w	r8, [r9, #3332]	@ 0xd04
 80125ca:	f3bf 8f4f 	dsb	sy
 80125ce:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 80125d2:	6820      	ldr	r0, [r4, #0]
 80125d4:	2200      	movs	r2, #0
 80125d6:	a902      	add	r1, sp, #8
 80125d8:	f7fe fc9e 	bl	8010f18 <xQueueReceive>
 80125dc:	2800      	cmp	r0, #0
 80125de:	d0d5      	beq.n	801258c <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80125e0:	9b02      	ldr	r3, [sp, #8]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 80125e2:	9804      	ldr	r0, [sp, #16]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80125e4:	2b00      	cmp	r3, #0
 80125e6:	db78      	blt.n	80126da <prvTimerTask+0x162>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 80125e8:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 80125ea:	697b      	ldr	r3, [r7, #20]
 80125ec:	b113      	cbz	r3, 80125f4 <prvTimerTask+0x7c>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80125ee:	1d38      	adds	r0, r7, #4
 80125f0:	f7fd feea 	bl	80103c8 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 80125f4:	f7ff fcd4 	bl	8011fa0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80125f8:	682b      	ldr	r3, [r5, #0]
 80125fa:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 80125fc:	4683      	mov	fp, r0
	if( xTimeNow < xLastTime )
 80125fe:	f0c0 808c 	bcc.w	801271a <prvTimerTask+0x1a2>
			switch( xMessage.xMessageID )
 8012602:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 8012604:	f8c5 b000 	str.w	fp, [r5]
			switch( xMessage.xMessageID )
 8012608:	2b09      	cmp	r3, #9
 801260a:	d8e2      	bhi.n	80125d2 <prvTimerTask+0x5a>
 801260c:	e8df f003 	tbb	[pc, r3]
 8012610:	55050505 	.word	0x55050505
 8012614:	05055c3e 	.word	0x05055c3e
 8012618:	3e55      	.short	0x3e55
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 801261a:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 801261e:	9b03      	ldr	r3, [sp, #12]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8012620:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8012622:	f042 0201 	orr.w	r2, r2, #1
 8012626:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 801262a:	69ba      	ldr	r2, [r7, #24]
 801262c:	1899      	adds	r1, r3, r2
 801262e:	bf2c      	ite	cs
 8012630:	2001      	movcs	r0, #1
 8012632:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 8012634:	4559      	cmp	r1, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8012636:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 8012638:	f200 808d 	bhi.w	8012756 <prvTimerTask+0x1de>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801263c:	ebab 0303 	sub.w	r3, fp, r3
 8012640:	429a      	cmp	r2, r3
 8012642:	f200 80a3 	bhi.w	801278c <prvTimerTask+0x214>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8012646:	6a3b      	ldr	r3, [r7, #32]
 8012648:	4638      	mov	r0, r7
 801264a:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 801264c:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8012650:	0759      	lsls	r1, r3, #29
 8012652:	d5be      	bpl.n	80125d2 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 8012654:	6821      	ldr	r1, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8012656:	9b03      	ldr	r3, [sp, #12]
 8012658:	69ba      	ldr	r2, [r7, #24]
	if( xTimerQueue != NULL )
 801265a:	b171      	cbz	r1, 801267a <prvTimerTask+0x102>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 801265c:	4413      	add	r3, r2
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 801265e:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 8012662:	2700      	movs	r7, #0
 8012664:	9706      	str	r7, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8012666:	f7ff fe4b 	bl	8012300 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 801266a:	6820      	ldr	r0, [r4, #0]
 801266c:	463b      	mov	r3, r7
 801266e:	463a      	mov	r2, r7
 8012670:	a906      	add	r1, sp, #24
 8012672:	f7fe fa19 	bl	8010aa8 <xQueueGenericSend>
							configASSERT( xResult );
 8012676:	2800      	cmp	r0, #0
 8012678:	d1ab      	bne.n	80125d2 <prvTimerTask+0x5a>
 801267a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801267e:	f383 8811 	msr	BASEPRI, r3
 8012682:	f3bf 8f6f 	isb	sy
 8012686:	f3bf 8f4f 	dsb	sy
 801268a:	e7fe      	b.n	801268a <prvTimerTask+0x112>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 801268c:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8012690:	9b03      	ldr	r3, [sp, #12]
 8012692:	61bb      	str	r3, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8012694:	f042 0201 	orr.w	r2, r2, #1
 8012698:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 801269c:	2b00      	cmp	r3, #0
 801269e:	f000 809d 	beq.w	80127dc <prvTimerTask+0x264>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 80126a2:	445b      	add	r3, fp
	if( xNextExpiryTime <= xTimeNow )
 80126a4:	455b      	cmp	r3, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80126a6:	607b      	str	r3, [r7, #4]
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80126a8:	bf96      	itet	ls
 80126aa:	4b54      	ldrls	r3, [pc, #336]	@ (80127fc <prvTimerTask+0x284>)
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80126ac:	6830      	ldrhi	r0, [r6, #0]
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80126ae:	6818      	ldrls	r0, [r3, #0]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80126b0:	613f      	str	r7, [r7, #16]
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80126b2:	1d39      	adds	r1, r7, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80126b4:	f7fd fe70 	bl	8010398 <vListInsert>
 80126b8:	e78b      	b.n	80125d2 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80126ba:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 80126be:	f023 0301 	bic.w	r3, r3, #1
 80126c2:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
					break;
 80126c6:	e784      	b.n	80125d2 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 80126c8:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 80126cc:	079a      	lsls	r2, r3, #30
 80126ce:	d54c      	bpl.n	801276a <prvTimerTask+0x1f2>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80126d0:	f023 0301 	bic.w	r3, r3, #1
 80126d4:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
 80126d8:	e77b      	b.n	80125d2 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 80126da:	9b03      	ldr	r3, [sp, #12]
 80126dc:	9905      	ldr	r1, [sp, #20]
 80126de:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 80126e0:	9b02      	ldr	r3, [sp, #8]
 80126e2:	2b00      	cmp	r3, #0
 80126e4:	f6ff af75 	blt.w	80125d2 <prvTimerTask+0x5a>
 80126e8:	e77e      	b.n	80125e8 <prvTimerTask+0x70>
	vTaskSuspendAll();
 80126ea:	f7ff fc41 	bl	8011f70 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 80126ee:	f7ff fc57 	bl	8011fa0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80126f2:	682a      	ldr	r2, [r5, #0]
 80126f4:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 80126f6:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 80126f8:	d308      	bcc.n	801270c <prvTimerTask+0x194>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80126fa:	4b40      	ldr	r3, [pc, #256]	@ (80127fc <prvTimerTask+0x284>)
	xLastTime = xTimeNow;
 80126fc:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8012700:	681a      	ldr	r2, [r3, #0]
 8012702:	6812      	ldr	r2, [r2, #0]
 8012704:	fab2 f282 	clz	r2, r2
 8012708:	0952      	lsrs	r2, r2, #5
 801270a:	e754      	b.n	80125b6 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 801270c:	f7ff fee8 	bl	80124e0 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 8012710:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 8012714:	f7ff fc34 	bl	8011f80 <xTaskResumeAll>
 8012718:	e75b      	b.n	80125d2 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 801271a:	f7ff fee1 	bl	80124e0 <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 801271e:	e770      	b.n	8012602 <prvTimerTask+0x8a>
				( void ) xTaskResumeAll();
 8012720:	f7ff fc2e 	bl	8011f80 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8012724:	6832      	ldr	r2, [r6, #0]
 8012726:	68d2      	ldr	r2, [r2, #12]
 8012728:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 801272c:	f10b 0104 	add.w	r1, fp, #4
 8012730:	4608      	mov	r0, r1
 8012732:	9101      	str	r1, [sp, #4]
 8012734:	f7fd fe48 	bl	80103c8 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8012738:	f89b 2028 	ldrb.w	r2, [fp, #40]	@ 0x28
 801273c:	9901      	ldr	r1, [sp, #4]
 801273e:	f012 0f04 	tst.w	r2, #4
 8012742:	d116      	bne.n	8012772 <prvTimerTask+0x1fa>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8012744:	f022 0201 	bic.w	r2, r2, #1
 8012748:	f88b 2028 	strb.w	r2, [fp, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 801274c:	f8db 3020 	ldr.w	r3, [fp, #32]
 8012750:	4658      	mov	r0, fp
 8012752:	4798      	blx	r3
}
 8012754:	e73d      	b.n	80125d2 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8012756:	455b      	cmp	r3, fp
 8012758:	d902      	bls.n	8012760 <prvTimerTask+0x1e8>
 801275a:	2800      	cmp	r0, #0
 801275c:	f43f af73 	beq.w	8012646 <prvTimerTask+0xce>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8012760:	6830      	ldr	r0, [r6, #0]
 8012762:	1d39      	adds	r1, r7, #4
 8012764:	f7fd fe18 	bl	8010398 <vListInsert>
	return xProcessTimerNow;
 8012768:	e733      	b.n	80125d2 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 801276a:	4638      	mov	r0, r7
 801276c:	f7fd fd92 	bl	8010294 <vPortFree>
 8012770:	e72f      	b.n	80125d2 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8012772:	f8db 0018 	ldr.w	r0, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8012776:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 801277a:	183a      	adds	r2, r7, r0
	if( xNextExpiryTime <= xTimeNow )
 801277c:	4592      	cmp	sl, r2
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 801277e:	f8cb 2004 	str.w	r2, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 8012782:	d209      	bcs.n	8012798 <prvTimerTask+0x220>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8012784:	6830      	ldr	r0, [r6, #0]
 8012786:	f7fd fe07 	bl	8010398 <vListInsert>
	return xProcessTimerNow;
 801278a:	e7df      	b.n	801274c <prvTimerTask+0x1d4>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 801278c:	4b1b      	ldr	r3, [pc, #108]	@ (80127fc <prvTimerTask+0x284>)
 801278e:	1d39      	adds	r1, r7, #4
 8012790:	6818      	ldr	r0, [r3, #0]
 8012792:	f7fd fe01 	bl	8010398 <vListInsert>
	return xProcessTimerNow;
 8012796:	e71c      	b.n	80125d2 <prvTimerTask+0x5a>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8012798:	ebaa 0a07 	sub.w	sl, sl, r7
 801279c:	4550      	cmp	r0, sl
 801279e:	d818      	bhi.n	80127d2 <prvTimerTask+0x25a>
	if( xTimerQueue != NULL )
 80127a0:	6822      	ldr	r2, [r4, #0]
 80127a2:	b16a      	cbz	r2, 80127c0 <prvTimerTask+0x248>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80127a4:	e9cd 7b07 	strd	r7, fp, [sp, #28]
		xMessage.xMessageID = xCommandID;
 80127a8:	2700      	movs	r7, #0
 80127aa:	9706      	str	r7, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80127ac:	f7ff fda8 	bl	8012300 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80127b0:	6820      	ldr	r0, [r4, #0]
 80127b2:	463b      	mov	r3, r7
 80127b4:	463a      	mov	r2, r7
 80127b6:	a906      	add	r1, sp, #24
 80127b8:	f7fe f976 	bl	8010aa8 <xQueueGenericSend>
			configASSERT( xResult );
 80127bc:	2800      	cmp	r0, #0
 80127be:	d1c5      	bne.n	801274c <prvTimerTask+0x1d4>
 80127c0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80127c4:	f383 8811 	msr	BASEPRI, r3
 80127c8:	f3bf 8f6f 	isb	sy
 80127cc:	f3bf 8f4f 	dsb	sy
 80127d0:	e7fe      	b.n	80127d0 <prvTimerTask+0x258>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80127d2:	4b0a      	ldr	r3, [pc, #40]	@ (80127fc <prvTimerTask+0x284>)
 80127d4:	6818      	ldr	r0, [r3, #0]
 80127d6:	f7fd fddf 	bl	8010398 <vListInsert>
	return xProcessTimerNow;
 80127da:	e7b7      	b.n	801274c <prvTimerTask+0x1d4>
 80127dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80127e0:	f383 8811 	msr	BASEPRI, r3
 80127e4:	f3bf 8f6f 	isb	sy
 80127e8:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80127ec:	e7fe      	b.n	80127ec <prvTimerTask+0x274>
 80127ee:	bf00      	nop
 80127f0:	2000e3d4 	.word	0x2000e3d4
 80127f4:	2000e3c4 	.word	0x2000e3c4
 80127f8:	2000e3cc 	.word	0x2000e3cc
 80127fc:	2000e3d0 	.word	0x2000e3d0

08012800 <xTimerCreateTimerTask>:
{
 8012800:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8012802:	4c23      	ldr	r4, [pc, #140]	@ (8012890 <xTimerCreateTimerTask+0x90>)
{
 8012804:	b089      	sub	sp, #36	@ 0x24
	taskENTER_CRITICAL();
 8012806:	f7fd fe5d 	bl	80104c4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 801280a:	6825      	ldr	r5, [r4, #0]
 801280c:	b335      	cbz	r5, 801285c <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 801280e:	f7fd fe7b 	bl	8010508 <vPortExitCritical>
	if( xTimerQueue != NULL )
 8012812:	6823      	ldr	r3, [r4, #0]
 8012814:	b1cb      	cbz	r3, 801284a <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8012816:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8012818:	aa07      	add	r2, sp, #28
 801281a:	a906      	add	r1, sp, #24
 801281c:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 801281e:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8012822:	f7fd fc6f 	bl	8010104 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8012826:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 801282a:	2302      	movs	r3, #2
 801282c:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8012830:	9300      	str	r3, [sp, #0]
 8012832:	9a07      	ldr	r2, [sp, #28]
 8012834:	4917      	ldr	r1, [pc, #92]	@ (8012894 <xTimerCreateTimerTask+0x94>)
 8012836:	4818      	ldr	r0, [pc, #96]	@ (8012898 <xTimerCreateTimerTask+0x98>)
 8012838:	4623      	mov	r3, r4
 801283a:	f7ff fa55 	bl	8011ce8 <xTaskCreateStatic>
 801283e:	4b17      	ldr	r3, [pc, #92]	@ (801289c <xTimerCreateTimerTask+0x9c>)
 8012840:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8012842:	b110      	cbz	r0, 801284a <xTimerCreateTimerTask+0x4a>
}
 8012844:	2001      	movs	r0, #1
 8012846:	b009      	add	sp, #36	@ 0x24
 8012848:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801284a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801284e:	f383 8811 	msr	BASEPRI, r3
 8012852:	f3bf 8f6f 	isb	sy
 8012856:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 801285a:	e7fe      	b.n	801285a <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 801285c:	4f10      	ldr	r7, [pc, #64]	@ (80128a0 <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 801285e:	4e11      	ldr	r6, [pc, #68]	@ (80128a4 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 8012860:	4638      	mov	r0, r7
 8012862:	f7fd fd7b 	bl	801035c <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8012866:	4630      	mov	r0, r6
 8012868:	f7fd fd78 	bl	801035c <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 801286c:	4a0e      	ldr	r2, [pc, #56]	@ (80128a8 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 801286e:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 8012870:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8012872:	4a0e      	ldr	r2, [pc, #56]	@ (80128ac <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8012874:	4b0e      	ldr	r3, [pc, #56]	@ (80128b0 <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 8012876:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8012878:	2110      	movs	r1, #16
 801287a:	4a0e      	ldr	r2, [pc, #56]	@ (80128b4 <xTimerCreateTimerTask+0xb4>)
 801287c:	200a      	movs	r0, #10
 801287e:	f7fd ffbb 	bl	80107f8 <xQueueGenericCreateStatic>
 8012882:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 8012884:	2800      	cmp	r0, #0
 8012886:	d0c2      	beq.n	801280e <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8012888:	490b      	ldr	r1, [pc, #44]	@ (80128b8 <xTimerCreateTimerTask+0xb8>)
 801288a:	f7fe fef7 	bl	801167c <vQueueAddToRegistry>
 801288e:	e7be      	b.n	801280e <xTimerCreateTimerTask+0xe>
 8012890:	2000e3cc 	.word	0x2000e3cc
 8012894:	080321a8 	.word	0x080321a8
 8012898:	08012579 	.word	0x08012579
 801289c:	2000e3c8 	.word	0x2000e3c8
 80128a0:	2000e3ec 	.word	0x2000e3ec
 80128a4:	2000e3d8 	.word	0x2000e3d8
 80128a8:	2000e3d4 	.word	0x2000e3d4
 80128ac:	2000e3d0 	.word	0x2000e3d0
 80128b0:	2000e2d4 	.word	0x2000e2d4
 80128b4:	2000e324 	.word	0x2000e324
 80128b8:	080321a0 	.word	0x080321a0

080128bc <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 80128bc:	8880      	ldrh	r0, [r0, #4]
 80128be:	4770      	bx	lr

080128c0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 80128c0:	b570      	push	{r4, r5, r6, lr}
 80128c2:	6803      	ldr	r3, [r0, #0]
 80128c4:	4605      	mov	r5, r0
 80128c6:	460c      	mov	r4, r1
 80128c8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80128ca:	2100      	movs	r1, #0
 80128cc:	4798      	blx	r3
 80128ce:	682b      	ldr	r3, [r5, #0]
 80128d0:	4606      	mov	r6, r0
 80128d2:	6a1b      	ldr	r3, [r3, #32]
 80128d4:	4628      	mov	r0, r5
 80128d6:	4798      	blx	r3
 80128d8:	1ba4      	subs	r4, r4, r6
 80128da:	b2a4      	uxth	r4, r4
 80128dc:	fbb4 f0f0 	udiv	r0, r4, r0
 80128e0:	bd70      	pop	{r4, r5, r6, pc}

080128e2 <_ZN8touchgfx17AbstractPartition5clearEv>:
 80128e2:	2300      	movs	r3, #0
 80128e4:	8083      	strh	r3, [r0, #4]
 80128e6:	4770      	bx	lr

080128e8 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 80128e8:	b510      	push	{r4, lr}
 80128ea:	6803      	ldr	r3, [r0, #0]
 80128ec:	8881      	ldrh	r1, [r0, #4]
 80128ee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80128f0:	4604      	mov	r4, r0
 80128f2:	4798      	blx	r3
 80128f4:	88a3      	ldrh	r3, [r4, #4]
 80128f6:	3301      	adds	r3, #1
 80128f8:	80a3      	strh	r3, [r4, #4]
 80128fa:	bd10      	pop	{r4, pc}

080128fc <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 80128fc:	6803      	ldr	r3, [r0, #0]
 80128fe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8012900:	4718      	bx	r3

08012902 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8012902:	4770      	bx	lr

08012904 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8012904:	4a02      	ldr	r2, [pc, #8]	@ (8012910 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8012906:	6002      	str	r2, [r0, #0]
 8012908:	2200      	movs	r2, #0
 801290a:	8082      	strh	r2, [r0, #4]
 801290c:	4770      	bx	lr
 801290e:	bf00      	nop
 8012910:	080321b8 	.word	0x080321b8

08012914 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8012914:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8012916:	2000      	movs	r0, #0
 8012918:	b12b      	cbz	r3, 8012926 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 801291a:	b920      	cbnz	r0, 8012926 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 801291c:	1a5a      	subs	r2, r3, r1
 801291e:	4250      	negs	r0, r2
 8012920:	4150      	adcs	r0, r2
 8012922:	699b      	ldr	r3, [r3, #24]
 8012924:	e7f8      	b.n	8012918 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8012926:	4770      	bx	lr

08012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8012928:	2300      	movs	r3, #0
 801292a:	6148      	str	r0, [r1, #20]
 801292c:	618b      	str	r3, [r1, #24]
 801292e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8012930:	b913      	cbnz	r3, 8012938 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 8012932:	6281      	str	r1, [r0, #40]	@ 0x28
 8012934:	4770      	bx	lr
 8012936:	4613      	mov	r3, r2
 8012938:	699a      	ldr	r2, [r3, #24]
 801293a:	2a00      	cmp	r2, #0
 801293c:	d1fb      	bne.n	8012936 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 801293e:	6199      	str	r1, [r3, #24]
 8012940:	4770      	bx	lr

08012942 <_ZN8touchgfx9Container9removeAllEv>:
 8012942:	2200      	movs	r2, #0
 8012944:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8012946:	b123      	cbz	r3, 8012952 <_ZN8touchgfx9Container9removeAllEv+0x10>
 8012948:	6999      	ldr	r1, [r3, #24]
 801294a:	6281      	str	r1, [r0, #40]	@ 0x28
 801294c:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8012950:	e7f8      	b.n	8012944 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8012952:	4770      	bx	lr

08012954 <_ZN8touchgfx9Container6unlinkEv>:
 8012954:	2300      	movs	r3, #0
 8012956:	6283      	str	r3, [r0, #40]	@ 0x28
 8012958:	4770      	bx	lr

0801295a <_ZNK8touchgfx9Container12getSolidRectEv>:
 801295a:	2200      	movs	r2, #0
 801295c:	8002      	strh	r2, [r0, #0]
 801295e:	8042      	strh	r2, [r0, #2]
 8012960:	8082      	strh	r2, [r0, #4]
 8012962:	80c2      	strh	r2, [r0, #6]
 8012964:	4770      	bx	lr

08012966 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8012966:	b570      	push	{r4, r5, r6, lr}
 8012968:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 801296a:	460d      	mov	r5, r1
 801296c:	4616      	mov	r6, r2
 801296e:	b13c      	cbz	r4, 8012980 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8012970:	6823      	ldr	r3, [r4, #0]
 8012972:	4620      	mov	r0, r4
 8012974:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8012976:	4632      	mov	r2, r6
 8012978:	4629      	mov	r1, r5
 801297a:	4798      	blx	r3
 801297c:	69a4      	ldr	r4, [r4, #24]
 801297e:	e7f6      	b.n	801296e <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8012980:	bd70      	pop	{r4, r5, r6, pc}

08012982 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8012982:	b538      	push	{r3, r4, r5, lr}
 8012984:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8012986:	460d      	mov	r5, r1
 8012988:	b134      	cbz	r4, 8012998 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 801298a:	682b      	ldr	r3, [r5, #0]
 801298c:	4621      	mov	r1, r4
 801298e:	689b      	ldr	r3, [r3, #8]
 8012990:	4628      	mov	r0, r5
 8012992:	4798      	blx	r3
 8012994:	69a4      	ldr	r4, [r4, #24]
 8012996:	e7f7      	b.n	8012988 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8012998:	bd38      	pop	{r3, r4, r5, pc}

0801299a <_ZN8touchgfx9ContainerD1Ev>:
 801299a:	4770      	bx	lr

0801299c <_ZN8touchgfx9ContainerD0Ev>:
 801299c:	b510      	push	{r4, lr}
 801299e:	212c      	movs	r1, #44	@ 0x2c
 80129a0:	4604      	mov	r4, r0
 80129a2:	f01a ff84 	bl	802d8ae <_ZdlPvj>
 80129a6:	4620      	mov	r0, r4
 80129a8:	bd10      	pop	{r4, pc}

080129aa <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 80129aa:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80129ac:	b19b      	cbz	r3, 80129d6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80129ae:	428b      	cmp	r3, r1
 80129b0:	d109      	bne.n	80129c6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 80129b2:	699a      	ldr	r2, [r3, #24]
 80129b4:	2100      	movs	r1, #0
 80129b6:	6159      	str	r1, [r3, #20]
 80129b8:	6282      	str	r2, [r0, #40]	@ 0x28
 80129ba:	b902      	cbnz	r2, 80129be <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 80129bc:	4770      	bx	lr
 80129be:	6199      	str	r1, [r3, #24]
 80129c0:	4770      	bx	lr
 80129c2:	4613      	mov	r3, r2
 80129c4:	b13a      	cbz	r2, 80129d6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80129c6:	699a      	ldr	r2, [r3, #24]
 80129c8:	428a      	cmp	r2, r1
 80129ca:	d1fa      	bne.n	80129c2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 80129cc:	698a      	ldr	r2, [r1, #24]
 80129ce:	619a      	str	r2, [r3, #24]
 80129d0:	2300      	movs	r3, #0
 80129d2:	e9c1 3305 	strd	r3, r3, [r1, #20]
 80129d6:	4770      	bx	lr

080129d8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 80129d8:	b410      	push	{r4}
 80129da:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80129dc:	4604      	mov	r4, r0
 80129de:	b92b      	cbnz	r3, 80129ec <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 80129e0:	6803      	ldr	r3, [r0, #0]
 80129e2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80129e6:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80129e8:	4611      	mov	r1, r2
 80129ea:	4718      	bx	r3
 80129ec:	b941      	cbnz	r1, 8012a00 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 80129ee:	6193      	str	r3, [r2, #24]
 80129f0:	6282      	str	r2, [r0, #40]	@ 0x28
 80129f2:	6154      	str	r4, [r2, #20]
 80129f4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80129f8:	4770      	bx	lr
 80129fa:	4603      	mov	r3, r0
 80129fc:	2800      	cmp	r0, #0
 80129fe:	d0f9      	beq.n	80129f4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8012a00:	4299      	cmp	r1, r3
 8012a02:	6998      	ldr	r0, [r3, #24]
 8012a04:	d1f9      	bne.n	80129fa <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8012a06:	6190      	str	r0, [r2, #24]
 8012a08:	618a      	str	r2, [r1, #24]
 8012a0a:	e7f2      	b.n	80129f2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08012a0c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8012a0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012a10:	461f      	mov	r7, r3
 8012a12:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 8012a16:	460d      	mov	r5, r1
 8012a18:	4616      	mov	r6, r2
 8012a1a:	b103      	cbz	r3, 8012a1e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8012a1c:	6038      	str	r0, [r7, #0]
 8012a1e:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8012a20:	b314      	cbz	r4, 8012a68 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8012a22:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8012a26:	b1eb      	cbz	r3, 8012a64 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012a28:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8012a2c:	428d      	cmp	r5, r1
 8012a2e:	db19      	blt.n	8012a64 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012a30:	8923      	ldrh	r3, [r4, #8]
 8012a32:	b289      	uxth	r1, r1
 8012a34:	440b      	add	r3, r1
 8012a36:	b21b      	sxth	r3, r3
 8012a38:	429d      	cmp	r5, r3
 8012a3a:	da13      	bge.n	8012a64 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012a3c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8012a40:	4296      	cmp	r6, r2
 8012a42:	db0f      	blt.n	8012a64 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012a44:	8963      	ldrh	r3, [r4, #10]
 8012a46:	b292      	uxth	r2, r2
 8012a48:	4413      	add	r3, r2
 8012a4a:	b21b      	sxth	r3, r3
 8012a4c:	429e      	cmp	r6, r3
 8012a4e:	da09      	bge.n	8012a64 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012a50:	6823      	ldr	r3, [r4, #0]
 8012a52:	1ab2      	subs	r2, r6, r2
 8012a54:	1a69      	subs	r1, r5, r1
 8012a56:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 8012a5a:	b212      	sxth	r2, r2
 8012a5c:	463b      	mov	r3, r7
 8012a5e:	b209      	sxth	r1, r1
 8012a60:	4620      	mov	r0, r4
 8012a62:	47c0      	blx	r8
 8012a64:	69a4      	ldr	r4, [r4, #24]
 8012a66:	e7db      	b.n	8012a20 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8012a68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012a6c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8012a6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012a70:	4c6e      	ldr	r4, [pc, #440]	@ (8012c2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8012a72:	b0a1      	sub	sp, #132	@ 0x84
 8012a74:	6824      	ldr	r4, [r4, #0]
 8012a76:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8012a78:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 8012a7c:	9303      	str	r3, [sp, #12]
 8012a7e:	2400      	movs	r4, #0
 8012a80:	802c      	strh	r4, [r5, #0]
 8012a82:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 8012a84:	802c      	strh	r4, [r5, #0]
 8012a86:	601c      	str	r4, [r3, #0]
 8012a88:	4606      	mov	r6, r0
 8012a8a:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8012a8e:	f7ff ffbd 	bl	8012a0c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8012a92:	f1b9 0f03 	cmp.w	r9, #3
 8012a96:	f340 80c2 	ble.w	8012c1e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8012a9a:	4631      	mov	r1, r6
 8012a9c:	a80c      	add	r0, sp, #48	@ 0x30
 8012a9e:	f009 fa47 	bl	801bf30 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012aa2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 8012aa6:	9306      	str	r3, [sp, #24]
 8012aa8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8012aac:	9307      	str	r3, [sp, #28]
 8012aae:	9b03      	ldr	r3, [sp, #12]
 8012ab0:	f8d3 a000 	ldr.w	sl, [r3]
 8012ab4:	f1ba 0f00 	cmp.w	sl, #0
 8012ab8:	f000 80b4 	beq.w	8012c24 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8012abc:	4651      	mov	r1, sl
 8012abe:	a810      	add	r0, sp, #64	@ 0x40
 8012ac0:	f009 fa36 	bl	801bf30 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012ac4:	9b01      	ldr	r3, [sp, #4]
 8012ac6:	9a06      	ldr	r2, [sp, #24]
 8012ac8:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8012acc:	189d      	adds	r5, r3, r2
 8012ace:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 8012ad2:	9a07      	ldr	r2, [sp, #28]
 8012ad4:	2002      	movs	r0, #2
 8012ad6:	fb91 f1f0 	sdiv	r1, r1, r0
 8012ada:	4419      	add	r1, r3
 8012adc:	1a6d      	subs	r5, r5, r1
 8012ade:	9b02      	ldr	r3, [sp, #8]
 8012ae0:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 8012ae4:	4413      	add	r3, r2
 8012ae6:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 8012aea:	fb92 f2f0 	sdiv	r2, r2, r0
 8012aee:	440a      	add	r2, r1
 8012af0:	1a9b      	subs	r3, r3, r2
 8012af2:	435b      	muls	r3, r3
 8012af4:	fb05 3505 	mla	r5, r5, r5, r3
 8012af8:	4f4d      	ldr	r7, [pc, #308]	@ (8012c30 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8012afa:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8012afc:	ac10      	add	r4, sp, #64	@ 0x40
 8012afe:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8012b00:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8012b02:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8012b04:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8012b06:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8012b08:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8012b0c:	f1b9 0f0c 	cmp.w	r9, #12
 8012b10:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8012b14:	f04f 0303 	mov.w	r3, #3
 8012b18:	bfc8      	it	gt
 8012b1a:	4698      	movgt	r8, r3
 8012b1c:	f8cd 9000 	str.w	r9, [sp]
 8012b20:	f04f 0400 	mov.w	r4, #0
 8012b24:	bfdc      	itt	le
 8012b26:	f109 32ff 	addle.w	r2, r9, #4294967295
 8012b2a:	fb92 f8f3 	sdivle	r8, r2, r3
 8012b2e:	1c63      	adds	r3, r4, #1
 8012b30:	aa10      	add	r2, sp, #64	@ 0x40
 8012b32:	f004 0401 	and.w	r4, r4, #1
 8012b36:	9308      	str	r3, [sp, #32]
 8012b38:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8012b3c:	9b00      	ldr	r3, [sp, #0]
 8012b3e:	fb93 f3f8 	sdiv	r3, r3, r8
 8012b42:	b29b      	uxth	r3, r3
 8012b44:	3404      	adds	r4, #4
 8012b46:	f04f 0b00 	mov.w	fp, #0
 8012b4a:	9304      	str	r3, [sp, #16]
 8012b4c:	9a04      	ldr	r2, [sp, #16]
 8012b4e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8012b52:	fb13 f302 	smulbb	r3, r3, r2
 8012b56:	9a01      	ldr	r2, [sp, #4]
 8012b58:	b29b      	uxth	r3, r3
 8012b5a:	1899      	adds	r1, r3, r2
 8012b5c:	9305      	str	r3, [sp, #20]
 8012b5e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8012b62:	b209      	sxth	r1, r1
 8012b64:	4299      	cmp	r1, r3
 8012b66:	db4d      	blt.n	8012c04 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012b68:	8932      	ldrh	r2, [r6, #8]
 8012b6a:	4413      	add	r3, r2
 8012b6c:	b21b      	sxth	r3, r3
 8012b6e:	4299      	cmp	r1, r3
 8012b70:	da48      	bge.n	8012c04 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012b72:	9b04      	ldr	r3, [sp, #16]
 8012b74:	6827      	ldr	r7, [r4, #0]
 8012b76:	fb17 f703 	smulbb	r7, r7, r3
 8012b7a:	9b02      	ldr	r3, [sp, #8]
 8012b7c:	b2bf      	uxth	r7, r7
 8012b7e:	18fa      	adds	r2, r7, r3
 8012b80:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8012b84:	b212      	sxth	r2, r2
 8012b86:	429a      	cmp	r2, r3
 8012b88:	db3c      	blt.n	8012c04 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012b8a:	8970      	ldrh	r0, [r6, #10]
 8012b8c:	4403      	add	r3, r0
 8012b8e:	b21b      	sxth	r3, r3
 8012b90:	429a      	cmp	r2, r3
 8012b92:	da37      	bge.n	8012c04 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012b94:	2300      	movs	r3, #0
 8012b96:	930b      	str	r3, [sp, #44]	@ 0x2c
 8012b98:	4630      	mov	r0, r6
 8012b9a:	ab0b      	add	r3, sp, #44	@ 0x2c
 8012b9c:	f7ff ff36 	bl	8012a0c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8012ba0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8012ba2:	b37a      	cbz	r2, 8012c04 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012ba4:	4552      	cmp	r2, sl
 8012ba6:	d02d      	beq.n	8012c04 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012ba8:	4611      	mov	r1, r2
 8012baa:	a80e      	add	r0, sp, #56	@ 0x38
 8012bac:	9209      	str	r2, [sp, #36]	@ 0x24
 8012bae:	f009 f9bf 	bl	801bf30 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012bb2:	9a06      	ldr	r2, [sp, #24]
 8012bb4:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8012bb8:	9b01      	ldr	r3, [sp, #4]
 8012bba:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 8012bbe:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 8012bc2:	4413      	add	r3, r2
 8012bc4:	f04f 0e02 	mov.w	lr, #2
 8012bc8:	fb91 f1fe 	sdiv	r1, r1, lr
 8012bcc:	4401      	add	r1, r0
 8012bce:	1a58      	subs	r0, r3, r1
 8012bd0:	9a07      	ldr	r2, [sp, #28]
 8012bd2:	9b02      	ldr	r3, [sp, #8]
 8012bd4:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8012bd8:	fb9c fcfe 	sdiv	ip, ip, lr
 8012bdc:	4413      	add	r3, r2
 8012bde:	448c      	add	ip, r1
 8012be0:	eba3 030c 	sub.w	r3, r3, ip
 8012be4:	435b      	muls	r3, r3
 8012be6:	fb00 3300 	mla	r3, r0, r0, r3
 8012bea:	42ab      	cmp	r3, r5
 8012bec:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8012bee:	d208      	bcs.n	8012c02 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8012bf0:	9803      	ldr	r0, [sp, #12]
 8012bf2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8012bf4:	6001      	str	r1, [r0, #0]
 8012bf6:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8012bf8:	9805      	ldr	r0, [sp, #20]
 8012bfa:	8008      	strh	r0, [r1, #0]
 8012bfc:	992b      	ldr	r1, [sp, #172]	@ 0xac
 8012bfe:	461d      	mov	r5, r3
 8012c00:	800f      	strh	r7, [r1, #0]
 8012c02:	4692      	mov	sl, r2
 8012c04:	f10b 0b01 	add.w	fp, fp, #1
 8012c08:	f1bb 0f04 	cmp.w	fp, #4
 8012c0c:	f104 0408 	add.w	r4, r4, #8
 8012c10:	d19c      	bne.n	8012b4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8012c12:	9b00      	ldr	r3, [sp, #0]
 8012c14:	9c08      	ldr	r4, [sp, #32]
 8012c16:	444b      	add	r3, r9
 8012c18:	4544      	cmp	r4, r8
 8012c1a:	9300      	str	r3, [sp, #0]
 8012c1c:	d187      	bne.n	8012b2e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8012c1e:	b021      	add	sp, #132	@ 0x84
 8012c20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012c24:	f04f 35ff 	mov.w	r5, #4294967295
 8012c28:	e766      	b.n	8012af8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8012c2a:	bf00      	nop
 8012c2c:	2000e40c 	.word	0x2000e40c
 8012c30:	0802f874 	.word	0x0802f874

08012c34 <_ZN8touchgfx4RectaNERKS0_>:
 8012c34:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012c38:	f9b1 7000 	ldrsh.w	r7, [r1]
 8012c3c:	888c      	ldrh	r4, [r1, #4]
 8012c3e:	f9b0 9000 	ldrsh.w	r9, [r0]
 8012c42:	443c      	add	r4, r7
 8012c44:	b2a4      	uxth	r4, r4
 8012c46:	fa0f f884 	sxth.w	r8, r4
 8012c4a:	45c1      	cmp	r9, r8
 8012c4c:	da2f      	bge.n	8012cae <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012c4e:	8882      	ldrh	r2, [r0, #4]
 8012c50:	444a      	add	r2, r9
 8012c52:	b292      	uxth	r2, r2
 8012c54:	fa0f fe82 	sxth.w	lr, r2
 8012c58:	4577      	cmp	r7, lr
 8012c5a:	da28      	bge.n	8012cae <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012c5c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8012c60:	88cb      	ldrh	r3, [r1, #6]
 8012c62:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8012c66:	442b      	add	r3, r5
 8012c68:	b21b      	sxth	r3, r3
 8012c6a:	429e      	cmp	r6, r3
 8012c6c:	da1f      	bge.n	8012cae <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012c6e:	88c3      	ldrh	r3, [r0, #6]
 8012c70:	4433      	add	r3, r6
 8012c72:	b29b      	uxth	r3, r3
 8012c74:	fa0f fc83 	sxth.w	ip, r3
 8012c78:	4565      	cmp	r5, ip
 8012c7a:	da18      	bge.n	8012cae <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012c7c:	454f      	cmp	r7, r9
 8012c7e:	bfb8      	it	lt
 8012c80:	464f      	movlt	r7, r9
 8012c82:	42b5      	cmp	r5, r6
 8012c84:	bfb8      	it	lt
 8012c86:	4635      	movlt	r5, r6
 8012c88:	45f0      	cmp	r8, lr
 8012c8a:	bfd8      	it	le
 8012c8c:	4622      	movle	r2, r4
 8012c8e:	1bd2      	subs	r2, r2, r7
 8012c90:	8082      	strh	r2, [r0, #4]
 8012c92:	884a      	ldrh	r2, [r1, #2]
 8012c94:	88c9      	ldrh	r1, [r1, #6]
 8012c96:	8007      	strh	r7, [r0, #0]
 8012c98:	440a      	add	r2, r1
 8012c9a:	b292      	uxth	r2, r2
 8012c9c:	b211      	sxth	r1, r2
 8012c9e:	458c      	cmp	ip, r1
 8012ca0:	bfa8      	it	ge
 8012ca2:	4613      	movge	r3, r2
 8012ca4:	1b5b      	subs	r3, r3, r5
 8012ca6:	80c3      	strh	r3, [r0, #6]
 8012ca8:	8045      	strh	r5, [r0, #2]
 8012caa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012cae:	2300      	movs	r3, #0
 8012cb0:	8003      	strh	r3, [r0, #0]
 8012cb2:	8043      	strh	r3, [r0, #2]
 8012cb4:	8083      	strh	r3, [r0, #4]
 8012cb6:	80c3      	strh	r3, [r0, #6]
 8012cb8:	e7f7      	b.n	8012caa <_ZN8touchgfx4RectaNERKS0_+0x76>

08012cba <_ZNK8touchgfx4Rect7isEmptyEv>:
 8012cba:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8012cbe:	2b00      	cmp	r3, #0
 8012cc0:	dd06      	ble.n	8012cd0 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8012cc2:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8012cc6:	2800      	cmp	r0, #0
 8012cc8:	bfcc      	ite	gt
 8012cca:	2000      	movgt	r0, #0
 8012ccc:	2001      	movle	r0, #1
 8012cce:	4770      	bx	lr
 8012cd0:	2001      	movs	r0, #1
 8012cd2:	4770      	bx	lr

08012cd4 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8012cd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012cd8:	2300      	movs	r3, #0
 8012cda:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8012cdc:	8003      	strh	r3, [r0, #0]
 8012cde:	4604      	mov	r4, r0
 8012ce0:	8043      	strh	r3, [r0, #2]
 8012ce2:	8083      	strh	r3, [r0, #4]
 8012ce4:	80c3      	strh	r3, [r0, #6]
 8012ce6:	2d00      	cmp	r5, #0
 8012ce8:	d040      	beq.n	8012d6c <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8012cea:	1d28      	adds	r0, r5, #4
 8012cec:	f7ff ffe5 	bl	8012cba <_ZNK8touchgfx4Rect7isEmptyEv>
 8012cf0:	b988      	cbnz	r0, 8012d16 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8012cf2:	4620      	mov	r0, r4
 8012cf4:	f7ff ffe1 	bl	8012cba <_ZNK8touchgfx4Rect7isEmptyEv>
 8012cf8:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8012cfc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8012d00:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8012d04:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8012d08:	b138      	cbz	r0, 8012d1a <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8012d0a:	8022      	strh	r2, [r4, #0]
 8012d0c:	8063      	strh	r3, [r4, #2]
 8012d0e:	f8a4 e004 	strh.w	lr, [r4, #4]
 8012d12:	f8a4 c006 	strh.w	ip, [r4, #6]
 8012d16:	69ad      	ldr	r5, [r5, #24]
 8012d18:	e7e5      	b.n	8012ce6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8012d1a:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012d1e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8012d22:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8012d26:	4290      	cmp	r0, r2
 8012d28:	4607      	mov	r7, r0
 8012d2a:	bfa8      	it	ge
 8012d2c:	4617      	movge	r7, r2
 8012d2e:	4472      	add	r2, lr
 8012d30:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8012d34:	8027      	strh	r7, [r4, #0]
 8012d36:	4299      	cmp	r1, r3
 8012d38:	460e      	mov	r6, r1
 8012d3a:	4440      	add	r0, r8
 8012d3c:	bfa8      	it	ge
 8012d3e:	461e      	movge	r6, r3
 8012d40:	4471      	add	r1, lr
 8012d42:	4463      	add	r3, ip
 8012d44:	b200      	sxth	r0, r0
 8012d46:	b212      	sxth	r2, r2
 8012d48:	b209      	sxth	r1, r1
 8012d4a:	b21b      	sxth	r3, r3
 8012d4c:	4290      	cmp	r0, r2
 8012d4e:	bfac      	ite	ge
 8012d50:	ebc7 0200 	rsbge	r2, r7, r0
 8012d54:	ebc7 0202 	rsblt	r2, r7, r2
 8012d58:	4299      	cmp	r1, r3
 8012d5a:	bfac      	ite	ge
 8012d5c:	ebc6 0301 	rsbge	r3, r6, r1
 8012d60:	ebc6 0303 	rsblt	r3, r6, r3
 8012d64:	8066      	strh	r6, [r4, #2]
 8012d66:	80a2      	strh	r2, [r4, #4]
 8012d68:	80e3      	strh	r3, [r4, #6]
 8012d6a:	e7d4      	b.n	8012d16 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8012d6c:	4620      	mov	r0, r4
 8012d6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012d72 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8012d72:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8012d76:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8012d7a:	b383      	cbz	r3, 8012dde <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8012d7c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8012d7e:	b374      	cbz	r4, 8012dde <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8012d80:	f9b1 5000 	ldrsh.w	r5, [r1]
 8012d84:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8012d88:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8012d8c:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8012d90:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8012d94:	b303      	cbz	r3, 8012dd8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8012d96:	4668      	mov	r0, sp
 8012d98:	1d21      	adds	r1, r4, #4
 8012d9a:	f8ad 5000 	strh.w	r5, [sp]
 8012d9e:	f8ad 6002 	strh.w	r6, [sp, #2]
 8012da2:	f8ad 7004 	strh.w	r7, [sp, #4]
 8012da6:	f8ad 8006 	strh.w	r8, [sp, #6]
 8012daa:	f7ff ff43 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 8012dae:	4668      	mov	r0, sp
 8012db0:	f7ff ff83 	bl	8012cba <_ZNK8touchgfx4Rect7isEmptyEv>
 8012db4:	b980      	cbnz	r0, 8012dd8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8012db6:	f8bd 3000 	ldrh.w	r3, [sp]
 8012dba:	88a2      	ldrh	r2, [r4, #4]
 8012dbc:	1a9b      	subs	r3, r3, r2
 8012dbe:	f8ad 3000 	strh.w	r3, [sp]
 8012dc2:	88e2      	ldrh	r2, [r4, #6]
 8012dc4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012dc8:	1a9b      	subs	r3, r3, r2
 8012dca:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012dce:	6823      	ldr	r3, [r4, #0]
 8012dd0:	4669      	mov	r1, sp
 8012dd2:	689b      	ldr	r3, [r3, #8]
 8012dd4:	4620      	mov	r0, r4
 8012dd6:	4798      	blx	r3
 8012dd8:	69a4      	ldr	r4, [r4, #24]
 8012dda:	2c00      	cmp	r4, #0
 8012ddc:	d1d8      	bne.n	8012d90 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8012dde:	b002      	add	sp, #8
 8012de0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012de4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8012de4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012de6:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8012dea:	460d      	mov	r5, r1
 8012dec:	4616      	mov	r6, r2
 8012dee:	b323      	cbz	r3, 8012e3a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8012df0:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8012df2:	b314      	cbz	r4, 8012e3a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8012df4:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8012df8:	b1eb      	cbz	r3, 8012e36 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8012dfa:	6828      	ldr	r0, [r5, #0]
 8012dfc:	6869      	ldr	r1, [r5, #4]
 8012dfe:	466b      	mov	r3, sp
 8012e00:	c303      	stmia	r3!, {r0, r1}
 8012e02:	4668      	mov	r0, sp
 8012e04:	1d21      	adds	r1, r4, #4
 8012e06:	f7ff ff15 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 8012e0a:	4668      	mov	r0, sp
 8012e0c:	f7ff ff55 	bl	8012cba <_ZNK8touchgfx4Rect7isEmptyEv>
 8012e10:	b988      	cbnz	r0, 8012e36 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8012e12:	f8bd 3000 	ldrh.w	r3, [sp]
 8012e16:	88a2      	ldrh	r2, [r4, #4]
 8012e18:	1a9b      	subs	r3, r3, r2
 8012e1a:	f8ad 3000 	strh.w	r3, [sp]
 8012e1e:	88e2      	ldrh	r2, [r4, #6]
 8012e20:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012e24:	1a9b      	subs	r3, r3, r2
 8012e26:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012e2a:	6823      	ldr	r3, [r4, #0]
 8012e2c:	4632      	mov	r2, r6
 8012e2e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8012e30:	4669      	mov	r1, sp
 8012e32:	4620      	mov	r0, r4
 8012e34:	4798      	blx	r3
 8012e36:	69a4      	ldr	r4, [r4, #24]
 8012e38:	e7db      	b.n	8012df2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8012e3a:	b002      	add	sp, #8
 8012e3c:	bd70      	pop	{r4, r5, r6, pc}

08012e3e <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
 8012e3e:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8012e42:	4770      	bx	lr

08012e44 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8012e44:	b513      	push	{r0, r1, r4, lr}
 8012e46:	6803      	ldr	r3, [r0, #0]
 8012e48:	f8d3 40b4 	ldr.w	r4, [r3, #180]	@ 0xb4
 8012e4c:	2300      	movs	r3, #0
 8012e4e:	e9cd 3300 	strd	r3, r3, [sp]
 8012e52:	466b      	mov	r3, sp
 8012e54:	47a0      	blx	r4
 8012e56:	b002      	add	sp, #8
 8012e58:	bd10      	pop	{r4, pc}

08012e5a <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8012e5a:	2301      	movs	r3, #1
 8012e5c:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 8012e60:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 8012e64:	4770      	bx	lr

08012e66 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8012e66:	2301      	movs	r3, #1
 8012e68:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 8012e6c:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 8012e70:	4770      	bx	lr

08012e72 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8012e72:	6843      	ldr	r3, [r0, #4]
 8012e74:	2201      	movs	r2, #1
 8012e76:	725a      	strb	r2, [r3, #9]
 8012e78:	6840      	ldr	r0, [r0, #4]
 8012e7a:	6803      	ldr	r3, [r0, #0]
 8012e7c:	691b      	ldr	r3, [r3, #16]
 8012e7e:	4718      	bx	r3

08012e80 <_ZN8touchgfx3HAL8flushDMAEv>:
 8012e80:	6840      	ldr	r0, [r0, #4]
 8012e82:	6803      	ldr	r3, [r0, #0]
 8012e84:	689b      	ldr	r3, [r3, #8]
 8012e86:	4718      	bx	r3

08012e88 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8012e88:	b530      	push	{r4, r5, lr}
 8012e8a:	b08b      	sub	sp, #44	@ 0x2c
 8012e8c:	6804      	ldr	r4, [r0, #0]
 8012e8e:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 8012e92:	9509      	str	r5, [sp, #36]	@ 0x24
 8012e94:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 8012e98:	9508      	str	r5, [sp, #32]
 8012e9a:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8012e9e:	9507      	str	r5, [sp, #28]
 8012ea0:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 8012ea4:	9506      	str	r5, [sp, #24]
 8012ea6:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8012eaa:	9505      	str	r5, [sp, #20]
 8012eac:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8012eb0:	9504      	str	r5, [sp, #16]
 8012eb2:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 8012eb6:	9503      	str	r5, [sp, #12]
 8012eb8:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 8012ebc:	9502      	str	r5, [sp, #8]
 8012ebe:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8012ec2:	e9cd 3500 	strd	r3, r5, [sp]
 8012ec6:	4613      	mov	r3, r2
 8012ec8:	6c24      	ldr	r4, [r4, #64]	@ 0x40
 8012eca:	2200      	movs	r2, #0
 8012ecc:	47a0      	blx	r4
 8012ece:	b00b      	add	sp, #44	@ 0x2c
 8012ed0:	bd30      	pop	{r4, r5, pc}
	...

08012ed4 <_ZN8touchgfx3HAL10beginFrameEv>:
 8012ed4:	4b04      	ldr	r3, [pc, #16]	@ (8012ee8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8012ed6:	781b      	ldrb	r3, [r3, #0]
 8012ed8:	b123      	cbz	r3, 8012ee4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8012eda:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 8012ede:	f080 0001 	eor.w	r0, r0, #1
 8012ee2:	4770      	bx	lr
 8012ee4:	2001      	movs	r0, #1
 8012ee6:	4770      	bx	lr
 8012ee8:	2000e40a 	.word	0x2000e40a

08012eec <_ZN8touchgfx3HAL8endFrameEv>:
 8012eec:	b510      	push	{r4, lr}
 8012eee:	4604      	mov	r4, r0
 8012ef0:	6840      	ldr	r0, [r0, #4]
 8012ef2:	6803      	ldr	r3, [r0, #0]
 8012ef4:	689b      	ldr	r3, [r3, #8]
 8012ef6:	4798      	blx	r3
 8012ef8:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 8012efc:	b113      	cbz	r3, 8012f04 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8012efe:	2301      	movs	r3, #1
 8012f00:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 8012f04:	bd10      	pop	{r4, pc}

08012f06 <_ZN8touchgfx3HAL10initializeEv>:
 8012f06:	b510      	push	{r4, lr}
 8012f08:	4604      	mov	r4, r0
 8012f0a:	f7ef f987 	bl	800221c <_ZN8touchgfx10OSWrappers10initializeEv>
 8012f0e:	f7ee ff8f 	bl	8001e30 <_ZN8touchgfx4GPIO4initEv>
 8012f12:	6860      	ldr	r0, [r4, #4]
 8012f14:	6803      	ldr	r3, [r0, #0]
 8012f16:	68db      	ldr	r3, [r3, #12]
 8012f18:	4798      	blx	r3
 8012f1a:	68e0      	ldr	r0, [r4, #12]
 8012f1c:	6803      	ldr	r3, [r0, #0]
 8012f1e:	689b      	ldr	r3, [r3, #8]
 8012f20:	4798      	blx	r3
 8012f22:	6823      	ldr	r3, [r4, #0]
 8012f24:	4620      	mov	r0, r4
 8012f26:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8012f28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012f2c:	4718      	bx	r3

08012f2e <_ZN8touchgfx3HAL9taskEntryEv>:
 8012f2e:	b508      	push	{r3, lr}
 8012f30:	6803      	ldr	r3, [r0, #0]
 8012f32:	4604      	mov	r4, r0
 8012f34:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8012f38:	4798      	blx	r3
 8012f3a:	6823      	ldr	r3, [r4, #0]
 8012f3c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8012f3e:	4620      	mov	r0, r4
 8012f40:	4798      	blx	r3
 8012f42:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 8012f46:	2b02      	cmp	r3, #2
 8012f48:	d001      	beq.n	8012f4e <_ZN8touchgfx3HAL9taskEntryEv+0x20>
 8012f4a:	f7ef f9c3 	bl	80022d4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 8012f4e:	6823      	ldr	r3, [r4, #0]
 8012f50:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8012f52:	e7f4      	b.n	8012f3e <_ZN8touchgfx3HAL9taskEntryEv+0x10>

08012f54 <_ZN8touchgfx3HAL4tickEv>:
 8012f54:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8012f56:	6803      	ldr	r3, [r0, #0]
 8012f58:	4d62      	ldr	r5, [pc, #392]	@ (80130e4 <_ZN8touchgfx3HAL4tickEv+0x190>)
 8012f5a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8012f5e:	4604      	mov	r4, r0
 8012f60:	4798      	blx	r3
 8012f62:	2800      	cmp	r0, #0
 8012f64:	f000 809e 	beq.w	80130a4 <_ZN8touchgfx3HAL4tickEv+0x150>
 8012f68:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 8012f6c:	2b02      	cmp	r3, #2
 8012f6e:	d002      	beq.n	8012f76 <_ZN8touchgfx3HAL4tickEv+0x22>
 8012f70:	2001      	movs	r0, #1
 8012f72:	f7ee fea1 	bl	8001cb8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8012f76:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 8012f7a:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 8012f7e:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 8012f82:	2600      	movs	r6, #0
 8012f84:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 8012f88:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 8012f8c:	b133      	cbz	r3, 8012f9c <_ZN8touchgfx3HAL4tickEv+0x48>
 8012f8e:	6823      	ldr	r3, [r4, #0]
 8012f90:	4620      	mov	r0, r4
 8012f92:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 8012f96:	4798      	blx	r3
 8012f98:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 8012f9c:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 8012fa0:	6862      	ldr	r2, [r4, #4]
 8012fa2:	f083 0301 	eor.w	r3, r3, #1
 8012fa6:	7253      	strb	r3, [r2, #9]
 8012fa8:	2601      	movs	r6, #1
 8012faa:	702e      	strb	r6, [r5, #0]
 8012fac:	f007 fd4a 	bl	801aa44 <_ZN8touchgfx11Application11getInstanceEv>
 8012fb0:	6803      	ldr	r3, [r0, #0]
 8012fb2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8012fb4:	4798      	blx	r3
 8012fb6:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 8012fba:	b90b      	cbnz	r3, 8012fc0 <_ZN8touchgfx3HAL4tickEv+0x6c>
 8012fbc:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 8012fc0:	f007 fd40 	bl	801aa44 <_ZN8touchgfx11Application11getInstanceEv>
 8012fc4:	6803      	ldr	r3, [r0, #0]
 8012fc6:	695b      	ldr	r3, [r3, #20]
 8012fc8:	4798      	blx	r3
 8012fca:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8012fcc:	6803      	ldr	r3, [r0, #0]
 8012fce:	691b      	ldr	r3, [r3, #16]
 8012fd0:	4798      	blx	r3
 8012fd2:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 8012fd6:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 8012fda:	3b01      	subs	r3, #1
 8012fdc:	b2db      	uxtb	r3, r3
 8012fde:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 8012fe2:	b10a      	cbz	r2, 8012fe8 <_ZN8touchgfx3HAL4tickEv+0x94>
 8012fe4:	2b00      	cmp	r3, #0
 8012fe6:	d1eb      	bne.n	8012fc0 <_ZN8touchgfx3HAL4tickEv+0x6c>
 8012fe8:	4a3f      	ldr	r2, [pc, #252]	@ (80130e8 <_ZN8touchgfx3HAL4tickEv+0x194>)
 8012fea:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 8012fee:	7813      	ldrb	r3, [r2, #0]
 8012ff0:	3301      	adds	r3, #1
 8012ff2:	b25b      	sxtb	r3, r3
 8012ff4:	4299      	cmp	r1, r3
 8012ff6:	7013      	strb	r3, [r2, #0]
 8012ff8:	dc10      	bgt.n	801301c <_ZN8touchgfx3HAL4tickEv+0xc8>
 8012ffa:	68e0      	ldr	r0, [r4, #12]
 8012ffc:	2300      	movs	r3, #0
 8012ffe:	7013      	strb	r3, [r2, #0]
 8013000:	6803      	ldr	r3, [r0, #0]
 8013002:	aa03      	add	r2, sp, #12
 8013004:	68db      	ldr	r3, [r3, #12]
 8013006:	a902      	add	r1, sp, #8
 8013008:	4798      	blx	r3
 801300a:	6823      	ldr	r3, [r4, #0]
 801300c:	2800      	cmp	r0, #0
 801300e:	d059      	beq.n	80130c4 <_ZN8touchgfx3HAL4tickEv+0x170>
 8013010:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 8013014:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8013018:	4620      	mov	r0, r4
 801301a:	4798      	blx	r3
 801301c:	6960      	ldr	r0, [r4, #20]
 801301e:	2300      	movs	r3, #0
 8013020:	f88d 3007 	strb.w	r3, [sp, #7]
 8013024:	b158      	cbz	r0, 801303e <_ZN8touchgfx3HAL4tickEv+0xea>
 8013026:	6803      	ldr	r3, [r0, #0]
 8013028:	f10d 0107 	add.w	r1, sp, #7
 801302c:	68db      	ldr	r3, [r3, #12]
 801302e:	4798      	blx	r3
 8013030:	b128      	cbz	r0, 801303e <_ZN8touchgfx3HAL4tickEv+0xea>
 8013032:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8013034:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8013038:	6803      	ldr	r3, [r0, #0]
 801303a:	68db      	ldr	r3, [r3, #12]
 801303c:	4798      	blx	r3
 801303e:	f104 001c 	add.w	r0, r4, #28
 8013042:	f019 fe33 	bl	802ccac <_ZN8touchgfx8Gestures4tickEv>
 8013046:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 801304a:	b30b      	cbz	r3, 8013090 <_ZN8touchgfx3HAL4tickEv+0x13c>
 801304c:	6920      	ldr	r0, [r4, #16]
 801304e:	6803      	ldr	r3, [r0, #0]
 8013050:	691b      	ldr	r3, [r3, #16]
 8013052:	4798      	blx	r3
 8013054:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8013056:	4606      	mov	r6, r0
 8013058:	b903      	cbnz	r3, 801305c <_ZN8touchgfx3HAL4tickEv+0x108>
 801305a:	6760      	str	r0, [r4, #116]	@ 0x74
 801305c:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 801305e:	4a23      	ldr	r2, [pc, #140]	@ (80130ec <_ZN8touchgfx3HAL4tickEv+0x198>)
 8013060:	1af3      	subs	r3, r6, r3
 8013062:	4293      	cmp	r3, r2
 8013064:	d914      	bls.n	8013090 <_ZN8touchgfx3HAL4tickEv+0x13c>
 8013066:	6920      	ldr	r0, [r4, #16]
 8013068:	6803      	ldr	r3, [r0, #0]
 801306a:	699b      	ldr	r3, [r3, #24]
 801306c:	4798      	blx	r3
 801306e:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8013070:	2264      	movs	r2, #100	@ 0x64
 8013072:	1af3      	subs	r3, r6, r3
 8013074:	fbb3 f3f2 	udiv	r3, r3, r2
 8013078:	fbb0 f0f3 	udiv	r0, r0, r3
 801307c:	2800      	cmp	r0, #0
 801307e:	dc26      	bgt.n	80130ce <_ZN8touchgfx3HAL4tickEv+0x17a>
 8013080:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 8013084:	6920      	ldr	r0, [r4, #16]
 8013086:	6803      	ldr	r3, [r0, #0]
 8013088:	2100      	movs	r1, #0
 801308a:	69db      	ldr	r3, [r3, #28]
 801308c:	4798      	blx	r3
 801308e:	6766      	str	r6, [r4, #116]	@ 0x74
 8013090:	6823      	ldr	r3, [r4, #0]
 8013092:	4620      	mov	r0, r4
 8013094:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8013098:	4798      	blx	r3
 801309a:	f007 fcd3 	bl	801aa44 <_ZN8touchgfx11Application11getInstanceEv>
 801309e:	6803      	ldr	r3, [r0, #0]
 80130a0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80130a2:	4798      	blx	r3
 80130a4:	6823      	ldr	r3, [r4, #0]
 80130a6:	4620      	mov	r0, r4
 80130a8:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 80130ac:	4798      	blx	r3
 80130ae:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 80130b2:	2b02      	cmp	r3, #2
 80130b4:	d002      	beq.n	80130bc <_ZN8touchgfx3HAL4tickEv+0x168>
 80130b6:	2001      	movs	r0, #1
 80130b8:	f7ee fe38 	bl	8001d2c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80130bc:	2300      	movs	r3, #0
 80130be:	702b      	strb	r3, [r5, #0]
 80130c0:	b004      	add	sp, #16
 80130c2:	bd70      	pop	{r4, r5, r6, pc}
 80130c4:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
 80130c8:	4620      	mov	r0, r4
 80130ca:	4798      	blx	r3
 80130cc:	e7a6      	b.n	801301c <_ZN8touchgfx3HAL4tickEv+0xc8>
 80130ce:	2863      	cmp	r0, #99	@ 0x63
 80130d0:	bfcb      	itete	gt
 80130d2:	2300      	movgt	r3, #0
 80130d4:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 80130d8:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 80130dc:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 80130e0:	e7d0      	b.n	8013084 <_ZN8touchgfx3HAL4tickEv+0x130>
 80130e2:	bf00      	nop
 80130e4:	2000e410 	.word	0x2000e410
 80130e8:	2000e411 	.word	0x2000e411
 80130ec:	05f5e100 	.word	0x05f5e100

080130f0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 80130f0:	b510      	push	{r4, lr}
 80130f2:	4604      	mov	r4, r0
 80130f4:	f7ef f8c6 	bl	8002284 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 80130f8:	6863      	ldr	r3, [r4, #4]
 80130fa:	2200      	movs	r2, #0
 80130fc:	729a      	strb	r2, [r3, #10]
 80130fe:	bd10      	pop	{r4, pc}

08013100 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8013100:	65c1      	str	r1, [r0, #92]	@ 0x5c
 8013102:	301c      	adds	r0, #28
 8013104:	f019 bdd0 	b.w	802cca8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08013108 <_ZN8touchgfx3HAL5touchEll>:
 8013108:	b530      	push	{r4, r5, lr}
 801310a:	b087      	sub	sp, #28
 801310c:	4604      	mov	r4, r0
 801310e:	a804      	add	r0, sp, #16
 8013110:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8013114:	f007 faa8 	bl	801a668 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8013118:	9b04      	ldr	r3, [sp, #16]
 801311a:	f8ad 300c 	strh.w	r3, [sp, #12]
 801311e:	a906      	add	r1, sp, #24
 8013120:	9b05      	ldr	r3, [sp, #20]
 8013122:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8013126:	a803      	add	r0, sp, #12
 8013128:	f007 faf0 	bl	801a70c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 801312c:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 8013130:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8013134:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8013138:	f104 001c 	add.w	r0, r4, #28
 801313c:	b189      	cbz	r1, 8013162 <_ZN8touchgfx3HAL5touchEll+0x5a>
 801313e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 8013142:	9300      	str	r3, [sp, #0]
 8013144:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 8013148:	4613      	mov	r3, r2
 801314a:	462a      	mov	r2, r5
 801314c:	f019 fdbc 	bl	802ccc8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8013150:	b128      	cbz	r0, 801315e <_ZN8touchgfx3HAL5touchEll+0x56>
 8013152:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8013156:	6623      	str	r3, [r4, #96]	@ 0x60
 8013158:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801315c:	6663      	str	r3, [r4, #100]	@ 0x64
 801315e:	b007      	add	sp, #28
 8013160:	bd30      	pop	{r4, r5, pc}
 8013162:	f019 fdf1 	bl	802cd48 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8013166:	2301      	movs	r3, #1
 8013168:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 801316c:	e7f1      	b.n	8013152 <_ZN8touchgfx3HAL5touchEll+0x4a>

0801316e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 801316e:	b510      	push	{r4, lr}
 8013170:	2b00      	cmp	r3, #0
 8013172:	d046      	beq.n	8013202 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8013174:	ea81 0002 	eor.w	r0, r1, r2
 8013178:	07c4      	lsls	r4, r0, #31
 801317a:	d508      	bpl.n	801318e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 801317c:	440b      	add	r3, r1
 801317e:	3a01      	subs	r2, #1
 8013180:	428b      	cmp	r3, r1
 8013182:	d93e      	bls.n	8013202 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8013184:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8013188:	f801 0b01 	strb.w	r0, [r1], #1
 801318c:	e7f8      	b.n	8013180 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 801318e:	07d0      	lsls	r0, r2, #31
 8013190:	bf42      	ittt	mi
 8013192:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8013196:	f801 0b01 	strbmi.w	r0, [r1], #1
 801319a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 801319e:	2b01      	cmp	r3, #1
 80131a0:	d911      	bls.n	80131c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80131a2:	ea81 0402 	eor.w	r4, r1, r2
 80131a6:	07a4      	lsls	r4, r4, #30
 80131a8:	4610      	mov	r0, r2
 80131aa:	d022      	beq.n	80131f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 80131ac:	f023 0401 	bic.w	r4, r3, #1
 80131b0:	440c      	add	r4, r1
 80131b2:	428c      	cmp	r4, r1
 80131b4:	4602      	mov	r2, r0
 80131b6:	d904      	bls.n	80131c2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 80131b8:	8812      	ldrh	r2, [r2, #0]
 80131ba:	f821 2b02 	strh.w	r2, [r1], #2
 80131be:	3002      	adds	r0, #2
 80131c0:	e7f7      	b.n	80131b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 80131c2:	f003 0301 	and.w	r3, r3, #1
 80131c6:	f023 0003 	bic.w	r0, r3, #3
 80131ca:	4408      	add	r0, r1
 80131cc:	4288      	cmp	r0, r1
 80131ce:	4614      	mov	r4, r2
 80131d0:	d904      	bls.n	80131dc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 80131d2:	6824      	ldr	r4, [r4, #0]
 80131d4:	f841 4b04 	str.w	r4, [r1], #4
 80131d8:	3204      	adds	r2, #4
 80131da:	e7f7      	b.n	80131cc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 80131dc:	f003 0303 	and.w	r3, r3, #3
 80131e0:	440b      	add	r3, r1
 80131e2:	3a01      	subs	r2, #1
 80131e4:	428b      	cmp	r3, r1
 80131e6:	d90c      	bls.n	8013202 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80131e8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80131ec:	f801 0b01 	strb.w	r0, [r1], #1
 80131f0:	e7f8      	b.n	80131e4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 80131f2:	0790      	lsls	r0, r2, #30
 80131f4:	d0e7      	beq.n	80131c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80131f6:	f832 0b02 	ldrh.w	r0, [r2], #2
 80131fa:	f821 0b02 	strh.w	r0, [r1], #2
 80131fe:	3b02      	subs	r3, #2
 8013200:	e7e1      	b.n	80131c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8013202:	2001      	movs	r0, #1
 8013204:	bd10      	pop	{r4, pc}

08013206 <_ZN8touchgfx3HAL7noTouchEv>:
 8013206:	b510      	push	{r4, lr}
 8013208:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 801320c:	4604      	mov	r4, r0
 801320e:	b153      	cbz	r3, 8013226 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8013210:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 8013214:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 8013218:	2101      	movs	r1, #1
 801321a:	301c      	adds	r0, #28
 801321c:	f019 fd94 	bl	802cd48 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8013220:	2300      	movs	r3, #0
 8013222:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 8013226:	bd10      	pop	{r4, pc}

08013228 <_ZN8touchgfx3HAL3lcdEv>:
 8013228:	4b04      	ldr	r3, [pc, #16]	@ (801323c <_ZN8touchgfx3HAL3lcdEv+0x14>)
 801322a:	681b      	ldr	r3, [r3, #0]
 801322c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8013230:	b10a      	cbz	r2, 8013236 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8013232:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8013234:	b900      	cbnz	r0, 8013238 <_ZN8touchgfx3HAL3lcdEv+0x10>
 8013236:	6898      	ldr	r0, [r3, #8]
 8013238:	4770      	bx	lr
 801323a:	bf00      	nop
 801323c:	2000e40c 	.word	0x2000e40c

08013240 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8013240:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013244:	b085      	sub	sp, #20
 8013246:	ad04      	add	r5, sp, #16
 8013248:	4604      	mov	r4, r0
 801324a:	2000      	movs	r0, #0
 801324c:	f845 0d04 	str.w	r0, [r5, #-4]!
 8013250:	69a0      	ldr	r0, [r4, #24]
 8013252:	6806      	ldr	r6, [r0, #0]
 8013254:	9501      	str	r5, [sp, #4]
 8013256:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 801325a:	9500      	str	r5, [sp, #0]
 801325c:	6835      	ldr	r5, [r6, #0]
 801325e:	4699      	mov	r9, r3
 8013260:	460f      	mov	r7, r1
 8013262:	4690      	mov	r8, r2
 8013264:	47a8      	blx	r5
 8013266:	4d10      	ldr	r5, [pc, #64]	@ (80132a8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8013268:	4606      	mov	r6, r0
 801326a:	f8a5 9000 	strh.w	r9, [r5]
 801326e:	f7ff ffdb 	bl	8013228 <_ZN8touchgfx3HAL3lcdEv>
 8013272:	6803      	ldr	r3, [r0, #0]
 8013274:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013276:	4798      	blx	r3
 8013278:	b128      	cbz	r0, 8013286 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 801327a:	2801      	cmp	r0, #1
 801327c:	d00b      	beq.n	8013296 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 801327e:	4630      	mov	r0, r6
 8013280:	b005      	add	sp, #20
 8013282:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013286:	882b      	ldrh	r3, [r5, #0]
 8013288:	fb08 7203 	mla	r2, r8, r3, r7
 801328c:	9b03      	ldr	r3, [sp, #12]
 801328e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8013292:	63e3      	str	r3, [r4, #60]	@ 0x3c
 8013294:	e7f3      	b.n	801327e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8013296:	882a      	ldrh	r2, [r5, #0]
 8013298:	9b03      	ldr	r3, [sp, #12]
 801329a:	fb08 7202 	mla	r2, r8, r2, r7
 801329e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80132a2:	1a9a      	subs	r2, r3, r2
 80132a4:	63e2      	str	r2, [r4, #60]	@ 0x3c
 80132a6:	e7ea      	b.n	801327e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 80132a8:	2000e406 	.word	0x2000e406

080132ac <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs>:
 80132ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80132ae:	4b15      	ldr	r3, [pc, #84]	@ (8013304 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x58>)
 80132b0:	f890 407d 	ldrb.w	r4, [r0, #125]	@ 0x7d
 80132b4:	881b      	ldrh	r3, [r3, #0]
 80132b6:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
 80132b8:	fb93 f4f4 	sdiv	r4, r3, r4
 80132bc:	460f      	mov	r7, r1
 80132be:	4606      	mov	r6, r0
 80132c0:	f7ff ffb2 	bl	8013228 <_ZN8touchgfx3HAL3lcdEv>
 80132c4:	6803      	ldr	r3, [r0, #0]
 80132c6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80132c8:	4798      	blx	r3
 80132ca:	2801      	cmp	r0, #1
 80132cc:	d00b      	beq.n	80132e6 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x3a>
 80132ce:	d303      	bcc.n	80132d8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x2c>
 80132d0:	2802      	cmp	r0, #2
 80132d2:	d010      	beq.n	80132f6 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x4a>
 80132d4:	63f5      	str	r5, [r6, #60]	@ 0x3c
 80132d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80132d8:	4b0b      	ldr	r3, [pc, #44]	@ (8013308 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 80132da:	8819      	ldrh	r1, [r3, #0]
 80132dc:	437c      	muls	r4, r7
 80132de:	434c      	muls	r4, r1
 80132e0:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
 80132e4:	e7f6      	b.n	80132d4 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 80132e6:	4b08      	ldr	r3, [pc, #32]	@ (8013308 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 80132e8:	8819      	ldrh	r1, [r3, #0]
 80132ea:	437c      	muls	r4, r7
 80132ec:	434c      	muls	r4, r1
 80132ee:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80132f2:	1b2d      	subs	r5, r5, r4
 80132f4:	e7ee      	b.n	80132d4 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 80132f6:	4b04      	ldr	r3, [pc, #16]	@ (8013308 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 80132f8:	8819      	ldrh	r1, [r3, #0]
 80132fa:	437c      	muls	r4, r7
 80132fc:	434c      	muls	r4, r1
 80132fe:	eba5 0584 	sub.w	r5, r5, r4, lsl #2
 8013302:	e7e7      	b.n	80132d4 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 8013304:	2000e408 	.word	0x2000e408
 8013308:	2000e406 	.word	0x2000e406

0801330c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 801330c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801330e:	b08b      	sub	sp, #44	@ 0x2c
 8013310:	4617      	mov	r7, r2
 8013312:	4604      	mov	r4, r0
 8013314:	460e      	mov	r6, r1
 8013316:	461d      	mov	r5, r3
 8013318:	f7ff ff86 	bl	8013228 <_ZN8touchgfx3HAL3lcdEv>
 801331c:	6803      	ldr	r3, [r0, #0]
 801331e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013320:	4798      	blx	r3
 8013322:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8013326:	9007      	str	r0, [sp, #28]
 8013328:	e9cd 0308 	strd	r0, r3, [sp, #32]
 801332c:	4b0d      	ldr	r3, [pc, #52]	@ (8013364 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 801332e:	6822      	ldr	r2, [r4, #0]
 8013330:	881b      	ldrh	r3, [r3, #0]
 8013332:	9306      	str	r3, [sp, #24]
 8013334:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8013338:	9305      	str	r3, [sp, #20]
 801333a:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 801333e:	9304      	str	r3, [sp, #16]
 8013340:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8013344:	9303      	str	r3, [sp, #12]
 8013346:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 801334a:	9302      	str	r3, [sp, #8]
 801334c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8013350:	e9cd 5300 	strd	r5, r3, [sp]
 8013354:	4631      	mov	r1, r6
 8013356:	6c15      	ldr	r5, [r2, #64]	@ 0x40
 8013358:	463b      	mov	r3, r7
 801335a:	2200      	movs	r2, #0
 801335c:	4620      	mov	r0, r4
 801335e:	47a8      	blx	r5
 8013360:	b00b      	add	sp, #44	@ 0x2c
 8013362:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013364:	2000e406 	.word	0x2000e406

08013368 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8013368:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801336c:	4698      	mov	r8, r3
 801336e:	6803      	ldr	r3, [r0, #0]
 8013370:	6c1d      	ldr	r5, [r3, #64]	@ 0x40
 8013372:	4b15      	ldr	r3, [pc, #84]	@ (80133c8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8013374:	b08b      	sub	sp, #44	@ 0x2c
 8013376:	4617      	mov	r7, r2
 8013378:	f8b3 9000 	ldrh.w	r9, [r3]
 801337c:	460e      	mov	r6, r1
 801337e:	4604      	mov	r4, r0
 8013380:	f7ff ff52 	bl	8013228 <_ZN8touchgfx3HAL3lcdEv>
 8013384:	6803      	ldr	r3, [r0, #0]
 8013386:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013388:	4798      	blx	r3
 801338a:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 801338e:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8013392:	2302      	movs	r3, #2
 8013394:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8013398:	2301      	movs	r3, #1
 801339a:	9305      	str	r3, [sp, #20]
 801339c:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 80133a0:	9304      	str	r3, [sp, #16]
 80133a2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 80133a6:	9303      	str	r3, [sp, #12]
 80133a8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 80133ac:	9302      	str	r3, [sp, #8]
 80133ae:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 80133b2:	2200      	movs	r2, #0
 80133b4:	e9cd 8300 	strd	r8, r3, [sp]
 80133b8:	4631      	mov	r1, r6
 80133ba:	463b      	mov	r3, r7
 80133bc:	4620      	mov	r0, r4
 80133be:	47a8      	blx	r5
 80133c0:	b00b      	add	sp, #44	@ 0x2c
 80133c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80133c6:	bf00      	nop
 80133c8:	2000e406 	.word	0x2000e406

080133cc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 80133cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80133d0:	4698      	mov	r8, r3
 80133d2:	6803      	ldr	r3, [r0, #0]
 80133d4:	6ddd      	ldr	r5, [r3, #92]	@ 0x5c
 80133d6:	4b11      	ldr	r3, [pc, #68]	@ (801341c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 80133d8:	b087      	sub	sp, #28
 80133da:	f8b3 9000 	ldrh.w	r9, [r3]
 80133de:	460e      	mov	r6, r1
 80133e0:	4617      	mov	r7, r2
 80133e2:	4604      	mov	r4, r0
 80133e4:	f7ff ff20 	bl	8013228 <_ZN8touchgfx3HAL3lcdEv>
 80133e8:	6803      	ldr	r3, [r0, #0]
 80133ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80133ec:	4798      	blx	r3
 80133ee:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 80133f2:	f8cd 900c 	str.w	r9, [sp, #12]
 80133f6:	e9cd 0304 	strd	r0, r3, [sp, #16]
 80133fa:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 80133fe:	9302      	str	r3, [sp, #8]
 8013400:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 8013404:	9301      	str	r3, [sp, #4]
 8013406:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801340a:	9300      	str	r3, [sp, #0]
 801340c:	463a      	mov	r2, r7
 801340e:	4643      	mov	r3, r8
 8013410:	4631      	mov	r1, r6
 8013412:	4620      	mov	r0, r4
 8013414:	47a8      	blx	r5
 8013416:	b007      	add	sp, #28
 8013418:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801341c:	2000e406 	.word	0x2000e406

08013420 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8013420:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013424:	4604      	mov	r4, r0
 8013426:	b08f      	sub	sp, #60	@ 0x3c
 8013428:	4610      	mov	r0, r2
 801342a:	460d      	mov	r5, r1
 801342c:	4691      	mov	r9, r2
 801342e:	461e      	mov	r6, r3
 8013430:	f00b f92a 	bl	801e688 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8013434:	2800      	cmp	r0, #0
 8013436:	f000 809d 	beq.w	8013574 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 801343a:	6823      	ldr	r3, [r4, #0]
 801343c:	f8df b198 	ldr.w	fp, [pc, #408]	@ 80135d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8013440:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013442:	f8df a198 	ldr.w	sl, [pc, #408]	@ 80135dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8013446:	4f61      	ldr	r7, [pc, #388]	@ (80135cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013448:	4620      	mov	r0, r4
 801344a:	4798      	blx	r3
 801344c:	6823      	ldr	r3, [r4, #0]
 801344e:	4620      	mov	r0, r4
 8013450:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8013452:	4798      	blx	r3
 8013454:	f8bb 3000 	ldrh.w	r3, [fp]
 8013458:	9301      	str	r3, [sp, #4]
 801345a:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 801345e:	f8ba 3000 	ldrh.w	r3, [sl]
 8013462:	9302      	str	r3, [sp, #8]
 8013464:	883b      	ldrh	r3, [r7, #0]
 8013466:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 801346a:	9303      	str	r3, [sp, #12]
 801346c:	4b58      	ldr	r3, [pc, #352]	@ (80135d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 801346e:	9305      	str	r3, [sp, #20]
 8013470:	881a      	ldrh	r2, [r3, #0]
 8013472:	9204      	str	r2, [sp, #16]
 8013474:	4640      	mov	r0, r8
 8013476:	f00b f99b 	bl	801e7b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801347a:	8038      	strh	r0, [r7, #0]
 801347c:	4640      	mov	r0, r8
 801347e:	f00b f9cb 	bl	801e818 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013482:	9b05      	ldr	r3, [sp, #20]
 8013484:	b280      	uxth	r0, r0
 8013486:	8018      	strh	r0, [r3, #0]
 8013488:	4b52      	ldr	r3, [pc, #328]	@ (80135d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 801348a:	781b      	ldrb	r3, [r3, #0]
 801348c:	2b00      	cmp	r3, #0
 801348e:	d174      	bne.n	801357a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8013490:	883b      	ldrh	r3, [r7, #0]
 8013492:	f8ab 3000 	strh.w	r3, [fp]
 8013496:	f8aa 0000 	strh.w	r0, [sl]
 801349a:	4648      	mov	r0, r9
 801349c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 80134a0:	f00b f8f2 	bl	801e688 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80134a4:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 80134a8:	2200      	movs	r2, #0
 80134aa:	4611      	mov	r1, r2
 80134ac:	4628      	mov	r0, r5
 80134ae:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 80134b2:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 80134b6:	f7f2 fde9 	bl	800608c <_ZN8touchgfx8Drawable5setXYEss>
 80134ba:	2301      	movs	r3, #1
 80134bc:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 80134c0:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 80134c4:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80134c8:	2b00      	cmp	r3, #0
 80134ca:	dd5c      	ble.n	8013586 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 80134cc:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80134d0:	2b00      	cmp	r3, #0
 80134d2:	dd58      	ble.n	8013586 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 80134d4:	462a      	mov	r2, r5
 80134d6:	ab0a      	add	r3, sp, #40	@ 0x28
 80134d8:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80134dc:	6851      	ldr	r1, [r2, #4]
 80134de:	c303      	stmia	r3!, {r0, r1}
 80134e0:	4631      	mov	r1, r6
 80134e2:	a80a      	add	r0, sp, #40	@ 0x28
 80134e4:	f7ff fba6 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 80134e8:	4b38      	ldr	r3, [pc, #224]	@ (80135cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80134ea:	f9b3 2000 	ldrsh.w	r2, [r3]
 80134ee:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 80134f2:	2100      	movs	r1, #0
 80134f4:	aa0a      	add	r2, sp, #40	@ 0x28
 80134f6:	4b36      	ldr	r3, [pc, #216]	@ (80135d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80134f8:	910c      	str	r1, [sp, #48]	@ 0x30
 80134fa:	e892 0003 	ldmia.w	r2, {r0, r1}
 80134fe:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013502:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8013506:	ab08      	add	r3, sp, #32
 8013508:	e883 0003 	stmia.w	r3, {r0, r1}
 801350c:	4618      	mov	r0, r3
 801350e:	a90c      	add	r1, sp, #48	@ 0x30
 8013510:	f7ff fb90 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 8013514:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8013516:	2b00      	cmp	r3, #0
 8013518:	d13c      	bne.n	8013594 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 801351a:	2000      	movs	r0, #0
 801351c:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 8013520:	2600      	movs	r6, #0
 8013522:	682a      	ldr	r2, [r5, #0]
 8013524:	696b      	ldr	r3, [r5, #20]
 8013526:	616e      	str	r6, [r5, #20]
 8013528:	9305      	str	r3, [sp, #20]
 801352a:	6892      	ldr	r2, [r2, #8]
 801352c:	a908      	add	r1, sp, #32
 801352e:	4628      	mov	r0, r5
 8013530:	4790      	blx	r2
 8013532:	9b05      	ldr	r3, [sp, #20]
 8013534:	616b      	str	r3, [r5, #20]
 8013536:	4652      	mov	r2, sl
 8013538:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 801353c:	4649      	mov	r1, r9
 801353e:	4628      	mov	r0, r5
 8013540:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 8013544:	f7f2 fda2 	bl	800608c <_ZN8touchgfx8Drawable5setXYEss>
 8013548:	4b23      	ldr	r3, [pc, #140]	@ (80135d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 801354a:	9a01      	ldr	r2, [sp, #4]
 801354c:	801a      	strh	r2, [r3, #0]
 801354e:	4b23      	ldr	r3, [pc, #140]	@ (80135dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8013550:	9a02      	ldr	r2, [sp, #8]
 8013552:	801a      	strh	r2, [r3, #0]
 8013554:	4b1d      	ldr	r3, [pc, #116]	@ (80135cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013556:	9a03      	ldr	r2, [sp, #12]
 8013558:	801a      	strh	r2, [r3, #0]
 801355a:	4b1d      	ldr	r3, [pc, #116]	@ (80135d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 801355c:	9a04      	ldr	r2, [sp, #16]
 801355e:	801a      	strh	r2, [r3, #0]
 8013560:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 8013564:	6823      	ldr	r3, [r4, #0]
 8013566:	4620      	mov	r0, r4
 8013568:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801356a:	4798      	blx	r3
 801356c:	6823      	ldr	r3, [r4, #0]
 801356e:	4620      	mov	r0, r4
 8013570:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8013572:	4798      	blx	r3
 8013574:	b00f      	add	sp, #60	@ 0x3c
 8013576:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801357a:	883b      	ldrh	r3, [r7, #0]
 801357c:	f8ab 0000 	strh.w	r0, [fp]
 8013580:	f8aa 3000 	strh.w	r3, [sl]
 8013584:	e789      	b.n	801349a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8013586:	462a      	mov	r2, r5
 8013588:	ab0a      	add	r3, sp, #40	@ 0x28
 801358a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 801358e:	6851      	ldr	r1, [r2, #4]
 8013590:	c303      	stmia	r3!, {r0, r1}
 8013592:	e7a9      	b.n	80134e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8013594:	a807      	add	r0, sp, #28
 8013596:	f00b fa81 	bl	801ea9c <_ZNK8touchgfx6Bitmap9getFormatEv>
 801359a:	4606      	mov	r6, r0
 801359c:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 801359e:	6803      	ldr	r3, [r0, #0]
 80135a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80135a2:	4798      	blx	r3
 80135a4:	4286      	cmp	r6, r0
 80135a6:	d1b8      	bne.n	801351a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 80135a8:	f7ff fe3e 	bl	8013228 <_ZN8touchgfx3HAL3lcdEv>
 80135ac:	6803      	ldr	r3, [r0, #0]
 80135ae:	4606      	mov	r6, r0
 80135b0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80135b2:	9305      	str	r3, [sp, #20]
 80135b4:	a807      	add	r0, sp, #28
 80135b6:	f00b fa71 	bl	801ea9c <_ZNK8touchgfx6Bitmap9getFormatEv>
 80135ba:	9b05      	ldr	r3, [sp, #20]
 80135bc:	4601      	mov	r1, r0
 80135be:	4630      	mov	r0, r6
 80135c0:	4798      	blx	r3
 80135c2:	f080 0001 	eor.w	r0, r0, #1
 80135c6:	b2c0      	uxtb	r0, r0
 80135c8:	e7a8      	b.n	801351c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 80135ca:	bf00      	nop
 80135cc:	2000e400 	.word	0x2000e400
 80135d0:	2000e402 	.word	0x2000e402
 80135d4:	2000e404 	.word	0x2000e404
 80135d8:	2000e406 	.word	0x2000e406
 80135dc:	2000e408 	.word	0x2000e408

080135e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 80135e0:	b510      	push	{r4, lr}
 80135e2:	4b07      	ldr	r3, [pc, #28]	@ (8013600 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 80135e4:	781b      	ldrb	r3, [r3, #0]
 80135e6:	4604      	mov	r4, r0
 80135e8:	b13b      	cbz	r3, 80135fa <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80135ea:	6803      	ldr	r3, [r0, #0]
 80135ec:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80135ee:	4798      	blx	r3
 80135f0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80135f2:	4283      	cmp	r3, r0
 80135f4:	d101      	bne.n	80135fa <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80135f6:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 80135f8:	bd10      	pop	{r4, pc}
 80135fa:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 80135fc:	e7fc      	b.n	80135f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 80135fe:	bf00      	nop
 8013600:	2000e40a 	.word	0x2000e40a

08013604 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8013604:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013608:	b08a      	sub	sp, #40	@ 0x28
 801360a:	461d      	mov	r5, r3
 801360c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8013610:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013614:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8013618:	f8ad 3018 	strh.w	r3, [sp, #24]
 801361c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8013620:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013624:	2400      	movs	r4, #0
 8013626:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801362a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 801362e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013632:	4690      	mov	r8, r2
 8013634:	4607      	mov	r7, r0
 8013636:	9404      	str	r4, [sp, #16]
 8013638:	f88d 4020 	strb.w	r4, [sp, #32]
 801363c:	f7ff ffd0 	bl	80135e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013640:	fb06 8505 	mla	r5, r6, r5, r8
 8013644:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013648:	6878      	ldr	r0, [r7, #4]
 801364a:	9505      	str	r5, [sp, #20]
 801364c:	f8ad 601e 	strh.w	r6, [sp, #30]
 8013650:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8013654:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 8013658:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 801365c:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 8013660:	6803      	ldr	r3, [r0, #0]
 8013662:	a901      	add	r1, sp, #4
 8013664:	685b      	ldr	r3, [r3, #4]
 8013666:	4798      	blx	r3
 8013668:	b00a      	add	sp, #40	@ 0x28
 801366a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801366e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 801366e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013672:	b08b      	sub	sp, #44	@ 0x2c
 8013674:	2400      	movs	r4, #0
 8013676:	461d      	mov	r5, r3
 8013678:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 801367c:	4688      	mov	r8, r1
 801367e:	4691      	mov	r9, r2
 8013680:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 8013684:	9404      	str	r4, [sp, #16]
 8013686:	4607      	mov	r7, r0
 8013688:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801368c:	f7ff ffa8 	bl	80135e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013690:	fb06 9505 	mla	r5, r6, r5, r9
 8013694:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8013698:	f8ad 3018 	strh.w	r3, [sp, #24]
 801369c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80136a0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 80136a4:	6878      	ldr	r0, [r7, #4]
 80136a6:	9505      	str	r5, [sp, #20]
 80136a8:	f8ad 301a 	strh.w	r3, [sp, #26]
 80136ac:	f8ad 401c 	strh.w	r4, [sp, #28]
 80136b0:	f8ad 601e 	strh.w	r6, [sp, #30]
 80136b4:	f8cd 8010 	str.w	r8, [sp, #16]
 80136b8:	f8ad 4020 	strh.w	r4, [sp, #32]
 80136bc:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 80136c0:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 80136c4:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 80136c8:	6803      	ldr	r3, [r0, #0]
 80136ca:	a901      	add	r1, sp, #4
 80136cc:	685b      	ldr	r3, [r3, #4]
 80136ce:	4798      	blx	r3
 80136d0:	b00b      	add	sp, #44	@ 0x2c
 80136d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

080136d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 80136d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80136dc:	b08a      	sub	sp, #40	@ 0x28
 80136de:	4698      	mov	r8, r3
 80136e0:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 80136e4:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 80136e8:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 80136ec:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 80136f0:	2300      	movs	r3, #0
 80136f2:	2d0b      	cmp	r5, #11
 80136f4:	4606      	mov	r6, r0
 80136f6:	9304      	str	r3, [sp, #16]
 80136f8:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 80136fc:	d138      	bne.n	8013770 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 80136fe:	2380      	movs	r3, #128	@ 0x80
 8013700:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013704:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8013708:	f8ad 3018 	strh.w	r3, [sp, #24]
 801370c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8013710:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013714:	f88d 0020 	strb.w	r0, [sp, #32]
 8013718:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 801371c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013720:	4630      	mov	r0, r6
 8013722:	9203      	str	r2, [sp, #12]
 8013724:	f7ff ff5c 	bl	80135e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013728:	2c0b      	cmp	r4, #11
 801372a:	bf98      	it	ls
 801372c:	4b1b      	ldrls	r3, [pc, #108]	@ (801379c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 801372e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 8013732:	bf98      	it	ls
 8013734:	5d19      	ldrbls	r1, [r3, r4]
 8013736:	f8ad 701e 	strh.w	r7, [sp, #30]
 801373a:	bf88      	it	hi
 801373c:	2100      	movhi	r1, #0
 801373e:	fb02 8307 	mla	r3, r2, r7, r8
 8013742:	10c9      	asrs	r1, r1, #3
 8013744:	fb01 0003 	mla	r0, r1, r3, r0
 8013748:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 801374c:	9005      	str	r0, [sp, #20]
 801374e:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 8013752:	6870      	ldr	r0, [r6, #4]
 8013754:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 8013758:	2300      	movs	r3, #0
 801375a:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 801375e:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 8013762:	6803      	ldr	r3, [r0, #0]
 8013764:	a901      	add	r1, sp, #4
 8013766:	685b      	ldr	r3, [r3, #4]
 8013768:	4798      	blx	r3
 801376a:	b00a      	add	sp, #40	@ 0x28
 801376c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013770:	2d02      	cmp	r5, #2
 8013772:	d109      	bne.n	8013788 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8013774:	28ff      	cmp	r0, #255	@ 0xff
 8013776:	d105      	bne.n	8013784 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8013778:	f1bc 0f00 	cmp.w	ip, #0
 801377c:	bf14      	ite	ne
 801377e:	2340      	movne	r3, #64	@ 0x40
 8013780:	2320      	moveq	r3, #32
 8013782:	e7bd      	b.n	8013700 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013784:	2340      	movs	r3, #64	@ 0x40
 8013786:	e7bb      	b.n	8013700 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013788:	28ff      	cmp	r0, #255	@ 0xff
 801378a:	d105      	bne.n	8013798 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 801378c:	f1bc 0f00 	cmp.w	ip, #0
 8013790:	bf14      	ite	ne
 8013792:	2304      	movne	r3, #4
 8013794:	2301      	moveq	r3, #1
 8013796:	e7b3      	b.n	8013700 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013798:	2304      	movs	r3, #4
 801379a:	e7b1      	b.n	8013700 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801379c:	08032274 	.word	0x08032274

080137a0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 80137a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80137a4:	b08b      	sub	sp, #44	@ 0x2c
 80137a6:	461d      	mov	r5, r3
 80137a8:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 80137ac:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 80137b0:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 80137b4:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80137b8:	bf14      	ite	ne
 80137ba:	2308      	movne	r3, #8
 80137bc:	2302      	moveq	r3, #2
 80137be:	2400      	movs	r4, #0
 80137c0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80137c4:	4688      	mov	r8, r1
 80137c6:	4693      	mov	fp, r2
 80137c8:	9404      	str	r4, [sp, #16]
 80137ca:	4607      	mov	r7, r0
 80137cc:	f7ff ff08 	bl	80135e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80137d0:	2e0b      	cmp	r6, #11
 80137d2:	bf98      	it	ls
 80137d4:	4b15      	ldrls	r3, [pc, #84]	@ (801382c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 80137d6:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80137da:	bf98      	it	ls
 80137dc:	5d9c      	ldrbls	r4, [r3, r6]
 80137de:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 80137e2:	f8ad 3018 	strh.w	r3, [sp, #24]
 80137e6:	fb05 b50a 	mla	r5, r5, sl, fp
 80137ea:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 80137ee:	f8ad 301a 	strh.w	r3, [sp, #26]
 80137f2:	10e4      	asrs	r4, r4, #3
 80137f4:	fb04 0405 	mla	r4, r4, r5, r0
 80137f8:	2300      	movs	r3, #0
 80137fa:	6878      	ldr	r0, [r7, #4]
 80137fc:	9405      	str	r4, [sp, #20]
 80137fe:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013802:	f8ad a01e 	strh.w	sl, [sp, #30]
 8013806:	f8cd 8010 	str.w	r8, [sp, #16]
 801380a:	f88d 9020 	strb.w	r9, [sp, #32]
 801380e:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 8013812:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 8013816:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 801381a:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 801381e:	6803      	ldr	r3, [r0, #0]
 8013820:	a901      	add	r1, sp, #4
 8013822:	685b      	ldr	r3, [r3, #4]
 8013824:	4798      	blx	r3
 8013826:	b00b      	add	sp, #44	@ 0x2c
 8013828:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801382c:	08032274 	.word	0x08032274

08013830 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8013830:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013834:	461e      	mov	r6, r3
 8013836:	4b0a      	ldr	r3, [pc, #40]	@ (8013860 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8013838:	460f      	mov	r7, r1
 801383a:	881d      	ldrh	r5, [r3, #0]
 801383c:	4690      	mov	r8, r2
 801383e:	f7ff fcf3 	bl	8013228 <_ZN8touchgfx3HAL3lcdEv>
 8013842:	6803      	ldr	r3, [r0, #0]
 8013844:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013846:	4798      	blx	r3
 8013848:	280b      	cmp	r0, #11
 801384a:	bf9a      	itte	ls
 801384c:	4b05      	ldrls	r3, [pc, #20]	@ (8013864 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 801384e:	5c1c      	ldrbls	r4, [r3, r0]
 8013850:	2400      	movhi	r4, #0
 8013852:	fb08 7005 	mla	r0, r8, r5, r7
 8013856:	10e4      	asrs	r4, r4, #3
 8013858:	fb04 6000 	mla	r0, r4, r0, r6
 801385c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013860:	2000e406 	.word	0x2000e406
 8013864:	08032274 	.word	0x08032274

08013868 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8013868:	b5f0      	push	{r4, r5, r6, r7, lr}
 801386a:	b08b      	sub	sp, #44	@ 0x2c
 801386c:	461f      	mov	r7, r3
 801386e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8013872:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013876:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801387a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801387e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8013882:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013886:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801388a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801388e:	2500      	movs	r5, #0
 8013890:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8013894:	f88d 3020 	strb.w	r3, [sp, #32]
 8013898:	4604      	mov	r4, r0
 801389a:	4616      	mov	r6, r2
 801389c:	9504      	str	r5, [sp, #16]
 801389e:	f7ff fe9f 	bl	80135e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80138a2:	463a      	mov	r2, r7
 80138a4:	4631      	mov	r1, r6
 80138a6:	4603      	mov	r3, r0
 80138a8:	4620      	mov	r0, r4
 80138aa:	f7ff ffc1 	bl	8013830 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80138ae:	4b0e      	ldr	r3, [pc, #56]	@ (80138e8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 80138b0:	9005      	str	r0, [sp, #20]
 80138b2:	881b      	ldrh	r3, [r3, #0]
 80138b4:	f8ad 301e 	strh.w	r3, [sp, #30]
 80138b8:	f7ff fcb6 	bl	8013228 <_ZN8touchgfx3HAL3lcdEv>
 80138bc:	6803      	ldr	r3, [r0, #0]
 80138be:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80138c0:	4798      	blx	r3
 80138c2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80138c4:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 80138c8:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 80138cc:	9304      	str	r3, [sp, #16]
 80138ce:	6860      	ldr	r0, [r4, #4]
 80138d0:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 80138d4:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 80138d8:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 80138dc:	6803      	ldr	r3, [r0, #0]
 80138de:	a901      	add	r1, sp, #4
 80138e0:	685b      	ldr	r3, [r3, #4]
 80138e2:	4798      	blx	r3
 80138e4:	b00b      	add	sp, #44	@ 0x2c
 80138e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80138e8:	2000e406 	.word	0x2000e406

080138ec <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 80138ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80138ee:	b08d      	sub	sp, #52	@ 0x34
 80138f0:	466b      	mov	r3, sp
 80138f2:	e883 0006 	stmia.w	r3, {r1, r2}
 80138f6:	2300      	movs	r3, #0
 80138f8:	9306      	str	r3, [sp, #24]
 80138fa:	6803      	ldr	r3, [r0, #0]
 80138fc:	f8bd 6000 	ldrh.w	r6, [sp]
 8013900:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8013902:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8013906:	2501      	movs	r5, #1
 8013908:	9503      	str	r5, [sp, #12]
 801390a:	4604      	mov	r4, r0
 801390c:	4798      	blx	r3
 801390e:	463a      	mov	r2, r7
 8013910:	4631      	mov	r1, r6
 8013912:	4603      	mov	r3, r0
 8013914:	4620      	mov	r0, r4
 8013916:	f7ff ff8b 	bl	8013830 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801391a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 801391c:	9307      	str	r3, [sp, #28]
 801391e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8013922:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013926:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801392a:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 801392e:	4b0f      	ldr	r3, [pc, #60]	@ (801396c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8013930:	9004      	str	r0, [sp, #16]
 8013932:	881b      	ldrh	r3, [r3, #0]
 8013934:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8013938:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 801393c:	f7ff fc74 	bl	8013228 <_ZN8touchgfx3HAL3lcdEv>
 8013940:	6803      	ldr	r3, [r0, #0]
 8013942:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013944:	4798      	blx	r3
 8013946:	23ff      	movs	r3, #255	@ 0xff
 8013948:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 801394c:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 8013950:	6860      	ldr	r0, [r4, #4]
 8013952:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 8013956:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 801395a:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 801395e:	6803      	ldr	r3, [r0, #0]
 8013960:	a903      	add	r1, sp, #12
 8013962:	685b      	ldr	r3, [r3, #4]
 8013964:	4798      	blx	r3
 8013966:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 8013968:	b00d      	add	sp, #52	@ 0x34
 801396a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801396c:	2000e406 	.word	0x2000e406

08013970 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8013970:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013974:	b08c      	sub	sp, #48	@ 0x30
 8013976:	461e      	mov	r6, r3
 8013978:	466d      	mov	r5, sp
 801397a:	2300      	movs	r3, #0
 801397c:	e885 0006 	stmia.w	r5, {r1, r2}
 8013980:	9306      	str	r3, [sp, #24]
 8013982:	6803      	ldr	r3, [r0, #0]
 8013984:	f8bd 7000 	ldrh.w	r7, [sp]
 8013988:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801398a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 801398e:	2501      	movs	r5, #1
 8013990:	9503      	str	r5, [sp, #12]
 8013992:	4604      	mov	r4, r0
 8013994:	4798      	blx	r3
 8013996:	4642      	mov	r2, r8
 8013998:	4639      	mov	r1, r7
 801399a:	4603      	mov	r3, r0
 801399c:	4620      	mov	r0, r4
 801399e:	f7ff ff47 	bl	8013830 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80139a2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80139a6:	f8ad 3020 	strh.w	r3, [sp, #32]
 80139aa:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80139ae:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 80139b2:	4b11      	ldr	r3, [pc, #68]	@ (80139f8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 80139b4:	9004      	str	r0, [sp, #16]
 80139b6:	881b      	ldrh	r3, [r3, #0]
 80139b8:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 80139bc:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80139be:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 80139c2:	9607      	str	r6, [sp, #28]
 80139c4:	f7ff fc30 	bl	8013228 <_ZN8touchgfx3HAL3lcdEv>
 80139c8:	6803      	ldr	r3, [r0, #0]
 80139ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80139cc:	4798      	blx	r3
 80139ce:	23ff      	movs	r3, #255	@ 0xff
 80139d0:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 80139d4:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 80139d8:	6860      	ldr	r0, [r4, #4]
 80139da:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 80139de:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 80139e2:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 80139e6:	6803      	ldr	r3, [r0, #0]
 80139e8:	a903      	add	r1, sp, #12
 80139ea:	685b      	ldr	r3, [r3, #4]
 80139ec:	4798      	blx	r3
 80139ee:	4630      	mov	r0, r6
 80139f0:	b00c      	add	sp, #48	@ 0x30
 80139f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80139f6:	bf00      	nop
 80139f8:	2000e406 	.word	0x2000e406

080139fc <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 80139fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80139fe:	b085      	sub	sp, #20
 8013a00:	ac02      	add	r4, sp, #8
 8013a02:	e884 0006 	stmia.w	r4, {r1, r2}
 8013a06:	4605      	mov	r5, r0
 8013a08:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8013a0c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8013a10:	f7ff fde6 	bl	80135e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013a14:	463a      	mov	r2, r7
 8013a16:	4603      	mov	r3, r0
 8013a18:	4631      	mov	r1, r6
 8013a1a:	4628      	mov	r0, r5
 8013a1c:	f7ff ff08 	bl	8013830 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8013a20:	4a05      	ldr	r2, [pc, #20]	@ (8013a38 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8013a22:	682b      	ldr	r3, [r5, #0]
 8013a24:	8812      	ldrh	r2, [r2, #0]
 8013a26:	9200      	str	r2, [sp, #0]
 8013a28:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 8013a2a:	e894 0006 	ldmia.w	r4, {r1, r2}
 8013a2e:	4603      	mov	r3, r0
 8013a30:	4628      	mov	r0, r5
 8013a32:	47b0      	blx	r6
 8013a34:	b005      	add	sp, #20
 8013a36:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013a38:	2000e406 	.word	0x2000e406

08013a3c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8013a3c:	b570      	push	{r4, r5, r6, lr}
 8013a3e:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 8013a42:	4604      	mov	r4, r0
 8013a44:	b19b      	cbz	r3, 8013a6e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8013a46:	2002      	movs	r0, #2
 8013a48:	f7ee f9ac 	bl	8001da4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8013a4c:	2300      	movs	r3, #0
 8013a4e:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 8013a52:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 8013a56:	6823      	ldr	r3, [r4, #0]
 8013a58:	4620      	mov	r0, r4
 8013a5a:	f8d3 50c8 	ldr.w	r5, [r3, #200]	@ 0xc8
 8013a5e:	f7ff fdbf 	bl	80135e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013a62:	462b      	mov	r3, r5
 8013a64:	4601      	mov	r1, r0
 8013a66:	4620      	mov	r0, r4
 8013a68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013a6c:	4718      	bx	r3
 8013a6e:	bd70      	pop	{r4, r5, r6, pc}

08013a70 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 8013a70:	b570      	push	{r4, r5, r6, lr}
 8013a72:	4605      	mov	r5, r0
 8013a74:	460c      	mov	r4, r1
 8013a76:	2003      	movs	r0, #3
 8013a78:	b149      	cbz	r1, 8013a8e <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 8013a7a:	f7ee f91d 	bl	8001cb8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8013a7e:	6928      	ldr	r0, [r5, #16]
 8013a80:	b168      	cbz	r0, 8013a9e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 8013a82:	6803      	ldr	r3, [r0, #0]
 8013a84:	695b      	ldr	r3, [r3, #20]
 8013a86:	2101      	movs	r1, #1
 8013a88:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013a8c:	4718      	bx	r3
 8013a8e:	f7ee f94d 	bl	8001d2c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8013a92:	6928      	ldr	r0, [r5, #16]
 8013a94:	b118      	cbz	r0, 8013a9e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 8013a96:	6803      	ldr	r3, [r0, #0]
 8013a98:	4621      	mov	r1, r4
 8013a9a:	695b      	ldr	r3, [r3, #20]
 8013a9c:	e7f4      	b.n	8013a88 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 8013a9e:	bd70      	pop	{r4, r5, r6, pc}

08013aa0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8013aa0:	b538      	push	{r3, r4, r5, lr}
 8013aa2:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 8013aa6:	428b      	cmp	r3, r1
 8013aa8:	4604      	mov	r4, r0
 8013aaa:	460d      	mov	r5, r1
 8013aac:	d006      	beq.n	8013abc <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8013aae:	6803      	ldr	r3, [r0, #0]
 8013ab0:	b929      	cbnz	r1, 8013abe <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8013ab2:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8013ab6:	4798      	blx	r3
 8013ab8:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 8013abc:	bd38      	pop	{r3, r4, r5, pc}
 8013abe:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 8013ac2:	e7f8      	b.n	8013ab6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08013ac4 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8013ac4:	b510      	push	{r4, lr}
 8013ac6:	4b0c      	ldr	r3, [pc, #48]	@ (8013af8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x34>)
 8013ac8:	781b      	ldrb	r3, [r3, #0]
 8013aca:	4604      	mov	r4, r0
 8013acc:	b953      	cbnz	r3, 8013ae4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 8013ace:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 8013ad2:	b93b      	cbnz	r3, 8013ae4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 8013ad4:	6840      	ldr	r0, [r0, #4]
 8013ad6:	f000 f92f 	bl	8013d38 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8013ada:	b118      	cbz	r0, 8013ae4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 8013adc:	6862      	ldr	r2, [r4, #4]
 8013ade:	7a53      	ldrb	r3, [r2, #9]
 8013ae0:	2b00      	cmp	r3, #0
 8013ae2:	d0fc      	beq.n	8013ade <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1a>
 8013ae4:	f7ee fbc4 	bl	8002270 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8013ae8:	4620      	mov	r0, r4
 8013aea:	2100      	movs	r1, #0
 8013aec:	f7ff ffd8 	bl	8013aa0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8013af0:	4620      	mov	r0, r4
 8013af2:	f7ff fd75 	bl	80135e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013af6:	bd10      	pop	{r4, pc}
 8013af8:	2000e40a 	.word	0x2000e40a

08013afc <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8013afc:	b570      	push	{r4, r5, r6, lr}
 8013afe:	4604      	mov	r4, r0
 8013b00:	6803      	ldr	r3, [r0, #0]
 8013b02:	b919      	cbnz	r1, 8013b0c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8013b04:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013b06:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013b0a:	4718      	bx	r3
 8013b0c:	2200      	movs	r2, #0
 8013b0e:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 8013b12:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 8013b16:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013b18:	4798      	blx	r3
 8013b1a:	6863      	ldr	r3, [r4, #4]
 8013b1c:	2101      	movs	r1, #1
 8013b1e:	4605      	mov	r5, r0
 8013b20:	7299      	strb	r1, [r3, #10]
 8013b22:	4620      	mov	r0, r4
 8013b24:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 8013b28:	f7ff ffba 	bl	8013aa0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8013b2c:	4628      	mov	r0, r5
 8013b2e:	bd70      	pop	{r4, r5, r6, pc}

08013b30 <_ZN8touchgfx13DMA_Interface10initializeEv>:
 8013b30:	4770      	bx	lr

08013b32 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
 8013b32:	2000      	movs	r0, #0
 8013b34:	4770      	bx	lr

08013b36 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8013b36:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8013b3a:	1a13      	subs	r3, r2, r0
 8013b3c:	4258      	negs	r0, r3
 8013b3e:	4158      	adcs	r0, r3
 8013b40:	4770      	bx	lr

08013b42 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8013b42:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8013b46:	1a9b      	subs	r3, r3, r2
 8013b48:	2b00      	cmp	r3, #0
 8013b4a:	bfdc      	itt	le
 8013b4c:	6882      	ldrle	r2, [r0, #8]
 8013b4e:	189b      	addle	r3, r3, r2
 8013b50:	2b01      	cmp	r3, #1
 8013b52:	bfcc      	ite	gt
 8013b54:	2000      	movgt	r0, #0
 8013b56:	2001      	movle	r0, #1
 8013b58:	4770      	bx	lr

08013b5a <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8013b5a:	6902      	ldr	r2, [r0, #16]
 8013b5c:	6843      	ldr	r3, [r0, #4]
 8013b5e:	2024      	movs	r0, #36	@ 0x24
 8013b60:	fb00 3002 	mla	r0, r0, r2, r3
 8013b64:	4770      	bx	lr

08013b66 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8013b66:	6803      	ldr	r3, [r0, #0]
 8013b68:	691b      	ldr	r3, [r3, #16]
 8013b6a:	4718      	bx	r3

08013b6c <_ZN8touchgfx13DMA_Interface7executeEv>:
 8013b6c:	b570      	push	{r4, r5, r6, lr}
 8013b6e:	2301      	movs	r3, #1
 8013b70:	7203      	strb	r3, [r0, #8]
 8013b72:	4604      	mov	r4, r0
 8013b74:	6840      	ldr	r0, [r0, #4]
 8013b76:	6803      	ldr	r3, [r0, #0]
 8013b78:	699b      	ldr	r3, [r3, #24]
 8013b7a:	4798      	blx	r3
 8013b7c:	6803      	ldr	r3, [r0, #0]
 8013b7e:	2b40      	cmp	r3, #64	@ 0x40
 8013b80:	4605      	mov	r5, r0
 8013b82:	d00c      	beq.n	8013b9e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8013b84:	d810      	bhi.n	8013ba8 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8013b86:	2b04      	cmp	r3, #4
 8013b88:	d01d      	beq.n	8013bc6 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8013b8a:	d804      	bhi.n	8013b96 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8013b8c:	2b01      	cmp	r3, #1
 8013b8e:	d006      	beq.n	8013b9e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8013b90:	2b02      	cmp	r3, #2
 8013b92:	d02c      	beq.n	8013bee <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8013b94:	bd70      	pop	{r4, r5, r6, pc}
 8013b96:	2b08      	cmp	r3, #8
 8013b98:	d01d      	beq.n	8013bd6 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8013b9a:	2b20      	cmp	r3, #32
 8013b9c:	d1fa      	bne.n	8013b94 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8013b9e:	6823      	ldr	r3, [r4, #0]
 8013ba0:	4620      	mov	r0, r4
 8013ba2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8013ba4:	4798      	blx	r3
 8013ba6:	e013      	b.n	8013bd0 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8013ba8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8013bac:	d0f7      	beq.n	8013b9e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8013bae:	d804      	bhi.n	8013bba <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8013bb0:	2b80      	cmp	r3, #128	@ 0x80
 8013bb2:	d0f4      	beq.n	8013b9e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8013bb4:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8013bb8:	e7f0      	b.n	8013b9c <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8013bba:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8013bbe:	d0ee      	beq.n	8013b9e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8013bc0:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8013bc4:	e7e5      	b.n	8013b92 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8013bc6:	6823      	ldr	r3, [r4, #0]
 8013bc8:	7f01      	ldrb	r1, [r0, #28]
 8013bca:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013bcc:	4620      	mov	r0, r4
 8013bce:	4798      	blx	r3
 8013bd0:	6823      	ldr	r3, [r4, #0]
 8013bd2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8013bd4:	e006      	b.n	8013be4 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8013bd6:	6823      	ldr	r3, [r4, #0]
 8013bd8:	7f01      	ldrb	r1, [r0, #28]
 8013bda:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013bdc:	4620      	mov	r0, r4
 8013bde:	4798      	blx	r3
 8013be0:	6823      	ldr	r3, [r4, #0]
 8013be2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8013be4:	4629      	mov	r1, r5
 8013be6:	4620      	mov	r0, r4
 8013be8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013bec:	4718      	bx	r3
 8013bee:	6823      	ldr	r3, [r4, #0]
 8013bf0:	4620      	mov	r0, r4
 8013bf2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8013bf4:	4798      	blx	r3
 8013bf6:	e7f3      	b.n	8013be0 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08013bf8 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8013bf8:	4770      	bx	lr

08013bfa <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8013bfa:	4770      	bx	lr

08013bfc <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8013bfc:	4770      	bx	lr

08013bfe <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8013bfe:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8013c02:	1ad2      	subs	r2, r2, r3
 8013c04:	2a00      	cmp	r2, #0
 8013c06:	b510      	push	{r4, lr}
 8013c08:	bfdc      	itt	le
 8013c0a:	6884      	ldrle	r4, [r0, #8]
 8013c0c:	1912      	addle	r2, r2, r4
 8013c0e:	2a01      	cmp	r2, #1
 8013c10:	dd16      	ble.n	8013c40 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8013c12:	6842      	ldr	r2, [r0, #4]
 8013c14:	2424      	movs	r4, #36	@ 0x24
 8013c16:	fb04 2303 	mla	r3, r4, r3, r2
 8013c1a:	f101 0220 	add.w	r2, r1, #32
 8013c1e:	f851 4b04 	ldr.w	r4, [r1], #4
 8013c22:	f843 4b04 	str.w	r4, [r3], #4
 8013c26:	4291      	cmp	r1, r2
 8013c28:	d1f9      	bne.n	8013c1e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8013c2a:	780a      	ldrb	r2, [r1, #0]
 8013c2c:	701a      	strb	r2, [r3, #0]
 8013c2e:	68c3      	ldr	r3, [r0, #12]
 8013c30:	6882      	ldr	r2, [r0, #8]
 8013c32:	f3bf 8f5b 	dmb	ish
 8013c36:	3301      	adds	r3, #1
 8013c38:	429a      	cmp	r2, r3
 8013c3a:	bfd8      	it	le
 8013c3c:	1a9b      	suble	r3, r3, r2
 8013c3e:	60c3      	str	r3, [r0, #12]
 8013c40:	bd10      	pop	{r4, pc}

08013c42 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8013c42:	6903      	ldr	r3, [r0, #16]
 8013c44:	6882      	ldr	r2, [r0, #8]
 8013c46:	f3bf 8f5b 	dmb	ish
 8013c4a:	3301      	adds	r3, #1
 8013c4c:	429a      	cmp	r2, r3
 8013c4e:	bfd8      	it	le
 8013c50:	1a9b      	suble	r3, r3, r2
 8013c52:	6103      	str	r3, [r0, #16]
 8013c54:	4770      	bx	lr
	...

08013c58 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8013c58:	b570      	push	{r4, r5, r6, lr}
 8013c5a:	4604      	mov	r4, r0
 8013c5c:	460e      	mov	r6, r1
 8013c5e:	6860      	ldr	r0, [r4, #4]
 8013c60:	6803      	ldr	r3, [r0, #0]
 8013c62:	685b      	ldr	r3, [r3, #4]
 8013c64:	4798      	blx	r3
 8013c66:	2800      	cmp	r0, #0
 8013c68:	d1f9      	bne.n	8013c5e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8013c6a:	4d0d      	ldr	r5, [pc, #52]	@ (8013ca0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8013c6c:	6828      	ldr	r0, [r5, #0]
 8013c6e:	6803      	ldr	r3, [r0, #0]
 8013c70:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8013c74:	4798      	blx	r3
 8013c76:	f7ee fb0d 	bl	8002294 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8013c7a:	6828      	ldr	r0, [r5, #0]
 8013c7c:	2101      	movs	r1, #1
 8013c7e:	f7ff ff0f 	bl	8013aa0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8013c82:	6860      	ldr	r0, [r4, #4]
 8013c84:	6803      	ldr	r3, [r0, #0]
 8013c86:	4631      	mov	r1, r6
 8013c88:	689b      	ldr	r3, [r3, #8]
 8013c8a:	4798      	blx	r3
 8013c8c:	6823      	ldr	r3, [r4, #0]
 8013c8e:	4620      	mov	r0, r4
 8013c90:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013c92:	4798      	blx	r3
 8013c94:	6828      	ldr	r0, [r5, #0]
 8013c96:	6803      	ldr	r3, [r0, #0]
 8013c98:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013c9c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8013c9e:	4718      	bx	r3
 8013ca0:	2000e40c 	.word	0x2000e40c

08013ca4 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8013ca4:	b508      	push	{r3, lr}
 8013ca6:	f7ee fae3 	bl	8002270 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8013caa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8013cae:	f7ee bae9 	b.w	8002284 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08013cb2 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8013cb2:	b510      	push	{r4, lr}
 8013cb4:	2114      	movs	r1, #20
 8013cb6:	4604      	mov	r4, r0
 8013cb8:	f019 fdf9 	bl	802d8ae <_ZdlPvj>
 8013cbc:	4620      	mov	r0, r4
 8013cbe:	bd10      	pop	{r4, pc}

08013cc0 <_ZN8touchgfx13DMA_Interface5startEv>:
 8013cc0:	b510      	push	{r4, lr}
 8013cc2:	4604      	mov	r4, r0
 8013cc4:	6840      	ldr	r0, [r0, #4]
 8013cc6:	6803      	ldr	r3, [r0, #0]
 8013cc8:	681b      	ldr	r3, [r3, #0]
 8013cca:	4798      	blx	r3
 8013ccc:	b948      	cbnz	r0, 8013ce2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8013cce:	7a63      	ldrb	r3, [r4, #9]
 8013cd0:	b13b      	cbz	r3, 8013ce2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8013cd2:	7a23      	ldrb	r3, [r4, #8]
 8013cd4:	b92b      	cbnz	r3, 8013ce2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8013cd6:	6823      	ldr	r3, [r4, #0]
 8013cd8:	4620      	mov	r0, r4
 8013cda:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8013cdc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013ce0:	4718      	bx	r3
 8013ce2:	bd10      	pop	{r4, pc}

08013ce4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8013ce4:	b570      	push	{r4, r5, r6, lr}
 8013ce6:	4604      	mov	r4, r0
 8013ce8:	6840      	ldr	r0, [r0, #4]
 8013cea:	6803      	ldr	r3, [r0, #0]
 8013cec:	681b      	ldr	r3, [r3, #0]
 8013cee:	4798      	blx	r3
 8013cf0:	4605      	mov	r5, r0
 8013cf2:	b930      	cbnz	r0, 8013d02 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8013cf4:	7a23      	ldrb	r3, [r4, #8]
 8013cf6:	b123      	cbz	r3, 8013d02 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8013cf8:	6860      	ldr	r0, [r4, #4]
 8013cfa:	6803      	ldr	r3, [r0, #0]
 8013cfc:	695b      	ldr	r3, [r3, #20]
 8013cfe:	4798      	blx	r3
 8013d00:	7225      	strb	r5, [r4, #8]
 8013d02:	6860      	ldr	r0, [r4, #4]
 8013d04:	6803      	ldr	r3, [r0, #0]
 8013d06:	681b      	ldr	r3, [r3, #0]
 8013d08:	4798      	blx	r3
 8013d0a:	b928      	cbnz	r0, 8013d18 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8013d0c:	6823      	ldr	r3, [r4, #0]
 8013d0e:	4620      	mov	r0, r4
 8013d10:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8013d12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013d16:	4718      	bx	r3
 8013d18:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013d1c:	f7ee bac4 	b.w	80022a8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08013d20 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8013d20:	b510      	push	{r4, lr}
 8013d22:	4c04      	ldr	r4, [pc, #16]	@ (8013d34 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8013d24:	6082      	str	r2, [r0, #8]
 8013d26:	2200      	movs	r2, #0
 8013d28:	e9c0 4100 	strd	r4, r1, [r0]
 8013d2c:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8013d30:	bd10      	pop	{r4, pc}
 8013d32:	bf00      	nop
 8013d34:	080323c4 	.word	0x080323c4

08013d38 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8013d38:	6840      	ldr	r0, [r0, #4]
 8013d3a:	6803      	ldr	r3, [r0, #0]
 8013d3c:	681b      	ldr	r3, [r3, #0]
 8013d3e:	4718      	bx	r3

08013d40 <_ZN8touchgfxL10applyNoiseEiihhh>:
 8013d40:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
 8013d44:	4f20      	ldr	r7, [pc, #128]	@ (8013dc8 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
 8013d46:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8013d4a:	fb80 0101 	smull	r0, r1, r0, r1
 8013d4e:	fba0 bc07 	umull	fp, ip, r0, r7
 8013d52:	fb07 cc01 	mla	ip, r7, r1, ip
 8013d56:	fb0b f70c 	mul.w	r7, fp, ip
 8013d5a:	fbab 010b 	umull	r0, r1, fp, fp
 8013d5e:	461c      	mov	r4, r3
 8013d60:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 8013d64:	fb00 f30c 	mul.w	r3, r0, ip
 8013d68:	fb0b 3301 	mla	r3, fp, r1, r3
 8013d6c:	fba0 010b 	umull	r0, r1, r0, fp
 8013d70:	4616      	mov	r6, r2
 8013d72:	4419      	add	r1, r3
 8013d74:	a312      	add	r3, pc, #72	@ (adr r3, 8013dc0 <_ZN8touchgfxL10applyNoiseEiihhh+0x80>)
 8013d76:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013d7a:	f7ec fa99 	bl	80002b0 <__aeabi_ldivmod>
 8013d7e:	2ef7      	cmp	r6, #247	@ 0xf7
 8013d80:	b290      	uxth	r0, r2
 8013d82:	bf9e      	ittt	ls
 8013d84:	f002 0207 	andls.w	r2, r2, #7
 8013d88:	18b6      	addls	r6, r6, r2
 8013d8a:	b2f6      	uxtbls	r6, r6
 8013d8c:	2cfb      	cmp	r4, #251	@ 0xfb
 8013d8e:	bf9e      	ittt	ls
 8013d90:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
 8013d94:	18e4      	addls	r4, r4, r3
 8013d96:	b2e4      	uxtbls	r4, r4
 8013d98:	2df7      	cmp	r5, #247	@ 0xf7
 8013d9a:	bf9c      	itt	ls
 8013d9c:	f3c0 1042 	ubfxls	r0, r0, #5, #3
 8013da0:	182d      	addls	r5, r5, r0
 8013da2:	480a      	ldr	r0, [pc, #40]	@ (8013dcc <_ZN8touchgfxL10applyNoiseEiihhh+0x8c>)
 8013da4:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8013da8:	ea00 2006 	and.w	r0, r0, r6, lsl #8
 8013dac:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8013db0:	bf98      	it	ls
 8013db2:	b2ed      	uxtbls	r5, r5
 8013db4:	4304      	orrs	r4, r0
 8013db6:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
 8013dba:	b280      	uxth	r0, r0
 8013dbc:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
 8013dc0:	797a8d77 	.word	0x797a8d77
 8013dc4:	00000000 	.word	0x00000000
 8013dc8:	00ec4ba7 	.word	0x00ec4ba7
 8013dcc:	fffff800 	.word	0xfffff800

08013dd0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
 8013dd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013dd4:	ed2d 8b02 	vpush	{d8}
 8013dd8:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8013ddc:	b087      	sub	sp, #28
 8013dde:	7c41      	ldrb	r1, [r0, #17]
 8013de0:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
 8013de4:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 8013de8:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
 8013dec:	4605      	mov	r5, r0
 8013dee:	2900      	cmp	r1, #0
 8013df0:	f000 809a 	beq.w	8013f28 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
 8013df4:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 8013df8:	ed90 7a08 	vldr	s14, [r0, #32]
 8013dfc:	68c0      	ldr	r0, [r0, #12]
 8013dfe:	454a      	cmp	r2, r9
 8013e00:	db25      	blt.n	8013e4e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
 8013e02:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8013e06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013e0a:	f640 72fc 	movw	r2, #4092	@ 0xffc
 8013e0e:	bfc8      	it	gt
 8013e10:	2200      	movgt	r2, #0
 8013e12:	5882      	ldr	r2, [r0, r2]
 8013e14:	2100      	movs	r1, #0
 8013e16:	7c2d      	ldrb	r5, [r5, #16]
 8013e18:	ea4f 2812 	mov.w	r8, r2, lsr #8
 8013e1c:	0950      	lsrs	r0, r2, #5
 8013e1e:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
 8013e22:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8013e26:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
 8013e2a:	eb04 0746 	add.w	r7, r4, r6, lsl #1
 8013e2e:	2d00      	cmp	r5, #0
 8013e30:	d044      	beq.n	8013ebc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 8013e32:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8013e36:	d141      	bne.n	8013ebc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 8013e38:	bb61      	cbnz	r1, 8013e94 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
 8013e3a:	ea4e 0000 	orr.w	r0, lr, r0
 8013e3e:	ea4c 0500 	orr.w	r5, ip, r0
 8013e42:	42bc      	cmp	r4, r7
 8013e44:	f080 8217 	bcs.w	8014276 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 8013e48:	f824 5b02 	strh.w	r5, [r4], #2
 8013e4c:	e7f9      	b.n	8013e42 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
 8013e4e:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 8013e52:	454f      	cmp	r7, r9
 8013e54:	dc08      	bgt.n	8013e68 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
 8013e56:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8013e5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013e5e:	f640 72fc 	movw	r2, #4092	@ 0xffc
 8013e62:	bfd8      	it	le
 8013e64:	2200      	movle	r2, #0
 8013e66:	e7d4      	b.n	8013e12 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
 8013e68:	eba9 0202 	sub.w	r2, r9, r2
 8013e6c:	ee07 2a90 	vmov	s15, r2
 8013e70:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013e74:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8013e78:	ee67 7a87 	vmul.f32	s15, s15, s14
 8013e7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013e80:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8013e84:	ee17 2a90 	vmov	r2, s15
 8013e88:	bfd8      	it	le
 8013e8a:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
 8013e8e:	0092      	lsls	r2, r2, #2
 8013e90:	5882      	ldr	r2, [r0, r2]
 8013e92:	e7c0      	b.n	8013e16 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
 8013e94:	b2d5      	uxtb	r5, r2
 8013e96:	fa5f f888 	uxtb.w	r8, r8
 8013e9a:	f3c2 4a07 	ubfx	sl, r2, #16, #8
 8013e9e:	461e      	mov	r6, r3
 8013ea0:	42bc      	cmp	r4, r7
 8013ea2:	f080 81e8 	bcs.w	8014276 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 8013ea6:	4630      	mov	r0, r6
 8013ea8:	9500      	str	r5, [sp, #0]
 8013eaa:	4643      	mov	r3, r8
 8013eac:	4652      	mov	r2, sl
 8013eae:	4649      	mov	r1, r9
 8013eb0:	f7ff ff46 	bl	8013d40 <_ZN8touchgfxL10applyNoiseEiihhh>
 8013eb4:	3601      	adds	r6, #1
 8013eb6:	f824 0b02 	strh.w	r0, [r4], #2
 8013eba:	e7f1      	b.n	8013ea0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
 8013ebc:	0e12      	lsrs	r2, r2, #24
 8013ebe:	fb02 f20a 	mul.w	r2, r2, sl
 8013ec2:	1c53      	adds	r3, r2, #1
 8013ec4:	eb03 2222 	add.w	r2, r3, r2, asr #8
 8013ec8:	1212      	asrs	r2, r2, #8
 8013eca:	fb02 f50c 	mul.w	r5, r2, ip
 8013ece:	fb02 f10e 	mul.w	r1, r2, lr
 8013ed2:	4350      	muls	r0, r2
 8013ed4:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 8014288 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 8013ed8:	43d2      	mvns	r2, r2
 8013eda:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 8013ede:	26ff      	movs	r6, #255	@ 0xff
 8013ee0:	42bc      	cmp	r4, r7
 8013ee2:	f080 81c8 	bcs.w	8014276 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 8013ee6:	f8b4 e000 	ldrh.w	lr, [r4]
 8013eea:	ea0e 030c 	and.w	r3, lr, ip
 8013eee:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 8013ef2:	fb02 1303 	mla	r3, r2, r3, r1
 8013ef6:	fb02 0808 	mla	r8, r2, r8, r0
 8013efa:	fb93 f3f6 	sdiv	r3, r3, r6
 8013efe:	fb98 f8f6 	sdiv	r8, r8, r6
 8013f02:	ea03 030c 	and.w	r3, r3, ip
 8013f06:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8013f0a:	f00e 0e1f 	and.w	lr, lr, #31
 8013f0e:	ea43 0308 	orr.w	r3, r3, r8
 8013f12:	fb02 5e0e 	mla	lr, r2, lr, r5
 8013f16:	fb9e fef6 	sdiv	lr, lr, r6
 8013f1a:	f00e 0e1f 	and.w	lr, lr, #31
 8013f1e:	ea43 030e 	orr.w	r3, r3, lr
 8013f22:	f824 3b02 	strh.w	r3, [r4], #2
 8013f26:	e7db      	b.n	8013ee0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
 8013f28:	7c82      	ldrb	r2, [r0, #18]
 8013f2a:	2a00      	cmp	r2, #0
 8013f2c:	d04f      	beq.n	8013fce <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
 8013f2e:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 8013f32:	ee07 2a90 	vmov	s15, r2
 8013f36:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013f3a:	ee07 3a10 	vmov	s14, r3
 8013f3e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8013f42:	461f      	mov	r7, r3
 8013f44:	eef4 6ae7 	vcmpe.f32	s13, s15
 8013f48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013f4c:	f200 8095 	bhi.w	801407a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
 8013f50:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8013f54:	ee37 7a87 	vadd.f32	s14, s15, s14
 8013f58:	f640 71fc 	movw	r1, #4092	@ 0xffc
 8013f5c:	ee37 7a66 	vsub.f32	s14, s14, s13
 8013f60:	ee06 6a90 	vmov	s13, r6
 8013f64:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8013f68:	68ea      	ldr	r2, [r5, #12]
 8013f6a:	f895 c010 	ldrb.w	ip, [r5, #16]
 8013f6e:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8013f72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013f76:	bf4a      	itet	mi
 8013f78:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
 8013f7c:	9602      	strpl	r6, [sp, #8]
 8013f7e:	ed8d 7a02 	vstrmi	s14, [sp, #8]
 8013f82:	ed95 7a08 	vldr	s14, [r5, #32]
 8013f86:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8013f8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013f8e:	bfc8      	it	gt
 8013f90:	2100      	movgt	r1, #0
 8013f92:	5852      	ldr	r2, [r2, r1]
 8013f94:	9902      	ldr	r1, [sp, #8]
 8013f96:	ea4f 2b12 	mov.w	fp, r2, lsr #8
 8013f9a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8013f9e:	0950      	lsrs	r0, r2, #5
 8013fa0:	9103      	str	r1, [sp, #12]
 8013fa2:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 8013fa6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8013faa:	f3c2 01c4 	ubfx	r1, r2, #3, #5
 8013fae:	f1bc 0f00 	cmp.w	ip, #0
 8013fb2:	d024      	beq.n	8013ffe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 8013fb4:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8013fb8:	d121      	bne.n	8013ffe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 8013fba:	ea4b 0b00 	orr.w	fp, fp, r0
 8013fbe:	ea41 010b 	orr.w	r1, r1, fp
 8013fc2:	9a03      	ldr	r2, [sp, #12]
 8013fc4:	4294      	cmp	r4, r2
 8013fc6:	d255      	bcs.n	8014074 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 8013fc8:	f824 1b02 	strh.w	r1, [r4], #2
 8013fcc:	e7f9      	b.n	8013fc2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
 8013fce:	ee07 9a10 	vmov	s14, r9
 8013fd2:	edd0 7a06 	vldr	s15, [r0, #24]
 8013fd6:	edd0 6a05 	vldr	s13, [r0, #20]
 8013fda:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013fde:	ee37 7a67 	vsub.f32	s14, s14, s15
 8013fe2:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8013fe6:	ed90 7a08 	vldr	s14, [r0, #32]
 8013fea:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8013fee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013ff2:	bf44      	itt	mi
 8013ff4:	ed90 7a07 	vldrmi	s14, [r0, #28]
 8013ff8:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
 8013ffc:	e79d      	b.n	8013f3a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
 8013ffe:	0e12      	lsrs	r2, r2, #24
 8014000:	fb02 f20a 	mul.w	r2, r2, sl
 8014004:	f102 0c01 	add.w	ip, r2, #1
 8014008:	eb0c 2222 	add.w	r2, ip, r2, asr #8
 801400c:	1212      	asrs	r2, r2, #8
 801400e:	4350      	muls	r0, r2
 8014010:	4351      	muls	r1, r2
 8014012:	fb02 fb0b 	mul.w	fp, r2, fp
 8014016:	f8df 8270 	ldr.w	r8, [pc, #624]	@ 8014288 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 801401a:	9004      	str	r0, [sp, #16]
 801401c:	43d2      	mvns	r2, r2
 801401e:	9105      	str	r1, [sp, #20]
 8014020:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 8014024:	f04f 0eff 	mov.w	lr, #255	@ 0xff
 8014028:	9903      	ldr	r1, [sp, #12]
 801402a:	428c      	cmp	r4, r1
 801402c:	d222      	bcs.n	8014074 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 801402e:	8820      	ldrh	r0, [r4, #0]
 8014030:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
 8014034:	460f      	mov	r7, r1
 8014036:	9904      	ldr	r1, [sp, #16]
 8014038:	ea00 0c08 	and.w	ip, r0, r8
 801403c:	fb02 bc0c 	mla	ip, r2, ip, fp
 8014040:	fb02 1107 	mla	r1, r2, r7, r1
 8014044:	fb9c fcfe 	sdiv	ip, ip, lr
 8014048:	fb91 f1fe 	sdiv	r1, r1, lr
 801404c:	ea0c 0c08 	and.w	ip, ip, r8
 8014050:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8014054:	ea4c 0101 	orr.w	r1, ip, r1
 8014058:	f000 0c1f 	and.w	ip, r0, #31
 801405c:	9805      	ldr	r0, [sp, #20]
 801405e:	fb02 0c0c 	mla	ip, r2, ip, r0
 8014062:	fb9c fcfe 	sdiv	ip, ip, lr
 8014066:	f00c 0c1f 	and.w	ip, ip, #31
 801406a:	ea41 010c 	orr.w	r1, r1, ip
 801406e:	f824 1b02 	strh.w	r1, [r4], #2
 8014072:	e7d9      	b.n	8014028 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
 8014074:	9a02      	ldr	r2, [sp, #8]
 8014076:	441a      	add	r2, r3
 8014078:	4617      	mov	r7, r2
 801407a:	441e      	add	r6, r3
 801407c:	b236      	sxth	r6, r6
 801407e:	42be      	cmp	r6, r7
 8014080:	f340 80f9 	ble.w	8014276 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 8014084:	ed95 7a07 	vldr	s14, [r5, #28]
 8014088:	ee06 7a90 	vmov	s13, r7
 801408c:	ee37 7a87 	vadd.f32	s14, s15, s14
 8014090:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8014094:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8014098:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801409c:	f340 80b5 	ble.w	801420a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43a>
 80140a0:	ee06 6a10 	vmov	s12, r6
 80140a4:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 80140a8:	ed9f 8a75 	vldr	s16, [pc, #468]	@ 8014280 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
 80140ac:	7c2b      	ldrb	r3, [r5, #16]
 80140ae:	eeb4 7ac6 	vcmpe.f32	s14, s12
 80140b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80140b6:	bfd8      	it	le
 80140b8:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
 80140bc:	ed9f 6a71 	vldr	s12, [pc, #452]	@ 8014284 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
 80140c0:	bfd8      	it	le
 80140c2:	ee17 8a10 	vmovle	r8, s14
 80140c6:	ed95 7a08 	vldr	s14, [r5, #32]
 80140ca:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80140ce:	bfc8      	it	gt
 80140d0:	46b0      	movgt	r8, r6
 80140d2:	ee76 7ae7 	vsub.f32	s15, s13, s15
 80140d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80140da:	eba8 0707 	sub.w	r7, r8, r7
 80140de:	bfd8      	it	le
 80140e0:	eeb0 8a46 	vmovle.f32	s16, s12
 80140e4:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 80140e8:	eea7 8a27 	vfma.f32	s16, s14, s15
 80140ec:	b1db      	cbz	r3, 8014126 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 80140ee:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80140f2:	d118      	bne.n	8014126 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 80140f4:	42bc      	cmp	r4, r7
 80140f6:	d262      	bcs.n	80141be <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 80140f8:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 80140fc:	68eb      	ldr	r3, [r5, #12]
 80140fe:	ee17 0a90 	vmov	r0, s15
 8014102:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
 8014106:	b2d3      	uxtb	r3, r2
 8014108:	9300      	str	r3, [sp, #0]
 801410a:	4649      	mov	r1, r9
 801410c:	f3c2 2307 	ubfx	r3, r2, #8, #8
 8014110:	f3c2 4207 	ubfx	r2, r2, #16, #8
 8014114:	f7ff fe14 	bl	8013d40 <_ZN8touchgfxL10applyNoiseEiihhh>
 8014118:	f824 0b02 	strh.w	r0, [r4], #2
 801411c:	edd5 7a08 	vldr	s15, [r5, #32]
 8014120:	ee38 8a27 	vadd.f32	s16, s16, s15
 8014124:	e7e6      	b.n	80140f4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x324>
 8014126:	f8df b160 	ldr.w	fp, [pc, #352]	@ 8014288 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 801412a:	f04f 09ff 	mov.w	r9, #255	@ 0xff
 801412e:	42bc      	cmp	r4, r7
 8014130:	d245      	bcs.n	80141be <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 8014132:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8014136:	68eb      	ldr	r3, [r5, #12]
 8014138:	f8b4 e000 	ldrh.w	lr, [r4]
 801413c:	ee17 2a90 	vmov	r2, s15
 8014140:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8014144:	0e13      	lsrs	r3, r2, #24
 8014146:	fb03 f30a 	mul.w	r3, r3, sl
 801414a:	1c58      	adds	r0, r3, #1
 801414c:	eb00 2023 	add.w	r0, r0, r3, asr #8
 8014150:	1200      	asrs	r0, r0, #8
 8014152:	ea6f 0c00 	mvn.w	ip, r0
 8014156:	fa5f fc8c 	uxtb.w	ip, ip
 801415a:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
 801415e:	ea0e 030b 	and.w	r3, lr, fp
 8014162:	fb0c f303 	mul.w	r3, ip, r3
 8014166:	b289      	uxth	r1, r1
 8014168:	fb00 3101 	mla	r1, r0, r1, r3
 801416c:	fb91 f1f9 	sdiv	r1, r1, r9
 8014170:	ea01 030b 	and.w	r3, r1, fp
 8014174:	9302      	str	r3, [sp, #8]
 8014176:	0953      	lsrs	r3, r2, #5
 8014178:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801417c:	4619      	mov	r1, r3
 801417e:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
 8014182:	fb0c f303 	mul.w	r3, ip, r3
 8014186:	fb00 3301 	mla	r3, r0, r1, r3
 801418a:	f00e 0e1f 	and.w	lr, lr, #31
 801418e:	9902      	ldr	r1, [sp, #8]
 8014190:	fb93 f3f9 	sdiv	r3, r3, r9
 8014194:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8014198:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801419c:	fb0c fc0e 	mul.w	ip, ip, lr
 80141a0:	4319      	orrs	r1, r3
 80141a2:	fb00 c002 	mla	r0, r0, r2, ip
 80141a6:	fb90 f0f9 	sdiv	r0, r0, r9
 80141aa:	f000 001f 	and.w	r0, r0, #31
 80141ae:	4301      	orrs	r1, r0
 80141b0:	f824 1b02 	strh.w	r1, [r4], #2
 80141b4:	edd5 7a08 	vldr	s15, [r5, #32]
 80141b8:	ee38 8a27 	vadd.f32	s16, s16, s15
 80141bc:	e7b7      	b.n	801412e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x35e>
 80141be:	4546      	cmp	r6, r8
 80141c0:	dd59      	ble.n	8014276 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 80141c2:	edd5 7a08 	vldr	s15, [r5, #32]
 80141c6:	68ea      	ldr	r2, [r5, #12]
 80141c8:	7c29      	ldrb	r1, [r5, #16]
 80141ca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80141ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80141d2:	f640 73fc 	movw	r3, #4092	@ 0xffc
 80141d6:	bfd8      	it	le
 80141d8:	2300      	movle	r3, #0
 80141da:	eba6 0608 	sub.w	r6, r6, r8
 80141de:	58d2      	ldr	r2, [r2, r3]
 80141e0:	0a10      	lsrs	r0, r2, #8
 80141e2:	0953      	lsrs	r3, r2, #5
 80141e4:	eb04 0646 	add.w	r6, r4, r6, lsl #1
 80141e8:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 80141ec:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80141f0:	f3c2 07c4 	ubfx	r7, r2, #3, #5
 80141f4:	b159      	cbz	r1, 801420e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 80141f6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80141fa:	d108      	bne.n	801420e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 80141fc:	4318      	orrs	r0, r3
 80141fe:	4338      	orrs	r0, r7
 8014200:	42b4      	cmp	r4, r6
 8014202:	d238      	bcs.n	8014276 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 8014204:	f824 0b02 	strh.w	r0, [r4], #2
 8014208:	e7fa      	b.n	8014200 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x430>
 801420a:	46b8      	mov	r8, r7
 801420c:	e7d9      	b.n	80141c2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3f2>
 801420e:	0e12      	lsrs	r2, r2, #24
 8014210:	fb02 f10a 	mul.w	r1, r2, sl
 8014214:	1c4a      	adds	r2, r1, #1
 8014216:	eb02 2221 	add.w	r2, r2, r1, asr #8
 801421a:	1212      	asrs	r2, r2, #8
 801421c:	fb02 f507 	mul.w	r5, r2, r7
 8014220:	4350      	muls	r0, r2
 8014222:	4353      	muls	r3, r2
 8014224:	f8df c060 	ldr.w	ip, [pc, #96]	@ 8014288 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 8014228:	43d2      	mvns	r2, r2
 801422a:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 801422e:	27ff      	movs	r7, #255	@ 0xff
 8014230:	42b4      	cmp	r4, r6
 8014232:	d220      	bcs.n	8014276 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 8014234:	f8b4 e000 	ldrh.w	lr, [r4]
 8014238:	ea0e 010c 	and.w	r1, lr, ip
 801423c:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 8014240:	fb02 0101 	mla	r1, r2, r1, r0
 8014244:	fb02 3808 	mla	r8, r2, r8, r3
 8014248:	fb91 f1f7 	sdiv	r1, r1, r7
 801424c:	fb98 f8f7 	sdiv	r8, r8, r7
 8014250:	ea01 010c 	and.w	r1, r1, ip
 8014254:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8014258:	f00e 0e1f 	and.w	lr, lr, #31
 801425c:	ea41 0108 	orr.w	r1, r1, r8
 8014260:	fb02 5e0e 	mla	lr, r2, lr, r5
 8014264:	fb9e fef7 	sdiv	lr, lr, r7
 8014268:	f00e 0e1f 	and.w	lr, lr, #31
 801426c:	ea41 010e 	orr.w	r1, r1, lr
 8014270:	f824 1b02 	strh.w	r1, [r4], #2
 8014274:	e7dc      	b.n	8014230 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x460>
 8014276:	b007      	add	sp, #28
 8014278:	ecbd 8b02 	vpop	{d8}
 801427c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014280:	00000000 	.word	0x00000000
 8014284:	447ffffe 	.word	0x447ffffe
 8014288:	fffff800 	.word	0xfffff800

0801428c <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
 801428c:	4770      	bx	lr

0801428e <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
 801428e:	4770      	bx	lr

08014290 <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
 8014290:	b510      	push	{r4, lr}
 8014292:	2124      	movs	r1, #36	@ 0x24
 8014294:	4604      	mov	r4, r0
 8014296:	f019 fb0a 	bl	802d8ae <_ZdlPvj>
 801429a:	4620      	mov	r0, r4
 801429c:	bd10      	pop	{r4, pc}
	...

080142a0 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 80142a0:	b508      	push	{r3, lr}
 80142a2:	4b05      	ldr	r3, [pc, #20]	@ (80142b8 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 80142a4:	6818      	ldr	r0, [r3, #0]
 80142a6:	6803      	ldr	r3, [r0, #0]
 80142a8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 80142ac:	4798      	blx	r3
 80142ae:	1e43      	subs	r3, r0, #1
 80142b0:	4258      	negs	r0, r3
 80142b2:	4158      	adcs	r0, r3
 80142b4:	bd08      	pop	{r3, pc}
 80142b6:	bf00      	nop
 80142b8:	2000e40c 	.word	0x2000e40c

080142bc <_ZN8touchgfx13PainterRGB565D1Ev>:
 80142bc:	4770      	bx	lr

080142be <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 80142be:	3808      	subs	r0, #8
 80142c0:	4770      	bx	lr

080142c2 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 80142c2:	b430      	push	{r4, r5}
 80142c4:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 80142c8:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 80142cc:	8a02      	ldrh	r2, [r0, #16]
 80142ce:	9202      	str	r2, [sp, #8]
 80142d0:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80142d4:	68c2      	ldr	r2, [r0, #12]
 80142d6:	4629      	mov	r1, r5
 80142d8:	4620      	mov	r0, r4
 80142da:	bc30      	pop	{r4, r5}
 80142dc:	f7ee ba18 	b.w	8002710 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

080142e0 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 80142e0:	f7ee ba08 	b.w	80026f4 <_ZN8touchgfx5paint8tearDownEv>

080142e4 <_ZN8touchgfx13PainterRGB565D0Ev>:
 80142e4:	b510      	push	{r4, lr}
 80142e6:	2114      	movs	r1, #20
 80142e8:	4604      	mov	r4, r0
 80142ea:	f019 fae0 	bl	802d8ae <_ZdlPvj>
 80142ee:	4620      	mov	r0, r4
 80142f0:	bd10      	pop	{r4, pc}

080142f2 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 80142f2:	f1a0 0008 	sub.w	r0, r0, #8
 80142f6:	e7f5      	b.n	80142e4 <_ZN8touchgfx13PainterRGB565D0Ev>

080142f8 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
 80142f8:	2300      	movs	r3, #0
 80142fa:	84c3      	strh	r3, [r0, #38]	@ 0x26
 80142fc:	8503      	strh	r3, [r0, #40]	@ 0x28
 80142fe:	8543      	strh	r3, [r0, #42]	@ 0x2a
 8014300:	8583      	strh	r3, [r0, #44]	@ 0x2c
 8014302:	6980      	ldr	r0, [r0, #24]
 8014304:	b110      	cbz	r0, 801430c <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
 8014306:	6803      	ldr	r3, [r0, #0]
 8014308:	691b      	ldr	r3, [r3, #16]
 801430a:	4718      	bx	r3
 801430c:	4770      	bx	lr

0801430e <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
 801430e:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
 8014312:	4770      	bx	lr

08014314 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
 8014314:	b538      	push	{r3, r4, r5, lr}
 8014316:	0e0b      	lsrs	r3, r1, #24
 8014318:	7783      	strb	r3, [r0, #30]
 801431a:	6803      	ldr	r3, [r0, #0]
 801431c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801431e:	4604      	mov	r4, r0
 8014320:	460d      	mov	r5, r1
 8014322:	4798      	blx	r3
 8014324:	6803      	ldr	r3, [r0, #0]
 8014326:	4629      	mov	r1, r5
 8014328:	689b      	ldr	r3, [r3, #8]
 801432a:	4798      	blx	r3
 801432c:	6823      	ldr	r3, [r4, #0]
 801432e:	4620      	mov	r0, r4
 8014330:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8014332:	4798      	blx	r3
 8014334:	61a0      	str	r0, [r4, #24]
 8014336:	bd38      	pop	{r3, r4, r5, pc}

08014338 <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
 8014338:	7741      	strb	r1, [r0, #29]
 801433a:	4770      	bx	lr

0801433c <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
 801433c:	b530      	push	{r4, r5, lr}
 801433e:	460d      	mov	r5, r1
 8014340:	f100 0434 	add.w	r4, r0, #52	@ 0x34
 8014344:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8014346:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8014348:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801434a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 801434c:	682b      	ldr	r3, [r5, #0]
 801434e:	6023      	str	r3, [r4, #0]
 8014350:	bd30      	pop	{r4, r5, pc}

08014352 <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
 8014352:	b538      	push	{r3, r4, r5, lr}
 8014354:	4604      	mov	r4, r0
 8014356:	1d03      	adds	r3, r0, #4
 8014358:	6808      	ldr	r0, [r1, #0]
 801435a:	6849      	ldr	r1, [r1, #4]
 801435c:	c303      	stmia	r3!, {r0, r1}
 801435e:	6813      	ldr	r3, [r2, #0]
 8014360:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
 8014364:	6853      	ldr	r3, [r2, #4]
 8014366:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
 801436a:	2500      	movs	r5, #0
 801436c:	61a5      	str	r5, [r4, #24]
 801436e:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 8014372:	f008 f8cf 	bl	801c514 <_ZN8touchgfx9Matrix3x35resetEv>
 8014376:	23ff      	movs	r3, #255	@ 0xff
 8014378:	7763      	strb	r3, [r4, #29]
 801437a:	77a3      	strb	r3, [r4, #30]
 801437c:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8014380:	6323      	str	r3, [r4, #48]	@ 0x30
 8014382:	2301      	movs	r3, #1
 8014384:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 8014388:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
 801438c:	bd38      	pop	{r3, r4, r5, pc}
	...

08014390 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
 8014390:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014394:	ed2d 8b0a 	vpush	{d8-d12}
 8014398:	ee70 7a41 	vsub.f32	s15, s0, s2
 801439c:	b087      	sub	sp, #28
 801439e:	eef5 7a40 	vcmp.f32	s15, #0.0
 80143a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80143a6:	4605      	mov	r5, r0
 80143a8:	eef0 9a40 	vmov.f32	s19, s0
 80143ac:	eeb0 aa60 	vmov.f32	s20, s1
 80143b0:	eeb0 9a41 	vmov.f32	s18, s2
 80143b4:	eef0 8a61 	vmov.f32	s17, s3
 80143b8:	eeb0 ca42 	vmov.f32	s24, s4
 80143bc:	eef0 ca62 	vmov.f32	s25, s5
 80143c0:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 80143c4:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 80143c6:	6802      	ldr	r2, [r0, #0]
 80143c8:	d112      	bne.n	80143f0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 80143ca:	ee70 7ae1 	vsub.f32	s15, s1, s3
 80143ce:	eef5 7a40 	vcmp.f32	s15, #0.0
 80143d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80143d6:	d10b      	bne.n	80143f0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 80143d8:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 80143dc:	3901      	subs	r1, #1
 80143de:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 80143e0:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 80143e4:	b007      	add	sp, #28
 80143e6:	ecbd 8b0a 	vpop	{d8-d12}
 80143ea:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80143ee:	4710      	bx	r2
 80143f0:	23ff      	movs	r3, #255	@ 0xff
 80143f2:	77ab      	strb	r3, [r5, #30]
 80143f4:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 80143f6:	f8df 92c4 	ldr.w	r9, [pc, #708]	@ 80146bc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x32c>
 80143fa:	4628      	mov	r0, r5
 80143fc:	4798      	blx	r3
 80143fe:	f105 0834 	add.w	r8, r5, #52	@ 0x34
 8014402:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8014406:	80c3      	strh	r3, [r0, #6]
 8014408:	eef0 0a4a 	vmov.f32	s1, s20
 801440c:	eeb0 0a69 	vmov.f32	s0, s19
 8014410:	4604      	mov	r4, r0
 8014412:	4640      	mov	r0, r8
 8014414:	f008 f92d 	bl	801c672 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8014418:	4640      	mov	r0, r8
 801441a:	eeb0 ba40 	vmov.f32	s22, s0
 801441e:	eef0 ba60 	vmov.f32	s23, s1
 8014422:	ed8d 0a00 	vstr	s0, [sp]
 8014426:	edcd 0a01 	vstr	s1, [sp, #4]
 801442a:	eeb0 0a49 	vmov.f32	s0, s18
 801442e:	eef0 0a68 	vmov.f32	s1, s17
 8014432:	f008 f91e 	bl	801c672 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8014436:	eeb4 ba40 	vcmp.f32	s22, s0
 801443a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801443e:	eef4 ba60 	vcmp.f32	s23, s1
 8014442:	bf0c      	ite	eq
 8014444:	2301      	moveq	r3, #1
 8014446:	2300      	movne	r3, #0
 8014448:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801444c:	eeb4 ba40 	vcmp.f32	s22, s0
 8014450:	7463      	strb	r3, [r4, #17]
 8014452:	bf0c      	ite	eq
 8014454:	2301      	moveq	r3, #1
 8014456:	2300      	movne	r3, #0
 8014458:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801445c:	eeb0 8a40 	vmov.f32	s16, s0
 8014460:	eef0 aa60 	vmov.f32	s21, s1
 8014464:	ed8d 0a02 	vstr	s0, [sp, #8]
 8014468:	edcd 0a03 	vstr	s1, [sp, #12]
 801446c:	74a3      	strb	r3, [r4, #18]
 801446e:	d030      	beq.n	80144d2 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 8014470:	eef4 ba60 	vcmp.f32	s23, s1
 8014474:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014478:	d02b      	beq.n	80144d2 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 801447a:	ee39 9a69 	vsub.f32	s18, s18, s19
 801447e:	ee78 8aca 	vsub.f32	s17, s17, s20
 8014482:	ee89 7a0c 	vdiv.f32	s14, s18, s24
 8014486:	4640      	mov	r0, r8
 8014488:	eec8 7aac 	vdiv.f32	s15, s17, s25
 801448c:	eef0 0a4a 	vmov.f32	s1, s20
 8014490:	eeb0 0a69 	vmov.f32	s0, s19
 8014494:	eea7 0acc 	vfms.f32	s0, s15, s24
 8014498:	eeec 0a87 	vfma.f32	s1, s25, s14
 801449c:	f008 f8e9 	bl	801c672 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80144a0:	f899 3000 	ldrb.w	r3, [r9]
 80144a4:	edcd 0a05 	vstr	s1, [sp, #20]
 80144a8:	ee70 0aeb 	vsub.f32	s1, s1, s23
 80144ac:	2b01      	cmp	r3, #1
 80144ae:	ed8d 0a04 	vstr	s0, [sp, #16]
 80144b2:	ee30 0a4b 	vsub.f32	s0, s0, s22
 80144b6:	bf02      	ittt	eq
 80144b8:	eef1 7a60 	vnegeq.f32	s15, s1
 80144bc:	eef0 0a40 	vmoveq.f32	s1, s0
 80144c0:	eeb0 0a67 	vmoveq.f32	s0, s15
 80144c4:	eeb5 0a40 	vcmp.f32	s0, #0.0
 80144c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80144cc:	d134      	bne.n	8014538 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a8>
 80144ce:	2301      	movs	r3, #1
 80144d0:	74a3      	strb	r3, [r4, #18]
 80144d2:	f899 2000 	ldrb.w	r2, [r9]
 80144d6:	7c63      	ldrb	r3, [r4, #17]
 80144d8:	2a01      	cmp	r2, #1
 80144da:	f040 80a3 	bne.w	8014624 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x294>
 80144de:	2b00      	cmp	r3, #0
 80144e0:	d072      	beq.n	80145c8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x238>
 80144e2:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 80144e6:	eddf 6a73 	vldr	s13, [pc, #460]	@ 80146b4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 80144ea:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80144ee:	eef4 baea 	vcmpe.f32	s23, s21
 80144f2:	edc4 7a08 	vstr	s15, [r4, #32]
 80144f6:	eefd 7aea 	vcvt.s32.f32	s15, s21
 80144fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80144fe:	ee17 3a90 	vmov	r3, s15
 8014502:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 8014506:	b21a      	sxth	r2, r3
 8014508:	ee17 3a90 	vmov	r3, s15
 801450c:	b21b      	sxth	r3, r3
 801450e:	bf47      	ittee	mi
 8014510:	8123      	strhmi	r3, [r4, #8]
 8014512:	8162      	strhmi	r2, [r4, #10]
 8014514:	8122      	strhpl	r2, [r4, #8]
 8014516:	8163      	strhpl	r3, [r4, #10]
 8014518:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 801451c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8014520:	1a9b      	subs	r3, r3, r2
 8014522:	ee07 3a90 	vmov	s15, r3
 8014526:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801452a:	2300      	movs	r3, #0
 801452c:	7463      	strb	r3, [r4, #17]
 801452e:	edc4 7a07 	vstr	s15, [r4, #28]
 8014532:	2301      	movs	r3, #1
 8014534:	74a3      	strb	r3, [r4, #18]
 8014536:	e03f      	b.n	80145b8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 8014538:	ee80 7a80 	vdiv.f32	s14, s1, s0
 801453c:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8014540:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014544:	ed84 7a05 	vstr	s14, [r4, #20]
 8014548:	d102      	bne.n	8014550 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1c0>
 801454a:	2301      	movs	r3, #1
 801454c:	7463      	strb	r3, [r4, #17]
 801454e:	e7c0      	b.n	80144d2 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 8014550:	2b01      	cmp	r3, #1
 8014552:	bf03      	ittte	eq
 8014554:	f9b4 2006 	ldrsheq.w	r2, [r4, #6]
 8014558:	ee07 2a90 	vmoveq	s15, r2
 801455c:	eef8 7ae7 	vcvteq.f32.s32	s15, s15
 8014560:	eef0 7a6b 	vmovne.f32	s15, s23
 8014564:	bf0a      	itet	eq
 8014566:	ee77 7acb 	vsubeq.f32	s15, s15, s22
 801456a:	eeeb 7a47 	vfmsne.f32	s15, s22, s14
 801456e:	eeeb 7ac7 	vfmseq.f32	s15, s23, s14
 8014572:	2b01      	cmp	r3, #1
 8014574:	ee38 8a4b 	vsub.f32	s16, s16, s22
 8014578:	ee7a aaeb 	vsub.f32	s21, s21, s23
 801457c:	edc4 7a06 	vstr	s15, [r4, #24]
 8014580:	bf02      	ittt	eq
 8014582:	eef1 7a48 	vnegeq.f32	s15, s16
 8014586:	eeb0 8a6a 	vmoveq.f32	s16, s21
 801458a:	eef0 aa67 	vmoveq.f32	s21, s15
 801458e:	eeca 7a87 	vdiv.f32	s15, s21, s14
 8014592:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 80146b8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
 8014596:	ee38 8a67 	vsub.f32	s16, s16, s15
 801459a:	eec7 7a08 	vdiv.f32	s15, s14, s16
 801459e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 80145a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80145a6:	ed84 8a07 	vstr	s16, [r4, #28]
 80145aa:	edc4 7a08 	vstr	s15, [r4, #32]
 80145ae:	d503      	bpl.n	80145b8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 80145b0:	eeb1 8a48 	vneg.f32	s16, s16
 80145b4:	ed84 8a07 	vstr	s16, [r4, #28]
 80145b8:	60e7      	str	r7, [r4, #12]
 80145ba:	7426      	strb	r6, [r4, #16]
 80145bc:	61ac      	str	r4, [r5, #24]
 80145be:	b007      	add	sp, #28
 80145c0:	ecbd 8b0a 	vpop	{d8-d12}
 80145c4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80145c8:	7ca3      	ldrb	r3, [r4, #18]
 80145ca:	2b00      	cmp	r3, #0
 80145cc:	d0f4      	beq.n	80145b8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 80145ce:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80145d2:	eddf 6a38 	vldr	s13, [pc, #224]	@ 80146b4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 80145d6:	ee00 3a10 	vmov	s0, r3
 80145da:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 80145de:	ee30 8a48 	vsub.f32	s16, s0, s16
 80145e2:	ee30 0a4b 	vsub.f32	s0, s0, s22
 80145e6:	ee38 7a40 	vsub.f32	s14, s16, s0
 80145ea:	eeb4 8ac0 	vcmpe.f32	s16, s0
 80145ee:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80145f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80145f6:	edc4 7a08 	vstr	s15, [r4, #32]
 80145fa:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 80145fe:	ee17 3a90 	vmov	r3, s15
 8014602:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8014606:	b21a      	sxth	r2, r3
 8014608:	ee17 3a90 	vmov	r3, s15
 801460c:	b21b      	sxth	r3, r3
 801460e:	bfcc      	ite	gt
 8014610:	8123      	strhgt	r3, [r4, #8]
 8014612:	8163      	strhle	r3, [r4, #10]
 8014614:	f04f 0301 	mov.w	r3, #1
 8014618:	7463      	strb	r3, [r4, #17]
 801461a:	bfcc      	ite	gt
 801461c:	8162      	strhgt	r2, [r4, #10]
 801461e:	8122      	strhle	r2, [r4, #8]
 8014620:	2300      	movs	r3, #0
 8014622:	e787      	b.n	8014534 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a4>
 8014624:	b1db      	cbz	r3, 801465e <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2ce>
 8014626:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 801462a:	eddf 6a22 	vldr	s13, [pc, #136]	@ 80146b4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 801462e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8014632:	eef4 baea 	vcmpe.f32	s23, s21
 8014636:	edc4 7a08 	vstr	s15, [r4, #32]
 801463a:	eefd 7aea 	vcvt.s32.f32	s15, s21
 801463e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014642:	ee17 3a90 	vmov	r3, s15
 8014646:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 801464a:	b21a      	sxth	r2, r3
 801464c:	ee17 3a90 	vmov	r3, s15
 8014650:	b21b      	sxth	r3, r3
 8014652:	bf47      	ittee	mi
 8014654:	8123      	strhmi	r3, [r4, #8]
 8014656:	8162      	strhmi	r2, [r4, #10]
 8014658:	8122      	strhpl	r2, [r4, #8]
 801465a:	8163      	strhpl	r3, [r4, #10]
 801465c:	e7ac      	b.n	80145b8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 801465e:	7ca3      	ldrb	r3, [r4, #18]
 8014660:	2b00      	cmp	r3, #0
 8014662:	d0a9      	beq.n	80145b8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 8014664:	ee38 7a4b 	vsub.f32	s14, s16, s22
 8014668:	eddf 6a12 	vldr	s13, [pc, #72]	@ 80146b4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 801466c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8014670:	eeb4 bac8 	vcmpe.f32	s22, s16
 8014674:	edc4 7a08 	vstr	s15, [r4, #32]
 8014678:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 801467c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014680:	ee17 3a90 	vmov	r3, s15
 8014684:	eefd 7acb 	vcvt.s32.f32	s15, s22
 8014688:	b21a      	sxth	r2, r3
 801468a:	ee17 3a90 	vmov	r3, s15
 801468e:	b21b      	sxth	r3, r3
 8014690:	bf47      	ittee	mi
 8014692:	8123      	strhmi	r3, [r4, #8]
 8014694:	8162      	strhmi	r2, [r4, #10]
 8014696:	8122      	strhpl	r2, [r4, #8]
 8014698:	8163      	strhpl	r3, [r4, #10]
 801469a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 801469e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80146a2:	1a9b      	subs	r3, r3, r2
 80146a4:	ee07 3a90 	vmov	s15, r3
 80146a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80146ac:	edc4 7a07 	vstr	s15, [r4, #28]
 80146b0:	e782      	b.n	80145b8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 80146b2:	bf00      	nop
 80146b4:	447ffffe 	.word	0x447ffffe
 80146b8:	44800000 	.word	0x44800000
 80146bc:	2000e404 	.word	0x2000e404

080146c0 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
 80146c0:	b510      	push	{r4, lr}
 80146c2:	2100      	movs	r1, #0
 80146c4:	ed2d 8b02 	vpush	{d8}
 80146c8:	eef0 8a62 	vmov.f32	s17, s5
 80146cc:	4604      	mov	r4, r0
 80146ce:	eeb0 8a42 	vmov.f32	s16, s4
 80146d2:	f018 fe7b 	bl	802d3cc <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 80146d6:	eef0 7a68 	vmov.f32	s15, s17
 80146da:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 80146de:	6823      	ldr	r3, [r4, #0]
 80146e0:	ee17 2a90 	vmov	r2, s15
 80146e4:	eef0 7a48 	vmov.f32	s15, s16
 80146e8:	ecbd 8b02 	vpop	{d8}
 80146ec:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 80146f0:	4620      	mov	r0, r4
 80146f2:	689b      	ldr	r3, [r3, #8]
 80146f4:	ee17 1a90 	vmov	r1, s15
 80146f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80146fc:	4718      	bx	r3

080146fe <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
 80146fe:	b510      	push	{r4, lr}
 8014700:	2100      	movs	r1, #0
 8014702:	ed2d 8b02 	vpush	{d8}
 8014706:	eef0 8a63 	vmov.f32	s17, s7
 801470a:	4604      	mov	r4, r0
 801470c:	eeb0 8a43 	vmov.f32	s16, s6
 8014710:	f018 ff1e 	bl	802d550 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 8014714:	eef0 7a68 	vmov.f32	s15, s17
 8014718:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 801471c:	6823      	ldr	r3, [r4, #0]
 801471e:	ee17 2a90 	vmov	r2, s15
 8014722:	eef0 7a48 	vmov.f32	s15, s16
 8014726:	ecbd 8b02 	vpop	{d8}
 801472a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 801472e:	4620      	mov	r0, r4
 8014730:	689b      	ldr	r3, [r3, #8]
 8014732:	ee17 1a90 	vmov	r1, s15
 8014736:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801473a:	4718      	bx	r3

0801473c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
 801473c:	b513      	push	{r0, r1, r4, lr}
 801473e:	4604      	mov	r4, r0
 8014740:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 8014742:	f007 ff96 	bl	801c672 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8014746:	eef0 7a60 	vmov.f32	s15, s1
 801474a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 801474e:	4620      	mov	r0, r4
 8014750:	ee17 2a90 	vmov	r2, s15
 8014754:	eef0 7a40 	vmov.f32	s15, s0
 8014758:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 801475c:	ee17 1a90 	vmov	r1, s15
 8014760:	b002      	add	sp, #8
 8014762:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014766:	f018 bd8b 	b.w	802d280 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

0801476a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
 801476a:	b513      	push	{r0, r1, r4, lr}
 801476c:	4604      	mov	r4, r0
 801476e:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 8014770:	f007 ff7f 	bl	801c672 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8014774:	eef0 7a60 	vmov.f32	s15, s1
 8014778:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 801477c:	4620      	mov	r0, r4
 801477e:	ee17 2a90 	vmov	r2, s15
 8014782:	eef0 7a40 	vmov.f32	s15, s0
 8014786:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 801478a:	ee17 1a90 	vmov	r1, s15
 801478e:	b002      	add	sp, #8
 8014790:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014794:	f018 bdc1 	b.w	802d31a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

08014798 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
 8014798:	b5f0      	push	{r4, r5, r6, r7, lr}
 801479a:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
 801479e:	2400      	movs	r4, #0
 80147a0:	9f07      	ldr	r7, [sp, #28]
 80147a2:	4463      	add	r3, ip
 80147a4:	4626      	mov	r6, r4
 80147a6:	f04f 0e01 	mov.w	lr, #1
 80147aa:	4563      	cmp	r3, ip
 80147ac:	d02d      	beq.n	801480a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
 80147ae:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
 80147b2:	2d06      	cmp	r5, #6
 80147b4:	d8f9      	bhi.n	80147aa <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 80147b6:	fa0e f505 	lsl.w	r5, lr, r5
 80147ba:	f015 0f66 	tst.w	r5, #102	@ 0x66
 80147be:	d10d      	bne.n	80147dc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
 80147c0:	f015 0f10 	tst.w	r5, #16
 80147c4:	d117      	bne.n	80147f6 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
 80147c6:	072d      	lsls	r5, r5, #28
 80147c8:	d5ef      	bpl.n	80147aa <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 80147ca:	3801      	subs	r0, #1
 80147cc:	b91e      	cbnz	r6, 80147d6 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
 80147ce:	eb07 0580 	add.w	r5, r7, r0, lsl #2
 80147d2:	682d      	ldr	r5, [r5, #0]
 80147d4:	600d      	str	r5, [r1, #0]
 80147d6:	b96c      	cbnz	r4, 80147f4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 80147d8:	2601      	movs	r6, #1
 80147da:	e7e6      	b.n	80147aa <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 80147dc:	b926      	cbnz	r6, 80147e8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
 80147de:	eb07 0380 	add.w	r3, r7, r0, lsl #2
 80147e2:	f853 3c08 	ldr.w	r3, [r3, #-8]
 80147e6:	600b      	str	r3, [r1, #0]
 80147e8:	b924      	cbnz	r4, 80147f4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 80147ea:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 80147ee:	f850 3c04 	ldr.w	r3, [r0, #-4]
 80147f2:	6013      	str	r3, [r2, #0]
 80147f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80147f6:	3801      	subs	r0, #1
 80147f8:	b91c      	cbnz	r4, 8014802 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
 80147fa:	eb07 0480 	add.w	r4, r7, r0, lsl #2
 80147fe:	6824      	ldr	r4, [r4, #0]
 8014800:	6014      	str	r4, [r2, #0]
 8014802:	2e00      	cmp	r6, #0
 8014804:	d1f6      	bne.n	80147f4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 8014806:	2401      	movs	r4, #1
 8014808:	e7cf      	b.n	80147aa <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 801480a:	b90e      	cbnz	r6, 8014810 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
 801480c:	2300      	movs	r3, #0
 801480e:	600b      	str	r3, [r1, #0]
 8014810:	2c00      	cmp	r4, #0
 8014812:	d1ef      	bne.n	80147f4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 8014814:	2300      	movs	r3, #0
 8014816:	e7ec      	b.n	80147f2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

08014818 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
 8014818:	b538      	push	{r3, r4, r5, lr}
 801481a:	4604      	mov	r4, r0
 801481c:	ed2d 8b0a 	vpush	{d8-d12}
 8014820:	460d      	mov	r5, r1
 8014822:	eef0 ba40 	vmov.f32	s23, s0
 8014826:	eeb0 ca60 	vmov.f32	s24, s1
 801482a:	eef0 aa41 	vmov.f32	s21, s2
 801482e:	eeb0 ba61 	vmov.f32	s22, s3
 8014832:	eeb0 9a42 	vmov.f32	s18, s4
 8014836:	eef0 9a62 	vmov.f32	s19, s5
 801483a:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
 801483e:	ee7b 8a29 	vadd.f32	s17, s22, s19
 8014842:	ee3a 8a89 	vadd.f32	s16, s21, s18
 8014846:	ee68 8a8a 	vmul.f32	s17, s17, s20
 801484a:	ee28 8a0a 	vmul.f32	s16, s16, s20
 801484e:	ee3c 0a68 	vsub.f32	s0, s24, s17
 8014852:	ee7b 7ac8 	vsub.f32	s15, s23, s16
 8014856:	ee20 0a00 	vmul.f32	s0, s0, s0
 801485a:	eea7 0aa7 	vfma.f32	s0, s15, s15
 801485e:	f019 f851 	bl	802d904 <sqrtf>
 8014862:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8014866:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801486a:	d12e      	bne.n	80148ca <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
 801486c:	ee79 7a6a 	vsub.f32	s15, s18, s21
 8014870:	ee39 7acb 	vsub.f32	s14, s19, s22
 8014874:	eeb0 8a6a 	vmov.f32	s16, s21
 8014878:	eef0 8a4b 	vmov.f32	s17, s22
 801487c:	eea7 8a8a 	vfma.f32	s16, s15, s20
 8014880:	eee7 8a0a 	vfma.f32	s17, s14, s20
 8014884:	eea7 8a0a 	vfma.f32	s16, s14, s20
 8014888:	eee7 8aca 	vfms.f32	s17, s15, s20
 801488c:	2d02      	cmp	r5, #2
 801488e:	dc2f      	bgt.n	80148f0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
 8014890:	3501      	adds	r5, #1
 8014892:	eef0 1a4b 	vmov.f32	s3, s22
 8014896:	eeb0 1a6a 	vmov.f32	s2, s21
 801489a:	4629      	mov	r1, r5
 801489c:	eef0 2a68 	vmov.f32	s5, s17
 80148a0:	eeb0 2a48 	vmov.f32	s4, s16
 80148a4:	eef0 0a4c 	vmov.f32	s1, s24
 80148a8:	eeb0 0a6b 	vmov.f32	s0, s23
 80148ac:	4620      	mov	r0, r4
 80148ae:	f7ff ffb3 	bl	8014818 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 80148b2:	eef0 0a68 	vmov.f32	s1, s17
 80148b6:	eeb0 0a48 	vmov.f32	s0, s16
 80148ba:	4620      	mov	r0, r4
 80148bc:	f7ff ff55 	bl	801476a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 80148c0:	eeb0 ba68 	vmov.f32	s22, s17
 80148c4:	eef0 aa48 	vmov.f32	s21, s16
 80148c8:	e7b9      	b.n	801483e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
 80148ca:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 80148ce:	ee38 8a6b 	vsub.f32	s16, s16, s23
 80148d2:	ee78 8acc 	vsub.f32	s17, s17, s24
 80148d6:	ee28 7a27 	vmul.f32	s14, s16, s15
 80148da:	ee68 7aa7 	vmul.f32	s15, s17, s15
 80148de:	ee87 8a00 	vdiv.f32	s16, s14, s0
 80148e2:	eec7 8a80 	vdiv.f32	s17, s15, s0
 80148e6:	ee3b 8a88 	vadd.f32	s16, s23, s16
 80148ea:	ee7c 8a28 	vadd.f32	s17, s24, s17
 80148ee:	e7cd      	b.n	801488c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
 80148f0:	eef0 0a68 	vmov.f32	s1, s17
 80148f4:	eeb0 0a48 	vmov.f32	s0, s16
 80148f8:	4620      	mov	r0, r4
 80148fa:	f7ff ff36 	bl	801476a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 80148fe:	ecbd 8b0a 	vpop	{d8-d12}
 8014902:	bd38      	pop	{r3, r4, r5, pc}

08014904 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
 8014904:	b510      	push	{r4, lr}
 8014906:	ed2d 8b0a 	vpush	{d8-d12}
 801490a:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
 801490e:	2b02      	cmp	r3, #2
 8014910:	4604      	mov	r4, r0
 8014912:	eeb0 ca40 	vmov.f32	s24, s0
 8014916:	eeb0 9a60 	vmov.f32	s18, s1
 801491a:	eef0 9a41 	vmov.f32	s19, s2
 801491e:	eef0 8a61 	vmov.f32	s17, s3
 8014922:	eeb0 ba42 	vmov.f32	s22, s4
 8014926:	eef0 ba62 	vmov.f32	s23, s5
 801492a:	eeb0 aa43 	vmov.f32	s20, s6
 801492e:	eef0 aa63 	vmov.f32	s21, s7
 8014932:	eeb0 8a44 	vmov.f32	s16, s8
 8014936:	eef0 ca64 	vmov.f32	s25, s9
 801493a:	d12c      	bne.n	8014996 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
 801493c:	eef0 0a62 	vmov.f32	s1, s5
 8014940:	eeb0 0a42 	vmov.f32	s0, s4
 8014944:	f7ff ff11 	bl	801476a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8014948:	ee79 9acb 	vsub.f32	s19, s19, s22
 801494c:	ee7a caec 	vsub.f32	s25, s21, s25
 8014950:	ee78 8aeb 	vsub.f32	s17, s17, s23
 8014954:	ee3a 8a48 	vsub.f32	s16, s20, s16
 8014958:	ee69 9aac 	vmul.f32	s19, s19, s25
 801495c:	ee28 8a88 	vmul.f32	s16, s17, s16
 8014960:	eef4 9ac8 	vcmpe.f32	s19, s16
 8014964:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014968:	db0f      	blt.n	801498a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
 801496a:	2101      	movs	r1, #1
 801496c:	eef0 2a6a 	vmov.f32	s5, s21
 8014970:	eeb0 2a4a 	vmov.f32	s4, s20
 8014974:	eef0 1a6b 	vmov.f32	s3, s23
 8014978:	eeb0 1a4b 	vmov.f32	s2, s22
 801497c:	eef0 0a49 	vmov.f32	s1, s18
 8014980:	eeb0 0a4c 	vmov.f32	s0, s24
 8014984:	4620      	mov	r0, r4
 8014986:	f7ff ff47 	bl	8014818 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 801498a:	eef0 0a6a 	vmov.f32	s1, s21
 801498e:	eeb0 0a4a 	vmov.f32	s0, s20
 8014992:	4620      	mov	r0, r4
 8014994:	e035      	b.n	8014a02 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
 8014996:	2b01      	cmp	r3, #1
 8014998:	d138      	bne.n	8014a0c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 801499a:	ee31 4ae2 	vsub.f32	s8, s3, s5
 801499e:	ee33 6a48 	vsub.f32	s12, s6, s16
 80149a2:	ee71 7a42 	vsub.f32	s15, s2, s4
 80149a6:	ee73 6ae4 	vsub.f32	s13, s7, s9
 80149aa:	ee26 7a44 	vnmul.f32	s14, s12, s8
 80149ae:	eea7 7aa6 	vfma.f32	s14, s15, s13
 80149b2:	eeb5 7a40 	vcmp.f32	s14, #0.0
 80149b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80149ba:	d027      	beq.n	8014a0c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 80149bc:	ee28 8a63 	vnmul.f32	s16, s16, s7
 80149c0:	ee61 8ac2 	vnmul.f32	s17, s3, s4
 80149c4:	eea4 8a83 	vfma.f32	s16, s9, s6
 80149c8:	eee1 8a22 	vfma.f32	s17, s2, s5
 80149cc:	ee68 7a67 	vnmul.f32	s15, s16, s15
 80149d0:	ee28 8a44 	vnmul.f32	s16, s16, s8
 80149d4:	eee6 7a28 	vfma.f32	s15, s12, s17
 80149d8:	eea6 8aa8 	vfma.f32	s16, s13, s17
 80149dc:	ee87 0a87 	vdiv.f32	s0, s15, s14
 80149e0:	eec8 0a07 	vdiv.f32	s1, s16, s14
 80149e4:	ee3c ca40 	vsub.f32	s24, s24, s0
 80149e8:	ee39 9a60 	vsub.f32	s18, s18, s1
 80149ec:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
 80149f0:	ee29 9a09 	vmul.f32	s18, s18, s18
 80149f4:	eeac 9a0c 	vfma.f32	s18, s24, s24
 80149f8:	eef4 7ac9 	vcmpe.f32	s15, s18
 80149fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014a00:	db04      	blt.n	8014a0c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 8014a02:	f7ff feb2 	bl	801476a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8014a06:	ecbd 8b0a 	vpop	{d8-d12}
 8014a0a:	bd10      	pop	{r4, pc}
 8014a0c:	eef0 0a6b 	vmov.f32	s1, s23
 8014a10:	eeb0 0a4b 	vmov.f32	s0, s22
 8014a14:	4620      	mov	r0, r4
 8014a16:	f7ff fea8 	bl	801476a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8014a1a:	e7b6      	b.n	801498a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

08014a1c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
 8014a1c:	b510      	push	{r4, lr}
 8014a1e:	ed2d 8b0c 	vpush	{d8-d13}
 8014a22:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
 8014a26:	4604      	mov	r4, r0
 8014a28:	eeb0 9a40 	vmov.f32	s18, s0
 8014a2c:	eef0 9a60 	vmov.f32	s19, s1
 8014a30:	eef0 aa41 	vmov.f32	s21, s2
 8014a34:	eeb0 ba61 	vmov.f32	s22, s3
 8014a38:	b933      	cbnz	r3, 8014a48 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
 8014a3a:	f7ff fe96 	bl	801476a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8014a3e:	eef0 0a4b 	vmov.f32	s1, s22
 8014a42:	eeb0 0a6a 	vmov.f32	s0, s21
 8014a46:	e015      	b.n	8014a74 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
 8014a48:	ee71 8a40 	vsub.f32	s17, s2, s0
 8014a4c:	ee31 8ae0 	vsub.f32	s16, s3, s1
 8014a50:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8014a54:	2b02      	cmp	r3, #2
 8014a56:	ee68 8aa7 	vmul.f32	s17, s17, s15
 8014a5a:	ee28 8a27 	vmul.f32	s16, s16, s15
 8014a5e:	d10f      	bne.n	8014a80 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
 8014a60:	ee70 0ae8 	vsub.f32	s1, s1, s17
 8014a64:	ee30 0a08 	vadd.f32	s0, s0, s16
 8014a68:	f7ff fe7f 	bl	801476a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8014a6c:	ee7b 0a68 	vsub.f32	s1, s22, s17
 8014a70:	ee3a 0a88 	vadd.f32	s0, s21, s16
 8014a74:	4620      	mov	r0, r4
 8014a76:	f7ff fe78 	bl	801476a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8014a7a:	ecbd 8b0c 	vpop	{d8-d13}
 8014a7e:	bd10      	pop	{r4, pc}
 8014a80:	f7ff fe73 	bl	801476a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8014a84:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 8014bbc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
 8014a88:	eddf ba4d 	vldr	s23, [pc, #308]	@ 8014bc0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
 8014a8c:	ed9f ca4d 	vldr	s24, [pc, #308]	@ 8014bc4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
 8014a90:	eddf ca4d 	vldr	s25, [pc, #308]	@ 8014bc8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
 8014a94:	ed9f da4d 	vldr	s26, [pc, #308]	@ 8014bcc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
 8014a98:	eef0 0a69 	vmov.f32	s1, s19
 8014a9c:	eeb0 0a49 	vmov.f32	s0, s18
 8014aa0:	eee8 0a27 	vfma.f32	s1, s16, s15
 8014aa4:	4620      	mov	r0, r4
 8014aa6:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8014aaa:	eeb1 aa68 	vneg.f32	s20, s17
 8014aae:	eeea 0a2b 	vfma.f32	s1, s20, s23
 8014ab2:	eea8 0a2b 	vfma.f32	s0, s16, s23
 8014ab6:	f7ff fe58 	bl	801476a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8014aba:	eddf 7a45 	vldr	s15, [pc, #276]	@ 8014bd0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
 8014abe:	eef0 0a69 	vmov.f32	s1, s19
 8014ac2:	eeb0 0a49 	vmov.f32	s0, s18
 8014ac6:	eee8 0a27 	vfma.f32	s1, s16, s15
 8014aca:	4620      	mov	r0, r4
 8014acc:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8014ad0:	eeea 0a0c 	vfma.f32	s1, s20, s24
 8014ad4:	eea8 0a0c 	vfma.f32	s0, s16, s24
 8014ad8:	f7ff fe47 	bl	801476a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8014adc:	eddf 7a3d 	vldr	s15, [pc, #244]	@ 8014bd4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
 8014ae0:	eef0 0a69 	vmov.f32	s1, s19
 8014ae4:	eeb0 0a49 	vmov.f32	s0, s18
 8014ae8:	eee8 0a27 	vfma.f32	s1, s16, s15
 8014aec:	4620      	mov	r0, r4
 8014aee:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8014af2:	eeea 0a2c 	vfma.f32	s1, s20, s25
 8014af6:	eea8 0a2c 	vfma.f32	s0, s16, s25
 8014afa:	f7ff fe36 	bl	801476a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8014afe:	eddf 7a36 	vldr	s15, [pc, #216]	@ 8014bd8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
 8014b02:	eef0 0a69 	vmov.f32	s1, s19
 8014b06:	eeb0 0a49 	vmov.f32	s0, s18
 8014b0a:	eee8 0a27 	vfma.f32	s1, s16, s15
 8014b0e:	4620      	mov	r0, r4
 8014b10:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8014b14:	eeea 0a0d 	vfma.f32	s1, s20, s26
 8014b18:	eea8 0a0d 	vfma.f32	s0, s16, s26
 8014b1c:	f7ff fe25 	bl	801476a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8014b20:	ee79 0a88 	vadd.f32	s1, s19, s16
 8014b24:	ee39 0a28 	vadd.f32	s0, s18, s17
 8014b28:	ee70 0ae8 	vsub.f32	s1, s1, s17
 8014b2c:	ee30 0a08 	vadd.f32	s0, s0, s16
 8014b30:	4620      	mov	r0, r4
 8014b32:	f7ff fe1a 	bl	801476a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8014b36:	eddf 7a29 	vldr	s15, [pc, #164]	@ 8014bdc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
 8014b3a:	eef0 0a69 	vmov.f32	s1, s19
 8014b3e:	eeb0 0a49 	vmov.f32	s0, s18
 8014b42:	eee8 0a27 	vfma.f32	s1, s16, s15
 8014b46:	4620      	mov	r0, r4
 8014b48:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8014b4c:	eeea 0a0d 	vfma.f32	s1, s20, s26
 8014b50:	eea8 0a0d 	vfma.f32	s0, s16, s26
 8014b54:	f7ff fe09 	bl	801476a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8014b58:	eddf 7a21 	vldr	s15, [pc, #132]	@ 8014be0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
 8014b5c:	eef0 0a69 	vmov.f32	s1, s19
 8014b60:	eeb0 0a49 	vmov.f32	s0, s18
 8014b64:	eee8 0a27 	vfma.f32	s1, s16, s15
 8014b68:	4620      	mov	r0, r4
 8014b6a:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8014b6e:	eeea 0a2c 	vfma.f32	s1, s20, s25
 8014b72:	eea8 0a2c 	vfma.f32	s0, s16, s25
 8014b76:	f7ff fdf8 	bl	801476a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8014b7a:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8014be4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
 8014b7e:	eef0 0a69 	vmov.f32	s1, s19
 8014b82:	eeb0 0a49 	vmov.f32	s0, s18
 8014b86:	eee8 0a27 	vfma.f32	s1, s16, s15
 8014b8a:	4620      	mov	r0, r4
 8014b8c:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8014b90:	eeea 0a0c 	vfma.f32	s1, s20, s24
 8014b94:	eea8 0a0c 	vfma.f32	s0, s16, s24
 8014b98:	f7ff fde7 	bl	801476a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8014b9c:	eddf 7a12 	vldr	s15, [pc, #72]	@ 8014be8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
 8014ba0:	eef0 0a69 	vmov.f32	s1, s19
 8014ba4:	eeb0 0a49 	vmov.f32	s0, s18
 8014ba8:	eee8 0a27 	vfma.f32	s1, s16, s15
 8014bac:	4620      	mov	r0, r4
 8014bae:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8014bb2:	eeea 0a2b 	vfma.f32	s1, s20, s23
 8014bb6:	eea8 0a2b 	vfma.f32	s0, s16, s23
 8014bba:	e73e      	b.n	8014a3a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
 8014bbc:	3d23d70a 	.word	0x3d23d70a
 8014bc0:	3e8f5c29 	.word	0x3e8f5c29
 8014bc4:	3f19999a 	.word	0x3f19999a
 8014bc8:	3f4ccccd 	.word	0x3f4ccccd
 8014bcc:	3f75c28f 	.word	0x3f75c28f
 8014bd0:	3e4ccccd 	.word	0x3e4ccccd
 8014bd4:	3ecccccd 	.word	0x3ecccccd
 8014bd8:	3f3851ec 	.word	0x3f3851ec
 8014bdc:	3fa3d70a 	.word	0x3fa3d70a
 8014be0:	3fcccccd 	.word	0x3fcccccd
 8014be4:	3fe66666 	.word	0x3fe66666
 8014be8:	3ffae148 	.word	0x3ffae148

08014bec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
 8014bec:	b570      	push	{r4, r5, r6, lr}
 8014bee:	ed2d 8b06 	vpush	{d8-d10}
 8014bf2:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 8014bf6:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
 8014bfa:	ee30 8ac8 	vsub.f32	s16, s1, s16
 8014bfe:	ee30 9a49 	vsub.f32	s18, s0, s18
 8014c02:	eef0 aa40 	vmov.f32	s21, s0
 8014c06:	ee28 0a08 	vmul.f32	s0, s16, s16
 8014c0a:	4604      	mov	r4, r0
 8014c0c:	eea9 0a09 	vfma.f32	s0, s18, s18
 8014c10:	eeb0 aa60 	vmov.f32	s20, s1
 8014c14:	f018 fe76 	bl	802d904 <sqrtf>
 8014c18:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8014c1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014c20:	dd36      	ble.n	8014c90 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
 8014c22:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 8014c26:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
 8014c2a:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
 8014c2e:	eec0 6a27 	vdiv.f32	s13, s0, s15
 8014c32:	2600      	movs	r6, #0
 8014c34:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 8014c38:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
 8014c3c:	eec8 8a26 	vdiv.f32	s17, s16, s13
 8014c40:	ee89 8a26 	vdiv.f32	s16, s18, s13
 8014c44:	ee70 9a28 	vadd.f32	s19, s0, s17
 8014c48:	ee30 9ac8 	vsub.f32	s18, s1, s16
 8014c4c:	ee78 8aaa 	vadd.f32	s17, s17, s21
 8014c50:	ee3a 8a48 	vsub.f32	s16, s20, s16
 8014c54:	b1fd      	cbz	r5, 8014c96 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
 8014c56:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
 8014c5a:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
 8014c5e:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
 8014c62:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
 8014c66:	eef0 0a49 	vmov.f32	s1, s18
 8014c6a:	eeb0 0a69 	vmov.f32	s0, s19
 8014c6e:	4620      	mov	r0, r4
 8014c70:	f7ff fd64 	bl	801473c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 8014c74:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
 8014c78:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
 8014c7c:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
 8014c80:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
 8014c84:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
 8014c88:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
 8014c8c:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
 8014c90:	ecbd 8b06 	vpop	{d8-d10}
 8014c94:	bd70      	pop	{r4, r5, r6, pc}
 8014c96:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
 8014c9a:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 8014c9e:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 8014ca2:	b16b      	cbz	r3, 8014cc0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
 8014ca4:	eef0 1a49 	vmov.f32	s3, s18
 8014ca8:	eeb0 1a69 	vmov.f32	s2, s19
 8014cac:	eef0 0a62 	vmov.f32	s1, s5
 8014cb0:	eeb0 0a42 	vmov.f32	s0, s4
 8014cb4:	4620      	mov	r0, r4
 8014cb6:	f7ff feb1 	bl	8014a1c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 8014cba:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
 8014cbe:	e7db      	b.n	8014c78 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
 8014cc0:	eef0 4a48 	vmov.f32	s9, s16
 8014cc4:	eeb0 4a68 	vmov.f32	s8, s17
 8014cc8:	eef0 3a49 	vmov.f32	s7, s18
 8014ccc:	eeb0 3a69 	vmov.f32	s6, s19
 8014cd0:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 8014cd4:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 8014cd8:	4620      	mov	r0, r4
 8014cda:	f7ff fe13 	bl	8014904 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 8014cde:	e7cb      	b.n	8014c78 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

08014ce0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
 8014ce0:	ee07 2a90 	vmov	s15, r2
 8014ce4:	ee07 1a10 	vmov	s14, r1
 8014ce8:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8014cec:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
 8014cf0:	eddf 7a03 	vldr	s15, [pc, #12]	@ 8014d00 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
 8014cf4:	ee60 0aa7 	vmul.f32	s1, s1, s15
 8014cf8:	ee20 0a27 	vmul.f32	s0, s0, s15
 8014cfc:	f7ff bf76 	b.w	8014bec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 8014d00:	3d000000 	.word	0x3d000000

08014d04 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
 8014d04:	b538      	push	{r3, r4, r5, lr}
 8014d06:	ed2d 8b02 	vpush	{d8}
 8014d0a:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
 8014d0e:	4604      	mov	r4, r0
 8014d10:	b31d      	cbz	r5, 8014d5a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
 8014d12:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
 8014d16:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 8014d1a:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
 8014d1e:	ee78 8a67 	vsub.f32	s17, s16, s15
 8014d22:	ee38 8a27 	vadd.f32	s16, s16, s15
 8014d26:	eef0 0a68 	vmov.f32	s1, s17
 8014d2a:	f7ff fd07 	bl	801473c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 8014d2e:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 8014d32:	eef0 1a48 	vmov.f32	s3, s16
 8014d36:	eeb0 0a41 	vmov.f32	s0, s2
 8014d3a:	eef0 0a68 	vmov.f32	s1, s17
 8014d3e:	4620      	mov	r0, r4
 8014d40:	f7ff fe6c 	bl	8014a1c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 8014d44:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 8014d48:	eef0 1a68 	vmov.f32	s3, s17
 8014d4c:	eef0 0a48 	vmov.f32	s1, s16
 8014d50:	eeb0 0a41 	vmov.f32	s0, s2
 8014d54:	4620      	mov	r0, r4
 8014d56:	f7ff fe61 	bl	8014a1c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 8014d5a:	ecbd 8b02 	vpop	{d8}
 8014d5e:	4628      	mov	r0, r5
 8014d60:	bd38      	pop	{r3, r4, r5, pc}

08014d62 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
 8014d62:	b510      	push	{r4, lr}
 8014d64:	ed2d 8b02 	vpush	{d8}
 8014d68:	4604      	mov	r4, r0
 8014d6a:	eeb0 8a40 	vmov.f32	s16, s0
 8014d6e:	eef0 8a60 	vmov.f32	s17, s1
 8014d72:	f7ff ffc7 	bl	8014d04 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 8014d76:	b9d0      	cbnz	r0, 8014dae <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
 8014d78:	4620      	mov	r0, r4
 8014d7a:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
 8014d7e:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
 8014d82:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
 8014d86:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
 8014d8a:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 8014d8e:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 8014d92:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 8014d96:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 8014d9a:	eef0 0a68 	vmov.f32	s1, s17
 8014d9e:	eeb0 0a48 	vmov.f32	s0, s16
 8014da2:	f7ff fdaf 	bl	8014904 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 8014da6:	2001      	movs	r0, #1
 8014da8:	ecbd 8b02 	vpop	{d8}
 8014dac:	bd10      	pop	{r4, pc}
 8014dae:	2000      	movs	r0, #0
 8014db0:	e7fa      	b.n	8014da8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

08014db2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
 8014db2:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
 8014db6:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
 8014dba:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
 8014dbe:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
 8014dc2:	f7ff be2b 	b.w	8014a1c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

08014dc8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
 8014dc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014dcc:	b089      	sub	sp, #36	@ 0x24
 8014dce:	461c      	mov	r4, r3
 8014dd0:	f10d 0820 	add.w	r8, sp, #32
 8014dd4:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8014dd8:	9304      	str	r3, [sp, #16]
 8014dda:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8014ddc:	9105      	str	r1, [sp, #20]
 8014dde:	2300      	movs	r3, #0
 8014de0:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
 8014de4:	9306      	str	r3, [sp, #24]
 8014de6:	f848 3d04 	str.w	r3, [r8, #-4]!
 8014dea:	9b04      	ldr	r3, [sp, #16]
 8014dec:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
 8014df0:	4682      	mov	sl, r0
 8014df2:	4615      	mov	r5, r2
 8014df4:	9b05      	ldr	r3, [sp, #20]
 8014df6:	429d      	cmp	r5, r3
 8014df8:	d96d      	bls.n	8014ed6 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
 8014dfa:	3d01      	subs	r5, #1
 8014dfc:	f819 3005 	ldrb.w	r3, [r9, r5]
 8014e00:	2b06      	cmp	r3, #6
 8014e02:	d8f7      	bhi.n	8014df4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 8014e04:	a201      	add	r2, pc, #4	@ (adr r2, 8014e0c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
 8014e06:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8014e0a:	bf00      	nop
 8014e0c:	08014e2b 	.word	0x08014e2b
 8014e10:	08014df5 	.word	0x08014df5
 8014e14:	08014e29 	.word	0x08014e29
 8014e18:	08014e4d 	.word	0x08014e4d
 8014e1c:	08014e4d 	.word	0x08014e4d
 8014e20:	08014e51 	.word	0x08014e51
 8014e24:	08014e91 	.word	0x08014e91
 8014e28:	3c02      	subs	r4, #2
 8014e2a:	4650      	mov	r0, sl
 8014e2c:	e9cd 9701 	strd	r9, r7, [sp, #4]
 8014e30:	9400      	str	r4, [sp, #0]
 8014e32:	462b      	mov	r3, r5
 8014e34:	4642      	mov	r2, r8
 8014e36:	a906      	add	r1, sp, #24
 8014e38:	f7ff fcae 	bl	8014798 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 8014e3c:	eddd 0a07 	vldr	s1, [sp, #28]
 8014e40:	ed9d 0a06 	vldr	s0, [sp, #24]
 8014e44:	4630      	mov	r0, r6
 8014e46:	f7ff fed1 	bl	8014bec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 8014e4a:	e7d3      	b.n	8014df4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 8014e4c:	3c01      	subs	r4, #1
 8014e4e:	e7ec      	b.n	8014e2a <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
 8014e50:	f1a4 0b04 	sub.w	fp, r4, #4
 8014e54:	3c02      	subs	r4, #2
 8014e56:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 8014e5a:	4650      	mov	r0, sl
 8014e5c:	e9cd 9701 	strd	r9, r7, [sp, #4]
 8014e60:	f8cd b000 	str.w	fp, [sp]
 8014e64:	462b      	mov	r3, r5
 8014e66:	4642      	mov	r2, r8
 8014e68:	a906      	add	r1, sp, #24
 8014e6a:	f7ff fc95 	bl	8014798 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 8014e6e:	eddd 2a07 	vldr	s5, [sp, #28]
 8014e72:	ed9d 2a06 	vldr	s4, [sp, #24]
 8014e76:	ed54 1a01 	vldr	s3, [r4, #-4]
 8014e7a:	ed14 1a02 	vldr	s2, [r4, #-8]
 8014e7e:	edd4 0a01 	vldr	s1, [r4, #4]
 8014e82:	ed94 0a00 	vldr	s0, [r4]
 8014e86:	4630      	mov	r0, r6
 8014e88:	f7ff fc1a 	bl	80146c0 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 8014e8c:	465c      	mov	r4, fp
 8014e8e:	e7b1      	b.n	8014df4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 8014e90:	f1a4 0b06 	sub.w	fp, r4, #6
 8014e94:	3c02      	subs	r4, #2
 8014e96:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 8014e9a:	4650      	mov	r0, sl
 8014e9c:	e9cd 9701 	strd	r9, r7, [sp, #4]
 8014ea0:	f8cd b000 	str.w	fp, [sp]
 8014ea4:	462b      	mov	r3, r5
 8014ea6:	4642      	mov	r2, r8
 8014ea8:	a906      	add	r1, sp, #24
 8014eaa:	f7ff fc75 	bl	8014798 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 8014eae:	eddd 3a07 	vldr	s7, [sp, #28]
 8014eb2:	ed9d 3a06 	vldr	s6, [sp, #24]
 8014eb6:	ed54 2a03 	vldr	s5, [r4, #-12]
 8014eba:	ed14 2a04 	vldr	s4, [r4, #-16]
 8014ebe:	ed54 1a01 	vldr	s3, [r4, #-4]
 8014ec2:	ed14 1a02 	vldr	s2, [r4, #-8]
 8014ec6:	edd4 0a01 	vldr	s1, [r4, #4]
 8014eca:	ed94 0a00 	vldr	s0, [r4]
 8014ece:	4630      	mov	r0, r6
 8014ed0:	f7ff fc15 	bl	80146fe <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 8014ed4:	e7da      	b.n	8014e8c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
 8014ed6:	9b04      	ldr	r3, [sp, #16]
 8014ed8:	b113      	cbz	r3, 8014ee0 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
 8014eda:	4630      	mov	r0, r6
 8014edc:	f7ff ff69 	bl	8014db2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
 8014ee0:	b009      	add	sp, #36	@ 0x24
 8014ee2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014ee6:	bf00      	nop

08014ee8 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
 8014ee8:	eef0 7a60 	vmov.f32	s15, s1
 8014eec:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8014ef0:	6803      	ldr	r3, [r0, #0]
 8014ef2:	ee17 2a90 	vmov	r2, s15
 8014ef6:	eef0 7a40 	vmov.f32	s15, s0
 8014efa:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8014efe:	689b      	ldr	r3, [r3, #8]
 8014f00:	ee17 1a90 	vmov	r1, s15
 8014f04:	4718      	bx	r3
	...

08014f08 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
 8014f08:	b510      	push	{r4, lr}
 8014f0a:	4b04      	ldr	r3, [pc, #16]	@ (8014f1c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
 8014f0c:	4604      	mov	r4, r0
 8014f0e:	f840 3b14 	str.w	r3, [r0], #20
 8014f12:	f003 fa2d 	bl	8018370 <_ZN8touchgfx7OutlineD1Ev>
 8014f16:	4620      	mov	r0, r4
 8014f18:	bd10      	pop	{r4, pc}
 8014f1a:	bf00      	nop
 8014f1c:	08033554 	.word	0x08033554

08014f20 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
 8014f20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014f24:	ed2d 8b04 	vpush	{d8-d9}
 8014f28:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
 8014f2c:	b0b5      	sub	sp, #212	@ 0xd4
 8014f2e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8014f32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014f36:	4605      	mov	r5, r0
 8014f38:	468b      	mov	fp, r1
 8014f3a:	9206      	str	r2, [sp, #24]
 8014f3c:	461e      	mov	r6, r3
 8014f3e:	f04f 0400 	mov.w	r4, #0
 8014f42:	f240 814e 	bls.w	80151e2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
 8014f46:	23ff      	movs	r3, #255	@ 0xff
 8014f48:	9300      	str	r3, [sp, #0]
 8014f4a:	1d02      	adds	r2, r0, #4
 8014f4c:	6981      	ldr	r1, [r0, #24]
 8014f4e:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
 8014f50:	ed9f 9aa5 	vldr	s18, [pc, #660]	@ 80151e8 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
 8014f54:	a808      	add	r0, sp, #32
 8014f56:	f018 f847 	bl	802cfe8 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 8014f5a:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
 8014f5e:	4ba3      	ldr	r3, [pc, #652]	@ (80151ec <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
 8014f60:	edd5 6a08 	vldr	s13, [r5, #32]
 8014f64:	9308      	str	r3, [sp, #32]
 8014f66:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8014f6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014f6e:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8014f72:	bf48      	it	mi
 8014f74:	eef1 7a67 	vnegmi.f32	s15, s15
 8014f78:	ee67 7a87 	vmul.f32	s15, s15, s14
 8014f7c:	f105 0334 	add.w	r3, r5, #52	@ 0x34
 8014f80:	2201      	movs	r2, #1
 8014f82:	9325      	str	r3, [sp, #148]	@ 0x94
 8014f84:	2300      	movs	r3, #0
 8014f86:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8014f8a:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
 8014f8e:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
 8014f92:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
 8014f96:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
 8014f9a:	7f6a      	ldrb	r2, [r5, #29]
 8014f9c:	7fab      	ldrb	r3, [r5, #30]
 8014f9e:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
 8014fa2:	435a      	muls	r2, r3
 8014fa4:	ee27 7a26 	vmul.f32	s14, s14, s13
 8014fa8:	1c53      	adds	r3, r2, #1
 8014faa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8014fae:	ee67 7a27 	vmul.f32	s15, s14, s15
 8014fb2:	f04f 0800 	mov.w	r8, #0
 8014fb6:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
 8014fba:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
 8014fbe:	942a      	str	r4, [sp, #168]	@ 0xa8
 8014fc0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8014fc4:	942b      	str	r4, [sp, #172]	@ 0xac
 8014fc6:	942c      	str	r4, [sp, #176]	@ 0xb0
 8014fc8:	942d      	str	r4, [sp, #180]	@ 0xb4
 8014fca:	942e      	str	r4, [sp, #184]	@ 0xb8
 8014fcc:	942f      	str	r4, [sp, #188]	@ 0xbc
 8014fce:	9430      	str	r4, [sp, #192]	@ 0xc0
 8014fd0:	9431      	str	r4, [sp, #196]	@ 0xc4
 8014fd2:	9432      	str	r4, [sp, #200]	@ 0xc8
 8014fd4:	9433      	str	r4, [sp, #204]	@ 0xcc
 8014fd6:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
 8014fda:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
 8014fde:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
 8014fe2:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
 8014fe6:	eef0 9a49 	vmov.f32	s19, s18
 8014fea:	eeb0 8a49 	vmov.f32	s16, s18
 8014fee:	eef0 8a49 	vmov.f32	s17, s18
 8014ff2:	4644      	mov	r4, r8
 8014ff4:	46c1      	mov	r9, r8
 8014ff6:	af08      	add	r7, sp, #32
 8014ff8:	f04f 0a01 	mov.w	sl, #1
 8014ffc:	9b06      	ldr	r3, [sp, #24]
 8014ffe:	454b      	cmp	r3, r9
 8015000:	f000 80cc 	beq.w	801519c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
 8015004:	f109 0301 	add.w	r3, r9, #1
 8015008:	9305      	str	r3, [sp, #20]
 801500a:	f81b 3009 	ldrb.w	r3, [fp, r9]
 801500e:	2b06      	cmp	r3, #6
 8015010:	d839      	bhi.n	8015086 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 8015012:	e8df f003 	tbb	[pc, r3]
 8015016:	3b04      	.short	0x3b04
 8015018:	817c6f60 	.word	0x817c6f60
 801501c:	a0          	.byte	0xa0
 801501d:	00          	.byte	0x00
 801501e:	45c1      	cmp	r9, r8
 8015020:	d92b      	bls.n	801507a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 8015022:	eef0 0a49 	vmov.f32	s1, s18
 8015026:	eeb0 0a69 	vmov.f32	s0, s19
 801502a:	4638      	mov	r0, r7
 801502c:	f7ff fdde 	bl	8014bec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 8015030:	4638      	mov	r0, r7
 8015032:	f7ff fe67 	bl	8014d04 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 8015036:	4681      	mov	r9, r0
 8015038:	b9f8      	cbnz	r0, 801507a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 801503a:	eef0 0a49 	vmov.f32	s1, s18
 801503e:	eeb0 0a69 	vmov.f32	s0, s19
 8015042:	4638      	mov	r0, r7
 8015044:	f7ff fe8d 	bl	8014d62 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 8015048:	4628      	mov	r0, r5
 801504a:	e9cd 9702 	strd	r9, r7, [sp, #8]
 801504e:	e9cd b600 	strd	fp, r6, [sp]
 8015052:	4623      	mov	r3, r4
 8015054:	9a05      	ldr	r2, [sp, #20]
 8015056:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
 801505a:	4641      	mov	r1, r8
 801505c:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
 8015060:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 8015064:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 8015068:	f7ff feae 	bl	8014dc8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 801506c:	eef0 0a49 	vmov.f32	s1, s18
 8015070:	eeb0 0a69 	vmov.f32	s0, s19
 8015074:	4638      	mov	r0, r7
 8015076:	f7ff fe74 	bl	8014d62 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 801507a:	f8dd 8014 	ldr.w	r8, [sp, #20]
 801507e:	eeb0 8a49 	vmov.f32	s16, s18
 8015082:	eef0 8a69 	vmov.f32	s17, s19
 8015086:	f8dd 9014 	ldr.w	r9, [sp, #20]
 801508a:	e7b7      	b.n	8014ffc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
 801508c:	45c1      	cmp	r9, r8
 801508e:	d90d      	bls.n	80150ac <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 8015090:	4638      	mov	r0, r7
 8015092:	f7ff fe37 	bl	8014d04 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 8015096:	b948      	cbnz	r0, 80150ac <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 8015098:	e9cd a702 	strd	sl, r7, [sp, #8]
 801509c:	e9cd b600 	strd	fp, r6, [sp]
 80150a0:	4623      	mov	r3, r4
 80150a2:	464a      	mov	r2, r9
 80150a4:	4641      	mov	r1, r8
 80150a6:	4628      	mov	r0, r5
 80150a8:	f7ff fe8e 	bl	8014dc8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 80150ac:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 80150b0:	edd3 8a00 	vldr	s17, [r3]
 80150b4:	ed93 8a01 	vldr	s16, [r3, #4]
 80150b8:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
 80150bc:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
 80150c0:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 80150c4:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 80150c8:	3402      	adds	r4, #2
 80150ca:	46c8      	mov	r8, r9
 80150cc:	eeb0 9a48 	vmov.f32	s18, s16
 80150d0:	eef0 9a68 	vmov.f32	s19, s17
 80150d4:	e7d7      	b.n	8015086 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 80150d6:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 80150da:	edd3 8a00 	vldr	s17, [r3]
 80150de:	ed93 8a01 	vldr	s16, [r3, #4]
 80150e2:	eeb0 0a68 	vmov.f32	s0, s17
 80150e6:	eef0 0a48 	vmov.f32	s1, s16
 80150ea:	4638      	mov	r0, r7
 80150ec:	f7ff fd7e 	bl	8014bec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 80150f0:	3402      	adds	r4, #2
 80150f2:	e7c8      	b.n	8015086 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 80150f4:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 80150f8:	edd3 8a00 	vldr	s17, [r3]
 80150fc:	eef0 0a48 	vmov.f32	s1, s16
 8015100:	eeb0 0a68 	vmov.f32	s0, s17
 8015104:	4638      	mov	r0, r7
 8015106:	f7ff fd71 	bl	8014bec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 801510a:	3401      	adds	r4, #1
 801510c:	e7bb      	b.n	8015086 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 801510e:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8015112:	ed93 8a00 	vldr	s16, [r3]
 8015116:	e7f1      	b.n	80150fc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
 8015118:	00a3      	lsls	r3, r4, #2
 801511a:	f103 0208 	add.w	r2, r3, #8
 801511e:	f103 090c 	add.w	r9, r3, #12
 8015122:	4432      	add	r2, r6
 8015124:	4433      	add	r3, r6
 8015126:	44b1      	add	r9, r6
 8015128:	ed92 2a00 	vldr	s4, [r2]
 801512c:	edd9 2a00 	vldr	s5, [r9]
 8015130:	edd3 1a01 	vldr	s3, [r3, #4]
 8015134:	ed93 1a00 	vldr	s2, [r3]
 8015138:	9207      	str	r2, [sp, #28]
 801513a:	eef0 0a48 	vmov.f32	s1, s16
 801513e:	eeb0 0a68 	vmov.f32	s0, s17
 8015142:	4638      	mov	r0, r7
 8015144:	f7ff fabc 	bl	80146c0 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 8015148:	9a07      	ldr	r2, [sp, #28]
 801514a:	ed99 8a00 	vldr	s16, [r9]
 801514e:	edd2 8a00 	vldr	s17, [r2]
 8015152:	3404      	adds	r4, #4
 8015154:	e797      	b.n	8015086 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 8015156:	00a3      	lsls	r3, r4, #2
 8015158:	f103 0210 	add.w	r2, r3, #16
 801515c:	f103 0914 	add.w	r9, r3, #20
 8015160:	4432      	add	r2, r6
 8015162:	4433      	add	r3, r6
 8015164:	44b1      	add	r9, r6
 8015166:	ed92 3a00 	vldr	s6, [r2]
 801516a:	edd9 3a00 	vldr	s7, [r9]
 801516e:	edd3 2a03 	vldr	s5, [r3, #12]
 8015172:	ed93 2a02 	vldr	s4, [r3, #8]
 8015176:	edd3 1a01 	vldr	s3, [r3, #4]
 801517a:	ed93 1a00 	vldr	s2, [r3]
 801517e:	9207      	str	r2, [sp, #28]
 8015180:	eef0 0a48 	vmov.f32	s1, s16
 8015184:	eeb0 0a68 	vmov.f32	s0, s17
 8015188:	4638      	mov	r0, r7
 801518a:	f7ff fab8 	bl	80146fe <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 801518e:	9a07      	ldr	r2, [sp, #28]
 8015190:	ed99 8a00 	vldr	s16, [r9]
 8015194:	edd2 8a00 	vldr	s17, [r2]
 8015198:	3406      	adds	r4, #6
 801519a:	e774      	b.n	8015086 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 801519c:	9b06      	ldr	r3, [sp, #24]
 801519e:	4543      	cmp	r3, r8
 80151a0:	af08      	add	r7, sp, #32
 80151a2:	d90f      	bls.n	80151c4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 80151a4:	4638      	mov	r0, r7
 80151a6:	f7ff fdad 	bl	8014d04 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 80151aa:	b958      	cbnz	r0, 80151c4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 80151ac:	2301      	movs	r3, #1
 80151ae:	e9cd 6301 	strd	r6, r3, [sp, #4]
 80151b2:	9703      	str	r7, [sp, #12]
 80151b4:	f8cd b000 	str.w	fp, [sp]
 80151b8:	4623      	mov	r3, r4
 80151ba:	9a06      	ldr	r2, [sp, #24]
 80151bc:	4641      	mov	r1, r8
 80151be:	4628      	mov	r0, r5
 80151c0:	f7ff fe02 	bl	8014dc8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 80151c4:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
 80151c8:	4638      	mov	r0, r7
 80151ca:	f017 ffa1 	bl	802d110 <_ZN8touchgfx6Canvas6renderEh>
 80151ce:	4604      	mov	r4, r0
 80151d0:	4638      	mov	r0, r7
 80151d2:	f7ff fe99 	bl	8014f08 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 80151d6:	4620      	mov	r0, r4
 80151d8:	b035      	add	sp, #212	@ 0xd4
 80151da:	ecbd 8b04 	vpop	{d8-d9}
 80151de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80151e2:	2401      	movs	r4, #1
 80151e4:	e7f7      	b.n	80151d6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
 80151e6:	bf00      	nop
 80151e8:	00000000 	.word	0x00000000
 80151ec:	08032440 	.word	0x08032440

080151f0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
 80151f0:	b510      	push	{r4, lr}
 80151f2:	4604      	mov	r4, r0
 80151f4:	f7ff fe88 	bl	8014f08 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 80151f8:	4620      	mov	r0, r4
 80151fa:	21b0      	movs	r1, #176	@ 0xb0
 80151fc:	f018 fb57 	bl	802d8ae <_ZdlPvj>
 8015200:	4620      	mov	r0, r4
 8015202:	bd10      	pop	{r4, pc}

08015204 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
 8015204:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015208:	ed2d 8b06 	vpush	{d8-d10}
 801520c:	b0aa      	sub	sp, #168	@ 0xa8
 801520e:	4698      	mov	r8, r3
 8015210:	23ff      	movs	r3, #255	@ 0xff
 8015212:	4607      	mov	r7, r0
 8015214:	9300      	str	r3, [sp, #0]
 8015216:	4689      	mov	r9, r1
 8015218:	4692      	mov	sl, r2
 801521a:	6981      	ldr	r1, [r0, #24]
 801521c:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
 801521e:	ed9f 8a82 	vldr	s16, [pc, #520]	@ 8015428 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 8015222:	1d02      	adds	r2, r0, #4
 8015224:	a80d      	add	r0, sp, #52	@ 0x34
 8015226:	f017 fedf 	bl	802cfe8 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 801522a:	7f3b      	ldrb	r3, [r7, #28]
 801522c:	eddf 0a7e 	vldr	s1, [pc, #504]	@ 8015428 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 8015230:	1e5a      	subs	r2, r3, #1
 8015232:	4253      	negs	r3, r2
 8015234:	f107 0534 	add.w	r5, r7, #52	@ 0x34
 8015238:	4153      	adcs	r3, r2
 801523a:	eeb0 0a60 	vmov.f32	s0, s1
 801523e:	4628      	mov	r0, r5
 8015240:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
 8015244:	f007 fa15 	bl	801c672 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8015248:	44ca      	add	sl, r9
 801524a:	eeb0 9a40 	vmov.f32	s18, s0
 801524e:	eef0 9a60 	vmov.f32	s19, s1
 8015252:	eef0 8a48 	vmov.f32	s17, s16
 8015256:	2400      	movs	r4, #0
 8015258:	45ca      	cmp	sl, r9
 801525a:	f000 80cd 	beq.w	80153f8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
 801525e:	f819 3b01 	ldrb.w	r3, [r9], #1
 8015262:	2b06      	cmp	r3, #6
 8015264:	d8f8      	bhi.n	8015258 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 8015266:	e8df f003 	tbb	[pc, r3]
 801526a:	0804      	.short	0x0804
 801526c:	58533f2a 	.word	0x58533f2a
 8015270:	8a          	.byte	0x8a
 8015271:	00          	.byte	0x00
 8015272:	a80d      	add	r0, sp, #52	@ 0x34
 8015274:	f017 ff2a 	bl	802d0cc <_ZN8touchgfx6Canvas5closeEv>
 8015278:	e7ee      	b.n	8015258 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 801527a:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 801527e:	edd3 8a00 	vldr	s17, [r3]
 8015282:	ed93 8a01 	vldr	s16, [r3, #4]
 8015286:	eeb0 0a68 	vmov.f32	s0, s17
 801528a:	eef0 0a48 	vmov.f32	s1, s16
 801528e:	4628      	mov	r0, r5
 8015290:	f007 f9ef 	bl	801c672 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8015294:	eef0 7a60 	vmov.f32	s15, s1
 8015298:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 801529c:	a80d      	add	r0, sp, #52	@ 0x34
 801529e:	ee17 2a90 	vmov	r2, s15
 80152a2:	eef0 7a40 	vmov.f32	s15, s0
 80152a6:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 80152aa:	eeb0 9a40 	vmov.f32	s18, s0
 80152ae:	ee17 1a90 	vmov	r1, s15
 80152b2:	eef0 9a60 	vmov.f32	s19, s1
 80152b6:	f017 ffe3 	bl	802d280 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80152ba:	3402      	adds	r4, #2
 80152bc:	e7cc      	b.n	8015258 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 80152be:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 80152c2:	edd3 8a00 	vldr	s17, [r3]
 80152c6:	ed93 8a01 	vldr	s16, [r3, #4]
 80152ca:	eeb0 0a68 	vmov.f32	s0, s17
 80152ce:	eef0 0a48 	vmov.f32	s1, s16
 80152d2:	4628      	mov	r0, r5
 80152d4:	f007 f9cd 	bl	801c672 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80152d8:	a80d      	add	r0, sp, #52	@ 0x34
 80152da:	eeb0 9a40 	vmov.f32	s18, s0
 80152de:	eef0 9a60 	vmov.f32	s19, s1
 80152e2:	f7ff fe01 	bl	8014ee8 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 80152e6:	e7e8      	b.n	80152ba <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
 80152e8:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 80152ec:	edd3 8a00 	vldr	s17, [r3]
 80152f0:	eef0 0a48 	vmov.f32	s1, s16
 80152f4:	eeb0 0a68 	vmov.f32	s0, s17
 80152f8:	4628      	mov	r0, r5
 80152fa:	f007 f9ba 	bl	801c672 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80152fe:	a80d      	add	r0, sp, #52	@ 0x34
 8015300:	eeb0 9a40 	vmov.f32	s18, s0
 8015304:	eef0 9a60 	vmov.f32	s19, s1
 8015308:	3401      	adds	r4, #1
 801530a:	f7ff fded 	bl	8014ee8 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 801530e:	e7a3      	b.n	8015258 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 8015310:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 8015314:	ed93 8a00 	vldr	s16, [r3]
 8015318:	e7ea      	b.n	80152f0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
 801531a:	1ca3      	adds	r3, r4, #2
 801531c:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 8015320:	ed53 0a01 	vldr	s1, [r3, #-4]
 8015324:	ed13 0a02 	vldr	s0, [r3, #-8]
 8015328:	edd3 8a00 	vldr	s17, [r3]
 801532c:	ed93 8a01 	vldr	s16, [r3, #4]
 8015330:	4628      	mov	r0, r5
 8015332:	f007 f99e 	bl	801c672 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8015336:	4628      	mov	r0, r5
 8015338:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 801533c:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 8015340:	eeb0 0a68 	vmov.f32	s0, s17
 8015344:	eef0 0a48 	vmov.f32	s1, s16
 8015348:	f007 f993 	bl	801c672 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 801534c:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
 8015350:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
 8015354:	eef0 2a60 	vmov.f32	s5, s1
 8015358:	eeb0 2a40 	vmov.f32	s4, s0
 801535c:	eeb0 aa40 	vmov.f32	s20, s0
 8015360:	eef0 aa60 	vmov.f32	s21, s1
 8015364:	eeb0 0a49 	vmov.f32	s0, s18
 8015368:	eef0 0a69 	vmov.f32	s1, s19
 801536c:	a80d      	add	r0, sp, #52	@ 0x34
 801536e:	f7ff f9a7 	bl	80146c0 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 8015372:	3404      	adds	r4, #4
 8015374:	eef0 9a6a 	vmov.f32	s19, s21
 8015378:	eeb0 9a4a 	vmov.f32	s18, s20
 801537c:	e76c      	b.n	8015258 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 801537e:	1d26      	adds	r6, r4, #4
 8015380:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 8015384:	ed56 0a03 	vldr	s1, [r6, #-12]
 8015388:	ed16 0a04 	vldr	s0, [r6, #-16]
 801538c:	edd6 8a00 	vldr	s17, [r6]
 8015390:	ed96 8a01 	vldr	s16, [r6, #4]
 8015394:	4628      	mov	r0, r5
 8015396:	f007 f96c 	bl	801c672 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 801539a:	4628      	mov	r0, r5
 801539c:	ed8d 0a07 	vstr	s0, [sp, #28]
 80153a0:	edcd 0a08 	vstr	s1, [sp, #32]
 80153a4:	ed16 0a02 	vldr	s0, [r6, #-8]
 80153a8:	ed56 0a01 	vldr	s1, [r6, #-4]
 80153ac:	f007 f961 	bl	801c672 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80153b0:	4628      	mov	r0, r5
 80153b2:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 80153b6:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 80153ba:	eeb0 0a68 	vmov.f32	s0, s17
 80153be:	eef0 0a48 	vmov.f32	s1, s16
 80153c2:	f007 f956 	bl	801c672 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80153c6:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
 80153ca:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
 80153ce:	eddd 1a08 	vldr	s3, [sp, #32]
 80153d2:	ed9d 1a07 	vldr	s2, [sp, #28]
 80153d6:	eef0 3a60 	vmov.f32	s7, s1
 80153da:	eeb0 3a40 	vmov.f32	s6, s0
 80153de:	eeb0 aa40 	vmov.f32	s20, s0
 80153e2:	eef0 aa60 	vmov.f32	s21, s1
 80153e6:	eeb0 0a49 	vmov.f32	s0, s18
 80153ea:	eef0 0a69 	vmov.f32	s1, s19
 80153ee:	a80d      	add	r0, sp, #52	@ 0x34
 80153f0:	f7ff f985 	bl	80146fe <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 80153f4:	3406      	adds	r4, #6
 80153f6:	e7bd      	b.n	8015374 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
 80153f8:	7f7b      	ldrb	r3, [r7, #29]
 80153fa:	7fb9      	ldrb	r1, [r7, #30]
 80153fc:	4359      	muls	r1, r3
 80153fe:	1c4b      	adds	r3, r1, #1
 8015400:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8015404:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8015408:	a80d      	add	r0, sp, #52	@ 0x34
 801540a:	f017 fe81 	bl	802d110 <_ZN8touchgfx6Canvas6renderEh>
 801540e:	4b07      	ldr	r3, [pc, #28]	@ (801542c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
 8015410:	930d      	str	r3, [sp, #52]	@ 0x34
 8015412:	4604      	mov	r4, r0
 8015414:	a812      	add	r0, sp, #72	@ 0x48
 8015416:	f002 ffab 	bl	8018370 <_ZN8touchgfx7OutlineD1Ev>
 801541a:	4620      	mov	r0, r4
 801541c:	b02a      	add	sp, #168	@ 0xa8
 801541e:	ecbd 8b06 	vpop	{d8-d10}
 8015422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015426:	bf00      	nop
 8015428:	00000000 	.word	0x00000000
 801542c:	08033554 	.word	0x08033554

08015430 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
 8015430:	b410      	push	{r4}
 8015432:	7f04      	ldrb	r4, [r0, #28]
 8015434:	b11c      	cbz	r4, 801543e <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
 8015436:	f85d 4b04 	ldr.w	r4, [sp], #4
 801543a:	f7ff bee3 	b.w	8015204 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
 801543e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8015442:	f7ff bd6d 	b.w	8014f20 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>
	...

08015448 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
 8015448:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801544c:	4691      	mov	r9, r2
 801544e:	4602      	mov	r2, r0
 8015450:	4605      	mov	r5, r0
 8015452:	f852 0f26 	ldr.w	r0, [r2, #38]!
 8015456:	b085      	sub	sp, #20
 8015458:	4688      	mov	r8, r1
 801545a:	6851      	ldr	r1, [r2, #4]
 801545c:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
 8015460:	469a      	mov	sl, r3
 8015462:	ab02      	add	r3, sp, #8
 8015464:	c303      	stmia	r3!, {r0, r1}
 8015466:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801546a:	2b00      	cmp	r3, #0
 801546c:	af02      	add	r7, sp, #8
 801546e:	dd08      	ble.n	8015482 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 8015470:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
 8015474:	2c00      	cmp	r4, #0
 8015476:	dd04      	ble.n	8015482 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 8015478:	4a2e      	ldr	r2, [pc, #184]	@ (8015534 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xec>)
 801547a:	7812      	ldrb	r2, [r2, #0]
 801547c:	b122      	cbz	r2, 8015488 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x40>
 801547e:	2a01      	cmp	r2, #1
 8015480:	d02d      	beq.n	80154de <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x96>
 8015482:	b005      	add	sp, #20
 8015484:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015488:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801548c:	441c      	add	r4, r3
 801548e:	b2a4      	uxth	r4, r4
 8015490:	b226      	sxth	r6, r4
 8015492:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8015496:	42b3      	cmp	r3, r6
 8015498:	daf3      	bge.n	8015482 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 801549a:	e9cd b700 	strd	fp, r7, [sp]
 801549e:	4653      	mov	r3, sl
 80154a0:	464a      	mov	r2, r9
 80154a2:	4641      	mov	r1, r8
 80154a4:	4628      	mov	r0, r5
 80154a6:	f7ff ffc3 	bl	8015430 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 80154aa:	b940      	cbnz	r0, 80154be <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 80154ac:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80154b0:	2b01      	cmp	r3, #1
 80154b2:	d004      	beq.n	80154be <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 80154b4:	3301      	adds	r3, #1
 80154b6:	105b      	asrs	r3, r3, #1
 80154b8:	f8ad 300e 	strh.w	r3, [sp, #14]
 80154bc:	e7ed      	b.n	801549a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x52>
 80154be:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 80154c2:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80154c6:	4413      	add	r3, r2
 80154c8:	b29b      	uxth	r3, r3
 80154ca:	441a      	add	r2, r3
 80154cc:	b212      	sxth	r2, r2
 80154ce:	4296      	cmp	r6, r2
 80154d0:	f8ad 300a 	strh.w	r3, [sp, #10]
 80154d4:	dadd      	bge.n	8015492 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 80154d6:	1ae3      	subs	r3, r4, r3
 80154d8:	f8ad 300e 	strh.w	r3, [sp, #14]
 80154dc:	e7d9      	b.n	8015492 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 80154de:	f8bd 4008 	ldrh.w	r4, [sp, #8]
 80154e2:	441c      	add	r4, r3
 80154e4:	b2a4      	uxth	r4, r4
 80154e6:	b226      	sxth	r6, r4
 80154e8:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 80154ec:	42b3      	cmp	r3, r6
 80154ee:	dac8      	bge.n	8015482 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 80154f0:	e9cd b700 	strd	fp, r7, [sp]
 80154f4:	4653      	mov	r3, sl
 80154f6:	464a      	mov	r2, r9
 80154f8:	4641      	mov	r1, r8
 80154fa:	4628      	mov	r0, r5
 80154fc:	f7ff ff98 	bl	8015430 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 8015500:	b940      	cbnz	r0, 8015514 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 8015502:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8015506:	2b01      	cmp	r3, #1
 8015508:	d004      	beq.n	8015514 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 801550a:	3301      	adds	r3, #1
 801550c:	105b      	asrs	r3, r3, #1
 801550e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8015512:	e7ed      	b.n	80154f0 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa8>
 8015514:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8015518:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801551c:	4413      	add	r3, r2
 801551e:	b29b      	uxth	r3, r3
 8015520:	441a      	add	r2, r3
 8015522:	b212      	sxth	r2, r2
 8015524:	4296      	cmp	r6, r2
 8015526:	f8ad 3008 	strh.w	r3, [sp, #8]
 801552a:	dadd      	bge.n	80154e8 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 801552c:	1ae3      	subs	r3, r4, r3
 801552e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8015532:	e7d9      	b.n	80154e8 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 8015534:	2000e404 	.word	0x2000e404

08015538 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8015538:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801553a:	6803      	ldr	r3, [r0, #0]
 801553c:	460d      	mov	r5, r1
 801553e:	4604      	mov	r4, r0
 8015540:	4601      	mov	r1, r0
 8015542:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8015544:	a802      	add	r0, sp, #8
 8015546:	4798      	blx	r3
 8015548:	6828      	ldr	r0, [r5, #0]
 801554a:	6869      	ldr	r1, [r5, #4]
 801554c:	466b      	mov	r3, sp
 801554e:	c303      	stmia	r3!, {r0, r1}
 8015550:	4668      	mov	r0, sp
 8015552:	4619      	mov	r1, r3
 8015554:	f7fd fb6e 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 8015558:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 801555a:	b188      	cbz	r0, 8015580 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801555c:	6803      	ldr	r3, [r0, #0]
 801555e:	1d21      	adds	r1, r4, #4
 8015560:	68db      	ldr	r3, [r3, #12]
 8015562:	4798      	blx	r3
 8015564:	b160      	cbz	r0, 8015580 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8015566:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801556a:	2b00      	cmp	r3, #0
 801556c:	dd08      	ble.n	8015580 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801556e:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8015572:	2d00      	cmp	r5, #0
 8015574:	dd04      	ble.n	8015580 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8015576:	4a2b      	ldr	r2, [pc, #172]	@ (8015624 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8015578:	7812      	ldrb	r2, [r2, #0]
 801557a:	b11a      	cbz	r2, 8015584 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 801557c:	2a01      	cmp	r2, #1
 801557e:	d029      	beq.n	80155d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8015580:	b004      	add	sp, #16
 8015582:	bd70      	pop	{r4, r5, r6, pc}
 8015584:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8015588:	441d      	add	r5, r3
 801558a:	b2ad      	uxth	r5, r5
 801558c:	b22e      	sxth	r6, r5
 801558e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8015592:	42b3      	cmp	r3, r6
 8015594:	daf4      	bge.n	8015580 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8015596:	6823      	ldr	r3, [r4, #0]
 8015598:	4669      	mov	r1, sp
 801559a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 801559c:	4620      	mov	r0, r4
 801559e:	4798      	blx	r3
 80155a0:	b940      	cbnz	r0, 80155b4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80155a2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80155a6:	2b01      	cmp	r3, #1
 80155a8:	d004      	beq.n	80155b4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80155aa:	3301      	adds	r3, #1
 80155ac:	105b      	asrs	r3, r3, #1
 80155ae:	f8ad 3006 	strh.w	r3, [sp, #6]
 80155b2:	e7f0      	b.n	8015596 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 80155b4:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80155b8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80155bc:	4413      	add	r3, r2
 80155be:	b29b      	uxth	r3, r3
 80155c0:	441a      	add	r2, r3
 80155c2:	b212      	sxth	r2, r2
 80155c4:	4296      	cmp	r6, r2
 80155c6:	f8ad 3002 	strh.w	r3, [sp, #2]
 80155ca:	dae0      	bge.n	801558e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 80155cc:	1aeb      	subs	r3, r5, r3
 80155ce:	f8ad 3006 	strh.w	r3, [sp, #6]
 80155d2:	e7dc      	b.n	801558e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 80155d4:	f8bd 5000 	ldrh.w	r5, [sp]
 80155d8:	441d      	add	r5, r3
 80155da:	b2ad      	uxth	r5, r5
 80155dc:	b22e      	sxth	r6, r5
 80155de:	f9bd 3000 	ldrsh.w	r3, [sp]
 80155e2:	42b3      	cmp	r3, r6
 80155e4:	dacc      	bge.n	8015580 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80155e6:	6823      	ldr	r3, [r4, #0]
 80155e8:	4669      	mov	r1, sp
 80155ea:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80155ec:	4620      	mov	r0, r4
 80155ee:	4798      	blx	r3
 80155f0:	b940      	cbnz	r0, 8015604 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 80155f2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80155f6:	2b01      	cmp	r3, #1
 80155f8:	d004      	beq.n	8015604 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 80155fa:	3301      	adds	r3, #1
 80155fc:	105b      	asrs	r3, r3, #1
 80155fe:	f8ad 3004 	strh.w	r3, [sp, #4]
 8015602:	e7f0      	b.n	80155e6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8015604:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8015608:	f8bd 3000 	ldrh.w	r3, [sp]
 801560c:	4413      	add	r3, r2
 801560e:	b29b      	uxth	r3, r3
 8015610:	441a      	add	r2, r3
 8015612:	b212      	sxth	r2, r2
 8015614:	4296      	cmp	r6, r2
 8015616:	f8ad 3000 	strh.w	r3, [sp]
 801561a:	dae0      	bge.n	80155de <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 801561c:	1aeb      	subs	r3, r5, r3
 801561e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8015622:	e7dc      	b.n	80155de <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8015624:	2000e404 	.word	0x2000e404

08015628 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8015628:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801562a:	6803      	ldr	r3, [r0, #0]
 801562c:	4604      	mov	r4, r0
 801562e:	4601      	mov	r1, r0
 8015630:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8015632:	4668      	mov	r0, sp
 8015634:	4798      	blx	r3
 8015636:	2100      	movs	r1, #0
 8015638:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801563c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8015640:	9102      	str	r1, [sp, #8]
 8015642:	4668      	mov	r0, sp
 8015644:	a902      	add	r1, sp, #8
 8015646:	f8ad 200c 	strh.w	r2, [sp, #12]
 801564a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801564e:	f7fd faf1 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 8015652:	6823      	ldr	r3, [r4, #0]
 8015654:	4669      	mov	r1, sp
 8015656:	691b      	ldr	r3, [r3, #16]
 8015658:	4620      	mov	r0, r4
 801565a:	4798      	blx	r3
 801565c:	b004      	add	sp, #16
 801565e:	bd10      	pop	{r4, pc}

08015660 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8015660:	2101      	movs	r1, #1
 8015662:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 8015666:	490b      	ldr	r1, [pc, #44]	@ (8015694 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8015668:	6001      	str	r1, [r0, #0]
 801566a:	2200      	movs	r2, #0
 801566c:	21ff      	movs	r1, #255	@ 0xff
 801566e:	8082      	strh	r2, [r0, #4]
 8015670:	80c2      	strh	r2, [r0, #6]
 8015672:	8102      	strh	r2, [r0, #8]
 8015674:	8142      	strh	r2, [r0, #10]
 8015676:	8182      	strh	r2, [r0, #12]
 8015678:	81c2      	strh	r2, [r0, #14]
 801567a:	8202      	strh	r2, [r0, #16]
 801567c:	8242      	strh	r2, [r0, #18]
 801567e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8015682:	61c2      	str	r2, [r0, #28]
 8015684:	8402      	strh	r2, [r0, #32]
 8015686:	8442      	strh	r2, [r0, #34]	@ 0x22
 8015688:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 801568c:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
 8015690:	6282      	str	r2, [r0, #40]	@ 0x28
 8015692:	4770      	bx	lr
 8015694:	080324a0 	.word	0x080324a0

08015698 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>:
 8015698:	6301      	str	r1, [r0, #48]	@ 0x30
 801569a:	4770      	bx	lr

0801569c <_ZNK8touchgfx17AbstractDataGraph9getScaleXEv>:
 801569c:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 801569e:	4770      	bx	lr

080156a0 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>:
 80156a0:	6341      	str	r1, [r0, #52]	@ 0x34
 80156a2:	4770      	bx	lr

080156a4 <_ZNK8touchgfx17AbstractDataGraph9getScaleYEv>:
 80156a4:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 80156a6:	4770      	bx	lr

080156a8 <_ZN8touchgfx16DynamicDataGraph14beforeAddValueEv>:
 80156a8:	4770      	bx	lr

080156aa <_ZNK8touchgfx16DynamicDataGraph18indexToGlobalIndexEs>:
 80156aa:	4608      	mov	r0, r1
 80156ac:	4770      	bx	lr

080156ae <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE>:
 80156ae:	b530      	push	{r4, r5, lr}
 80156b0:	460d      	mov	r5, r1
 80156b2:	8f83      	ldrh	r3, [r0, #60]	@ 0x3c
 80156b4:	8949      	ldrh	r1, [r1, #10]
 80156b6:	1ac9      	subs	r1, r1, r3
 80156b8:	6803      	ldr	r3, [r0, #0]
 80156ba:	b085      	sub	sp, #20
 80156bc:	f8d3 3104 	ldr.w	r3, [r3, #260]	@ 0x104
 80156c0:	f10d 0206 	add.w	r2, sp, #6
 80156c4:	b209      	sxth	r1, r1
 80156c6:	4604      	mov	r4, r0
 80156c8:	4798      	blx	r3
 80156ca:	b1a0      	cbz	r0, 80156f6 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 80156cc:	792b      	ldrb	r3, [r5, #4]
 80156ce:	b993      	cbnz	r3, 80156f6 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 80156d0:	f8d4 0128 	ldr.w	r0, [r4, #296]	@ 0x128
 80156d4:	b178      	cbz	r0, 80156f6 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 80156d6:	6803      	ldr	r3, [r0, #0]
 80156d8:	68db      	ldr	r3, [r3, #12]
 80156da:	4798      	blx	r3
 80156dc:	b158      	cbz	r0, 80156f6 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 80156de:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80156e2:	f8d4 0128 	ldr.w	r0, [r4, #296]	@ 0x128
 80156e6:	f8ad 3008 	strh.w	r3, [sp, #8]
 80156ea:	9503      	str	r5, [sp, #12]
 80156ec:	6803      	ldr	r3, [r0, #0]
 80156ee:	aa02      	add	r2, sp, #8
 80156f0:	689b      	ldr	r3, [r3, #8]
 80156f2:	4621      	mov	r1, r4
 80156f4:	4798      	blx	r3
 80156f6:	b005      	add	sp, #20
 80156f8:	bd30      	pop	{r4, r5, pc}

080156fa <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii>:
 80156fa:	b510      	push	{r4, lr}
 80156fc:	428a      	cmp	r2, r1
 80156fe:	bfbe      	ittt	lt
 8015700:	460b      	movlt	r3, r1
 8015702:	4611      	movlt	r1, r2
 8015704:	461a      	movlt	r2, r3
 8015706:	f8d0 312c 	ldr.w	r3, [r0, #300]	@ 0x12c
 801570a:	428b      	cmp	r3, r1
 801570c:	4604      	mov	r4, r0
 801570e:	d103      	bne.n	8015718 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x1e>
 8015710:	f8d0 3130 	ldr.w	r3, [r0, #304]	@ 0x130
 8015714:	4293      	cmp	r3, r2
 8015716:	d011      	beq.n	801573c <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x42>
 8015718:	f8c4 112c 	str.w	r1, [r4, #300]	@ 0x12c
 801571c:	f8c4 2130 	str.w	r2, [r4, #304]	@ 0x130
 8015720:	f104 00bc 	add.w	r0, r4, #188	@ 0xbc
 8015724:	f006 fb68 	bl	801bdf8 <_ZNK8touchgfx8Drawable10invalidateEv>
 8015728:	f104 0038 	add.w	r0, r4, #56	@ 0x38
 801572c:	f006 fb64 	bl	801bdf8 <_ZNK8touchgfx8Drawable10invalidateEv>
 8015730:	f104 00e8 	add.w	r0, r4, #232	@ 0xe8
 8015734:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015738:	f006 bb5e 	b.w	801bdf8 <_ZNK8touchgfx8Drawable10invalidateEv>
 801573c:	bd10      	pop	{r4, pc}

0801573e <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>:
 801573e:	b510      	push	{r4, lr}
 8015740:	428a      	cmp	r2, r1
 8015742:	bfbe      	ittt	lt
 8015744:	460b      	movlt	r3, r1
 8015746:	4611      	movlt	r1, r2
 8015748:	461a      	movlt	r2, r3
 801574a:	f8d0 3134 	ldr.w	r3, [r0, #308]	@ 0x134
 801574e:	428b      	cmp	r3, r1
 8015750:	4604      	mov	r4, r0
 8015752:	d103      	bne.n	801575c <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x1e>
 8015754:	f8d0 3138 	ldr.w	r3, [r0, #312]	@ 0x138
 8015758:	4293      	cmp	r3, r2
 801575a:	d011      	beq.n	8015780 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x42>
 801575c:	f8c4 1134 	str.w	r1, [r4, #308]	@ 0x134
 8015760:	f8c4 2138 	str.w	r2, [r4, #312]	@ 0x138
 8015764:	f104 0064 	add.w	r0, r4, #100	@ 0x64
 8015768:	f006 fb46 	bl	801bdf8 <_ZNK8touchgfx8Drawable10invalidateEv>
 801576c:	f104 0038 	add.w	r0, r4, #56	@ 0x38
 8015770:	f006 fb42 	bl	801bdf8 <_ZNK8touchgfx8Drawable10invalidateEv>
 8015774:	f104 0090 	add.w	r0, r4, #144	@ 0x90
 8015778:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801577c:	f006 bb3c 	b.w	801bdf8 <_ZNK8touchgfx8Drawable10invalidateEv>
 8015780:	bd10      	pop	{r4, pc}

08015782 <_ZN8touchgfx17AbstractDataGraph5clearEv>:
 8015782:	2300      	movs	r3, #0
 8015784:	f8a0 311e 	strh.w	r3, [r0, #286]	@ 0x11e
 8015788:	3038      	adds	r0, #56	@ 0x38
 801578a:	f006 bb35 	b.w	801bdf8 <_ZNK8touchgfx8Drawable10invalidateEv>

0801578e <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi>:
 801578e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015792:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	@ 0x11e
 8015796:	4605      	mov	r5, r0
 8015798:	460f      	mov	r7, r1
 801579a:	4616      	mov	r6, r2
 801579c:	2b00      	cmp	r3, #0
 801579e:	d03e      	beq.n	801581e <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x90>
 80157a0:	6803      	ldr	r3, [r0, #0]
 80157a2:	f8d3 3130 	ldr.w	r3, [r3, #304]	@ 0x130
 80157a6:	4798      	blx	r3
 80157a8:	682b      	ldr	r3, [r5, #0]
 80157aa:	b204      	sxth	r4, r0
 80157ac:	f8d3 3134 	ldr.w	r3, [r3, #308]	@ 0x134
 80157b0:	4628      	mov	r0, r5
 80157b2:	4798      	blx	r3
 80157b4:	b203      	sxth	r3, r0
 80157b6:	429c      	cmp	r4, r3
 80157b8:	bfc8      	it	gt
 80157ba:	4622      	movgt	r2, r4
 80157bc:	f9b5 011e 	ldrsh.w	r0, [r5, #286]	@ 0x11e
 80157c0:	bfc8      	it	gt
 80157c2:	461c      	movgt	r4, r3
 80157c4:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
 80157c8:	bfc8      	it	gt
 80157ca:	4613      	movgt	r3, r2
 80157cc:	4284      	cmp	r4, r0
 80157ce:	da26      	bge.n	801581e <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x90>
 80157d0:	4298      	cmp	r0, r3
 80157d2:	bfa8      	it	ge
 80157d4:	4618      	movge	r0, r3
 80157d6:	2800      	cmp	r0, #0
 80157d8:	db21      	blt.n	801581e <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x90>
 80157da:	b9ef      	cbnz	r7, 8015818 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8a>
 80157dc:	f8d5 3144 	ldr.w	r3, [r5, #324]	@ 0x144
 80157e0:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 80157e4:	4619      	mov	r1, r3
 80157e6:	42a0      	cmp	r0, r4
 80157e8:	dd0b      	ble.n	8015802 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x74>
 80157ea:	f8d5 2144 	ldr.w	r2, [r5, #324]	@ 0x144
 80157ee:	f852 2024 	ldr.w	r2, [r2, r4, lsl #2]
 80157f2:	4291      	cmp	r1, r2
 80157f4:	bfa8      	it	ge
 80157f6:	4611      	movge	r1, r2
 80157f8:	4293      	cmp	r3, r2
 80157fa:	bfb8      	it	lt
 80157fc:	4613      	movlt	r3, r2
 80157fe:	3401      	adds	r4, #1
 8015800:	e7f1      	b.n	80157e6 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x58>
 8015802:	1b89      	subs	r1, r1, r6
 8015804:	18f2      	adds	r2, r6, r3
 8015806:	4291      	cmp	r1, r2
 8015808:	d009      	beq.n	801581e <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x90>
 801580a:	682b      	ldr	r3, [r5, #0]
 801580c:	4628      	mov	r0, r5
 801580e:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 8015812:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8015816:	4718      	bx	r3
 8015818:	4273      	negs	r3, r6
 801581a:	4631      	mov	r1, r6
 801581c:	e7e3      	b.n	80157e6 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x58>
 801581e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08015822 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE>:
 8015822:	b530      	push	{r4, r5, lr}
 8015824:	790b      	ldrb	r3, [r1, #4]
 8015826:	2b02      	cmp	r3, #2
 8015828:	b085      	sub	sp, #20
 801582a:	4604      	mov	r4, r0
 801582c:	460d      	mov	r5, r1
 801582e:	d020      	beq.n	8015872 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 8015830:	8f83      	ldrh	r3, [r0, #60]	@ 0x3c
 8015832:	88c9      	ldrh	r1, [r1, #6]
 8015834:	1ac9      	subs	r1, r1, r3
 8015836:	6803      	ldr	r3, [r0, #0]
 8015838:	f10d 0206 	add.w	r2, sp, #6
 801583c:	f8d3 3104 	ldr.w	r3, [r3, #260]	@ 0x104
 8015840:	b209      	sxth	r1, r1
 8015842:	4798      	blx	r3
 8015844:	b1a8      	cbz	r0, 8015872 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 8015846:	792b      	ldrb	r3, [r5, #4]
 8015848:	2b01      	cmp	r3, #1
 801584a:	d812      	bhi.n	8015872 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 801584c:	f8d4 0124 	ldr.w	r0, [r4, #292]	@ 0x124
 8015850:	b178      	cbz	r0, 8015872 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 8015852:	6803      	ldr	r3, [r0, #0]
 8015854:	68db      	ldr	r3, [r3, #12]
 8015856:	4798      	blx	r3
 8015858:	b158      	cbz	r0, 8015872 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 801585a:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 801585e:	f8d4 0124 	ldr.w	r0, [r4, #292]	@ 0x124
 8015862:	f8ad 3008 	strh.w	r3, [sp, #8]
 8015866:	9503      	str	r5, [sp, #12]
 8015868:	6803      	ldr	r3, [r0, #0]
 801586a:	aa02      	add	r2, sp, #8
 801586c:	689b      	ldr	r3, [r3, #8]
 801586e:	4621      	mov	r1, r4
 8015870:	4798      	blx	r3
 8015872:	b005      	add	sp, #20
 8015874:	bd30      	pop	{r4, r5, pc}

08015876 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_>:
 8015876:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801587a:	4604      	mov	r4, r0
 801587c:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	@ 0x11e
 8015880:	9e06      	ldr	r6, [sp, #24]
 8015882:	4690      	mov	r8, r2
 8015884:	461f      	mov	r7, r3
 8015886:	b928      	cbnz	r0, 8015894 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1e>
 8015888:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 801588c:	8033      	strh	r3, [r6, #0]
 801588e:	803b      	strh	r3, [r7, #0]
 8015890:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015894:	f8b4 2118 	ldrh.w	r2, [r4, #280]	@ 0x118
 8015898:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	@ 0x116
 801589c:	1883      	adds	r3, r0, r2
 801589e:	f8b4 2040 	ldrh.w	r2, [r4, #64]	@ 0x40
 80158a2:	1ad2      	subs	r2, r2, r3
 80158a4:	b212      	sxth	r2, r2
 80158a6:	2a01      	cmp	r2, #1
 80158a8:	dc07      	bgt.n	80158ba <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x44>
 80158aa:	2300      	movs	r3, #0
 80158ac:	803b      	strh	r3, [r7, #0]
 80158ae:	f8b4 311e 	ldrh.w	r3, [r4, #286]	@ 0x11e
 80158b2:	3b01      	subs	r3, #1
 80158b4:	8033      	strh	r3, [r6, #0]
 80158b6:	2001      	movs	r0, #1
 80158b8:	e7ea      	b.n	8015890 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 80158ba:	1a08      	subs	r0, r1, r0
 80158bc:	f8d4 3130 	ldr.w	r3, [r4, #304]	@ 0x130
 80158c0:	f8d4 112c 	ldr.w	r1, [r4, #300]	@ 0x12c
 80158c4:	6b25      	ldr	r5, [r4, #48]	@ 0x30
 80158c6:	1a5b      	subs	r3, r3, r1
 80158c8:	ea4f 1040 	mov.w	r0, r0, lsl #5
 80158cc:	d45b      	bmi.n	8015986 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x110>
 80158ce:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 80158d2:	fb93 f1f5 	sdiv	r1, r3, r5
 80158d6:	2302      	movs	r3, #2
 80158d8:	fb91 f1f3 	sdiv	r1, r1, r3
 80158dc:	3a01      	subs	r2, #1
 80158de:	f007 f822 	bl	801c926 <_ZN8touchgfx6muldivElll>
 80158e2:	f8d4 112c 	ldr.w	r1, [r4, #300]	@ 0x12c
 80158e6:	f8d4 c030 	ldr.w	ip, [r4, #48]	@ 0x30
 80158ea:	2900      	cmp	r1, #0
 80158ec:	db57      	blt.n	801599e <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x128>
 80158ee:	eb0c 0341 	add.w	r3, ip, r1, lsl #1
 80158f2:	2502      	movs	r5, #2
 80158f4:	fb93 f3fc 	sdiv	r3, r3, ip
 80158f8:	fb93 f3f5 	sdiv	r3, r3, r5
 80158fc:	eb00 1543 	add.w	r5, r0, r3, lsl #5
 8015900:	f8d4 2130 	ldr.w	r2, [r4, #304]	@ 0x130
 8015904:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	@ 0x116
 8015908:	1a52      	subs	r2, r2, r1
 801590a:	eba8 0003 	sub.w	r0, r8, r3
 801590e:	ea4f 1040 	mov.w	r0, r0, lsl #5
 8015912:	d450      	bmi.n	80159b6 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x140>
 8015914:	eb0c 0242 	add.w	r2, ip, r2, lsl #1
 8015918:	fb92 f1fc 	sdiv	r1, r2, ip
 801591c:	2202      	movs	r2, #2
 801591e:	fb91 f1f2 	sdiv	r1, r1, r2
 8015922:	f8b4 2118 	ldrh.w	r2, [r4, #280]	@ 0x118
 8015926:	4413      	add	r3, r2
 8015928:	f8b4 2040 	ldrh.w	r2, [r4, #64]	@ 0x40
 801592c:	1ad2      	subs	r2, r2, r3
 801592e:	b212      	sxth	r2, r2
 8015930:	3a01      	subs	r2, #1
 8015932:	f006 fff8 	bl	801c926 <_ZN8touchgfx6muldivElll>
 8015936:	f8d4 312c 	ldr.w	r3, [r4, #300]	@ 0x12c
 801593a:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 801593c:	2b00      	cmp	r3, #0
 801593e:	db46      	blt.n	80159ce <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x158>
 8015940:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015944:	fb93 f3f2 	sdiv	r3, r3, r2
 8015948:	2202      	movs	r2, #2
 801594a:	fb93 f3f2 	sdiv	r3, r3, r2
 801594e:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 8015952:	429d      	cmp	r5, r3
 8015954:	bfde      	ittt	le
 8015956:	461a      	movle	r2, r3
 8015958:	462b      	movle	r3, r5
 801595a:	4615      	movle	r5, r2
 801595c:	2d00      	cmp	r5, #0
 801595e:	bfa4      	itt	ge
 8015960:	351f      	addge	r5, #31
 8015962:	116d      	asrge	r5, r5, #5
 8015964:	f04f 0020 	mov.w	r0, #32
 8015968:	bfb8      	it	lt
 801596a:	fb95 f5f0 	sdivlt	r5, r5, r0
 801596e:	b22d      	sxth	r5, r5
 8015970:	2d00      	cmp	r5, #0
 8015972:	b21b      	sxth	r3, r3
 8015974:	fb93 f3f0 	sdiv	r3, r3, r0
 8015978:	803b      	strh	r3, [r7, #0]
 801597a:	8035      	strh	r5, [r6, #0]
 801597c:	da33      	bge.n	80159e6 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x170>
 801597e:	2000      	movs	r0, #0
 8015980:	8030      	strh	r0, [r6, #0]
 8015982:	8038      	strh	r0, [r7, #0]
 8015984:	e784      	b.n	8015890 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 8015986:	f06f 0101 	mvn.w	r1, #1
 801598a:	fb01 5303 	mla	r3, r1, r3, r5
 801598e:	1e59      	subs	r1, r3, #1
 8015990:	2302      	movs	r3, #2
 8015992:	fb91 f1f5 	sdiv	r1, r1, r5
 8015996:	fb91 f1f3 	sdiv	r1, r1, r3
 801599a:	4249      	negs	r1, r1
 801599c:	e79e      	b.n	80158dc <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x66>
 801599e:	f06f 0301 	mvn.w	r3, #1
 80159a2:	fb03 c301 	mla	r3, r3, r1, ip
 80159a6:	3b01      	subs	r3, #1
 80159a8:	2502      	movs	r5, #2
 80159aa:	fb93 f3fc 	sdiv	r3, r3, ip
 80159ae:	fb93 f3f5 	sdiv	r3, r3, r5
 80159b2:	425b      	negs	r3, r3
 80159b4:	e7a2      	b.n	80158fc <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x86>
 80159b6:	f06f 0101 	mvn.w	r1, #1
 80159ba:	fb01 c202 	mla	r2, r1, r2, ip
 80159be:	1e51      	subs	r1, r2, #1
 80159c0:	2202      	movs	r2, #2
 80159c2:	fb91 f1fc 	sdiv	r1, r1, ip
 80159c6:	fb91 f1f2 	sdiv	r1, r1, r2
 80159ca:	4249      	negs	r1, r1
 80159cc:	e7a9      	b.n	8015922 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xac>
 80159ce:	f06f 0101 	mvn.w	r1, #1
 80159d2:	fb01 2303 	mla	r3, r1, r3, r2
 80159d6:	3b01      	subs	r3, #1
 80159d8:	fb93 f3f2 	sdiv	r3, r3, r2
 80159dc:	2202      	movs	r2, #2
 80159de:	fb93 f3f2 	sdiv	r3, r3, r2
 80159e2:	425b      	negs	r3, r3
 80159e4:	e7b3      	b.n	801594e <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd8>
 80159e6:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	@ 0x11e
 80159ea:	f9b7 2000 	ldrsh.w	r2, [r7]
 80159ee:	4293      	cmp	r3, r2
 80159f0:	dc05      	bgt.n	80159fe <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x188>
 80159f2:	3b01      	subs	r3, #1
 80159f4:	b21b      	sxth	r3, r3
 80159f6:	8033      	strh	r3, [r6, #0]
 80159f8:	2000      	movs	r0, #0
 80159fa:	803b      	strh	r3, [r7, #0]
 80159fc:	e748      	b.n	8015890 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 80159fe:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8015a02:	803a      	strh	r2, [r7, #0]
 8015a04:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	@ 0x11e
 8015a08:	f9b6 2000 	ldrsh.w	r2, [r6]
 8015a0c:	4293      	cmp	r3, r2
 8015a0e:	bfdc      	itt	le
 8015a10:	f103 33ff 	addle.w	r3, r3, #4294967295
 8015a14:	b21a      	sxthle	r2, r3
 8015a16:	8032      	strh	r2, [r6, #0]
 8015a18:	e74d      	b.n	80158b6 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x40>

08015a1a <_ZN8touchgfx8Drawable11setPositionEssss>:
 8015a1a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015a1e:	461e      	mov	r6, r3
 8015a20:	6803      	ldr	r3, [r0, #0]
 8015a22:	f9bd 5018 	ldrsh.w	r5, [sp, #24]
 8015a26:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015a28:	4604      	mov	r4, r0
 8015a2a:	4617      	mov	r7, r2
 8015a2c:	4798      	blx	r3
 8015a2e:	6823      	ldr	r3, [r4, #0]
 8015a30:	4639      	mov	r1, r7
 8015a32:	4620      	mov	r0, r4
 8015a34:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8015a36:	4798      	blx	r3
 8015a38:	6823      	ldr	r3, [r4, #0]
 8015a3a:	4631      	mov	r1, r6
 8015a3c:	4620      	mov	r0, r4
 8015a3e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8015a40:	4790      	blx	r2
 8015a42:	6823      	ldr	r3, [r4, #0]
 8015a44:	4629      	mov	r1, r5
 8015a46:	4620      	mov	r0, r4
 8015a48:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8015a4a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8015a4e:	4718      	bx	r3

08015a50 <_ZN8touchgfx9ContainerC1Ev>:
 8015a50:	2101      	movs	r1, #1
 8015a52:	2200      	movs	r2, #0
 8015a54:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 8015a58:	4909      	ldr	r1, [pc, #36]	@ (8015a80 <_ZN8touchgfx9ContainerC1Ev+0x30>)
 8015a5a:	8082      	strh	r2, [r0, #4]
 8015a5c:	80c2      	strh	r2, [r0, #6]
 8015a5e:	8102      	strh	r2, [r0, #8]
 8015a60:	8142      	strh	r2, [r0, #10]
 8015a62:	8182      	strh	r2, [r0, #12]
 8015a64:	81c2      	strh	r2, [r0, #14]
 8015a66:	8202      	strh	r2, [r0, #16]
 8015a68:	8242      	strh	r2, [r0, #18]
 8015a6a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8015a6e:	61c2      	str	r2, [r0, #28]
 8015a70:	8402      	strh	r2, [r0, #32]
 8015a72:	8442      	strh	r2, [r0, #34]	@ 0x22
 8015a74:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 8015a78:	6001      	str	r1, [r0, #0]
 8015a7a:	6282      	str	r2, [r0, #40]	@ 0x28
 8015a7c:	4770      	bx	lr
 8015a7e:	bf00      	nop
 8015a80:	080321ec 	.word	0x080321ec

08015a84 <_ZNK8touchgfx7CWRUtil2Q55roundEv>:
 8015a84:	6800      	ldr	r0, [r0, #0]
 8015a86:	2800      	cmp	r0, #0
 8015a88:	bfbd      	ittte	lt
 8015a8a:	380f      	sublt	r0, #15
 8015a8c:	2320      	movlt	r3, #32
 8015a8e:	fb90 f0f3 	sdivlt	r0, r0, r3
 8015a92:	3010      	addge	r0, #16
 8015a94:	bfa8      	it	ge
 8015a96:	1140      	asrge	r0, r0, #5
 8015a98:	4770      	bx	lr

08015a9a <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs>:
 8015a9a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a9e:	4605      	mov	r5, r0
 8015aa0:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	@ 0x11e
 8015aa4:	4688      	mov	r8, r1
 8015aa6:	4691      	mov	r9, r2
 8015aa8:	469a      	mov	sl, r3
 8015aaa:	b360      	cbz	r0, 8015b06 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6c>
 8015aac:	2700      	movs	r7, #0
 8015aae:	f04f 3bff 	mov.w	fp, #4294967295
 8015ab2:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	@ 0x11e
 8015ab6:	b23e      	sxth	r6, r7
 8015ab8:	42b3      	cmp	r3, r6
 8015aba:	dd23      	ble.n	8015b04 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6a>
 8015abc:	682b      	ldr	r3, [r5, #0]
 8015abe:	4631      	mov	r1, r6
 8015ac0:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 8015ac4:	4628      	mov	r0, r5
 8015ac6:	4798      	blx	r3
 8015ac8:	9001      	str	r0, [sp, #4]
 8015aca:	a801      	add	r0, sp, #4
 8015acc:	f7ff ffda 	bl	8015a84 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8015ad0:	682b      	ldr	r3, [r5, #0]
 8015ad2:	eba0 0008 	sub.w	r0, r0, r8
 8015ad6:	b204      	sxth	r4, r0
 8015ad8:	f8d3 3120 	ldr.w	r3, [r3, #288]	@ 0x120
 8015adc:	4631      	mov	r1, r6
 8015ade:	4628      	mov	r0, r5
 8015ae0:	4798      	blx	r3
 8015ae2:	9001      	str	r0, [sp, #4]
 8015ae4:	a801      	add	r0, sp, #4
 8015ae6:	f7ff ffcd 	bl	8015a84 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8015aea:	eba0 0009 	sub.w	r0, r0, r9
 8015aee:	fb10 f000 	smulbb	r0, r0, r0
 8015af2:	fb04 0404 	mla	r4, r4, r4, r0
 8015af6:	455c      	cmp	r4, fp
 8015af8:	bf3c      	itt	cc
 8015afa:	f8aa 6000 	strhcc.w	r6, [sl]
 8015afe:	46a3      	movcc	fp, r4
 8015b00:	3701      	adds	r7, #1
 8015b02:	e7d6      	b.n	8015ab2 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x18>
 8015b04:	2001      	movs	r0, #1
 8015b06:	b003      	add	sp, #12
 8015b08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015b0c <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs>:
 8015b0c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8015b10:	460e      	mov	r6, r1
 8015b12:	2100      	movs	r1, #0
 8015b14:	8011      	strh	r1, [r2, #0]
 8015b16:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	@ 0x11e
 8015b1a:	4605      	mov	r5, r0
 8015b1c:	4617      	mov	r7, r2
 8015b1e:	b36b      	cbz	r3, 8015b7c <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x70>
 8015b20:	6803      	ldr	r3, [r0, #0]
 8015b22:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 8015b26:	4798      	blx	r3
 8015b28:	f10d 0808 	add.w	r8, sp, #8
 8015b2c:	2401      	movs	r4, #1
 8015b2e:	f848 0d04 	str.w	r0, [r8, #-4]!
 8015b32:	4640      	mov	r0, r8
 8015b34:	f7ff ffa6 	bl	8015a84 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8015b38:	b200      	sxth	r0, r0
 8015b3a:	1b80      	subs	r0, r0, r6
 8015b3c:	ea80 79e0 	eor.w	r9, r0, r0, asr #31
 8015b40:	eba9 79e0 	sub.w	r9, r9, r0, asr #31
 8015b44:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	@ 0x11e
 8015b48:	42a3      	cmp	r3, r4
 8015b4a:	dd1b      	ble.n	8015b84 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x78>
 8015b4c:	682b      	ldr	r3, [r5, #0]
 8015b4e:	4621      	mov	r1, r4
 8015b50:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 8015b54:	4628      	mov	r0, r5
 8015b56:	4798      	blx	r3
 8015b58:	9001      	str	r0, [sp, #4]
 8015b5a:	4640      	mov	r0, r8
 8015b5c:	f7ff ff92 	bl	8015a84 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8015b60:	b200      	sxth	r0, r0
 8015b62:	1b80      	subs	r0, r0, r6
 8015b64:	2800      	cmp	r0, #0
 8015b66:	bfb8      	it	lt
 8015b68:	4240      	neglt	r0, r0
 8015b6a:	4548      	cmp	r0, r9
 8015b6c:	bf38      	it	cc
 8015b6e:	803c      	strhcc	r4, [r7, #0]
 8015b70:	f104 0401 	add.w	r4, r4, #1
 8015b74:	bf38      	it	cc
 8015b76:	4681      	movcc	r9, r0
 8015b78:	b224      	sxth	r4, r4
 8015b7a:	e7e3      	b.n	8015b44 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x38>
 8015b7c:	4618      	mov	r0, r3
 8015b7e:	b003      	add	sp, #12
 8015b80:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015b84:	2001      	movs	r0, #1
 8015b86:	e7fa      	b.n	8015b7e <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x72>

08015b88 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>:
 8015b88:	f8a0 3118 	strh.w	r3, [r0, #280]	@ 0x118
 8015b8c:	f9bd 3000 	ldrsh.w	r3, [sp]
 8015b90:	f8a0 1114 	strh.w	r1, [r0, #276]	@ 0x114
 8015b94:	f8a0 2116 	strh.w	r2, [r0, #278]	@ 0x116
 8015b98:	f8a0 311a 	strh.w	r3, [r0, #282]	@ 0x11a
 8015b9c:	4770      	bx	lr

08015b9e <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>:
 8015b9e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8015ba0:	4604      	mov	r4, r0
 8015ba2:	3038      	adds	r0, #56	@ 0x38
 8015ba4:	460d      	mov	r5, r1
 8015ba6:	f7fc febf 	bl	8012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8015baa:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	@ 0x42
 8015bae:	9200      	str	r2, [sp, #0]
 8015bb0:	2200      	movs	r2, #0
 8015bb2:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 8015bb6:	4611      	mov	r1, r2
 8015bb8:	4628      	mov	r0, r5
 8015bba:	f7ff ff2e 	bl	8015a1a <_ZN8touchgfx8Drawable11setPositionEssss>
 8015bbe:	b003      	add	sp, #12
 8015bc0:	bd30      	pop	{r4, r5, pc}

08015bc2 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>:
 8015bc2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8015bc4:	4604      	mov	r4, r0
 8015bc6:	3064      	adds	r0, #100	@ 0x64
 8015bc8:	460d      	mov	r5, r1
 8015bca:	f7fc fead 	bl	8012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8015bce:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	@ 0x6e
 8015bd2:	9200      	str	r2, [sp, #0]
 8015bd4:	2200      	movs	r2, #0
 8015bd6:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	@ 0x6c
 8015bda:	4611      	mov	r1, r2
 8015bdc:	4628      	mov	r0, r5
 8015bde:	f7ff ff1c 	bl	8015a1a <_ZN8touchgfx8Drawable11setPositionEssss>
 8015be2:	b003      	add	sp, #12
 8015be4:	bd30      	pop	{r4, r5, pc}

08015be6 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>:
 8015be6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8015be8:	4604      	mov	r4, r0
 8015bea:	30e8      	adds	r0, #232	@ 0xe8
 8015bec:	460d      	mov	r5, r1
 8015bee:	f7fc fe9b 	bl	8012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8015bf2:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	@ 0xf2
 8015bf6:	9200      	str	r2, [sp, #0]
 8015bf8:	2200      	movs	r2, #0
 8015bfa:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	@ 0xf0
 8015bfe:	4611      	mov	r1, r2
 8015c00:	4628      	mov	r0, r5
 8015c02:	f7ff ff0a 	bl	8015a1a <_ZN8touchgfx8Drawable11setPositionEssss>
 8015c06:	b003      	add	sp, #12
 8015c08:	bd30      	pop	{r4, r5, pc}

08015c0a <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>:
 8015c0a:	b538      	push	{r3, r4, r5, lr}
 8015c0c:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	@ 0x11e
 8015c10:	428b      	cmp	r3, r1
 8015c12:	460d      	mov	r5, r1
 8015c14:	dd08      	ble.n	8015c28 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 8015c16:	6e04      	ldr	r4, [r0, #96]	@ 0x60
 8015c18:	b134      	cbz	r4, 8015c28 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 8015c1a:	6823      	ldr	r3, [r4, #0]
 8015c1c:	4620      	mov	r0, r4
 8015c1e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8015c20:	4629      	mov	r1, r5
 8015c22:	4798      	blx	r3
 8015c24:	69a4      	ldr	r4, [r4, #24]
 8015c26:	e7f7      	b.n	8015c18 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0xe>
 8015c28:	bd38      	pop	{r3, r4, r5, pc}

08015c2a <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>:
 8015c2a:	b570      	push	{r4, r5, r6, lr}
 8015c2c:	f8d0 40e4 	ldr.w	r4, [r0, #228]	@ 0xe4
 8015c30:	4606      	mov	r6, r0
 8015c32:	460d      	mov	r5, r1
 8015c34:	b134      	cbz	r4, 8015c44 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1a>
 8015c36:	6823      	ldr	r3, [r4, #0]
 8015c38:	4620      	mov	r0, r4
 8015c3a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8015c3c:	4629      	mov	r1, r5
 8015c3e:	4798      	blx	r3
 8015c40:	69a4      	ldr	r4, [r4, #24]
 8015c42:	e7f7      	b.n	8015c34 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0xa>
 8015c44:	f8d6 4110 	ldr.w	r4, [r6, #272]	@ 0x110
 8015c48:	b134      	cbz	r4, 8015c58 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x2e>
 8015c4a:	6823      	ldr	r3, [r4, #0]
 8015c4c:	4620      	mov	r0, r4
 8015c4e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8015c50:	4629      	mov	r1, r5
 8015c52:	4798      	blx	r3
 8015c54:	69a4      	ldr	r4, [r4, #24]
 8015c56:	e7f7      	b.n	8015c48 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1e>
 8015c58:	bd70      	pop	{r4, r5, r6, pc}

08015c5a <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>:
 8015c5a:	b538      	push	{r3, r4, r5, lr}
 8015c5c:	4604      	mov	r4, r0
 8015c5e:	2500      	movs	r5, #0
 8015c60:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	@ 0x11e
 8015c64:	42ab      	cmp	r3, r5
 8015c66:	db05      	blt.n	8015c74 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x1a>
 8015c68:	b229      	sxth	r1, r5
 8015c6a:	4620      	mov	r0, r4
 8015c6c:	f7ff ffdd 	bl	8015c2a <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>
 8015c70:	3501      	adds	r5, #1
 8015c72:	e7f5      	b.n	8015c60 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x6>
 8015c74:	f104 00bc 	add.w	r0, r4, #188	@ 0xbc
 8015c78:	f006 f8be 	bl	801bdf8 <_ZNK8touchgfx8Drawable10invalidateEv>
 8015c7c:	f104 00e8 	add.w	r0, r4, #232	@ 0xe8
 8015c80:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8015c84:	f006 b8b8 	b.w	801bdf8 <_ZNK8touchgfx8Drawable10invalidateEv>

08015c88 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>:
 8015c88:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8015c8a:	6e05      	ldr	r5, [r0, #96]	@ 0x60
 8015c8c:	4604      	mov	r4, r0
 8015c8e:	b15d      	cbz	r5, 8015ca8 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x20>
 8015c90:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	@ 0x42
 8015c94:	9200      	str	r2, [sp, #0]
 8015c96:	2200      	movs	r2, #0
 8015c98:	4628      	mov	r0, r5
 8015c9a:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 8015c9e:	4611      	mov	r1, r2
 8015ca0:	f7ff febb 	bl	8015a1a <_ZN8touchgfx8Drawable11setPositionEssss>
 8015ca4:	69ad      	ldr	r5, [r5, #24]
 8015ca6:	e7f2      	b.n	8015c8e <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x6>
 8015ca8:	f8d4 50e4 	ldr.w	r5, [r4, #228]	@ 0xe4
 8015cac:	b15d      	cbz	r5, 8015cc6 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x3e>
 8015cae:	f9b4 20c6 	ldrsh.w	r2, [r4, #198]	@ 0xc6
 8015cb2:	9200      	str	r2, [sp, #0]
 8015cb4:	2200      	movs	r2, #0
 8015cb6:	4628      	mov	r0, r5
 8015cb8:	f9b4 30c4 	ldrsh.w	r3, [r4, #196]	@ 0xc4
 8015cbc:	4611      	mov	r1, r2
 8015cbe:	f7ff feac 	bl	8015a1a <_ZN8touchgfx8Drawable11setPositionEssss>
 8015cc2:	69ad      	ldr	r5, [r5, #24]
 8015cc4:	e7f2      	b.n	8015cac <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x24>
 8015cc6:	f8d4 508c 	ldr.w	r5, [r4, #140]	@ 0x8c
 8015cca:	b15d      	cbz	r5, 8015ce4 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x5c>
 8015ccc:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	@ 0x6e
 8015cd0:	9200      	str	r2, [sp, #0]
 8015cd2:	2200      	movs	r2, #0
 8015cd4:	4628      	mov	r0, r5
 8015cd6:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	@ 0x6c
 8015cda:	4611      	mov	r1, r2
 8015cdc:	f7ff fe9d 	bl	8015a1a <_ZN8touchgfx8Drawable11setPositionEssss>
 8015ce0:	69ad      	ldr	r5, [r5, #24]
 8015ce2:	e7f2      	b.n	8015cca <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x42>
 8015ce4:	f8d4 50b8 	ldr.w	r5, [r4, #184]	@ 0xb8
 8015ce8:	b15d      	cbz	r5, 8015d02 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7a>
 8015cea:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	@ 0x9a
 8015cee:	9200      	str	r2, [sp, #0]
 8015cf0:	2200      	movs	r2, #0
 8015cf2:	4628      	mov	r0, r5
 8015cf4:	f9b4 3098 	ldrsh.w	r3, [r4, #152]	@ 0x98
 8015cf8:	4611      	mov	r1, r2
 8015cfa:	f7ff fe8e 	bl	8015a1a <_ZN8touchgfx8Drawable11setPositionEssss>
 8015cfe:	69ad      	ldr	r5, [r5, #24]
 8015d00:	e7f2      	b.n	8015ce8 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x60>
 8015d02:	f8d4 5110 	ldr.w	r5, [r4, #272]	@ 0x110
 8015d06:	b15d      	cbz	r5, 8015d20 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x98>
 8015d08:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	@ 0xf2
 8015d0c:	9200      	str	r2, [sp, #0]
 8015d0e:	2200      	movs	r2, #0
 8015d10:	4628      	mov	r0, r5
 8015d12:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	@ 0xf0
 8015d16:	4611      	mov	r1, r2
 8015d18:	f7ff fe7f 	bl	8015a1a <_ZN8touchgfx8Drawable11setPositionEssss>
 8015d1c:	69ad      	ldr	r5, [r5, #24]
 8015d1e:	e7f2      	b.n	8015d06 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7e>
 8015d20:	6823      	ldr	r3, [r4, #0]
 8015d22:	695b      	ldr	r3, [r3, #20]
 8015d24:	4620      	mov	r0, r4
 8015d26:	b003      	add	sp, #12
 8015d28:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8015d2c:	4718      	bx	r3

08015d2e <_ZN8touchgfx17AbstractDataGraph8setWidthEs>:
 8015d2e:	b430      	push	{r4, r5}
 8015d30:	f8b0 4098 	ldrh.w	r4, [r0, #152]	@ 0x98
 8015d34:	f8a0 10c4 	strh.w	r1, [r0, #196]	@ 0xc4
 8015d38:	b28a      	uxth	r2, r1
 8015d3a:	1b15      	subs	r5, r2, r4
 8015d3c:	f8a0 5094 	strh.w	r5, [r0, #148]	@ 0x94
 8015d40:	f8b0 506c 	ldrh.w	r5, [r0, #108]	@ 0x6c
 8015d44:	f8a0 10f0 	strh.w	r1, [r0, #240]	@ 0xf0
 8015d48:	442c      	add	r4, r5
 8015d4a:	1b12      	subs	r2, r2, r4
 8015d4c:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 8015d50:	8101      	strh	r1, [r0, #8]
 8015d52:	bc30      	pop	{r4, r5}
 8015d54:	f7ff bf98 	b.w	8015c88 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

08015d58 <_ZN8touchgfx17AbstractDataGraph9setHeightEs>:
 8015d58:	b430      	push	{r4, r5}
 8015d5a:	f8b0 40f2 	ldrh.w	r4, [r0, #242]	@ 0xf2
 8015d5e:	f8a0 106e 	strh.w	r1, [r0, #110]	@ 0x6e
 8015d62:	b28a      	uxth	r2, r1
 8015d64:	1b15      	subs	r5, r2, r4
 8015d66:	f8a0 50ee 	strh.w	r5, [r0, #238]	@ 0xee
 8015d6a:	f8b0 50c6 	ldrh.w	r5, [r0, #198]	@ 0xc6
 8015d6e:	f8a0 109a 	strh.w	r1, [r0, #154]	@ 0x9a
 8015d72:	442c      	add	r4, r5
 8015d74:	1b12      	subs	r2, r2, r4
 8015d76:	f8a0 2042 	strh.w	r2, [r0, #66]	@ 0x42
 8015d7a:	8141      	strh	r1, [r0, #10]
 8015d7c:	bc30      	pop	{r4, r5}
 8015d7e:	f7ff bf83 	b.w	8015c88 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

08015d82 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>:
 8015d82:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8015d86:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	@ 0x28
 8015d8a:	fa1f fa83 	uxth.w	sl, r3
 8015d8e:	4699      	mov	r9, r3
 8015d90:	8903      	ldrh	r3, [r0, #8]
 8015d92:	4604      	mov	r4, r0
 8015d94:	4615      	mov	r5, r2
 8015d96:	fa1f f887 	uxth.w	r8, r7
 8015d9a:	4452      	add	r2, sl
 8015d9c:	8940      	ldrh	r0, [r0, #10]
 8015d9e:	1a9b      	subs	r3, r3, r2
 8015da0:	eb08 0201 	add.w	r2, r8, r1
 8015da4:	1a80      	subs	r0, r0, r2
 8015da6:	b200      	sxth	r0, r0
 8015da8:	460e      	mov	r6, r1
 8015daa:	9000      	str	r0, [sp, #0]
 8015dac:	460a      	mov	r2, r1
 8015dae:	f104 0038 	add.w	r0, r4, #56	@ 0x38
 8015db2:	4629      	mov	r1, r5
 8015db4:	b21b      	sxth	r3, r3
 8015db6:	f7ff fe30 	bl	8015a1a <_ZN8touchgfx8Drawable11setPositionEssss>
 8015dba:	2200      	movs	r2, #0
 8015dbc:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8015dc0:	9600      	str	r6, [sp, #0]
 8015dc2:	4611      	mov	r1, r2
 8015dc4:	f104 00bc 	add.w	r0, r4, #188	@ 0xbc
 8015dc8:	f7ff fe27 	bl	8015a1a <_ZN8touchgfx8Drawable11setPositionEssss>
 8015dcc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8015dd0:	9300      	str	r3, [sp, #0]
 8015dd2:	2200      	movs	r2, #0
 8015dd4:	462b      	mov	r3, r5
 8015dd6:	4611      	mov	r1, r2
 8015dd8:	f104 0064 	add.w	r0, r4, #100	@ 0x64
 8015ddc:	f7ff fe1d 	bl	8015a1a <_ZN8touchgfx8Drawable11setPositionEssss>
 8015de0:	8921      	ldrh	r1, [r4, #8]
 8015de2:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8015de6:	9300      	str	r3, [sp, #0]
 8015de8:	eba1 010a 	sub.w	r1, r1, sl
 8015dec:	464b      	mov	r3, r9
 8015dee:	f104 0090 	add.w	r0, r4, #144	@ 0x90
 8015df2:	2200      	movs	r2, #0
 8015df4:	b209      	sxth	r1, r1
 8015df6:	f7ff fe10 	bl	8015a1a <_ZN8touchgfx8Drawable11setPositionEssss>
 8015dfa:	8962      	ldrh	r2, [r4, #10]
 8015dfc:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8015e00:	9700      	str	r7, [sp, #0]
 8015e02:	eba2 0208 	sub.w	r2, r2, r8
 8015e06:	f104 00e8 	add.w	r0, r4, #232	@ 0xe8
 8015e0a:	b212      	sxth	r2, r2
 8015e0c:	2100      	movs	r1, #0
 8015e0e:	f7ff fe04 	bl	8015a1a <_ZN8touchgfx8Drawable11setPositionEssss>
 8015e12:	4620      	mov	r0, r4
 8015e14:	b002      	add	sp, #8
 8015e16:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015e1a:	f7ff bf35 	b.w	8015c88 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>
	...

08015e20 <_ZN8touchgfx17AbstractDataGraphC1Es>:
 8015e20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e24:	b085      	sub	sp, #20
 8015e26:	4604      	mov	r4, r0
 8015e28:	9103      	str	r1, [sp, #12]
 8015e2a:	f7ff fe11 	bl	8015a50 <_ZN8touchgfx9ContainerC1Ev>
 8015e2e:	4b2d      	ldr	r3, [pc, #180]	@ (8015ee4 <_ZN8touchgfx17AbstractDataGraphC1Es+0xc4>)
 8015e30:	6023      	str	r3, [r4, #0]
 8015e32:	2601      	movs	r6, #1
 8015e34:	23ff      	movs	r3, #255	@ 0xff
 8015e36:	f104 0b38 	add.w	fp, r4, #56	@ 0x38
 8015e3a:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
 8015e3e:	f104 0964 	add.w	r9, r4, #100	@ 0x64
 8015e42:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 8015e46:	4658      	mov	r0, fp
 8015e48:	f7ff fe02 	bl	8015a50 <_ZN8touchgfx9ContainerC1Ev>
 8015e4c:	f104 0890 	add.w	r8, r4, #144	@ 0x90
 8015e50:	4648      	mov	r0, r9
 8015e52:	f7ff fdfd 	bl	8015a50 <_ZN8touchgfx9ContainerC1Ev>
 8015e56:	f104 0abc 	add.w	sl, r4, #188	@ 0xbc
 8015e5a:	4640      	mov	r0, r8
 8015e5c:	f7ff fdf8 	bl	8015a50 <_ZN8touchgfx9ContainerC1Ev>
 8015e60:	f104 07e8 	add.w	r7, r4, #232	@ 0xe8
 8015e64:	4650      	mov	r0, sl
 8015e66:	f7ff fdf3 	bl	8015a50 <_ZN8touchgfx9ContainerC1Ev>
 8015e6a:	4638      	mov	r0, r7
 8015e6c:	f7ff fdf0 	bl	8015a50 <_ZN8touchgfx9ContainerC1Ev>
 8015e70:	2500      	movs	r5, #0
 8015e72:	9903      	ldr	r1, [sp, #12]
 8015e74:	f8a4 111c 	strh.w	r1, [r4, #284]	@ 0x11c
 8015e78:	4620      	mov	r0, r4
 8015e7a:	4659      	mov	r1, fp
 8015e7c:	f8c4 5114 	str.w	r5, [r4, #276]	@ 0x114
 8015e80:	f8c4 5118 	str.w	r5, [r4, #280]	@ 0x118
 8015e84:	f8a4 511e 	strh.w	r5, [r4, #286]	@ 0x11e
 8015e88:	f8a4 5120 	strh.w	r5, [r4, #288]	@ 0x120
 8015e8c:	f8c4 5124 	str.w	r5, [r4, #292]	@ 0x124
 8015e90:	f8c4 5128 	str.w	r5, [r4, #296]	@ 0x128
 8015e94:	f8c4 512c 	str.w	r5, [r4, #300]	@ 0x12c
 8015e98:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 8015e9c:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 8015ea0:	f8c4 5138 	str.w	r5, [r4, #312]	@ 0x138
 8015ea4:	f7fc fd40 	bl	8012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8015ea8:	4651      	mov	r1, sl
 8015eaa:	4620      	mov	r0, r4
 8015eac:	f7fc fd3c 	bl	8012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8015eb0:	4649      	mov	r1, r9
 8015eb2:	4620      	mov	r0, r4
 8015eb4:	f7fc fd38 	bl	8012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8015eb8:	4641      	mov	r1, r8
 8015eba:	4620      	mov	r0, r4
 8015ebc:	f7fc fd34 	bl	8012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8015ec0:	4639      	mov	r1, r7
 8015ec2:	4620      	mov	r0, r4
 8015ec4:	f7fc fd30 	bl	8012928 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8015ec8:	4620      	mov	r0, r4
 8015eca:	9500      	str	r5, [sp, #0]
 8015ecc:	462b      	mov	r3, r5
 8015ece:	462a      	mov	r2, r5
 8015ed0:	4629      	mov	r1, r5
 8015ed2:	f7ff ff56 	bl	8015d82 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
 8015ed6:	4620      	mov	r0, r4
 8015ed8:	f884 6024 	strb.w	r6, [r4, #36]	@ 0x24
 8015edc:	b005      	add	sp, #20
 8015ede:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015ee2:	bf00      	nop
 8015ee4:	080326b0 	.word	0x080326b0

08015ee8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>:
 8015ee8:	4291      	cmp	r1, r2
 8015eea:	4613      	mov	r3, r2
 8015eec:	d003      	beq.n	8015ef6 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii+0xe>
 8015eee:	460a      	mov	r2, r1
 8015ef0:	4619      	mov	r1, r3
 8015ef2:	f006 bd18 	b.w	801c926 <_ZN8touchgfx6muldivElll>
 8015ef6:	4770      	bx	lr

08015ef8 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib>:
 8015ef8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015efc:	6803      	ldr	r3, [r0, #0]
 8015efe:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8015f02:	460d      	mov	r5, r1
 8015f04:	4604      	mov	r4, r0
 8015f06:	4798      	blx	r3
 8015f08:	42a8      	cmp	r0, r5
 8015f0a:	4606      	mov	r6, r0
 8015f0c:	d024      	beq.n	8015f58 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib+0x60>
 8015f0e:	6823      	ldr	r3, [r4, #0]
 8015f10:	4601      	mov	r1, r0
 8015f12:	462a      	mov	r2, r5
 8015f14:	f8d4 012c 	ldr.w	r0, [r4, #300]	@ 0x12c
 8015f18:	f8d3 70a4 	ldr.w	r7, [r3, #164]	@ 0xa4
 8015f1c:	f7ff ffe4 	bl	8015ee8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 8015f20:	462a      	mov	r2, r5
 8015f22:	4680      	mov	r8, r0
 8015f24:	4631      	mov	r1, r6
 8015f26:	f8d4 0130 	ldr.w	r0, [r4, #304]	@ 0x130
 8015f2a:	f7ff ffdd 	bl	8015ee8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 8015f2e:	4641      	mov	r1, r8
 8015f30:	4602      	mov	r2, r0
 8015f32:	4620      	mov	r0, r4
 8015f34:	47b8      	blx	r7
 8015f36:	462a      	mov	r2, r5
 8015f38:	4631      	mov	r1, r6
 8015f3a:	f8d4 013c 	ldr.w	r0, [r4, #316]	@ 0x13c
 8015f3e:	f7ff ffd3 	bl	8015ee8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 8015f42:	462a      	mov	r2, r5
 8015f44:	f8c4 013c 	str.w	r0, [r4, #316]	@ 0x13c
 8015f48:	4631      	mov	r1, r6
 8015f4a:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 8015f4e:	f7ff ffcb 	bl	8015ee8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 8015f52:	6325      	str	r5, [r4, #48]	@ 0x30
 8015f54:	f8c4 0140 	str.w	r0, [r4, #320]	@ 0x140
 8015f58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08015f5c <_ZN8touchgfx16DynamicDataGraph9setScaleYEib>:
 8015f5c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8015f60:	4604      	mov	r4, r0
 8015f62:	460f      	mov	r7, r1
 8015f64:	b1ba      	cbz	r2, 8015f96 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 8015f66:	6803      	ldr	r3, [r0, #0]
 8015f68:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8015f6c:	4798      	blx	r3
 8015f6e:	2600      	movs	r6, #0
 8015f70:	4681      	mov	r9, r0
 8015f72:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	@ 0x11e
 8015f76:	b235      	sxth	r5, r6
 8015f78:	42ab      	cmp	r3, r5
 8015f7a:	f106 0601 	add.w	r6, r6, #1
 8015f7e:	dd0a      	ble.n	8015f96 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 8015f80:	f8d4 8144 	ldr.w	r8, [r4, #324]	@ 0x144
 8015f84:	463a      	mov	r2, r7
 8015f86:	4649      	mov	r1, r9
 8015f88:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 8015f8c:	f7ff ffac 	bl	8015ee8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 8015f90:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 8015f94:	e7ed      	b.n	8015f72 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x16>
 8015f96:	6367      	str	r7, [r4, #52]	@ 0x34
 8015f98:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08015f9c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>:
 8015f9c:	b570      	push	{r4, r5, r6, lr}
 8015f9e:	6803      	ldr	r3, [r0, #0]
 8015fa0:	4604      	mov	r4, r0
 8015fa2:	f8d3 3178 	ldr.w	r3, [r3, #376]	@ 0x178
 8015fa6:	460d      	mov	r5, r1
 8015fa8:	4798      	blx	r3
 8015faa:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
 8015fae:	3301      	adds	r3, #1
 8015fb0:	f8c4 3148 	str.w	r3, [r4, #328]	@ 0x148
 8015fb4:	6823      	ldr	r3, [r4, #0]
 8015fb6:	4629      	mov	r1, r5
 8015fb8:	4620      	mov	r0, r4
 8015fba:	f8d3 317c 	ldr.w	r3, [r3, #380]	@ 0x17c
 8015fbe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015fc2:	4718      	bx	r3

08015fc4 <_ZN8touchgfx16GraphElementLineD1Ev>:
 8015fc4:	4770      	bx	lr

08015fc6 <_ZN8touchgfx16GraphElementLineD0Ev>:
 8015fc6:	b510      	push	{r4, lr}
 8015fc8:	2130      	movs	r1, #48	@ 0x30
 8015fca:	4604      	mov	r4, r0
 8015fcc:	f017 fc6f 	bl	802d8ae <_ZdlPvj>
 8015fd0:	4620      	mov	r0, r4
 8015fd2:	bd10      	pop	{r4, pc}

08015fd4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8015fd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015fd6:	4604      	mov	r4, r0
 8015fd8:	4608      	mov	r0, r1
 8015fda:	460d      	mov	r5, r1
 8015fdc:	f7fc fe6d 	bl	8012cba <_ZNK8touchgfx4Rect7isEmptyEv>
 8015fe0:	b978      	cbnz	r0, 8016002 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8015fe2:	4620      	mov	r0, r4
 8015fe4:	f7fc fe69 	bl	8012cba <_ZNK8touchgfx4Rect7isEmptyEv>
 8015fe8:	f9b5 6000 	ldrsh.w	r6, [r5]
 8015fec:	b150      	cbz	r0, 8016004 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8015fee:	8026      	strh	r6, [r4, #0]
 8015ff0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8015ff4:	8063      	strh	r3, [r4, #2]
 8015ff6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8015ffa:	80a3      	strh	r3, [r4, #4]
 8015ffc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8016000:	80e3      	strh	r3, [r4, #6]
 8016002:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016004:	f9b4 1000 	ldrsh.w	r1, [r4]
 8016008:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801600c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8016010:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8016014:	88ed      	ldrh	r5, [r5, #6]
 8016016:	42b1      	cmp	r1, r6
 8016018:	460f      	mov	r7, r1
 801601a:	bfa8      	it	ge
 801601c:	4637      	movge	r7, r6
 801601e:	4293      	cmp	r3, r2
 8016020:	4618      	mov	r0, r3
 8016022:	4466      	add	r6, ip
 8016024:	bfa8      	it	ge
 8016026:	4610      	movge	r0, r2
 8016028:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 801602c:	8027      	strh	r7, [r4, #0]
 801602e:	442a      	add	r2, r5
 8016030:	88e5      	ldrh	r5, [r4, #6]
 8016032:	8060      	strh	r0, [r4, #2]
 8016034:	4461      	add	r1, ip
 8016036:	442b      	add	r3, r5
 8016038:	b236      	sxth	r6, r6
 801603a:	b209      	sxth	r1, r1
 801603c:	b212      	sxth	r2, r2
 801603e:	b21b      	sxth	r3, r3
 8016040:	428e      	cmp	r6, r1
 8016042:	bfac      	ite	ge
 8016044:	ebc7 0106 	rsbge	r1, r7, r6
 8016048:	ebc7 0101 	rsblt	r1, r7, r1
 801604c:	429a      	cmp	r2, r3
 801604e:	bfac      	ite	ge
 8016050:	ebc0 0202 	rsbge	r2, r0, r2
 8016054:	ebc0 0203 	rsblt	r2, r0, r3
 8016058:	80a1      	strh	r1, [r4, #4]
 801605a:	80e2      	strh	r2, [r4, #6]
 801605c:	e7d1      	b.n	8016002 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

0801605e <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 801605e:	6800      	ldr	r0, [r0, #0]
 8016060:	2800      	cmp	r0, #0
 8016062:	bfb9      	ittee	lt
 8016064:	2320      	movlt	r3, #32
 8016066:	fb90 f0f3 	sdivlt	r0, r0, r3
 801606a:	301f      	addge	r0, #31
 801606c:	1140      	asrge	r0, r0, #5
 801606e:	4770      	bx	lr

08016070 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE>:
 8016070:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016074:	6803      	ldr	r3, [r0, #0]
 8016076:	6945      	ldr	r5, [r0, #20]
 8016078:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 801607a:	b093      	sub	sp, #76	@ 0x4c
 801607c:	4604      	mov	r4, r0
 801607e:	460f      	mov	r7, r1
 8016080:	2d00      	cmp	r5, #0
 8016082:	f000 81ad 	beq.w	80163e0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x370>
 8016086:	696d      	ldr	r5, [r5, #20]
 8016088:	4798      	blx	r3
 801608a:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 801608e:	2b00      	cmp	r3, #0
 8016090:	d077      	beq.n	8016182 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 8016092:	f895 302c 	ldrb.w	r3, [r5, #44]	@ 0x2c
 8016096:	fb13 f000 	smulbb	r0, r3, r0
 801609a:	b283      	uxth	r3, r0
 801609c:	1c58      	adds	r0, r3, #1
 801609e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80160a2:	1200      	asrs	r0, r0, #8
 80160a4:	d06d      	beq.n	8016182 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 80160a6:	b2c3      	uxtb	r3, r0
 80160a8:	9308      	str	r3, [sp, #32]
 80160aa:	6823      	ldr	r3, [r4, #0]
 80160ac:	f10d 0840 	add.w	r8, sp, #64	@ 0x40
 80160b0:	462a      	mov	r2, r5
 80160b2:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80160b6:	4621      	mov	r1, r4
 80160b8:	4640      	mov	r0, r8
 80160ba:	4798      	blx	r3
 80160bc:	e898 0003 	ldmia.w	r8, {r0, r1}
 80160c0:	ae0e      	add	r6, sp, #56	@ 0x38
 80160c2:	e886 0003 	stmia.w	r6, {r0, r1}
 80160c6:	4639      	mov	r1, r7
 80160c8:	4630      	mov	r0, r6
 80160ca:	f7fc fdb3 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 80160ce:	6823      	ldr	r3, [r4, #0]
 80160d0:	4629      	mov	r1, r5
 80160d2:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80160d6:	4620      	mov	r0, r4
 80160d8:	4798      	blx	r3
 80160da:	6823      	ldr	r3, [r4, #0]
 80160dc:	4607      	mov	r7, r0
 80160de:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80160e2:	4629      	mov	r1, r5
 80160e4:	4620      	mov	r0, r4
 80160e6:	4798      	blx	r3
 80160e8:	4681      	mov	r9, r0
 80160ea:	f894 0038 	ldrb.w	r0, [r4, #56]	@ 0x38
 80160ee:	0103      	lsls	r3, r0, #4
 80160f0:	9309      	str	r3, [sp, #36]	@ 0x24
 80160f2:	6823      	ldr	r3, [r4, #0]
 80160f4:	4629      	mov	r1, r5
 80160f6:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 80160fa:	4620      	mov	r0, r4
 80160fc:	4798      	blx	r3
 80160fe:	b203      	sxth	r3, r0
 8016100:	9306      	str	r3, [sp, #24]
 8016102:	6823      	ldr	r3, [r4, #0]
 8016104:	4629      	mov	r1, r5
 8016106:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 801610a:	4620      	mov	r0, r4
 801610c:	4798      	blx	r3
 801610e:	2f00      	cmp	r7, #0
 8016110:	b203      	sxth	r3, r0
 8016112:	9307      	str	r3, [sp, #28]
 8016114:	d138      	bne.n	8016188 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x118>
 8016116:	f1b9 0f00 	cmp.w	r9, #0
 801611a:	d132      	bne.n	8016182 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 801611c:	6823      	ldr	r3, [r4, #0]
 801611e:	464a      	mov	r2, r9
 8016120:	4629      	mov	r1, r5
 8016122:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 8016126:	4620      	mov	r0, r4
 8016128:	4798      	blx	r3
 801612a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801612c:	1ac0      	subs	r0, r0, r3
 801612e:	9010      	str	r0, [sp, #64]	@ 0x40
 8016130:	4640      	mov	r0, r8
 8016132:	f7ff fca7 	bl	8015a84 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8016136:	6823      	ldr	r3, [r4, #0]
 8016138:	4607      	mov	r7, r0
 801613a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 801613e:	4629      	mov	r1, r5
 8016140:	4620      	mov	r0, r4
 8016142:	4798      	blx	r3
 8016144:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8016148:	1a38      	subs	r0, r7, r0
 801614a:	fa0f f880 	sxth.w	r8, r0
 801614e:	eb13 0f08 	cmn.w	r3, r8
 8016152:	d416      	bmi.n	8016182 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 8016154:	6823      	ldr	r3, [r4, #0]
 8016156:	4629      	mov	r1, r5
 8016158:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 801615c:	4620      	mov	r0, r4
 801615e:	4798      	blx	r3
 8016160:	4580      	cmp	r8, r0
 8016162:	da0e      	bge.n	8016182 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 8016164:	9a08      	ldr	r2, [sp, #32]
 8016166:	6823      	ldr	r3, [r4, #0]
 8016168:	9202      	str	r2, [sp, #8]
 801616a:	b23f      	sxth	r7, r7
 801616c:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 8016170:	9201      	str	r2, [sp, #4]
 8016172:	9700      	str	r7, [sp, #0]
 8016174:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 8016178:	4631      	mov	r1, r6
 801617a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 801617e:	4620      	mov	r0, r4
 8016180:	47a8      	blx	r5
 8016182:	b013      	add	sp, #76	@ 0x4c
 8016184:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016188:	ddfb      	ble.n	8016182 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 801618a:	6823      	ldr	r3, [r4, #0]
 801618c:	4629      	mov	r1, r5
 801618e:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8016192:	4620      	mov	r0, r4
 8016194:	4798      	blx	r3
 8016196:	6823      	ldr	r3, [r4, #0]
 8016198:	4683      	mov	fp, r0
 801619a:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 801619e:	4629      	mov	r1, r5
 80161a0:	4620      	mov	r0, r4
 80161a2:	4798      	blx	r3
 80161a4:	eba0 030b 	sub.w	r3, r0, fp
 80161a8:	2b00      	cmp	r3, #0
 80161aa:	bfb8      	it	lt
 80161ac:	425b      	neglt	r3, r3
 80161ae:	fb93 f3f7 	sdiv	r3, r3, r7
 80161b2:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 80161b6:	4680      	mov	r8, r0
 80161b8:	dce3      	bgt.n	8016182 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 80161ba:	6823      	ldr	r3, [r4, #0]
 80161bc:	465a      	mov	r2, fp
 80161be:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 80161c2:	4629      	mov	r1, r5
 80161c4:	4620      	mov	r0, r4
 80161c6:	4798      	blx	r3
 80161c8:	6823      	ldr	r3, [r4, #0]
 80161ca:	4606      	mov	r6, r0
 80161cc:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 80161d0:	4642      	mov	r2, r8
 80161d2:	4629      	mov	r1, r5
 80161d4:	4620      	mov	r0, r4
 80161d6:	4798      	blx	r3
 80161d8:	42b0      	cmp	r0, r6
 80161da:	bfa2      	ittt	ge
 80161dc:	4643      	movge	r3, r8
 80161de:	46d8      	movge	r8, fp
 80161e0:	469b      	movge	fp, r3
 80161e2:	45d8      	cmp	r8, fp
 80161e4:	bfac      	ite	ge
 80161e6:	f04f 33ff 	movge.w	r3, #4294967295
 80161ea:	2301      	movlt	r3, #1
 80161ec:	fb98 f6f7 	sdiv	r6, r8, r7
 80161f0:	fb9b f2f7 	sdiv	r2, fp, r7
 80161f4:	1af6      	subs	r6, r6, r3
 80161f6:	441a      	add	r2, r3
 80161f8:	4296      	cmp	r6, r2
 80161fa:	bfac      	ite	ge
 80161fc:	f04f 3aff 	movge.w	sl, #4294967295
 8016200:	f04f 0a01 	movlt.w	sl, #1
 8016204:	f1b9 0f00 	cmp.w	r9, #0
 8016208:	d13e      	bne.n	8016288 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x218>
 801620a:	fb07 fb0a 	mul.w	fp, r7, sl
 801620e:	eb0a 0802 	add.w	r8, sl, r2
 8016212:	4377      	muls	r7, r6
 8016214:	45b0      	cmp	r8, r6
 8016216:	d0b4      	beq.n	8016182 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 8016218:	6823      	ldr	r3, [r4, #0]
 801621a:	463a      	mov	r2, r7
 801621c:	4629      	mov	r1, r5
 801621e:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 8016222:	4620      	mov	r0, r4
 8016224:	4798      	blx	r3
 8016226:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016228:	1ac0      	subs	r0, r0, r3
 801622a:	9010      	str	r0, [sp, #64]	@ 0x40
 801622c:	a810      	add	r0, sp, #64	@ 0x40
 801622e:	f7ff fc29 	bl	8015a84 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8016232:	6823      	ldr	r3, [r4, #0]
 8016234:	4681      	mov	r9, r0
 8016236:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 801623a:	4629      	mov	r1, r5
 801623c:	4620      	mov	r0, r4
 801623e:	4798      	blx	r3
 8016240:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 8016244:	eba9 0000 	sub.w	r0, r9, r0
 8016248:	b203      	sxth	r3, r0
 801624a:	42da      	cmn	r2, r3
 801624c:	9304      	str	r3, [sp, #16]
 801624e:	d418      	bmi.n	8016282 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 8016250:	6822      	ldr	r2, [r4, #0]
 8016252:	4629      	mov	r1, r5
 8016254:	f8d2 20a8 	ldr.w	r2, [r2, #168]	@ 0xa8
 8016258:	4620      	mov	r0, r4
 801625a:	4790      	blx	r2
 801625c:	9b04      	ldr	r3, [sp, #16]
 801625e:	4283      	cmp	r3, r0
 8016260:	da0f      	bge.n	8016282 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 8016262:	9b08      	ldr	r3, [sp, #32]
 8016264:	9302      	str	r3, [sp, #8]
 8016266:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 801626a:	6822      	ldr	r2, [r4, #0]
 801626c:	9301      	str	r3, [sp, #4]
 801626e:	fa0f f389 	sxth.w	r3, r9
 8016272:	9300      	str	r3, [sp, #0]
 8016274:	f8d2 9088 	ldr.w	r9, [r2, #136]	@ 0x88
 8016278:	a90e      	add	r1, sp, #56	@ 0x38
 801627a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 801627e:	4620      	mov	r0, r4
 8016280:	47c8      	blx	r9
 8016282:	4456      	add	r6, sl
 8016284:	445f      	add	r7, fp
 8016286:	e7c5      	b.n	8016214 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x1a4>
 8016288:	fb98 f8f9 	sdiv	r8, r8, r9
 801628c:	eba8 0203 	sub.w	r2, r8, r3
 8016290:	fb9b f8f9 	sdiv	r8, fp, r9
 8016294:	4498      	add	r8, r3
 8016296:	4542      	cmp	r2, r8
 8016298:	bfac      	ite	ge
 801629a:	f04f 33ff 	movge.w	r3, #4294967295
 801629e:	2301      	movlt	r3, #1
 80162a0:	930a      	str	r3, [sp, #40]	@ 0x28
 80162a2:	6823      	ldr	r3, [r4, #0]
 80162a4:	9204      	str	r2, [sp, #16]
 80162a6:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 80162aa:	fb02 f209 	mul.w	r2, r2, r9
 80162ae:	4629      	mov	r1, r5
 80162b0:	4620      	mov	r0, r4
 80162b2:	4798      	blx	r3
 80162b4:	f10d 0b48 	add.w	fp, sp, #72	@ 0x48
 80162b8:	f84b 0d08 	str.w	r0, [fp, #-8]!
 80162bc:	4658      	mov	r0, fp
 80162be:	f7ff fbe1 	bl	8015a84 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80162c2:	b203      	sxth	r3, r0
 80162c4:	9305      	str	r3, [sp, #20]
 80162c6:	6823      	ldr	r3, [r4, #0]
 80162c8:	fb06 f207 	mul.w	r2, r6, r7
 80162cc:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 80162d0:	4629      	mov	r1, r5
 80162d2:	4620      	mov	r0, r4
 80162d4:	4798      	blx	r3
 80162d6:	9010      	str	r0, [sp, #64]	@ 0x40
 80162d8:	4658      	mov	r0, fp
 80162da:	f7ff fbd3 	bl	8015a84 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80162de:	fb07 f20a 	mul.w	r2, r7, sl
 80162e2:	920b      	str	r2, [sp, #44]	@ 0x2c
 80162e4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80162e6:	4442      	add	r2, r8
 80162e8:	b203      	sxth	r3, r0
 80162ea:	920c      	str	r2, [sp, #48]	@ 0x30
 80162ec:	9a05      	ldr	r2, [sp, #20]
 80162ee:	429a      	cmp	r2, r3
 80162f0:	dc16      	bgt.n	8016320 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x2b0>
 80162f2:	eb06 080a 	add.w	r8, r6, sl
 80162f6:	fb07 f808 	mul.w	r8, r7, r8
 80162fa:	9a05      	ldr	r2, [sp, #20]
 80162fc:	429a      	cmp	r2, r3
 80162fe:	db54      	blt.n	80163aa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x33a>
 8016300:	6823      	ldr	r3, [r4, #0]
 8016302:	4642      	mov	r2, r8
 8016304:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 8016308:	4629      	mov	r1, r5
 801630a:	4620      	mov	r0, r4
 801630c:	4798      	blx	r3
 801630e:	9010      	str	r0, [sp, #64]	@ 0x40
 8016310:	4658      	mov	r0, fp
 8016312:	f7ff fbb7 	bl	8015a84 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8016316:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8016318:	4456      	add	r6, sl
 801631a:	b203      	sxth	r3, r0
 801631c:	4490      	add	r8, r2
 801631e:	e7ec      	b.n	80162fa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x28a>
 8016320:	6823      	ldr	r3, [r4, #0]
 8016322:	fb07 f206 	mul.w	r2, r7, r6
 8016326:	4629      	mov	r1, r5
 8016328:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 801632c:	4620      	mov	r0, r4
 801632e:	4798      	blx	r3
 8016330:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016332:	1ac0      	subs	r0, r0, r3
 8016334:	9010      	str	r0, [sp, #64]	@ 0x40
 8016336:	4658      	mov	r0, fp
 8016338:	f7ff fba4 	bl	8015a84 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801633c:	6823      	ldr	r3, [r4, #0]
 801633e:	4680      	mov	r8, r0
 8016340:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8016344:	4629      	mov	r1, r5
 8016346:	4620      	mov	r0, r4
 8016348:	4798      	blx	r3
 801634a:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 801634e:	eba8 0000 	sub.w	r0, r8, r0
 8016352:	b203      	sxth	r3, r0
 8016354:	42da      	cmn	r2, r3
 8016356:	930d      	str	r3, [sp, #52]	@ 0x34
 8016358:	d418      	bmi.n	801638c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 801635a:	6822      	ldr	r2, [r4, #0]
 801635c:	4629      	mov	r1, r5
 801635e:	f8d2 20a8 	ldr.w	r2, [r2, #168]	@ 0xa8
 8016362:	4620      	mov	r0, r4
 8016364:	4790      	blx	r2
 8016366:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016368:	4283      	cmp	r3, r0
 801636a:	da0f      	bge.n	801638c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 801636c:	9b08      	ldr	r3, [sp, #32]
 801636e:	9302      	str	r3, [sp, #8]
 8016370:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8016374:	6822      	ldr	r2, [r4, #0]
 8016376:	9301      	str	r3, [sp, #4]
 8016378:	fa0f f388 	sxth.w	r3, r8
 801637c:	9300      	str	r3, [sp, #0]
 801637e:	f8d2 8088 	ldr.w	r8, [r2, #136]	@ 0x88
 8016382:	a90e      	add	r1, sp, #56	@ 0x38
 8016384:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8016388:	4620      	mov	r0, r4
 801638a:	47c0      	blx	r8
 801638c:	6823      	ldr	r3, [r4, #0]
 801638e:	4456      	add	r6, sl
 8016390:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 8016394:	fb06 f207 	mul.w	r2, r6, r7
 8016398:	4629      	mov	r1, r5
 801639a:	4620      	mov	r0, r4
 801639c:	4798      	blx	r3
 801639e:	9010      	str	r0, [sp, #64]	@ 0x40
 80163a0:	4658      	mov	r0, fp
 80163a2:	f7ff fb6f 	bl	8015a84 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80163a6:	b203      	sxth	r3, r0
 80163a8:	e7a0      	b.n	80162ec <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 80163aa:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80163ac:	930d      	str	r3, [sp, #52]	@ 0x34
 80163ae:	9b04      	ldr	r3, [sp, #16]
 80163b0:	4413      	add	r3, r2
 80163b2:	9304      	str	r3, [sp, #16]
 80163b4:	9a04      	ldr	r2, [sp, #16]
 80163b6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80163b8:	4293      	cmp	r3, r2
 80163ba:	f43f aee2 	beq.w	8016182 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 80163be:	9b04      	ldr	r3, [sp, #16]
 80163c0:	6822      	ldr	r2, [r4, #0]
 80163c2:	4629      	mov	r1, r5
 80163c4:	f8d2 80ac 	ldr.w	r8, [r2, #172]	@ 0xac
 80163c8:	4620      	mov	r0, r4
 80163ca:	fb03 f209 	mul.w	r2, r3, r9
 80163ce:	47c0      	blx	r8
 80163d0:	9010      	str	r0, [sp, #64]	@ 0x40
 80163d2:	4658      	mov	r0, fp
 80163d4:	f7ff fb56 	bl	8015a84 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80163d8:	b203      	sxth	r3, r0
 80163da:	9305      	str	r3, [sp, #20]
 80163dc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80163de:	e785      	b.n	80162ec <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 80163e0:	4798      	blx	r3
 80163e2:	f895 302c 	ldrb.w	r3, [r5, #44]	@ 0x2c
 80163e6:	deff      	udf	#255	@ 0xff

080163e8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 80163e8:	b510      	push	{r4, lr}
 80163ea:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 80163ee:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 80163f2:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 80163f6:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 80163fa:	13a4      	asrs	r4, r4, #14
 80163fc:	139b      	asrs	r3, r3, #14
 80163fe:	429c      	cmp	r4, r3
 8016400:	bfb8      	it	lt
 8016402:	461c      	movlt	r4, r3
 8016404:	2c01      	cmp	r4, #1
 8016406:	dd07      	ble.n	8016418 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8016408:	fb91 f1f4 	sdiv	r1, r1, r4
 801640c:	fb90 f0f4 	sdiv	r0, r0, r4
 8016410:	f7ff ffea 	bl	80163e8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8016414:	4360      	muls	r0, r4
 8016416:	bd10      	pop	{r4, pc}
 8016418:	4340      	muls	r0, r0
 801641a:	fb01 0101 	mla	r1, r1, r1, r0
 801641e:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
 8016422:	bfb4      	ite	lt
 8016424:	f44f 4380 	movlt.w	r3, #16384	@ 0x4000
 8016428:	f04f 4380 	movge.w	r3, #1073741824	@ 0x40000000
 801642c:	2000      	movs	r0, #0
 801642e:	18c2      	adds	r2, r0, r3
 8016430:	428a      	cmp	r2, r1
 8016432:	bf9c      	itt	ls
 8016434:	1898      	addls	r0, r3, r2
 8016436:	1a89      	subls	r1, r1, r2
 8016438:	089b      	lsrs	r3, r3, #2
 801643a:	ea4f 0050 	mov.w	r0, r0, lsr #1
 801643e:	d1f6      	bne.n	801642e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x46>
 8016440:	e7e9      	b.n	8016416 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08016442 <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>:
 8016442:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016444:	9906      	ldr	r1, [sp, #24]
 8016446:	4291      	cmp	r1, r2
 8016448:	bfbc      	itt	lt
 801644a:	9206      	strlt	r2, [sp, #24]
 801644c:	460a      	movlt	r2, r1
 801644e:	9907      	ldr	r1, [sp, #28]
 8016450:	428b      	cmp	r3, r1
 8016452:	4606      	mov	r6, r0
 8016454:	461c      	mov	r4, r3
 8016456:	f04f 0020 	mov.w	r0, #32
 801645a:	bfc8      	it	gt
 801645c:	460c      	movgt	r4, r1
 801645e:	fb92 f5f0 	sdiv	r5, r2, r0
 8016462:	fb94 f4f0 	sdiv	r4, r4, r0
 8016466:	a806      	add	r0, sp, #24
 8016468:	bfc8      	it	gt
 801646a:	9307      	strgt	r3, [sp, #28]
 801646c:	f7ff fdf7 	bl	801605e <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8016470:	4607      	mov	r7, r0
 8016472:	a807      	add	r0, sp, #28
 8016474:	f7ff fdf3 	bl	801605e <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8016478:	1b7a      	subs	r2, r7, r5
 801647a:	1b00      	subs	r0, r0, r4
 801647c:	80f0      	strh	r0, [r6, #6]
 801647e:	8035      	strh	r5, [r6, #0]
 8016480:	8074      	strh	r4, [r6, #2]
 8016482:	80b2      	strh	r2, [r6, #4]
 8016484:	4630      	mov	r0, r6
 8016486:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08016488 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>:
 8016488:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801648a:	9c08      	ldr	r4, [sp, #32]
 801648c:	2602      	movs	r6, #2
 801648e:	3401      	adds	r4, #1
 8016490:	fb94 f4f6 	sdiv	r4, r4, r6
 8016494:	18a6      	adds	r6, r4, r2
 8016496:	191f      	adds	r7, r3, r4
 8016498:	e9cd 6700 	strd	r6, r7, [sp]
 801649c:	1b1b      	subs	r3, r3, r4
 801649e:	1b12      	subs	r2, r2, r4
 80164a0:	4605      	mov	r5, r0
 80164a2:	f7ff ffce 	bl	8016442 <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>
 80164a6:	4628      	mov	r0, r5
 80164a8:	b003      	add	sp, #12
 80164aa:	bdf0      	pop	{r4, r5, r6, r7, pc}

080164ac <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs>:
 80164ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80164b0:	6943      	ldr	r3, [r0, #20]
 80164b2:	b087      	sub	sp, #28
 80164b4:	4606      	mov	r6, r0
 80164b6:	460d      	mov	r5, r1
 80164b8:	2b00      	cmp	r3, #0
 80164ba:	d072      	beq.n	80165a2 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xf6>
 80164bc:	695c      	ldr	r4, [r3, #20]
 80164be:	f890 702c 	ldrb.w	r7, [r0, #44]	@ 0x2c
 80164c2:	6823      	ldr	r3, [r4, #0]
 80164c4:	4620      	mov	r0, r4
 80164c6:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 80164ca:	4798      	blx	r3
 80164cc:	6823      	ldr	r3, [r4, #0]
 80164ce:	4680      	mov	r8, r0
 80164d0:	f8d3 3120 	ldr.w	r3, [r3, #288]	@ 0x120
 80164d4:	4629      	mov	r1, r5
 80164d6:	4620      	mov	r0, r4
 80164d8:	4798      	blx	r3
 80164da:	017f      	lsls	r7, r7, #5
 80164dc:	4603      	mov	r3, r0
 80164de:	9700      	str	r7, [sp, #0]
 80164e0:	4642      	mov	r2, r8
 80164e2:	4631      	mov	r1, r6
 80164e4:	a802      	add	r0, sp, #8
 80164e6:	f7ff ffcf 	bl	8016488 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 80164ea:	2d00      	cmp	r5, #0
 80164ec:	dd1b      	ble.n	8016526 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0x7a>
 80164ee:	6823      	ldr	r3, [r4, #0]
 80164f0:	f105 38ff 	add.w	r8, r5, #4294967295
 80164f4:	fa0f f888 	sxth.w	r8, r8
 80164f8:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 80164fc:	4641      	mov	r1, r8
 80164fe:	4620      	mov	r0, r4
 8016500:	4798      	blx	r3
 8016502:	6823      	ldr	r3, [r4, #0]
 8016504:	4681      	mov	r9, r0
 8016506:	f8d3 3120 	ldr.w	r3, [r3, #288]	@ 0x120
 801650a:	4641      	mov	r1, r8
 801650c:	4620      	mov	r0, r4
 801650e:	4798      	blx	r3
 8016510:	4631      	mov	r1, r6
 8016512:	4603      	mov	r3, r0
 8016514:	9700      	str	r7, [sp, #0]
 8016516:	a804      	add	r0, sp, #16
 8016518:	464a      	mov	r2, r9
 801651a:	f7ff ffb5 	bl	8016488 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 801651e:	a904      	add	r1, sp, #16
 8016520:	a802      	add	r0, sp, #8
 8016522:	f7ff fd57 	bl	8015fd4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016526:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	@ 0x11e
 801652a:	3b01      	subs	r3, #1
 801652c:	429d      	cmp	r5, r3
 801652e:	da19      	bge.n	8016564 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xb8>
 8016530:	6823      	ldr	r3, [r4, #0]
 8016532:	3501      	adds	r5, #1
 8016534:	b22d      	sxth	r5, r5
 8016536:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 801653a:	4629      	mov	r1, r5
 801653c:	4620      	mov	r0, r4
 801653e:	4798      	blx	r3
 8016540:	6823      	ldr	r3, [r4, #0]
 8016542:	4680      	mov	r8, r0
 8016544:	f8d3 3120 	ldr.w	r3, [r3, #288]	@ 0x120
 8016548:	4629      	mov	r1, r5
 801654a:	4620      	mov	r0, r4
 801654c:	4798      	blx	r3
 801654e:	4631      	mov	r1, r6
 8016550:	4603      	mov	r3, r0
 8016552:	9700      	str	r7, [sp, #0]
 8016554:	a804      	add	r0, sp, #16
 8016556:	4642      	mov	r2, r8
 8016558:	f7ff ff96 	bl	8016488 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 801655c:	a904      	add	r1, sp, #16
 801655e:	a802      	add	r0, sp, #8
 8016560:	f7ff fd38 	bl	8015fd4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016564:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	@ 0x114
 8016568:	f8b4 311a 	ldrh.w	r3, [r4, #282]	@ 0x11a
 801656c:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	@ 0x40
 8016570:	18ca      	adds	r2, r1, r3
 8016572:	f8b4 3042 	ldrh.w	r3, [r4, #66]	@ 0x42
 8016576:	f8ad 1012 	strh.w	r1, [sp, #18]
 801657a:	1a9b      	subs	r3, r3, r2
 801657c:	f8ad 0014 	strh.w	r0, [sp, #20]
 8016580:	2200      	movs	r2, #0
 8016582:	a904      	add	r1, sp, #16
 8016584:	a802      	add	r0, sp, #8
 8016586:	f8ad 2010 	strh.w	r2, [sp, #16]
 801658a:	f8ad 3016 	strh.w	r3, [sp, #22]
 801658e:	f7fc fb51 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 8016592:	6833      	ldr	r3, [r6, #0]
 8016594:	a902      	add	r1, sp, #8
 8016596:	691b      	ldr	r3, [r3, #16]
 8016598:	4630      	mov	r0, r6
 801659a:	4798      	blx	r3
 801659c:	b007      	add	sp, #28
 801659e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80165a2:	681b      	ldr	r3, [r3, #0]
 80165a4:	deff      	udf	#255	@ 0xff

080165a6 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>:
 80165a6:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80165aa:	2b00      	cmp	r3, #0
 80165ac:	da05      	bge.n	80165ba <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x14>
 80165ae:	880a      	ldrh	r2, [r1, #0]
 80165b0:	b29b      	uxth	r3, r3
 80165b2:	441a      	add	r2, r3
 80165b4:	425b      	negs	r3, r3
 80165b6:	800a      	strh	r2, [r1, #0]
 80165b8:	808b      	strh	r3, [r1, #4]
 80165ba:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80165be:	2b00      	cmp	r3, #0
 80165c0:	da05      	bge.n	80165ce <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x28>
 80165c2:	884a      	ldrh	r2, [r1, #2]
 80165c4:	b29b      	uxth	r3, r3
 80165c6:	441a      	add	r2, r3
 80165c8:	425b      	negs	r3, r3
 80165ca:	804a      	strh	r2, [r1, #2]
 80165cc:	80cb      	strh	r3, [r1, #6]
 80165ce:	4770      	bx	lr

080165d0 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh>:
 80165d0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80165d2:	4604      	mov	r4, r0
 80165d4:	460d      	mov	r5, r1
 80165d6:	6801      	ldr	r1, [r0, #0]
 80165d8:	f9bd 0024 	ldrsh.w	r0, [sp, #36]	@ 0x24
 80165dc:	9001      	str	r0, [sp, #4]
 80165de:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 80165e2:	9000      	str	r0, [sp, #0]
 80165e4:	f8d1 6090 	ldr.w	r6, [r1, #144]	@ 0x90
 80165e8:	a802      	add	r0, sp, #8
 80165ea:	4621      	mov	r1, r4
 80165ec:	47b0      	blx	r6
 80165ee:	a902      	add	r1, sp, #8
 80165f0:	4620      	mov	r0, r4
 80165f2:	f7ff ffd8 	bl	80165a6 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 80165f6:	a802      	add	r0, sp, #8
 80165f8:	4629      	mov	r1, r5
 80165fa:	f7fc fb1b 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 80165fe:	a802      	add	r0, sp, #8
 8016600:	f7fc fb5b 	bl	8012cba <_ZNK8touchgfx4Rect7isEmptyEv>
 8016604:	b968      	cbnz	r0, 8016622 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh+0x52>
 8016606:	6823      	ldr	r3, [r4, #0]
 8016608:	a902      	add	r1, sp, #8
 801660a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801660c:	4620      	mov	r0, r4
 801660e:	4798      	blx	r3
 8016610:	f7fc fe0a 	bl	8013228 <_ZN8touchgfx3HAL3lcdEv>
 8016614:	6803      	ldr	r3, [r0, #0]
 8016616:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8016618:	6a1d      	ldr	r5, [r3, #32]
 801661a:	f89d 3028 	ldrb.w	r3, [sp, #40]	@ 0x28
 801661e:	a902      	add	r1, sp, #8
 8016620:	47a8      	blx	r5
 8016622:	b004      	add	sp, #16
 8016624:	bd70      	pop	{r4, r5, r6, pc}

08016626 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>:
 8016626:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801662a:	b08b      	sub	sp, #44	@ 0x2c
 801662c:	461e      	mov	r6, r3
 801662e:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	@ 0x50
 8016632:	9304      	str	r3, [sp, #16]
 8016634:	429e      	cmp	r6, r3
 8016636:	460f      	mov	r7, r1
 8016638:	4615      	mov	r5, r2
 801663a:	d074      	beq.n	8016726 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x100>
 801663c:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8016640:	015b      	lsls	r3, r3, #5
 8016642:	9303      	str	r3, [sp, #12]
 8016644:	6813      	ldr	r3, [r2, #0]
 8016646:	4610      	mov	r0, r2
 8016648:	4631      	mov	r1, r6
 801664a:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 801664e:	4798      	blx	r3
 8016650:	ab0a      	add	r3, sp, #40	@ 0x28
 8016652:	4634      	mov	r4, r6
 8016654:	f843 0d10 	str.w	r0, [r3, #-16]!
 8016658:	4618      	mov	r0, r3
 801665a:	f7ff fa13 	bl	8015a84 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801665e:	682b      	ldr	r3, [r5, #0]
 8016660:	4631      	mov	r1, r6
 8016662:	ea4f 1840 	mov.w	r8, r0, lsl #5
 8016666:	f8d3 3120 	ldr.w	r3, [r3, #288]	@ 0x120
 801666a:	4628      	mov	r0, r5
 801666c:	4798      	blx	r3
 801666e:	ab0a      	add	r3, sp, #40	@ 0x28
 8016670:	f843 0d0c 	str.w	r0, [r3, #-12]!
 8016674:	4618      	mov	r0, r3
 8016676:	f7ff fa05 	bl	8015a84 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801667a:	ea4f 1940 	mov.w	r9, r0, lsl #5
 801667e:	464a      	mov	r2, r9
 8016680:	4641      	mov	r1, r8
 8016682:	4638      	mov	r0, r7
 8016684:	f016 fdfc 	bl	802d280 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8016688:	2301      	movs	r3, #1
 801668a:	9300      	str	r3, [sp, #0]
 801668c:	9b00      	ldr	r3, [sp, #0]
 801668e:	441c      	add	r4, r3
 8016690:	682b      	ldr	r3, [r5, #0]
 8016692:	b224      	sxth	r4, r4
 8016694:	f8d3 311c 	ldr.w	r3, [r3, #284]	@ 0x11c
 8016698:	4621      	mov	r1, r4
 801669a:	4628      	mov	r0, r5
 801669c:	4798      	blx	r3
 801669e:	9008      	str	r0, [sp, #32]
 80166a0:	a808      	add	r0, sp, #32
 80166a2:	f7ff f9ef 	bl	8015a84 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80166a6:	0143      	lsls	r3, r0, #5
 80166a8:	9301      	str	r3, [sp, #4]
 80166aa:	682b      	ldr	r3, [r5, #0]
 80166ac:	4621      	mov	r1, r4
 80166ae:	f8d3 3120 	ldr.w	r3, [r3, #288]	@ 0x120
 80166b2:	4628      	mov	r0, r5
 80166b4:	4798      	blx	r3
 80166b6:	9009      	str	r0, [sp, #36]	@ 0x24
 80166b8:	a809      	add	r0, sp, #36	@ 0x24
 80166ba:	f7ff f9e3 	bl	8015a84 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80166be:	0143      	lsls	r3, r0, #5
 80166c0:	9302      	str	r3, [sp, #8]
 80166c2:	9b01      	ldr	r3, [sp, #4]
 80166c4:	eba3 0b08 	sub.w	fp, r3, r8
 80166c8:	9b02      	ldr	r3, [sp, #8]
 80166ca:	eba3 0a09 	sub.w	sl, r3, r9
 80166ce:	4651      	mov	r1, sl
 80166d0:	4658      	mov	r0, fp
 80166d2:	f7ff fe89 	bl	80163e8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80166d6:	b320      	cbz	r0, 8016722 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xfc>
 80166d8:	4602      	mov	r2, r0
 80166da:	4651      	mov	r1, sl
 80166dc:	9005      	str	r0, [sp, #20]
 80166de:	9803      	ldr	r0, [sp, #12]
 80166e0:	f006 f921 	bl	801c926 <_ZN8touchgfx6muldivElll>
 80166e4:	2302      	movs	r3, #2
 80166e6:	fb90 faf3 	sdiv	sl, r0, r3
 80166ea:	9b05      	ldr	r3, [sp, #20]
 80166ec:	9803      	ldr	r0, [sp, #12]
 80166ee:	461a      	mov	r2, r3
 80166f0:	4659      	mov	r1, fp
 80166f2:	f006 f918 	bl	801c926 <_ZN8touchgfx6muldivElll>
 80166f6:	2302      	movs	r3, #2
 80166f8:	fb90 fbf3 	sdiv	fp, r0, r3
 80166fc:	683b      	ldr	r3, [r7, #0]
 80166fe:	eb0b 0209 	add.w	r2, fp, r9
 8016702:	eba8 010a 	sub.w	r1, r8, sl
 8016706:	689b      	ldr	r3, [r3, #8]
 8016708:	4638      	mov	r0, r7
 801670a:	4798      	blx	r3
 801670c:	683b      	ldr	r3, [r7, #0]
 801670e:	9a02      	ldr	r2, [sp, #8]
 8016710:	9901      	ldr	r1, [sp, #4]
 8016712:	689b      	ldr	r3, [r3, #8]
 8016714:	445a      	add	r2, fp
 8016716:	eba1 010a 	sub.w	r1, r1, sl
 801671a:	4638      	mov	r0, r7
 801671c:	4798      	blx	r3
 801671e:	e9dd 8901 	ldrd	r8, r9, [sp, #4]
 8016722:	42a6      	cmp	r6, r4
 8016724:	db02      	blt.n	801672c <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x106>
 8016726:	b00b      	add	sp, #44	@ 0x2c
 8016728:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801672c:	9b00      	ldr	r3, [sp, #0]
 801672e:	9a04      	ldr	r2, [sp, #16]
 8016730:	42a2      	cmp	r2, r4
 8016732:	bf08      	it	eq
 8016734:	f04f 33ff 	moveq.w	r3, #4294967295
 8016738:	e7a7      	b.n	801668a <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x64>
	...

0801673c <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE>:
 801673c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016740:	6943      	ldr	r3, [r0, #20]
 8016742:	b0a4      	sub	sp, #144	@ 0x90
 8016744:	4605      	mov	r5, r0
 8016746:	460f      	mov	r7, r1
 8016748:	2b00      	cmp	r3, #0
 801674a:	d077      	beq.n	801683c <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x100>
 801674c:	695c      	ldr	r4, [r3, #20]
 801674e:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	@ 0x11e
 8016752:	2b01      	cmp	r3, #1
 8016754:	dc04      	bgt.n	8016760 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x24>
 8016756:	2401      	movs	r4, #1
 8016758:	4620      	mov	r0, r4
 801675a:	b024      	add	sp, #144	@ 0x90
 801675c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016760:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8016764:	ae24      	add	r6, sp, #144	@ 0x90
 8016766:	011b      	lsls	r3, r3, #4
 8016768:	f846 3d74 	str.w	r3, [r6, #-116]!
 801676c:	4630      	mov	r0, r6
 801676e:	f7ff fc76 	bl	801605e <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8016772:	8839      	ldrh	r1, [r7, #0]
 8016774:	88ba      	ldrh	r2, [r7, #4]
 8016776:	6823      	ldr	r3, [r4, #0]
 8016778:	b280      	uxth	r0, r0
 801677a:	440a      	add	r2, r1
 801677c:	4402      	add	r2, r0
 801677e:	1a09      	subs	r1, r1, r0
 8016780:	f10d 000a 	add.w	r0, sp, #10
 8016784:	9000      	str	r0, [sp, #0]
 8016786:	f8d3 8124 	ldr.w	r8, [r3, #292]	@ 0x124
 801678a:	b212      	sxth	r2, r2
 801678c:	ab02      	add	r3, sp, #8
 801678e:	b209      	sxth	r1, r1
 8016790:	4620      	mov	r0, r4
 8016792:	47c0      	blx	r8
 8016794:	2800      	cmp	r0, #0
 8016796:	d0de      	beq.n	8016756 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1a>
 8016798:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	@ 0x114
 801679c:	f8b4 311a 	ldrh.w	r3, [r4, #282]	@ 0x11a
 80167a0:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	@ 0x40
 80167a4:	f8ad 100e 	strh.w	r1, [sp, #14]
 80167a8:	18ca      	adds	r2, r1, r3
 80167aa:	f8b4 3042 	ldrh.w	r3, [r4, #66]	@ 0x42
 80167ae:	f8ad 0010 	strh.w	r0, [sp, #16]
 80167b2:	1a9b      	subs	r3, r3, r2
 80167b4:	4639      	mov	r1, r7
 80167b6:	2200      	movs	r2, #0
 80167b8:	a803      	add	r0, sp, #12
 80167ba:	f8ad 200c 	strh.w	r2, [sp, #12]
 80167be:	f8ad 3012 	strh.w	r3, [sp, #18]
 80167c2:	f7fc fa37 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 80167c6:	4629      	mov	r1, r5
 80167c8:	a805      	add	r0, sp, #20
 80167ca:	6aaf      	ldr	r7, [r5, #40]	@ 0x28
 80167cc:	f005 fbb0 	bl	801bf30 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80167d0:	682b      	ldr	r3, [r5, #0]
 80167d2:	4628      	mov	r0, r5
 80167d4:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 80167d6:	4798      	blx	r3
 80167d8:	ab03      	add	r3, sp, #12
 80167da:	9000      	str	r0, [sp, #0]
 80167dc:	aa05      	add	r2, sp, #20
 80167de:	4639      	mov	r1, r7
 80167e0:	4630      	mov	r0, r6
 80167e2:	f016 fc01 	bl	802cfe8 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 80167e6:	f9b4 7120 	ldrsh.w	r7, [r4, #288]	@ 0x120
 80167ea:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 80167ee:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 80167f2:	2f00      	cmp	r7, #0
 80167f4:	dd03      	ble.n	80167fe <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xc2>
 80167f6:	42bb      	cmp	r3, r7
 80167f8:	da01      	bge.n	80167fe <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xc2>
 80167fa:	42ba      	cmp	r2, r7
 80167fc:	da11      	bge.n	8016822 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xe6>
 80167fe:	9200      	str	r2, [sp, #0]
 8016800:	4622      	mov	r2, r4
 8016802:	4631      	mov	r1, r6
 8016804:	4628      	mov	r0, r5
 8016806:	f7ff ff0e 	bl	8016626 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 801680a:	f894 102c 	ldrb.w	r1, [r4, #44]	@ 0x2c
 801680e:	4630      	mov	r0, r6
 8016810:	f016 fc7e 	bl	802d110 <_ZN8touchgfx6Canvas6renderEh>
 8016814:	4b0b      	ldr	r3, [pc, #44]	@ (8016844 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x108>)
 8016816:	9307      	str	r3, [sp, #28]
 8016818:	4604      	mov	r4, r0
 801681a:	a80c      	add	r0, sp, #48	@ 0x30
 801681c:	f001 fda8 	bl	8018370 <_ZN8touchgfx7OutlineD1Ev>
 8016820:	e79a      	b.n	8016758 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1c>
 8016822:	1e7a      	subs	r2, r7, #1
 8016824:	b212      	sxth	r2, r2
 8016826:	9200      	str	r2, [sp, #0]
 8016828:	4631      	mov	r1, r6
 801682a:	4622      	mov	r2, r4
 801682c:	4628      	mov	r0, r5
 801682e:	f7ff fefa 	bl	8016626 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 8016832:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8016836:	9300      	str	r3, [sp, #0]
 8016838:	463b      	mov	r3, r7
 801683a:	e7e1      	b.n	8016800 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xc4>
 801683c:	f8b3 311e 	ldrh.w	r3, [r3, #286]	@ 0x11e
 8016840:	deff      	udf	#255	@ 0xff
 8016842:	bf00      	nop
 8016844:	08033554 	.word	0x08033554

08016848 <_ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs>:
 8016848:	4770      	bx	lr

0801684a <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
 801684a:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 801684c:	b118      	cbz	r0, 8016856 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 801684e:	6803      	ldr	r3, [r0, #0]
 8016850:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8016854:	4718      	bx	r3
 8016856:	4770      	bx	lr

08016858 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 8016858:	680b      	ldr	r3, [r1, #0]
 801685a:	4608      	mov	r0, r1
 801685c:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 8016860:	4718      	bx	r3

08016862 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 8016862:	680b      	ldr	r3, [r1, #0]
 8016864:	4608      	mov	r0, r1
 8016866:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 801686a:	4718      	bx	r3

0801686c <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 801686c:	680b      	ldr	r3, [r1, #0]
 801686e:	4608      	mov	r0, r1
 8016870:	f8d3 30ec 	ldr.w	r3, [r3, #236]	@ 0xec
 8016874:	4718      	bx	r3

08016876 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 8016876:	680b      	ldr	r3, [r1, #0]
 8016878:	4608      	mov	r0, r1
 801687a:	f8d3 30f8 	ldr.w	r3, [r3, #248]	@ 0xf8
 801687e:	4718      	bx	r3

08016880 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE>:
 8016880:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016884:	4a37      	ldr	r2, [pc, #220]	@ (8016964 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe4>)
 8016886:	8f83      	ldrh	r3, [r0, #60]	@ 0x3c
 8016888:	8812      	ldrh	r2, [r2, #0]
 801688a:	429a      	cmp	r2, r3
 801688c:	b087      	sub	sp, #28
 801688e:	4604      	mov	r4, r0
 8016890:	4689      	mov	r9, r1
 8016892:	d937      	bls.n	8016904 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 8016894:	4a34      	ldr	r2, [pc, #208]	@ (8016968 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe8>)
 8016896:	6812      	ldr	r2, [r2, #0]
 8016898:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801689c:	4b33      	ldr	r3, [pc, #204]	@ (801696c <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xec>)
 801689e:	681b      	ldr	r3, [r3, #0]
 80168a0:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 80168a4:	f1b8 0f00 	cmp.w	r8, #0
 80168a8:	d02c      	beq.n	8016904 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 80168aa:	6803      	ldr	r3, [r0, #0]
 80168ac:	6945      	ldr	r5, [r0, #20]
 80168ae:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 80168b0:	2d00      	cmp	r5, #0
 80168b2:	d052      	beq.n	801695a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xda>
 80168b4:	696f      	ldr	r7, [r5, #20]
 80168b6:	4798      	blx	r3
 80168b8:	f897 502c 	ldrb.w	r5, [r7, #44]	@ 0x2c
 80168bc:	fb15 f000 	smulbb	r0, r5, r0
 80168c0:	b280      	uxth	r0, r0
 80168c2:	1c45      	adds	r5, r0, #1
 80168c4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80168c8:	122d      	asrs	r5, r5, #8
 80168ca:	d01b      	beq.n	8016904 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 80168cc:	6823      	ldr	r3, [r4, #0]
 80168ce:	4639      	mov	r1, r7
 80168d0:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80168d4:	4620      	mov	r0, r4
 80168d6:	4798      	blx	r3
 80168d8:	6823      	ldr	r3, [r4, #0]
 80168da:	4606      	mov	r6, r0
 80168dc:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80168e0:	4639      	mov	r1, r7
 80168e2:	4620      	mov	r0, r4
 80168e4:	4798      	blx	r3
 80168e6:	b2ed      	uxtb	r5, r5
 80168e8:	4683      	mov	fp, r0
 80168ea:	b970      	cbnz	r0, 801690a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 80168ec:	b96e      	cbnz	r6, 801690a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 80168ee:	e9cd 6501 	strd	r6, r5, [sp, #4]
 80168f2:	6823      	ldr	r3, [r4, #0]
 80168f4:	9600      	str	r6, [sp, #0]
 80168f6:	f8d3 508c 	ldr.w	r5, [r3, #140]	@ 0x8c
 80168fa:	4642      	mov	r2, r8
 80168fc:	463b      	mov	r3, r7
 80168fe:	4649      	mov	r1, r9
 8016900:	4620      	mov	r0, r4
 8016902:	47a8      	blx	r5
 8016904:	b007      	add	sp, #28
 8016906:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801690a:	2e00      	cmp	r6, #0
 801690c:	ddfa      	ble.n	8016904 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 801690e:	6823      	ldr	r3, [r4, #0]
 8016910:	4639      	mov	r1, r7
 8016912:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8016916:	4620      	mov	r0, r4
 8016918:	4798      	blx	r3
 801691a:	6823      	ldr	r3, [r4, #0]
 801691c:	4682      	mov	sl, r0
 801691e:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8016922:	4639      	mov	r1, r7
 8016924:	4620      	mov	r0, r4
 8016926:	4798      	blx	r3
 8016928:	4582      	cmp	sl, r0
 801692a:	bfde      	ittt	le
 801692c:	4603      	movle	r3, r0
 801692e:	4650      	movle	r0, sl
 8016930:	469a      	movle	sl, r3
 8016932:	ebaa 0300 	sub.w	r3, sl, r0
 8016936:	fb93 f3f6 	sdiv	r3, r3, r6
 801693a:	2b64      	cmp	r3, #100	@ 0x64
 801693c:	dce2      	bgt.n	8016904 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 801693e:	e9cd b503 	strd	fp, r5, [sp, #12]
 8016942:	e9cd a601 	strd	sl, r6, [sp, #4]
 8016946:	6823      	ldr	r3, [r4, #0]
 8016948:	9000      	str	r0, [sp, #0]
 801694a:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 801694e:	4642      	mov	r2, r8
 8016950:	463b      	mov	r3, r7
 8016952:	4649      	mov	r1, r9
 8016954:	4620      	mov	r0, r4
 8016956:	47a8      	blx	r5
 8016958:	e7d4      	b.n	8016904 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 801695a:	4798      	blx	r3
 801695c:	f895 302c 	ldrb.w	r3, [r5, #44]	@ 0x2c
 8016960:	deff      	udf	#255	@ 0xff
 8016962:	bf00      	nop
 8016964:	2000e468 	.word	0x2000e468
 8016968:	2000e464 	.word	0x2000e464
 801696c:	2000e46c 	.word	0x2000e46c

08016970 <_ZN8touchgfx12GraphLabelsYD1Ev>:
 8016970:	4770      	bx	lr

08016972 <_ZN8touchgfx12GraphLabelsXD1Ev>:
 8016972:	4770      	bx	lr

08016974 <_ZNK8touchgfx12GraphLabelsX31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 8016974:	b538      	push	{r3, r4, r5, lr}
 8016976:	680a      	ldr	r2, [r1, #0]
 8016978:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	@ 0x30
 801697c:	f8d2 208c 	ldr.w	r2, [r2, #140]	@ 0x8c
 8016980:	4608      	mov	r0, r1
 8016982:	4790      	blx	r2
 8016984:	4629      	mov	r1, r5
 8016986:	4602      	mov	r2, r0
 8016988:	4620      	mov	r0, r4
 801698a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801698e:	f7ff baab 	b.w	8015ee8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

08016992 <_ZNK8touchgfx12GraphLabelsY31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 8016992:	b538      	push	{r3, r4, r5, lr}
 8016994:	680a      	ldr	r2, [r1, #0]
 8016996:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	@ 0x30
 801699a:	f8d2 2094 	ldr.w	r2, [r2, #148]	@ 0x94
 801699e:	4608      	mov	r0, r1
 80169a0:	4790      	blx	r2
 80169a2:	4629      	mov	r1, r5
 80169a4:	4602      	mov	r2, r0
 80169a6:	4620      	mov	r0, r4
 80169a8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80169ac:	f7ff ba9c 	b.w	8015ee8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

080169b0 <_ZN8touchgfx12GraphLabelsYD0Ev>:
 80169b0:	b510      	push	{r4, lr}
 80169b2:	214c      	movs	r1, #76	@ 0x4c
 80169b4:	4604      	mov	r4, r0
 80169b6:	f016 ff7a 	bl	802d8ae <_ZdlPvj>
 80169ba:	4620      	mov	r0, r4
 80169bc:	bd10      	pop	{r4, pc}

080169be <_ZN8touchgfx12GraphLabelsXD0Ev>:
 80169be:	b510      	push	{r4, lr}
 80169c0:	214c      	movs	r1, #76	@ 0x4c
 80169c2:	4604      	mov	r4, r0
 80169c4:	f016 ff73 	bl	802d8ae <_ZdlPvj>
 80169c8:	4620      	mov	r0, r4
 80169ca:	bd10      	pop	{r4, pc}

080169cc <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 80169cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80169d0:	b08d      	sub	sp, #52	@ 0x34
 80169d2:	e9dd 9a18 	ldrd	r9, sl, [sp, #96]	@ 0x60
 80169d6:	9309      	str	r3, [sp, #36]	@ 0x24
 80169d8:	f89d 3068 	ldrb.w	r3, [sp, #104]	@ 0x68
 80169dc:	930a      	str	r3, [sp, #40]	@ 0x28
 80169de:	4606      	mov	r6, r0
 80169e0:	e9cd 1207 	strd	r1, r2, [sp, #28]
 80169e4:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	@ 0x58
 80169e8:	f1b9 0f00 	cmp.w	r9, #0
 80169ec:	d117      	bne.n	8016a1e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x52>
 80169ee:	2f00      	cmp	r7, #0
 80169f0:	dc7c      	bgt.n	8016aec <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x120>
 80169f2:	f1b8 0f00 	cmp.w	r8, #0
 80169f6:	da01      	bge.n	80169fc <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 80169f8:	2f00      	cmp	r7, #0
 80169fa:	d17a      	bne.n	8016af2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 80169fc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80169fe:	9318      	str	r3, [sp, #96]	@ 0x60
 8016a00:	2300      	movs	r3, #0
 8016a02:	e9cd 3316 	strd	r3, r3, [sp, #88]	@ 0x58
 8016a06:	6832      	ldr	r2, [r6, #0]
 8016a08:	9907      	ldr	r1, [sp, #28]
 8016a0a:	f8d2 408c 	ldr.w	r4, [r2, #140]	@ 0x8c
 8016a0e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8016a12:	4630      	mov	r0, r6
 8016a14:	46a4      	mov	ip, r4
 8016a16:	b00d      	add	sp, #52	@ 0x34
 8016a18:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016a1c:	4760      	bx	ip
 8016a1e:	fb97 f4f9 	sdiv	r4, r7, r9
 8016a22:	1e63      	subs	r3, r4, #1
 8016a24:	9305      	str	r3, [sp, #20]
 8016a26:	f1ba 0f00 	cmp.w	sl, #0
 8016a2a:	d122      	bne.n	8016a72 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xa6>
 8016a2c:	fb98 faf9 	sdiv	sl, r8, r9
 8016a30:	fb03 f509 	mul.w	r5, r3, r9
 8016a34:	f10a 0a02 	add.w	sl, sl, #2
 8016a38:	9b05      	ldr	r3, [sp, #20]
 8016a3a:	459a      	cmp	sl, r3
 8016a3c:	d059      	beq.n	8016af2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 8016a3e:	42af      	cmp	r7, r5
 8016a40:	dc5a      	bgt.n	8016af8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x12c>
 8016a42:	45a8      	cmp	r8, r5
 8016a44:	da01      	bge.n	8016a4a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>
 8016a46:	42af      	cmp	r7, r5
 8016a48:	db0e      	blt.n	8016a68 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 8016a4a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016a4c:	9302      	str	r3, [sp, #8]
 8016a4e:	9905      	ldr	r1, [sp, #20]
 8016a50:	6b73      	ldr	r3, [r6, #52]	@ 0x34
 8016a52:	6832      	ldr	r2, [r6, #0]
 8016a54:	434b      	muls	r3, r1
 8016a56:	e9cd 5300 	strd	r5, r3, [sp]
 8016a5a:	9907      	ldr	r1, [sp, #28]
 8016a5c:	f8d2 b08c 	ldr.w	fp, [r2, #140]	@ 0x8c
 8016a60:	4630      	mov	r0, r6
 8016a62:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8016a66:	47d8      	blx	fp
 8016a68:	9b05      	ldr	r3, [sp, #20]
 8016a6a:	3301      	adds	r3, #1
 8016a6c:	9305      	str	r3, [sp, #20]
 8016a6e:	444d      	add	r5, r9
 8016a70:	e7e2      	b.n	8016a38 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x6c>
 8016a72:	fb97 f3fa 	sdiv	r3, r7, sl
 8016a76:	3b01      	subs	r3, #1
 8016a78:	9306      	str	r3, [sp, #24]
 8016a7a:	9a06      	ldr	r2, [sp, #24]
 8016a7c:	fb98 f3fa 	sdiv	r3, r8, sl
 8016a80:	fb02 fb0a 	mul.w	fp, r2, sl
 8016a84:	9a05      	ldr	r2, [sp, #20]
 8016a86:	3302      	adds	r3, #2
 8016a88:	fb02 f509 	mul.w	r5, r2, r9
 8016a8c:	930b      	str	r3, [sp, #44]	@ 0x2c
 8016a8e:	45ab      	cmp	fp, r5
 8016a90:	dd1d      	ble.n	8016ace <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 8016a92:	42af      	cmp	r7, r5
 8016a94:	dc08      	bgt.n	8016aa8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xdc>
 8016a96:	45a8      	cmp	r8, r5
 8016a98:	da08      	bge.n	8016aac <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 8016a9a:	42af      	cmp	r7, r5
 8016a9c:	da06      	bge.n	8016aac <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 8016a9e:	9b05      	ldr	r3, [sp, #20]
 8016aa0:	3301      	adds	r3, #1
 8016aa2:	9305      	str	r3, [sp, #20]
 8016aa4:	444d      	add	r5, r9
 8016aa6:	e7f2      	b.n	8016a8e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 8016aa8:	45a8      	cmp	r8, r5
 8016aaa:	dcf8      	bgt.n	8016a9e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 8016aac:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016aae:	9302      	str	r3, [sp, #8]
 8016ab0:	9905      	ldr	r1, [sp, #20]
 8016ab2:	6b73      	ldr	r3, [r6, #52]	@ 0x34
 8016ab4:	6832      	ldr	r2, [r6, #0]
 8016ab6:	434b      	muls	r3, r1
 8016ab8:	e9cd 5300 	strd	r5, r3, [sp]
 8016abc:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 8016ac0:	9907      	ldr	r1, [sp, #28]
 8016ac2:	461c      	mov	r4, r3
 8016ac4:	4630      	mov	r0, r6
 8016ac6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8016aca:	47a0      	blx	r4
 8016acc:	e7e7      	b.n	8016a9e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 8016ace:	45ab      	cmp	fp, r5
 8016ad0:	db04      	blt.n	8016adc <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x110>
 8016ad2:	9b05      	ldr	r3, [sp, #20]
 8016ad4:	3301      	adds	r3, #1
 8016ad6:	9305      	str	r3, [sp, #20]
 8016ad8:	444d      	add	r5, r9
 8016ada:	e7f8      	b.n	8016ace <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 8016adc:	9b06      	ldr	r3, [sp, #24]
 8016ade:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8016ae0:	3301      	adds	r3, #1
 8016ae2:	4293      	cmp	r3, r2
 8016ae4:	9306      	str	r3, [sp, #24]
 8016ae6:	d004      	beq.n	8016af2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 8016ae8:	44d3      	add	fp, sl
 8016aea:	e7d0      	b.n	8016a8e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 8016aec:	f1b8 0f00 	cmp.w	r8, #0
 8016af0:	dd84      	ble.n	80169fc <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 8016af2:	b00d      	add	sp, #52	@ 0x34
 8016af4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016af8:	45a8      	cmp	r8, r5
 8016afa:	dcb5      	bgt.n	8016a68 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 8016afc:	e7a5      	b.n	8016a4a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>

08016afe <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 8016afe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016b02:	f9b3 4120 	ldrsh.w	r4, [r3, #288]	@ 0x120
 8016b06:	b089      	sub	sp, #36	@ 0x24
 8016b08:	2c00      	cmp	r4, #0
 8016b0a:	9007      	str	r0, [sp, #28]
 8016b0c:	468a      	mov	sl, r1
 8016b0e:	4693      	mov	fp, r2
 8016b10:	461d      	mov	r5, r3
 8016b12:	e9dd c612 	ldrd	ip, r6, [sp, #72]	@ 0x48
 8016b16:	e9dd 7814 	ldrd	r7, r8, [sp, #80]	@ 0x50
 8016b1a:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 8016b1e:	dd03      	ble.n	8016b28 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 8016b20:	4564      	cmp	r4, ip
 8016b22:	dd01      	ble.n	8016b28 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 8016b24:	42b4      	cmp	r4, r6
 8016b26:	dd0e      	ble.n	8016b46 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x48>
 8016b28:	e9cd 8915 	strd	r8, r9, [sp, #84]	@ 0x54
 8016b2c:	e9cd 6713 	strd	r6, r7, [sp, #76]	@ 0x4c
 8016b30:	f8cd c048 	str.w	ip, [sp, #72]	@ 0x48
 8016b34:	9807      	ldr	r0, [sp, #28]
 8016b36:	462b      	mov	r3, r5
 8016b38:	465a      	mov	r2, fp
 8016b3a:	4651      	mov	r1, sl
 8016b3c:	b009      	add	sp, #36	@ 0x24
 8016b3e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016b42:	f7ff bf43 	b.w	80169cc <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 8016b46:	f104 3eff 	add.w	lr, r4, #4294967295
 8016b4a:	e9cd 8903 	strd	r8, r9, [sp, #12]
 8016b4e:	9702      	str	r7, [sp, #8]
 8016b50:	e9cd ce00 	strd	ip, lr, [sp]
 8016b54:	f7ff ff3a 	bl	80169cc <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 8016b58:	e9cd 8915 	strd	r8, r9, [sp, #84]	@ 0x54
 8016b5c:	e9cd 6713 	strd	r6, r7, [sp, #76]	@ 0x4c
 8016b60:	9412      	str	r4, [sp, #72]	@ 0x48
 8016b62:	e7e7      	b.n	8016b34 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x36>

08016b64 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>:
 8016b64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016b68:	f1b3 0900 	subs.w	r9, r3, #0
 8016b6c:	460d      	mov	r5, r1
 8016b6e:	4690      	mov	r8, r2
 8016b70:	9f08      	ldr	r7, [sp, #32]
 8016b72:	f8bd a024 	ldrh.w	sl, [sp, #36]	@ 0x24
 8016b76:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8016b78:	da18      	bge.n	8016bac <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 8016b7a:	2a01      	cmp	r2, #1
 8016b7c:	dd16      	ble.n	8016bac <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 8016b7e:	232d      	movs	r3, #45	@ 0x2d
 8016b80:	800b      	strh	r3, [r1, #0]
 8016b82:	f1c9 0900 	rsb	r9, r9, #0
 8016b86:	2001      	movs	r0, #1
 8016b88:	2f00      	cmp	r7, #0
 8016b8a:	d111      	bne.n	8016bb0 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x4c>
 8016b8c:	eba8 0100 	sub.w	r1, r8, r0
 8016b90:	2302      	movs	r3, #2
 8016b92:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 8016b96:	fb96 f3f3 	sdiv	r3, r6, r3
 8016b9a:	4a24      	ldr	r2, [pc, #144]	@ (8016c2c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 8016b9c:	444b      	add	r3, r9
 8016b9e:	b289      	uxth	r1, r1
 8016ba0:	fb93 f3f6 	sdiv	r3, r3, r6
 8016ba4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016ba8:	f007 bd48 	b.w	801e63c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8016bac:	2000      	movs	r0, #0
 8016bae:	e7eb      	b.n	8016b88 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x24>
 8016bb0:	dd39      	ble.n	8016c26 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 8016bb2:	fb99 f4f6 	sdiv	r4, r9, r6
 8016bb6:	eba8 0100 	sub.w	r1, r8, r0
 8016bba:	4623      	mov	r3, r4
 8016bbc:	4a1b      	ldr	r2, [pc, #108]	@ (8016c2c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 8016bbe:	b289      	uxth	r1, r1
 8016bc0:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 8016bc4:	f007 fd3a 	bl	801e63c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8016bc8:	4628      	mov	r0, r5
 8016bca:	f007 f9c9 	bl	801df60 <_ZN8touchgfx7Unicode6strlenEPKt>
 8016bce:	f108 38ff 	add.w	r8, r8, #4294967295
 8016bd2:	4580      	cmp	r8, r0
 8016bd4:	dd27      	ble.n	8016c26 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 8016bd6:	f825 a010 	strh.w	sl, [r5, r0, lsl #1]
 8016bda:	fb06 9314 	mls	r3, r6, r4, r9
 8016bde:	3001      	adds	r0, #1
 8016be0:	2200      	movs	r2, #0
 8016be2:	f04f 090a 	mov.w	r9, #10
 8016be6:	f107 3aff 	add.w	sl, r7, #4294967295
 8016bea:	f04f 0e02 	mov.w	lr, #2
 8016bee:	fb96 fefe 	sdiv	lr, r6, lr
 8016bf2:	4580      	cmp	r8, r0
 8016bf4:	4684      	mov	ip, r0
 8016bf6:	dd13      	ble.n	8016c20 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xbc>
 8016bf8:	fb09 f303 	mul.w	r3, r9, r3
 8016bfc:	4592      	cmp	sl, r2
 8016bfe:	f102 0201 	add.w	r2, r2, #1
 8016c02:	bf08      	it	eq
 8016c04:	4473      	addeq	r3, lr
 8016c06:	f100 0c01 	add.w	ip, r0, #1
 8016c0a:	fb93 f4f6 	sdiv	r4, r3, r6
 8016c0e:	4297      	cmp	r7, r2
 8016c10:	f104 0130 	add.w	r1, r4, #48	@ 0x30
 8016c14:	f825 1010 	strh.w	r1, [r5, r0, lsl #1]
 8016c18:	fb06 3314 	mls	r3, r6, r4, r3
 8016c1c:	4660      	mov	r0, ip
 8016c1e:	d1e8      	bne.n	8016bf2 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x8e>
 8016c20:	2300      	movs	r3, #0
 8016c22:	f825 301c 	strh.w	r3, [r5, ip, lsl #1]
 8016c26:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016c2a:	bf00      	nop
 8016c2c:	0803290c 	.word	0x0803290c

08016c30 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs>:
 8016c30:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016c34:	4a69      	ldr	r2, [pc, #420]	@ (8016ddc <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1ac>)
 8016c36:	8f83      	ldrh	r3, [r0, #60]	@ 0x3c
 8016c38:	8812      	ldrh	r2, [r2, #0]
 8016c3a:	429a      	cmp	r2, r3
 8016c3c:	b093      	sub	sp, #76	@ 0x4c
 8016c3e:	4604      	mov	r4, r0
 8016c40:	460e      	mov	r6, r1
 8016c42:	d93a      	bls.n	8016cba <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 8016c44:	4a66      	ldr	r2, [pc, #408]	@ (8016de0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b0>)
 8016c46:	6812      	ldr	r2, [r2, #0]
 8016c48:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8016c4c:	4b65      	ldr	r3, [pc, #404]	@ (8016de4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b4>)
 8016c4e:	681b      	ldr	r3, [r3, #0]
 8016c50:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 8016c54:	f1b8 0f00 	cmp.w	r8, #0
 8016c58:	d02f      	beq.n	8016cba <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 8016c5a:	6803      	ldr	r3, [r0, #0]
 8016c5c:	6945      	ldr	r5, [r0, #20]
 8016c5e:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8016c60:	2d00      	cmp	r5, #0
 8016c62:	f000 80b7 	beq.w	8016dd4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1a4>
 8016c66:	696f      	ldr	r7, [r5, #20]
 8016c68:	4798      	blx	r3
 8016c6a:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 8016c6e:	fb13 f000 	smulbb	r0, r3, r0
 8016c72:	b280      	uxth	r0, r0
 8016c74:	1c43      	adds	r3, r0, #1
 8016c76:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8016c7a:	0a03      	lsrs	r3, r0, #8
 8016c7c:	d01d      	beq.n	8016cba <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 8016c7e:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8016c80:	6823      	ldr	r3, [r4, #0]
 8016c82:	434e      	muls	r6, r1
 8016c84:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8016c88:	4639      	mov	r1, r7
 8016c8a:	4620      	mov	r0, r4
 8016c8c:	4798      	blx	r3
 8016c8e:	6823      	ldr	r3, [r4, #0]
 8016c90:	4605      	mov	r5, r0
 8016c92:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8016c96:	4639      	mov	r1, r7
 8016c98:	4620      	mov	r0, r4
 8016c9a:	4798      	blx	r3
 8016c9c:	2d00      	cmp	r5, #0
 8016c9e:	dd0f      	ble.n	8016cc0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x90>
 8016ca0:	fb96 f3f5 	sdiv	r3, r6, r5
 8016ca4:	436b      	muls	r3, r5
 8016ca6:	1b9a      	subs	r2, r3, r6
 8016ca8:	4253      	negs	r3, r2
 8016caa:	4153      	adcs	r3, r2
 8016cac:	2800      	cmp	r0, #0
 8016cae:	dd09      	ble.n	8016cc4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x94>
 8016cb0:	fb96 f2f0 	sdiv	r2, r6, r0
 8016cb4:	4350      	muls	r0, r2
 8016cb6:	42b0      	cmp	r0, r6
 8016cb8:	d10e      	bne.n	8016cd8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 8016cba:	b013      	add	sp, #76	@ 0x4c
 8016cbc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016cc0:	2300      	movs	r3, #0
 8016cc2:	e7f3      	b.n	8016cac <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x7c>
 8016cc4:	d108      	bne.n	8016cd8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 8016cc6:	2d00      	cmp	r5, #0
 8016cc8:	f040 8081 	bne.w	8016dce <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x19e>
 8016ccc:	2e00      	cmp	r6, #0
 8016cce:	d064      	beq.n	8016d9a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x16a>
 8016cd0:	2b00      	cmp	r3, #0
 8016cd2:	d0f2      	beq.n	8016cba <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 8016cd4:	462a      	mov	r2, r5
 8016cd6:	e007      	b.n	8016ce8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 8016cd8:	2b00      	cmp	r3, #0
 8016cda:	d0ee      	beq.n	8016cba <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 8016cdc:	2d00      	cmp	r5, #0
 8016cde:	d0f9      	beq.n	8016cd4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa4>
 8016ce0:	fb96 f2f5 	sdiv	r2, r6, r5
 8016ce4:	6b65      	ldr	r5, [r4, #52]	@ 0x34
 8016ce6:	436a      	muls	r2, r5
 8016ce8:	683b      	ldr	r3, [r7, #0]
 8016cea:	4631      	mov	r1, r6
 8016cec:	f8d3 3110 	ldr.w	r3, [r3, #272]	@ 0x110
 8016cf0:	4638      	mov	r0, r7
 8016cf2:	4798      	blx	r3
 8016cf4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8016cf6:	9302      	str	r3, [sp, #8]
 8016cf8:	f8b4 3044 	ldrh.w	r3, [r4, #68]	@ 0x44
 8016cfc:	9301      	str	r3, [sp, #4]
 8016cfe:	f8b4 3042 	ldrh.w	r3, [r4, #66]	@ 0x42
 8016d02:	9300      	str	r3, [sp, #0]
 8016d04:	2214      	movs	r2, #20
 8016d06:	4603      	mov	r3, r0
 8016d08:	a908      	add	r1, sp, #32
 8016d0a:	4620      	mov	r0, r4
 8016d0c:	f7ff ff2a 	bl	8016b64 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 8016d10:	4b35      	ldr	r3, [pc, #212]	@ (8016de8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b8>)
 8016d12:	8fa1      	ldrh	r1, [r4, #60]	@ 0x3c
 8016d14:	6818      	ldr	r0, [r3, #0]
 8016d16:	f7f3 fb9d 	bl	800a454 <_ZNK8touchgfx5Texts7getTextEt>
 8016d1a:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 8016d1e:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8016d22:	4681      	mov	r9, r0
 8016d24:	f8d8 3000 	ldr.w	r3, [r8]
 8016d28:	d139      	bne.n	8016d9e <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x16e>
 8016d2a:	4601      	mov	r1, r0
 8016d2c:	699b      	ldr	r3, [r3, #24]
 8016d2e:	aa08      	add	r2, sp, #32
 8016d30:	4640      	mov	r0, r8
 8016d32:	4798      	blx	r3
 8016d34:	b205      	sxth	r5, r0
 8016d36:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 8016d3a:	f8b7 906c 	ldrh.w	r9, [r7, #108]	@ 0x6c
 8016d3e:	2b01      	cmp	r3, #1
 8016d40:	683b      	ldr	r3, [r7, #0]
 8016d42:	bf88      	it	hi
 8016d44:	f105 0801 	addhi.w	r8, r5, #1
 8016d48:	4631      	mov	r1, r6
 8016d4a:	f04f 0002 	mov.w	r0, #2
 8016d4e:	f8d3 3114 	ldr.w	r3, [r3, #276]	@ 0x114
 8016d52:	bf8c      	ite	hi
 8016d54:	fb98 f8f0 	sdivhi	r8, r8, r0
 8016d58:	fb95 f8f0 	sdivls	r8, r5, r0
 8016d5c:	4638      	mov	r0, r7
 8016d5e:	bf88      	it	hi
 8016d60:	fa0f f888 	sxthhi.w	r8, r8
 8016d64:	4798      	blx	r3
 8016d66:	ab12      	add	r3, sp, #72	@ 0x48
 8016d68:	f843 0d34 	str.w	r0, [r3, #-52]!
 8016d6c:	4618      	mov	r0, r3
 8016d6e:	f7fe fe89 	bl	8015a84 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8016d72:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8016d76:	f8ad 301e 	strh.w	r3, [sp, #30]
 8016d7a:	4448      	add	r0, r9
 8016d7c:	6823      	ldr	r3, [r4, #0]
 8016d7e:	f8ad 501c 	strh.w	r5, [sp, #28]
 8016d82:	eba0 0808 	sub.w	r8, r0, r8
 8016d86:	2200      	movs	r2, #0
 8016d88:	f8ad 8018 	strh.w	r8, [sp, #24]
 8016d8c:	f8ad 201a 	strh.w	r2, [sp, #26]
 8016d90:	691b      	ldr	r3, [r3, #16]
 8016d92:	a906      	add	r1, sp, #24
 8016d94:	4620      	mov	r0, r4
 8016d96:	4798      	blx	r3
 8016d98:	e78f      	b.n	8016cba <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 8016d9a:	4632      	mov	r2, r6
 8016d9c:	e7a4      	b.n	8016ce8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 8016d9e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8016da0:	4640      	mov	r0, r8
 8016da2:	4798      	blx	r3
 8016da4:	f8d8 3000 	ldr.w	r3, [r8]
 8016da8:	4605      	mov	r5, r0
 8016daa:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8016dac:	aa08      	add	r2, sp, #32
 8016dae:	4649      	mov	r1, r9
 8016db0:	4640      	mov	r0, r8
 8016db2:	4798      	blx	r3
 8016db4:	f8d8 3000 	ldr.w	r3, [r8]
 8016db8:	fb15 f500 	smulbb	r5, r5, r0
 8016dbc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8016dbe:	aa08      	add	r2, sp, #32
 8016dc0:	4649      	mov	r1, r9
 8016dc2:	4640      	mov	r0, r8
 8016dc4:	4798      	blx	r3
 8016dc6:	b2ad      	uxth	r5, r5
 8016dc8:	4405      	add	r5, r0
 8016dca:	b22d      	sxth	r5, r5
 8016dcc:	e7b3      	b.n	8016d36 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x106>
 8016dce:	2b00      	cmp	r3, #0
 8016dd0:	d186      	bne.n	8016ce0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb0>
 8016dd2:	e772      	b.n	8016cba <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 8016dd4:	4798      	blx	r3
 8016dd6:	f895 302c 	ldrb.w	r3, [r5, #44]	@ 0x2c
 8016dda:	deff      	udf	#255	@ 0xff
 8016ddc:	2000e468 	.word	0x2000e468
 8016de0:	2000e464 	.word	0x2000e464
 8016de4:	2000e46c 	.word	0x2000e46c
 8016de8:	2000e470 	.word	0x2000e470

08016dec <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 8016dec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016df0:	461e      	mov	r6, r3
 8016df2:	b09b      	sub	sp, #108	@ 0x6c
 8016df4:	681b      	ldr	r3, [r3, #0]
 8016df6:	9104      	str	r1, [sp, #16]
 8016df8:	f8d3 3114 	ldr.w	r3, [r3, #276]	@ 0x114
 8016dfc:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8016dfe:	4604      	mov	r4, r0
 8016e00:	4630      	mov	r0, r6
 8016e02:	4690      	mov	r8, r2
 8016e04:	4798      	blx	r3
 8016e06:	af1a      	add	r7, sp, #104	@ 0x68
 8016e08:	f847 0d28 	str.w	r0, [r7, #-40]!
 8016e0c:	4638      	mov	r0, r7
 8016e0e:	f7fe fe39 	bl	8015a84 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8016e12:	f8b6 3116 	ldrh.w	r3, [r6, #278]	@ 0x116
 8016e16:	1ac0      	subs	r0, r0, r3
 8016e18:	b200      	sxth	r0, r0
 8016e1a:	2800      	cmp	r0, #0
 8016e1c:	f2c0 80b9 	blt.w	8016f92 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a6>
 8016e20:	f8b6 2118 	ldrh.w	r2, [r6, #280]	@ 0x118
 8016e24:	441a      	add	r2, r3
 8016e26:	f8b6 3040 	ldrh.w	r3, [r6, #64]	@ 0x40
 8016e2a:	1a9b      	subs	r3, r3, r2
 8016e2c:	b21b      	sxth	r3, r3
 8016e2e:	4298      	cmp	r0, r3
 8016e30:	f280 80af 	bge.w	8016f92 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a6>
 8016e34:	6833      	ldr	r3, [r6, #0]
 8016e36:	e9dd 1224 	ldrd	r1, r2, [sp, #144]	@ 0x90
 8016e3a:	f8d3 3110 	ldr.w	r3, [r3, #272]	@ 0x110
 8016e3e:	4630      	mov	r0, r6
 8016e40:	4798      	blx	r3
 8016e42:	6833      	ldr	r3, [r6, #0]
 8016e44:	f8b4 9042 	ldrh.w	r9, [r4, #66]	@ 0x42
 8016e48:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8016e4c:	f8b4 b044 	ldrh.w	fp, [r4, #68]	@ 0x44
 8016e50:	4605      	mov	r5, r0
 8016e52:	4630      	mov	r0, r6
 8016e54:	4798      	blx	r3
 8016e56:	f8cd 9000 	str.w	r9, [sp]
 8016e5a:	e9cd b001 	strd	fp, r0, [sp, #4]
 8016e5e:	462b      	mov	r3, r5
 8016e60:	2214      	movs	r2, #20
 8016e62:	4639      	mov	r1, r7
 8016e64:	4620      	mov	r0, r4
 8016e66:	f7ff fe7d 	bl	8016b64 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 8016e6a:	4b57      	ldr	r3, [pc, #348]	@ (8016fc8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1dc>)
 8016e6c:	8fa1      	ldrh	r1, [r4, #60]	@ 0x3c
 8016e6e:	6818      	ldr	r0, [r3, #0]
 8016e70:	f7f3 faf0 	bl	800a454 <_ZNK8touchgfx5Texts7getTextEt>
 8016e74:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 8016e78:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8016e7c:	4681      	mov	r9, r0
 8016e7e:	f8d8 3000 	ldr.w	r3, [r8]
 8016e82:	f040 8089 	bne.w	8016f98 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1ac>
 8016e86:	4601      	mov	r1, r0
 8016e88:	699b      	ldr	r3, [r3, #24]
 8016e8a:	463a      	mov	r2, r7
 8016e8c:	4640      	mov	r0, r8
 8016e8e:	4798      	blx	r3
 8016e90:	b205      	sxth	r5, r0
 8016e92:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 8016e96:	6832      	ldr	r2, [r6, #0]
 8016e98:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8016e9a:	f8d2 2114 	ldr.w	r2, [r2, #276]	@ 0x114
 8016e9e:	2b01      	cmp	r3, #1
 8016ea0:	f8b6 306c 	ldrh.w	r3, [r6, #108]	@ 0x6c
 8016ea4:	9305      	str	r3, [sp, #20]
 8016ea6:	bf88      	it	hi
 8016ea8:	f105 0b01 	addhi.w	fp, r5, #1
 8016eac:	f04f 0002 	mov.w	r0, #2
 8016eb0:	bf94      	ite	ls
 8016eb2:	fb95 fbf0 	sdivls	fp, r5, r0
 8016eb6:	fb9b fbf0 	sdivhi	fp, fp, r0
 8016eba:	4630      	mov	r0, r6
 8016ebc:	bf88      	it	hi
 8016ebe:	fa0f fb8b 	sxthhi.w	fp, fp
 8016ec2:	4790      	blx	r2
 8016ec4:	f10d 0a68 	add.w	sl, sp, #104	@ 0x68
 8016ec8:	2600      	movs	r6, #0
 8016eca:	f84a 0d3c 	str.w	r0, [sl, #-60]!
 8016ece:	4650      	mov	r0, sl
 8016ed0:	f7fe fdd8 	bl	8015a84 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8016ed4:	9b05      	ldr	r3, [sp, #20]
 8016ed6:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8016eda:	f8ad 5020 	strh.w	r5, [sp, #32]
 8016ede:	4418      	add	r0, r3
 8016ee0:	eba0 0b0b 	sub.w	fp, r0, fp
 8016ee4:	f8ad b01c 	strh.w	fp, [sp, #28]
 8016ee8:	f8ad 601e 	strh.w	r6, [sp, #30]
 8016eec:	f8ad 1022 	strh.w	r1, [sp, #34]	@ 0x22
 8016ef0:	ad07      	add	r5, sp, #28
 8016ef2:	e895 0003 	ldmia.w	r5, {r0, r1}
 8016ef6:	f10d 0b24 	add.w	fp, sp, #36	@ 0x24
 8016efa:	e88b 0003 	stmia.w	fp, {r0, r1}
 8016efe:	9904      	ldr	r1, [sp, #16]
 8016f00:	4658      	mov	r0, fp
 8016f02:	f7fb fe97 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 8016f06:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8016f0a:	42b3      	cmp	r3, r6
 8016f0c:	dd41      	ble.n	8016f92 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a6>
 8016f0e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 8016f12:	42b3      	cmp	r3, r6
 8016f14:	dd3d      	ble.n	8016f92 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a6>
 8016f16:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8016f1a:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016f1e:	1a5b      	subs	r3, r3, r1
 8016f20:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8016f24:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 8016f28:	f8bd 3026 	ldrh.w	r3, [sp, #38]	@ 0x26
 8016f2c:	1a5b      	subs	r3, r3, r1
 8016f2e:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 8016f32:	6823      	ldr	r3, [r4, #0]
 8016f34:	4629      	mov	r1, r5
 8016f36:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016f38:	4620      	mov	r0, r4
 8016f3a:	4798      	blx	r3
 8016f3c:	4b23      	ldr	r3, [pc, #140]	@ (8016fcc <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1e0>)
 8016f3e:	8fa1      	ldrh	r1, [r4, #60]	@ 0x3c
 8016f40:	681b      	ldr	r3, [r3, #0]
 8016f42:	f894 0040 	ldrb.w	r0, [r4, #64]	@ 0x40
 8016f46:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8016f4a:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8016f4c:	785b      	ldrb	r3, [r3, #1]
 8016f4e:	910d      	str	r1, [sp, #52]	@ 0x34
 8016f50:	f3c3 0c01 	ubfx	ip, r3, #0, #2
 8016f54:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8016f58:	f88d 3031 	strb.w	r3, [sp, #49]	@ 0x31
 8016f5c:	f89d 3098 	ldrb.w	r3, [sp, #152]	@ 0x98
 8016f60:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 8016f64:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 8016f68:	f88d c030 	strb.w	ip, [sp, #48]	@ 0x30
 8016f6c:	f88d 0032 	strb.w	r0, [sp, #50]	@ 0x32
 8016f70:	f8ad 6038 	strh.w	r6, [sp, #56]	@ 0x38
 8016f74:	f88d 603b 	strb.w	r6, [sp, #59]	@ 0x3b
 8016f78:	f88d 603c 	strb.w	r6, [sp, #60]	@ 0x3c
 8016f7c:	f7fc f954 	bl	8013228 <_ZN8touchgfx3HAL3lcdEv>
 8016f80:	e9cd 7602 	strd	r7, r6, [sp, #8]
 8016f84:	e9cd a900 	strd	sl, r9, [sp]
 8016f88:	465b      	mov	r3, fp
 8016f8a:	e895 0006 	ldmia.w	r5, {r1, r2}
 8016f8e:	f7f3 fa0b 	bl	800a3a8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8016f92:	b01b      	add	sp, #108	@ 0x6c
 8016f94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016f98:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8016f9a:	4640      	mov	r0, r8
 8016f9c:	4798      	blx	r3
 8016f9e:	f8d8 3000 	ldr.w	r3, [r8]
 8016fa2:	4605      	mov	r5, r0
 8016fa4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8016fa6:	463a      	mov	r2, r7
 8016fa8:	4649      	mov	r1, r9
 8016faa:	4640      	mov	r0, r8
 8016fac:	4798      	blx	r3
 8016fae:	f8d8 3000 	ldr.w	r3, [r8]
 8016fb2:	fb15 f500 	smulbb	r5, r5, r0
 8016fb6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8016fb8:	463a      	mov	r2, r7
 8016fba:	4649      	mov	r1, r9
 8016fbc:	4640      	mov	r0, r8
 8016fbe:	4798      	blx	r3
 8016fc0:	b2ad      	uxth	r5, r5
 8016fc2:	4405      	add	r5, r0
 8016fc4:	b22d      	sxth	r5, r5
 8016fc6:	e764      	b.n	8016e92 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa6>
 8016fc8:	2000e470 	.word	0x2000e470
 8016fcc:	2000e464 	.word	0x2000e464

08016fd0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 8016fd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016fd4:	4698      	mov	r8, r3
 8016fd6:	b09b      	sub	sp, #108	@ 0x6c
 8016fd8:	681b      	ldr	r3, [r3, #0]
 8016fda:	9104      	str	r1, [sp, #16]
 8016fdc:	f8d3 3118 	ldr.w	r3, [r3, #280]	@ 0x118
 8016fe0:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8016fe2:	4604      	mov	r4, r0
 8016fe4:	4640      	mov	r0, r8
 8016fe6:	4617      	mov	r7, r2
 8016fe8:	4798      	blx	r3
 8016fea:	ae1a      	add	r6, sp, #104	@ 0x68
 8016fec:	f846 0d28 	str.w	r0, [r6, #-40]!
 8016ff0:	4630      	mov	r0, r6
 8016ff2:	f7fe fd47 	bl	8015a84 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8016ff6:	f8b8 3114 	ldrh.w	r3, [r8, #276]	@ 0x114
 8016ffa:	1ac0      	subs	r0, r0, r3
 8016ffc:	b200      	sxth	r0, r0
 8016ffe:	2800      	cmp	r0, #0
 8017000:	f2c0 80bb 	blt.w	801717a <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1aa>
 8017004:	f8b8 211a 	ldrh.w	r2, [r8, #282]	@ 0x11a
 8017008:	441a      	add	r2, r3
 801700a:	f8b8 3042 	ldrh.w	r3, [r8, #66]	@ 0x42
 801700e:	1a9b      	subs	r3, r3, r2
 8017010:	b21b      	sxth	r3, r3
 8017012:	4298      	cmp	r0, r3
 8017014:	f280 80b1 	bge.w	801717a <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1aa>
 8017018:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801701a:	9302      	str	r3, [sp, #8]
 801701c:	f8b4 3044 	ldrh.w	r3, [r4, #68]	@ 0x44
 8017020:	9301      	str	r3, [sp, #4]
 8017022:	f8b4 3042 	ldrh.w	r3, [r4, #66]	@ 0x42
 8017026:	9300      	str	r3, [sp, #0]
 8017028:	2214      	movs	r2, #20
 801702a:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801702c:	4631      	mov	r1, r6
 801702e:	4620      	mov	r0, r4
 8017030:	f7ff fd98 	bl	8016b64 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 8017034:	4b56      	ldr	r3, [pc, #344]	@ (8017190 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1c0>)
 8017036:	8fa1      	ldrh	r1, [r4, #60]	@ 0x3c
 8017038:	6818      	ldr	r0, [r3, #0]
 801703a:	f7f3 fa0b 	bl	800a454 <_ZNK8touchgfx5Texts7getTextEt>
 801703e:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 8017042:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8017046:	4681      	mov	r9, r0
 8017048:	683b      	ldr	r3, [r7, #0]
 801704a:	f040 8099 	bne.w	8017180 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b0>
 801704e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017050:	4638      	mov	r0, r7
 8017052:	4798      	blx	r3
 8017054:	683b      	ldr	r3, [r7, #0]
 8017056:	4605      	mov	r5, r0
 8017058:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801705a:	4632      	mov	r2, r6
 801705c:	4649      	mov	r1, r9
 801705e:	4638      	mov	r0, r7
 8017060:	4798      	blx	r3
 8017062:	683b      	ldr	r3, [r7, #0]
 8017064:	fb15 f500 	smulbb	r5, r5, r0
 8017068:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801706a:	4632      	mov	r2, r6
 801706c:	4649      	mov	r1, r9
 801706e:	4638      	mov	r0, r7
 8017070:	4798      	blx	r3
 8017072:	b2ad      	uxth	r5, r5
 8017074:	4405      	add	r5, r0
 8017076:	b22d      	sxth	r5, r5
 8017078:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 801707c:	f8d8 2000 	ldr.w	r2, [r8]
 8017080:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8017082:	f8d2 2118 	ldr.w	r2, [r2, #280]	@ 0x118
 8017086:	2b01      	cmp	r3, #1
 8017088:	f8b8 30c6 	ldrh.w	r3, [r8, #198]	@ 0xc6
 801708c:	9305      	str	r3, [sp, #20]
 801708e:	bf88      	it	hi
 8017090:	f105 0b01 	addhi.w	fp, r5, #1
 8017094:	f04f 0002 	mov.w	r0, #2
 8017098:	bf94      	ite	ls
 801709a:	fb95 fbf0 	sdivls	fp, r5, r0
 801709e:	fb9b fbf0 	sdivhi	fp, fp, r0
 80170a2:	4640      	mov	r0, r8
 80170a4:	bf88      	it	hi
 80170a6:	fa0f fb8b 	sxthhi.w	fp, fp
 80170aa:	4790      	blx	r2
 80170ac:	f10d 0a68 	add.w	sl, sp, #104	@ 0x68
 80170b0:	f04f 0800 	mov.w	r8, #0
 80170b4:	f84a 0d3c 	str.w	r0, [sl, #-60]!
 80170b8:	4650      	mov	r0, sl
 80170ba:	f7fe fce3 	bl	8015a84 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80170be:	9b05      	ldr	r3, [sp, #20]
 80170c0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80170c4:	f8ad 5022 	strh.w	r5, [sp, #34]	@ 0x22
 80170c8:	4418      	add	r0, r3
 80170ca:	eba0 0b0b 	sub.w	fp, r0, fp
 80170ce:	f8ad b01e 	strh.w	fp, [sp, #30]
 80170d2:	f8ad 801c 	strh.w	r8, [sp, #28]
 80170d6:	f8ad 1020 	strh.w	r1, [sp, #32]
 80170da:	ad07      	add	r5, sp, #28
 80170dc:	e895 0003 	ldmia.w	r5, {r0, r1}
 80170e0:	f10d 0b24 	add.w	fp, sp, #36	@ 0x24
 80170e4:	e88b 0003 	stmia.w	fp, {r0, r1}
 80170e8:	9904      	ldr	r1, [sp, #16]
 80170ea:	4658      	mov	r0, fp
 80170ec:	f7fb fda2 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 80170f0:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 80170f4:	4543      	cmp	r3, r8
 80170f6:	dd40      	ble.n	801717a <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1aa>
 80170f8:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 80170fc:	4543      	cmp	r3, r8
 80170fe:	dd3c      	ble.n	801717a <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1aa>
 8017100:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8017104:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8017108:	1a5b      	subs	r3, r3, r1
 801710a:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 801710e:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 8017112:	f8bd 3026 	ldrh.w	r3, [sp, #38]	@ 0x26
 8017116:	1a5b      	subs	r3, r3, r1
 8017118:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 801711c:	6823      	ldr	r3, [r4, #0]
 801711e:	4629      	mov	r1, r5
 8017120:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017122:	4620      	mov	r0, r4
 8017124:	4798      	blx	r3
 8017126:	4b1b      	ldr	r3, [pc, #108]	@ (8017194 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1c4>)
 8017128:	8fa1      	ldrh	r1, [r4, #60]	@ 0x3c
 801712a:	681b      	ldr	r3, [r3, #0]
 801712c:	f894 0040 	ldrb.w	r0, [r4, #64]	@ 0x40
 8017130:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8017134:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8017136:	785b      	ldrb	r3, [r3, #1]
 8017138:	910d      	str	r1, [sp, #52]	@ 0x34
 801713a:	f3c3 0c01 	ubfx	ip, r3, #0, #2
 801713e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8017142:	f88d 3031 	strb.w	r3, [sp, #49]	@ 0x31
 8017146:	f89d 3098 	ldrb.w	r3, [sp, #152]	@ 0x98
 801714a:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 801714e:	970b      	str	r7, [sp, #44]	@ 0x2c
 8017150:	f88d c030 	strb.w	ip, [sp, #48]	@ 0x30
 8017154:	f88d 0032 	strb.w	r0, [sp, #50]	@ 0x32
 8017158:	f8ad 8038 	strh.w	r8, [sp, #56]	@ 0x38
 801715c:	f88d 803b 	strb.w	r8, [sp, #59]	@ 0x3b
 8017160:	f88d 803c 	strb.w	r8, [sp, #60]	@ 0x3c
 8017164:	f7fc f860 	bl	8013228 <_ZN8touchgfx3HAL3lcdEv>
 8017168:	e9cd 6802 	strd	r6, r8, [sp, #8]
 801716c:	e9cd a900 	strd	sl, r9, [sp]
 8017170:	465b      	mov	r3, fp
 8017172:	e895 0006 	ldmia.w	r5, {r1, r2}
 8017176:	f7f3 f917 	bl	800a3a8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801717a:	b01b      	add	sp, #108	@ 0x6c
 801717c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017180:	4601      	mov	r1, r0
 8017182:	699b      	ldr	r3, [r3, #24]
 8017184:	4632      	mov	r2, r6
 8017186:	4638      	mov	r0, r7
 8017188:	4798      	blx	r3
 801718a:	b205      	sxth	r5, r0
 801718c:	e774      	b.n	8017078 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa8>
 801718e:	bf00      	nop
 8017190:	2000e470 	.word	0x2000e470
 8017194:	2000e464 	.word	0x2000e464

08017198 <_ZN8touchgfx21GraphWrapAndClearDataD1Ev>:
 8017198:	4770      	bx	lr

0801719a <_ZN8touchgfx21GraphWrapAndClearData5clearEv>:
 801719a:	b510      	push	{r4, lr}
 801719c:	4604      	mov	r4, r0
 801719e:	f7fe fd5c 	bl	8015c5a <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 80171a2:	4620      	mov	r0, r4
 80171a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80171a8:	f7fe baeb 	b.w	8015782 <_ZN8touchgfx17AbstractDataGraph5clearEv>

080171ac <_ZN8touchgfx21GraphWrapAndClearData8addValueEi>:
 80171ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80171ae:	f9b0 511e 	ldrsh.w	r5, [r0, #286]	@ 0x11e
 80171b2:	f8d0 6144 	ldr.w	r6, [r0, #324]	@ 0x144
 80171b6:	1c6b      	adds	r3, r5, #1
 80171b8:	f8a0 311e 	strh.w	r3, [r0, #286]	@ 0x11e
 80171bc:	6803      	ldr	r3, [r0, #0]
 80171be:	460f      	mov	r7, r1
 80171c0:	f8d3 3180 	ldr.w	r3, [r3, #384]	@ 0x180
 80171c4:	4629      	mov	r1, r5
 80171c6:	4604      	mov	r4, r0
 80171c8:	4798      	blx	r3
 80171ca:	f846 7020 	str.w	r7, [r6, r0, lsl #2]
 80171ce:	b915      	cbnz	r5, 80171d6 <_ZN8touchgfx21GraphWrapAndClearData8addValueEi+0x2a>
 80171d0:	4620      	mov	r0, r4
 80171d2:	f7fe fd42 	bl	8015c5a <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 80171d6:	4620      	mov	r0, r4
 80171d8:	4629      	mov	r1, r5
 80171da:	f7fe fd16 	bl	8015c0a <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 80171de:	4628      	mov	r0, r5
 80171e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080171e2 <_ZN8touchgfx21GraphWrapAndClearDataD0Ev>:
 80171e2:	b510      	push	{r4, lr}
 80171e4:	f44f 71a6 	mov.w	r1, #332	@ 0x14c
 80171e8:	4604      	mov	r4, r0
 80171ea:	f016 fb60 	bl	802d8ae <_ZdlPvj>
 80171ee:	4620      	mov	r0, r4
 80171f0:	bd10      	pop	{r4, pc}

080171f2 <_ZN8touchgfx21GraphWrapAndClearData14beforeAddValueEv>:
 80171f2:	f9b0 111e 	ldrsh.w	r1, [r0, #286]	@ 0x11e
 80171f6:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	@ 0x11c
 80171fa:	4291      	cmp	r1, r2
 80171fc:	db03      	blt.n	8017206 <_ZN8touchgfx21GraphWrapAndClearData14beforeAddValueEv+0x14>
 80171fe:	6803      	ldr	r3, [r0, #0]
 8017200:	f8d3 30fc 	ldr.w	r3, [r3, #252]	@ 0xfc
 8017204:	4718      	bx	r3
 8017206:	4770      	bx	lr

08017208 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8017208:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 801720c:	4770      	bx	lr

0801720e <_ZN8touchgfx14AbstractButton13executeActionEv>:
 801720e:	b510      	push	{r4, lr}
 8017210:	4604      	mov	r4, r0
 8017212:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8017214:	b150      	cbz	r0, 801722c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8017216:	6803      	ldr	r3, [r0, #0]
 8017218:	68db      	ldr	r3, [r3, #12]
 801721a:	4798      	blx	r3
 801721c:	b130      	cbz	r0, 801722c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 801721e:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8017220:	6803      	ldr	r3, [r0, #0]
 8017222:	4621      	mov	r1, r4
 8017224:	689b      	ldr	r3, [r3, #8]
 8017226:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801722a:	4718      	bx	r3
 801722c:	bd10      	pop	{r4, pc}

0801722e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801722e:	b570      	push	{r4, r5, r6, lr}
 8017230:	790b      	ldrb	r3, [r1, #4]
 8017232:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 8017236:	2b00      	cmp	r3, #0
 8017238:	bf0c      	ite	eq
 801723a:	2301      	moveq	r3, #1
 801723c:	2300      	movne	r3, #0
 801723e:	4604      	mov	r4, r0
 8017240:	460e      	mov	r6, r1
 8017242:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 8017246:	d109      	bne.n	801725c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8017248:	b14d      	cbz	r5, 801725e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 801724a:	7933      	ldrb	r3, [r6, #4]
 801724c:	2b01      	cmp	r3, #1
 801724e:	d10c      	bne.n	801726a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8017250:	6823      	ldr	r3, [r4, #0]
 8017252:	4620      	mov	r0, r4
 8017254:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8017256:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801725a:	4718      	bx	r3
 801725c:	b12d      	cbz	r5, 801726a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801725e:	6823      	ldr	r3, [r4, #0]
 8017260:	4620      	mov	r0, r4
 8017262:	695b      	ldr	r3, [r3, #20]
 8017264:	4798      	blx	r3
 8017266:	2d00      	cmp	r5, #0
 8017268:	d1ef      	bne.n	801724a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801726a:	bd70      	pop	{r4, r5, r6, pc}

0801726c <_ZNK8touchgfx5Image17invalidateContentEv>:
 801726c:	b508      	push	{r3, lr}
 801726e:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
 8017272:	b10b      	cbz	r3, 8017278 <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
 8017274:	f7eb fea2 	bl	8002fbc <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8017278:	bd08      	pop	{r3, pc}

0801727a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
 801727a:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 801727e:	4770      	bx	lr

08017280 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
 8017280:	f890 0029 	ldrb.w	r0, [r0, #41]	@ 0x29
 8017284:	4770      	bx	lr

08017286 <_ZN8touchgfx13ScalableImageD1Ev>:
 8017286:	4770      	bx	lr

08017288 <_ZN8touchgfx13ScalableImageD0Ev>:
 8017288:	b510      	push	{r4, lr}
 801728a:	212c      	movs	r1, #44	@ 0x2c
 801728c:	4604      	mov	r4, r0
 801728e:	f016 fb0e 	bl	802d8ae <_ZdlPvj>
 8017292:	4620      	mov	r0, r4
 8017294:	bd10      	pop	{r4, pc}

08017296 <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
 8017296:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017298:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 801729c:	2bff      	cmp	r3, #255	@ 0xff
 801729e:	b085      	sub	sp, #20
 80172a0:	4604      	mov	r4, r0
 80172a2:	460d      	mov	r5, r1
 80172a4:	d128      	bne.n	80172f8 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 80172a6:	f101 0626 	add.w	r6, r1, #38	@ 0x26
 80172aa:	4631      	mov	r1, r6
 80172ac:	4668      	mov	r0, sp
 80172ae:	f007 fae7 	bl	801e880 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80172b2:	4630      	mov	r0, r6
 80172b4:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
 80172b8:	f007 fa7a 	bl	801e7b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80172bc:	4287      	cmp	r7, r0
 80172be:	d11b      	bne.n	80172f8 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 80172c0:	4630      	mov	r0, r6
 80172c2:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
 80172c6:	f007 faa7 	bl	801e818 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80172ca:	4287      	cmp	r7, r0
 80172cc:	d114      	bne.n	80172f8 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 80172ce:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 80172d2:	f8ad 300e 	strh.w	r3, [sp, #14]
 80172d6:	2100      	movs	r1, #0
 80172d8:	466b      	mov	r3, sp
 80172da:	9102      	str	r1, [sp, #8]
 80172dc:	cb03      	ldmia	r3!, {r0, r1}
 80172de:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 80172e2:	6020      	str	r0, [r4, #0]
 80172e4:	6061      	str	r1, [r4, #4]
 80172e6:	4620      	mov	r0, r4
 80172e8:	4619      	mov	r1, r3
 80172ea:	f8ad 200c 	strh.w	r2, [sp, #12]
 80172ee:	f7fb fca1 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 80172f2:	4620      	mov	r0, r4
 80172f4:	b005      	add	sp, #20
 80172f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80172f8:	2300      	movs	r3, #0
 80172fa:	8023      	strh	r3, [r4, #0]
 80172fc:	8063      	strh	r3, [r4, #2]
 80172fe:	80a3      	strh	r3, [r4, #4]
 8017300:	80e3      	strh	r3, [r4, #6]
 8017302:	e7f6      	b.n	80172f2 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>

08017304 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
 8017304:	b538      	push	{r3, r4, r5, lr}
 8017306:	2300      	movs	r3, #0
 8017308:	e9c0 3305 	strd	r3, r3, [r0, #20]
 801730c:	8083      	strh	r3, [r0, #4]
 801730e:	80c3      	strh	r3, [r0, #6]
 8017310:	8103      	strh	r3, [r0, #8]
 8017312:	8143      	strh	r3, [r0, #10]
 8017314:	8183      	strh	r3, [r0, #12]
 8017316:	81c3      	strh	r3, [r0, #14]
 8017318:	8203      	strh	r3, [r0, #16]
 801731a:	8243      	strh	r3, [r0, #18]
 801731c:	61c3      	str	r3, [r0, #28]
 801731e:	8403      	strh	r3, [r0, #32]
 8017320:	8443      	strh	r3, [r0, #34]	@ 0x22
 8017322:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
 8017326:	2501      	movs	r5, #1
 8017328:	4b08      	ldr	r3, [pc, #32]	@ (801734c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
 801732a:	f880 5025 	strb.w	r5, [r0, #37]	@ 0x25
 801732e:	6003      	str	r3, [r0, #0]
 8017330:	880b      	ldrh	r3, [r1, #0]
 8017332:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8017334:	23ff      	movs	r3, #255	@ 0xff
 8017336:	4604      	mov	r4, r0
 8017338:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 801733c:	f000 feb2 	bl	80180a4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8017340:	4b03      	ldr	r3, [pc, #12]	@ (8017350 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
 8017342:	6023      	str	r3, [r4, #0]
 8017344:	f884 5029 	strb.w	r5, [r4, #41]	@ 0x29
 8017348:	4620      	mov	r0, r4
 801734a:	bd38      	pop	{r3, r4, r5, pc}
 801734c:	08032f70 	.word	0x08032f70
 8017350:	08032d00 	.word	0x08032d00

08017354 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
 8017354:	4603      	mov	r3, r0
 8017356:	3026      	adds	r0, #38	@ 0x26
 8017358:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
 801735c:	b90b      	cbnz	r3, 8017362 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
 801735e:	f005 ba35 	b.w	801c7cc <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8017362:	f005 ba43 	b.w	801c7ec <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

08017368 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8017368:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801736c:	4604      	mov	r4, r0
 801736e:	b0b3      	sub	sp, #204	@ 0xcc
 8017370:	469b      	mov	fp, r3
 8017372:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8017376:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 801737a:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
 801737e:	ab11      	add	r3, sp, #68	@ 0x44
 8017380:	2500      	movs	r5, #0
 8017382:	f8ad 0048 	strh.w	r0, [sp, #72]	@ 0x48
 8017386:	4618      	mov	r0, r3
 8017388:	9206      	str	r2, [sp, #24]
 801738a:	9511      	str	r5, [sp, #68]	@ 0x44
 801738c:	9307      	str	r3, [sp, #28]
 801738e:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	@ 0xf0
 8017392:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	@ 0xf8
 8017396:	f7fb fc4d 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 801739a:	9b07      	ldr	r3, [sp, #28]
 801739c:	e893 0003 	ldmia.w	r3, {r0, r1}
 80173a0:	ad13      	add	r5, sp, #76	@ 0x4c
 80173a2:	e885 0003 	stmia.w	r5, {r0, r1}
 80173a6:	6821      	ldr	r1, [r4, #0]
 80173a8:	4620      	mov	r0, r4
 80173aa:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 80173ac:	4629      	mov	r1, r5
 80173ae:	47b0      	blx	r6
 80173b0:	4621      	mov	r1, r4
 80173b2:	a815      	add	r0, sp, #84	@ 0x54
 80173b4:	f004 fdbc 	bl	801bf30 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80173b8:	a815      	add	r0, sp, #84	@ 0x54
 80173ba:	f003 f9d5 	bl	801a768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80173be:	9b07      	ldr	r3, [sp, #28]
 80173c0:	1d26      	adds	r6, r4, #4
 80173c2:	4618      	mov	r0, r3
 80173c4:	4631      	mov	r1, r6
 80173c6:	f003 fa13 	bl	801a7f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80173ca:	4628      	mov	r0, r5
 80173cc:	f104 0526 	add.w	r5, r4, #38	@ 0x26
 80173d0:	f003 f9ca 	bl	801a768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80173d4:	4628      	mov	r0, r5
 80173d6:	f007 fadd 	bl	801e994 <_ZNK8touchgfx6Bitmap7getDataEv>
 80173da:	9007      	str	r0, [sp, #28]
 80173dc:	2800      	cmp	r0, #0
 80173de:	f000 80ce 	beq.w	801757e <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
 80173e2:	f8db 200c 	ldr.w	r2, [fp, #12]
 80173e6:	920c      	str	r2, [sp, #48]	@ 0x30
 80173e8:	f8da 2000 	ldr.w	r2, [sl]
 80173ec:	f8db 1000 	ldr.w	r1, [fp]
 80173f0:	920d      	str	r2, [sp, #52]	@ 0x34
 80173f2:	f8da 2004 	ldr.w	r2, [sl, #4]
 80173f6:	9109      	str	r1, [sp, #36]	@ 0x24
 80173f8:	920e      	str	r2, [sp, #56]	@ 0x38
 80173fa:	f8db 1004 	ldr.w	r1, [fp, #4]
 80173fe:	f8da 2008 	ldr.w	r2, [sl, #8]
 8017402:	910a      	str	r1, [sp, #40]	@ 0x28
 8017404:	920f      	str	r2, [sp, #60]	@ 0x3c
 8017406:	f8db 1008 	ldr.w	r1, [fp, #8]
 801740a:	f8da 200c 	ldr.w	r2, [sl, #12]
 801740e:	910b      	str	r1, [sp, #44]	@ 0x2c
 8017410:	9210      	str	r2, [sp, #64]	@ 0x40
 8017412:	a90d      	add	r1, sp, #52	@ 0x34
 8017414:	4632      	mov	r2, r6
 8017416:	a809      	add	r0, sp, #36	@ 0x24
 8017418:	f003 f9ce 	bl	801a7b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 801741c:	4632      	mov	r2, r6
 801741e:	a90e      	add	r1, sp, #56	@ 0x38
 8017420:	a80a      	add	r0, sp, #40	@ 0x28
 8017422:	f003 f9c9 	bl	801a7b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8017426:	4632      	mov	r2, r6
 8017428:	a90f      	add	r1, sp, #60	@ 0x3c
 801742a:	a80b      	add	r0, sp, #44	@ 0x2c
 801742c:	f003 f9c4 	bl	801a7b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8017430:	4632      	mov	r2, r6
 8017432:	a910      	add	r1, sp, #64	@ 0x40
 8017434:	a80c      	add	r0, sp, #48	@ 0x30
 8017436:	f003 f9bf 	bl	801a7b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 801743a:	eddd 7a0d 	vldr	s15, [sp, #52]	@ 0x34
 801743e:	ed97 3a00 	vldr	s6, [r7]
 8017442:	edd7 4a01 	vldr	s9, [r7, #4]
 8017446:	ed99 2a00 	vldr	s4, [r9]
 801744a:	edd8 2a00 	vldr	s5, [r8]
 801744e:	edd9 3a01 	vldr	s7, [r9, #4]
 8017452:	ed98 4a01 	vldr	s8, [r8, #4]
 8017456:	ed99 5a02 	vldr	s10, [r9, #8]
 801745a:	edd8 5a02 	vldr	s11, [r8, #8]
 801745e:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 8017462:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8017466:	ed8d 2a20 	vstr	s4, [sp, #128]	@ 0x80
 801746a:	eef0 6a67 	vmov.f32	s13, s15
 801746e:	eddd 7a0a 	vldr	s15, [sp, #40]	@ 0x28
 8017472:	edcd 2a21 	vstr	s5, [sp, #132]	@ 0x84
 8017476:	eeb0 7a67 	vmov.f32	s14, s15
 801747a:	eddd 7a0e 	vldr	s15, [sp, #56]	@ 0x38
 801747e:	ed8d 3a22 	vstr	s6, [sp, #136]	@ 0x88
 8017482:	eeb0 6a67 	vmov.f32	s12, s15
 8017486:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801748a:	eddd 7a0b 	vldr	s15, [sp, #44]	@ 0x2c
 801748e:	edcd 3a25 	vstr	s7, [sp, #148]	@ 0x94
 8017492:	ee16 6a10 	vmov	r6, s12
 8017496:	eeb0 6a67 	vmov.f32	s12, s15
 801749a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801749e:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
 80174a2:	ed8d 4a26 	vstr	s8, [sp, #152]	@ 0x98
 80174a6:	ee16 0a10 	vmov	r0, s12
 80174aa:	eeb0 6a67 	vmov.f32	s12, s15
 80174ae:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80174b2:	eddd 7a0c 	vldr	s15, [sp, #48]	@ 0x30
 80174b6:	edcd 4a27 	vstr	s9, [sp, #156]	@ 0x9c
 80174ba:	ee16 1a10 	vmov	r1, s12
 80174be:	eeb0 6a67 	vmov.f32	s12, s15
 80174c2:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80174c6:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 80174ca:	ee16 2a10 	vmov	r2, s12
 80174ce:	ed9d 6a09 	vldr	s12, [sp, #36]	@ 0x24
 80174d2:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
 80174d6:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 80174da:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 80174de:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80174e2:	e9cd 0128 	strd	r0, r1, [sp, #160]	@ 0xa0
 80174e6:	ed8d 6a1e 	vstr	s12, [sp, #120]	@ 0x78
 80174ea:	ed8d 7a23 	vstr	s14, [sp, #140]	@ 0x8c
 80174ee:	f8d7 a008 	ldr.w	sl, [r7, #8]
 80174f2:	9624      	str	r6, [sp, #144]	@ 0x90
 80174f4:	68ff      	ldr	r7, [r7, #12]
 80174f6:	ed8d 5a2a 	vstr	s10, [sp, #168]	@ 0xa8
 80174fa:	922d      	str	r2, [sp, #180]	@ 0xb4
 80174fc:	4a21      	ldr	r2, [pc, #132]	@ (8017584 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
 80174fe:	9b06      	ldr	r3, [sp, #24]
 8017500:	8812      	ldrh	r2, [r2, #0]
 8017502:	9317      	str	r3, [sp, #92]	@ 0x5c
 8017504:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 8017508:	9b07      	ldr	r3, [sp, #28]
 801750a:	9218      	str	r2, [sp, #96]	@ 0x60
 801750c:	4628      	mov	r0, r5
 801750e:	9319      	str	r3, [sp, #100]	@ 0x64
 8017510:	edcd 5a2b 	vstr	s11, [sp, #172]	@ 0xac
 8017514:	edcd 7a2e 	vstr	s15, [sp, #184]	@ 0xb8
 8017518:	f8cd e0bc 	str.w	lr, [sp, #188]	@ 0xbc
 801751c:	f8cd c0c0 	str.w	ip, [sp, #192]	@ 0xc0
 8017520:	f8cd a0b0 	str.w	sl, [sp, #176]	@ 0xb0
 8017524:	9731      	str	r7, [sp, #196]	@ 0xc4
 8017526:	f007 fa65 	bl	801e9f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801752a:	901a      	str	r0, [sp, #104]	@ 0x68
 801752c:	4628      	mov	r0, r5
 801752e:	f007 f93f 	bl	801e7b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8017532:	901b      	str	r0, [sp, #108]	@ 0x6c
 8017534:	4628      	mov	r0, r5
 8017536:	f007 f96f 	bl	801e818 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801753a:	901c      	str	r0, [sp, #112]	@ 0x70
 801753c:	4628      	mov	r0, r5
 801753e:	f007 f937 	bl	801e7b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8017542:	4b11      	ldr	r3, [pc, #68]	@ (8017588 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
 8017544:	901d      	str	r0, [sp, #116]	@ 0x74
 8017546:	681b      	ldr	r3, [r3, #0]
 8017548:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 801754c:	b10a      	cbz	r2, 8017552 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
 801754e:	6cdd      	ldr	r5, [r3, #76]	@ 0x4c
 8017550:	b905      	cbnz	r5, 8017554 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
 8017552:	689d      	ldr	r5, [r3, #8]
 8017554:	682b      	ldr	r3, [r5, #0]
 8017556:	4620      	mov	r0, r4
 8017558:	6c1e      	ldr	r6, [r3, #64]	@ 0x40
 801755a:	f7ff fefb 	bl	8017354 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
 801755e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8017562:	9304      	str	r3, [sp, #16]
 8017564:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8017568:	e9cd 0302 	strd	r0, r3, [sp, #8]
 801756c:	ab13      	add	r3, sp, #76	@ 0x4c
 801756e:	9301      	str	r3, [sp, #4]
 8017570:	ab15      	add	r3, sp, #84	@ 0x54
 8017572:	9300      	str	r3, [sp, #0]
 8017574:	aa1e      	add	r2, sp, #120	@ 0x78
 8017576:	ab19      	add	r3, sp, #100	@ 0x64
 8017578:	a917      	add	r1, sp, #92	@ 0x5c
 801757a:	4628      	mov	r0, r5
 801757c:	47b0      	blx	r6
 801757e:	b033      	add	sp, #204	@ 0xcc
 8017580:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017584:	2000e406 	.word	0x2000e406
 8017588:	2000e40c 	.word	0x2000e40c

0801758c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
 801758c:	b570      	push	{r4, r5, r6, lr}
 801758e:	ed2d 8b04 	vpush	{d8-d9}
 8017592:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
 8017596:	b098      	sub	sp, #96	@ 0x60
 8017598:	4604      	mov	r4, r0
 801759a:	460e      	mov	r6, r1
 801759c:	2b00      	cmp	r3, #0
 801759e:	d065      	beq.n	801766c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
 80175a0:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80175a4:	ed9f 8a38 	vldr	s16, [pc, #224]	@ 8017688 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
 80175a8:	ee09 3a10 	vmov	s18, r3
 80175ac:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80175b0:	f100 0526 	add.w	r5, r0, #38	@ 0x26
 80175b4:	ee08 3a90 	vmov	s17, r3
 80175b8:	4628      	mov	r0, r5
 80175ba:	4b34      	ldr	r3, [pc, #208]	@ (801768c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
 80175bc:	930c      	str	r3, [sp, #48]	@ 0x30
 80175be:	930d      	str	r3, [sp, #52]	@ 0x34
 80175c0:	930e      	str	r3, [sp, #56]	@ 0x38
 80175c2:	930f      	str	r3, [sp, #60]	@ 0x3c
 80175c4:	f007 f8f4 	bl	801e7b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80175c8:	ee07 0a90 	vmov	s15, r0
 80175cc:	4628      	mov	r0, r5
 80175ce:	eef8 9ae7 	vcvt.f32.s32	s19, s15
 80175d2:	f007 f921 	bl	801e818 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80175d6:	4b2e      	ldr	r3, [pc, #184]	@ (8017690 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
 80175d8:	781b      	ldrb	r3, [r3, #0]
 80175da:	ee07 0a90 	vmov	s15, r0
 80175de:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 80175e2:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 80175e6:	2b01      	cmp	r3, #1
 80175e8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80175ec:	ee39 9a08 	vadd.f32	s18, s18, s16
 80175f0:	ee78 8a88 	vadd.f32	s17, s17, s16
 80175f4:	eef0 7a48 	vmov.f32	s15, s16
 80175f8:	d13c      	bne.n	8017674 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
 80175fa:	eef0 6a69 	vmov.f32	s13, s19
 80175fe:	eeb0 6a47 	vmov.f32	s12, s14
 8017602:	eef0 5a47 	vmov.f32	s11, s14
 8017606:	ee19 3a90 	vmov	r3, s19
 801760a:	eeb0 7a48 	vmov.f32	s14, s16
 801760e:	eef0 9a48 	vmov.f32	s19, s16
 8017612:	9314      	str	r3, [sp, #80]	@ 0x50
 8017614:	ab14      	add	r3, sp, #80	@ 0x50
 8017616:	9303      	str	r3, [sp, #12]
 8017618:	ab10      	add	r3, sp, #64	@ 0x40
 801761a:	9302      	str	r3, [sp, #8]
 801761c:	ab0c      	add	r3, sp, #48	@ 0x30
 801761e:	9301      	str	r3, [sp, #4]
 8017620:	ab08      	add	r3, sp, #32
 8017622:	9300      	str	r3, [sp, #0]
 8017624:	2200      	movs	r2, #0
 8017626:	ab04      	add	r3, sp, #16
 8017628:	4631      	mov	r1, r6
 801762a:	4620      	mov	r0, r4
 801762c:	edcd 7a04 	vstr	s15, [sp, #16]
 8017630:	ed8d 9a05 	vstr	s18, [sp, #20]
 8017634:	ed8d 9a06 	vstr	s18, [sp, #24]
 8017638:	edcd 7a07 	vstr	s15, [sp, #28]
 801763c:	edcd 7a08 	vstr	s15, [sp, #32]
 8017640:	edcd 7a09 	vstr	s15, [sp, #36]	@ 0x24
 8017644:	edcd 8a0a 	vstr	s17, [sp, #40]	@ 0x28
 8017648:	edcd 8a0b 	vstr	s17, [sp, #44]	@ 0x2c
 801764c:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8017650:	edcd 9a11 	vstr	s19, [sp, #68]	@ 0x44
 8017654:	edcd 5a12 	vstr	s11, [sp, #72]	@ 0x48
 8017658:	ed8d 6a13 	vstr	s12, [sp, #76]	@ 0x4c
 801765c:	edcd 7a15 	vstr	s15, [sp, #84]	@ 0x54
 8017660:	ed8d 7a16 	vstr	s14, [sp, #88]	@ 0x58
 8017664:	edcd 6a17 	vstr	s13, [sp, #92]	@ 0x5c
 8017668:	f7ff fe7e 	bl	8017368 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 801766c:	b018      	add	sp, #96	@ 0x60
 801766e:	ecbd 8b04 	vpop	{d8-d9}
 8017672:	bd70      	pop	{r4, r5, r6, pc}
 8017674:	eef0 6a47 	vmov.f32	s13, s14
 8017678:	eef0 5a69 	vmov.f32	s11, s19
 801767c:	eeb0 6a48 	vmov.f32	s12, s16
 8017680:	ee18 3a10 	vmov	r3, s16
 8017684:	e7c5      	b.n	8017612 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
 8017686:	bf00      	nop
 8017688:	00000000 	.word	0x00000000
 801768c:	42c80000 	.word	0x42c80000
 8017690:	2000e404 	.word	0x2000e404

08017694 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8017694:	2000      	movs	r0, #0
 8017696:	4770      	bx	lr

08017698 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8017698:	4b07      	ldr	r3, [pc, #28]	@ (80176b8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 801769a:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 801769c:	881b      	ldrh	r3, [r3, #0]
 801769e:	4293      	cmp	r3, r2
 80176a0:	bf81      	itttt	hi
 80176a2:	4b06      	ldrhi	r3, [pc, #24]	@ (80176bc <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 80176a4:	681b      	ldrhi	r3, [r3, #0]
 80176a6:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 80176aa:	7858      	ldrbhi	r0, [r3, #1]
 80176ac:	bf8c      	ite	hi
 80176ae:	f000 0003 	andhi.w	r0, r0, #3
 80176b2:	2000      	movls	r0, #0
 80176b4:	4770      	bx	lr
 80176b6:	bf00      	nop
 80176b8:	2000e468 	.word	0x2000e468
 80176bc:	2000e464 	.word	0x2000e464

080176c0 <_ZN8touchgfx8TextAreaD1Ev>:
 80176c0:	4770      	bx	lr
	...

080176c4 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 80176c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80176c8:	4b10      	ldr	r3, [pc, #64]	@ (801770c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 80176ca:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 80176cc:	881b      	ldrh	r3, [r3, #0]
 80176ce:	428b      	cmp	r3, r1
 80176d0:	4604      	mov	r4, r0
 80176d2:	d918      	bls.n	8017706 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 80176d4:	6803      	ldr	r3, [r0, #0]
 80176d6:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 80176d8:	4b0d      	ldr	r3, [pc, #52]	@ (8017710 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 80176da:	6818      	ldr	r0, [r3, #0]
 80176dc:	f7f2 feba 	bl	800a454 <_ZNK8touchgfx5Texts7getTextEt>
 80176e0:	6823      	ldr	r3, [r4, #0]
 80176e2:	4606      	mov	r6, r0
 80176e4:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80176e6:	4620      	mov	r0, r4
 80176e8:	4798      	blx	r3
 80176ea:	6823      	ldr	r3, [r4, #0]
 80176ec:	4607      	mov	r7, r0
 80176ee:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80176f2:	4620      	mov	r0, r4
 80176f4:	4798      	blx	r3
 80176f6:	463a      	mov	r2, r7
 80176f8:	4603      	mov	r3, r0
 80176fa:	4631      	mov	r1, r6
 80176fc:	4620      	mov	r0, r4
 80176fe:	46ac      	mov	ip, r5
 8017700:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8017704:	4760      	bx	ip
 8017706:	2000      	movs	r0, #0
 8017708:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801770c:	2000e468 	.word	0x2000e468
 8017710:	2000e470 	.word	0x2000e470

08017714 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8017714:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8017718:	4b17      	ldr	r3, [pc, #92]	@ (8017778 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 801771a:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 801771c:	881b      	ldrh	r3, [r3, #0]
 801771e:	428b      	cmp	r3, r1
 8017720:	4604      	mov	r4, r0
 8017722:	d926      	bls.n	8017772 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8017724:	4b15      	ldr	r3, [pc, #84]	@ (801777c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8017726:	681b      	ldr	r3, [r3, #0]
 8017728:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 801772c:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8017730:	4b13      	ldr	r3, [pc, #76]	@ (8017780 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8017732:	7855      	ldrb	r5, [r2, #1]
 8017734:	681b      	ldr	r3, [r3, #0]
 8017736:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 801773a:	6833      	ldr	r3, [r6, #0]
 801773c:	69df      	ldr	r7, [r3, #28]
 801773e:	4b11      	ldr	r3, [pc, #68]	@ (8017784 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8017740:	6818      	ldr	r0, [r3, #0]
 8017742:	f7f2 fe87 	bl	800a454 <_ZNK8touchgfx5Texts7getTextEt>
 8017746:	6823      	ldr	r3, [r4, #0]
 8017748:	4680      	mov	r8, r0
 801774a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 801774c:	4620      	mov	r0, r4
 801774e:	4798      	blx	r3
 8017750:	6823      	ldr	r3, [r4, #0]
 8017752:	4681      	mov	r9, r0
 8017754:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8017758:	4620      	mov	r0, r4
 801775a:	4798      	blx	r3
 801775c:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8017760:	9000      	str	r0, [sp, #0]
 8017762:	464b      	mov	r3, r9
 8017764:	4642      	mov	r2, r8
 8017766:	4629      	mov	r1, r5
 8017768:	4630      	mov	r0, r6
 801776a:	47b8      	blx	r7
 801776c:	b003      	add	sp, #12
 801776e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017772:	2000      	movs	r0, #0
 8017774:	e7fa      	b.n	801776c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8017776:	bf00      	nop
 8017778:	2000e468 	.word	0x2000e468
 801777c:	2000e464 	.word	0x2000e464
 8017780:	2000e46c 	.word	0x2000e46c
 8017784:	2000e470 	.word	0x2000e470

08017788 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8017788:	b40e      	push	{r1, r2, r3}
 801778a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801778e:	4b2f      	ldr	r3, [pc, #188]	@ (801784c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8017790:	881a      	ldrh	r2, [r3, #0]
 8017792:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 8017794:	429a      	cmp	r2, r3
 8017796:	b09d      	sub	sp, #116	@ 0x74
 8017798:	4604      	mov	r4, r0
 801779a:	d954      	bls.n	8017846 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 801779c:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 8017850 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 80177a0:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 8017854 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 80177a4:	aa26      	add	r2, sp, #152	@ 0x98
 80177a6:	9202      	str	r2, [sp, #8]
 80177a8:	f8d9 2000 	ldr.w	r2, [r9]
 80177ac:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80177b0:	f8d8 3000 	ldr.w	r3, [r8]
 80177b4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80177b8:	682b      	ldr	r3, [r5, #0]
 80177ba:	4628      	mov	r0, r5
 80177bc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80177be:	4798      	blx	r3
 80177c0:	b207      	sxth	r7, r0
 80177c2:	4606      	mov	r6, r0
 80177c4:	a803      	add	r0, sp, #12
 80177c6:	f005 fc3e 	bl	801d046 <_ZN8touchgfx12TextProviderC1Ev>
 80177ca:	682b      	ldr	r3, [r5, #0]
 80177cc:	4628      	mov	r0, r5
 80177ce:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80177d0:	4798      	blx	r3
 80177d2:	682b      	ldr	r3, [r5, #0]
 80177d4:	4682      	mov	sl, r0
 80177d6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80177d8:	4628      	mov	r0, r5
 80177da:	4798      	blx	r3
 80177dc:	4653      	mov	r3, sl
 80177de:	9000      	str	r0, [sp, #0]
 80177e0:	9a02      	ldr	r2, [sp, #8]
 80177e2:	9925      	ldr	r1, [sp, #148]	@ 0x94
 80177e4:	a803      	add	r0, sp, #12
 80177e6:	f005 fc89 	bl	801d0fc <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80177ea:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 80177ec:	f8d9 3000 	ldr.w	r3, [r9]
 80177f0:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 80177f4:	8925      	ldrh	r5, [r4, #8]
 80177f6:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 80177fa:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 80177fe:	eba5 050c 	sub.w	r5, r5, ip
 8017802:	784a      	ldrb	r2, [r1, #1]
 8017804:	f8d8 3000 	ldr.w	r3, [r8]
 8017808:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 801780c:	b22d      	sxth	r5, r5
 801780e:	9500      	str	r5, [sp, #0]
 8017810:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8017814:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8017818:	a803      	add	r0, sp, #12
 801781a:	f002 fcab 	bl	801a174 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 801781e:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 8017822:	18b9      	adds	r1, r7, r2
 8017824:	2900      	cmp	r1, #0
 8017826:	b203      	sxth	r3, r0
 8017828:	dd0b      	ble.n	8017842 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 801782a:	3b01      	subs	r3, #1
 801782c:	fb13 f302 	smulbb	r3, r3, r2
 8017830:	fb16 3300 	smlabb	r3, r6, r0, r3
 8017834:	b21f      	sxth	r7, r3
 8017836:	4638      	mov	r0, r7
 8017838:	b01d      	add	sp, #116	@ 0x74
 801783a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801783e:	b003      	add	sp, #12
 8017840:	4770      	bx	lr
 8017842:	2b00      	cmp	r3, #0
 8017844:	dcf7      	bgt.n	8017836 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8017846:	2700      	movs	r7, #0
 8017848:	e7f5      	b.n	8017836 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 801784a:	bf00      	nop
 801784c:	2000e468 	.word	0x2000e468
 8017850:	2000e464 	.word	0x2000e464
 8017854:	2000e46c 	.word	0x2000e46c

08017858 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8017858:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801785c:	4bbc      	ldr	r3, [pc, #752]	@ (8017b50 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 801785e:	460c      	mov	r4, r1
 8017860:	881b      	ldrh	r3, [r3, #0]
 8017862:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
 8017864:	428b      	cmp	r3, r1
 8017866:	b0a9      	sub	sp, #164	@ 0xa4
 8017868:	4680      	mov	r8, r0
 801786a:	d809      	bhi.n	8017880 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 801786c:	2300      	movs	r3, #0
 801786e:	f04f 32ff 	mov.w	r2, #4294967295
 8017872:	e9c0 3200 	strd	r3, r2, [r0]
 8017876:	6083      	str	r3, [r0, #8]
 8017878:	4640      	mov	r0, r8
 801787a:	b029      	add	sp, #164	@ 0xa4
 801787c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017880:	4eb4      	ldr	r6, [pc, #720]	@ (8017b54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8017882:	6833      	ldr	r3, [r6, #0]
 8017884:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8017888:	4bb3      	ldr	r3, [pc, #716]	@ (8017b58 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 801788a:	681b      	ldr	r3, [r3, #0]
 801788c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8017890:	4bb2      	ldr	r3, [pc, #712]	@ (8017b5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8017892:	6818      	ldr	r0, [r3, #0]
 8017894:	f7f2 fdde 	bl	800a454 <_ZNK8touchgfx5Texts7getTextEt>
 8017898:	682b      	ldr	r3, [r5, #0]
 801789a:	4681      	mov	r9, r0
 801789c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801789e:	4628      	mov	r0, r5
 80178a0:	4798      	blx	r3
 80178a2:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
 80178a4:	b203      	sxth	r3, r0
 80178a6:	4407      	add	r7, r0
 80178a8:	9304      	str	r3, [sp, #16]
 80178aa:	b2bb      	uxth	r3, r7
 80178ac:	9303      	str	r3, [sp, #12]
 80178ae:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 80178b2:	4682      	mov	sl, r0
 80178b4:	a80f      	add	r0, sp, #60	@ 0x3c
 80178b6:	2b00      	cmp	r3, #0
 80178b8:	f040 80a6 	bne.w	8017a08 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 80178bc:	f005 fbc3 	bl	801d046 <_ZN8touchgfx12TextProviderC1Ev>
 80178c0:	682b      	ldr	r3, [r5, #0]
 80178c2:	4628      	mov	r0, r5
 80178c4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80178c6:	4798      	blx	r3
 80178c8:	682b      	ldr	r3, [r5, #0]
 80178ca:	4606      	mov	r6, r0
 80178cc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80178ce:	4628      	mov	r0, r5
 80178d0:	4798      	blx	r3
 80178d2:	6823      	ldr	r3, [r4, #0]
 80178d4:	4607      	mov	r7, r0
 80178d6:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80178d8:	4620      	mov	r0, r4
 80178da:	4798      	blx	r3
 80178dc:	6823      	ldr	r3, [r4, #0]
 80178de:	4683      	mov	fp, r0
 80178e0:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80178e4:	4620      	mov	r0, r4
 80178e6:	4798      	blx	r3
 80178e8:	463b      	mov	r3, r7
 80178ea:	e9cd b000 	strd	fp, r0, [sp]
 80178ee:	4649      	mov	r1, r9
 80178f0:	4632      	mov	r2, r6
 80178f2:	a80f      	add	r0, sp, #60	@ 0x3c
 80178f4:	f005 fc17 	bl	801d126 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80178f8:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 80178fc:	f8df b254 	ldr.w	fp, [pc, #596]	@ 8017b54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8017900:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8017904:	f04f 0600 	mov.w	r6, #0
 8017908:	bf0c      	ite	eq
 801790a:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 801790e:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8017912:	4637      	mov	r7, r6
 8017914:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8017916:	f8db 3000 	ldr.w	r3, [fp]
 801791a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801791e:	4629      	mov	r1, r5
 8017920:	785b      	ldrb	r3, [r3, #1]
 8017922:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8017926:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801792a:	a80f      	add	r0, sp, #60	@ 0x3c
 801792c:	f002 f929 	bl	8019b82 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8017930:	9b03      	ldr	r3, [sp, #12]
 8017932:	4286      	cmp	r6, r0
 8017934:	bfb8      	it	lt
 8017936:	4606      	movlt	r6, r0
 8017938:	3701      	adds	r7, #1
 801793a:	eba9 0903 	sub.w	r9, r9, r3
 801793e:	a80f      	add	r0, sp, #60	@ 0x3c
 8017940:	b236      	sxth	r6, r6
 8017942:	b2bf      	uxth	r7, r7
 8017944:	fa0f f989 	sxth.w	r9, r9
 8017948:	f005 fba4 	bl	801d094 <_ZN8touchgfx12TextProvider11endOfStringEv>
 801794c:	b918      	cbnz	r0, 8017956 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801794e:	7a2b      	ldrb	r3, [r5, #8]
 8017950:	444b      	add	r3, r9
 8017952:	2b00      	cmp	r3, #0
 8017954:	dcde      	bgt.n	8017914 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8017956:	9b03      	ldr	r3, [sp, #12]
 8017958:	9a04      	ldr	r2, [sp, #16]
 801795a:	f895 9009 	ldrb.w	r9, [r5, #9]
 801795e:	fb13 f707 	smulbb	r7, r3, r7
 8017962:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8017964:	1aff      	subs	r7, r7, r3
 8017966:	b2bf      	uxth	r7, r7
 8017968:	b23b      	sxth	r3, r7
 801796a:	429a      	cmp	r2, r3
 801796c:	bfa8      	it	ge
 801796e:	4657      	movge	r7, sl
 8017970:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8017974:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8017978:	6823      	ldr	r3, [r4, #0]
 801797a:	bf08      	it	eq
 801797c:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8017980:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8017982:	bf18      	it	ne
 8017984:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8017988:	4620      	mov	r0, r4
 801798a:	4798      	blx	r3
 801798c:	444f      	add	r7, r9
 801798e:	fa1f f987 	uxth.w	r9, r7
 8017992:	2801      	cmp	r0, #1
 8017994:	fa0f f789 	sxth.w	r7, r9
 8017998:	b2b3      	uxth	r3, r6
 801799a:	f000 80e1 	beq.w	8017b60 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 801799e:	2802      	cmp	r0, #2
 80179a0:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
 80179a4:	f000 80e2 	beq.w	8017b6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 80179a8:	7aea      	ldrb	r2, [r5, #11]
 80179aa:	7b2d      	ldrb	r5, [r5, #12]
 80179ac:	b236      	sxth	r6, r6
 80179ae:	1ab6      	subs	r6, r6, r2
 80179b0:	442a      	add	r2, r5
 80179b2:	4413      	add	r3, r2
 80179b4:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 80179b8:	fa1f fa86 	uxth.w	sl, r6
 80179bc:	b29b      	uxth	r3, r3
 80179be:	2a02      	cmp	r2, #2
 80179c0:	fa0f fb8a 	sxth.w	fp, sl
 80179c4:	b21e      	sxth	r6, r3
 80179c6:	f000 80d5 	beq.w	8017b74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 80179ca:	2a03      	cmp	r2, #3
 80179cc:	f000 80dd 	beq.w	8017b8a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 80179d0:	2a01      	cmp	r2, #1
 80179d2:	f040 80e5 	bne.w	8017ba0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 80179d6:	8925      	ldrh	r5, [r4, #8]
 80179d8:	4633      	mov	r3, r6
 80179da:	eba5 0909 	sub.w	r9, r5, r9
 80179de:	463e      	mov	r6, r7
 80179e0:	465d      	mov	r5, fp
 80179e2:	461f      	mov	r7, r3
 80179e4:	fa0f fb89 	sxth.w	fp, r9
 80179e8:	4b5c      	ldr	r3, [pc, #368]	@ (8017b5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80179ea:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 80179ec:	6818      	ldr	r0, [r3, #0]
 80179ee:	f7f2 fd31 	bl	800a454 <_ZNK8touchgfx5Texts7getTextEt>
 80179f2:	f8a8 b000 	strh.w	fp, [r8]
 80179f6:	f8a8 5002 	strh.w	r5, [r8, #2]
 80179fa:	f8a8 6004 	strh.w	r6, [r8, #4]
 80179fe:	f8a8 7006 	strh.w	r7, [r8, #6]
 8017a02:	f8c8 0008 	str.w	r0, [r8, #8]
 8017a06:	e737      	b.n	8017878 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8017a08:	f005 fb1d 	bl	801d046 <_ZN8touchgfx12TextProviderC1Ev>
 8017a0c:	682b      	ldr	r3, [r5, #0]
 8017a0e:	4628      	mov	r0, r5
 8017a10:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8017a12:	4798      	blx	r3
 8017a14:	682b      	ldr	r3, [r5, #0]
 8017a16:	4607      	mov	r7, r0
 8017a18:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8017a1a:	4628      	mov	r0, r5
 8017a1c:	4798      	blx	r3
 8017a1e:	6823      	ldr	r3, [r4, #0]
 8017a20:	4683      	mov	fp, r0
 8017a22:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8017a24:	4620      	mov	r0, r4
 8017a26:	4798      	blx	r3
 8017a28:	6822      	ldr	r2, [r4, #0]
 8017a2a:	9005      	str	r0, [sp, #20]
 8017a2c:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 8017a30:	4620      	mov	r0, r4
 8017a32:	4790      	blx	r2
 8017a34:	9b05      	ldr	r3, [sp, #20]
 8017a36:	9001      	str	r0, [sp, #4]
 8017a38:	463a      	mov	r2, r7
 8017a3a:	4649      	mov	r1, r9
 8017a3c:	9300      	str	r3, [sp, #0]
 8017a3e:	a80f      	add	r0, sp, #60	@ 0x3c
 8017a40:	465b      	mov	r3, fp
 8017a42:	f005 fb70 	bl	801d126 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8017a46:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8017a4a:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8017a4e:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8017a50:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
 8017a54:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8017a58:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8017a5c:	bf0a      	itet	eq
 8017a5e:	464a      	moveq	r2, r9
 8017a60:	461a      	movne	r2, r3
 8017a62:	4699      	moveq	r9, r3
 8017a64:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 8017a68:	1ad2      	subs	r2, r2, r3
 8017a6a:	6833      	ldr	r3, [r6, #0]
 8017a6c:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
 8017a70:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8017a74:	af0f      	add	r7, sp, #60	@ 0x3c
 8017a76:	7859      	ldrb	r1, [r3, #1]
 8017a78:	9707      	str	r7, [sp, #28]
 8017a7a:	2300      	movs	r3, #0
 8017a7c:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8017a80:	f8ad 3018 	strh.w	r3, [sp, #24]
 8017a84:	f88d 1020 	strb.w	r1, [sp, #32]
 8017a88:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 8017a8c:	9509      	str	r5, [sp, #36]	@ 0x24
 8017a8e:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8017a92:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
 8017a96:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
 8017a9a:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8017a9e:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8017aa2:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8017aa6:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8017aaa:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8017aae:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8017ab2:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 8017ab6:	b350      	cbz	r0, 8017b0e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8017ab8:	682b      	ldr	r3, [r5, #0]
 8017aba:	4628      	mov	r0, r5
 8017abc:	695b      	ldr	r3, [r3, #20]
 8017abe:	4798      	blx	r3
 8017ac0:	4607      	mov	r7, r0
 8017ac2:	b320      	cbz	r0, 8017b0e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8017ac4:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8017ac6:	6803      	ldr	r3, [r0, #0]
 8017ac8:	4639      	mov	r1, r7
 8017aca:	68db      	ldr	r3, [r3, #12]
 8017acc:	4798      	blx	r3
 8017ace:	4606      	mov	r6, r0
 8017ad0:	b1e8      	cbz	r0, 8017b0e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8017ad2:	7b43      	ldrb	r3, [r0, #13]
 8017ad4:	7a82      	ldrb	r2, [r0, #10]
 8017ad6:	005b      	lsls	r3, r3, #1
 8017ad8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8017adc:	4313      	orrs	r3, r2
 8017ade:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8017ae2:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
 8017ae6:	2b06      	cmp	r3, #6
 8017ae8:	d111      	bne.n	8017b0e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8017aea:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8017aec:	6803      	ldr	r3, [r0, #0]
 8017aee:	4632      	mov	r2, r6
 8017af0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8017af2:	4639      	mov	r1, r7
 8017af4:	4798      	blx	r3
 8017af6:	7b73      	ldrb	r3, [r6, #13]
 8017af8:	005b      	lsls	r3, r3, #1
 8017afa:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8017afe:	7ab3      	ldrb	r3, [r6, #10]
 8017b00:	4313      	orrs	r3, r2
 8017b02:	4418      	add	r0, r3
 8017b04:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8017b08:	4418      	add	r0, r3
 8017b0a:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
 8017b0e:	2600      	movs	r6, #0
 8017b10:	4637      	mov	r7, r6
 8017b12:	a806      	add	r0, sp, #24
 8017b14:	f002 fa2a 	bl	8019f6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8017b18:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
 8017b1c:	9b03      	ldr	r3, [sp, #12]
 8017b1e:	4286      	cmp	r6, r0
 8017b20:	eba9 0903 	sub.w	r9, r9, r3
 8017b24:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8017b28:	bfb8      	it	lt
 8017b2a:	4606      	movlt	r6, r0
 8017b2c:	3701      	adds	r7, #1
 8017b2e:	b236      	sxth	r6, r6
 8017b30:	b2bf      	uxth	r7, r7
 8017b32:	fa0f f989 	sxth.w	r9, r9
 8017b36:	2b00      	cmp	r3, #0
 8017b38:	f43f af0d 	beq.w	8017956 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8017b3c:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
 8017b40:	2b00      	cmp	r3, #0
 8017b42:	f47f af08 	bne.w	8017956 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8017b46:	7a2b      	ldrb	r3, [r5, #8]
 8017b48:	444b      	add	r3, r9
 8017b4a:	2b00      	cmp	r3, #0
 8017b4c:	dce1      	bgt.n	8017b12 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8017b4e:	e702      	b.n	8017956 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8017b50:	2000e468 	.word	0x2000e468
 8017b54:	2000e464 	.word	0x2000e464
 8017b58:	2000e46c 	.word	0x2000e46c
 8017b5c:	2000e470 	.word	0x2000e470
 8017b60:	ebaa 0606 	sub.w	r6, sl, r6
 8017b64:	2002      	movs	r0, #2
 8017b66:	fb96 f6f0 	sdiv	r6, r6, r0
 8017b6a:	e71d      	b.n	80179a8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8017b6c:	441e      	add	r6, r3
 8017b6e:	ebaa 0606 	sub.w	r6, sl, r6
 8017b72:	e719      	b.n	80179a8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8017b74:	8925      	ldrh	r5, [r4, #8]
 8017b76:	1aed      	subs	r5, r5, r3
 8017b78:	eba5 050a 	sub.w	r5, r5, sl
 8017b7c:	fa0f fb85 	sxth.w	fp, r5
 8017b80:	8965      	ldrh	r5, [r4, #10]
 8017b82:	eba5 0509 	sub.w	r5, r5, r9
 8017b86:	b22d      	sxth	r5, r5
 8017b88:	e72e      	b.n	80179e8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8017b8a:	8965      	ldrh	r5, [r4, #10]
 8017b8c:	1aed      	subs	r5, r5, r3
 8017b8e:	eba5 050a 	sub.w	r5, r5, sl
 8017b92:	4633      	mov	r3, r6
 8017b94:	b22d      	sxth	r5, r5
 8017b96:	463e      	mov	r6, r7
 8017b98:	f04f 0b00 	mov.w	fp, #0
 8017b9c:	461f      	mov	r7, r3
 8017b9e:	e723      	b.n	80179e8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8017ba0:	2500      	movs	r5, #0
 8017ba2:	e721      	b.n	80179e8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08017ba4 <_ZN8touchgfx8TextAreaD0Ev>:
 8017ba4:	b510      	push	{r4, lr}
 8017ba6:	2148      	movs	r1, #72	@ 0x48
 8017ba8:	4604      	mov	r4, r0
 8017baa:	f015 fe80 	bl	802d8ae <_ZdlPvj>
 8017bae:	4620      	mov	r0, r4
 8017bb0:	bd10      	pop	{r4, pc}
	...

08017bb4 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8017bb4:	b513      	push	{r0, r1, r4, lr}
 8017bb6:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
 8017bba:	4604      	mov	r4, r0
 8017bbc:	b1fb      	cbz	r3, 8017bfe <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8017bbe:	4b16      	ldr	r3, [pc, #88]	@ (8017c18 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8017bc0:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 8017bc2:	881b      	ldrh	r3, [r3, #0]
 8017bc4:	428b      	cmp	r3, r1
 8017bc6:	d91a      	bls.n	8017bfe <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8017bc8:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8017bcc:	2b00      	cmp	r3, #0
 8017bce:	dd16      	ble.n	8017bfe <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8017bd0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8017bd4:	2b00      	cmp	r3, #0
 8017bd6:	dd12      	ble.n	8017bfe <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8017bd8:	4b10      	ldr	r3, [pc, #64]	@ (8017c1c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8017bda:	6818      	ldr	r0, [r3, #0]
 8017bdc:	f7f2 fc3a 	bl	800a454 <_ZNK8touchgfx5Texts7getTextEt>
 8017be0:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 8017be4:	6822      	ldr	r2, [r4, #0]
 8017be6:	2b00      	cmp	r3, #0
 8017be8:	db06      	blt.n	8017bf8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8017bea:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 8017bee:	2b00      	cmp	r3, #0
 8017bf0:	db02      	blt.n	8017bf8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8017bf2:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8017bf4:	4298      	cmp	r0, r3
 8017bf6:	d004      	beq.n	8017c02 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8017bf8:	6953      	ldr	r3, [r2, #20]
 8017bfa:	4620      	mov	r0, r4
 8017bfc:	4798      	blx	r3
 8017bfe:	b002      	add	sp, #8
 8017c00:	bd10      	pop	{r4, pc}
 8017c02:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
 8017c06:	c903      	ldmia	r1, {r0, r1}
 8017c08:	466b      	mov	r3, sp
 8017c0a:	e883 0003 	stmia.w	r3, {r0, r1}
 8017c0e:	6912      	ldr	r2, [r2, #16]
 8017c10:	4619      	mov	r1, r3
 8017c12:	4620      	mov	r0, r4
 8017c14:	4790      	blx	r2
 8017c16:	e7f2      	b.n	8017bfe <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8017c18:	2000e468 	.word	0x2000e468
 8017c1c:	2000e470 	.word	0x2000e470

08017c20 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8017c20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017c24:	4b44      	ldr	r3, [pc, #272]	@ (8017d38 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8017c26:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8017c28:	881b      	ldrh	r3, [r3, #0]
 8017c2a:	4293      	cmp	r3, r2
 8017c2c:	b08e      	sub	sp, #56	@ 0x38
 8017c2e:	4604      	mov	r4, r0
 8017c30:	d97e      	bls.n	8017d30 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8017c32:	6808      	ldr	r0, [r1, #0]
 8017c34:	4d41      	ldr	r5, [pc, #260]	@ (8017d3c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8017c36:	6849      	ldr	r1, [r1, #4]
 8017c38:	ab05      	add	r3, sp, #20
 8017c3a:	c303      	stmia	r3!, {r0, r1}
 8017c3c:	4611      	mov	r1, r2
 8017c3e:	6828      	ldr	r0, [r5, #0]
 8017c40:	f7f2 fc08 	bl	800a454 <_ZNK8touchgfx5Texts7getTextEt>
 8017c44:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 8017c48:	2b00      	cmp	r3, #0
 8017c4a:	db11      	blt.n	8017c70 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8017c4c:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 8017c50:	2b00      	cmp	r3, #0
 8017c52:	db0d      	blt.n	8017c70 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8017c54:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8017c56:	4298      	cmp	r0, r3
 8017c58:	d10a      	bne.n	8017c70 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8017c5a:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
 8017c5e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8017c62:	ab09      	add	r3, sp, #36	@ 0x24
 8017c64:	e883 0003 	stmia.w	r3, {r0, r1}
 8017c68:	4619      	mov	r1, r3
 8017c6a:	a805      	add	r0, sp, #20
 8017c6c:	f7fa ffe2 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 8017c70:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8017c74:	2b00      	cmp	r3, #0
 8017c76:	dd5b      	ble.n	8017d30 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8017c78:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8017c7c:	2b00      	cmp	r3, #0
 8017c7e:	dd57      	ble.n	8017d30 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8017c80:	4f2f      	ldr	r7, [pc, #188]	@ (8017d40 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8017c82:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8017c84:	683b      	ldr	r3, [r7, #0]
 8017c86:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8017c8a:	4b2e      	ldr	r3, [pc, #184]	@ (8017d44 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8017c8c:	681b      	ldr	r3, [r3, #0]
 8017c8e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8017c92:	2e00      	cmp	r6, #0
 8017c94:	d04c      	beq.n	8017d30 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8017c96:	6823      	ldr	r3, [r4, #0]
 8017c98:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
 8017c9c:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8017c9e:	4620      	mov	r0, r4
 8017ca0:	4798      	blx	r3
 8017ca2:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8017ca4:	683b      	ldr	r3, [r7, #0]
 8017ca6:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
 8017caa:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
 8017cae:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
 8017cb2:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8017cb4:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8017cb8:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
 8017cbc:	785b      	ldrb	r3, [r3, #1]
 8017cbe:	9609      	str	r6, [sp, #36]	@ 0x24
 8017cc0:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8017cc4:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8017cc8:	4b1f      	ldr	r3, [pc, #124]	@ (8017d48 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8017cca:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
 8017cce:	681b      	ldr	r3, [r3, #0]
 8017cd0:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
 8017cd4:	910b      	str	r1, [sp, #44]	@ 0x2c
 8017cd6:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
 8017cda:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
 8017cde:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
 8017ce2:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
 8017ce6:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8017cea:	b10a      	cbz	r2, 8017cf0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8017cec:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
 8017cee:	b906      	cbnz	r6, 8017cf2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8017cf0:	689e      	ldr	r6, [r3, #8]
 8017cf2:	af07      	add	r7, sp, #28
 8017cf4:	4621      	mov	r1, r4
 8017cf6:	4638      	mov	r0, r7
 8017cf8:	f004 f91a 	bl	801bf30 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017cfc:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8017cfe:	6828      	ldr	r0, [r5, #0]
 8017d00:	f7f2 fba8 	bl	800a454 <_ZNK8touchgfx5Texts7getTextEt>
 8017d04:	6823      	ldr	r3, [r4, #0]
 8017d06:	4605      	mov	r5, r0
 8017d08:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8017d0a:	4620      	mov	r0, r4
 8017d0c:	4798      	blx	r3
 8017d0e:	6823      	ldr	r3, [r4, #0]
 8017d10:	4680      	mov	r8, r0
 8017d12:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8017d16:	4620      	mov	r0, r4
 8017d18:	4798      	blx	r3
 8017d1a:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8017d1e:	ab09      	add	r3, sp, #36	@ 0x24
 8017d20:	9300      	str	r3, [sp, #0]
 8017d22:	9501      	str	r5, [sp, #4]
 8017d24:	ab05      	add	r3, sp, #20
 8017d26:	e897 0006 	ldmia.w	r7, {r1, r2}
 8017d2a:	4630      	mov	r0, r6
 8017d2c:	f7f2 fb3c 	bl	800a3a8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8017d30:	b00e      	add	sp, #56	@ 0x38
 8017d32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017d36:	bf00      	nop
 8017d38:	2000e468 	.word	0x2000e468
 8017d3c:	2000e470 	.word	0x2000e470
 8017d40:	2000e464 	.word	0x2000e464
 8017d44:	2000e46c 	.word	0x2000e46c
 8017d48:	2000e40c 	.word	0x2000e40c

08017d4c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8017d4c:	b538      	push	{r3, r4, r5, lr}
 8017d4e:	4b0e      	ldr	r3, [pc, #56]	@ (8017d88 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8017d50:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8017d52:	881b      	ldrh	r3, [r3, #0]
 8017d54:	429a      	cmp	r2, r3
 8017d56:	4604      	mov	r4, r0
 8017d58:	d214      	bcs.n	8017d84 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8017d5a:	6803      	ldr	r3, [r0, #0]
 8017d5c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8017d5e:	4798      	blx	r3
 8017d60:	6823      	ldr	r3, [r4, #0]
 8017d62:	4605      	mov	r5, r0
 8017d64:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8017d66:	4620      	mov	r0, r4
 8017d68:	4798      	blx	r3
 8017d6a:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8017d6e:	b22d      	sxth	r5, r5
 8017d70:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8017d74:	4601      	mov	r1, r0
 8017d76:	bf06      	itte	eq
 8017d78:	4602      	moveq	r2, r0
 8017d7a:	4629      	moveq	r1, r5
 8017d7c:	462a      	movne	r2, r5
 8017d7e:	4620      	mov	r0, r4
 8017d80:	f7ee f990 	bl	80060a4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8017d84:	bd38      	pop	{r3, r4, r5, pc}
 8017d86:	bf00      	nop
 8017d88:	2000e468 	.word	0x2000e468

08017d8c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8017d8c:	b530      	push	{r4, r5, lr}
 8017d8e:	888b      	ldrh	r3, [r1, #4]
 8017d90:	8583      	strh	r3, [r0, #44]	@ 0x2c
 8017d92:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8017d96:	b085      	sub	sp, #20
 8017d98:	4604      	mov	r4, r0
 8017d9a:	b923      	cbnz	r3, 8017da6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8017d9c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8017da0:	b90b      	cbnz	r3, 8017da6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8017da2:	f7ff ffd3 	bl	8017d4c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8017da6:	6823      	ldr	r3, [r4, #0]
 8017da8:	466d      	mov	r5, sp
 8017daa:	4621      	mov	r1, r4
 8017dac:	4628      	mov	r0, r5
 8017dae:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8017db2:	4798      	blx	r3
 8017db4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8017db8:	343c      	adds	r4, #60	@ 0x3c
 8017dba:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8017dbe:	b005      	add	sp, #20
 8017dc0:	bd30      	pop	{r4, r5, pc}

08017dc2 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8017dc2:	2300      	movs	r3, #0
 8017dc4:	8083      	strh	r3, [r0, #4]
 8017dc6:	80c3      	strh	r3, [r0, #6]
 8017dc8:	8003      	strh	r3, [r0, #0]
 8017dca:	8043      	strh	r3, [r0, #2]
 8017dcc:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 8017dd0:	2bff      	cmp	r3, #255	@ 0xff
 8017dd2:	bf01      	itttt	eq
 8017dd4:	890b      	ldrheq	r3, [r1, #8]
 8017dd6:	8083      	strheq	r3, [r0, #4]
 8017dd8:	894b      	ldrheq	r3, [r1, #10]
 8017dda:	80c3      	strheq	r3, [r0, #6]
 8017ddc:	4770      	bx	lr
	...

08017de0 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8017de0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8017de2:	4604      	mov	r4, r0
 8017de4:	6808      	ldr	r0, [r1, #0]
 8017de6:	6849      	ldr	r1, [r1, #4]
 8017de8:	466b      	mov	r3, sp
 8017dea:	c303      	stmia	r3!, {r0, r1}
 8017dec:	6823      	ldr	r3, [r4, #0]
 8017dee:	4669      	mov	r1, sp
 8017df0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017df2:	4620      	mov	r0, r4
 8017df4:	4798      	blx	r3
 8017df6:	4b08      	ldr	r3, [pc, #32]	@ (8017e18 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8017df8:	681b      	ldr	r3, [r3, #0]
 8017dfa:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8017dfe:	b10a      	cbz	r2, 8017e04 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8017e00:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8017e02:	b900      	cbnz	r0, 8017e06 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8017e04:	6898      	ldr	r0, [r3, #8]
 8017e06:	6803      	ldr	r3, [r0, #0]
 8017e08:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8017e0a:	6a1d      	ldr	r5, [r3, #32]
 8017e0c:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8017e10:	4669      	mov	r1, sp
 8017e12:	47a8      	blx	r5
 8017e14:	b003      	add	sp, #12
 8017e16:	bd30      	pop	{r4, r5, pc}
 8017e18:	2000e40c 	.word	0x2000e40c

08017e1c <_ZN8touchgfx3BoxD1Ev>:
 8017e1c:	4770      	bx	lr

08017e1e <_ZN8touchgfx3BoxD0Ev>:
 8017e1e:	b510      	push	{r4, lr}
 8017e20:	212c      	movs	r1, #44	@ 0x2c
 8017e22:	4604      	mov	r4, r0
 8017e24:	f015 fd43 	bl	802d8ae <_ZdlPvj>
 8017e28:	4620      	mov	r0, r4
 8017e2a:	bd10      	pop	{r4, pc}

08017e2c <_ZNK8touchgfx3Box17invalidateContentEv>:
 8017e2c:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 8017e30:	b12a      	cbz	r2, 8017e3e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8017e32:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8017e36:	b112      	cbz	r2, 8017e3e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8017e38:	6803      	ldr	r3, [r0, #0]
 8017e3a:	695b      	ldr	r3, [r3, #20]
 8017e3c:	4718      	bx	r3
 8017e3e:	4770      	bx	lr

08017e40 <_ZN8touchgfx6ButtonD1Ev>:
 8017e40:	4770      	bx	lr

08017e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8017e42:	b570      	push	{r4, r5, r6, lr}
 8017e44:	880b      	ldrh	r3, [r1, #0]
 8017e46:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 8017e48:	4605      	mov	r5, r0
 8017e4a:	8813      	ldrh	r3, [r2, #0]
 8017e4c:	f825 3f30 	strh.w	r3, [r5, #48]!
 8017e50:	4604      	mov	r4, r0
 8017e52:	4628      	mov	r0, r5
 8017e54:	f006 fcac 	bl	801e7b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8017e58:	4606      	mov	r6, r0
 8017e5a:	4628      	mov	r0, r5
 8017e5c:	f006 fcdc 	bl	801e818 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8017e60:	6823      	ldr	r3, [r4, #0]
 8017e62:	4605      	mov	r5, r0
 8017e64:	4631      	mov	r1, r6
 8017e66:	4620      	mov	r0, r4
 8017e68:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017e6a:	4798      	blx	r3
 8017e6c:	6823      	ldr	r3, [r4, #0]
 8017e6e:	4629      	mov	r1, r5
 8017e70:	4620      	mov	r0, r4
 8017e72:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017e74:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017e78:	4718      	bx	r3

08017e7a <_ZN8touchgfx6ButtonD0Ev>:
 8017e7a:	b510      	push	{r4, lr}
 8017e7c:	2134      	movs	r1, #52	@ 0x34
 8017e7e:	4604      	mov	r4, r0
 8017e80:	f015 fd15 	bl	802d8ae <_ZdlPvj>
 8017e84:	4620      	mov	r0, r4
 8017e86:	bd10      	pop	{r4, pc}

08017e88 <_ZNK8touchgfx6Button12getSolidRectEv>:
 8017e88:	b510      	push	{r4, lr}
 8017e8a:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 8017e8e:	2bff      	cmp	r3, #255	@ 0xff
 8017e90:	4604      	mov	r4, r0
 8017e92:	d006      	beq.n	8017ea2 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8017e94:	2300      	movs	r3, #0
 8017e96:	8003      	strh	r3, [r0, #0]
 8017e98:	8043      	strh	r3, [r0, #2]
 8017e9a:	8083      	strh	r3, [r0, #4]
 8017e9c:	80c3      	strh	r3, [r0, #6]
 8017e9e:	4620      	mov	r0, r4
 8017ea0:	bd10      	pop	{r4, pc}
 8017ea2:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 8017ea6:	b11b      	cbz	r3, 8017eb0 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8017ea8:	3130      	adds	r1, #48	@ 0x30
 8017eaa:	f006 fce9 	bl	801e880 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8017eae:	e7f6      	b.n	8017e9e <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8017eb0:	312e      	adds	r1, #46	@ 0x2e
 8017eb2:	e7fa      	b.n	8017eaa <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

08017eb4 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8017eb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017eb8:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8017ebc:	b08a      	sub	sp, #40	@ 0x28
 8017ebe:	4604      	mov	r4, r0
 8017ec0:	4688      	mov	r8, r1
 8017ec2:	2b00      	cmp	r3, #0
 8017ec4:	d066      	beq.n	8017f94 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8017ec6:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 8017ec8:	f8ad 3014 	strh.w	r3, [sp, #20]
 8017ecc:	a805      	add	r0, sp, #20
 8017ece:	f006 fc6f 	bl	801e7b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8017ed2:	4607      	mov	r7, r0
 8017ed4:	a805      	add	r0, sp, #20
 8017ed6:	f006 fc9f 	bl	801e818 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8017eda:	f9b8 6000 	ldrsh.w	r6, [r8]
 8017ede:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8017ee2:	4432      	add	r2, r6
 8017ee4:	b292      	uxth	r2, r2
 8017ee6:	2300      	movs	r3, #0
 8017ee8:	fa0f fc82 	sxth.w	ip, r2
 8017eec:	459c      	cmp	ip, r3
 8017eee:	9306      	str	r3, [sp, #24]
 8017ef0:	dd52      	ble.n	8017f98 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8017ef2:	42b7      	cmp	r7, r6
 8017ef4:	dd50      	ble.n	8017f98 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8017ef6:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8017efa:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8017efe:	442b      	add	r3, r5
 8017f00:	b29b      	uxth	r3, r3
 8017f02:	b219      	sxth	r1, r3
 8017f04:	2900      	cmp	r1, #0
 8017f06:	dd47      	ble.n	8017f98 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8017f08:	42a8      	cmp	r0, r5
 8017f0a:	dd45      	ble.n	8017f98 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8017f0c:	4567      	cmp	r7, ip
 8017f0e:	bfb8      	it	lt
 8017f10:	b2ba      	uxthlt	r2, r7
 8017f12:	4288      	cmp	r0, r1
 8017f14:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8017f18:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8017f1c:	bfb8      	it	lt
 8017f1e:	b283      	uxthlt	r3, r0
 8017f20:	1b92      	subs	r2, r2, r6
 8017f22:	1b5b      	subs	r3, r3, r5
 8017f24:	f8ad 201c 	strh.w	r2, [sp, #28]
 8017f28:	f8ad 301e 	strh.w	r3, [sp, #30]
 8017f2c:	f8ad 6018 	strh.w	r6, [sp, #24]
 8017f30:	f8ad 501a 	strh.w	r5, [sp, #26]
 8017f34:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8017f38:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8017f3c:	429a      	cmp	r2, r3
 8017f3e:	d026      	beq.n	8017f8e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8017f40:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8017f44:	2b00      	cmp	r3, #0
 8017f46:	dd22      	ble.n	8017f8e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8017f48:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8017f4c:	2b00      	cmp	r3, #0
 8017f4e:	dd1e      	ble.n	8017f8e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8017f50:	2300      	movs	r3, #0
 8017f52:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8017f56:	6823      	ldr	r3, [r4, #0]
 8017f58:	a908      	add	r1, sp, #32
 8017f5a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017f5c:	4620      	mov	r0, r4
 8017f5e:	4798      	blx	r3
 8017f60:	4b0f      	ldr	r3, [pc, #60]	@ (8017fa0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8017f62:	681b      	ldr	r3, [r3, #0]
 8017f64:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8017f68:	b10a      	cbz	r2, 8017f6e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8017f6a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8017f6c:	b900      	cbnz	r0, 8017f70 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8017f6e:	6898      	ldr	r0, [r3, #8]
 8017f70:	6801      	ldr	r1, [r0, #0]
 8017f72:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8017f76:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8017f7a:	2501      	movs	r5, #1
 8017f7c:	9502      	str	r5, [sp, #8]
 8017f7e:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 8017f82:	9401      	str	r4, [sp, #4]
 8017f84:	ac06      	add	r4, sp, #24
 8017f86:	9400      	str	r4, [sp, #0]
 8017f88:	688c      	ldr	r4, [r1, #8]
 8017f8a:	a905      	add	r1, sp, #20
 8017f8c:	47a0      	blx	r4
 8017f8e:	b00a      	add	sp, #40	@ 0x28
 8017f90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017f94:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 8017f96:	e797      	b.n	8017ec8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8017f98:	2300      	movs	r3, #0
 8017f9a:	9307      	str	r3, [sp, #28]
 8017f9c:	e7ca      	b.n	8017f34 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8017f9e:	bf00      	nop
 8017fa0:	2000e40c 	.word	0x2000e40c

08017fa4 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8017fa4:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
 8017fa8:	b12a      	cbz	r2, 8017fb6 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8017faa:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8017fae:	b112      	cbz	r2, 8017fb6 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8017fb0:	6803      	ldr	r3, [r0, #0]
 8017fb2:	695b      	ldr	r3, [r3, #20]
 8017fb4:	4718      	bx	r3
 8017fb6:	4770      	bx	lr

08017fb8 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>:
 8017fb8:	4770      	bx	lr
	...

08017fbc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8017fbc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017fc0:	4b2f      	ldr	r3, [pc, #188]	@ (8018080 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8017fc2:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8017fc4:	881b      	ldrh	r3, [r3, #0]
 8017fc6:	4293      	cmp	r3, r2
 8017fc8:	b08d      	sub	sp, #52	@ 0x34
 8017fca:	4604      	mov	r4, r0
 8017fcc:	460f      	mov	r7, r1
 8017fce:	d954      	bls.n	801807a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8017fd0:	4b2c      	ldr	r3, [pc, #176]	@ (8018084 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8017fd2:	6819      	ldr	r1, [r3, #0]
 8017fd4:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8017fd8:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8017fdc:	4a2a      	ldr	r2, [pc, #168]	@ (8018088 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8017fde:	6812      	ldr	r2, [r2, #0]
 8017fe0:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8017fe4:	2900      	cmp	r1, #0
 8017fe6:	d048      	beq.n	801807a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8017fe8:	785a      	ldrb	r2, [r3, #1]
 8017fea:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 8017fee:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 8017ff2:	4b26      	ldr	r3, [pc, #152]	@ (801808c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8017ff4:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
 8017ff8:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
 8017ffc:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
 8018000:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 8018002:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
 8018006:	9107      	str	r1, [sp, #28]
 8018008:	f3c2 0801 	ubfx	r8, r2, #0, #2
 801800c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8018010:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 8018014:	681a      	ldr	r2, [r3, #0]
 8018016:	f88d 8020 	strb.w	r8, [sp, #32]
 801801a:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 801801e:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
 8018022:	9609      	str	r6, [sp, #36]	@ 0x24
 8018024:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
 8018028:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
 801802c:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
 8018030:	b10b      	cbz	r3, 8018036 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8018032:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
 8018034:	b905      	cbnz	r5, 8018038 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8018036:	6895      	ldr	r5, [r2, #8]
 8018038:	ae05      	add	r6, sp, #20
 801803a:	4621      	mov	r1, r4
 801803c:	4630      	mov	r0, r6
 801803e:	f003 ff77 	bl	801bf30 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018042:	4b13      	ldr	r3, [pc, #76]	@ (8018090 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8018044:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8018046:	6818      	ldr	r0, [r3, #0]
 8018048:	f7f2 fa04 	bl	800a454 <_ZNK8touchgfx5Texts7getTextEt>
 801804c:	6823      	ldr	r3, [r4, #0]
 801804e:	4680      	mov	r8, r0
 8018050:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8018052:	4620      	mov	r0, r4
 8018054:	4798      	blx	r3
 8018056:	6823      	ldr	r3, [r4, #0]
 8018058:	4681      	mov	r9, r0
 801805a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 801805e:	4620      	mov	r0, r4
 8018060:	4798      	blx	r3
 8018062:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8018066:	ab07      	add	r3, sp, #28
 8018068:	9300      	str	r3, [sp, #0]
 801806a:	f8cd 8004 	str.w	r8, [sp, #4]
 801806e:	463b      	mov	r3, r7
 8018070:	e896 0006 	ldmia.w	r6, {r1, r2}
 8018074:	4628      	mov	r0, r5
 8018076:	f7f2 f997 	bl	800a3a8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801807a:	b00d      	add	sp, #52	@ 0x34
 801807c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018080:	2000e468 	.word	0x2000e468
 8018084:	2000e464 	.word	0x2000e464
 8018088:	2000e46c 	.word	0x2000e46c
 801808c:	2000e40c 	.word	0x2000e40c
 8018090:	2000e470 	.word	0x2000e470

08018094 <_ZN8touchgfx24TextAreaWithWildcardBaseD0Ev>:
 8018094:	b510      	push	{r4, lr}
 8018096:	2148      	movs	r1, #72	@ 0x48
 8018098:	4604      	mov	r4, r0
 801809a:	f015 fc08 	bl	802d8ae <_ZdlPvj>
 801809e:	4620      	mov	r0, r4
 80180a0:	bd10      	pop	{r4, pc}

080180a2 <_ZN8touchgfx5ImageD1Ev>:
 80180a2:	4770      	bx	lr

080180a4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 80180a4:	b570      	push	{r4, r5, r6, lr}
 80180a6:	880b      	ldrh	r3, [r1, #0]
 80180a8:	84c3      	strh	r3, [r0, #38]	@ 0x26
 80180aa:	4604      	mov	r4, r0
 80180ac:	4608      	mov	r0, r1
 80180ae:	460d      	mov	r5, r1
 80180b0:	f006 fb7e 	bl	801e7b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80180b4:	4606      	mov	r6, r0
 80180b6:	4628      	mov	r0, r5
 80180b8:	f006 fbae 	bl	801e818 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80180bc:	6823      	ldr	r3, [r4, #0]
 80180be:	4605      	mov	r5, r0
 80180c0:	4631      	mov	r1, r6
 80180c2:	4620      	mov	r0, r4
 80180c4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80180c6:	4798      	blx	r3
 80180c8:	6823      	ldr	r3, [r4, #0]
 80180ca:	4629      	mov	r1, r5
 80180cc:	4620      	mov	r0, r4
 80180ce:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80180d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80180d4:	4718      	bx	r3

080180d6 <_ZN8touchgfx5ImageD0Ev>:
 80180d6:	b510      	push	{r4, lr}
 80180d8:	212c      	movs	r1, #44	@ 0x2c
 80180da:	4604      	mov	r4, r0
 80180dc:	f015 fbe7 	bl	802d8ae <_ZdlPvj>
 80180e0:	4620      	mov	r0, r4
 80180e2:	bd10      	pop	{r4, pc}

080180e4 <_ZNK8touchgfx5Image12getSolidRectEv>:
 80180e4:	b510      	push	{r4, lr}
 80180e6:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 80180ea:	2bff      	cmp	r3, #255	@ 0xff
 80180ec:	4604      	mov	r4, r0
 80180ee:	d006      	beq.n	80180fe <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 80180f0:	2300      	movs	r3, #0
 80180f2:	8003      	strh	r3, [r0, #0]
 80180f4:	8043      	strh	r3, [r0, #2]
 80180f6:	8083      	strh	r3, [r0, #4]
 80180f8:	80c3      	strh	r3, [r0, #6]
 80180fa:	4620      	mov	r0, r4
 80180fc:	bd10      	pop	{r4, pc}
 80180fe:	3126      	adds	r1, #38	@ 0x26
 8018100:	f006 fbbe 	bl	801e880 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018104:	e7f9      	b.n	80180fa <_ZNK8touchgfx5Image12getSolidRectEv+0x16>
	...

08018108 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8018108:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801810c:	4604      	mov	r4, r0
 801810e:	b088      	sub	sp, #32
 8018110:	f854 3b26 	ldr.w	r3, [r4], #38
 8018114:	2500      	movs	r5, #0
 8018116:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018118:	460f      	mov	r7, r1
 801811a:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801811e:	a904      	add	r1, sp, #16
 8018120:	4606      	mov	r6, r0
 8018122:	4798      	blx	r3
 8018124:	4620      	mov	r0, r4
 8018126:	f006 fb43 	bl	801e7b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801812a:	4680      	mov	r8, r0
 801812c:	4620      	mov	r0, r4
 801812e:	f006 fb73 	bl	801e818 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8018132:	9506      	str	r5, [sp, #24]
 8018134:	ad06      	add	r5, sp, #24
 8018136:	f8ad 001e 	strh.w	r0, [sp, #30]
 801813a:	4639      	mov	r1, r7
 801813c:	4628      	mov	r0, r5
 801813e:	f8ad 801c 	strh.w	r8, [sp, #28]
 8018142:	f7fa fd77 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 8018146:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801814a:	2b00      	cmp	r3, #0
 801814c:	dd19      	ble.n	8018182 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801814e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8018152:	2b00      	cmp	r3, #0
 8018154:	dd15      	ble.n	8018182 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8018156:	4b0c      	ldr	r3, [pc, #48]	@ (8018188 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8018158:	681b      	ldr	r3, [r3, #0]
 801815a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 801815e:	b10a      	cbz	r2, 8018164 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8018160:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8018162:	b900      	cbnz	r0, 8018166 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8018164:	6898      	ldr	r0, [r3, #8]
 8018166:	6801      	ldr	r1, [r0, #0]
 8018168:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801816c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018170:	2701      	movs	r7, #1
 8018172:	9702      	str	r7, [sp, #8]
 8018174:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 8018178:	e9cd 5600 	strd	r5, r6, [sp]
 801817c:	688d      	ldr	r5, [r1, #8]
 801817e:	4621      	mov	r1, r4
 8018180:	47a8      	blx	r5
 8018182:	b008      	add	sp, #32
 8018184:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018188:	2000e40c 	.word	0x2000e40c

0801818c <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 801818c:	4770      	bx	lr

0801818e <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 801818e:	b510      	push	{r4, lr}
 8018190:	2148      	movs	r1, #72	@ 0x48
 8018192:	4604      	mov	r4, r0
 8018194:	f015 fb8b 	bl	802d8ae <_ZdlPvj>
 8018198:	4620      	mov	r0, r4
 801819a:	bd10      	pop	{r4, pc}

0801819c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 801819c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80181a0:	b08d      	sub	sp, #52	@ 0x34
 80181a2:	4604      	mov	r4, r0
 80181a4:	460f      	mov	r7, r1
 80181a6:	f7ff fe85 	bl	8017eb4 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80181aa:	4a55      	ldr	r2, [pc, #340]	@ (8018300 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 80181ac:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80181ae:	8812      	ldrh	r2, [r2, #0]
 80181b0:	429a      	cmp	r2, r3
 80181b2:	f240 8082 	bls.w	80182ba <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80181b6:	4d53      	ldr	r5, [pc, #332]	@ (8018304 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 80181b8:	682a      	ldr	r2, [r5, #0]
 80181ba:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80181be:	4b52      	ldr	r3, [pc, #328]	@ (8018308 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 80181c0:	681b      	ldr	r3, [r3, #0]
 80181c2:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80181c6:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	@ 0x46
 80181ca:	2200      	movs	r2, #0
 80181cc:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80181d0:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
 80181d4:	2a03      	cmp	r2, #3
 80181d6:	d811      	bhi.n	80181fc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80181d8:	e8df f002 	tbb	[pc, r2]
 80181dc:	89727902 	.word	0x89727902
 80181e0:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80181e4:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80181e8:	1ad2      	subs	r2, r2, r3
 80181ea:	2002      	movs	r0, #2
 80181ec:	f8ad 1010 	strh.w	r1, [sp, #16]
 80181f0:	fb92 f2f0 	sdiv	r2, r2, r0
 80181f4:	f8ad 3012 	strh.w	r3, [sp, #18]
 80181f8:	f8ad 200e 	strh.w	r2, [sp, #14]
 80181fc:	f10d 080c 	add.w	r8, sp, #12
 8018200:	e898 0003 	ldmia.w	r8, {r0, r1}
 8018204:	f10d 0914 	add.w	r9, sp, #20
 8018208:	e889 0003 	stmia.w	r9, {r0, r1}
 801820c:	4639      	mov	r1, r7
 801820e:	4648      	mov	r0, r9
 8018210:	f7fa fd10 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 8018214:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8018218:	2b00      	cmp	r3, #0
 801821a:	dd4e      	ble.n	80182ba <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 801821c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8018220:	2b00      	cmp	r3, #0
 8018222:	dd4a      	ble.n	80182ba <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8018224:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8018228:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 801822c:	1a9b      	subs	r3, r3, r2
 801822e:	f8ad 3014 	strh.w	r3, [sp, #20]
 8018232:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8018236:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 801823a:	1a9b      	subs	r3, r3, r2
 801823c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8018240:	6823      	ldr	r3, [r4, #0]
 8018242:	4641      	mov	r1, r8
 8018244:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018246:	4620      	mov	r0, r4
 8018248:	4798      	blx	r3
 801824a:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 801824e:	2b00      	cmp	r3, #0
 8018250:	d053      	beq.n	80182fa <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 8018252:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8018254:	8f21      	ldrh	r1, [r4, #56]	@ 0x38
 8018256:	682b      	ldr	r3, [r5, #0]
 8018258:	f894 0032 	ldrb.w	r0, [r4, #50]	@ 0x32
 801825c:	f894 4044 	ldrb.w	r4, [r4, #68]	@ 0x44
 8018260:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8018264:	785b      	ldrb	r3, [r3, #1]
 8018266:	9209      	str	r2, [sp, #36]	@ 0x24
 8018268:	f3c3 0501 	ubfx	r5, r3, #0, #2
 801826c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8018270:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 8018274:	2300      	movs	r3, #0
 8018276:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 801827a:	f88d 302b 	strb.w	r3, [sp, #43]	@ 0x2b
 801827e:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 8018282:	4b22      	ldr	r3, [pc, #136]	@ (801830c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8018284:	9607      	str	r6, [sp, #28]
 8018286:	681b      	ldr	r3, [r3, #0]
 8018288:	f88d 5020 	strb.w	r5, [sp, #32]
 801828c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8018290:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8018294:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 8018298:	b10a      	cbz	r2, 801829e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 801829a:	6cdc      	ldr	r4, [r3, #76]	@ 0x4c
 801829c:	b904      	cbnz	r4, 80182a0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 801829e:	689c      	ldr	r4, [r3, #8]
 80182a0:	4b1b      	ldr	r3, [pc, #108]	@ (8018310 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 80182a2:	6818      	ldr	r0, [r3, #0]
 80182a4:	f7f2 f8d6 	bl	800a454 <_ZNK8touchgfx5Texts7getTextEt>
 80182a8:	ab07      	add	r3, sp, #28
 80182aa:	9001      	str	r0, [sp, #4]
 80182ac:	9300      	str	r3, [sp, #0]
 80182ae:	e898 0006 	ldmia.w	r8, {r1, r2}
 80182b2:	464b      	mov	r3, r9
 80182b4:	4620      	mov	r0, r4
 80182b6:	f7f2 f877 	bl	800a3a8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80182ba:	b00d      	add	sp, #52	@ 0x34
 80182bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80182c0:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80182c4:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80182c8:	1ad2      	subs	r2, r2, r3
 80182ca:	3201      	adds	r2, #1
 80182cc:	e78d      	b.n	80181ea <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 80182ce:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80182d2:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80182d6:	1ad2      	subs	r2, r2, r3
 80182d8:	3201      	adds	r2, #1
 80182da:	2002      	movs	r0, #2
 80182dc:	f8ad 3010 	strh.w	r3, [sp, #16]
 80182e0:	fb92 f2f0 	sdiv	r2, r2, r0
 80182e4:	f8ad 1012 	strh.w	r1, [sp, #18]
 80182e8:	f8ad 200c 	strh.w	r2, [sp, #12]
 80182ec:	e786      	b.n	80181fc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80182ee:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80182f2:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80182f6:	1ad2      	subs	r2, r2, r3
 80182f8:	e7ef      	b.n	80182da <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 80182fa:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 80182fc:	e7aa      	b.n	8018254 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 80182fe:	bf00      	nop
 8018300:	2000e468 	.word	0x2000e468
 8018304:	2000e464 	.word	0x2000e464
 8018308:	2000e46c 	.word	0x2000e46c
 801830c:	2000e40c 	.word	0x2000e40c
 8018310:	2000e470 	.word	0x2000e470

08018314 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8018314:	b510      	push	{r4, lr}
 8018316:	2101      	movs	r1, #1
 8018318:	4c13      	ldr	r4, [pc, #76]	@ (8018368 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 801831a:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 801831e:	2200      	movs	r2, #0
 8018320:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
 8018324:	6004      	str	r4, [r0, #0]
 8018326:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 801832a:	4c10      	ldr	r4, [pc, #64]	@ (801836c <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 801832c:	8082      	strh	r2, [r0, #4]
 801832e:	80c2      	strh	r2, [r0, #6]
 8018330:	8102      	strh	r2, [r0, #8]
 8018332:	8142      	strh	r2, [r0, #10]
 8018334:	8182      	strh	r2, [r0, #12]
 8018336:	81c2      	strh	r2, [r0, #14]
 8018338:	8202      	strh	r2, [r0, #16]
 801833a:	8242      	strh	r2, [r0, #18]
 801833c:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8018340:	61c2      	str	r2, [r0, #28]
 8018342:	8402      	strh	r2, [r0, #32]
 8018344:	8442      	strh	r2, [r0, #34]	@ 0x22
 8018346:	6282      	str	r2, [r0, #40]	@ 0x28
 8018348:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
 801834c:	85c1      	strh	r1, [r0, #46]	@ 0x2e
 801834e:	8601      	strh	r1, [r0, #48]	@ 0x30
 8018350:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
 8018354:	6344      	str	r4, [r0, #52]	@ 0x34
 8018356:	8701      	strh	r1, [r0, #56]	@ 0x38
 8018358:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 801835c:	f880 2044 	strb.w	r2, [r0, #68]	@ 0x44
 8018360:	f8a0 2046 	strh.w	r2, [r0, #70]	@ 0x46
 8018364:	bd10      	pop	{r4, pc}
 8018366:	bf00      	nop
 8018368:	08032fdc 	.word	0x08032fdc
 801836c:	08030688 	.word	0x08030688

08018370 <_ZN8touchgfx7OutlineD1Ev>:
 8018370:	4770      	bx	lr

08018372 <_ZN8touchgfx7OutlineD0Ev>:
 8018372:	b510      	push	{r4, lr}
 8018374:	2130      	movs	r1, #48	@ 0x30
 8018376:	4604      	mov	r4, r0
 8018378:	f015 fa99 	bl	802d8ae <_ZdlPvj>
 801837c:	4620      	mov	r0, r4
 801837e:	bd10      	pop	{r4, pc}

08018380 <_ZN8touchgfx7Outline5resetEv>:
 8018380:	b510      	push	{r4, lr}
 8018382:	4604      	mov	r4, r0
 8018384:	f000 fe96 	bl	80190b4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8018388:	60e0      	str	r0, [r4, #12]
 801838a:	f000 fe99 	bl	80190c0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801838e:	68e3      	ldr	r3, [r4, #12]
 8018390:	6123      	str	r3, [r4, #16]
 8018392:	08c0      	lsrs	r0, r0, #3
 8018394:	2200      	movs	r2, #0
 8018396:	f647 71ff 	movw	r1, #32767	@ 0x7fff
 801839a:	3801      	subs	r0, #1
 801839c:	6060      	str	r0, [r4, #4]
 801839e:	60a2      	str	r2, [r4, #8]
 80183a0:	8019      	strh	r1, [r3, #0]
 80183a2:	8059      	strh	r1, [r3, #2]
 80183a4:	809a      	strh	r2, [r3, #4]
 80183a6:	80da      	strh	r2, [r3, #6]
 80183a8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80183aa:	f023 0301 	bic.w	r3, r3, #1
 80183ae:	f043 0302 	orr.w	r3, r3, #2
 80183b2:	6263      	str	r3, [r4, #36]	@ 0x24
 80183b4:	bd10      	pop	{r4, pc}
	...

080183b8 <_ZN8touchgfx7OutlineC1Ev>:
 80183b8:	b510      	push	{r4, lr}
 80183ba:	4b0a      	ldr	r3, [pc, #40]	@ (80183e4 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 80183bc:	6003      	str	r3, [r0, #0]
 80183be:	2300      	movs	r3, #0
 80183c0:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80183c4:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80183c8:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80183cc:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80183d0:	6243      	str	r3, [r0, #36]	@ 0x24
 80183d2:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 80183d6:	4604      	mov	r4, r0
 80183d8:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
 80183dc:	f7ff ffd0 	bl	8018380 <_ZN8touchgfx7Outline5resetEv>
 80183e0:	4620      	mov	r0, r4
 80183e2:	bd10      	pop	{r4, pc}
 80183e4:	08033050 	.word	0x08033050

080183e8 <_ZN8touchgfx7Outline10renderLineEiiii>:
 80183e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80183ec:	b093      	sub	sp, #76	@ 0x4c
 80183ee:	1156      	asrs	r6, r2, #5
 80183f0:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 80183f2:	9305      	str	r3, [sp, #20]
 80183f4:	f004 051f 	and.w	r5, r4, #31
 80183f8:	1153      	asrs	r3, r2, #5
 80183fa:	9504      	str	r5, [sp, #16]
 80183fc:	1165      	asrs	r5, r4, #5
 80183fe:	9303      	str	r3, [sp, #12]
 8018400:	42ae      	cmp	r6, r5
 8018402:	ea4f 1364 	mov.w	r3, r4, asr #5
 8018406:	9306      	str	r3, [sp, #24]
 8018408:	f002 031f 	and.w	r3, r2, #31
 801840c:	f040 80f8 	bne.w	8018600 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 8018410:	9c04      	ldr	r4, [sp, #16]
 8018412:	9a05      	ldr	r2, [sp, #20]
 8018414:	42a3      	cmp	r3, r4
 8018416:	ea4f 1e62 	mov.w	lr, r2, asr #5
 801841a:	6902      	ldr	r2, [r0, #16]
 801841c:	d125      	bne.n	801846a <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 801841e:	f9b2 3000 	ldrsh.w	r3, [r2]
 8018422:	459e      	cmp	lr, r3
 8018424:	d103      	bne.n	801842e <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8018426:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 801842a:	429e      	cmp	r6, r3
 801842c:	d035      	beq.n	801849a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801842e:	88d1      	ldrh	r1, [r2, #6]
 8018430:	8893      	ldrh	r3, [r2, #4]
 8018432:	430b      	orrs	r3, r1
 8018434:	d010      	beq.n	8018458 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8018436:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 801843a:	2b00      	cmp	r3, #0
 801843c:	db0c      	blt.n	8018458 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801843e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 8018440:	428b      	cmp	r3, r1
 8018442:	da09      	bge.n	8018458 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8018444:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8018448:	428b      	cmp	r3, r1
 801844a:	bf38      	it	cc
 801844c:	3208      	addcc	r2, #8
 801844e:	f103 0301 	add.w	r3, r3, #1
 8018452:	bf38      	it	cc
 8018454:	6102      	strcc	r2, [r0, #16]
 8018456:	6083      	str	r3, [r0, #8]
 8018458:	6903      	ldr	r3, [r0, #16]
 801845a:	9a03      	ldr	r2, [sp, #12]
 801845c:	f8a3 e000 	strh.w	lr, [r3]
 8018460:	805a      	strh	r2, [r3, #2]
 8018462:	2200      	movs	r2, #0
 8018464:	809a      	strh	r2, [r3, #4]
 8018466:	80da      	strh	r2, [r3, #6]
 8018468:	e017      	b.n	801849a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801846a:	9c05      	ldr	r4, [sp, #20]
 801846c:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 8018470:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8018474:	f004 041f 	and.w	r4, r4, #31
 8018478:	114e      	asrs	r6, r1, #5
 801847a:	9402      	str	r4, [sp, #8]
 801847c:	9c04      	ldr	r4, [sp, #16]
 801847e:	4576      	cmp	r6, lr
 8018480:	f001 0c1f 	and.w	ip, r1, #31
 8018484:	eba4 0403 	sub.w	r4, r4, r3
 8018488:	d10a      	bne.n	80184a0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 801848a:	9b02      	ldr	r3, [sp, #8]
 801848c:	449c      	add	ip, r3
 801848e:	44a0      	add	r8, r4
 8018490:	fb04 a40c 	mla	r4, r4, ip, sl
 8018494:	f8a2 8004 	strh.w	r8, [r2, #4]
 8018498:	80d4      	strh	r4, [r2, #6]
 801849a:	b013      	add	sp, #76	@ 0x4c
 801849c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80184a0:	9d05      	ldr	r5, [sp, #20]
 80184a2:	1a69      	subs	r1, r5, r1
 80184a4:	bf5b      	ittet	pl
 80184a6:	f1cc 0520 	rsbpl	r5, ip, #32
 80184aa:	436c      	mulpl	r4, r5
 80184ac:	2500      	movmi	r5, #0
 80184ae:	2520      	movpl	r5, #32
 80184b0:	bf44      	itt	mi
 80184b2:	fb04 f40c 	mulmi.w	r4, r4, ip
 80184b6:	4249      	negmi	r1, r1
 80184b8:	9501      	str	r5, [sp, #4]
 80184ba:	9f01      	ldr	r7, [sp, #4]
 80184bc:	fb94 f5f1 	sdiv	r5, r4, r1
 80184c0:	fb01 4415 	mls	r4, r1, r5, r4
 80184c4:	bf54      	ite	pl
 80184c6:	f04f 0901 	movpl.w	r9, #1
 80184ca:	f04f 39ff 	movmi.w	r9, #4294967295
 80184ce:	2c00      	cmp	r4, #0
 80184d0:	bfb8      	it	lt
 80184d2:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80184d6:	44bc      	add	ip, r7
 80184d8:	44a8      	add	r8, r5
 80184da:	fb05 ac0c 	mla	ip, r5, ip, sl
 80184de:	f8a2 8004 	strh.w	r8, [r2, #4]
 80184e2:	f8a2 c006 	strh.w	ip, [r2, #6]
 80184e6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80184ea:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80184ee:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 80184f2:	bfb8      	it	lt
 80184f4:	1864      	addlt	r4, r4, r1
 80184f6:	ea58 0202 	orrs.w	r2, r8, r2
 80184fa:	444e      	add	r6, r9
 80184fc:	d011      	beq.n	8018522 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80184fe:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8018502:	f1b8 0f00 	cmp.w	r8, #0
 8018506:	db0c      	blt.n	8018522 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8018508:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 801850a:	4590      	cmp	r8, r2
 801850c:	da09      	bge.n	8018522 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801850e:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 8018512:	4590      	cmp	r8, r2
 8018514:	bf3c      	itt	cc
 8018516:	f10c 0208 	addcc.w	r2, ip, #8
 801851a:	6102      	strcc	r2, [r0, #16]
 801851c:	f108 0201 	add.w	r2, r8, #1
 8018520:	6082      	str	r2, [r0, #8]
 8018522:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8018526:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801852a:	f8ac 6000 	strh.w	r6, [ip]
 801852e:	2700      	movs	r7, #0
 8018530:	45b6      	cmp	lr, r6
 8018532:	f8ac 2002 	strh.w	r2, [ip, #2]
 8018536:	f8ac 7004 	strh.w	r7, [ip, #4]
 801853a:	f8ac 7006 	strh.w	r7, [ip, #6]
 801853e:	442b      	add	r3, r5
 8018540:	d04d      	beq.n	80185de <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 8018542:	9f04      	ldr	r7, [sp, #16]
 8018544:	1aff      	subs	r7, r7, r3
 8018546:	443d      	add	r5, r7
 8018548:	016d      	lsls	r5, r5, #5
 801854a:	fb95 f8f1 	sdiv	r8, r5, r1
 801854e:	fb01 5518 	mls	r5, r1, r8, r5
 8018552:	2d00      	cmp	r5, #0
 8018554:	bfb8      	it	lt
 8018556:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801855a:	f108 0701 	add.w	r7, r8, #1
 801855e:	bfb8      	it	lt
 8018560:	186d      	addlt	r5, r5, r1
 8018562:	1a64      	subs	r4, r4, r1
 8018564:	9703      	str	r7, [sp, #12]
 8018566:	f04f 0a00 	mov.w	sl, #0
 801856a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801856e:	1964      	adds	r4, r4, r5
 8018570:	bf58      	it	pl
 8018572:	9f03      	ldrpl	r7, [sp, #12]
 8018574:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8018578:	bf48      	it	mi
 801857a:	4647      	movmi	r7, r8
 801857c:	44bb      	add	fp, r7
 801857e:	f8ac b004 	strh.w	fp, [ip, #4]
 8018582:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8018586:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 801858a:	f8ac b006 	strh.w	fp, [ip, #6]
 801858e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8018592:	443b      	add	r3, r7
 8018594:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8018598:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 801859c:	bf58      	it	pl
 801859e:	1a64      	subpl	r4, r4, r1
 80185a0:	ea5b 0707 	orrs.w	r7, fp, r7
 80185a4:	444e      	add	r6, r9
 80185a6:	d011      	beq.n	80185cc <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80185a8:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80185ac:	f1bb 0f00 	cmp.w	fp, #0
 80185b0:	db0c      	blt.n	80185cc <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80185b2:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 80185b4:	45bb      	cmp	fp, r7
 80185b6:	da09      	bge.n	80185cc <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80185b8:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80185bc:	45bb      	cmp	fp, r7
 80185be:	bf3c      	itt	cc
 80185c0:	f10c 0708 	addcc.w	r7, ip, #8
 80185c4:	6107      	strcc	r7, [r0, #16]
 80185c6:	f10b 0701 	add.w	r7, fp, #1
 80185ca:	6087      	str	r7, [r0, #8]
 80185cc:	6907      	ldr	r7, [r0, #16]
 80185ce:	45b6      	cmp	lr, r6
 80185d0:	803e      	strh	r6, [r7, #0]
 80185d2:	807a      	strh	r2, [r7, #2]
 80185d4:	f8a7 a004 	strh.w	sl, [r7, #4]
 80185d8:	f8a7 a006 	strh.w	sl, [r7, #6]
 80185dc:	d1c5      	bne.n	801856a <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 80185de:	9a04      	ldr	r2, [sp, #16]
 80185e0:	1ad3      	subs	r3, r2, r3
 80185e2:	6902      	ldr	r2, [r0, #16]
 80185e4:	8891      	ldrh	r1, [r2, #4]
 80185e6:	88d6      	ldrh	r6, [r2, #6]
 80185e8:	4419      	add	r1, r3
 80185ea:	8091      	strh	r1, [r2, #4]
 80185ec:	9902      	ldr	r1, [sp, #8]
 80185ee:	f101 0c20 	add.w	ip, r1, #32
 80185f2:	9901      	ldr	r1, [sp, #4]
 80185f4:	ebac 0c01 	sub.w	ip, ip, r1
 80185f8:	fb03 630c 	mla	r3, r3, ip, r6
 80185fc:	80d3      	strh	r3, [r2, #6]
 80185fe:	e74c      	b.n	801849a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8018600:	9d05      	ldr	r5, [sp, #20]
 8018602:	1aa2      	subs	r2, r4, r2
 8018604:	eba5 0501 	sub.w	r5, r5, r1
 8018608:	9508      	str	r5, [sp, #32]
 801860a:	9202      	str	r2, [sp, #8]
 801860c:	f140 8128 	bpl.w	8018860 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 8018610:	9a03      	ldr	r2, [sp, #12]
 8018612:	2a00      	cmp	r2, #0
 8018614:	f6ff af41 	blt.w	801849a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8018618:	9a02      	ldr	r2, [sp, #8]
 801861a:	4252      	negs	r2, r2
 801861c:	9202      	str	r2, [sp, #8]
 801861e:	9a06      	ldr	r2, [sp, #24]
 8018620:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8018624:	f04f 34ff 	mov.w	r4, #4294967295
 8018628:	9206      	str	r2, [sp, #24]
 801862a:	462a      	mov	r2, r5
 801862c:	940b      	str	r4, [sp, #44]	@ 0x2c
 801862e:	435a      	muls	r2, r3
 8018630:	2400      	movs	r4, #0
 8018632:	9d02      	ldr	r5, [sp, #8]
 8018634:	9401      	str	r4, [sp, #4]
 8018636:	9c02      	ldr	r4, [sp, #8]
 8018638:	fb92 f4f4 	sdiv	r4, r2, r4
 801863c:	fb05 2214 	mls	r2, r5, r4, r2
 8018640:	2a00      	cmp	r2, #0
 8018642:	9207      	str	r2, [sp, #28]
 8018644:	bfbc      	itt	lt
 8018646:	1952      	addlt	r2, r2, r5
 8018648:	9207      	strlt	r2, [sp, #28]
 801864a:	9a01      	ldr	r2, [sp, #4]
 801864c:	6905      	ldr	r5, [r0, #16]
 801864e:	bfb8      	it	lt
 8018650:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8018654:	eb04 0901 	add.w	r9, r4, r1
 8018658:	429a      	cmp	r2, r3
 801865a:	ea4f 1669 	mov.w	r6, r9, asr #5
 801865e:	f040 8112 	bne.w	8018886 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 8018662:	f9b5 3000 	ldrsh.w	r3, [r5]
 8018666:	429e      	cmp	r6, r3
 8018668:	d104      	bne.n	8018674 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 801866a:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801866e:	9a03      	ldr	r2, [sp, #12]
 8018670:	429a      	cmp	r2, r3
 8018672:	d01b      	beq.n	80186ac <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8018674:	88ea      	ldrh	r2, [r5, #6]
 8018676:	88ab      	ldrh	r3, [r5, #4]
 8018678:	4313      	orrs	r3, r2
 801867a:	d010      	beq.n	801869e <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 801867c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8018680:	2a00      	cmp	r2, #0
 8018682:	db0c      	blt.n	801869e <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8018684:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8018686:	429a      	cmp	r2, r3
 8018688:	da09      	bge.n	801869e <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 801868a:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 801868e:	429a      	cmp	r2, r3
 8018690:	bf38      	it	cc
 8018692:	3508      	addcc	r5, #8
 8018694:	f102 0201 	add.w	r2, r2, #1
 8018698:	bf38      	it	cc
 801869a:	6105      	strcc	r5, [r0, #16]
 801869c:	6082      	str	r2, [r0, #8]
 801869e:	6903      	ldr	r3, [r0, #16]
 80186a0:	9a03      	ldr	r2, [sp, #12]
 80186a2:	805a      	strh	r2, [r3, #2]
 80186a4:	2200      	movs	r2, #0
 80186a6:	801e      	strh	r6, [r3, #0]
 80186a8:	809a      	strh	r2, [r3, #4]
 80186aa:	80da      	strh	r2, [r3, #6]
 80186ac:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80186ae:	9a03      	ldr	r2, [sp, #12]
 80186b0:	6901      	ldr	r1, [r0, #16]
 80186b2:	441a      	add	r2, r3
 80186b4:	f9b1 3000 	ldrsh.w	r3, [r1]
 80186b8:	42b3      	cmp	r3, r6
 80186ba:	d103      	bne.n	80186c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 80186bc:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80186c0:	429a      	cmp	r2, r3
 80186c2:	d01a      	beq.n	80186fa <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80186c4:	88cc      	ldrh	r4, [r1, #6]
 80186c6:	888b      	ldrh	r3, [r1, #4]
 80186c8:	4323      	orrs	r3, r4
 80186ca:	d010      	beq.n	80186ee <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80186cc:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80186d0:	2c00      	cmp	r4, #0
 80186d2:	db0c      	blt.n	80186ee <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80186d4:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80186d6:	429c      	cmp	r4, r3
 80186d8:	da09      	bge.n	80186ee <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80186da:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80186de:	429c      	cmp	r4, r3
 80186e0:	bf38      	it	cc
 80186e2:	3108      	addcc	r1, #8
 80186e4:	f104 0401 	add.w	r4, r4, #1
 80186e8:	bf38      	it	cc
 80186ea:	6101      	strcc	r1, [r0, #16]
 80186ec:	6084      	str	r4, [r0, #8]
 80186ee:	6903      	ldr	r3, [r0, #16]
 80186f0:	2100      	movs	r1, #0
 80186f2:	801e      	strh	r6, [r3, #0]
 80186f4:	805a      	strh	r2, [r3, #2]
 80186f6:	8099      	strh	r1, [r3, #4]
 80186f8:	80d9      	strh	r1, [r3, #6]
 80186fa:	9b06      	ldr	r3, [sp, #24]
 80186fc:	4293      	cmp	r3, r2
 80186fe:	f000 8082 	beq.w	8018806 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 8018702:	9b08      	ldr	r3, [sp, #32]
 8018704:	9c02      	ldr	r4, [sp, #8]
 8018706:	9902      	ldr	r1, [sp, #8]
 8018708:	015b      	lsls	r3, r3, #5
 801870a:	fb93 f1f1 	sdiv	r1, r3, r1
 801870e:	fb04 3311 	mls	r3, r4, r1, r3
 8018712:	2b00      	cmp	r3, #0
 8018714:	9103      	str	r1, [sp, #12]
 8018716:	9308      	str	r3, [sp, #32]
 8018718:	da04      	bge.n	8018724 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 801871a:	1e4b      	subs	r3, r1, #1
 801871c:	9303      	str	r3, [sp, #12]
 801871e:	9b08      	ldr	r3, [sp, #32]
 8018720:	4423      	add	r3, r4
 8018722:	9308      	str	r3, [sp, #32]
 8018724:	9b07      	ldr	r3, [sp, #28]
 8018726:	9902      	ldr	r1, [sp, #8]
 8018728:	1a5b      	subs	r3, r3, r1
 801872a:	9307      	str	r3, [sp, #28]
 801872c:	9b01      	ldr	r3, [sp, #4]
 801872e:	f1c3 0320 	rsb	r3, r3, #32
 8018732:	930e      	str	r3, [sp, #56]	@ 0x38
 8018734:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8018736:	9b01      	ldr	r3, [sp, #4]
 8018738:	1a5b      	subs	r3, r3, r1
 801873a:	464f      	mov	r7, r9
 801873c:	930a      	str	r3, [sp, #40]	@ 0x28
 801873e:	2600      	movs	r6, #0
 8018740:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8018744:	185b      	adds	r3, r3, r1
 8018746:	bf58      	it	pl
 8018748:	9902      	ldrpl	r1, [sp, #8]
 801874a:	9307      	str	r3, [sp, #28]
 801874c:	bf5d      	ittte	pl
 801874e:	1a5b      	subpl	r3, r3, r1
 8018750:	9307      	strpl	r3, [sp, #28]
 8018752:	9b03      	ldrpl	r3, [sp, #12]
 8018754:	9903      	ldrmi	r1, [sp, #12]
 8018756:	bf58      	it	pl
 8018758:	1c59      	addpl	r1, r3, #1
 801875a:	4489      	add	r9, r1
 801875c:	2a00      	cmp	r2, #0
 801875e:	ea4f 1a69 	mov.w	sl, r9, asr #5
 8018762:	db2e      	blt.n	80187c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8018764:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8018766:	4293      	cmp	r3, r2
 8018768:	dd2b      	ble.n	80187c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801876a:	9c01      	ldr	r4, [sp, #4]
 801876c:	6905      	ldr	r5, [r0, #16]
 801876e:	46a0      	mov	r8, r4
 8018770:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8018772:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8018776:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 801877a:	45a0      	cmp	r8, r4
 801877c:	f040 814f 	bne.w	8018a1e <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 8018780:	f9b5 1000 	ldrsh.w	r1, [r5]
 8018784:	4551      	cmp	r1, sl
 8018786:	d103      	bne.n	8018790 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8018788:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 801878c:	4291      	cmp	r1, r2
 801878e:	d018      	beq.n	80187c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8018790:	ea5c 010e 	orrs.w	r1, ip, lr
 8018794:	d00f      	beq.n	80187b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8018796:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 801879a:	2900      	cmp	r1, #0
 801879c:	db0b      	blt.n	80187b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801879e:	428b      	cmp	r3, r1
 80187a0:	dd09      	ble.n	80187b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80187a2:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 80187a6:	4299      	cmp	r1, r3
 80187a8:	bf38      	it	cc
 80187aa:	3508      	addcc	r5, #8
 80187ac:	f101 0101 	add.w	r1, r1, #1
 80187b0:	bf38      	it	cc
 80187b2:	6105      	strcc	r5, [r0, #16]
 80187b4:	6081      	str	r1, [r0, #8]
 80187b6:	6903      	ldr	r3, [r0, #16]
 80187b8:	f8a3 a000 	strh.w	sl, [r3]
 80187bc:	805a      	strh	r2, [r3, #2]
 80187be:	809e      	strh	r6, [r3, #4]
 80187c0:	80de      	strh	r6, [r3, #6]
 80187c2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80187c4:	6901      	ldr	r1, [r0, #16]
 80187c6:	441a      	add	r2, r3
 80187c8:	88cc      	ldrh	r4, [r1, #6]
 80187ca:	888b      	ldrh	r3, [r1, #4]
 80187cc:	4323      	orrs	r3, r4
 80187ce:	d010      	beq.n	80187f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80187d0:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80187d4:	2c00      	cmp	r4, #0
 80187d6:	db0c      	blt.n	80187f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80187d8:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80187da:	429c      	cmp	r4, r3
 80187dc:	da09      	bge.n	80187f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80187de:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80187e2:	429c      	cmp	r4, r3
 80187e4:	bf38      	it	cc
 80187e6:	3108      	addcc	r1, #8
 80187e8:	f104 0401 	add.w	r4, r4, #1
 80187ec:	bf38      	it	cc
 80187ee:	6101      	strcc	r1, [r0, #16]
 80187f0:	6084      	str	r4, [r0, #8]
 80187f2:	6903      	ldr	r3, [r0, #16]
 80187f4:	f8a3 a000 	strh.w	sl, [r3]
 80187f8:	805a      	strh	r2, [r3, #2]
 80187fa:	809e      	strh	r6, [r3, #4]
 80187fc:	80de      	strh	r6, [r3, #6]
 80187fe:	9b06      	ldr	r3, [sp, #24]
 8018800:	4293      	cmp	r3, r2
 8018802:	464f      	mov	r7, r9
 8018804:	d19c      	bne.n	8018740 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8018806:	9b01      	ldr	r3, [sp, #4]
 8018808:	6907      	ldr	r7, [r0, #16]
 801880a:	f1c3 0620 	rsb	r6, r3, #32
 801880e:	9b05      	ldr	r3, [sp, #20]
 8018810:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8018814:	9b04      	ldr	r3, [sp, #16]
 8018816:	429e      	cmp	r6, r3
 8018818:	f040 81cc 	bne.w	8018bb4 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 801881c:	f9b7 3000 	ldrsh.w	r3, [r7]
 8018820:	459e      	cmp	lr, r3
 8018822:	d104      	bne.n	801882e <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8018824:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8018828:	429a      	cmp	r2, r3
 801882a:	f43f ae36 	beq.w	801849a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801882e:	88f9      	ldrh	r1, [r7, #6]
 8018830:	88bb      	ldrh	r3, [r7, #4]
 8018832:	430b      	orrs	r3, r1
 8018834:	d010      	beq.n	8018858 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8018836:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 801883a:	2b00      	cmp	r3, #0
 801883c:	db0c      	blt.n	8018858 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801883e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 8018840:	428b      	cmp	r3, r1
 8018842:	da09      	bge.n	8018858 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8018844:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8018848:	428b      	cmp	r3, r1
 801884a:	bf38      	it	cc
 801884c:	3708      	addcc	r7, #8
 801884e:	f103 0301 	add.w	r3, r3, #1
 8018852:	bf38      	it	cc
 8018854:	6107      	strcc	r7, [r0, #16]
 8018856:	6083      	str	r3, [r0, #8]
 8018858:	6903      	ldr	r3, [r0, #16]
 801885a:	f8a3 e000 	strh.w	lr, [r3]
 801885e:	e5ff      	b.n	8018460 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8018860:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 8018862:	9c03      	ldr	r4, [sp, #12]
 8018864:	42a2      	cmp	r2, r4
 8018866:	f6ff ae18 	blt.w	801849a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801886a:	9c06      	ldr	r4, [sp, #24]
 801886c:	42a2      	cmp	r2, r4
 801886e:	bfb8      	it	lt
 8018870:	3201      	addlt	r2, #1
 8018872:	9c08      	ldr	r4, [sp, #32]
 8018874:	bfb8      	it	lt
 8018876:	9206      	strlt	r2, [sp, #24]
 8018878:	f1c3 0220 	rsb	r2, r3, #32
 801887c:	4362      	muls	r2, r4
 801887e:	2401      	movs	r4, #1
 8018880:	940b      	str	r4, [sp, #44]	@ 0x2c
 8018882:	2420      	movs	r4, #32
 8018884:	e6d5      	b.n	8018632 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8018886:	f009 021f 	and.w	r2, r9, #31
 801888a:	ea4f 1861 	mov.w	r8, r1, asr #5
 801888e:	920c      	str	r2, [sp, #48]	@ 0x30
 8018890:	9a01      	ldr	r2, [sp, #4]
 8018892:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8018896:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 801889a:	45b0      	cmp	r8, r6
 801889c:	f001 011f 	and.w	r1, r1, #31
 80188a0:	eba2 0203 	sub.w	r2, r2, r3
 80188a4:	d108      	bne.n	80188b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 80188a6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80188a8:	4419      	add	r1, r3
 80188aa:	4496      	add	lr, r2
 80188ac:	fb02 a101 	mla	r1, r2, r1, sl
 80188b0:	f8a5 e004 	strh.w	lr, [r5, #4]
 80188b4:	80e9      	strh	r1, [r5, #6]
 80188b6:	e6f9      	b.n	80186ac <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80188b8:	2c00      	cmp	r4, #0
 80188ba:	f2c0 80a9 	blt.w	8018a10 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 80188be:	2701      	movs	r7, #1
 80188c0:	f1c1 0c20 	rsb	ip, r1, #32
 80188c4:	970a      	str	r7, [sp, #40]	@ 0x28
 80188c6:	fb02 f20c 	mul.w	r2, r2, ip
 80188ca:	2720      	movs	r7, #32
 80188cc:	9709      	str	r7, [sp, #36]	@ 0x24
 80188ce:	fb92 fcf4 	sdiv	ip, r2, r4
 80188d2:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 80188d4:	fb04 221c 	mls	r2, r4, ip, r2
 80188d8:	2a00      	cmp	r2, #0
 80188da:	bfb8      	it	lt
 80188dc:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 80188e0:	4439      	add	r1, r7
 80188e2:	fb0c a101 	mla	r1, ip, r1, sl
 80188e6:	80e9      	strh	r1, [r5, #6]
 80188e8:	44e6      	add	lr, ip
 80188ea:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80188ec:	f8a5 e004 	strh.w	lr, [r5, #4]
 80188f0:	eb08 0501 	add.w	r5, r8, r1
 80188f4:	6901      	ldr	r1, [r0, #16]
 80188f6:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 80188fa:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 80188fe:	bfb8      	it	lt
 8018900:	1912      	addlt	r2, r2, r4
 8018902:	ea58 070e 	orrs.w	r7, r8, lr
 8018906:	d010      	beq.n	801892a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8018908:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 801890c:	f1be 0f00 	cmp.w	lr, #0
 8018910:	db0b      	blt.n	801892a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8018912:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8018914:	45be      	cmp	lr, r7
 8018916:	da08      	bge.n	801892a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8018918:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 801891c:	45be      	cmp	lr, r7
 801891e:	bf3c      	itt	cc
 8018920:	3108      	addcc	r1, #8
 8018922:	6101      	strcc	r1, [r0, #16]
 8018924:	f10e 0101 	add.w	r1, lr, #1
 8018928:	6081      	str	r1, [r0, #8]
 801892a:	6901      	ldr	r1, [r0, #16]
 801892c:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8018930:	800d      	strh	r5, [r1, #0]
 8018932:	f04f 0e00 	mov.w	lr, #0
 8018936:	42ae      	cmp	r6, r5
 8018938:	f8a1 8002 	strh.w	r8, [r1, #2]
 801893c:	f8a1 e004 	strh.w	lr, [r1, #4]
 8018940:	f8a1 e006 	strh.w	lr, [r1, #6]
 8018944:	4463      	add	r3, ip
 8018946:	d054      	beq.n	80189f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8018948:	9901      	ldr	r1, [sp, #4]
 801894a:	1ac9      	subs	r1, r1, r3
 801894c:	4461      	add	r1, ip
 801894e:	0149      	lsls	r1, r1, #5
 8018950:	fb91 fef4 	sdiv	lr, r1, r4
 8018954:	fb04 111e 	mls	r1, r4, lr, r1
 8018958:	2900      	cmp	r1, #0
 801895a:	bfb8      	it	lt
 801895c:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8018960:	f10e 0701 	add.w	r7, lr, #1
 8018964:	bfb8      	it	lt
 8018966:	1909      	addlt	r1, r1, r4
 8018968:	1b12      	subs	r2, r2, r4
 801896a:	970d      	str	r7, [sp, #52]	@ 0x34
 801896c:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8018970:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8018972:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8018976:	1852      	adds	r2, r2, r1
 8018978:	bf54      	ite	pl
 801897a:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
 801897e:	46f4      	movmi	ip, lr
 8018980:	44e3      	add	fp, ip
 8018982:	f8aa b004 	strh.w	fp, [sl, #4]
 8018986:	f8ba b006 	ldrh.w	fp, [sl, #6]
 801898a:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 801898e:	f8aa b006 	strh.w	fp, [sl, #6]
 8018992:	4463      	add	r3, ip
 8018994:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8018998:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801899c:	f8bc a004 	ldrh.w	sl, [ip, #4]
 80189a0:	bf58      	it	pl
 80189a2:	1b12      	subpl	r2, r2, r4
 80189a4:	443d      	add	r5, r7
 80189a6:	ea5b 070a 	orrs.w	r7, fp, sl
 80189aa:	d014      	beq.n	80189d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80189ac:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 80189b0:	f1ba 0f00 	cmp.w	sl, #0
 80189b4:	db0f      	blt.n	80189d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80189b6:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 80189b8:	45ba      	cmp	sl, r7
 80189ba:	da0c      	bge.n	80189d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80189bc:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 80189c0:	45ba      	cmp	sl, r7
 80189c2:	bf38      	it	cc
 80189c4:	f10c 0c08 	addcc.w	ip, ip, #8
 80189c8:	f10a 0a01 	add.w	sl, sl, #1
 80189cc:	bf38      	it	cc
 80189ce:	f8c0 c010 	strcc.w	ip, [r0, #16]
 80189d2:	f8c0 a008 	str.w	sl, [r0, #8]
 80189d6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80189da:	f04f 0700 	mov.w	r7, #0
 80189de:	42ae      	cmp	r6, r5
 80189e0:	f8ac 5000 	strh.w	r5, [ip]
 80189e4:	f8ac 8002 	strh.w	r8, [ip, #2]
 80189e8:	f8ac 7004 	strh.w	r7, [ip, #4]
 80189ec:	f8ac 7006 	strh.w	r7, [ip, #6]
 80189f0:	d1bc      	bne.n	801896c <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 80189f2:	6904      	ldr	r4, [r0, #16]
 80189f4:	9a01      	ldr	r2, [sp, #4]
 80189f6:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80189f8:	1ad3      	subs	r3, r2, r3
 80189fa:	88a2      	ldrh	r2, [r4, #4]
 80189fc:	441a      	add	r2, r3
 80189fe:	80a2      	strh	r2, [r4, #4]
 8018a00:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8018a02:	3120      	adds	r1, #32
 8018a04:	1a89      	subs	r1, r1, r2
 8018a06:	88e2      	ldrh	r2, [r4, #6]
 8018a08:	fb03 2301 	mla	r3, r3, r1, r2
 8018a0c:	80e3      	strh	r3, [r4, #6]
 8018a0e:	e64d      	b.n	80186ac <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8018a10:	f04f 37ff 	mov.w	r7, #4294967295
 8018a14:	970a      	str	r7, [sp, #40]	@ 0x28
 8018a16:	434a      	muls	r2, r1
 8018a18:	4264      	negs	r4, r4
 8018a1a:	2700      	movs	r7, #0
 8018a1c:	e756      	b.n	80188cc <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8018a1e:	ea4f 1867 	mov.w	r8, r7, asr #5
 8018a22:	f009 031f 	and.w	r3, r9, #31
 8018a26:	45d0      	cmp	r8, sl
 8018a28:	f007 071f 	and.w	r7, r7, #31
 8018a2c:	930f      	str	r3, [sp, #60]	@ 0x3c
 8018a2e:	fa1f fc8c 	uxth.w	ip, ip
 8018a32:	fa1f fe8e 	uxth.w	lr, lr
 8018a36:	d10a      	bne.n	8018a4e <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8018a38:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018a3a:	449c      	add	ip, r3
 8018a3c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8018a3e:	f8a5 c004 	strh.w	ip, [r5, #4]
 8018a42:	441f      	add	r7, r3
 8018a44:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018a46:	fb03 e707 	mla	r7, r3, r7, lr
 8018a4a:	80ef      	strh	r7, [r5, #6]
 8018a4c:	e6b9      	b.n	80187c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8018a4e:	2900      	cmp	r1, #0
 8018a50:	f2c0 80a8 	blt.w	8018ba4 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8018a54:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8018a56:	f1c7 0320 	rsb	r3, r7, #32
 8018a5a:	4363      	muls	r3, r4
 8018a5c:	2401      	movs	r4, #1
 8018a5e:	940d      	str	r4, [sp, #52]	@ 0x34
 8018a60:	2420      	movs	r4, #32
 8018a62:	940c      	str	r4, [sp, #48]	@ 0x30
 8018a64:	fb93 f4f1 	sdiv	r4, r3, r1
 8018a68:	fb01 3b14 	mls	fp, r1, r4, r3
 8018a6c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018a6e:	f1bb 0f00 	cmp.w	fp, #0
 8018a72:	bfb8      	it	lt
 8018a74:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8018a78:	441f      	add	r7, r3
 8018a7a:	fb04 e707 	mla	r7, r4, r7, lr
 8018a7e:	44a4      	add	ip, r4
 8018a80:	f8a5 c004 	strh.w	ip, [r5, #4]
 8018a84:	80ef      	strh	r7, [r5, #6]
 8018a86:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8018a8a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018a8c:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8018a90:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8018a94:	bfb8      	it	lt
 8018a96:	448b      	addlt	fp, r1
 8018a98:	eb08 0503 	add.w	r5, r8, r3
 8018a9c:	ea5e 0307 	orrs.w	r3, lr, r7
 8018aa0:	d011      	beq.n	8018ac6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8018aa2:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8018aa6:	f1be 0f00 	cmp.w	lr, #0
 8018aaa:	db0c      	blt.n	8018ac6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8018aac:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8018aae:	45be      	cmp	lr, r7
 8018ab0:	da09      	bge.n	8018ac6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8018ab2:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8018ab6:	45be      	cmp	lr, r7
 8018ab8:	bf3c      	itt	cc
 8018aba:	f10c 0708 	addcc.w	r7, ip, #8
 8018abe:	6107      	strcc	r7, [r0, #16]
 8018ac0:	f10e 0701 	add.w	r7, lr, #1
 8018ac4:	6087      	str	r7, [r0, #8]
 8018ac6:	6907      	ldr	r7, [r0, #16]
 8018ac8:	b213      	sxth	r3, r2
 8018aca:	9310      	str	r3, [sp, #64]	@ 0x40
 8018acc:	807b      	strh	r3, [r7, #2]
 8018ace:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018ad0:	803d      	strh	r5, [r7, #0]
 8018ad2:	4555      	cmp	r5, sl
 8018ad4:	80be      	strh	r6, [r7, #4]
 8018ad6:	80fe      	strh	r6, [r7, #6]
 8018ad8:	eb04 0c03 	add.w	ip, r4, r3
 8018adc:	d051      	beq.n	8018b82 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8018ade:	9b01      	ldr	r3, [sp, #4]
 8018ae0:	eba3 070c 	sub.w	r7, r3, ip
 8018ae4:	443c      	add	r4, r7
 8018ae6:	0164      	lsls	r4, r4, #5
 8018ae8:	fb94 f8f1 	sdiv	r8, r4, r1
 8018aec:	fb01 4418 	mls	r4, r1, r8, r4
 8018af0:	2c00      	cmp	r4, #0
 8018af2:	bfb8      	it	lt
 8018af4:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8018af8:	ebab 0301 	sub.w	r3, fp, r1
 8018afc:	f108 0701 	add.w	r7, r8, #1
 8018b00:	bfb8      	it	lt
 8018b02:	1864      	addlt	r4, r4, r1
 8018b04:	9309      	str	r3, [sp, #36]	@ 0x24
 8018b06:	9711      	str	r7, [sp, #68]	@ 0x44
 8018b08:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018b0a:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8018b0e:	191b      	adds	r3, r3, r4
 8018b10:	bf58      	it	pl
 8018b12:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
 8018b14:	f8be b004 	ldrh.w	fp, [lr, #4]
 8018b18:	9309      	str	r3, [sp, #36]	@ 0x24
 8018b1a:	bf48      	it	mi
 8018b1c:	4647      	movmi	r7, r8
 8018b1e:	44bb      	add	fp, r7
 8018b20:	f8ae b004 	strh.w	fp, [lr, #4]
 8018b24:	f8be b006 	ldrh.w	fp, [lr, #6]
 8018b28:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8018b2c:	f8ae b006 	strh.w	fp, [lr, #6]
 8018b30:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8018b34:	44bc      	add	ip, r7
 8018b36:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 8018b38:	f8be b006 	ldrh.w	fp, [lr, #6]
 8018b3c:	443d      	add	r5, r7
 8018b3e:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8018b42:	bf5c      	itt	pl
 8018b44:	1a5b      	subpl	r3, r3, r1
 8018b46:	9309      	strpl	r3, [sp, #36]	@ 0x24
 8018b48:	ea5b 0307 	orrs.w	r3, fp, r7
 8018b4c:	d011      	beq.n	8018b72 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8018b4e:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8018b52:	f1bb 0f00 	cmp.w	fp, #0
 8018b56:	db0c      	blt.n	8018b72 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8018b58:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8018b5a:	45bb      	cmp	fp, r7
 8018b5c:	da09      	bge.n	8018b72 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8018b5e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8018b62:	45bb      	cmp	fp, r7
 8018b64:	bf3c      	itt	cc
 8018b66:	f10e 0708 	addcc.w	r7, lr, #8
 8018b6a:	6107      	strcc	r7, [r0, #16]
 8018b6c:	f10b 0701 	add.w	r7, fp, #1
 8018b70:	6087      	str	r7, [r0, #8]
 8018b72:	6907      	ldr	r7, [r0, #16]
 8018b74:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018b76:	803d      	strh	r5, [r7, #0]
 8018b78:	4555      	cmp	r5, sl
 8018b7a:	807b      	strh	r3, [r7, #2]
 8018b7c:	80be      	strh	r6, [r7, #4]
 8018b7e:	80fe      	strh	r6, [r7, #6]
 8018b80:	d1c2      	bne.n	8018b08 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8018b82:	9b01      	ldr	r3, [sp, #4]
 8018b84:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8018b86:	eba3 0c0c 	sub.w	ip, r3, ip
 8018b8a:	6903      	ldr	r3, [r0, #16]
 8018b8c:	8899      	ldrh	r1, [r3, #4]
 8018b8e:	4461      	add	r1, ip
 8018b90:	8099      	strh	r1, [r3, #4]
 8018b92:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8018b94:	3720      	adds	r7, #32
 8018b96:	1a7f      	subs	r7, r7, r1
 8018b98:	88d9      	ldrh	r1, [r3, #6]
 8018b9a:	fb0c 1c07 	mla	ip, ip, r7, r1
 8018b9e:	f8a3 c006 	strh.w	ip, [r3, #6]
 8018ba2:	e60e      	b.n	80187c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8018ba4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018ba6:	f04f 34ff 	mov.w	r4, #4294967295
 8018baa:	940d      	str	r4, [sp, #52]	@ 0x34
 8018bac:	437b      	muls	r3, r7
 8018bae:	4249      	negs	r1, r1
 8018bb0:	2400      	movs	r4, #0
 8018bb2:	e756      	b.n	8018a62 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8018bb4:	9905      	ldr	r1, [sp, #20]
 8018bb6:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8018bba:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8018bbe:	f001 011f 	and.w	r1, r1, #31
 8018bc2:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8018bc6:	9102      	str	r1, [sp, #8]
 8018bc8:	9904      	ldr	r1, [sp, #16]
 8018bca:	45f3      	cmp	fp, lr
 8018bcc:	f009 0c1f 	and.w	ip, r9, #31
 8018bd0:	eba1 0406 	sub.w	r4, r1, r6
 8018bd4:	d108      	bne.n	8018be8 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8018bd6:	9b02      	ldr	r3, [sp, #8]
 8018bd8:	449c      	add	ip, r3
 8018bda:	44a0      	add	r8, r4
 8018bdc:	fb04 a40c 	mla	r4, r4, ip, sl
 8018be0:	f8a7 8004 	strh.w	r8, [r7, #4]
 8018be4:	80fc      	strh	r4, [r7, #6]
 8018be6:	e458      	b.n	801849a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8018be8:	9905      	ldr	r1, [sp, #20]
 8018bea:	ebb1 0109 	subs.w	r1, r1, r9
 8018bee:	bf5b      	ittet	pl
 8018bf0:	f1cc 0520 	rsbpl	r5, ip, #32
 8018bf4:	436c      	mulpl	r4, r5
 8018bf6:	2500      	movmi	r5, #0
 8018bf8:	2520      	movpl	r5, #32
 8018bfa:	bf44      	itt	mi
 8018bfc:	fb04 f40c 	mulmi.w	r4, r4, ip
 8018c00:	4249      	negmi	r1, r1
 8018c02:	9501      	str	r5, [sp, #4]
 8018c04:	9b01      	ldr	r3, [sp, #4]
 8018c06:	fb94 f5f1 	sdiv	r5, r4, r1
 8018c0a:	fb01 4415 	mls	r4, r1, r5, r4
 8018c0e:	bf54      	ite	pl
 8018c10:	f04f 0901 	movpl.w	r9, #1
 8018c14:	f04f 39ff 	movmi.w	r9, #4294967295
 8018c18:	2c00      	cmp	r4, #0
 8018c1a:	bfb8      	it	lt
 8018c1c:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8018c20:	449c      	add	ip, r3
 8018c22:	44a8      	add	r8, r5
 8018c24:	fb05 ac0c 	mla	ip, r5, ip, sl
 8018c28:	f8a7 8004 	strh.w	r8, [r7, #4]
 8018c2c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8018c30:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8018c34:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8018c38:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8018c3c:	bfb8      	it	lt
 8018c3e:	1864      	addlt	r4, r4, r1
 8018c40:	ea58 0707 	orrs.w	r7, r8, r7
 8018c44:	eb0b 0309 	add.w	r3, fp, r9
 8018c48:	d011      	beq.n	8018c6e <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8018c4a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8018c4e:	f1b8 0f00 	cmp.w	r8, #0
 8018c52:	db0c      	blt.n	8018c6e <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8018c54:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8018c56:	45b8      	cmp	r8, r7
 8018c58:	da09      	bge.n	8018c6e <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8018c5a:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8018c5e:	45b8      	cmp	r8, r7
 8018c60:	bf3c      	itt	cc
 8018c62:	f10c 0708 	addcc.w	r7, ip, #8
 8018c66:	6107      	strcc	r7, [r0, #16]
 8018c68:	f108 0701 	add.w	r7, r8, #1
 8018c6c:	6087      	str	r7, [r0, #8]
 8018c6e:	6907      	ldr	r7, [r0, #16]
 8018c70:	f04f 0c00 	mov.w	ip, #0
 8018c74:	b212      	sxth	r2, r2
 8018c76:	459e      	cmp	lr, r3
 8018c78:	803b      	strh	r3, [r7, #0]
 8018c7a:	807a      	strh	r2, [r7, #2]
 8018c7c:	f8a7 c004 	strh.w	ip, [r7, #4]
 8018c80:	f8a7 c006 	strh.w	ip, [r7, #6]
 8018c84:	442e      	add	r6, r5
 8018c86:	d04d      	beq.n	8018d24 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8018c88:	9f04      	ldr	r7, [sp, #16]
 8018c8a:	1bbf      	subs	r7, r7, r6
 8018c8c:	443d      	add	r5, r7
 8018c8e:	016d      	lsls	r5, r5, #5
 8018c90:	fb95 f8f1 	sdiv	r8, r5, r1
 8018c94:	fb01 5518 	mls	r5, r1, r8, r5
 8018c98:	4565      	cmp	r5, ip
 8018c9a:	bfb8      	it	lt
 8018c9c:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8018ca0:	f108 0701 	add.w	r7, r8, #1
 8018ca4:	bfb8      	it	lt
 8018ca6:	186d      	addlt	r5, r5, r1
 8018ca8:	1a64      	subs	r4, r4, r1
 8018caa:	9703      	str	r7, [sp, #12]
 8018cac:	f04f 0a00 	mov.w	sl, #0
 8018cb0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8018cb4:	1964      	adds	r4, r4, r5
 8018cb6:	bf58      	it	pl
 8018cb8:	9f03      	ldrpl	r7, [sp, #12]
 8018cba:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8018cbe:	bf48      	it	mi
 8018cc0:	4647      	movmi	r7, r8
 8018cc2:	44bb      	add	fp, r7
 8018cc4:	f8ac b004 	strh.w	fp, [ip, #4]
 8018cc8:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8018ccc:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8018cd0:	f8ac b006 	strh.w	fp, [ip, #6]
 8018cd4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8018cd8:	443e      	add	r6, r7
 8018cda:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8018cde:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8018ce2:	bf58      	it	pl
 8018ce4:	1a64      	subpl	r4, r4, r1
 8018ce6:	ea5b 0707 	orrs.w	r7, fp, r7
 8018cea:	444b      	add	r3, r9
 8018cec:	d011      	beq.n	8018d12 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8018cee:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8018cf2:	f1bb 0f00 	cmp.w	fp, #0
 8018cf6:	db0c      	blt.n	8018d12 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8018cf8:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8018cfa:	45bb      	cmp	fp, r7
 8018cfc:	da09      	bge.n	8018d12 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8018cfe:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8018d02:	45bb      	cmp	fp, r7
 8018d04:	bf3c      	itt	cc
 8018d06:	f10c 0708 	addcc.w	r7, ip, #8
 8018d0a:	6107      	strcc	r7, [r0, #16]
 8018d0c:	f10b 0701 	add.w	r7, fp, #1
 8018d10:	6087      	str	r7, [r0, #8]
 8018d12:	6907      	ldr	r7, [r0, #16]
 8018d14:	459e      	cmp	lr, r3
 8018d16:	803b      	strh	r3, [r7, #0]
 8018d18:	807a      	strh	r2, [r7, #2]
 8018d1a:	f8a7 a004 	strh.w	sl, [r7, #4]
 8018d1e:	f8a7 a006 	strh.w	sl, [r7, #6]
 8018d22:	d1c5      	bne.n	8018cb0 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8018d24:	9b04      	ldr	r3, [sp, #16]
 8018d26:	1b9e      	subs	r6, r3, r6
 8018d28:	6903      	ldr	r3, [r0, #16]
 8018d2a:	889a      	ldrh	r2, [r3, #4]
 8018d2c:	4432      	add	r2, r6
 8018d2e:	809a      	strh	r2, [r3, #4]
 8018d30:	9a02      	ldr	r2, [sp, #8]
 8018d32:	f102 0c20 	add.w	ip, r2, #32
 8018d36:	9a01      	ldr	r2, [sp, #4]
 8018d38:	ebac 0c02 	sub.w	ip, ip, r2
 8018d3c:	88da      	ldrh	r2, [r3, #6]
 8018d3e:	fb06 260c 	mla	r6, r6, ip, r2
 8018d42:	80de      	strh	r6, [r3, #6]
 8018d44:	f7ff bba9 	b.w	801849a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08018d48 <_ZN8touchgfx7Outline6lineToEii>:
 8018d48:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8018d4a:	079b      	lsls	r3, r3, #30
 8018d4c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8018d4e:	460e      	mov	r6, r1
 8018d50:	4615      	mov	r5, r2
 8018d52:	d511      	bpl.n	8018d78 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8018d54:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8018d58:	ea86 0701 	eor.w	r7, r6, r1
 8018d5c:	ea85 0302 	eor.w	r3, r5, r2
 8018d60:	433b      	orrs	r3, r7
 8018d62:	d009      	beq.n	8018d78 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8018d64:	4633      	mov	r3, r6
 8018d66:	9500      	str	r5, [sp, #0]
 8018d68:	f7ff fb3e 	bl	80183e8 <_ZN8touchgfx7Outline10renderLineEiiii>
 8018d6c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8018d6e:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8018d72:	f043 0301 	orr.w	r3, r3, #1
 8018d76:	6243      	str	r3, [r0, #36]	@ 0x24
 8018d78:	b003      	add	sp, #12
 8018d7a:	bdf0      	pop	{r4, r5, r6, r7, pc}

08018d7c <_ZN8touchgfx7Outline6moveToEii>:
 8018d7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018d7e:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8018d80:	4615      	mov	r5, r2
 8018d82:	079a      	lsls	r2, r3, #30
 8018d84:	4604      	mov	r4, r0
 8018d86:	460e      	mov	r6, r1
 8018d88:	d401      	bmi.n	8018d8e <_ZN8touchgfx7Outline6moveToEii+0x12>
 8018d8a:	f7ff faf9 	bl	8018380 <_ZN8touchgfx7Outline5resetEv>
 8018d8e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8018d90:	07db      	lsls	r3, r3, #31
 8018d92:	d504      	bpl.n	8018d9e <_ZN8touchgfx7Outline6moveToEii+0x22>
 8018d94:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8018d98:	4620      	mov	r0, r4
 8018d9a:	f7ff ffd5 	bl	8018d48 <_ZN8touchgfx7Outline6lineToEii>
 8018d9e:	6923      	ldr	r3, [r4, #16]
 8018da0:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018da4:	1170      	asrs	r0, r6, #5
 8018da6:	4290      	cmp	r0, r2
 8018da8:	ea4f 1165 	mov.w	r1, r5, asr #5
 8018dac:	d103      	bne.n	8018db6 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8018dae:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8018db2:	4291      	cmp	r1, r2
 8018db4:	d01a      	beq.n	8018dec <_ZN8touchgfx7Outline6moveToEii+0x70>
 8018db6:	88df      	ldrh	r7, [r3, #6]
 8018db8:	889a      	ldrh	r2, [r3, #4]
 8018dba:	433a      	orrs	r2, r7
 8018dbc:	d010      	beq.n	8018de0 <_ZN8touchgfx7Outline6moveToEii+0x64>
 8018dbe:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8018dc2:	2a00      	cmp	r2, #0
 8018dc4:	db0c      	blt.n	8018de0 <_ZN8touchgfx7Outline6moveToEii+0x64>
 8018dc6:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8018dc8:	42ba      	cmp	r2, r7
 8018dca:	da09      	bge.n	8018de0 <_ZN8touchgfx7Outline6moveToEii+0x64>
 8018dcc:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8018dd0:	42ba      	cmp	r2, r7
 8018dd2:	bf38      	it	cc
 8018dd4:	3308      	addcc	r3, #8
 8018dd6:	f102 0201 	add.w	r2, r2, #1
 8018dda:	bf38      	it	cc
 8018ddc:	6123      	strcc	r3, [r4, #16]
 8018dde:	60a2      	str	r2, [r4, #8]
 8018de0:	6923      	ldr	r3, [r4, #16]
 8018de2:	2200      	movs	r2, #0
 8018de4:	8018      	strh	r0, [r3, #0]
 8018de6:	8059      	strh	r1, [r3, #2]
 8018de8:	809a      	strh	r2, [r3, #4]
 8018dea:	80da      	strh	r2, [r3, #6]
 8018dec:	6166      	str	r6, [r4, #20]
 8018dee:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8018df2:	6225      	str	r5, [r4, #32]
 8018df4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08018df6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8018df6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018dfa:	b0d0      	sub	sp, #320	@ 0x140
 8018dfc:	466c      	mov	r4, sp
 8018dfe:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8018e02:	4627      	mov	r7, r4
 8018e04:	1a0d      	subs	r5, r1, r0
 8018e06:	2d48      	cmp	r5, #72	@ 0x48
 8018e08:	f100 0308 	add.w	r3, r0, #8
 8018e0c:	f340 80d5 	ble.w	8018fba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8018e10:	112d      	asrs	r5, r5, #4
 8018e12:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8018e16:	f9b0 9000 	ldrsh.w	r9, [r0]
 8018e1a:	6816      	ldr	r6, [r2, #0]
 8018e1c:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8018e20:	6006      	str	r6, [r0, #0]
 8018e22:	6856      	ldr	r6, [r2, #4]
 8018e24:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8018e28:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8018e2c:	6046      	str	r6, [r0, #4]
 8018e2e:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8018e32:	f8a2 8002 	strh.w	r8, [r2, #2]
 8018e36:	f8a2 e004 	strh.w	lr, [r2, #4]
 8018e3a:	f8a2 c006 	strh.w	ip, [r2, #6]
 8018e3e:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8018e42:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8018e46:	4565      	cmp	r5, ip
 8018e48:	f1a1 0208 	sub.w	r2, r1, #8
 8018e4c:	db06      	blt.n	8018e5c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8018e4e:	d119      	bne.n	8018e84 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8018e50:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8018e54:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8018e58:	42ae      	cmp	r6, r5
 8018e5a:	dd13      	ble.n	8018e84 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8018e5c:	460e      	mov	r6, r1
 8018e5e:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8018e62:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8018e66:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8018e6a:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8018e6e:	601d      	str	r5, [r3, #0]
 8018e70:	6875      	ldr	r5, [r6, #4]
 8018e72:	605d      	str	r5, [r3, #4]
 8018e74:	f821 9c08 	strh.w	r9, [r1, #-8]
 8018e78:	f821 cc06 	strh.w	ip, [r1, #-6]
 8018e7c:	f821 8c04 	strh.w	r8, [r1, #-4]
 8018e80:	f821 ec02 	strh.w	lr, [r1, #-2]
 8018e84:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8018e88:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8018e8c:	42ae      	cmp	r6, r5
 8018e8e:	db06      	blt.n	8018e9e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8018e90:	d116      	bne.n	8018ec0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8018e92:	f9b0 c000 	ldrsh.w	ip, [r0]
 8018e96:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8018e9a:	45ac      	cmp	ip, r5
 8018e9c:	da10      	bge.n	8018ec0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8018e9e:	681d      	ldr	r5, [r3, #0]
 8018ea0:	f9b0 8000 	ldrsh.w	r8, [r0]
 8018ea4:	6005      	str	r5, [r0, #0]
 8018ea6:	685d      	ldr	r5, [r3, #4]
 8018ea8:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8018eac:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8018eb0:	f8a0 8008 	strh.w	r8, [r0, #8]
 8018eb4:	6045      	str	r5, [r0, #4]
 8018eb6:	8146      	strh	r6, [r0, #10]
 8018eb8:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8018ebc:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8018ec0:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8018ec4:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8018ec8:	4565      	cmp	r5, ip
 8018eca:	db06      	blt.n	8018eda <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8018ecc:	d119      	bne.n	8018f02 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8018ece:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8018ed2:	f9b0 5000 	ldrsh.w	r5, [r0]
 8018ed6:	42ae      	cmp	r6, r5
 8018ed8:	da13      	bge.n	8018f02 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8018eda:	460e      	mov	r6, r1
 8018edc:	f9b0 9000 	ldrsh.w	r9, [r0]
 8018ee0:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8018ee4:	6005      	str	r5, [r0, #0]
 8018ee6:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8018eea:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 8018eee:	6875      	ldr	r5, [r6, #4]
 8018ef0:	6045      	str	r5, [r0, #4]
 8018ef2:	f821 9c08 	strh.w	r9, [r1, #-8]
 8018ef6:	f821 cc06 	strh.w	ip, [r1, #-6]
 8018efa:	f821 8c04 	strh.w	r8, [r1, #-4]
 8018efe:	f821 ec02 	strh.w	lr, [r1, #-2]
 8018f02:	3308      	adds	r3, #8
 8018f04:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8018f08:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8018f0c:	45e6      	cmp	lr, ip
 8018f0e:	dbf8      	blt.n	8018f02 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8018f10:	d105      	bne.n	8018f1e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8018f12:	f9b3 6000 	ldrsh.w	r6, [r3]
 8018f16:	f9b0 5000 	ldrsh.w	r5, [r0]
 8018f1a:	42ae      	cmp	r6, r5
 8018f1c:	dbf1      	blt.n	8018f02 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8018f1e:	4615      	mov	r5, r2
 8018f20:	3a08      	subs	r2, #8
 8018f22:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8018f26:	45b4      	cmp	ip, r6
 8018f28:	dbf9      	blt.n	8018f1e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8018f2a:	d105      	bne.n	8018f38 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8018f2c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8018f30:	f9b2 6000 	ldrsh.w	r6, [r2]
 8018f34:	45b0      	cmp	r8, r6
 8018f36:	dbf2      	blt.n	8018f1e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8018f38:	4293      	cmp	r3, r2
 8018f3a:	f1a5 0608 	sub.w	r6, r5, #8
 8018f3e:	d816      	bhi.n	8018f6e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8018f40:	f8d6 c000 	ldr.w	ip, [r6]
 8018f44:	f9b3 a000 	ldrsh.w	sl, [r3]
 8018f48:	f8c3 c000 	str.w	ip, [r3]
 8018f4c:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8018f50:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8018f54:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8018f58:	f8c3 c004 	str.w	ip, [r3, #4]
 8018f5c:	f825 ac08 	strh.w	sl, [r5, #-8]
 8018f60:	f825 ec06 	strh.w	lr, [r5, #-6]
 8018f64:	f825 9c04 	strh.w	r9, [r5, #-4]
 8018f68:	f825 8c02 	strh.w	r8, [r5, #-2]
 8018f6c:	e7c9      	b.n	8018f02 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8018f6e:	f8d6 e000 	ldr.w	lr, [r6]
 8018f72:	f9b0 a000 	ldrsh.w	sl, [r0]
 8018f76:	f8c0 e000 	str.w	lr, [r0]
 8018f7a:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 8018f7e:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8018f82:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8018f86:	f8c0 e004 	str.w	lr, [r0, #4]
 8018f8a:	f825 ac08 	strh.w	sl, [r5, #-8]
 8018f8e:	f825 cc06 	strh.w	ip, [r5, #-6]
 8018f92:	f825 9c04 	strh.w	r9, [r5, #-4]
 8018f96:	f825 8c02 	strh.w	r8, [r5, #-2]
 8018f9a:	1acd      	subs	r5, r1, r3
 8018f9c:	1a16      	subs	r6, r2, r0
 8018f9e:	10ed      	asrs	r5, r5, #3
 8018fa0:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8018fa4:	bfb5      	itete	lt
 8018fa6:	e9c4 0200 	strdlt	r0, r2, [r4]
 8018faa:	e9c4 3100 	strdge	r3, r1, [r4]
 8018fae:	460a      	movlt	r2, r1
 8018fb0:	4603      	movge	r3, r0
 8018fb2:	3408      	adds	r4, #8
 8018fb4:	4618      	mov	r0, r3
 8018fb6:	4611      	mov	r1, r2
 8018fb8:	e724      	b.n	8018e04 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8018fba:	4299      	cmp	r1, r3
 8018fbc:	d928      	bls.n	8019010 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 8018fbe:	f1a3 0210 	sub.w	r2, r3, #16
 8018fc2:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8018fc6:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8018fca:	45ac      	cmp	ip, r5
 8018fcc:	db06      	blt.n	8018fdc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 8018fce:	d11d      	bne.n	801900c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8018fd0:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8018fd4:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8018fd8:	42ae      	cmp	r6, r5
 8018fda:	da17      	bge.n	801900c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8018fdc:	4615      	mov	r5, r2
 8018fde:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 8018fe2:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8018fe6:	6116      	str	r6, [r2, #16]
 8018fe8:	686e      	ldr	r6, [r5, #4]
 8018fea:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 8018fee:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 8018ff2:	f8a2 9008 	strh.w	r9, [r2, #8]
 8018ff6:	42a8      	cmp	r0, r5
 8018ff8:	6156      	str	r6, [r2, #20]
 8018ffa:	f8a2 c00a 	strh.w	ip, [r2, #10]
 8018ffe:	f8a2 800c 	strh.w	r8, [r2, #12]
 8019002:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8019006:	f1a2 0208 	sub.w	r2, r2, #8
 801900a:	d1da      	bne.n	8018fc2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 801900c:	3308      	adds	r3, #8
 801900e:	e7d4      	b.n	8018fba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8019010:	42bc      	cmp	r4, r7
 8019012:	d903      	bls.n	801901c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8019014:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8019018:	3c08      	subs	r4, #8
 801901a:	e6f3      	b.n	8018e04 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 801901c:	b050      	add	sp, #320	@ 0x140
 801901e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08019022 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8019022:	b510      	push	{r4, lr}
 8019024:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8019026:	07da      	lsls	r2, r3, #31
 8019028:	4604      	mov	r4, r0
 801902a:	d507      	bpl.n	801903c <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 801902c:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8019030:	f7ff fe8a 	bl	8018d48 <_ZN8touchgfx7Outline6lineToEii>
 8019034:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8019036:	f023 0301 	bic.w	r3, r3, #1
 801903a:	6243      	str	r3, [r0, #36]	@ 0x24
 801903c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 801903e:	079b      	lsls	r3, r3, #30
 8019040:	d521      	bpl.n	8019086 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 8019042:	6923      	ldr	r3, [r4, #16]
 8019044:	88d9      	ldrh	r1, [r3, #6]
 8019046:	889a      	ldrh	r2, [r3, #4]
 8019048:	430a      	orrs	r2, r1
 801904a:	d010      	beq.n	801906e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 801904c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8019050:	2a00      	cmp	r2, #0
 8019052:	db0c      	blt.n	801906e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8019054:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8019056:	428a      	cmp	r2, r1
 8019058:	da09      	bge.n	801906e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 801905a:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 801905e:	4291      	cmp	r1, r2
 8019060:	bf88      	it	hi
 8019062:	3308      	addhi	r3, #8
 8019064:	f102 0201 	add.w	r2, r2, #1
 8019068:	bf88      	it	hi
 801906a:	6123      	strhi	r3, [r4, #16]
 801906c:	60a2      	str	r2, [r4, #8]
 801906e:	68a1      	ldr	r1, [r4, #8]
 8019070:	b129      	cbz	r1, 801907e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8019072:	6863      	ldr	r3, [r4, #4]
 8019074:	4299      	cmp	r1, r3
 8019076:	d802      	bhi.n	801907e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8019078:	68e0      	ldr	r0, [r4, #12]
 801907a:	f7ff febc 	bl	8018df6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801907e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8019080:	f023 0302 	bic.w	r3, r3, #2
 8019084:	6263      	str	r3, [r4, #36]	@ 0x24
 8019086:	68e0      	ldr	r0, [r4, #12]
 8019088:	bd10      	pop	{r4, pc}
	...

0801908c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 801908c:	4b02      	ldr	r3, [pc, #8]	@ (8019098 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 801908e:	6018      	str	r0, [r3, #0]
 8019090:	4b02      	ldr	r3, [pc, #8]	@ (801909c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8019092:	6019      	str	r1, [r3, #0]
 8019094:	4770      	bx	lr
 8019096:	bf00      	nop
 8019098:	2000e414 	.word	0x2000e414
 801909c:	2000e418 	.word	0x2000e418

080190a0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 80190a0:	4a02      	ldr	r2, [pc, #8]	@ (80190ac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 80190a2:	2300      	movs	r3, #0
 80190a4:	6013      	str	r3, [r2, #0]
 80190a6:	4a02      	ldr	r2, [pc, #8]	@ (80190b0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 80190a8:	6013      	str	r3, [r2, #0]
 80190aa:	4770      	bx	lr
 80190ac:	2000e414 	.word	0x2000e414
 80190b0:	2000e418 	.word	0x2000e418

080190b4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 80190b4:	4b01      	ldr	r3, [pc, #4]	@ (80190bc <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 80190b6:	6818      	ldr	r0, [r3, #0]
 80190b8:	4770      	bx	lr
 80190ba:	bf00      	nop
 80190bc:	2000e414 	.word	0x2000e414

080190c0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 80190c0:	4b01      	ldr	r3, [pc, #4]	@ (80190c8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 80190c2:	6818      	ldr	r0, [r3, #0]
 80190c4:	4770      	bx	lr
 80190c6:	bf00      	nop
 80190c8:	2000e418 	.word	0x2000e418

080190cc <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80190cc:	b510      	push	{r4, lr}
 80190ce:	6803      	ldr	r3, [r0, #0]
 80190d0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80190d2:	460c      	mov	r4, r1
 80190d4:	4798      	blx	r3
 80190d6:	1b03      	subs	r3, r0, r4
 80190d8:	4258      	negs	r0, r3
 80190da:	4158      	adcs	r0, r3
 80190dc:	bd10      	pop	{r4, pc}
	...

080190e0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80190e0:	4b01      	ldr	r3, [pc, #4]	@ (80190e8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80190e2:	6019      	str	r1, [r3, #0]
 80190e4:	4770      	bx	lr
 80190e6:	bf00      	nop
 80190e8:	2000e41c 	.word	0x2000e41c

080190ec <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80190ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80190f0:	4696      	mov	lr, r2
 80190f2:	4605      	mov	r5, r0
 80190f4:	4614      	mov	r4, r2
 80190f6:	460e      	mov	r6, r1
 80190f8:	461f      	mov	r7, r3
 80190fa:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80190fe:	b097      	sub	sp, #92	@ 0x5c
 8019100:	f10d 0c1c 	add.w	ip, sp, #28
 8019104:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8019108:	f8de 3000 	ldr.w	r3, [lr]
 801910c:	f8cc 3000 	str.w	r3, [ip]
 8019110:	f104 0e14 	add.w	lr, r4, #20
 8019114:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8019118:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 801911c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8019120:	f8de 3000 	ldr.w	r3, [lr]
 8019124:	f8cc 3000 	str.w	r3, [ip]
 8019128:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 801912c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8019130:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 8019134:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8019138:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 801913c:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 8019140:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 8019144:	f8de 3000 	ldr.w	r3, [lr]
 8019148:	f8cc 3000 	str.w	r3, [ip]
 801914c:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801914e:	682b      	ldr	r3, [r5, #0]
 8019150:	9201      	str	r2, [sp, #4]
 8019152:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8019156:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8019158:	9200      	str	r2, [sp, #0]
 801915a:	f8cd 8008 	str.w	r8, [sp, #8]
 801915e:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 8019162:	aa07      	add	r2, sp, #28
 8019164:	463b      	mov	r3, r7
 8019166:	4631      	mov	r1, r6
 8019168:	4628      	mov	r0, r5
 801916a:	47d8      	blx	fp
 801916c:	46a6      	mov	lr, r4
 801916e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8019172:	f10d 0c1c 	add.w	ip, sp, #28
 8019176:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801917a:	f8de 3000 	ldr.w	r3, [lr]
 801917e:	f8cc 3000 	str.w	r3, [ip]
 8019182:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 8019186:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801918a:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 801918e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8019192:	343c      	adds	r4, #60	@ 0x3c
 8019194:	f8de 3000 	ldr.w	r3, [lr]
 8019198:	f8cc 3000 	str.w	r3, [ip]
 801919c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801919e:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 80191a2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80191a6:	6823      	ldr	r3, [r4, #0]
 80191a8:	f8cc 3000 	str.w	r3, [ip]
 80191ac:	682b      	ldr	r3, [r5, #0]
 80191ae:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80191b2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80191b4:	9201      	str	r2, [sp, #4]
 80191b6:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80191b8:	9200      	str	r2, [sp, #0]
 80191ba:	f8cd 8008 	str.w	r8, [sp, #8]
 80191be:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 80191c0:	aa07      	add	r2, sp, #28
 80191c2:	463b      	mov	r3, r7
 80191c4:	4631      	mov	r1, r6
 80191c6:	4628      	mov	r0, r5
 80191c8:	47a0      	blx	r4
 80191ca:	b017      	add	sp, #92	@ 0x5c
 80191cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080191d0 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80191d0:	2000      	movs	r0, #0
 80191d2:	4770      	bx	lr

080191d4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80191d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80191d8:	b08d      	sub	sp, #52	@ 0x34
 80191da:	4688      	mov	r8, r1
 80191dc:	9916      	ldr	r1, [sp, #88]	@ 0x58
 80191de:	f8d3 c000 	ldr.w	ip, [r3]
 80191e2:	680f      	ldr	r7, [r1, #0]
 80191e4:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 80191e8:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 80191ec:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 80191f0:	edd3 6a07 	vldr	s13, [r3, #28]
 80191f4:	9918      	ldr	r1, [sp, #96]	@ 0x60
 80191f6:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 80191fa:	f9b1 9000 	ldrsh.w	r9, [r1]
 80191fe:	f9ba 1000 	ldrsh.w	r1, [sl]
 8019202:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 8019206:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 801920a:	eba7 070c 	sub.w	r7, r7, ip
 801920e:	42bc      	cmp	r4, r7
 8019210:	bfa8      	it	ge
 8019212:	463c      	movge	r4, r7
 8019214:	ee07 4a90 	vmov	s15, r4
 8019218:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 801921c:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 8019220:	ee25 4a04 	vmul.f32	s8, s10, s8
 8019224:	ee65 4a24 	vmul.f32	s9, s10, s9
 8019228:	ee25 5a27 	vmul.f32	s10, s10, s15
 801922c:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8019230:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8019234:	eb09 0e0c 	add.w	lr, r9, ip
 8019238:	4571      	cmp	r1, lr
 801923a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 801923e:	ee32 1a05 	vadd.f32	s2, s4, s10
 8019242:	ee36 0a84 	vadd.f32	s0, s13, s8
 8019246:	ee61 1a87 	vmul.f32	s3, s3, s14
 801924a:	ee22 2a07 	vmul.f32	s4, s4, s14
 801924e:	f340 808d 	ble.w	801936c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8019252:	eba1 060e 	sub.w	r6, r1, lr
 8019256:	fb96 f5f4 	sdiv	r5, r6, r4
 801925a:	ee07 5a10 	vmov	s14, r5
 801925e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019262:	2d00      	cmp	r5, #0
 8019264:	fb04 6615 	mls	r6, r4, r5, r6
 8019268:	eea7 0a04 	vfma.f32	s0, s14, s8
 801926c:	eee7 0a24 	vfma.f32	s1, s14, s9
 8019270:	eea7 1a05 	vfma.f32	s2, s14, s10
 8019274:	dd13      	ble.n	801929e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8019276:	ee70 6a44 	vsub.f32	s13, s0, s8
 801927a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 801927e:	eef5 6a40 	vcmp.f32	s13, #0.0
 8019282:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019286:	bf18      	it	ne
 8019288:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 801928c:	ee31 2a45 	vsub.f32	s4, s2, s10
 8019290:	bf08      	it	eq
 8019292:	eeb0 7a67 	vmoveq.f32	s14, s15
 8019296:	ee61 1a87 	vmul.f32	s3, s3, s14
 801929a:	ee22 2a07 	vmul.f32	s4, s4, s14
 801929e:	fb05 f204 	mul.w	r2, r5, r4
 80192a2:	1abf      	subs	r7, r7, r2
 80192a4:	4494      	add	ip, r2
 80192a6:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 80192aa:	4411      	add	r1, r2
 80192ac:	eb09 020c 	add.w	r2, r9, ip
 80192b0:	443a      	add	r2, r7
 80192b2:	b209      	sxth	r1, r1
 80192b4:	428a      	cmp	r2, r1
 80192b6:	bfc4      	itt	gt
 80192b8:	eba1 0209 	subgt.w	r2, r1, r9
 80192bc:	eba2 070c 	subgt.w	r7, r2, ip
 80192c0:	2f00      	cmp	r7, #0
 80192c2:	dd50      	ble.n	8019366 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 80192c4:	fb97 f1f4 	sdiv	r1, r7, r4
 80192c8:	fb04 7211 	mls	r2, r4, r1, r7
 80192cc:	b90a      	cbnz	r2, 80192d2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80192ce:	3901      	subs	r1, #1
 80192d0:	4622      	mov	r2, r4
 80192d2:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80192d6:	6840      	ldr	r0, [r0, #4]
 80192d8:	900b      	str	r0, [sp, #44]	@ 0x2c
 80192da:	f8d0 a000 	ldr.w	sl, [r0]
 80192de:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 80192e0:	9008      	str	r0, [sp, #32]
 80192e2:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 80192e6:	9818      	ldr	r0, [sp, #96]	@ 0x60
 80192e8:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 80192ec:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80192f0:	695b      	ldr	r3, [r3, #20]
 80192f2:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80192f4:	445b      	add	r3, fp
 80192f6:	eef0 6a42 	vmov.f32	s13, s4
 80192fa:	ee60 2aa3 	vmul.f32	s5, s1, s7
 80192fe:	ee21 3a23 	vmul.f32	s6, s2, s7
 8019302:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8019306:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801930a:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 801930e:	9307      	str	r3, [sp, #28]
 8019310:	ee17 7a90 	vmov	r7, s15
 8019314:	ee73 7a42 	vsub.f32	s15, s6, s4
 8019318:	eeb0 7a61 	vmov.f32	s14, s3
 801931c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8019320:	ee16 3a90 	vmov	r3, s13
 8019324:	fb97 f7f4 	sdiv	r7, r7, r4
 8019328:	ee17 ca90 	vmov	ip, s15
 801932c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8019330:	fb9c fcf4 	sdiv	ip, ip, r4
 8019334:	fb0c 3306 	mla	r3, ip, r6, r3
 8019338:	9302      	str	r3, [sp, #8]
 801933a:	ee17 3a10 	vmov	r3, s14
 801933e:	44b6      	add	lr, r6
 8019340:	fb04 e505 	mla	r5, r4, r5, lr
 8019344:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8019348:	fb07 3706 	mla	r7, r7, r6, r3
 801934c:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8019350:	e9cd 4700 	strd	r4, r7, [sp]
 8019354:	2900      	cmp	r1, #0
 8019356:	bfcc      	ite	gt
 8019358:	46a1      	movgt	r9, r4
 801935a:	4691      	movle	r9, r2
 801935c:	eba9 0306 	sub.w	r3, r9, r6
 8019360:	f8da 4008 	ldr.w	r4, [sl, #8]
 8019364:	47a0      	blx	r4
 8019366:	b00d      	add	sp, #52	@ 0x34
 8019368:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801936c:	2500      	movs	r5, #0
 801936e:	462e      	mov	r6, r5
 8019370:	e799      	b.n	80192a6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08019374 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8019374:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019378:	b0db      	sub	sp, #364	@ 0x16c
 801937a:	461d      	mov	r5, r3
 801937c:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 8019380:	930a      	str	r3, [sp, #40]	@ 0x28
 8019382:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 8019386:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019388:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 801938c:	9310      	str	r3, [sp, #64]	@ 0x40
 801938e:	6803      	ldr	r3, [r0, #0]
 8019390:	910f      	str	r1, [sp, #60]	@ 0x3c
 8019392:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 8019394:	9009      	str	r0, [sp, #36]	@ 0x24
 8019396:	4614      	mov	r4, r2
 8019398:	4629      	mov	r1, r5
 801939a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 801939e:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 80193a2:	47b8      	blx	r7
 80193a4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80193a6:	6058      	str	r0, [r3, #4]
 80193a8:	2800      	cmp	r0, #0
 80193aa:	f000 83a1 	beq.w	8019af0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80193ae:	682b      	ldr	r3, [r5, #0]
 80193b0:	9314      	str	r3, [sp, #80]	@ 0x50
 80193b2:	686b      	ldr	r3, [r5, #4]
 80193b4:	9315      	str	r3, [sp, #84]	@ 0x54
 80193b6:	4bc4      	ldr	r3, [pc, #784]	@ (80196c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 80193b8:	ed94 7a02 	vldr	s14, [r4, #8]
 80193bc:	7819      	ldrb	r1, [r3, #0]
 80193be:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80193c2:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 80193c6:	2900      	cmp	r1, #0
 80193c8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80193cc:	bf16      	itet	ne
 80193ce:	4619      	movne	r1, r3
 80193d0:	4611      	moveq	r1, r2
 80193d2:	4613      	movne	r3, r2
 80193d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80193d8:	9116      	str	r1, [sp, #88]	@ 0x58
 80193da:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 80193de:	f240 8387 	bls.w	8019af0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80193e2:	ed94 7a07 	vldr	s14, [r4, #28]
 80193e6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80193ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80193ee:	f240 837f 	bls.w	8019af0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80193f2:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 80193f6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80193fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80193fe:	f240 8377 	bls.w	8019af0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019402:	6822      	ldr	r2, [r4, #0]
 8019404:	4bb1      	ldr	r3, [pc, #708]	@ (80196cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8019406:	429a      	cmp	r2, r3
 8019408:	f2c0 8372 	blt.w	8019af0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801940c:	49b0      	ldr	r1, [pc, #704]	@ (80196d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 801940e:	6963      	ldr	r3, [r4, #20]
 8019410:	428a      	cmp	r2, r1
 8019412:	f300 836d 	bgt.w	8019af0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019416:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 801941a:	48ae      	ldr	r0, [pc, #696]	@ (80196d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 801941c:	33ff      	adds	r3, #255	@ 0xff
 801941e:	4283      	cmp	r3, r0
 8019420:	f200 8366 	bhi.w	8019af0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019424:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8019426:	4dac      	ldr	r5, [pc, #688]	@ (80196d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8019428:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 801942c:	33ff      	adds	r3, #255	@ 0xff
 801942e:	42ab      	cmp	r3, r5
 8019430:	f200 835e 	bhi.w	8019af0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019434:	6862      	ldr	r2, [r4, #4]
 8019436:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 801943a:	33ff      	adds	r3, #255	@ 0xff
 801943c:	4283      	cmp	r3, r0
 801943e:	f200 8357 	bhi.w	8019af0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019442:	69a1      	ldr	r1, [r4, #24]
 8019444:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 8019448:	33ff      	adds	r3, #255	@ 0xff
 801944a:	4283      	cmp	r3, r0
 801944c:	f200 8350 	bhi.w	8019af0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019450:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8019452:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 8019456:	30ff      	adds	r0, #255	@ 0xff
 8019458:	42a8      	cmp	r0, r5
 801945a:	f200 8349 	bhi.w	8019af0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801945e:	428a      	cmp	r2, r1
 8019460:	f280 8110 	bge.w	8019684 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8019464:	429a      	cmp	r2, r3
 8019466:	f300 8119 	bgt.w	801969c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 801946a:	4299      	cmp	r1, r3
 801946c:	f280 811d 	bge.w	80196aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8019470:	2502      	movs	r5, #2
 8019472:	2701      	movs	r7, #1
 8019474:	46a9      	mov	r9, r5
 8019476:	46b8      	mov	r8, r7
 8019478:	f04f 0a00 	mov.w	sl, #0
 801947c:	4621      	mov	r1, r4
 801947e:	a849      	add	r0, sp, #292	@ 0x124
 8019480:	f004 fb52 	bl	801db28 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8019484:	4622      	mov	r2, r4
 8019486:	4653      	mov	r3, sl
 8019488:	a949      	add	r1, sp, #292	@ 0x124
 801948a:	f8cd 9000 	str.w	r9, [sp]
 801948e:	a819      	add	r0, sp, #100	@ 0x64
 8019490:	f004 fc7a 	bl	801dd88 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8019494:	4622      	mov	r2, r4
 8019496:	4653      	mov	r3, sl
 8019498:	a949      	add	r1, sp, #292	@ 0x124
 801949a:	f8cd 8000 	str.w	r8, [sp]
 801949e:	a829      	add	r0, sp, #164	@ 0xa4
 80194a0:	f004 fc72 	bl	801dd88 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80194a4:	4643      	mov	r3, r8
 80194a6:	4622      	mov	r2, r4
 80194a8:	a949      	add	r1, sp, #292	@ 0x124
 80194aa:	f8cd 9000 	str.w	r9, [sp]
 80194ae:	a839      	add	r0, sp, #228	@ 0xe4
 80194b0:	f004 fc6a 	bl	801dd88 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80194b4:	42af      	cmp	r7, r5
 80194b6:	bfb5      	itete	lt
 80194b8:	2300      	movlt	r3, #0
 80194ba:	2301      	movge	r3, #1
 80194bc:	930e      	strlt	r3, [sp, #56]	@ 0x38
 80194be:	930e      	strge	r3, [sp, #56]	@ 0x38
 80194c0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80194c2:	e893 0003 	ldmia.w	r3, {r0, r1}
 80194c6:	af12      	add	r7, sp, #72	@ 0x48
 80194c8:	bfb9      	ittee	lt
 80194ca:	ad29      	addlt	r5, sp, #164	@ 0xa4
 80194cc:	ac19      	addlt	r4, sp, #100	@ 0x64
 80194ce:	ad19      	addge	r5, sp, #100	@ 0x64
 80194d0:	ac29      	addge	r4, sp, #164	@ 0xa4
 80194d2:	e887 0003 	stmia.w	r7, {r0, r1}
 80194d6:	b928      	cbnz	r0, 80194e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80194d8:	4b80      	ldr	r3, [pc, #512]	@ (80196dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80194da:	6818      	ldr	r0, [r3, #0]
 80194dc:	6803      	ldr	r3, [r0, #0]
 80194de:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80194e0:	4798      	blx	r3
 80194e2:	6038      	str	r0, [r7, #0]
 80194e4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 80194e6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80194ea:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80194ee:	930c      	str	r3, [sp, #48]	@ 0x30
 80194f0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80194f2:	6963      	ldr	r3, [r4, #20]
 80194f4:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 80194f6:	440b      	add	r3, r1
 80194f8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80194fc:	4408      	add	r0, r1
 80194fe:	b200      	sxth	r0, r0
 8019500:	4283      	cmp	r3, r0
 8019502:	900d      	str	r0, [sp, #52]	@ 0x34
 8019504:	f280 80dd 	bge.w	80196c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8019508:	428b      	cmp	r3, r1
 801950a:	da08      	bge.n	801951e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801950c:	2a00      	cmp	r2, #0
 801950e:	dd06      	ble.n	801951e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8019510:	1acb      	subs	r3, r1, r3
 8019512:	429a      	cmp	r2, r3
 8019514:	f2c0 80e4 	blt.w	80196e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8019518:	2b00      	cmp	r3, #0
 801951a:	f300 80e2 	bgt.w	80196e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 801951e:	6967      	ldr	r7, [r4, #20]
 8019520:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019522:	443b      	add	r3, r7
 8019524:	461f      	mov	r7, r3
 8019526:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019528:	1bdf      	subs	r7, r3, r7
 801952a:	4297      	cmp	r7, r2
 801952c:	bfa8      	it	ge
 801952e:	4617      	movge	r7, r2
 8019530:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 8019534:	2f00      	cmp	r7, #0
 8019536:	f340 8166 	ble.w	8019806 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 801953a:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 801953c:	6829      	ldr	r1, [r5, #0]
 801953e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8019542:	f9bb 3000 	ldrsh.w	r3, [fp]
 8019546:	6820      	ldr	r0, [r4, #0]
 8019548:	4411      	add	r1, r2
 801954a:	4299      	cmp	r1, r3
 801954c:	dd1a      	ble.n	8019584 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 801954e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8019552:	440b      	add	r3, r1
 8019554:	4402      	add	r2, r0
 8019556:	b21b      	sxth	r3, r3
 8019558:	429a      	cmp	r2, r3
 801955a:	dc13      	bgt.n	8019584 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 801955c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801955e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8019560:	681b      	ldr	r3, [r3, #0]
 8019562:	9206      	str	r2, [sp, #24]
 8019564:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019566:	9205      	str	r2, [sp, #20]
 8019568:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801956a:	9500      	str	r5, [sp, #0]
 801956c:	e9cd b203 	strd	fp, r2, [sp, #12]
 8019570:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 8019572:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8019574:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8019578:	a912      	add	r1, sp, #72	@ 0x48
 801957a:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 801957e:	aa49      	add	r2, sp, #292	@ 0x124
 8019580:	4623      	mov	r3, r4
 8019582:	47c8      	blx	r9
 8019584:	e9d4 2300 	ldrd	r2, r3, [r4]
 8019588:	441a      	add	r2, r3
 801958a:	6963      	ldr	r3, [r4, #20]
 801958c:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8019590:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8019594:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 8019598:	68a1      	ldr	r1, [r4, #8]
 801959a:	ed94 6a08 	vldr	s12, [r4, #32]
 801959e:	6022      	str	r2, [r4, #0]
 80195a0:	3301      	adds	r3, #1
 80195a2:	6163      	str	r3, [r4, #20]
 80195a4:	69a3      	ldr	r3, [r4, #24]
 80195a6:	ee37 7a27 	vadd.f32	s14, s14, s15
 80195aa:	3b01      	subs	r3, #1
 80195ac:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 80195b0:	61a3      	str	r3, [r4, #24]
 80195b2:	6923      	ldr	r3, [r4, #16]
 80195b4:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 80195b8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80195bc:	edd4 6a07 	vldr	s13, [r4, #28]
 80195c0:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 80195c4:	440b      	add	r3, r1
 80195c6:	68e1      	ldr	r1, [r4, #12]
 80195c8:	6123      	str	r3, [r4, #16]
 80195ca:	ee76 6a86 	vadd.f32	s13, s13, s12
 80195ce:	428b      	cmp	r3, r1
 80195d0:	edc4 6a07 	vstr	s13, [r4, #28]
 80195d4:	db15      	blt.n	8019602 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80195d6:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 80195da:	ee76 6a26 	vadd.f32	s13, s12, s13
 80195de:	3201      	adds	r2, #1
 80195e0:	edc4 6a07 	vstr	s13, [r4, #28]
 80195e4:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 80195e8:	6022      	str	r2, [r4, #0]
 80195ea:	ee36 7a87 	vadd.f32	s14, s13, s14
 80195ee:	1a5b      	subs	r3, r3, r1
 80195f0:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 80195f4:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 80195f8:	6123      	str	r3, [r4, #16]
 80195fa:	ee77 7a27 	vadd.f32	s15, s14, s15
 80195fe:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8019602:	e9d5 2300 	ldrd	r2, r3, [r5]
 8019606:	441a      	add	r2, r3
 8019608:	696b      	ldr	r3, [r5, #20]
 801960a:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 801960e:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 8019612:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 8019616:	68a9      	ldr	r1, [r5, #8]
 8019618:	ed95 6a08 	vldr	s12, [r5, #32]
 801961c:	602a      	str	r2, [r5, #0]
 801961e:	3301      	adds	r3, #1
 8019620:	616b      	str	r3, [r5, #20]
 8019622:	69ab      	ldr	r3, [r5, #24]
 8019624:	ee37 7a27 	vadd.f32	s14, s14, s15
 8019628:	3b01      	subs	r3, #1
 801962a:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 801962e:	61ab      	str	r3, [r5, #24]
 8019630:	692b      	ldr	r3, [r5, #16]
 8019632:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8019636:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801963a:	edd5 6a07 	vldr	s13, [r5, #28]
 801963e:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8019642:	440b      	add	r3, r1
 8019644:	68e9      	ldr	r1, [r5, #12]
 8019646:	612b      	str	r3, [r5, #16]
 8019648:	ee76 6a86 	vadd.f32	s13, s13, s12
 801964c:	428b      	cmp	r3, r1
 801964e:	edc5 6a07 	vstr	s13, [r5, #28]
 8019652:	db15      	blt.n	8019680 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8019654:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8019658:	ee76 6a26 	vadd.f32	s13, s12, s13
 801965c:	3201      	adds	r2, #1
 801965e:	edc5 6a07 	vstr	s13, [r5, #28]
 8019662:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8019666:	602a      	str	r2, [r5, #0]
 8019668:	ee36 7a87 	vadd.f32	s14, s13, s14
 801966c:	1a5b      	subs	r3, r3, r1
 801966e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8019672:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8019676:	612b      	str	r3, [r5, #16]
 8019678:	ee77 7a27 	vadd.f32	s15, s14, s15
 801967c:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8019680:	3f01      	subs	r7, #1
 8019682:	e757      	b.n	8019534 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8019684:	4299      	cmp	r1, r3
 8019686:	dc13      	bgt.n	80196b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8019688:	429a      	cmp	r2, r3
 801968a:	da14      	bge.n	80196b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 801968c:	2502      	movs	r5, #2
 801968e:	2703      	movs	r7, #3
 8019690:	46a9      	mov	r9, r5
 8019692:	f04f 0800 	mov.w	r8, #0
 8019696:	f04f 0a01 	mov.w	sl, #1
 801969a:	e6ef      	b.n	801947c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 801969c:	2501      	movs	r5, #1
 801969e:	2700      	movs	r7, #0
 80196a0:	46a9      	mov	r9, r5
 80196a2:	46b8      	mov	r8, r7
 80196a4:	f04f 0a02 	mov.w	sl, #2
 80196a8:	e6e8      	b.n	801947c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80196aa:	2501      	movs	r5, #1
 80196ac:	2702      	movs	r7, #2
 80196ae:	e6e1      	b.n	8019474 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 80196b0:	2500      	movs	r5, #0
 80196b2:	2701      	movs	r7, #1
 80196b4:	e7f4      	b.n	80196a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80196b6:	2702      	movs	r7, #2
 80196b8:	2503      	movs	r5, #3
 80196ba:	f04f 0900 	mov.w	r9, #0
 80196be:	46b8      	mov	r8, r7
 80196c0:	e7e9      	b.n	8019696 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80196c2:	4613      	mov	r3, r2
 80196c4:	e728      	b.n	8019518 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80196c6:	bf00      	nop
 80196c8:	2000e404 	.word	0x2000e404
 80196cc:	fffd8f01 	.word	0xfffd8f01
 80196d0:	00027100 	.word	0x00027100
 80196d4:	0004e1ff 	.word	0x0004e1ff
 80196d8:	0004e1fe 	.word	0x0004e1fe
 80196dc:	2000e40c 	.word	0x2000e40c
 80196e0:	4613      	mov	r3, r2
 80196e2:	992b      	ldr	r1, [sp, #172]	@ 0xac
 80196e4:	9111      	str	r1, [sp, #68]	@ 0x44
 80196e6:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 80196ea:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 80196ee:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 80196f0:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 80196f4:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 80196f8:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 80196fc:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 8019700:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 8019704:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 8019708:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 801970c:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 8019710:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 8019714:	469e      	mov	lr, r3
 8019716:	469c      	mov	ip, r3
 8019718:	f04f 0900 	mov.w	r9, #0
 801971c:	f1bc 0f00 	cmp.w	ip, #0
 8019720:	d147      	bne.n	80197b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8019722:	eb03 0c07 	add.w	ip, r3, r7
 8019726:	1ad7      	subs	r7, r2, r3
 8019728:	f1b9 0f00 	cmp.w	r9, #0
 801972c:	d009      	beq.n	8019742 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 801972e:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 8019732:	9029      	str	r0, [sp, #164]	@ 0xa4
 8019734:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 8019738:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 801973c:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 8019740:	912d      	str	r1, [sp, #180]	@ 0xb4
 8019742:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8019744:	9111      	str	r1, [sp, #68]	@ 0x44
 8019746:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 801974a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 801974e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 8019752:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 8019756:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 801975a:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 801975e:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 8019762:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 8019766:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 801976a:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 801976e:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 8019772:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 8019776:	f04f 0800 	mov.w	r8, #0
 801977a:	f1be 0f00 	cmp.w	lr, #0
 801977e:	d031      	beq.n	80197e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8019780:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8019782:	4431      	add	r1, r6
 8019784:	4549      	cmp	r1, r9
 8019786:	4450      	add	r0, sl
 8019788:	ee76 6aa4 	vadd.f32	s13, s13, s9
 801978c:	ee37 7a04 	vadd.f32	s14, s14, s8
 8019790:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8019794:	db08      	blt.n	80197a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8019796:	ee77 7a85 	vadd.f32	s15, s15, s10
 801979a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801979e:	ee37 7a06 	vadd.f32	s14, s14, s12
 80197a2:	3001      	adds	r0, #1
 80197a4:	eba1 0109 	sub.w	r1, r1, r9
 80197a8:	f10e 3eff 	add.w	lr, lr, #4294967295
 80197ac:	f04f 0801 	mov.w	r8, #1
 80197b0:	e7e3      	b.n	801977a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 80197b2:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 80197b4:	4431      	add	r1, r6
 80197b6:	4541      	cmp	r1, r8
 80197b8:	4450      	add	r0, sl
 80197ba:	ee37 7a24 	vadd.f32	s14, s14, s9
 80197be:	ee77 7a84 	vadd.f32	s15, s15, s8
 80197c2:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80197c6:	db08      	blt.n	80197da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80197c8:	ee76 6a85 	vadd.f32	s13, s13, s10
 80197cc:	ee37 7a25 	vadd.f32	s14, s14, s11
 80197d0:	ee77 7a86 	vadd.f32	s15, s15, s12
 80197d4:	3001      	adds	r0, #1
 80197d6:	eba1 0108 	sub.w	r1, r1, r8
 80197da:	f10c 3cff 	add.w	ip, ip, #4294967295
 80197de:	f04f 0901 	mov.w	r9, #1
 80197e2:	e79b      	b.n	801971c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 80197e4:	449c      	add	ip, r3
 80197e6:	1aff      	subs	r7, r7, r3
 80197e8:	f1b8 0f00 	cmp.w	r8, #0
 80197ec:	d009      	beq.n	8019802 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 80197ee:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 80197f2:	9019      	str	r0, [sp, #100]	@ 0x64
 80197f4:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 80197f8:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 80197fc:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 8019800:	911d      	str	r1, [sp, #116]	@ 0x74
 8019802:	1ad2      	subs	r2, r2, r3
 8019804:	e68b      	b.n	801951e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8019806:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019808:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 801980a:	2b00      	cmp	r3, #0
 801980c:	f000 80d1 	beq.w	80199b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8019810:	ad19      	add	r5, sp, #100	@ 0x64
 8019812:	ac39      	add	r4, sp, #228	@ 0xe4
 8019814:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8019816:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801981a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801981e:	930c      	str	r3, [sp, #48]	@ 0x30
 8019820:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8019822:	6963      	ldr	r3, [r4, #20]
 8019824:	440b      	add	r3, r1
 8019826:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 801982a:	4408      	add	r0, r1
 801982c:	b200      	sxth	r0, r0
 801982e:	4283      	cmp	r3, r0
 8019830:	900d      	str	r0, [sp, #52]	@ 0x34
 8019832:	f280 80c1 	bge.w	80199b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8019836:	428b      	cmp	r3, r1
 8019838:	da08      	bge.n	801984c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801983a:	2a00      	cmp	r2, #0
 801983c:	dd06      	ble.n	801984c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801983e:	1acb      	subs	r3, r1, r3
 8019840:	429a      	cmp	r2, r3
 8019842:	f2c0 80bb 	blt.w	80199bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8019846:	2b00      	cmp	r3, #0
 8019848:	f300 80b9 	bgt.w	80199be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 801984c:	6967      	ldr	r7, [r4, #20]
 801984e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019850:	443b      	add	r3, r7
 8019852:	461f      	mov	r7, r3
 8019854:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019856:	1bdf      	subs	r7, r3, r7
 8019858:	4297      	cmp	r7, r2
 801985a:	bfa8      	it	ge
 801985c:	4617      	movge	r7, r2
 801985e:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 8019862:	2f00      	cmp	r7, #0
 8019864:	f340 813c 	ble.w	8019ae0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8019868:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 801986a:	6829      	ldr	r1, [r5, #0]
 801986c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8019870:	f9bb 3000 	ldrsh.w	r3, [fp]
 8019874:	6820      	ldr	r0, [r4, #0]
 8019876:	4411      	add	r1, r2
 8019878:	4299      	cmp	r1, r3
 801987a:	dd1a      	ble.n	80198b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 801987c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8019880:	440b      	add	r3, r1
 8019882:	4402      	add	r2, r0
 8019884:	b21b      	sxth	r3, r3
 8019886:	429a      	cmp	r2, r3
 8019888:	dc13      	bgt.n	80198b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 801988a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801988c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801988e:	681b      	ldr	r3, [r3, #0]
 8019890:	9206      	str	r2, [sp, #24]
 8019892:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019894:	9205      	str	r2, [sp, #20]
 8019896:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8019898:	9500      	str	r5, [sp, #0]
 801989a:	e9cd b203 	strd	fp, r2, [sp, #12]
 801989e:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 80198a0:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80198a2:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80198a6:	a912      	add	r1, sp, #72	@ 0x48
 80198a8:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 80198ac:	aa49      	add	r2, sp, #292	@ 0x124
 80198ae:	4623      	mov	r3, r4
 80198b0:	47c8      	blx	r9
 80198b2:	e9d4 2300 	ldrd	r2, r3, [r4]
 80198b6:	441a      	add	r2, r3
 80198b8:	6963      	ldr	r3, [r4, #20]
 80198ba:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 80198be:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 80198c2:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 80198c6:	68a1      	ldr	r1, [r4, #8]
 80198c8:	ed94 6a08 	vldr	s12, [r4, #32]
 80198cc:	6022      	str	r2, [r4, #0]
 80198ce:	3301      	adds	r3, #1
 80198d0:	6163      	str	r3, [r4, #20]
 80198d2:	69a3      	ldr	r3, [r4, #24]
 80198d4:	ee37 7a27 	vadd.f32	s14, s14, s15
 80198d8:	3b01      	subs	r3, #1
 80198da:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 80198de:	61a3      	str	r3, [r4, #24]
 80198e0:	6923      	ldr	r3, [r4, #16]
 80198e2:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 80198e6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80198ea:	edd4 6a07 	vldr	s13, [r4, #28]
 80198ee:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 80198f2:	440b      	add	r3, r1
 80198f4:	68e1      	ldr	r1, [r4, #12]
 80198f6:	6123      	str	r3, [r4, #16]
 80198f8:	ee76 6a86 	vadd.f32	s13, s13, s12
 80198fc:	428b      	cmp	r3, r1
 80198fe:	edc4 6a07 	vstr	s13, [r4, #28]
 8019902:	db15      	blt.n	8019930 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8019904:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 8019908:	ee76 6a26 	vadd.f32	s13, s12, s13
 801990c:	3201      	adds	r2, #1
 801990e:	edc4 6a07 	vstr	s13, [r4, #28]
 8019912:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 8019916:	6022      	str	r2, [r4, #0]
 8019918:	ee36 7a87 	vadd.f32	s14, s13, s14
 801991c:	1a5b      	subs	r3, r3, r1
 801991e:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8019922:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 8019926:	6123      	str	r3, [r4, #16]
 8019928:	ee77 7a27 	vadd.f32	s15, s14, s15
 801992c:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8019930:	e9d5 2300 	ldrd	r2, r3, [r5]
 8019934:	441a      	add	r2, r3
 8019936:	696b      	ldr	r3, [r5, #20]
 8019938:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 801993c:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 8019940:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 8019944:	68a9      	ldr	r1, [r5, #8]
 8019946:	ed95 6a08 	vldr	s12, [r5, #32]
 801994a:	602a      	str	r2, [r5, #0]
 801994c:	3301      	adds	r3, #1
 801994e:	616b      	str	r3, [r5, #20]
 8019950:	69ab      	ldr	r3, [r5, #24]
 8019952:	ee37 7a27 	vadd.f32	s14, s14, s15
 8019956:	3b01      	subs	r3, #1
 8019958:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 801995c:	61ab      	str	r3, [r5, #24]
 801995e:	692b      	ldr	r3, [r5, #16]
 8019960:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8019964:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8019968:	edd5 6a07 	vldr	s13, [r5, #28]
 801996c:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8019970:	440b      	add	r3, r1
 8019972:	68e9      	ldr	r1, [r5, #12]
 8019974:	612b      	str	r3, [r5, #16]
 8019976:	ee76 6a86 	vadd.f32	s13, s13, s12
 801997a:	428b      	cmp	r3, r1
 801997c:	edc5 6a07 	vstr	s13, [r5, #28]
 8019980:	db15      	blt.n	80199ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8019982:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8019986:	ee76 6a26 	vadd.f32	s13, s12, s13
 801998a:	3201      	adds	r2, #1
 801998c:	edc5 6a07 	vstr	s13, [r5, #28]
 8019990:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8019994:	602a      	str	r2, [r5, #0]
 8019996:	ee36 7a87 	vadd.f32	s14, s13, s14
 801999a:	1a5b      	subs	r3, r3, r1
 801999c:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 80199a0:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 80199a4:	612b      	str	r3, [r5, #16]
 80199a6:	ee77 7a27 	vadd.f32	s15, s14, s15
 80199aa:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 80199ae:	3f01      	subs	r7, #1
 80199b0:	e757      	b.n	8019862 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 80199b2:	ad39      	add	r5, sp, #228	@ 0xe4
 80199b4:	ac19      	add	r4, sp, #100	@ 0x64
 80199b6:	e72d      	b.n	8019814 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 80199b8:	4613      	mov	r3, r2
 80199ba:	e744      	b.n	8019846 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 80199bc:	4613      	mov	r3, r2
 80199be:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 80199c2:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 80199c4:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 80199c8:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 80199cc:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 80199d0:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 80199d4:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 80199d8:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 80199dc:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 80199e0:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 80199e2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 80199e6:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 80199ea:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 80199ee:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 80199f2:	960e      	str	r6, [sp, #56]	@ 0x38
 80199f4:	469e      	mov	lr, r3
 80199f6:	461f      	mov	r7, r3
 80199f8:	f04f 0900 	mov.w	r9, #0
 80199fc:	2f00      	cmp	r7, #0
 80199fe:	d146      	bne.n	8019a8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8019a00:	449c      	add	ip, r3
 8019a02:	1ad7      	subs	r7, r2, r3
 8019a04:	f1b9 0f00 	cmp.w	r9, #0
 8019a08:	d009      	beq.n	8019a1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8019a0a:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 8019a0e:	9039      	str	r0, [sp, #228]	@ 0xe4
 8019a10:	913d      	str	r1, [sp, #244]	@ 0xf4
 8019a12:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 8019a16:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 8019a1a:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 8019a1e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8019a20:	910e      	str	r1, [sp, #56]	@ 0x38
 8019a22:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 8019a26:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 8019a2a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 8019a2e:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 8019a32:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 8019a36:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 8019a3a:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 8019a3e:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 8019a42:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 8019a46:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 8019a4a:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 8019a4e:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 8019a52:	f04f 0800 	mov.w	r8, #0
 8019a56:	f1be 0f00 	cmp.w	lr, #0
 8019a5a:	d030      	beq.n	8019abe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8019a5c:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8019a5e:	4431      	add	r1, r6
 8019a60:	4549      	cmp	r1, r9
 8019a62:	4450      	add	r0, sl
 8019a64:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8019a68:	ee37 7a04 	vadd.f32	s14, s14, s8
 8019a6c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8019a70:	db08      	blt.n	8019a84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8019a72:	ee77 7a85 	vadd.f32	s15, s15, s10
 8019a76:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8019a7a:	ee37 7a06 	vadd.f32	s14, s14, s12
 8019a7e:	3001      	adds	r0, #1
 8019a80:	eba1 0109 	sub.w	r1, r1, r9
 8019a84:	f10e 3eff 	add.w	lr, lr, #4294967295
 8019a88:	f04f 0801 	mov.w	r8, #1
 8019a8c:	e7e3      	b.n	8019a56 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8019a8e:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8019a90:	4431      	add	r1, r6
 8019a92:	4541      	cmp	r1, r8
 8019a94:	4450      	add	r0, sl
 8019a96:	ee37 7a24 	vadd.f32	s14, s14, s9
 8019a9a:	ee77 7a84 	vadd.f32	s15, s15, s8
 8019a9e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8019aa2:	db08      	blt.n	8019ab6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8019aa4:	ee76 6a85 	vadd.f32	s13, s13, s10
 8019aa8:	ee37 7a25 	vadd.f32	s14, s14, s11
 8019aac:	ee77 7a86 	vadd.f32	s15, s15, s12
 8019ab0:	3001      	adds	r0, #1
 8019ab2:	eba1 0108 	sub.w	r1, r1, r8
 8019ab6:	3f01      	subs	r7, #1
 8019ab8:	f04f 0901 	mov.w	r9, #1
 8019abc:	e79e      	b.n	80199fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8019abe:	449c      	add	ip, r3
 8019ac0:	1aff      	subs	r7, r7, r3
 8019ac2:	f1b8 0f00 	cmp.w	r8, #0
 8019ac6:	d009      	beq.n	8019adc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8019ac8:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 8019acc:	9019      	str	r0, [sp, #100]	@ 0x64
 8019ace:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 8019ad2:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 8019ad6:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 8019ada:	911d      	str	r1, [sp, #116]	@ 0x74
 8019adc:	1ad2      	subs	r2, r2, r3
 8019ade:	e6b5      	b.n	801984c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8019ae0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019ae2:	681b      	ldr	r3, [r3, #0]
 8019ae4:	b923      	cbnz	r3, 8019af0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019ae6:	4b04      	ldr	r3, [pc, #16]	@ (8019af8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8019ae8:	6818      	ldr	r0, [r3, #0]
 8019aea:	6803      	ldr	r3, [r0, #0]
 8019aec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019aee:	4798      	blx	r3
 8019af0:	b05b      	add	sp, #364	@ 0x16c
 8019af2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019af6:	bf00      	nop
 8019af8:	2000e40c 	.word	0x2000e40c

08019afc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8019afc:	b570      	push	{r4, r5, r6, lr}
 8019afe:	4604      	mov	r4, r0
 8019b00:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8019b04:	9805      	ldr	r0, [sp, #20]
 8019b06:	6061      	str	r1, [r4, #4]
 8019b08:	2500      	movs	r5, #0
 8019b0a:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8019b0e:	8263      	strh	r3, [r4, #18]
 8019b10:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8019b14:	8025      	strh	r5, [r4, #0]
 8019b16:	7221      	strb	r1, [r4, #8]
 8019b18:	7266      	strb	r6, [r4, #9]
 8019b1a:	60e0      	str	r0, [r4, #12]
 8019b1c:	8222      	strh	r2, [r4, #16]
 8019b1e:	82a3      	strh	r3, [r4, #20]
 8019b20:	82e5      	strh	r5, [r4, #22]
 8019b22:	8325      	strh	r5, [r4, #24]
 8019b24:	8365      	strh	r5, [r4, #26]
 8019b26:	83a5      	strh	r5, [r4, #28]
 8019b28:	83e5      	strh	r5, [r4, #30]
 8019b2a:	8425      	strh	r5, [r4, #32]
 8019b2c:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 8019b30:	b32e      	cbz	r6, 8019b7e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8019b32:	6803      	ldr	r3, [r0, #0]
 8019b34:	695b      	ldr	r3, [r3, #20]
 8019b36:	4798      	blx	r3
 8019b38:	4606      	mov	r6, r0
 8019b3a:	b300      	cbz	r0, 8019b7e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8019b3c:	68e0      	ldr	r0, [r4, #12]
 8019b3e:	6803      	ldr	r3, [r0, #0]
 8019b40:	4631      	mov	r1, r6
 8019b42:	68db      	ldr	r3, [r3, #12]
 8019b44:	4798      	blx	r3
 8019b46:	4605      	mov	r5, r0
 8019b48:	b1c8      	cbz	r0, 8019b7e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8019b4a:	7b43      	ldrb	r3, [r0, #13]
 8019b4c:	7a82      	ldrb	r2, [r0, #10]
 8019b4e:	005b      	lsls	r3, r3, #1
 8019b50:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8019b54:	4313      	orrs	r3, r2
 8019b56:	8423      	strh	r3, [r4, #32]
 8019b58:	7a63      	ldrb	r3, [r4, #9]
 8019b5a:	2b06      	cmp	r3, #6
 8019b5c:	d10f      	bne.n	8019b7e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8019b5e:	68e0      	ldr	r0, [r4, #12]
 8019b60:	6803      	ldr	r3, [r0, #0]
 8019b62:	462a      	mov	r2, r5
 8019b64:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8019b66:	4631      	mov	r1, r6
 8019b68:	4798      	blx	r3
 8019b6a:	7b6b      	ldrb	r3, [r5, #13]
 8019b6c:	005b      	lsls	r3, r3, #1
 8019b6e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8019b72:	7aab      	ldrb	r3, [r5, #10]
 8019b74:	4313      	orrs	r3, r2
 8019b76:	4418      	add	r0, r3
 8019b78:	8c23      	ldrh	r3, [r4, #32]
 8019b7a:	4418      	add	r0, r3
 8019b7c:	8420      	strh	r0, [r4, #32]
 8019b7e:	4620      	mov	r0, r4
 8019b80:	bd70      	pop	{r4, r5, r6, pc}

08019b82 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8019b82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b86:	2400      	movs	r4, #0
 8019b88:	b085      	sub	sp, #20
 8019b8a:	4681      	mov	r9, r0
 8019b8c:	4688      	mov	r8, r1
 8019b8e:	4692      	mov	sl, r2
 8019b90:	469b      	mov	fp, r3
 8019b92:	4627      	mov	r7, r4
 8019b94:	4625      	mov	r5, r4
 8019b96:	4626      	mov	r6, r4
 8019b98:	4554      	cmp	r4, sl
 8019b9a:	da2a      	bge.n	8019bf2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8019b9c:	2300      	movs	r3, #0
 8019b9e:	9303      	str	r3, [sp, #12]
 8019ba0:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8019ba4:	429d      	cmp	r5, r3
 8019ba6:	d004      	beq.n	8019bb2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8019ba8:	f242 030b 	movw	r3, #8203	@ 0x200b
 8019bac:	429d      	cmp	r5, r3
 8019bae:	bf18      	it	ne
 8019bb0:	462f      	movne	r7, r5
 8019bb2:	ab03      	add	r3, sp, #12
 8019bb4:	4642      	mov	r2, r8
 8019bb6:	4659      	mov	r1, fp
 8019bb8:	4648      	mov	r0, r9
 8019bba:	f003 fdcb 	bl	801d754 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8019bbe:	4605      	mov	r5, r0
 8019bc0:	b1b8      	cbz	r0, 8019bf2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8019bc2:	280a      	cmp	r0, #10
 8019bc4:	d015      	beq.n	8019bf2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8019bc6:	9a03      	ldr	r2, [sp, #12]
 8019bc8:	b18a      	cbz	r2, 8019bee <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8019bca:	7b50      	ldrb	r0, [r2, #13]
 8019bcc:	7a93      	ldrb	r3, [r2, #10]
 8019bce:	8895      	ldrh	r5, [r2, #4]
 8019bd0:	0040      	lsls	r0, r0, #1
 8019bd2:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8019bd6:	4303      	orrs	r3, r0
 8019bd8:	9301      	str	r3, [sp, #4]
 8019bda:	f8d8 3000 	ldr.w	r3, [r8]
 8019bde:	4639      	mov	r1, r7
 8019be0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8019be2:	4640      	mov	r0, r8
 8019be4:	4798      	blx	r3
 8019be6:	9b01      	ldr	r3, [sp, #4]
 8019be8:	4418      	add	r0, r3
 8019bea:	4406      	add	r6, r0
 8019bec:	b2b6      	uxth	r6, r6
 8019bee:	3401      	adds	r4, #1
 8019bf0:	e7d2      	b.n	8019b98 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8019bf2:	4630      	mov	r0, r6
 8019bf4:	b005      	add	sp, #20
 8019bf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019bfa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8019bfa:	2a02      	cmp	r2, #2
 8019bfc:	b530      	push	{r4, r5, lr}
 8019bfe:	d011      	beq.n	8019c24 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8019c00:	2a03      	cmp	r2, #3
 8019c02:	d01c      	beq.n	8019c3e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8019c04:	2a01      	cmp	r2, #1
 8019c06:	d10c      	bne.n	8019c22 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8019c08:	888b      	ldrh	r3, [r1, #4]
 8019c0a:	8801      	ldrh	r1, [r0, #0]
 8019c0c:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8019c10:	8844      	ldrh	r4, [r0, #2]
 8019c12:	8004      	strh	r4, [r0, #0]
 8019c14:	1a5b      	subs	r3, r3, r1
 8019c16:	1a9b      	subs	r3, r3, r2
 8019c18:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8019c1c:	8043      	strh	r3, [r0, #2]
 8019c1e:	8081      	strh	r1, [r0, #4]
 8019c20:	80c2      	strh	r2, [r0, #6]
 8019c22:	bd30      	pop	{r4, r5, pc}
 8019c24:	88cb      	ldrh	r3, [r1, #6]
 8019c26:	8842      	ldrh	r2, [r0, #2]
 8019c28:	1a9b      	subs	r3, r3, r2
 8019c2a:	88c2      	ldrh	r2, [r0, #6]
 8019c2c:	1a9b      	subs	r3, r3, r2
 8019c2e:	888a      	ldrh	r2, [r1, #4]
 8019c30:	8801      	ldrh	r1, [r0, #0]
 8019c32:	8043      	strh	r3, [r0, #2]
 8019c34:	1a52      	subs	r2, r2, r1
 8019c36:	8881      	ldrh	r1, [r0, #4]
 8019c38:	1a52      	subs	r2, r2, r1
 8019c3a:	8002      	strh	r2, [r0, #0]
 8019c3c:	e7f1      	b.n	8019c22 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8019c3e:	88cb      	ldrh	r3, [r1, #6]
 8019c40:	8841      	ldrh	r1, [r0, #2]
 8019c42:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8019c46:	f9b0 5000 	ldrsh.w	r5, [r0]
 8019c4a:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8019c4e:	8045      	strh	r5, [r0, #2]
 8019c50:	1a5b      	subs	r3, r3, r1
 8019c52:	1a9b      	subs	r3, r3, r2
 8019c54:	8003      	strh	r3, [r0, #0]
 8019c56:	8082      	strh	r2, [r0, #4]
 8019c58:	80c4      	strh	r4, [r0, #6]
 8019c5a:	e7e2      	b.n	8019c22 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08019c5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8019c5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c60:	b09f      	sub	sp, #124	@ 0x7c
 8019c62:	920f      	str	r2, [sp, #60]	@ 0x3c
 8019c64:	9312      	str	r3, [sp, #72]	@ 0x48
 8019c66:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8019c68:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8019c6a:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8019c6c:	8812      	ldrh	r2, [r2, #0]
 8019c6e:	889b      	ldrh	r3, [r3, #4]
 8019c70:	900e      	str	r0, [sp, #56]	@ 0x38
 8019c72:	4413      	add	r3, r2
 8019c74:	6828      	ldr	r0, [r5, #0]
 8019c76:	9117      	str	r1, [sp, #92]	@ 0x5c
 8019c78:	b21b      	sxth	r3, r3
 8019c7a:	9311      	str	r3, [sp, #68]	@ 0x44
 8019c7c:	6803      	ldr	r3, [r0, #0]
 8019c7e:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 8019c82:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8019c84:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 8019c88:	4798      	blx	r3
 8019c8a:	682b      	ldr	r3, [r5, #0]
 8019c8c:	9013      	str	r0, [sp, #76]	@ 0x4c
 8019c8e:	7b1a      	ldrb	r2, [r3, #12]
 8019c90:	7adb      	ldrb	r3, [r3, #11]
 8019c92:	9215      	str	r2, [sp, #84]	@ 0x54
 8019c94:	9316      	str	r3, [sp, #88]	@ 0x58
 8019c96:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 8019c9a:	2c00      	cmp	r4, #0
 8019c9c:	d067      	beq.n	8019d6e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8019c9e:	7c2b      	ldrb	r3, [r5, #16]
 8019ca0:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 8019ca2:	2b06      	cmp	r3, #6
 8019ca4:	bf14      	ite	ne
 8019ca6:	2301      	movne	r3, #1
 8019ca8:	2302      	moveq	r3, #2
 8019caa:	4413      	add	r3, r2
 8019cac:	f04f 0900 	mov.w	r9, #0
 8019cb0:	9310      	str	r3, [sp, #64]	@ 0x40
 8019cb2:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 8019cb6:	464c      	mov	r4, r9
 8019cb8:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 8019cbc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019cbe:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8019cc0:	4293      	cmp	r3, r2
 8019cc2:	f280 808b 	bge.w	8019ddc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 8019cc6:	2300      	movs	r3, #0
 8019cc8:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 8019ccc:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 8019cd0:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8019cd4:	429c      	cmp	r4, r3
 8019cd6:	d006      	beq.n	8019ce6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 8019cd8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019cda:	f242 020b 	movw	r2, #8203	@ 0x200b
 8019cde:	4294      	cmp	r4, r2
 8019ce0:	bf18      	it	ne
 8019ce2:	4623      	movne	r3, r4
 8019ce4:	930c      	str	r3, [sp, #48]	@ 0x30
 8019ce6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019ce8:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 8019cea:	682a      	ldr	r2, [r5, #0]
 8019cec:	428b      	cmp	r3, r1
 8019cee:	db40      	blt.n	8019d72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8019cf0:	6813      	ldr	r3, [r2, #0]
 8019cf2:	4610      	mov	r0, r2
 8019cf4:	695b      	ldr	r3, [r3, #20]
 8019cf6:	4798      	blx	r3
 8019cf8:	4604      	mov	r4, r0
 8019cfa:	6828      	ldr	r0, [r5, #0]
 8019cfc:	6803      	ldr	r3, [r0, #0]
 8019cfe:	aa1d      	add	r2, sp, #116	@ 0x74
 8019d00:	689f      	ldr	r7, [r3, #8]
 8019d02:	4621      	mov	r1, r4
 8019d04:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 8019d08:	47b8      	blx	r7
 8019d0a:	901c      	str	r0, [sp, #112]	@ 0x70
 8019d0c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8019d10:	429c      	cmp	r4, r3
 8019d12:	f000 80ea 	beq.w	8019eea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8019d16:	f242 030b 	movw	r3, #8203	@ 0x200b
 8019d1a:	429c      	cmp	r4, r3
 8019d1c:	f000 80e5 	beq.w	8019eea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8019d20:	2c00      	cmp	r4, #0
 8019d22:	f000 810c 	beq.w	8019f3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 8019d26:	2c0a      	cmp	r4, #10
 8019d28:	d05e      	beq.n	8019de8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8019d2a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8019d2c:	b36a      	cbz	r2, 8019d8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8019d2e:	8894      	ldrh	r4, [r2, #4]
 8019d30:	f1bb 0f00 	cmp.w	fp, #0
 8019d34:	d03a      	beq.n	8019dac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 8019d36:	f892 900d 	ldrb.w	r9, [r2, #13]
 8019d3a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8019d3e:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 8019d42:	f892 900a 	ldrb.w	r9, [r2, #10]
 8019d46:	f1bb 0f01 	cmp.w	fp, #1
 8019d4a:	ea49 0903 	orr.w	r9, r9, r3
 8019d4e:	d133      	bne.n	8019db8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 8019d50:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019d52:	eba6 0609 	sub.w	r6, r6, r9
 8019d56:	2b00      	cmp	r3, #0
 8019d58:	d14d      	bne.n	8019df6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 8019d5a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8019d5c:	eb09 0306 	add.w	r3, r9, r6
 8019d60:	4413      	add	r3, r2
 8019d62:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8019d64:	f9b2 2000 	ldrsh.w	r2, [r2]
 8019d68:	4293      	cmp	r3, r2
 8019d6a:	da4e      	bge.n	8019e0a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 8019d6c:	e036      	b.n	8019ddc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 8019d6e:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 8019d70:	e79c      	b.n	8019cac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 8019d72:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 8019d76:	9301      	str	r3, [sp, #4]
 8019d78:	ab1d      	add	r3, sp, #116	@ 0x74
 8019d7a:	9300      	str	r3, [sp, #0]
 8019d7c:	4659      	mov	r1, fp
 8019d7e:	ab1c      	add	r3, sp, #112	@ 0x70
 8019d80:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 8019d82:	f003 fd30 	bl	801d7e6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8019d86:	4604      	mov	r4, r0
 8019d88:	e7c0      	b.n	8019d0c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8019d8a:	6828      	ldr	r0, [r5, #0]
 8019d8c:	6803      	ldr	r3, [r0, #0]
 8019d8e:	691b      	ldr	r3, [r3, #16]
 8019d90:	4798      	blx	r3
 8019d92:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8019d96:	4298      	cmp	r0, r3
 8019d98:	f000 80a7 	beq.w	8019eea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8019d9c:	f242 030b 	movw	r3, #8203	@ 0x200b
 8019da0:	4298      	cmp	r0, r3
 8019da2:	f000 80a2 	beq.w	8019eea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8019da6:	f1bb 0f00 	cmp.w	fp, #0
 8019daa:	d100      	bne.n	8019dae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8019dac:	444e      	add	r6, r9
 8019dae:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8019db0:	2a00      	cmp	r2, #0
 8019db2:	d1c0      	bne.n	8019d36 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8019db4:	4691      	mov	r9, r2
 8019db6:	e098      	b.n	8019eea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8019db8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019dba:	2b00      	cmp	r3, #0
 8019dbc:	f000 80c1 	beq.w	8019f42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e6>
 8019dc0:	f1bb 0f00 	cmp.w	fp, #0
 8019dc4:	d117      	bne.n	8019df6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 8019dc6:	6828      	ldr	r0, [r5, #0]
 8019dc8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8019dca:	6803      	ldr	r3, [r0, #0]
 8019dcc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8019dce:	4798      	blx	r3
 8019dd0:	4406      	add	r6, r0
 8019dd2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8019dd4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8019dd6:	1af3      	subs	r3, r6, r3
 8019dd8:	4293      	cmp	r3, r2
 8019dda:	dd16      	ble.n	8019e0a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 8019ddc:	2c00      	cmp	r4, #0
 8019dde:	f000 80ae 	beq.w	8019f3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 8019de2:	2c0a      	cmp	r4, #10
 8019de4:	f040 809c 	bne.w	8019f20 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c4>
 8019de8:	240a      	movs	r4, #10
 8019dea:	fab4 f084 	clz	r0, r4
 8019dee:	0940      	lsrs	r0, r0, #5
 8019df0:	b01f      	add	sp, #124	@ 0x7c
 8019df2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019df6:	6828      	ldr	r0, [r5, #0]
 8019df8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8019dfa:	6803      	ldr	r3, [r0, #0]
 8019dfc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8019dfe:	4798      	blx	r3
 8019e00:	f1bb 0f01 	cmp.w	fp, #1
 8019e04:	eba6 0600 	sub.w	r6, r6, r0
 8019e08:	d0a7      	beq.n	8019d5a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8019e0a:	981c      	ldr	r0, [sp, #112]	@ 0x70
 8019e0c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8019e0e:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8019e12:	f9b3 8000 	ldrsh.w	r8, [r3]
 8019e16:	7b43      	ldrb	r3, [r0, #13]
 8019e18:	015b      	lsls	r3, r3, #5
 8019e1a:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8019e1e:	7983      	ldrb	r3, [r0, #6]
 8019e20:	4431      	add	r1, r6
 8019e22:	4313      	orrs	r3, r2
 8019e24:	440b      	add	r3, r1
 8019e26:	4543      	cmp	r3, r8
 8019e28:	db5f      	blt.n	8019eea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8019e2a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8019e2c:	4299      	cmp	r1, r3
 8019e2e:	da5c      	bge.n	8019eea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8019e30:	6828      	ldr	r0, [r5, #0]
 8019e32:	6803      	ldr	r3, [r0, #0]
 8019e34:	45b0      	cmp	r8, r6
 8019e36:	bfc8      	it	gt
 8019e38:	eba8 0806 	subgt.w	r8, r8, r6
 8019e3c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019e3e:	bfcc      	ite	gt
 8019e40:	fa1f f888 	uxthgt.w	r8, r8
 8019e44:	f04f 0800 	movle.w	r8, #0
 8019e48:	4798      	blx	r3
 8019e4a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8019e4c:	7b53      	ldrb	r3, [r2, #13]
 8019e4e:	00d9      	lsls	r1, r3, #3
 8019e50:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 8019e54:	7a11      	ldrb	r1, [r2, #8]
 8019e56:	4339      	orrs	r1, r7
 8019e58:	065f      	lsls	r7, r3, #25
 8019e5a:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8019e5c:	bf44      	itt	mi
 8019e5e:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 8019e62:	b209      	sxthmi	r1, r1
 8019e64:	19c7      	adds	r7, r0, r7
 8019e66:	1a7f      	subs	r7, r7, r1
 8019e68:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 8019e6a:	b2bf      	uxth	r7, r7
 8019e6c:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8019e70:	fa0f fa87 	sxth.w	sl, r7
 8019e74:	4551      	cmp	r1, sl
 8019e76:	dd3c      	ble.n	8019ef2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 8019e78:	011b      	lsls	r3, r3, #4
 8019e7a:	79d0      	ldrb	r0, [r2, #7]
 8019e7c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8019e80:	4303      	orrs	r3, r0
 8019e82:	449a      	add	sl, r3
 8019e84:	4551      	cmp	r1, sl
 8019e86:	dc30      	bgt.n	8019eea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8019e88:	1bcf      	subs	r7, r1, r7
 8019e8a:	b23f      	sxth	r7, r7
 8019e8c:	468a      	mov	sl, r1
 8019e8e:	9219      	str	r2, [sp, #100]	@ 0x64
 8019e90:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019e92:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8019e94:	6828      	ldr	r0, [r5, #0]
 8019e96:	2a00      	cmp	r2, #0
 8019e98:	d12d      	bne.n	8019ef6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 8019e9a:	9318      	str	r3, [sp, #96]	@ 0x60
 8019e9c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019e9e:	6819      	ldr	r1, [r3, #0]
 8019ea0:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 8019ea2:	6801      	ldr	r1, [r0, #0]
 8019ea4:	9314      	str	r3, [sp, #80]	@ 0x50
 8019ea6:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 8019ea8:	4788      	blx	r1
 8019eaa:	79a9      	ldrb	r1, [r5, #6]
 8019eac:	910b      	str	r1, [sp, #44]	@ 0x2c
 8019eae:	7ba9      	ldrb	r1, [r5, #14]
 8019eb0:	910a      	str	r1, [sp, #40]	@ 0x28
 8019eb2:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 8019eb6:	9109      	str	r1, [sp, #36]	@ 0x24
 8019eb8:	68a9      	ldr	r1, [r5, #8]
 8019eba:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8019ebc:	9306      	str	r3, [sp, #24]
 8019ebe:	b2bf      	uxth	r7, r7
 8019ec0:	e9cd 8702 	strd	r8, r7, [sp, #8]
 8019ec4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8019ec6:	9304      	str	r3, [sp, #16]
 8019ec8:	44b0      	add	r8, r6
 8019eca:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8019ece:	fa0f f388 	sxth.w	r3, r8
 8019ed2:	9300      	str	r3, [sp, #0]
 8019ed4:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8019ed6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019ed8:	9205      	str	r2, [sp, #20]
 8019eda:	f8cd a004 	str.w	sl, [sp, #4]
 8019ede:	681a      	ldr	r2, [r3, #0]
 8019ee0:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8019ee2:	685b      	ldr	r3, [r3, #4]
 8019ee4:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8019ee6:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 8019ee8:	47b8      	blx	r7
 8019eea:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019eec:	3301      	adds	r3, #1
 8019eee:	930d      	str	r3, [sp, #52]	@ 0x34
 8019ef0:	e6e4      	b.n	8019cbc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 8019ef2:	2700      	movs	r7, #0
 8019ef4:	e7cb      	b.n	8019e8e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x232>
 8019ef6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8019ef8:	f8d2 c008 	ldr.w	ip, [r2, #8]
 8019efc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8019efe:	f8dc 1000 	ldr.w	r1, [ip]
 8019f02:	e9cd 6204 	strd	r6, r2, [sp, #16]
 8019f06:	79aa      	ldrb	r2, [r5, #6]
 8019f08:	9203      	str	r2, [sp, #12]
 8019f0a:	7baa      	ldrb	r2, [r5, #14]
 8019f0c:	9202      	str	r2, [sp, #8]
 8019f0e:	68aa      	ldr	r2, [r5, #8]
 8019f10:	e9cd 0200 	strd	r0, r2, [sp]
 8019f14:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8019f16:	688f      	ldr	r7, [r1, #8]
 8019f18:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8019f1a:	4660      	mov	r0, ip
 8019f1c:	47b8      	blx	r7
 8019f1e:	e7e4      	b.n	8019eea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8019f20:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8019f22:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 8019f24:	3501      	adds	r5, #1
 8019f26:	429d      	cmp	r5, r3
 8019f28:	f6bf af5f 	bge.w	8019dea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 8019f2c:	4659      	mov	r1, fp
 8019f2e:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 8019f30:	f7f0 f9e4 	bl	800a2fc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8019f34:	4604      	mov	r4, r0
 8019f36:	b110      	cbz	r0, 8019f3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 8019f38:	280a      	cmp	r0, #10
 8019f3a:	d1f2      	bne.n	8019f22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 8019f3c:	e754      	b.n	8019de8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8019f3e:	2400      	movs	r4, #0
 8019f40:	e753      	b.n	8019dea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 8019f42:	f1bb 0f00 	cmp.w	fp, #0
 8019f46:	f43f af44 	beq.w	8019dd2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 8019f4a:	e75e      	b.n	8019e0a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

08019f4c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8019f4c:	b530      	push	{r4, r5, lr}
 8019f4e:	8ac4      	ldrh	r4, [r0, #22]
 8019f50:	8b45      	ldrh	r5, [r0, #26]
 8019f52:	8343      	strh	r3, [r0, #26]
 8019f54:	442c      	add	r4, r5
 8019f56:	1ae4      	subs	r4, r4, r3
 8019f58:	82c4      	strh	r4, [r0, #22]
 8019f5a:	8b83      	ldrh	r3, [r0, #28]
 8019f5c:	8b04      	ldrh	r4, [r0, #24]
 8019f5e:	4422      	add	r2, r4
 8019f60:	440c      	add	r4, r1
 8019f62:	1a59      	subs	r1, r3, r1
 8019f64:	83c2      	strh	r2, [r0, #30]
 8019f66:	8304      	strh	r4, [r0, #24]
 8019f68:	8381      	strh	r1, [r0, #28]
 8019f6a:	bd30      	pop	{r4, r5, pc}

08019f6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8019f6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f70:	4604      	mov	r4, r0
 8019f72:	8a47      	ldrh	r7, [r0, #18]
 8019f74:	68c0      	ldr	r0, [r0, #12]
 8019f76:	6803      	ldr	r3, [r0, #0]
 8019f78:	b085      	sub	sp, #20
 8019f7a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8019f7c:	4798      	blx	r3
 8019f7e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8019f82:	7a63      	ldrb	r3, [r4, #9]
 8019f84:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8019f88:	42b7      	cmp	r7, r6
 8019f8a:	f103 33ff 	add.w	r3, r3, #4294967295
 8019f8e:	bfac      	ite	ge
 8019f90:	f04f 0900 	movge.w	r9, #0
 8019f94:	f04f 0901 	movlt.w	r9, #1
 8019f98:	2b05      	cmp	r3, #5
 8019f9a:	d804      	bhi.n	8019fa6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8019f9c:	e8df f003 	tbb	[pc, r3]
 8019fa0:	470e0854 	.word	0x470e0854
 8019fa4:	4c4c      	.short	0x4c4c
 8019fa6:	2500      	movs	r5, #0
 8019fa8:	46a9      	mov	r9, r5
 8019faa:	462e      	mov	r6, r5
 8019fac:	462f      	mov	r7, r5
 8019fae:	e00d      	b.n	8019fcc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8019fb0:	42b7      	cmp	r7, r6
 8019fb2:	bfb4      	ite	lt
 8019fb4:	2600      	movlt	r6, #0
 8019fb6:	2601      	movge	r6, #1
 8019fb8:	2500      	movs	r5, #0
 8019fba:	e7f7      	b.n	8019fac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8019fbc:	42b7      	cmp	r7, r6
 8019fbe:	464d      	mov	r5, r9
 8019fc0:	f04f 0900 	mov.w	r9, #0
 8019fc4:	bfb4      	ite	lt
 8019fc6:	2600      	movlt	r6, #0
 8019fc8:	2601      	movge	r6, #1
 8019fca:	464f      	mov	r7, r9
 8019fcc:	f04f 0800 	mov.w	r8, #0
 8019fd0:	f8a4 8016 	strh.w	r8, [r4, #22]
 8019fd4:	f8a4 8018 	strh.w	r8, [r4, #24]
 8019fd8:	f8cd 8004 	str.w	r8, [sp, #4]
 8019fdc:	2300      	movs	r3, #0
 8019fde:	9303      	str	r3, [sp, #12]
 8019fe0:	8823      	ldrh	r3, [r4, #0]
 8019fe2:	2b20      	cmp	r3, #32
 8019fe4:	d034      	beq.n	801a050 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8019fe6:	f242 010b 	movw	r1, #8203	@ 0x200b
 8019fea:	1a5a      	subs	r2, r3, r1
 8019fec:	f1d2 0a00 	rsbs	sl, r2, #0
 8019ff0:	eb4a 0a02 	adc.w	sl, sl, r2
 8019ff4:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 8019ff8:	4293      	cmp	r3, r2
 8019ffa:	d009      	beq.n	801a010 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8019ffc:	428b      	cmp	r3, r1
 8019ffe:	9a01      	ldr	r2, [sp, #4]
 801a000:	bf18      	it	ne
 801a002:	461a      	movne	r2, r3
 801a004:	9201      	str	r2, [sp, #4]
 801a006:	bf0c      	ite	eq
 801a008:	f04f 0a01 	moveq.w	sl, #1
 801a00c:	f04f 0a00 	movne.w	sl, #0
 801a010:	ab03      	add	r3, sp, #12
 801a012:	68e2      	ldr	r2, [r4, #12]
 801a014:	7a21      	ldrb	r1, [r4, #8]
 801a016:	6860      	ldr	r0, [r4, #4]
 801a018:	f003 fb9c 	bl	801d754 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801a01c:	8020      	strh	r0, [r4, #0]
 801a01e:	b9d8      	cbnz	r0, 801a058 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 801a020:	8ba2      	ldrh	r2, [r4, #28]
 801a022:	2300      	movs	r3, #0
 801a024:	4611      	mov	r1, r2
 801a026:	4620      	mov	r0, r4
 801a028:	f7ff ff90 	bl	8019f4c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801a02c:	e06e      	b.n	801a10c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801a02e:	2500      	movs	r5, #0
 801a030:	46a9      	mov	r9, r5
 801a032:	462e      	mov	r6, r5
 801a034:	2701      	movs	r7, #1
 801a036:	e7c9      	b.n	8019fcc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 801a038:	42b7      	cmp	r7, r6
 801a03a:	f04f 0500 	mov.w	r5, #0
 801a03e:	bfb4      	ite	lt
 801a040:	2700      	movlt	r7, #0
 801a042:	2701      	movge	r7, #1
 801a044:	462e      	mov	r6, r5
 801a046:	e7c1      	b.n	8019fcc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 801a048:	2500      	movs	r5, #0
 801a04a:	46a9      	mov	r9, r5
 801a04c:	2601      	movs	r6, #1
 801a04e:	e7ad      	b.n	8019fac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801a050:	9301      	str	r3, [sp, #4]
 801a052:	f04f 0a01 	mov.w	sl, #1
 801a056:	e7db      	b.n	801a010 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 801a058:	8b63      	ldrh	r3, [r4, #26]
 801a05a:	280a      	cmp	r0, #10
 801a05c:	f103 0301 	add.w	r3, r3, #1
 801a060:	8363      	strh	r3, [r4, #26]
 801a062:	d0dd      	beq.n	801a020 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 801a064:	9a03      	ldr	r2, [sp, #12]
 801a066:	bb62      	cbnz	r2, 801a0c2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 801a068:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 801a06c:	4298      	cmp	r0, r3
 801a06e:	d003      	beq.n	801a078 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801a070:	f242 030b 	movw	r3, #8203	@ 0x200b
 801a074:	4298      	cmp	r0, r3
 801a076:	d1b1      	bne.n	8019fdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801a078:	8823      	ldrh	r3, [r4, #0]
 801a07a:	8ba1      	ldrh	r1, [r4, #28]
 801a07c:	2b20      	cmp	r3, #32
 801a07e:	d003      	beq.n	801a088 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 801a080:	f242 000b 	movw	r0, #8203	@ 0x200b
 801a084:	4283      	cmp	r3, r0
 801a086:	d131      	bne.n	801a0ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 801a088:	f1ba 0f00 	cmp.w	sl, #0
 801a08c:	bf0a      	itet	eq
 801a08e:	4688      	moveq	r8, r1
 801a090:	4650      	movne	r0, sl
 801a092:	2001      	moveq	r0, #1
 801a094:	440a      	add	r2, r1
 801a096:	8b23      	ldrh	r3, [r4, #24]
 801a098:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801a09c:	b292      	uxth	r2, r2
 801a09e:	83a2      	strh	r2, [r4, #28]
 801a0a0:	4413      	add	r3, r2
 801a0a2:	f1b9 0f00 	cmp.w	r9, #0
 801a0a6:	d102      	bne.n	801a0ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 801a0a8:	2d00      	cmp	r5, #0
 801a0aa:	d042      	beq.n	801a132 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 801a0ac:	b300      	cbz	r0, 801a0f0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801a0ae:	8c21      	ldrh	r1, [r4, #32]
 801a0b0:	4419      	add	r1, r3
 801a0b2:	458c      	cmp	ip, r1
 801a0b4:	da37      	bge.n	801a126 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801a0b6:	8ae1      	ldrh	r1, [r4, #22]
 801a0b8:	2900      	cmp	r1, #0
 801a0ba:	d034      	beq.n	801a126 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801a0bc:	4563      	cmp	r3, ip
 801a0be:	dd8d      	ble.n	8019fdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801a0c0:	e01d      	b.n	801a0fe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 801a0c2:	8893      	ldrh	r3, [r2, #4]
 801a0c4:	8023      	strh	r3, [r4, #0]
 801a0c6:	f892 b00d 	ldrb.w	fp, [r2, #13]
 801a0ca:	9901      	ldr	r1, [sp, #4]
 801a0cc:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 801a0d0:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 801a0d4:	f892 b00a 	ldrb.w	fp, [r2, #10]
 801a0d8:	ea4b 0b00 	orr.w	fp, fp, r0
 801a0dc:	68e0      	ldr	r0, [r4, #12]
 801a0de:	6803      	ldr	r3, [r0, #0]
 801a0e0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801a0e2:	4798      	blx	r3
 801a0e4:	eb0b 0200 	add.w	r2, fp, r0
 801a0e8:	b292      	uxth	r2, r2
 801a0ea:	e7c5      	b.n	801a078 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801a0ec:	2000      	movs	r0, #0
 801a0ee:	e7d1      	b.n	801a094 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 801a0f0:	4563      	cmp	r3, ip
 801a0f2:	f77f af73 	ble.w	8019fdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801a0f6:	8ae3      	ldrh	r3, [r4, #22]
 801a0f8:	2b00      	cmp	r3, #0
 801a0fa:	f43f af6f 	beq.w	8019fdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801a0fe:	2301      	movs	r3, #1
 801a100:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 801a104:	8c22      	ldrh	r2, [r4, #32]
 801a106:	8be3      	ldrh	r3, [r4, #30]
 801a108:	4413      	add	r3, r2
 801a10a:	83e3      	strh	r3, [r4, #30]
 801a10c:	68e0      	ldr	r0, [r4, #12]
 801a10e:	6803      	ldr	r3, [r0, #0]
 801a110:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801a112:	4798      	blx	r3
 801a114:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 801a118:	4418      	add	r0, r3
 801a11a:	8a63      	ldrh	r3, [r4, #18]
 801a11c:	1a18      	subs	r0, r3, r0
 801a11e:	8260      	strh	r0, [r4, #18]
 801a120:	b005      	add	sp, #20
 801a122:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a126:	2300      	movs	r3, #0
 801a128:	4611      	mov	r1, r2
 801a12a:	4620      	mov	r0, r4
 801a12c:	f7ff ff0e 	bl	8019f4c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801a130:	e754      	b.n	8019fdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801a132:	4563      	cmp	r3, ip
 801a134:	dd14      	ble.n	801a160 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 801a136:	b117      	cbz	r7, 801a13e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 801a138:	2301      	movs	r3, #1
 801a13a:	460a      	mov	r2, r1
 801a13c:	e772      	b.n	801a024 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801a13e:	2e00      	cmp	r6, #0
 801a140:	f43f af4c 	beq.w	8019fdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801a144:	2800      	cmp	r0, #0
 801a146:	f47f af49 	bne.w	8019fdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801a14a:	f1ba 0f00 	cmp.w	sl, #0
 801a14e:	d002      	beq.n	801a156 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 801a150:	2301      	movs	r3, #1
 801a152:	4642      	mov	r2, r8
 801a154:	e767      	b.n	801a026 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 801a156:	8ae3      	ldrh	r3, [r4, #22]
 801a158:	2b00      	cmp	r3, #0
 801a15a:	f43f af3f 	beq.w	8019fdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801a15e:	e7d5      	b.n	801a10c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801a160:	2800      	cmp	r0, #0
 801a162:	f47f af3b 	bne.w	8019fdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801a166:	f1ba 0f00 	cmp.w	sl, #0
 801a16a:	f43f af37 	beq.w	8019fdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801a16e:	2301      	movs	r3, #1
 801a170:	4642      	mov	r2, r8
 801a172:	e7da      	b.n	801a12a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

0801a174 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 801a174:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a176:	4605      	mov	r5, r0
 801a178:	b08f      	sub	sp, #60	@ 0x3c
 801a17a:	4617      	mov	r7, r2
 801a17c:	461c      	mov	r4, r3
 801a17e:	460e      	mov	r6, r1
 801a180:	b1d1      	cbz	r1, 801a1b8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 801a182:	681b      	ldr	r3, [r3, #0]
 801a184:	4620      	mov	r0, r4
 801a186:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801a188:	4798      	blx	r3
 801a18a:	4240      	negs	r0, r0
 801a18c:	b200      	sxth	r0, r0
 801a18e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 801a192:	9603      	str	r6, [sp, #12]
 801a194:	9700      	str	r7, [sp, #0]
 801a196:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 801a19a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 801a19e:	4629      	mov	r1, r5
 801a1a0:	a805      	add	r0, sp, #20
 801a1a2:	f7ff fcab 	bl	8019afc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801a1a6:	2401      	movs	r4, #1
 801a1a8:	a805      	add	r0, sp, #20
 801a1aa:	f7ff fedf 	bl	8019f6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801a1ae:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 801a1b2:	b163      	cbz	r3, 801a1ce <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 801a1b4:	3401      	adds	r4, #1
 801a1b6:	e7f7      	b.n	801a1a8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 801a1b8:	f003 fb9a 	bl	801d8f0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801a1bc:	2401      	movs	r4, #1
 801a1be:	280a      	cmp	r0, #10
 801a1c0:	4628      	mov	r0, r5
 801a1c2:	bf08      	it	eq
 801a1c4:	3401      	addeq	r4, #1
 801a1c6:	f003 fb93 	bl	801d8f0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801a1ca:	2800      	cmp	r0, #0
 801a1cc:	d1f7      	bne.n	801a1be <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801a1ce:	b2a0      	uxth	r0, r4
 801a1d0:	b00f      	add	sp, #60	@ 0x3c
 801a1d2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801a1d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 801a1d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a1d8:	b0e3      	sub	sp, #396	@ 0x18c
 801a1da:	461c      	mov	r4, r3
 801a1dc:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 801a1de:	4683      	mov	fp, r0
 801a1e0:	4688      	mov	r8, r1
 801a1e2:	2b00      	cmp	r3, #0
 801a1e4:	f000 8112 	beq.w	801a40c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801a1e8:	6823      	ldr	r3, [r4, #0]
 801a1ea:	2b00      	cmp	r3, #0
 801a1ec:	f000 810e 	beq.w	801a40c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801a1f0:	7ba3      	ldrb	r3, [r4, #14]
 801a1f2:	2b00      	cmp	r3, #0
 801a1f4:	f000 810a 	beq.w	801a40c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801a1f8:	6810      	ldr	r0, [r2, #0]
 801a1fa:	6851      	ldr	r1, [r2, #4]
 801a1fc:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 801a200:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 801a204:	ad0a      	add	r5, sp, #40	@ 0x28
 801a206:	462b      	mov	r3, r5
 801a208:	c303      	stmia	r3!, {r0, r1}
 801a20a:	2100      	movs	r1, #0
 801a20c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 801a210:	910c      	str	r1, [sp, #48]	@ 0x30
 801a212:	79a2      	ldrb	r2, [r4, #6]
 801a214:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801a218:	a90c      	add	r1, sp, #48	@ 0x30
 801a21a:	4628      	mov	r0, r5
 801a21c:	f7ff fced 	bl	8019bfa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801a220:	a90c      	add	r1, sp, #48	@ 0x30
 801a222:	4608      	mov	r0, r1
 801a224:	79a2      	ldrb	r2, [r4, #6]
 801a226:	f7ff fce8 	bl	8019bfa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801a22a:	a817      	add	r0, sp, #92	@ 0x5c
 801a22c:	f002 ff0b 	bl	801d046 <_ZN8touchgfx12TextProviderC1Ev>
 801a230:	6820      	ldr	r0, [r4, #0]
 801a232:	6803      	ldr	r3, [r0, #0]
 801a234:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801a236:	4798      	blx	r3
 801a238:	4606      	mov	r6, r0
 801a23a:	6820      	ldr	r0, [r4, #0]
 801a23c:	6803      	ldr	r3, [r0, #0]
 801a23e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801a240:	4798      	blx	r3
 801a242:	4633      	mov	r3, r6
 801a244:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 801a246:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 801a248:	9000      	str	r0, [sp, #0]
 801a24a:	a817      	add	r0, sp, #92	@ 0x5c
 801a24c:	f002 ff56 	bl	801d0fc <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801a250:	6820      	ldr	r0, [r4, #0]
 801a252:	f894 a004 	ldrb.w	sl, [r4, #4]
 801a256:	6803      	ldr	r3, [r0, #0]
 801a258:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801a25a:	4798      	blx	r3
 801a25c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 801a260:	6823      	ldr	r3, [r4, #0]
 801a262:	4607      	mov	r7, r0
 801a264:	4406      	add	r6, r0
 801a266:	a830      	add	r0, sp, #192	@ 0xc0
 801a268:	f893 9009 	ldrb.w	r9, [r3, #9]
 801a26c:	f002 feeb 	bl	801d046 <_ZN8touchgfx12TextProviderC1Ev>
 801a270:	7c23      	ldrb	r3, [r4, #16]
 801a272:	b17b      	cbz	r3, 801a294 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 801a274:	6820      	ldr	r0, [r4, #0]
 801a276:	6803      	ldr	r3, [r0, #0]
 801a278:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801a27a:	4798      	blx	r3
 801a27c:	9009      	str	r0, [sp, #36]	@ 0x24
 801a27e:	6820      	ldr	r0, [r4, #0]
 801a280:	6802      	ldr	r2, [r0, #0]
 801a282:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 801a284:	4790      	blx	r2
 801a286:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a288:	9000      	str	r0, [sp, #0]
 801a28a:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 801a28c:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 801a28e:	a830      	add	r0, sp, #192	@ 0xc0
 801a290:	f002 ff34 	bl	801d0fc <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801a294:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801a298:	7be2      	ldrb	r2, [r4, #15]
 801a29a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 801a29e:	1a8a      	subs	r2, r1, r2
 801a2a0:	7c21      	ldrb	r1, [r4, #16]
 801a2a2:	9103      	str	r1, [sp, #12]
 801a2a4:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 801a2a8:	9102      	str	r1, [sp, #8]
 801a2aa:	6821      	ldr	r1, [r4, #0]
 801a2ac:	9101      	str	r1, [sp, #4]
 801a2ae:	7961      	ldrb	r1, [r4, #5]
 801a2b0:	9100      	str	r1, [sp, #0]
 801a2b2:	b292      	uxth	r2, r2
 801a2b4:	a930      	add	r1, sp, #192	@ 0xc0
 801a2b6:	a80e      	add	r0, sp, #56	@ 0x38
 801a2b8:	f7ff fc20 	bl	8019afc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801a2bc:	2e00      	cmp	r6, #0
 801a2be:	dc5b      	bgt.n	801a378 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 801a2c0:	af17      	add	r7, sp, #92	@ 0x5c
 801a2c2:	f04f 0900 	mov.w	r9, #0
 801a2c6:	7c23      	ldrb	r3, [r4, #16]
 801a2c8:	2b00      	cmp	r3, #0
 801a2ca:	f000 80b1 	beq.w	801a430 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801a2ce:	a80e      	add	r0, sp, #56	@ 0x38
 801a2d0:	f7ff fe4c 	bl	8019f6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801a2d4:	f1ba 0f00 	cmp.w	sl, #0
 801a2d8:	f000 80a5 	beq.w	801a426 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801a2dc:	7c23      	ldrb	r3, [r4, #16]
 801a2de:	9309      	str	r3, [sp, #36]	@ 0x24
 801a2e0:	2264      	movs	r2, #100	@ 0x64
 801a2e2:	4639      	mov	r1, r7
 801a2e4:	a849      	add	r0, sp, #292	@ 0x124
 801a2e6:	f014 fd56 	bl	802ed96 <memcpy>
 801a2ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a2ec:	2b00      	cmp	r3, #0
 801a2ee:	f000 80a7 	beq.w	801a440 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 801a2f2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 801a2f6:	7922      	ldrb	r2, [r4, #4]
 801a2f8:	2a01      	cmp	r2, #1
 801a2fa:	f040 808a 	bne.w	801a412 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 801a2fe:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 801a302:	1ac0      	subs	r0, r0, r3
 801a304:	2302      	movs	r3, #2
 801a306:	fb90 f0f3 	sdiv	r0, r0, r3
 801a30a:	b200      	sxth	r0, r0
 801a30c:	7c23      	ldrb	r3, [r4, #16]
 801a30e:	2b00      	cmp	r3, #0
 801a310:	f000 808b 	beq.w	801a42a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 801a314:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 801a318:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 801a31c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801a320:	e9cd 2105 	strd	r2, r1, [sp, #20]
 801a324:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 801a328:	4410      	add	r0, r2
 801a32a:	b200      	sxth	r0, r0
 801a32c:	9000      	str	r0, [sp, #0]
 801a32e:	e9cd 9703 	strd	r9, r7, [sp, #12]
 801a332:	e9cd 5401 	strd	r5, r4, [sp, #4]
 801a336:	4642      	mov	r2, r8
 801a338:	2100      	movs	r1, #0
 801a33a:	4658      	mov	r0, fp
 801a33c:	f7ff fc8e 	bl	8019c5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 801a340:	2800      	cmp	r0, #0
 801a342:	d163      	bne.n	801a40c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801a344:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801a348:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 801a34c:	b2b2      	uxth	r2, r6
 801a34e:	4413      	add	r3, r2
 801a350:	1a8a      	subs	r2, r1, r2
 801a352:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 801a356:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 801a35a:	b21b      	sxth	r3, r3
 801a35c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801a360:	2a00      	cmp	r2, #0
 801a362:	d153      	bne.n	801a40c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801a364:	6822      	ldr	r2, [r4, #0]
 801a366:	8869      	ldrh	r1, [r5, #2]
 801a368:	7a12      	ldrb	r2, [r2, #8]
 801a36a:	1a9b      	subs	r3, r3, r2
 801a36c:	88ea      	ldrh	r2, [r5, #6]
 801a36e:	440a      	add	r2, r1
 801a370:	b212      	sxth	r2, r2
 801a372:	4293      	cmp	r3, r2
 801a374:	dda7      	ble.n	801a2c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 801a376:	e049      	b.n	801a40c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801a378:	7c23      	ldrb	r3, [r4, #16]
 801a37a:	444f      	add	r7, r9
 801a37c:	b1c3      	cbz	r3, 801a3b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801a37e:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 801a382:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801a386:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801a38a:	443b      	add	r3, r7
 801a38c:	4293      	cmp	r3, r2
 801a38e:	da97      	bge.n	801a2c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 801a390:	a80e      	add	r0, sp, #56	@ 0x38
 801a392:	f7ff fdeb 	bl	8019f6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801a396:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 801a39a:	3b01      	subs	r3, #1
 801a39c:	b29b      	uxth	r3, r3
 801a39e:	454b      	cmp	r3, r9
 801a3a0:	9309      	str	r3, [sp, #36]	@ 0x24
 801a3a2:	d021      	beq.n	801a3e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 801a3a4:	7961      	ldrb	r1, [r4, #5]
 801a3a6:	a817      	add	r0, sp, #92	@ 0x5c
 801a3a8:	f7ef ffa8 	bl	800a2fc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801a3ac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a3ae:	e7f4      	b.n	801a39a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 801a3b0:	fa1f f986 	uxth.w	r9, r6
 801a3b4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801a3b8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801a3bc:	443b      	add	r3, r7
 801a3be:	4293      	cmp	r3, r2
 801a3c0:	f6bf af7e 	bge.w	801a2c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 801a3c4:	a817      	add	r0, sp, #92	@ 0x5c
 801a3c6:	f003 fa93 	bl	801d8f0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801a3ca:	b1f8      	cbz	r0, 801a40c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801a3cc:	280a      	cmp	r0, #10
 801a3ce:	d1f1      	bne.n	801a3b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 801a3d0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801a3d4:	444b      	add	r3, r9
 801a3d6:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801a3da:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 801a3de:	eba3 0309 	sub.w	r3, r3, r9
 801a3e2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801a3e6:	e7e5      	b.n	801a3b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 801a3e8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 801a3ec:	b2b3      	uxth	r3, r6
 801a3ee:	441a      	add	r2, r3
 801a3f0:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801a3f4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 801a3f8:	1ad3      	subs	r3, r2, r3
 801a3fa:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801a3fe:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801a402:	b11b      	cbz	r3, 801a40c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801a404:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 801a408:	2b00      	cmp	r3, #0
 801a40a:	d0ba      	beq.n	801a382 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 801a40c:	b063      	add	sp, #396	@ 0x18c
 801a40e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a412:	2a02      	cmp	r2, #2
 801a414:	d105      	bne.n	801a422 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 801a416:	7be2      	ldrb	r2, [r4, #15]
 801a418:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 801a41c:	1a80      	subs	r0, r0, r2
 801a41e:	1ac0      	subs	r0, r0, r3
 801a420:	e773      	b.n	801a30a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 801a422:	2000      	movs	r0, #0
 801a424:	e772      	b.n	801a30c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801a426:	7be0      	ldrb	r0, [r4, #15]
 801a428:	e770      	b.n	801a30c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801a42a:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 801a42e:	e773      	b.n	801a318 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 801a430:	f1ba 0f00 	cmp.w	sl, #0
 801a434:	d0f7      	beq.n	801a426 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801a436:	2264      	movs	r2, #100	@ 0x64
 801a438:	4639      	mov	r1, r7
 801a43a:	a849      	add	r0, sp, #292	@ 0x124
 801a43c:	f014 fcab 	bl	802ed96 <memcpy>
 801a440:	2300      	movs	r3, #0
 801a442:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 801a446:	6821      	ldr	r1, [r4, #0]
 801a448:	a849      	add	r0, sp, #292	@ 0x124
 801a44a:	f7ff fb9a 	bl	8019b82 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801a44e:	b203      	sxth	r3, r0
 801a450:	e751      	b.n	801a2f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0801a452 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 801a452:	2b03      	cmp	r3, #3
 801a454:	d818      	bhi.n	801a488 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 801a456:	e8df f003 	tbb	[pc, r3]
 801a45a:	0602      	.short	0x0602
 801a45c:	130d      	.short	0x130d
 801a45e:	f9b0 2000 	ldrsh.w	r2, [r0]
 801a462:	1850      	adds	r0, r2, r1
 801a464:	4770      	bx	lr
 801a466:	8803      	ldrh	r3, [r0, #0]
 801a468:	8880      	ldrh	r0, [r0, #4]
 801a46a:	4418      	add	r0, r3
 801a46c:	b200      	sxth	r0, r0
 801a46e:	1a80      	subs	r0, r0, r2
 801a470:	3801      	subs	r0, #1
 801a472:	4770      	bx	lr
 801a474:	8803      	ldrh	r3, [r0, #0]
 801a476:	8880      	ldrh	r0, [r0, #4]
 801a478:	4418      	add	r0, r3
 801a47a:	b200      	sxth	r0, r0
 801a47c:	1a40      	subs	r0, r0, r1
 801a47e:	e7f7      	b.n	801a470 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 801a480:	f9b0 0000 	ldrsh.w	r0, [r0]
 801a484:	4410      	add	r0, r2
 801a486:	4770      	bx	lr
 801a488:	2000      	movs	r0, #0
 801a48a:	4770      	bx	lr

0801a48c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801a48c:	2b03      	cmp	r3, #3
 801a48e:	d817      	bhi.n	801a4c0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 801a490:	e8df f003 	tbb	[pc, r3]
 801a494:	10090602 	.word	0x10090602
 801a498:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801a49c:	1850      	adds	r0, r2, r1
 801a49e:	4770      	bx	lr
 801a4a0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801a4a4:	e7fa      	b.n	801a49c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 801a4a6:	8843      	ldrh	r3, [r0, #2]
 801a4a8:	88c0      	ldrh	r0, [r0, #6]
 801a4aa:	4418      	add	r0, r3
 801a4ac:	b200      	sxth	r0, r0
 801a4ae:	1a80      	subs	r0, r0, r2
 801a4b0:	3801      	subs	r0, #1
 801a4b2:	4770      	bx	lr
 801a4b4:	8843      	ldrh	r3, [r0, #2]
 801a4b6:	88c0      	ldrh	r0, [r0, #6]
 801a4b8:	4418      	add	r0, r3
 801a4ba:	b200      	sxth	r0, r0
 801a4bc:	1a40      	subs	r0, r0, r1
 801a4be:	e7f7      	b.n	801a4b0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 801a4c0:	2000      	movs	r0, #0
 801a4c2:	4770      	bx	lr

0801a4c4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 801a4c4:	4b01      	ldr	r3, [pc, #4]	@ (801a4cc <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 801a4c6:	2200      	movs	r2, #0
 801a4c8:	601a      	str	r2, [r3, #0]
 801a4ca:	4770      	bx	lr
 801a4cc:	2000e41c 	.word	0x2000e41c

0801a4d0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 801a4d0:	4603      	mov	r3, r0
 801a4d2:	b1c8      	cbz	r0, 801a508 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 801a4d4:	0c02      	lsrs	r2, r0, #16
 801a4d6:	0412      	lsls	r2, r2, #16
 801a4d8:	b9a2      	cbnz	r2, 801a504 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801a4da:	0403      	lsls	r3, r0, #16
 801a4dc:	2010      	movs	r0, #16
 801a4de:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 801a4e2:	bf04      	itt	eq
 801a4e4:	021b      	lsleq	r3, r3, #8
 801a4e6:	3008      	addeq	r0, #8
 801a4e8:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 801a4ec:	bf04      	itt	eq
 801a4ee:	011b      	lsleq	r3, r3, #4
 801a4f0:	3004      	addeq	r0, #4
 801a4f2:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 801a4f6:	bf04      	itt	eq
 801a4f8:	009b      	lsleq	r3, r3, #2
 801a4fa:	3002      	addeq	r0, #2
 801a4fc:	2b00      	cmp	r3, #0
 801a4fe:	db04      	blt.n	801a50a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 801a500:	3001      	adds	r0, #1
 801a502:	4770      	bx	lr
 801a504:	2000      	movs	r0, #0
 801a506:	e7ea      	b.n	801a4de <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 801a508:	2020      	movs	r0, #32
 801a50a:	4770      	bx	lr

0801a50c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 801a50c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a510:	b087      	sub	sp, #28
 801a512:	460d      	mov	r5, r1
 801a514:	4616      	mov	r6, r2
 801a516:	4698      	mov	r8, r3
 801a518:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 801a51c:	4601      	mov	r1, r0
 801a51e:	b120      	cbz	r0, 801a52a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 801a520:	b11a      	cbz	r2, 801a52a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 801a522:	2d1f      	cmp	r5, #31
 801a524:	d801      	bhi.n	801a52a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 801a526:	2b1f      	cmp	r3, #31
 801a528:	d904      	bls.n	801a534 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801a52a:	2000      	movs	r0, #0
 801a52c:	6038      	str	r0, [r7, #0]
 801a52e:	b007      	add	sp, #28
 801a530:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a534:	b97d      	cbnz	r5, 801a556 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 801a536:	b143      	cbz	r3, 801a54a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 801a538:	4602      	mov	r2, r0
 801a53a:	e9cd 4700 	strd	r4, r7, [sp]
 801a53e:	462b      	mov	r3, r5
 801a540:	4641      	mov	r1, r8
 801a542:	4630      	mov	r0, r6
 801a544:	f7ff ffe2 	bl	801a50c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801a548:	e7f1      	b.n	801a52e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801a54a:	f04f 33ff 	mov.w	r3, #4294967295
 801a54e:	603b      	str	r3, [r7, #0]
 801a550:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 801a554:	e7eb      	b.n	801a52e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801a556:	fa32 fa05 	lsrs.w	sl, r2, r5
 801a55a:	d106      	bne.n	801a56a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801a55c:	4346      	muls	r6, r0
 801a55e:	fbb6 f0f4 	udiv	r0, r6, r4
 801a562:	fb04 6610 	mls	r6, r4, r0, r6
 801a566:	603e      	str	r6, [r7, #0]
 801a568:	e7e1      	b.n	801a52e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801a56a:	2201      	movs	r2, #1
 801a56c:	40aa      	lsls	r2, r5
 801a56e:	3a01      	subs	r2, #1
 801a570:	4016      	ands	r6, r2
 801a572:	fa00 fb05 	lsl.w	fp, r0, r5
 801a576:	4630      	mov	r0, r6
 801a578:	fbbb f9f4 	udiv	r9, fp, r4
 801a57c:	fb0a f309 	mul.w	r3, sl, r9
 801a580:	9303      	str	r3, [sp, #12]
 801a582:	f7ff ffa5 	bl	801a4d0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801a586:	462b      	mov	r3, r5
 801a588:	460a      	mov	r2, r1
 801a58a:	e9cd 4700 	strd	r4, r7, [sp]
 801a58e:	4601      	mov	r1, r0
 801a590:	4630      	mov	r0, r6
 801a592:	f7ff ffbb 	bl	801a50c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801a596:	fb04 b919 	mls	r9, r4, r9, fp
 801a59a:	4606      	mov	r6, r0
 801a59c:	4648      	mov	r0, r9
 801a59e:	eb05 0108 	add.w	r1, r5, r8
 801a5a2:	f7ff ff95 	bl	801a4d0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801a5a6:	ab05      	add	r3, sp, #20
 801a5a8:	e9cd 4300 	strd	r4, r3, [sp]
 801a5ac:	464a      	mov	r2, r9
 801a5ae:	4603      	mov	r3, r0
 801a5b0:	4650      	mov	r0, sl
 801a5b2:	f7ff ffab 	bl	801a50c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801a5b6:	6839      	ldr	r1, [r7, #0]
 801a5b8:	9a05      	ldr	r2, [sp, #20]
 801a5ba:	9b03      	ldr	r3, [sp, #12]
 801a5bc:	4411      	add	r1, r2
 801a5be:	fbb1 f2f4 	udiv	r2, r1, r4
 801a5c2:	18d3      	adds	r3, r2, r3
 801a5c4:	441e      	add	r6, r3
 801a5c6:	fb04 1412 	mls	r4, r4, r2, r1
 801a5ca:	4430      	add	r0, r6
 801a5cc:	603c      	str	r4, [r7, #0]
 801a5ce:	e7ae      	b.n	801a52e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0801a5d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 801a5d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801a5d4:	b085      	sub	sp, #20
 801a5d6:	f1b0 0900 	subs.w	r9, r0, #0
 801a5da:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801a5dc:	461d      	mov	r5, r3
 801a5de:	bfbf      	itttt	lt
 801a5e0:	6823      	ldrlt	r3, [r4, #0]
 801a5e2:	425b      	neglt	r3, r3
 801a5e4:	f1c9 0900 	rsblt	r9, r9, #0
 801a5e8:	6023      	strlt	r3, [r4, #0]
 801a5ea:	bfb4      	ite	lt
 801a5ec:	f04f 36ff 	movlt.w	r6, #4294967295
 801a5f0:	2601      	movge	r6, #1
 801a5f2:	2a00      	cmp	r2, #0
 801a5f4:	4617      	mov	r7, r2
 801a5f6:	da04      	bge.n	801a602 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 801a5f8:	6823      	ldr	r3, [r4, #0]
 801a5fa:	425b      	negs	r3, r3
 801a5fc:	4257      	negs	r7, r2
 801a5fe:	4276      	negs	r6, r6
 801a600:	6023      	str	r3, [r4, #0]
 801a602:	2d00      	cmp	r5, #0
 801a604:	4638      	mov	r0, r7
 801a606:	bfba      	itte	lt
 801a608:	426d      	neglt	r5, r5
 801a60a:	f04f 38ff 	movlt.w	r8, #4294967295
 801a60e:	f04f 0801 	movge.w	r8, #1
 801a612:	f7ff ff5d 	bl	801a4d0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801a616:	ab03      	add	r3, sp, #12
 801a618:	e9cd 5300 	strd	r5, r3, [sp]
 801a61c:	463a      	mov	r2, r7
 801a61e:	4603      	mov	r3, r0
 801a620:	4648      	mov	r0, r9
 801a622:	f7ff ff73 	bl	801a50c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801a626:	6823      	ldr	r3, [r4, #0]
 801a628:	9a03      	ldr	r2, [sp, #12]
 801a62a:	4546      	cmp	r6, r8
 801a62c:	441a      	add	r2, r3
 801a62e:	fb92 f3f5 	sdiv	r3, r2, r5
 801a632:	4418      	add	r0, r3
 801a634:	bf18      	it	ne
 801a636:	4240      	negne	r0, r0
 801a638:	fb05 2313 	mls	r3, r5, r3, r2
 801a63c:	1c72      	adds	r2, r6, #1
 801a63e:	6023      	str	r3, [r4, #0]
 801a640:	d105      	bne.n	801a64e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 801a642:	2b00      	cmp	r3, #0
 801a644:	f1c3 0200 	rsb	r2, r3, #0
 801a648:	db0b      	blt.n	801a662 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801a64a:	6022      	str	r2, [r4, #0]
 801a64c:	e006      	b.n	801a65c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801a64e:	2e01      	cmp	r6, #1
 801a650:	d104      	bne.n	801a65c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801a652:	2b00      	cmp	r3, #0
 801a654:	da02      	bge.n	801a65c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801a656:	442b      	add	r3, r5
 801a658:	3801      	subs	r0, #1
 801a65a:	6023      	str	r3, [r4, #0]
 801a65c:	b005      	add	sp, #20
 801a65e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801a662:	3801      	subs	r0, #1
 801a664:	1b52      	subs	r2, r2, r5
 801a666:	e7f0      	b.n	801a64a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0801a668 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 801a668:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801a66c:	4c1c      	ldr	r4, [pc, #112]	@ (801a6e0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801a66e:	6807      	ldr	r7, [r0, #0]
 801a670:	69a3      	ldr	r3, [r4, #24]
 801a672:	4605      	mov	r5, r0
 801a674:	b92b      	cbnz	r3, 801a682 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 801a676:	6840      	ldr	r0, [r0, #4]
 801a678:	e9c5 7000 	strd	r7, r0, [r5]
 801a67c:	b004      	add	sp, #16
 801a67e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a682:	68a2      	ldr	r2, [r4, #8]
 801a684:	6820      	ldr	r0, [r4, #0]
 801a686:	ae04      	add	r6, sp, #16
 801a688:	f04f 0802 	mov.w	r8, #2
 801a68c:	fb93 f1f8 	sdiv	r1, r3, r8
 801a690:	440a      	add	r2, r1
 801a692:	f846 2d04 	str.w	r2, [r6, #-4]!
 801a696:	69e1      	ldr	r1, [r4, #28]
 801a698:	9600      	str	r6, [sp, #0]
 801a69a:	463a      	mov	r2, r7
 801a69c:	f7ff ff98 	bl	801a5d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801a6a0:	69a3      	ldr	r3, [r4, #24]
 801a6a2:	686a      	ldr	r2, [r5, #4]
 801a6a4:	6a21      	ldr	r1, [r4, #32]
 801a6a6:	9600      	str	r6, [sp, #0]
 801a6a8:	4607      	mov	r7, r0
 801a6aa:	6860      	ldr	r0, [r4, #4]
 801a6ac:	f7ff ff90 	bl	801a5d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801a6b0:	6962      	ldr	r2, [r4, #20]
 801a6b2:	69a3      	ldr	r3, [r4, #24]
 801a6b4:	fb93 f8f8 	sdiv	r8, r3, r8
 801a6b8:	4442      	add	r2, r8
 801a6ba:	9203      	str	r2, [sp, #12]
 801a6bc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 801a6be:	682a      	ldr	r2, [r5, #0]
 801a6c0:	9600      	str	r6, [sp, #0]
 801a6c2:	4407      	add	r7, r0
 801a6c4:	68e0      	ldr	r0, [r4, #12]
 801a6c6:	f7ff ff83 	bl	801a5d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801a6ca:	9600      	str	r6, [sp, #0]
 801a6cc:	4680      	mov	r8, r0
 801a6ce:	69a3      	ldr	r3, [r4, #24]
 801a6d0:	686a      	ldr	r2, [r5, #4]
 801a6d2:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 801a6d4:	6920      	ldr	r0, [r4, #16]
 801a6d6:	f7ff ff7b 	bl	801a5d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801a6da:	4440      	add	r0, r8
 801a6dc:	e7cc      	b.n	801a678 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801a6de:	bf00      	nop
 801a6e0:	2000e420 	.word	0x2000e420

0801a6e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 801a6e4:	4b07      	ldr	r3, [pc, #28]	@ (801a704 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 801a6e6:	781b      	ldrb	r3, [r3, #0]
 801a6e8:	2b01      	cmp	r3, #1
 801a6ea:	d109      	bne.n	801a700 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 801a6ec:	f9b1 3000 	ldrsh.w	r3, [r1]
 801a6f0:	f9b0 2000 	ldrsh.w	r2, [r0]
 801a6f4:	8003      	strh	r3, [r0, #0]
 801a6f6:	4b04      	ldr	r3, [pc, #16]	@ (801a708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 801a6f8:	881b      	ldrh	r3, [r3, #0]
 801a6fa:	3b01      	subs	r3, #1
 801a6fc:	1a9b      	subs	r3, r3, r2
 801a6fe:	800b      	strh	r3, [r1, #0]
 801a700:	4770      	bx	lr
 801a702:	bf00      	nop
 801a704:	2000e404 	.word	0x2000e404
 801a708:	2000e400 	.word	0x2000e400

0801a70c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 801a70c:	b510      	push	{r4, lr}
 801a70e:	4b07      	ldr	r3, [pc, #28]	@ (801a72c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 801a710:	781b      	ldrb	r3, [r3, #0]
 801a712:	2b01      	cmp	r3, #1
 801a714:	d108      	bne.n	801a728 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 801a716:	4b06      	ldr	r3, [pc, #24]	@ (801a730 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 801a718:	880c      	ldrh	r4, [r1, #0]
 801a71a:	881b      	ldrh	r3, [r3, #0]
 801a71c:	f9b0 2000 	ldrsh.w	r2, [r0]
 801a720:	3b01      	subs	r3, #1
 801a722:	1b1b      	subs	r3, r3, r4
 801a724:	8003      	strh	r3, [r0, #0]
 801a726:	800a      	strh	r2, [r1, #0]
 801a728:	bd10      	pop	{r4, pc}
 801a72a:	bf00      	nop
 801a72c:	2000e404 	.word	0x2000e404
 801a730:	2000e400 	.word	0x2000e400

0801a734 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 801a734:	b510      	push	{r4, lr}
 801a736:	4b0a      	ldr	r3, [pc, #40]	@ (801a760 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 801a738:	781b      	ldrb	r3, [r3, #0]
 801a73a:	2b01      	cmp	r3, #1
 801a73c:	d10e      	bne.n	801a75c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801a73e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801a742:	8843      	ldrh	r3, [r0, #2]
 801a744:	f9b0 4000 	ldrsh.w	r4, [r0]
 801a748:	8044      	strh	r4, [r0, #2]
 801a74a:	18ca      	adds	r2, r1, r3
 801a74c:	4b05      	ldr	r3, [pc, #20]	@ (801a764 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801a74e:	881b      	ldrh	r3, [r3, #0]
 801a750:	1a9b      	subs	r3, r3, r2
 801a752:	8003      	strh	r3, [r0, #0]
 801a754:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801a758:	80c3      	strh	r3, [r0, #6]
 801a75a:	8081      	strh	r1, [r0, #4]
 801a75c:	bd10      	pop	{r4, pc}
 801a75e:	bf00      	nop
 801a760:	2000e404 	.word	0x2000e404
 801a764:	2000e400 	.word	0x2000e400

0801a768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 801a768:	4b08      	ldr	r3, [pc, #32]	@ (801a78c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801a76a:	781b      	ldrb	r3, [r3, #0]
 801a76c:	2b01      	cmp	r3, #1
 801a76e:	d10c      	bne.n	801a78a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 801a770:	8803      	ldrh	r3, [r0, #0]
 801a772:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 801a776:	8842      	ldrh	r2, [r0, #2]
 801a778:	8002      	strh	r2, [r0, #0]
 801a77a:	185a      	adds	r2, r3, r1
 801a77c:	4b04      	ldr	r3, [pc, #16]	@ (801a790 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801a77e:	881b      	ldrh	r3, [r3, #0]
 801a780:	1a9b      	subs	r3, r3, r2
 801a782:	8043      	strh	r3, [r0, #2]
 801a784:	88c3      	ldrh	r3, [r0, #6]
 801a786:	8083      	strh	r3, [r0, #4]
 801a788:	80c1      	strh	r1, [r0, #6]
 801a78a:	4770      	bx	lr
 801a78c:	2000e404 	.word	0x2000e404
 801a790:	2000e400 	.word	0x2000e400

0801a794 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 801a794:	b510      	push	{r4, lr}
 801a796:	4b07      	ldr	r3, [pc, #28]	@ (801a7b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 801a798:	781b      	ldrb	r3, [r3, #0]
 801a79a:	2b01      	cmp	r3, #1
 801a79c:	d108      	bne.n	801a7b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801a79e:	f9b1 3000 	ldrsh.w	r3, [r1]
 801a7a2:	f9b0 4000 	ldrsh.w	r4, [r0]
 801a7a6:	8003      	strh	r3, [r0, #0]
 801a7a8:	8893      	ldrh	r3, [r2, #4]
 801a7aa:	3b01      	subs	r3, #1
 801a7ac:	1b1b      	subs	r3, r3, r4
 801a7ae:	800b      	strh	r3, [r1, #0]
 801a7b0:	bd10      	pop	{r4, pc}
 801a7b2:	bf00      	nop
 801a7b4:	2000e404 	.word	0x2000e404

0801a7b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 801a7b8:	4b0b      	ldr	r3, [pc, #44]	@ (801a7e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 801a7ba:	781b      	ldrb	r3, [r3, #0]
 801a7bc:	2b01      	cmp	r3, #1
 801a7be:	d111      	bne.n	801a7e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 801a7c0:	680b      	ldr	r3, [r1, #0]
 801a7c2:	ed90 7a00 	vldr	s14, [r0]
 801a7c6:	6003      	str	r3, [r0, #0]
 801a7c8:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 801a7cc:	eddf 6a07 	vldr	s13, [pc, #28]	@ 801a7ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 801a7d0:	ee07 3a90 	vmov	s15, r3
 801a7d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a7d8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801a7dc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801a7e0:	edc1 7a00 	vstr	s15, [r1]
 801a7e4:	4770      	bx	lr
 801a7e6:	bf00      	nop
 801a7e8:	2000e404 	.word	0x2000e404
 801a7ec:	38d1b717 	.word	0x38d1b717

0801a7f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 801a7f0:	b510      	push	{r4, lr}
 801a7f2:	4b0a      	ldr	r3, [pc, #40]	@ (801a81c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 801a7f4:	781b      	ldrb	r3, [r3, #0]
 801a7f6:	2b01      	cmp	r3, #1
 801a7f8:	460a      	mov	r2, r1
 801a7fa:	d10d      	bne.n	801a818 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 801a7fc:	8881      	ldrh	r1, [r0, #4]
 801a7fe:	8803      	ldrh	r3, [r0, #0]
 801a800:	440b      	add	r3, r1
 801a802:	4601      	mov	r1, r0
 801a804:	3b01      	subs	r3, #1
 801a806:	f821 3b02 	strh.w	r3, [r1], #2
 801a80a:	f7ff ffc3 	bl	801a794 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 801a80e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801a812:	88c2      	ldrh	r2, [r0, #6]
 801a814:	8082      	strh	r2, [r0, #4]
 801a816:	80c3      	strh	r3, [r0, #6]
 801a818:	bd10      	pop	{r4, pc}
 801a81a:	bf00      	nop
 801a81c:	2000e404 	.word	0x2000e404

0801a820 <_ZN8touchgfx11Application13requestRedrawEv>:
 801a820:	4b06      	ldr	r3, [pc, #24]	@ (801a83c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 801a822:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a826:	4b06      	ldr	r3, [pc, #24]	@ (801a840 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 801a828:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 801a82c:	f9b3 3000 	ldrsh.w	r3, [r3]
 801a830:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 801a834:	2100      	movs	r1, #0
 801a836:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 801a83a:	4770      	bx	lr
 801a83c:	2000e400 	.word	0x2000e400
 801a840:	2000e402 	.word	0x2000e402

0801a844 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 801a844:	4b03      	ldr	r3, [pc, #12]	@ (801a854 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 801a846:	6818      	ldr	r0, [r3, #0]
 801a848:	b110      	cbz	r0, 801a850 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801a84a:	6803      	ldr	r3, [r0, #0]
 801a84c:	699b      	ldr	r3, [r3, #24]
 801a84e:	4718      	bx	r3
 801a850:	4770      	bx	lr
 801a852:	bf00      	nop
 801a854:	2000e450 	.word	0x2000e450

0801a858 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 801a858:	4770      	bx	lr
	...

0801a85c <_ZN8touchgfx11Application4drawEv>:
 801a85c:	b507      	push	{r0, r1, r2, lr}
 801a85e:	4b09      	ldr	r3, [pc, #36]	@ (801a884 <_ZN8touchgfx11Application4drawEv+0x28>)
 801a860:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a864:	4b08      	ldr	r3, [pc, #32]	@ (801a888 <_ZN8touchgfx11Application4drawEv+0x2c>)
 801a866:	f8ad 2004 	strh.w	r2, [sp, #4]
 801a86a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801a86e:	f8ad 3006 	strh.w	r3, [sp, #6]
 801a872:	6803      	ldr	r3, [r0, #0]
 801a874:	2100      	movs	r1, #0
 801a876:	9100      	str	r1, [sp, #0]
 801a878:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801a87a:	4669      	mov	r1, sp
 801a87c:	4798      	blx	r3
 801a87e:	b003      	add	sp, #12
 801a880:	f85d fb04 	ldr.w	pc, [sp], #4
 801a884:	2000e400 	.word	0x2000e400
 801a888:	2000e402 	.word	0x2000e402

0801a88c <_ZN8touchgfx11Application10invalidateEv>:
 801a88c:	4b09      	ldr	r3, [pc, #36]	@ (801a8b4 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801a88e:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a892:	4b09      	ldr	r3, [pc, #36]	@ (801a8b8 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 801a894:	b082      	sub	sp, #8
 801a896:	f9b3 3000 	ldrsh.w	r3, [r3]
 801a89a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801a89e:	2100      	movs	r1, #0
 801a8a0:	f8ad 3006 	strh.w	r3, [sp, #6]
 801a8a4:	9100      	str	r1, [sp, #0]
 801a8a6:	6803      	ldr	r3, [r0, #0]
 801a8a8:	aa02      	add	r2, sp, #8
 801a8aa:	e912 0006 	ldmdb	r2, {r1, r2}
 801a8ae:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801a8b0:	b002      	add	sp, #8
 801a8b2:	4718      	bx	r3
 801a8b4:	2000e400 	.word	0x2000e400
 801a8b8:	2000e402 	.word	0x2000e402

0801a8bc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 801a8bc:	4b03      	ldr	r3, [pc, #12]	@ (801a8cc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801a8be:	6818      	ldr	r0, [r3, #0]
 801a8c0:	b110      	cbz	r0, 801a8c8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 801a8c2:	6803      	ldr	r3, [r0, #0]
 801a8c4:	69db      	ldr	r3, [r3, #28]
 801a8c6:	4718      	bx	r3
 801a8c8:	4770      	bx	lr
 801a8ca:	bf00      	nop
 801a8cc:	2000e450 	.word	0x2000e450

0801a8d0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 801a8d0:	4b03      	ldr	r3, [pc, #12]	@ (801a8e0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 801a8d2:	6818      	ldr	r0, [r3, #0]
 801a8d4:	b110      	cbz	r0, 801a8dc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 801a8d6:	6803      	ldr	r3, [r0, #0]
 801a8d8:	6a1b      	ldr	r3, [r3, #32]
 801a8da:	4718      	bx	r3
 801a8dc:	4770      	bx	lr
 801a8de:	bf00      	nop
 801a8e0:	2000e450 	.word	0x2000e450

0801a8e4 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 801a8e4:	2300      	movs	r3, #0
 801a8e6:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 801a8ea:	4770      	bx	lr

0801a8ec <_ZN8touchgfx11Application14handleKeyEventEh>:
 801a8ec:	4b03      	ldr	r3, [pc, #12]	@ (801a8fc <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801a8ee:	6818      	ldr	r0, [r3, #0]
 801a8f0:	b110      	cbz	r0, 801a8f8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 801a8f2:	6803      	ldr	r3, [r0, #0]
 801a8f4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801a8f6:	4718      	bx	r3
 801a8f8:	4770      	bx	lr
 801a8fa:	bf00      	nop
 801a8fc:	2000e450 	.word	0x2000e450

0801a900 <_ZN8touchgfx11ApplicationD1Ev>:
 801a900:	4770      	bx	lr

0801a902 <_ZN8touchgfx11ApplicationD0Ev>:
 801a902:	b510      	push	{r4, lr}
 801a904:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 801a908:	4604      	mov	r4, r0
 801a90a:	f012 ffd0 	bl	802d8ae <_ZdlPvj>
 801a90e:	4620      	mov	r0, r4
 801a910:	bd10      	pop	{r4, pc}

0801a912 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 801a912:	b510      	push	{r4, lr}
 801a914:	f9b1 4000 	ldrsh.w	r4, [r1]
 801a918:	888a      	ldrh	r2, [r1, #4]
 801a91a:	f9b0 3000 	ldrsh.w	r3, [r0]
 801a91e:	4422      	add	r2, r4
 801a920:	b212      	sxth	r2, r2
 801a922:	4293      	cmp	r3, r2
 801a924:	da15      	bge.n	801a952 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801a926:	8882      	ldrh	r2, [r0, #4]
 801a928:	4413      	add	r3, r2
 801a92a:	b21b      	sxth	r3, r3
 801a92c:	429c      	cmp	r4, r3
 801a92e:	da10      	bge.n	801a952 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801a930:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801a934:	88c9      	ldrh	r1, [r1, #6]
 801a936:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801a93a:	4419      	add	r1, r3
 801a93c:	b209      	sxth	r1, r1
 801a93e:	428a      	cmp	r2, r1
 801a940:	da07      	bge.n	801a952 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801a942:	88c0      	ldrh	r0, [r0, #6]
 801a944:	4410      	add	r0, r2
 801a946:	b200      	sxth	r0, r0
 801a948:	4283      	cmp	r3, r0
 801a94a:	bfac      	ite	ge
 801a94c:	2000      	movge	r0, #0
 801a94e:	2001      	movlt	r0, #1
 801a950:	bd10      	pop	{r4, pc}
 801a952:	2000      	movs	r0, #0
 801a954:	e7fc      	b.n	801a950 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0801a956 <_ZN8touchgfx4Rect10restrictToEss>:
 801a956:	f9b0 3000 	ldrsh.w	r3, [r0]
 801a95a:	2b00      	cmp	r3, #0
 801a95c:	b510      	push	{r4, lr}
 801a95e:	da04      	bge.n	801a96a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 801a960:	8884      	ldrh	r4, [r0, #4]
 801a962:	4423      	add	r3, r4
 801a964:	8083      	strh	r3, [r0, #4]
 801a966:	2300      	movs	r3, #0
 801a968:	8003      	strh	r3, [r0, #0]
 801a96a:	f9b0 4000 	ldrsh.w	r4, [r0]
 801a96e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801a972:	1b09      	subs	r1, r1, r4
 801a974:	428b      	cmp	r3, r1
 801a976:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801a97a:	bfc8      	it	gt
 801a97c:	8081      	strhgt	r1, [r0, #4]
 801a97e:	2b00      	cmp	r3, #0
 801a980:	da04      	bge.n	801a98c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 801a982:	88c1      	ldrh	r1, [r0, #6]
 801a984:	440b      	add	r3, r1
 801a986:	80c3      	strh	r3, [r0, #6]
 801a988:	2300      	movs	r3, #0
 801a98a:	8043      	strh	r3, [r0, #2]
 801a98c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801a990:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 801a994:	1a52      	subs	r2, r2, r1
 801a996:	4293      	cmp	r3, r2
 801a998:	bfc8      	it	gt
 801a99a:	80c2      	strhgt	r2, [r0, #6]
 801a99c:	bd10      	pop	{r4, pc}
	...

0801a9a0 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 801a9a0:	b510      	push	{r4, lr}
 801a9a2:	4b10      	ldr	r3, [pc, #64]	@ (801a9e4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 801a9a4:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a9a8:	4b0f      	ldr	r3, [pc, #60]	@ (801a9e8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801a9aa:	460c      	mov	r4, r1
 801a9ac:	4620      	mov	r0, r4
 801a9ae:	f9b3 1000 	ldrsh.w	r1, [r3]
 801a9b2:	f7ff ffd0 	bl	801a956 <_ZN8touchgfx4Rect10restrictToEss>
 801a9b6:	4b0d      	ldr	r3, [pc, #52]	@ (801a9ec <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 801a9b8:	6818      	ldr	r0, [r3, #0]
 801a9ba:	b190      	cbz	r0, 801a9e2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 801a9bc:	6803      	ldr	r3, [r0, #0]
 801a9be:	4621      	mov	r1, r4
 801a9c0:	689b      	ldr	r3, [r3, #8]
 801a9c2:	4798      	blx	r3
 801a9c4:	4b0a      	ldr	r3, [pc, #40]	@ (801a9f0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 801a9c6:	6818      	ldr	r0, [r3, #0]
 801a9c8:	b118      	cbz	r0, 801a9d2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801a9ca:	6803      	ldr	r3, [r0, #0]
 801a9cc:	4621      	mov	r1, r4
 801a9ce:	689b      	ldr	r3, [r3, #8]
 801a9d0:	4798      	blx	r3
 801a9d2:	4b08      	ldr	r3, [pc, #32]	@ (801a9f4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 801a9d4:	6818      	ldr	r0, [r3, #0]
 801a9d6:	6803      	ldr	r3, [r0, #0]
 801a9d8:	4621      	mov	r1, r4
 801a9da:	69db      	ldr	r3, [r3, #28]
 801a9dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a9e0:	4718      	bx	r3
 801a9e2:	bd10      	pop	{r4, pc}
 801a9e4:	2000e402 	.word	0x2000e402
 801a9e8:	2000e400 	.word	0x2000e400
 801a9ec:	2000e450 	.word	0x2000e450
 801a9f0:	2000e44c 	.word	0x2000e44c
 801a9f4:	2000e40c 	.word	0x2000e40c

0801a9f8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 801a9f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a9fa:	4606      	mov	r6, r0
 801a9fc:	4608      	mov	r0, r1
 801a9fe:	460f      	mov	r7, r1
 801aa00:	f7f8 f95b 	bl	8012cba <_ZNK8touchgfx4Rect7isEmptyEv>
 801aa04:	b9e8      	cbnz	r0, 801aa42 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801aa06:	f9b7 5000 	ldrsh.w	r5, [r7]
 801aa0a:	f9b6 4000 	ldrsh.w	r4, [r6]
 801aa0e:	42a5      	cmp	r5, r4
 801aa10:	db17      	blt.n	801aa42 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801aa12:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 801aa16:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801aa1a:	429a      	cmp	r2, r3
 801aa1c:	db11      	blt.n	801aa42 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801aa1e:	88b9      	ldrh	r1, [r7, #4]
 801aa20:	440d      	add	r5, r1
 801aa22:	88b1      	ldrh	r1, [r6, #4]
 801aa24:	440c      	add	r4, r1
 801aa26:	b22d      	sxth	r5, r5
 801aa28:	b224      	sxth	r4, r4
 801aa2a:	42a5      	cmp	r5, r4
 801aa2c:	dc09      	bgt.n	801aa42 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801aa2e:	88f8      	ldrh	r0, [r7, #6]
 801aa30:	4410      	add	r0, r2
 801aa32:	88f2      	ldrh	r2, [r6, #6]
 801aa34:	4413      	add	r3, r2
 801aa36:	b200      	sxth	r0, r0
 801aa38:	b21b      	sxth	r3, r3
 801aa3a:	4298      	cmp	r0, r3
 801aa3c:	bfcc      	ite	gt
 801aa3e:	2000      	movgt	r0, #0
 801aa40:	2001      	movle	r0, #1
 801aa42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801aa44 <_ZN8touchgfx11Application11getInstanceEv>:
 801aa44:	4b01      	ldr	r3, [pc, #4]	@ (801aa4c <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 801aa46:	6818      	ldr	r0, [r3, #0]
 801aa48:	4770      	bx	lr
 801aa4a:	bf00      	nop
 801aa4c:	2000e460 	.word	0x2000e460

0801aa50 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 801aa50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801aa52:	4b10      	ldr	r3, [pc, #64]	@ (801aa94 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 801aa54:	781b      	ldrb	r3, [r3, #0]
 801aa56:	4605      	mov	r5, r0
 801aa58:	b1d3      	cbz	r3, 801aa90 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 801aa5a:	4b0f      	ldr	r3, [pc, #60]	@ (801aa98 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 801aa5c:	4f0f      	ldr	r7, [pc, #60]	@ (801aa9c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 801aa5e:	881c      	ldrh	r4, [r3, #0]
 801aa60:	f100 06ee 	add.w	r6, r0, #238	@ 0xee
 801aa64:	f8b5 312e 	ldrh.w	r3, [r5, #302]	@ 0x12e
 801aa68:	42a3      	cmp	r3, r4
 801aa6a:	d90e      	bls.n	801aa8a <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 801aa6c:	683b      	ldr	r3, [r7, #0]
 801aa6e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 801aa72:	b10a      	cbz	r2, 801aa78 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 801aa74:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 801aa76:	b900      	cbnz	r0, 801aa7a <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 801aa78:	6898      	ldr	r0, [r3, #8]
 801aa7a:	6803      	ldr	r3, [r0, #0]
 801aa7c:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 801aa80:	69db      	ldr	r3, [r3, #28]
 801aa82:	3401      	adds	r4, #1
 801aa84:	4798      	blx	r3
 801aa86:	b2a4      	uxth	r4, r4
 801aa88:	e7ec      	b.n	801aa64 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 801aa8a:	2300      	movs	r3, #0
 801aa8c:	f8a5 312e 	strh.w	r3, [r5, #302]	@ 0x12e
 801aa90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801aa92:	bf00      	nop
 801aa94:	2000e40a 	.word	0x2000e40a
 801aa98:	20000048 	.word	0x20000048
 801aa9c:	2000e40c 	.word	0x2000e40c

0801aaa0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 801aaa0:	b510      	push	{r4, lr}
 801aaa2:	2300      	movs	r3, #0
 801aaa4:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 801aaa8:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 801aaac:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 801aab0:	4604      	mov	r4, r0
 801aab2:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 801aab6:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 801aaba:	429a      	cmp	r2, r3
 801aabc:	d90e      	bls.n	801aadc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 801aabe:	18e2      	adds	r2, r4, r3
 801aac0:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 801aac4:	b122      	cbz	r2, 801aad0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 801aac6:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 801aaca:	6803      	ldr	r3, [r0, #0]
 801aacc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801aace:	4798      	blx	r3
 801aad0:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 801aad4:	3301      	adds	r3, #1
 801aad6:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 801aada:	e7ea      	b.n	801aab2 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 801aadc:	bd10      	pop	{r4, pc}

0801aade <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 801aade:	2300      	movs	r3, #0
 801aae0:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 801aae4:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 801aae8:	30a4      	adds	r0, #164	@ 0xa4
 801aaea:	f802 3b01 	strb.w	r3, [r2], #1
 801aaee:	4282      	cmp	r2, r0
 801aaf0:	d1fb      	bne.n	801aaea <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 801aaf2:	4770      	bx	lr

0801aaf4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 801aaf4:	b570      	push	{r4, r5, r6, lr}
 801aaf6:	4c0b      	ldr	r4, [pc, #44]	@ (801ab24 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 801aaf8:	4605      	mov	r5, r0
 801aafa:	6820      	ldr	r0, [r4, #0]
 801aafc:	460e      	mov	r6, r1
 801aafe:	b110      	cbz	r0, 801ab06 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 801ab00:	6803      	ldr	r3, [r0, #0]
 801ab02:	695b      	ldr	r3, [r3, #20]
 801ab04:	4798      	blx	r3
 801ab06:	1d28      	adds	r0, r5, #4
 801ab08:	f7ff ffe9 	bl	801aade <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801ab0c:	6026      	str	r6, [r4, #0]
 801ab0e:	6833      	ldr	r3, [r6, #0]
 801ab10:	4630      	mov	r0, r6
 801ab12:	68db      	ldr	r3, [r3, #12]
 801ab14:	4798      	blx	r3
 801ab16:	682b      	ldr	r3, [r5, #0]
 801ab18:	4628      	mov	r0, r5
 801ab1a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801ab1c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801ab20:	4718      	bx	r3
 801ab22:	bf00      	nop
 801ab24:	2000e450 	.word	0x2000e450

0801ab28 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 801ab28:	2300      	movs	r3, #0
 801ab2a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 801ab2e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 801ab32:	b5f0      	push	{r4, r5, r6, r7, lr}
 801ab34:	461a      	mov	r2, r3
 801ab36:	461c      	mov	r4, r3
 801ab38:	461d      	mov	r5, r3
 801ab3a:	459c      	cmp	ip, r3
 801ab3c:	dd1a      	ble.n	801ab74 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 801ab3e:	18c6      	adds	r6, r0, r3
 801ab40:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 801ab44:	b16e      	cbz	r6, 801ab62 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 801ab46:	429a      	cmp	r2, r3
 801ab48:	d008      	beq.n	801ab5c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 801ab4a:	fa1f fe82 	uxth.w	lr, r2
 801ab4e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 801ab52:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 801ab56:	1887      	adds	r7, r0, r2
 801ab58:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 801ab5c:	3201      	adds	r2, #1
 801ab5e:	3301      	adds	r3, #1
 801ab60:	e7eb      	b.n	801ab3a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 801ab62:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 801ab66:	4299      	cmp	r1, r3
 801ab68:	bfa8      	it	ge
 801ab6a:	3501      	addge	r5, #1
 801ab6c:	429e      	cmp	r6, r3
 801ab6e:	bfc8      	it	gt
 801ab70:	3401      	addgt	r4, #1
 801ab72:	e7f4      	b.n	801ab5e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 801ab74:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 801ab78:	1b49      	subs	r1, r1, r5
 801ab7a:	1b1b      	subs	r3, r3, r4
 801ab7c:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 801ab80:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 801ab84:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 801ab88:	4293      	cmp	r3, r2
 801ab8a:	dd03      	ble.n	801ab94 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 801ab8c:	3b01      	subs	r3, #1
 801ab8e:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 801ab92:	e7f7      	b.n	801ab84 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 801ab94:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0801ab98 <_ZN8touchgfx11Application15handleTickEventEv>:
 801ab98:	b570      	push	{r4, r5, r6, lr}
 801ab9a:	4d16      	ldr	r5, [pc, #88]	@ (801abf4 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 801ab9c:	4604      	mov	r4, r0
 801ab9e:	6828      	ldr	r0, [r5, #0]
 801aba0:	b140      	cbz	r0, 801abb4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801aba2:	7a03      	ldrb	r3, [r0, #8]
 801aba4:	b933      	cbnz	r3, 801abb4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801aba6:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 801abaa:	6803      	ldr	r3, [r0, #0]
 801abac:	689b      	ldr	r3, [r3, #8]
 801abae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801abb2:	4718      	bx	r3
 801abb4:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 801abb8:	4e0f      	ldr	r6, [pc, #60]	@ (801abf8 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 801abba:	b973      	cbnz	r3, 801abda <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801abbc:	b168      	cbz	r0, 801abda <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801abbe:	7a03      	ldrb	r3, [r0, #8]
 801abc0:	b15b      	cbz	r3, 801abda <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801abc2:	6830      	ldr	r0, [r6, #0]
 801abc4:	b110      	cbz	r0, 801abcc <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 801abc6:	6803      	ldr	r3, [r0, #0]
 801abc8:	691b      	ldr	r3, [r3, #16]
 801abca:	4798      	blx	r3
 801abcc:	6828      	ldr	r0, [r5, #0]
 801abce:	6803      	ldr	r3, [r0, #0]
 801abd0:	68db      	ldr	r3, [r3, #12]
 801abd2:	4798      	blx	r3
 801abd4:	2301      	movs	r3, #1
 801abd6:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 801abda:	3404      	adds	r4, #4
 801abdc:	4620      	mov	r0, r4
 801abde:	f7ff ff5f 	bl	801aaa0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 801abe2:	4620      	mov	r0, r4
 801abe4:	f7ff ffa0 	bl	801ab28 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 801abe8:	6830      	ldr	r0, [r6, #0]
 801abea:	b110      	cbz	r0, 801abf2 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 801abec:	6803      	ldr	r3, [r0, #0]
 801abee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801abf0:	e7dd      	b.n	801abae <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 801abf2:	bd70      	pop	{r4, r5, r6, pc}
 801abf4:	2000e454 	.word	0x2000e454
 801abf8:	2000e450 	.word	0x2000e450

0801abfc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 801abfc:	4603      	mov	r3, r0
 801abfe:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 801ac02:	2200      	movs	r2, #0
 801ac04:	801a      	strh	r2, [r3, #0]
 801ac06:	805a      	strh	r2, [r3, #2]
 801ac08:	809a      	strh	r2, [r3, #4]
 801ac0a:	80da      	strh	r2, [r3, #6]
 801ac0c:	3308      	adds	r3, #8
 801ac0e:	428b      	cmp	r3, r1
 801ac10:	d1f8      	bne.n	801ac04 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 801ac12:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 801ac16:	4770      	bx	lr

0801ac18 <_ZN8touchgfx11ApplicationC1Ev>:
 801ac18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801ac1a:	4606      	mov	r6, r0
 801ac1c:	4b1c      	ldr	r3, [pc, #112]	@ (801ac90 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 801ac1e:	f846 3b04 	str.w	r3, [r6], #4
 801ac22:	4604      	mov	r4, r0
 801ac24:	2500      	movs	r5, #0
 801ac26:	22a8      	movs	r2, #168	@ 0xa8
 801ac28:	2100      	movs	r1, #0
 801ac2a:	4630      	mov	r0, r6
 801ac2c:	f013 ff8d 	bl	802eb4a <memset>
 801ac30:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 801ac34:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 801ac38:	f7ff ffe0 	bl	801abfc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801ac3c:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 801ac40:	f7ff ffdc 	bl	801abfc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801ac44:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 801ac48:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 801ac4c:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 801ac50:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 801ac54:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 801ac58:	490e      	ldr	r1, [pc, #56]	@ (801ac94 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801ac5a:	480f      	ldr	r0, [pc, #60]	@ (801ac98 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 801ac5c:	4f0f      	ldr	r7, [pc, #60]	@ (801ac9c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 801ac5e:	f011 ffb1 	bl	802cbc4 <CRC_Lock>
 801ac62:	4b0f      	ldr	r3, [pc, #60]	@ (801aca0 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 801ac64:	b158      	cbz	r0, 801ac7e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 801ac66:	801d      	strh	r5, [r3, #0]
 801ac68:	4a0e      	ldr	r2, [pc, #56]	@ (801aca4 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 801ac6a:	2300      	movs	r3, #0
 801ac6c:	6013      	str	r3, [r2, #0]
 801ac6e:	4a0e      	ldr	r2, [pc, #56]	@ (801aca8 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 801ac70:	603b      	str	r3, [r7, #0]
 801ac72:	4630      	mov	r0, r6
 801ac74:	6013      	str	r3, [r2, #0]
 801ac76:	f7ff ff32 	bl	801aade <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801ac7a:	4620      	mov	r0, r4
 801ac7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801ac7e:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 801ac82:	2002      	movs	r0, #2
 801ac84:	801a      	strh	r2, [r3, #0]
 801ac86:	6038      	str	r0, [r7, #0]
 801ac88:	f002 f830 	bl	801ccec <_ZN8touchgfx6Screen4drawEv>
 801ac8c:	e7ec      	b.n	801ac68 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 801ac8e:	bf00      	nop
 801ac90:	080330b8 	.word	0x080330b8
 801ac94:	b5e8b5cd 	.word	0xb5e8b5cd
 801ac98:	f407a5c2 	.word	0xf407a5c2
 801ac9c:	2000e450 	.word	0x2000e450
 801aca0:	20000048 	.word	0x20000048
 801aca4:	2000e460 	.word	0x2000e460
 801aca8:	2000e454 	.word	0x2000e454

0801acac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 801acac:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 801acb0:	3b01      	subs	r3, #1
 801acb2:	b29b      	uxth	r3, r3
 801acb4:	428b      	cmp	r3, r1
 801acb6:	b510      	push	{r4, lr}
 801acb8:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 801acbc:	d908      	bls.n	801acd0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801acbe:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801acc2:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 801acc6:	681a      	ldr	r2, [r3, #0]
 801acc8:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 801accc:	685a      	ldr	r2, [r3, #4]
 801acce:	6062      	str	r2, [r4, #4]
 801acd0:	bd10      	pop	{r4, pc}
	...

0801acd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 801acd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801acd8:	4b92      	ldr	r3, [pc, #584]	@ (801af24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x250>)
 801acda:	b08f      	sub	sp, #60	@ 0x3c
 801acdc:	ac0a      	add	r4, sp, #40	@ 0x28
 801acde:	e884 0006 	stmia.w	r4, {r1, r2}
 801ace2:	f9b3 2000 	ldrsh.w	r2, [r3]
 801ace6:	4b90      	ldr	r3, [pc, #576]	@ (801af28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x254>)
 801ace8:	4683      	mov	fp, r0
 801acea:	f9b3 1000 	ldrsh.w	r1, [r3]
 801acee:	4620      	mov	r0, r4
 801acf0:	f7ff fe31 	bl	801a956 <_ZN8touchgfx4Rect10restrictToEss>
 801acf4:	4620      	mov	r0, r4
 801acf6:	f7f7 ffe0 	bl	8012cba <_ZNK8touchgfx4Rect7isEmptyEv>
 801acfa:	2800      	cmp	r0, #0
 801acfc:	d170      	bne.n	801ade0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 801acfe:	4b8b      	ldr	r3, [pc, #556]	@ (801af2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 801ad00:	681b      	ldr	r3, [r3, #0]
 801ad02:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 801ad06:	2b02      	cmp	r3, #2
 801ad08:	d06a      	beq.n	801ade0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 801ad0a:	9403      	str	r4, [sp, #12]
 801ad0c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 801ad10:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 801ad14:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 801ad18:	35a4      	adds	r5, #164	@ 0xa4
 801ad1a:	9301      	str	r3, [sp, #4]
 801ad1c:	b15c      	cbz	r4, 801ad36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 801ad1e:	4629      	mov	r1, r5
 801ad20:	9803      	ldr	r0, [sp, #12]
 801ad22:	f7ff fe69 	bl	801a9f8 <_ZNK8touchgfx4Rect8includesERKS0_>
 801ad26:	3c01      	subs	r4, #1
 801ad28:	b118      	cbz	r0, 801ad32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 801ad2a:	b2a1      	uxth	r1, r4
 801ad2c:	9801      	ldr	r0, [sp, #4]
 801ad2e:	f7ff ffbd 	bl	801acac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801ad32:	3d08      	subs	r5, #8
 801ad34:	e7f2      	b.n	801ad1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 801ad36:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 801ad3a:	f8cd a010 	str.w	sl, [sp, #16]
 801ad3e:	f10a 33ff 	add.w	r3, sl, #4294967295
 801ad42:	9302      	str	r3, [sp, #8]
 801ad44:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 801ad48:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 801ad4c:	9306      	str	r3, [sp, #24]
 801ad4e:	445c      	add	r4, fp
 801ad50:	2500      	movs	r5, #0
 801ad52:	4626      	mov	r6, r4
 801ad54:	f8cd a014 	str.w	sl, [sp, #20]
 801ad58:	462f      	mov	r7, r5
 801ad5a:	9b05      	ldr	r3, [sp, #20]
 801ad5c:	2b00      	cmp	r3, #0
 801ad5e:	d073      	beq.n	801ae48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x174>
 801ad60:	9903      	ldr	r1, [sp, #12]
 801ad62:	4630      	mov	r0, r6
 801ad64:	f7ff fdd5 	bl	801a912 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801ad68:	b350      	cbz	r0, 801adc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 801ad6a:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 801ad6e:	f9b6 c000 	ldrsh.w	ip, [r6]
 801ad72:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 801ad76:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801ad7a:	45e6      	cmp	lr, ip
 801ad7c:	db33      	blt.n	801ade6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 801ad7e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801ad82:	88b3      	ldrh	r3, [r6, #4]
 801ad84:	4472      	add	r2, lr
 801ad86:	4463      	add	r3, ip
 801ad88:	b212      	sxth	r2, r2
 801ad8a:	b21b      	sxth	r3, r3
 801ad8c:	429a      	cmp	r2, r3
 801ad8e:	dc2a      	bgt.n	801ade6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 801ad90:	88f3      	ldrh	r3, [r6, #6]
 801ad92:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 801ad96:	fa1f f289 	uxth.w	r2, r9
 801ad9a:	4413      	add	r3, r2
 801ad9c:	b29b      	uxth	r3, r3
 801ad9e:	45c8      	cmp	r8, r9
 801ada0:	fa1f fc88 	uxth.w	ip, r8
 801ada4:	fa0f fe83 	sxth.w	lr, r3
 801ada8:	db0f      	blt.n	801adca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf6>
 801adaa:	eba3 030c 	sub.w	r3, r3, ip
 801adae:	1ac9      	subs	r1, r1, r3
 801adb0:	b209      	sxth	r1, r1
 801adb2:	2900      	cmp	r1, #0
 801adb4:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 801adb8:	dd12      	ble.n	801ade0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 801adba:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 801adbe:	4605      	mov	r5, r0
 801adc0:	9b05      	ldr	r3, [sp, #20]
 801adc2:	3b01      	subs	r3, #1
 801adc4:	9305      	str	r3, [sp, #20]
 801adc6:	3e08      	subs	r6, #8
 801adc8:	e7c7      	b.n	801ad5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x86>
 801adca:	4461      	add	r1, ip
 801adcc:	b209      	sxth	r1, r1
 801adce:	4571      	cmp	r1, lr
 801add0:	dc38      	bgt.n	801ae44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 801add2:	eba2 020c 	sub.w	r2, r2, ip
 801add6:	b212      	sxth	r2, r2
 801add8:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 801addc:	2a00      	cmp	r2, #0
 801adde:	dcee      	bgt.n	801adbe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801ade0:	b00f      	add	sp, #60	@ 0x3c
 801ade2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ade6:	45c8      	cmp	r8, r9
 801ade8:	db2c      	blt.n	801ae44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 801adea:	88f3      	ldrh	r3, [r6, #6]
 801adec:	4499      	add	r9, r3
 801adee:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 801adf2:	4498      	add	r8, r3
 801adf4:	fa0f f989 	sxth.w	r9, r9
 801adf8:	fa0f f888 	sxth.w	r8, r8
 801adfc:	45c1      	cmp	r9, r8
 801adfe:	db21      	blt.n	801ae44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 801ae00:	88b3      	ldrh	r3, [r6, #4]
 801ae02:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801ae06:	fa1f f28c 	uxth.w	r2, ip
 801ae0a:	4413      	add	r3, r2
 801ae0c:	b29b      	uxth	r3, r3
 801ae0e:	45e6      	cmp	lr, ip
 801ae10:	fa1f f88e 	uxth.w	r8, lr
 801ae14:	fa0f f983 	sxth.w	r9, r3
 801ae18:	db0a      	blt.n	801ae30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15c>
 801ae1a:	eba3 0308 	sub.w	r3, r3, r8
 801ae1e:	1ac9      	subs	r1, r1, r3
 801ae20:	b209      	sxth	r1, r1
 801ae22:	2900      	cmp	r1, #0
 801ae24:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 801ae28:	ddda      	ble.n	801ade0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 801ae2a:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 801ae2e:	e7c6      	b.n	801adbe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801ae30:	4441      	add	r1, r8
 801ae32:	b209      	sxth	r1, r1
 801ae34:	4549      	cmp	r1, r9
 801ae36:	dc05      	bgt.n	801ae44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 801ae38:	eba2 0208 	sub.w	r2, r2, r8
 801ae3c:	b212      	sxth	r2, r2
 801ae3e:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 801ae42:	e7cb      	b.n	801addc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x108>
 801ae44:	4607      	mov	r7, r0
 801ae46:	e7bb      	b.n	801adc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 801ae48:	2d00      	cmp	r5, #0
 801ae4a:	d181      	bne.n	801ad50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7c>
 801ae4c:	2f00      	cmp	r7, #0
 801ae4e:	f000 81df 	beq.w	801b210 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 801ae52:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 801ae56:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 801ae5a:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 801ae5e:	b2b3      	uxth	r3, r6
 801ae60:	9305      	str	r3, [sp, #20]
 801ae62:	9a05      	ldr	r2, [sp, #20]
 801ae64:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 801ae68:	4413      	add	r3, r2
 801ae6a:	b2ba      	uxth	r2, r7
 801ae6c:	4492      	add	sl, r2
 801ae6e:	b29b      	uxth	r3, r3
 801ae70:	fa1f fa8a 	uxth.w	sl, sl
 801ae74:	fa0f f883 	sxth.w	r8, r3
 801ae78:	fa0f f98a 	sxth.w	r9, sl
 801ae7c:	e9cd 2307 	strd	r2, r3, [sp, #28]
 801ae80:	9b04      	ldr	r3, [sp, #16]
 801ae82:	2b00      	cmp	r3, #0
 801ae84:	d054      	beq.n	801af30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>
 801ae86:	9903      	ldr	r1, [sp, #12]
 801ae88:	4620      	mov	r0, r4
 801ae8a:	f7ff fd42 	bl	801a912 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801ae8e:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 801ae92:	b1c0      	cbz	r0, 801aec6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 801ae94:	f9b4 e000 	ldrsh.w	lr, [r4]
 801ae98:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801ae9c:	4576      	cmp	r6, lr
 801ae9e:	dc22      	bgt.n	801aee6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 801aea0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 801aea4:	44f4      	add	ip, lr
 801aea6:	fa0f fc8c 	sxth.w	ip, ip
 801aeaa:	45e0      	cmp	r8, ip
 801aeac:	db1b      	blt.n	801aee6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 801aeae:	428f      	cmp	r7, r1
 801aeb0:	fa1f fc81 	uxth.w	ip, r1
 801aeb4:	88e1      	ldrh	r1, [r4, #6]
 801aeb6:	dc0d      	bgt.n	801aed4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x200>
 801aeb8:	ebaa 0c0c 	sub.w	ip, sl, ip
 801aebc:	eba1 010c 	sub.w	r1, r1, ip
 801aec0:	f8a4 9002 	strh.w	r9, [r4, #2]
 801aec4:	80e1      	strh	r1, [r4, #6]
 801aec6:	4628      	mov	r0, r5
 801aec8:	9904      	ldr	r1, [sp, #16]
 801aeca:	3901      	subs	r1, #1
 801aecc:	9104      	str	r1, [sp, #16]
 801aece:	3c08      	subs	r4, #8
 801aed0:	4605      	mov	r5, r0
 801aed2:	e7d3      	b.n	801ae7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a8>
 801aed4:	4461      	add	r1, ip
 801aed6:	b209      	sxth	r1, r1
 801aed8:	4549      	cmp	r1, r9
 801aeda:	dcf5      	bgt.n	801aec8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801aedc:	eba2 0c0c 	sub.w	ip, r2, ip
 801aee0:	f8a4 c006 	strh.w	ip, [r4, #6]
 801aee4:	e7ef      	b.n	801aec6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 801aee6:	428f      	cmp	r7, r1
 801aee8:	dcee      	bgt.n	801aec8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801aeea:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 801aeee:	4461      	add	r1, ip
 801aef0:	b209      	sxth	r1, r1
 801aef2:	4589      	cmp	r9, r1
 801aef4:	dbe8      	blt.n	801aec8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801aef6:	4576      	cmp	r6, lr
 801aef8:	fa1f fc8e 	uxth.w	ip, lr
 801aefc:	88a1      	ldrh	r1, [r4, #4]
 801aefe:	dc07      	bgt.n	801af10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x23c>
 801af00:	eba3 0c0c 	sub.w	ip, r3, ip
 801af04:	eba1 010c 	sub.w	r1, r1, ip
 801af08:	f8a4 8000 	strh.w	r8, [r4]
 801af0c:	80a1      	strh	r1, [r4, #4]
 801af0e:	e7da      	b.n	801aec6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 801af10:	4461      	add	r1, ip
 801af12:	b209      	sxth	r1, r1
 801af14:	4588      	cmp	r8, r1
 801af16:	dbd7      	blt.n	801aec8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801af18:	9905      	ldr	r1, [sp, #20]
 801af1a:	eba1 0c0c 	sub.w	ip, r1, ip
 801af1e:	f8a4 c004 	strh.w	ip, [r4, #4]
 801af22:	e7d0      	b.n	801aec6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 801af24:	2000e402 	.word	0x2000e402
 801af28:	2000e400 	.word	0x2000e400
 801af2c:	2000e40c 	.word	0x2000e40c
 801af30:	2d00      	cmp	r5, #0
 801af32:	f000 816d 	beq.w	801b210 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 801af36:	9b06      	ldr	r3, [sp, #24]
 801af38:	445b      	add	r3, fp
 801af3a:	461c      	mov	r4, r3
 801af3c:	9b02      	ldr	r3, [sp, #8]
 801af3e:	3301      	adds	r3, #1
 801af40:	f000 8166 	beq.w	801b210 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 801af44:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 801af48:	4629      	mov	r1, r5
 801af4a:	9803      	ldr	r0, [sp, #12]
 801af4c:	f7ff fd54 	bl	801a9f8 <_ZNK8touchgfx4Rect8includesERKS0_>
 801af50:	b120      	cbz	r0, 801af5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x288>
 801af52:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801af56:	9801      	ldr	r0, [sp, #4]
 801af58:	f7ff fea8 	bl	801acac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801af5c:	9903      	ldr	r1, [sp, #12]
 801af5e:	4628      	mov	r0, r5
 801af60:	f7ff fcd7 	bl	801a912 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801af64:	2800      	cmp	r0, #0
 801af66:	f000 809c 	beq.w	801b0a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 801af6a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 801af6e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 801af72:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 801af76:	9309      	str	r3, [sp, #36]	@ 0x24
 801af78:	fa1f f189 	uxth.w	r1, r9
 801af7c:	eb01 0c03 	add.w	ip, r1, r3
 801af80:	fa1f fa8c 	uxth.w	sl, ip
 801af84:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 801af88:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 801af8c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 801af90:	b283      	uxth	r3, r0
 801af92:	eb03 050c 	add.w	r5, r3, ip
 801af96:	b2ad      	uxth	r5, r5
 801af98:	9505      	str	r5, [sp, #20]
 801af9a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801af9e:	9504      	str	r5, [sp, #16]
 801afa0:	4548      	cmp	r0, r9
 801afa2:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 801afa6:	f340 8099 	ble.w	801b0dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 801afaa:	1a5b      	subs	r3, r3, r1
 801afac:	b29b      	uxth	r3, r3
 801afae:	4596      	cmp	lr, r2
 801afb0:	fa0f f08a 	sxth.w	r0, sl
 801afb4:	b21e      	sxth	r6, r3
 801afb6:	dd2e      	ble.n	801b016 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x342>
 801afb8:	9f02      	ldr	r7, [sp, #8]
 801afba:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 801afbe:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 801afc2:	9f04      	ldr	r7, [sp, #16]
 801afc4:	1a3f      	subs	r7, r7, r0
 801afc6:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 801afca:	fa1f fe8e 	uxth.w	lr, lr
 801afce:	b292      	uxth	r2, r2
 801afd0:	ebae 0102 	sub.w	r1, lr, r2
 801afd4:	44a6      	add	lr, r4
 801afd6:	4402      	add	r2, r0
 801afd8:	b289      	uxth	r1, r1
 801afda:	fa0f fe8e 	sxth.w	lr, lr
 801afde:	b212      	sxth	r2, r2
 801afe0:	b20d      	sxth	r5, r1
 801afe2:	ebae 0202 	sub.w	r2, lr, r2
 801afe6:	436f      	muls	r7, r5
 801afe8:	4372      	muls	r2, r6
 801afea:	4297      	cmp	r7, r2
 801afec:	db09      	blt.n	801b002 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32e>
 801afee:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 801aff2:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 801aff6:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801affa:	449c      	add	ip, r3
 801affc:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 801b000:	e684      	b.n	801ad0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801b002:	4421      	add	r1, r4
 801b004:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 801b008:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 801b00c:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 801b010:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801b014:	e67a      	b.n	801ad0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801b016:	9f04      	ldr	r7, [sp, #16]
 801b018:	42b8      	cmp	r0, r7
 801b01a:	da27      	bge.n	801b06c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x398>
 801b01c:	9902      	ldr	r1, [sp, #8]
 801b01e:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 801b022:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 801b026:	eb05 010e 	add.w	r1, r5, lr
 801b02a:	fa1f f881 	uxth.w	r8, r1
 801b02e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 801b032:	4411      	add	r1, r2
 801b034:	eba1 0108 	sub.w	r1, r1, r8
 801b038:	b289      	uxth	r1, r1
 801b03a:	fa0f f988 	sxth.w	r9, r8
 801b03e:	eba2 020e 	sub.w	r2, r2, lr
 801b042:	fa0f f881 	sxth.w	r8, r1
 801b046:	1a3f      	subs	r7, r7, r0
 801b048:	4372      	muls	r2, r6
 801b04a:	fb08 f707 	mul.w	r7, r8, r7
 801b04e:	42ba      	cmp	r2, r7
 801b050:	dc06      	bgt.n	801b060 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38c>
 801b052:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 801b056:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 801b05a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 801b05e:	e7ca      	b.n	801aff6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 801b060:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 801b064:	4429      	add	r1, r5
 801b066:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 801b06a:	e64f      	b.n	801ad0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801b06c:	9805      	ldr	r0, [sp, #20]
 801b06e:	ebaa 0000 	sub.w	r0, sl, r0
 801b072:	b280      	uxth	r0, r0
 801b074:	2d06      	cmp	r5, #6
 801b076:	fa0f fe80 	sxth.w	lr, r0
 801b07a:	d817      	bhi.n	801b0ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d8>
 801b07c:	9b04      	ldr	r3, [sp, #16]
 801b07e:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 801b082:	1c6b      	adds	r3, r5, #1
 801b084:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 801b088:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 801b08c:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 801b090:	9b01      	ldr	r3, [sp, #4]
 801b092:	9801      	ldr	r0, [sp, #4]
 801b094:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801b098:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801b09c:	805a      	strh	r2, [r3, #2]
 801b09e:	809e      	strh	r6, [r3, #4]
 801b0a0:	80d9      	strh	r1, [r3, #6]
 801b0a2:	9b02      	ldr	r3, [sp, #8]
 801b0a4:	3b01      	subs	r3, #1
 801b0a6:	9302      	str	r3, [sp, #8]
 801b0a8:	3c08      	subs	r4, #8
 801b0aa:	e747      	b.n	801af3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x268>
 801b0ac:	9a02      	ldr	r2, [sp, #8]
 801b0ae:	45b6      	cmp	lr, r6
 801b0b0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801b0b4:	db0d      	blt.n	801b0d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fe>
 801b0b6:	449c      	add	ip, r3
 801b0b8:	fa1f fc8c 	uxth.w	ip, ip
 801b0bc:	445a      	add	r2, fp
 801b0be:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 801b0c2:	448c      	add	ip, r1
 801b0c4:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 801b0c8:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 801b0cc:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 801b0d0:	e61c      	b.n	801ad0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801b0d2:	445a      	add	r2, fp
 801b0d4:	4484      	add	ip, r0
 801b0d6:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 801b0da:	e78f      	b.n	801affc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 801b0dc:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 801b0e0:	fa1f f18e 	uxth.w	r1, lr
 801b0e4:	eb01 0806 	add.w	r8, r1, r6
 801b0e8:	b293      	uxth	r3, r2
 801b0ea:	fa1f f888 	uxth.w	r8, r8
 801b0ee:	9306      	str	r3, [sp, #24]
 801b0f0:	fa0f f388 	sxth.w	r3, r8
 801b0f4:	9307      	str	r3, [sp, #28]
 801b0f6:	9f06      	ldr	r7, [sp, #24]
 801b0f8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 801b0fc:	443b      	add	r3, r7
 801b0fe:	b29b      	uxth	r3, r3
 801b100:	4596      	cmp	lr, r2
 801b102:	9308      	str	r3, [sp, #32]
 801b104:	da24      	bge.n	801b150 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 801b106:	9905      	ldr	r1, [sp, #20]
 801b108:	eba3 0308 	sub.w	r3, r3, r8
 801b10c:	ebaa 0401 	sub.w	r4, sl, r1
 801b110:	b2a4      	uxth	r4, r4
 801b112:	b29b      	uxth	r3, r3
 801b114:	b225      	sxth	r5, r4
 801b116:	b219      	sxth	r1, r3
 801b118:	eba2 020e 	sub.w	r2, r2, lr
 801b11c:	eba9 0000 	sub.w	r0, r9, r0
 801b120:	436a      	muls	r2, r5
 801b122:	4348      	muls	r0, r1
 801b124:	4282      	cmp	r2, r0
 801b126:	9a02      	ldr	r2, [sp, #8]
 801b128:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801b12c:	445a      	add	r2, fp
 801b12e:	dc06      	bgt.n	801b13e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 801b130:	9b07      	ldr	r3, [sp, #28]
 801b132:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 801b136:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 801b13a:	44a4      	add	ip, r4
 801b13c:	e75e      	b.n	801affc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 801b13e:	9904      	ldr	r1, [sp, #16]
 801b140:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 801b144:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 801b148:	4433      	add	r3, r6
 801b14a:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801b14e:	e5dd      	b.n	801ad0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801b150:	9f06      	ldr	r7, [sp, #24]
 801b152:	9b04      	ldr	r3, [sp, #16]
 801b154:	1bc9      	subs	r1, r1, r7
 801b156:	fa0f f78a 	sxth.w	r7, sl
 801b15a:	b289      	uxth	r1, r1
 801b15c:	429f      	cmp	r7, r3
 801b15e:	fa0f fe81 	sxth.w	lr, r1
 801b162:	dd23      	ble.n	801b1ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d8>
 801b164:	9a05      	ldr	r2, [sp, #20]
 801b166:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801b16a:	9d07      	ldr	r5, [sp, #28]
 801b16c:	ebaa 0202 	sub.w	r2, sl, r2
 801b170:	b292      	uxth	r2, r2
 801b172:	eba5 0a03 	sub.w	sl, r5, r3
 801b176:	b214      	sxth	r4, r2
 801b178:	eba9 0000 	sub.w	r0, r9, r0
 801b17c:	9b02      	ldr	r3, [sp, #8]
 801b17e:	fb0e f000 	mul.w	r0, lr, r0
 801b182:	fb04 fa0a 	mul.w	sl, r4, sl
 801b186:	00db      	lsls	r3, r3, #3
 801b188:	4550      	cmp	r0, sl
 801b18a:	445b      	add	r3, fp
 801b18c:	db03      	blt.n	801b196 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
 801b18e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 801b192:	4494      	add	ip, r2
 801b194:	e732      	b.n	801affc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 801b196:	9a04      	ldr	r2, [sp, #16]
 801b198:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 801b19c:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 801b1a0:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 801b1a4:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801b1a8:	4431      	add	r1, r6
 801b1aa:	e75c      	b.n	801b066 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x392>
 801b1ac:	9b08      	ldr	r3, [sp, #32]
 801b1ae:	eba3 0308 	sub.w	r3, r3, r8
 801b1b2:	b29b      	uxth	r3, r3
 801b1b4:	2d06      	cmp	r5, #6
 801b1b6:	b218      	sxth	r0, r3
 801b1b8:	d813      	bhi.n	801b1e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50e>
 801b1ba:	9b07      	ldr	r3, [sp, #28]
 801b1bc:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 801b1c0:	1c6b      	adds	r3, r5, #1
 801b1c2:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 801b1c6:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 801b1ca:	9b01      	ldr	r3, [sp, #4]
 801b1cc:	9901      	ldr	r1, [sp, #4]
 801b1ce:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801b1d2:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 801b1d6:	805a      	strh	r2, [r3, #2]
 801b1d8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801b1da:	809a      	strh	r2, [r3, #4]
 801b1dc:	f8a3 e006 	strh.w	lr, [r3, #6]
 801b1e0:	e75f      	b.n	801b0a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 801b1e2:	9c02      	ldr	r4, [sp, #8]
 801b1e4:	4570      	cmp	r0, lr
 801b1e6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 801b1ea:	db0d      	blt.n	801b208 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x534>
 801b1ec:	4431      	add	r1, r6
 801b1ee:	9b06      	ldr	r3, [sp, #24]
 801b1f0:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801b1f4:	b289      	uxth	r1, r1
 801b1f6:	445c      	add	r4, fp
 801b1f8:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 801b1fc:	4419      	add	r1, r3
 801b1fe:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 801b202:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 801b206:	e581      	b.n	801ad0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801b208:	445c      	add	r4, fp
 801b20a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 801b20e:	e79b      	b.n	801b148 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 801b210:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 801b214:	1e65      	subs	r5, r4, #1
 801b216:	b2ad      	uxth	r5, r5
 801b218:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 801b21c:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 801b220:	42b5      	cmp	r5, r6
 801b222:	d044      	beq.n	801b2ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5da>
 801b224:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801b228:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 801b22c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801b230:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 801b234:	4282      	cmp	r2, r0
 801b236:	d11f      	bne.n	801b278 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 801b238:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 801b23c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 801b240:	459c      	cmp	ip, r3
 801b242:	d119      	bne.n	801b278 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 801b244:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 801b248:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801b24c:	19d8      	adds	r0, r3, r7
 801b24e:	b200      	sxth	r0, r0
 801b250:	4288      	cmp	r0, r1
 801b252:	d109      	bne.n	801b268 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 801b254:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 801b258:	4413      	add	r3, r2
 801b25a:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 801b25e:	4629      	mov	r1, r5
 801b260:	9801      	ldr	r0, [sp, #4]
 801b262:	f7ff fd23 	bl	801acac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801b266:	e003      	b.n	801b270 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 801b268:	4411      	add	r1, r2
 801b26a:	b209      	sxth	r1, r1
 801b26c:	42b9      	cmp	r1, r7
 801b26e:	d0f3      	beq.n	801b258 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 801b270:	3d01      	subs	r5, #1
 801b272:	b2ad      	uxth	r5, r5
 801b274:	3c08      	subs	r4, #8
 801b276:	e7d3      	b.n	801b220 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54c>
 801b278:	42b9      	cmp	r1, r7
 801b27a:	d1f9      	bne.n	801b270 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 801b27c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 801b280:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 801b284:	4299      	cmp	r1, r3
 801b286:	d1f3      	bne.n	801b270 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 801b288:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 801b28c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 801b290:	181f      	adds	r7, r3, r0
 801b292:	b23f      	sxth	r7, r7
 801b294:	42ba      	cmp	r2, r7
 801b296:	d105      	bne.n	801b2a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5d0>
 801b298:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 801b29c:	440b      	add	r3, r1
 801b29e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801b2a2:	e7dc      	b.n	801b25e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58a>
 801b2a4:	440a      	add	r2, r1
 801b2a6:	b212      	sxth	r2, r2
 801b2a8:	4290      	cmp	r0, r2
 801b2aa:	d1e1      	bne.n	801b270 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 801b2ac:	e7f6      	b.n	801b29c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c8>
 801b2ae:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 801b2b2:	2e07      	cmp	r6, #7
 801b2b4:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 801b2b8:	d812      	bhi.n	801b2e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60c>
 801b2ba:	1c75      	adds	r5, r6, #1
 801b2bc:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 801b2c0:	9d01      	ldr	r5, [sp, #4]
 801b2c2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 801b2c6:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 801b2ca:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801b2ce:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 801b2d2:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 801b2d6:	442c      	add	r4, r5
 801b2d8:	8061      	strh	r1, [r4, #2]
 801b2da:	80a2      	strh	r2, [r4, #4]
 801b2dc:	80e3      	strh	r3, [r4, #6]
 801b2de:	e57f      	b.n	801ade0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 801b2e0:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 801b2e4:	3e01      	subs	r6, #1
 801b2e6:	445c      	add	r4, fp
 801b2e8:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 801b2ec:	f04f 37ff 	mov.w	r7, #4294967295
 801b2f0:	2500      	movs	r5, #0
 801b2f2:	9305      	str	r3, [sp, #20]
 801b2f4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 801b2f8:	9302      	str	r3, [sp, #8]
 801b2fa:	1e72      	subs	r2, r6, #1
 801b2fc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 801b300:	9304      	str	r3, [sp, #16]
 801b302:	4691      	mov	r9, r2
 801b304:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 801b308:	f1b9 3fff 	cmp.w	r9, #4294967295
 801b30c:	bf14      	ite	ne
 801b30e:	9905      	ldrne	r1, [sp, #20]
 801b310:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 801b314:	6818      	ldr	r0, [r3, #0]
 801b316:	9207      	str	r2, [sp, #28]
 801b318:	bf18      	it	ne
 801b31a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801b31e:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 801b322:	f8be 1006 	ldrh.w	r1, [lr, #6]
 801b326:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801b32a:	9306      	str	r3, [sp, #24]
 801b32c:	fb18 f801 	smulbb	r8, r8, r1
 801b330:	6859      	ldr	r1, [r3, #4]
 801b332:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801b336:	4671      	mov	r1, lr
 801b338:	a80c      	add	r0, sp, #48	@ 0x30
 801b33a:	f7fa fe4b 	bl	8015fd4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801b33e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 801b342:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 801b346:	9b04      	ldr	r3, [sp, #16]
 801b348:	9a02      	ldr	r2, [sp, #8]
 801b34a:	fb10 f001 	smulbb	r0, r0, r1
 801b34e:	fb02 8803 	mla	r8, r2, r3, r8
 801b352:	eba0 0108 	sub.w	r1, r0, r8
 801b356:	f04f 0c08 	mov.w	ip, #8
 801b35a:	fb90 f0fc 	sdiv	r0, r0, ip
 801b35e:	4288      	cmp	r0, r1
 801b360:	dc20      	bgt.n	801b3a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 801b362:	4551      	cmp	r1, sl
 801b364:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 801b368:	da03      	bge.n	801b372 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x69e>
 801b36a:	b1d9      	cbz	r1, 801b3a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 801b36c:	468a      	mov	sl, r1
 801b36e:	464f      	mov	r7, r9
 801b370:	4635      	mov	r5, r6
 801b372:	f109 39ff 	add.w	r9, r9, #4294967295
 801b376:	f119 0f02 	cmn.w	r9, #2
 801b37a:	d1c5      	bne.n	801b308 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x634>
 801b37c:	4616      	mov	r6, r2
 801b37e:	3201      	adds	r2, #1
 801b380:	f1a4 0408 	sub.w	r4, r4, #8
 801b384:	d1b6      	bne.n	801b2f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
 801b386:	9b01      	ldr	r3, [sp, #4]
 801b388:	b2ac      	uxth	r4, r5
 801b38a:	00ed      	lsls	r5, r5, #3
 801b38c:	1958      	adds	r0, r3, r5
 801b38e:	1c7b      	adds	r3, r7, #1
 801b390:	d10b      	bne.n	801b3aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d6>
 801b392:	4601      	mov	r1, r0
 801b394:	9803      	ldr	r0, [sp, #12]
 801b396:	f7fa fe1d 	bl	8015fd4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801b39a:	4621      	mov	r1, r4
 801b39c:	9801      	ldr	r0, [sp, #4]
 801b39e:	f7ff fc85 	bl	801acac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801b3a2:	e4b3      	b.n	801ad0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801b3a4:	464f      	mov	r7, r9
 801b3a6:	4635      	mov	r5, r6
 801b3a8:	e7ed      	b.n	801b386 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b2>
 801b3aa:	9b01      	ldr	r3, [sp, #4]
 801b3ac:	00ff      	lsls	r7, r7, #3
 801b3ae:	19d9      	adds	r1, r3, r7
 801b3b0:	f7fa fe10 	bl	8015fd4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801b3b4:	9b03      	ldr	r3, [sp, #12]
 801b3b6:	cb03      	ldmia	r3!, {r0, r1}
 801b3b8:	445f      	add	r7, fp
 801b3ba:	445d      	add	r5, fp
 801b3bc:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 801b3c0:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 801b3c4:	f855 0fac 	ldr.w	r0, [r5, #172]!
 801b3c8:	9b03      	ldr	r3, [sp, #12]
 801b3ca:	6869      	ldr	r1, [r5, #4]
 801b3cc:	c303      	stmia	r3!, {r0, r1}
 801b3ce:	e7e4      	b.n	801b39a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>

0801b3d0 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 801b3d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b3d4:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 801b3d8:	b0a1      	sub	sp, #132	@ 0x84
 801b3da:	4604      	mov	r4, r0
 801b3dc:	4630      	mov	r0, r6
 801b3de:	f7f7 fc6c 	bl	8012cba <_ZNK8touchgfx4Rect7isEmptyEv>
 801b3e2:	4605      	mov	r5, r0
 801b3e4:	b948      	cbnz	r0, 801b3fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 801b3e6:	6823      	ldr	r3, [r4, #0]
 801b3e8:	e896 0006 	ldmia.w	r6, {r1, r2}
 801b3ec:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801b3ee:	4620      	mov	r0, r4
 801b3f0:	4798      	blx	r3
 801b3f2:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 801b3f6:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 801b3fa:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 801b3fe:	2b00      	cmp	r3, #0
 801b400:	d149      	bne.n	801b496 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc6>
 801b402:	4bb1      	ldr	r3, [pc, #708]	@ (801b6c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 801b404:	681b      	ldr	r3, [r3, #0]
 801b406:	f893 7048 	ldrb.w	r7, [r3, #72]	@ 0x48
 801b40a:	1ebb      	subs	r3, r7, #2
 801b40c:	425f      	negs	r7, r3
 801b40e:	415f      	adcs	r7, r3
 801b410:	4bae      	ldr	r3, [pc, #696]	@ (801b6cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
 801b412:	681b      	ldr	r3, [r3, #0]
 801b414:	2b00      	cmp	r3, #0
 801b416:	d040      	beq.n	801b49a <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 801b418:	4dad      	ldr	r5, [pc, #692]	@ (801b6d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x300>)
 801b41a:	4628      	mov	r0, r5
 801b41c:	f7f7 fc4d 	bl	8012cba <_ZNK8touchgfx4Rect7isEmptyEv>
 801b420:	4606      	mov	r6, r0
 801b422:	2800      	cmp	r0, #0
 801b424:	d139      	bne.n	801b49a <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 801b426:	4628      	mov	r0, r5
 801b428:	f7ff f984 	bl	801a734 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801b42c:	6823      	ldr	r3, [r4, #0]
 801b42e:	6829      	ldr	r1, [r5, #0]
 801b430:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801b432:	686a      	ldr	r2, [r5, #4]
 801b434:	4620      	mov	r0, r4
 801b436:	4798      	blx	r3
 801b438:	802e      	strh	r6, [r5, #0]
 801b43a:	806e      	strh	r6, [r5, #2]
 801b43c:	80ae      	strh	r6, [r5, #4]
 801b43e:	80ee      	strh	r6, [r5, #6]
 801b440:	af0f      	add	r7, sp, #60	@ 0x3c
 801b442:	4ea4      	ldr	r6, [pc, #656]	@ (801b6d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x304>)
 801b444:	4638      	mov	r0, r7
 801b446:	f7ff fbd9 	bl	801abfc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801b44a:	8835      	ldrh	r5, [r6, #0]
 801b44c:	f8b4 c0ec 	ldrh.w	ip, [r4, #236]	@ 0xec
 801b450:	462b      	mov	r3, r5
 801b452:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 801b456:	4563      	cmp	r3, ip
 801b458:	d224      	bcs.n	801b4a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 801b45a:	f8bd 107c 	ldrh.w	r1, [sp, #124]	@ 0x7c
 801b45e:	2907      	cmp	r1, #7
 801b460:	d816      	bhi.n	801b490 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 801b462:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 801b466:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 801b46a:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801b46e:	f9b2 8004 	ldrsh.w	r8, [r2, #4]
 801b472:	f9b2 e006 	ldrsh.w	lr, [r2, #6]
 801b476:	1c4a      	adds	r2, r1, #1
 801b478:	f8ad 207c 	strh.w	r2, [sp, #124]	@ 0x7c
 801b47c:	eb07 02c1 	add.w	r2, r7, r1, lsl #3
 801b480:	f827 9031 	strh.w	r9, [r7, r1, lsl #3]
 801b484:	f8a2 a002 	strh.w	sl, [r2, #2]
 801b488:	f8a2 8004 	strh.w	r8, [r2, #4]
 801b48c:	f8a2 e006 	strh.w	lr, [r2, #6]
 801b490:	3301      	adds	r3, #1
 801b492:	b29b      	uxth	r3, r3
 801b494:	e7df      	b.n	801b456 <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 801b496:	2701      	movs	r7, #1
 801b498:	e7ba      	b.n	801b410 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40>
 801b49a:	2f00      	cmp	r7, #0
 801b49c:	d1d0      	bne.n	801b440 <_ZN8touchgfx11Application15drawCachedAreasEv+0x70>
 801b49e:	b021      	add	sp, #132	@ 0x84
 801b4a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b4a4:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 801b4a8:	42ab      	cmp	r3, r5
 801b4aa:	d90c      	bls.n	801b4c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xf6>
 801b4ac:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 801b4b0:	6822      	ldr	r2, [r4, #0]
 801b4b2:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 801b4b6:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 801b4b8:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 801b4bc:	4620      	mov	r0, r4
 801b4be:	3501      	adds	r5, #1
 801b4c0:	47b8      	blx	r7
 801b4c2:	b2ad      	uxth	r5, r5
 801b4c4:	e7ee      	b.n	801b4a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 801b4c6:	4d80      	ldr	r5, [pc, #512]	@ (801b6c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 801b4c8:	6828      	ldr	r0, [r5, #0]
 801b4ca:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 801b4ce:	2b01      	cmp	r3, #1
 801b4d0:	f040 813b 	bne.w	801b74a <_ZN8touchgfx11Application15drawCachedAreasEv+0x37a>
 801b4d4:	4a80      	ldr	r2, [pc, #512]	@ (801b6d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x308>)
 801b4d6:	8833      	ldrh	r3, [r6, #0]
 801b4d8:	7812      	ldrb	r2, [r2, #0]
 801b4da:	f8b4 00ec 	ldrh.w	r0, [r4, #236]	@ 0xec
 801b4de:	2a01      	cmp	r2, #1
 801b4e0:	d014      	beq.n	801b50c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 801b4e2:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
 801b4e6:	32ae      	adds	r2, #174	@ 0xae
 801b4e8:	f04f 0900 	mov.w	r9, #0
 801b4ec:	4283      	cmp	r3, r0
 801b4ee:	f102 0208 	add.w	r2, r2, #8
 801b4f2:	f280 8082 	bge.w	801b5fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 801b4f6:	f832 1c04 	ldrh.w	r1, [r2, #-4]
 801b4fa:	f832 7c08 	ldrh.w	r7, [r2, #-8]
 801b4fe:	4439      	add	r1, r7
 801b500:	b209      	sxth	r1, r1
 801b502:	4589      	cmp	r9, r1
 801b504:	bfb8      	it	lt
 801b506:	4689      	movlt	r9, r1
 801b508:	3301      	adds	r3, #1
 801b50a:	e7ef      	b.n	801b4ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x11c>
 801b50c:	4f73      	ldr	r7, [pc, #460]	@ (801b6dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>)
 801b50e:	883a      	ldrh	r2, [r7, #0]
 801b510:	4693      	mov	fp, r2
 801b512:	4283      	cmp	r3, r0
 801b514:	da08      	bge.n	801b528 <_ZN8touchgfx11Application15drawCachedAreasEv+0x158>
 801b516:	eb04 01c3 	add.w	r1, r4, r3, lsl #3
 801b51a:	3301      	adds	r3, #1
 801b51c:	f9b1 10ac 	ldrsh.w	r1, [r1, #172]	@ 0xac
 801b520:	458b      	cmp	fp, r1
 801b522:	bfa8      	it	ge
 801b524:	468b      	movge	fp, r1
 801b526:	e7f4      	b.n	801b512 <_ZN8touchgfx11Application15drawCachedAreasEv+0x142>
 801b528:	2300      	movs	r3, #0
 801b52a:	2a0f      	cmp	r2, #15
 801b52c:	f8df 91b0 	ldr.w	r9, [pc, #432]	@ 801b6e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
 801b530:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 801b534:	bf8c      	ite	hi
 801b536:	ea4f 08d2 	movhi.w	r8, r2, lsr #3
 801b53a:	f04f 0801 	movls.w	r8, #1
 801b53e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801b542:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801b546:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801b54a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801b54e:	6828      	ldr	r0, [r5, #0]
 801b550:	455b      	cmp	r3, fp
 801b552:	f340 80c7 	ble.w	801b6e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 801b556:	6803      	ldr	r3, [r0, #0]
 801b558:	f8b7 a000 	ldrh.w	sl, [r7]
 801b55c:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 801b560:	4798      	blx	r3
 801b562:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801b566:	682b      	ldr	r3, [r5, #0]
 801b568:	ebaa 0000 	sub.w	r0, sl, r0
 801b56c:	b280      	uxth	r0, r0
 801b56e:	ebac 0e08 	sub.w	lr, ip, r8
 801b572:	4570      	cmp	r0, lr
 801b574:	f893 107c 	ldrb.w	r1, [r3, #124]	@ 0x7c
 801b578:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
 801b57c:	dd05      	ble.n	801b58a <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 801b57e:	4558      	cmp	r0, fp
 801b580:	dd03      	ble.n	801b58a <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 801b582:	b901      	cbnz	r1, 801b586 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 801b584:	b392      	cbz	r2, 801b5ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x21c>
 801b586:	4658      	mov	r0, fp
 801b588:	e006      	b.n	801b598 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1c8>
 801b58a:	2900      	cmp	r1, #0
 801b58c:	d1fb      	bne.n	801b586 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 801b58e:	2a00      	cmp	r2, #0
 801b590:	d1f9      	bne.n	801b586 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 801b592:	4558      	cmp	r0, fp
 801b594:	bfb8      	it	lt
 801b596:	4658      	movlt	r0, fp
 801b598:	f9b9 3000 	ldrsh.w	r3, [r9]
 801b59c:	f8ad 002c 	strh.w	r0, [sp, #44]	@ 0x2c
 801b5a0:	2200      	movs	r2, #0
 801b5a2:	ebac 0000 	sub.w	r0, ip, r0
 801b5a6:	f8b6 a000 	ldrh.w	sl, [r6]
 801b5aa:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 801b5ae:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801b5b2:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801b5b6:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 801b5ba:	4553      	cmp	r3, sl
 801b5bc:	ddc5      	ble.n	801b54a <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 801b5be:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 801b5c2:	ab0d      	add	r3, sp, #52	@ 0x34
 801b5c4:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801b5c8:	6851      	ldr	r1, [r2, #4]
 801b5ca:	c303      	stmia	r3!, {r0, r1}
 801b5cc:	a80d      	add	r0, sp, #52	@ 0x34
 801b5ce:	a90b      	add	r1, sp, #44	@ 0x2c
 801b5d0:	f7f7 fb30 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 801b5d4:	a80d      	add	r0, sp, #52	@ 0x34
 801b5d6:	f7f7 fb70 	bl	8012cba <_ZNK8touchgfx4Rect7isEmptyEv>
 801b5da:	b920      	cbnz	r0, 801b5e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x216>
 801b5dc:	6823      	ldr	r3, [r4, #0]
 801b5de:	a90d      	add	r1, sp, #52	@ 0x34
 801b5e0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801b5e2:	4620      	mov	r0, r4
 801b5e4:	4798      	blx	r3
 801b5e6:	f10a 0a01 	add.w	sl, sl, #1
 801b5ea:	e7e4      	b.n	801b5b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1e6>
 801b5ec:	681a      	ldr	r2, [r3, #0]
 801b5ee:	2101      	movs	r1, #1
 801b5f0:	f8d2 20a4 	ldr.w	r2, [r2, #164]	@ 0xa4
 801b5f4:	4618      	mov	r0, r3
 801b5f6:	4790      	blx	r2
 801b5f8:	e7a7      	b.n	801b54a <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 801b5fa:	4b39      	ldr	r3, [pc, #228]	@ (801b6e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>)
 801b5fc:	f8df 80dc 	ldr.w	r8, [pc, #220]	@ 801b6dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>
 801b600:	881f      	ldrh	r7, [r3, #0]
 801b602:	2300      	movs	r3, #0
 801b604:	e9cd 330b 	strd	r3, r3, [sp, #44]	@ 0x2c
 801b608:	2f0f      	cmp	r7, #15
 801b60a:	bf8c      	ite	hi
 801b60c:	08ff      	lsrhi	r7, r7, #3
 801b60e:	2701      	movls	r7, #1
 801b610:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801b614:	f8bd 202e 	ldrh.w	r2, [sp, #46]	@ 0x2e
 801b618:	6828      	ldr	r0, [r5, #0]
 801b61a:	4413      	add	r3, r2
 801b61c:	b21b      	sxth	r3, r3
 801b61e:	454b      	cmp	r3, r9
 801b620:	da60      	bge.n	801b6e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 801b622:	6803      	ldr	r3, [r0, #0]
 801b624:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 801b628:	4798      	blx	r3
 801b62a:	f8bd e02e 	ldrh.w	lr, [sp, #46]	@ 0x2e
 801b62e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801b632:	682a      	ldr	r2, [r5, #0]
 801b634:	4473      	add	r3, lr
 801b636:	b21b      	sxth	r3, r3
 801b638:	eb03 0e07 	add.w	lr, r3, r7
 801b63c:	4570      	cmp	r0, lr
 801b63e:	f892 c07c 	ldrb.w	ip, [r2, #124]	@ 0x7c
 801b642:	f892 106a 	ldrb.w	r1, [r2, #106]	@ 0x6a
 801b646:	da0d      	bge.n	801b664 <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 801b648:	4548      	cmp	r0, r9
 801b64a:	da0b      	bge.n	801b664 <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 801b64c:	f1bc 0f00 	cmp.w	ip, #0
 801b650:	d138      	bne.n	801b6c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 801b652:	2900      	cmp	r1, #0
 801b654:	d136      	bne.n	801b6c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 801b656:	6813      	ldr	r3, [r2, #0]
 801b658:	2101      	movs	r1, #1
 801b65a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 801b65e:	4610      	mov	r0, r2
 801b660:	4798      	blx	r3
 801b662:	e7d5      	b.n	801b610 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 801b664:	f1bc 0f00 	cmp.w	ip, #0
 801b668:	d12c      	bne.n	801b6c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 801b66a:	bb59      	cbnz	r1, 801b6c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 801b66c:	4548      	cmp	r0, r9
 801b66e:	bfa8      	it	ge
 801b670:	4648      	movge	r0, r9
 801b672:	f9b8 2000 	ldrsh.w	r2, [r8]
 801b676:	f8b6 a000 	ldrh.w	sl, [r6]
 801b67a:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801b67e:	2100      	movs	r1, #0
 801b680:	1ac0      	subs	r0, r0, r3
 801b682:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 801b686:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801b68a:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
 801b68e:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 801b692:	4553      	cmp	r3, sl
 801b694:	ddbc      	ble.n	801b610 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 801b696:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 801b69a:	ab0d      	add	r3, sp, #52	@ 0x34
 801b69c:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801b6a0:	6851      	ldr	r1, [r2, #4]
 801b6a2:	c303      	stmia	r3!, {r0, r1}
 801b6a4:	a80d      	add	r0, sp, #52	@ 0x34
 801b6a6:	a90b      	add	r1, sp, #44	@ 0x2c
 801b6a8:	f7f7 fac4 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 801b6ac:	a80d      	add	r0, sp, #52	@ 0x34
 801b6ae:	f7f7 fb04 	bl	8012cba <_ZNK8touchgfx4Rect7isEmptyEv>
 801b6b2:	b920      	cbnz	r0, 801b6be <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ee>
 801b6b4:	6823      	ldr	r3, [r4, #0]
 801b6b6:	a90d      	add	r1, sp, #52	@ 0x34
 801b6b8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801b6ba:	4620      	mov	r0, r4
 801b6bc:	4798      	blx	r3
 801b6be:	f10a 0a01 	add.w	sl, sl, #1
 801b6c2:	e7e4      	b.n	801b68e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2be>
 801b6c4:	4648      	mov	r0, r9
 801b6c6:	e7d4      	b.n	801b672 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a2>
 801b6c8:	2000e40c 	.word	0x2000e40c
 801b6cc:	2000e44c 	.word	0x2000e44c
 801b6d0:	2000e458 	.word	0x2000e458
 801b6d4:	20000048 	.word	0x20000048
 801b6d8:	2000e404 	.word	0x2000e404
 801b6dc:	2000e400 	.word	0x2000e400
 801b6e0:	2000e402 	.word	0x2000e402
 801b6e4:	6828      	ldr	r0, [r5, #0]
 801b6e6:	6803      	ldr	r3, [r0, #0]
 801b6e8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801b6ea:	4798      	blx	r3
 801b6ec:	4ba5      	ldr	r3, [pc, #660]	@ (801b984 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b4>)
 801b6ee:	781b      	ldrb	r3, [r3, #0]
 801b6f0:	2b00      	cmp	r3, #0
 801b6f2:	f43f aed4 	beq.w	801b49e <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 801b6f6:	2300      	movs	r3, #0
 801b6f8:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 801b6fc:	4ba2      	ldr	r3, [pc, #648]	@ (801b988 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b8>)
 801b6fe:	f8bd 607c 	ldrh.w	r6, [sp, #124]	@ 0x7c
 801b702:	881b      	ldrh	r3, [r3, #0]
 801b704:	a80f      	add	r0, sp, #60	@ 0x3c
 801b706:	f104 05ee 	add.w	r5, r4, #238	@ 0xee
 801b70a:	42b3      	cmp	r3, r6
 801b70c:	f4bf aec7 	bcs.w	801b49e <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 801b710:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 801b714:	2907      	cmp	r1, #7
 801b716:	d815      	bhi.n	801b744 <_ZN8touchgfx11Application15drawCachedAreasEv+0x374>
 801b718:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 801b71c:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 801b720:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 801b724:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 801b728:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 801b72c:	1c4a      	adds	r2, r1, #1
 801b72e:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 801b732:	eb05 02c1 	add.w	r2, r5, r1, lsl #3
 801b736:	f825 8031 	strh.w	r8, [r5, r1, lsl #3]
 801b73a:	f8a2 e002 	strh.w	lr, [r2, #2]
 801b73e:	f8a2 c004 	strh.w	ip, [r2, #4]
 801b742:	80d7      	strh	r7, [r2, #6]
 801b744:	3301      	adds	r3, #1
 801b746:	b29b      	uxth	r3, r3
 801b748:	e7df      	b.n	801b70a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 801b74a:	2b02      	cmp	r3, #2
 801b74c:	f040 80d1 	bne.w	801b8f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801b750:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 801b754:	9308      	str	r3, [sp, #32]
 801b756:	f8b0 307e 	ldrh.w	r3, [r0, #126]	@ 0x7e
 801b75a:	9307      	str	r3, [sp, #28]
 801b75c:	6803      	ldr	r3, [r0, #0]
 801b75e:	f890 b07d 	ldrb.w	fp, [r0, #125]	@ 0x7d
 801b762:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 801b766:	4798      	blx	r3
 801b768:	4b88      	ldr	r3, [pc, #544]	@ (801b98c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5bc>)
 801b76a:	881b      	ldrh	r3, [r3, #0]
 801b76c:	9302      	str	r3, [sp, #8]
 801b76e:	4b88      	ldr	r3, [pc, #544]	@ (801b990 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c0>)
 801b770:	881e      	ldrh	r6, [r3, #0]
 801b772:	4b88      	ldr	r3, [pc, #544]	@ (801b994 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 801b774:	781b      	ldrb	r3, [r3, #0]
 801b776:	f10b 37ff 	add.w	r7, fp, #4294967295
 801b77a:	2b01      	cmp	r3, #1
 801b77c:	bf1c      	itt	ne
 801b77e:	9b02      	ldrne	r3, [sp, #8]
 801b780:	9602      	strne	r6, [sp, #8]
 801b782:	b2bf      	uxth	r7, r7
 801b784:	fa0f f887 	sxth.w	r8, r7
 801b788:	4682      	mov	sl, r0
 801b78a:	f04f 0000 	mov.w	r0, #0
 801b78e:	bf18      	it	ne
 801b790:	461e      	movne	r6, r3
 801b792:	f7e6 fa91 	bl	8001cb8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 801b796:	fb96 fbfb 	sdiv	fp, r6, fp
 801b79a:	fb0b f808 	mul.w	r8, fp, r8
 801b79e:	45c2      	cmp	sl, r8
 801b7a0:	da0c      	bge.n	801b7bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ec>
 801b7a2:	6828      	ldr	r0, [r5, #0]
 801b7a4:	6803      	ldr	r3, [r0, #0]
 801b7a6:	210a      	movs	r1, #10
 801b7a8:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 801b7ac:	4798      	blx	r3
 801b7ae:	6828      	ldr	r0, [r5, #0]
 801b7b0:	6803      	ldr	r3, [r0, #0]
 801b7b2:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 801b7b6:	4798      	blx	r3
 801b7b8:	4682      	mov	sl, r0
 801b7ba:	e7f0      	b.n	801b79e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ce>
 801b7bc:	2000      	movs	r0, #0
 801b7be:	f7e6 fab5 	bl	8001d2c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 801b7c2:	fa1f f38b 	uxth.w	r3, fp
 801b7c6:	fb17 f703 	smulbb	r7, r7, r3
 801b7ca:	9304      	str	r3, [sp, #16]
 801b7cc:	b2bb      	uxth	r3, r7
 801b7ce:	9305      	str	r3, [sp, #20]
 801b7d0:	f04f 0800 	mov.w	r8, #0
 801b7d4:	0973      	lsrs	r3, r6, #5
 801b7d6:	4f70      	ldr	r7, [pc, #448]	@ (801b998 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c8>)
 801b7d8:	9306      	str	r3, [sp, #24]
 801b7da:	4645      	mov	r5, r8
 801b7dc:	42b5      	cmp	r5, r6
 801b7de:	d085      	beq.n	801b6ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801b7e0:	6838      	ldr	r0, [r7, #0]
 801b7e2:	6803      	ldr	r3, [r0, #0]
 801b7e4:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 801b7e8:	4798      	blx	r3
 801b7ea:	4582      	cmp	sl, r0
 801b7ec:	4681      	mov	r9, r0
 801b7ee:	d907      	bls.n	801b800 <_ZN8touchgfx11Application15drawCachedAreasEv+0x430>
 801b7f0:	f1b8 0f00 	cmp.w	r8, #0
 801b7f4:	d007      	beq.n	801b806 <_ZN8touchgfx11Application15drawCachedAreasEv+0x436>
 801b7f6:	6838      	ldr	r0, [r7, #0]
 801b7f8:	6803      	ldr	r3, [r0, #0]
 801b7fa:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 801b7fe:	e774      	b.n	801b6ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 801b800:	f1b8 0f00 	cmp.w	r8, #0
 801b804:	d003      	beq.n	801b80e <_ZN8touchgfx11Application15drawCachedAreasEv+0x43e>
 801b806:	454d      	cmp	r5, r9
 801b808:	d3f5      	bcc.n	801b7f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x426>
 801b80a:	f04f 0801 	mov.w	r8, #1
 801b80e:	9a04      	ldr	r2, [sp, #16]
 801b810:	fb95 f3fb 	sdiv	r3, r5, fp
 801b814:	9303      	str	r3, [sp, #12]
 801b816:	3301      	adds	r3, #1
 801b818:	fb13 f302 	smulbb	r3, r3, r2
 801b81c:	b299      	uxth	r1, r3
 801b81e:	f1b8 0f00 	cmp.w	r8, #0
 801b822:	d04e      	beq.n	801b8c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f2>
 801b824:	eb09 030b 	add.w	r3, r9, fp
 801b828:	42b3      	cmp	r3, r6
 801b82a:	bfa8      	it	ge
 801b82c:	4633      	movge	r3, r6
 801b82e:	9807      	ldr	r0, [sp, #28]
 801b830:	b29b      	uxth	r3, r3
 801b832:	428b      	cmp	r3, r1
 801b834:	bf94      	ite	ls
 801b836:	ebc5 0203 	rsbls	r2, r5, r3
 801b83a:	ebc5 0201 	rsbhi	r2, r5, r1
 801b83e:	4282      	cmp	r2, r0
 801b840:	bfa8      	it	ge
 801b842:	4602      	movge	r2, r0
 801b844:	9808      	ldr	r0, [sp, #32]
 801b846:	fa1f fa82 	uxth.w	sl, r2
 801b84a:	4582      	cmp	sl, r0
 801b84c:	d205      	bcs.n	801b85a <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 801b84e:	fa15 f082 	uxtah	r0, r5, r2
 801b852:	4286      	cmp	r6, r0
 801b854:	d001      	beq.n	801b85a <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 801b856:	4299      	cmp	r1, r3
 801b858:	d240      	bcs.n	801b8dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x50c>
 801b85a:	2001      	movs	r0, #1
 801b85c:	9209      	str	r2, [sp, #36]	@ 0x24
 801b85e:	f7e6 fa2b 	bl	8001cb8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 801b862:	6838      	ldr	r0, [r7, #0]
 801b864:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 801b868:	6803      	ldr	r3, [r0, #0]
 801b86a:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 801b86e:	4798      	blx	r3
 801b870:	4b48      	ldr	r3, [pc, #288]	@ (801b994 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 801b872:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801b874:	781b      	ldrb	r3, [r3, #0]
 801b876:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801b87a:	2b01      	cmp	r3, #1
 801b87c:	b212      	sxth	r2, r2
 801b87e:	f04f 0000 	mov.w	r0, #0
 801b882:	d122      	bne.n	801b8ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fa>
 801b884:	1b73      	subs	r3, r6, r5
 801b886:	eba3 030a 	sub.w	r3, r3, sl
 801b88a:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801b88e:	f8ad 0036 	strh.w	r0, [sp, #54]	@ 0x36
 801b892:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 801b896:	f8ad 103a 	strh.w	r1, [sp, #58]	@ 0x3a
 801b89a:	6823      	ldr	r3, [r4, #0]
 801b89c:	a90d      	add	r1, sp, #52	@ 0x34
 801b89e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801b8a0:	4620      	mov	r0, r4
 801b8a2:	4798      	blx	r3
 801b8a4:	6838      	ldr	r0, [r7, #0]
 801b8a6:	9b03      	ldr	r3, [sp, #12]
 801b8a8:	4259      	negs	r1, r3
 801b8aa:	6803      	ldr	r3, [r0, #0]
 801b8ac:	b209      	sxth	r1, r1
 801b8ae:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 801b8b2:	4798      	blx	r3
 801b8b4:	4455      	add	r5, sl
 801b8b6:	2001      	movs	r0, #1
 801b8b8:	b2ad      	uxth	r5, r5
 801b8ba:	f7e6 fa37 	bl	8001d2c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 801b8be:	46ca      	mov	sl, r9
 801b8c0:	e78c      	b.n	801b7dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x40c>
 801b8c2:	9b05      	ldr	r3, [sp, #20]
 801b8c4:	eba9 0303 	sub.w	r3, r9, r3
 801b8c8:	e7b1      	b.n	801b82e <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 801b8ca:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
 801b8ce:	f8ad 5036 	strh.w	r5, [sp, #54]	@ 0x36
 801b8d2:	f8ad 1038 	strh.w	r1, [sp, #56]	@ 0x38
 801b8d6:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 801b8da:	e7de      	b.n	801b89a <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ca>
 801b8dc:	6838      	ldr	r0, [r7, #0]
 801b8de:	6803      	ldr	r3, [r0, #0]
 801b8e0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801b8e2:	4798      	blx	r3
 801b8e4:	6838      	ldr	r0, [r7, #0]
 801b8e6:	9906      	ldr	r1, [sp, #24]
 801b8e8:	6803      	ldr	r3, [r0, #0]
 801b8ea:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 801b8ee:	4798      	blx	r3
 801b8f0:	e7e5      	b.n	801b8be <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ee>
 801b8f2:	2b03      	cmp	r3, #3
 801b8f4:	f040 8130 	bne.w	801bb58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x788>
 801b8f8:	4b26      	ldr	r3, [pc, #152]	@ (801b994 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 801b8fa:	f9b0 9082 	ldrsh.w	r9, [r0, #130]	@ 0x82
 801b8fe:	781b      	ldrb	r3, [r3, #0]
 801b900:	2b01      	cmp	r3, #1
 801b902:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 801b906:	f000 8093 	beq.w	801ba30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 801b90a:	8832      	ldrh	r2, [r6, #0]
 801b90c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 801b910:	3201      	adds	r2, #1
 801b912:	b292      	uxth	r2, r2
 801b914:	2900      	cmp	r1, #0
 801b916:	f43f aee9 	beq.w	801b6ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801b91a:	f8b4 50b2 	ldrh.w	r5, [r4, #178]	@ 0xb2
 801b91e:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	@ 0xae
 801b922:	441d      	add	r5, r3
 801b924:	b22d      	sxth	r5, r5
 801b926:	4694      	mov	ip, r2
 801b928:	f04f 0800 	mov.w	r8, #0
 801b92c:	fa1f f38c 	uxth.w	r3, ip
 801b930:	4299      	cmp	r1, r3
 801b932:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 801b936:	f240 80ba 	bls.w	801baae <_ZN8touchgfx11Application15drawCachedAreasEv+0x6de>
 801b93a:	4427      	add	r7, r4
 801b93c:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 801b940:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 801b944:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 801b948:	4283      	cmp	r3, r0
 801b94a:	f340 809c 	ble.w	801ba86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b6>
 801b94e:	f8be 50b2 	ldrh.w	r5, [lr, #178]	@ 0xb2
 801b952:	4405      	add	r5, r0
 801b954:	b22d      	sxth	r5, r5
 801b956:	429d      	cmp	r5, r3
 801b958:	bfa8      	it	ge
 801b95a:	461d      	movge	r5, r3
 801b95c:	46e0      	mov	r8, ip
 801b95e:	f10c 0c01 	add.w	ip, ip, #1
 801b962:	e7e3      	b.n	801b92c <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>
 801b964:	d10a      	bne.n	801b97c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5ac>
 801b966:	f9b7 00b2 	ldrsh.w	r0, [r7, #178]	@ 0xb2
 801b96a:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 801b96e:	4562      	cmp	r2, ip
 801b970:	bfb8      	it	lt
 801b972:	4662      	movlt	r2, ip
 801b974:	4288      	cmp	r0, r1
 801b976:	bfb8      	it	lt
 801b978:	4698      	movlt	r8, r3
 801b97a:	e082      	b.n	801ba82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 801b97c:	428a      	cmp	r2, r1
 801b97e:	bfb8      	it	lt
 801b980:	460a      	movlt	r2, r1
 801b982:	e07e      	b.n	801ba82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 801b984:	2000e40a 	.word	0x2000e40a
 801b988:	20000048 	.word	0x20000048
 801b98c:	2000e402 	.word	0x2000e402
 801b990:	2000e400 	.word	0x2000e400
 801b994:	2000e404 	.word	0x2000e404
 801b998:	2000e40c 	.word	0x2000e40c
 801b99c:	19e1      	adds	r1, r4, r7
 801b99e:	ab0d      	add	r3, sp, #52	@ 0x34
 801b9a0:	f851 0fac 	ldr.w	r0, [r1, #172]!
 801b9a4:	6849      	ldr	r1, [r1, #4]
 801b9a6:	c303      	stmia	r3!, {r0, r1}
 801b9a8:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
 801b9ac:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801b9b0:	454b      	cmp	r3, r9
 801b9b2:	bfb8      	it	lt
 801b9b4:	f9bd 2034 	ldrshlt.w	r2, [sp, #52]	@ 0x34
 801b9b8:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 801b9bc:	440b      	add	r3, r1
 801b9be:	1a9b      	subs	r3, r3, r2
 801b9c0:	a80d      	add	r0, sp, #52	@ 0x34
 801b9c2:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 801b9c6:	f7fe fecf 	bl	801a768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b9ca:	a80d      	add	r0, sp, #52	@ 0x34
 801b9cc:	f7f7 f975 	bl	8012cba <_ZNK8touchgfx4Rect7isEmptyEv>
 801b9d0:	bb70      	cbnz	r0, 801ba30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 801b9d2:	f9bd c03a 	ldrsh.w	ip, [sp, #58]	@ 0x3a
 801b9d6:	6828      	ldr	r0, [r5, #0]
 801b9d8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801b9dc:	f8d0 e000 	ldr.w	lr, [r0]
 801b9e0:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 801b9e4:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801b9e8:	45cc      	cmp	ip, r9
 801b9ea:	bfd4      	ite	le
 801b9ec:	fa1f fc8c 	uxthle.w	ip, ip
 801b9f0:	fa1f fc89 	uxthgt.w	ip, r9
 801b9f4:	f8cd c000 	str.w	ip, [sp]
 801b9f8:	f8de b094 	ldr.w	fp, [lr, #148]	@ 0x94
 801b9fc:	47d8      	blx	fp
 801b9fe:	4683      	mov	fp, r0
 801ba00:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 801ba04:	a80d      	add	r0, sp, #52	@ 0x34
 801ba06:	f7fe fe95 	bl	801a734 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801ba0a:	6823      	ldr	r3, [r4, #0]
 801ba0c:	4427      	add	r7, r4
 801ba0e:	4620      	mov	r0, r4
 801ba10:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801ba12:	a90d      	add	r1, sp, #52	@ 0x34
 801ba14:	4798      	blx	r3
 801ba16:	f8b7 00b0 	ldrh.w	r0, [r7, #176]	@ 0xb0
 801ba1a:	eba0 000b 	sub.w	r0, r0, fp
 801ba1e:	b200      	sxth	r0, r0
 801ba20:	f8a7 00b0 	strh.w	r0, [r7, #176]	@ 0xb0
 801ba24:	b920      	cbnz	r0, 801ba30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 801ba26:	fa1f f188 	uxth.w	r1, r8
 801ba2a:	4650      	mov	r0, sl
 801ba2c:	f7ff f93e 	bl	801acac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801ba30:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 801ba34:	f1bb 0f00 	cmp.w	fp, #0
 801ba38:	f43f ae58 	beq.w	801b6ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801ba3c:	8833      	ldrh	r3, [r6, #0]
 801ba3e:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 801ba42:	3301      	adds	r3, #1
 801ba44:	b29b      	uxth	r3, r3
 801ba46:	f04f 0800 	mov.w	r8, #0
 801ba4a:	b299      	uxth	r1, r3
 801ba4c:	458b      	cmp	fp, r1
 801ba4e:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 801ba52:	d9a3      	bls.n	801b99c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>
 801ba54:	4427      	add	r7, r4
 801ba56:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 801ba5a:	f8b7 10b0 	ldrh.w	r1, [r7, #176]	@ 0xb0
 801ba5e:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	@ 0xac
 801ba62:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 801ba66:	4408      	add	r0, r1
 801ba68:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 801ba6c:	4461      	add	r1, ip
 801ba6e:	b200      	sxth	r0, r0
 801ba70:	b209      	sxth	r1, r1
 801ba72:	4288      	cmp	r0, r1
 801ba74:	f6bf af76 	bge.w	801b964 <_ZN8touchgfx11Application15drawCachedAreasEv+0x594>
 801ba78:	4584      	cmp	ip, r0
 801ba7a:	4662      	mov	r2, ip
 801ba7c:	4698      	mov	r8, r3
 801ba7e:	bfb8      	it	lt
 801ba80:	4602      	movlt	r2, r0
 801ba82:	3301      	adds	r3, #1
 801ba84:	e7e1      	b.n	801ba4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x67a>
 801ba86:	d10e      	bne.n	801baa6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6d6>
 801ba88:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 801ba8c:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 801ba90:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 801ba94:	4473      	add	r3, lr
 801ba96:	b21b      	sxth	r3, r3
 801ba98:	429d      	cmp	r5, r3
 801ba9a:	bfa8      	it	ge
 801ba9c:	461d      	movge	r5, r3
 801ba9e:	4287      	cmp	r7, r0
 801baa0:	bfb8      	it	lt
 801baa2:	46e0      	movlt	r8, ip
 801baa4:	e75b      	b.n	801b95e <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 801baa6:	4285      	cmp	r5, r0
 801baa8:	bfa8      	it	ge
 801baaa:	4605      	movge	r5, r0
 801baac:	e757      	b.n	801b95e <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 801baae:	eb0a 0007 	add.w	r0, sl, r7
 801bab2:	4427      	add	r7, r4
 801bab4:	e9cd 2102 	strd	r2, r1, [sp, #8]
 801bab8:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 801babc:	45cb      	cmp	fp, r9
 801babe:	bfbe      	ittt	lt
 801bac0:	f8b7 50ae 	ldrhlt.w	r5, [r7, #174]	@ 0xae
 801bac4:	445d      	addlt	r5, fp
 801bac6:	b22d      	sxthlt	r5, r5
 801bac8:	f7f7 f8f7 	bl	8012cba <_ZNK8touchgfx4Rect7isEmptyEv>
 801bacc:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801bad0:	2800      	cmp	r0, #0
 801bad2:	f47f af1f 	bne.w	801b914 <_ZN8touchgfx11Application15drawCachedAreasEv+0x544>
 801bad6:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 801bada:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 801bade:	482b      	ldr	r0, [pc, #172]	@ (801bb8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x7bc>)
 801bae0:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 801bae4:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 801bae8:	6800      	ldr	r0, [r0, #0]
 801baea:	f8ad 1034 	strh.w	r1, [sp, #52]	@ 0x34
 801baee:	1aad      	subs	r5, r5, r2
 801baf0:	454d      	cmp	r5, r9
 801baf2:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 801baf6:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 801bafa:	bfa8      	it	ge
 801bafc:	464d      	movge	r5, r9
 801bafe:	f8d0 c000 	ldr.w	ip, [r0]
 801bb02:	b2ad      	uxth	r5, r5
 801bb04:	fa1f fb8b 	uxth.w	fp, fp
 801bb08:	455d      	cmp	r5, fp
 801bb0a:	bf94      	ite	ls
 801bb0c:	9500      	strls	r5, [sp, #0]
 801bb0e:	f8cd b000 	strhi.w	fp, [sp]
 801bb12:	b292      	uxth	r2, r2
 801bb14:	f8dc 5094 	ldr.w	r5, [ip, #148]	@ 0x94
 801bb18:	b29b      	uxth	r3, r3
 801bb1a:	b289      	uxth	r1, r1
 801bb1c:	47a8      	blx	r5
 801bb1e:	6823      	ldr	r3, [r4, #0]
 801bb20:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 801bb24:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801bb26:	a90d      	add	r1, sp, #52	@ 0x34
 801bb28:	4620      	mov	r0, r4
 801bb2a:	4798      	blx	r3
 801bb2c:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
 801bb30:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 801bb34:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 801bb38:	1a5b      	subs	r3, r3, r1
 801bb3a:	440a      	add	r2, r1
 801bb3c:	b21b      	sxth	r3, r3
 801bb3e:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 801bb42:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 801bb46:	2b00      	cmp	r3, #0
 801bb48:	f47f aedf 	bne.w	801b90a <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 801bb4c:	fa1f f188 	uxth.w	r1, r8
 801bb50:	4650      	mov	r0, sl
 801bb52:	f7ff f8ab 	bl	801acac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801bb56:	e6d8      	b.n	801b90a <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 801bb58:	8835      	ldrh	r5, [r6, #0]
 801bb5a:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 801bb5e:	42ab      	cmp	r3, r5
 801bb60:	f67f adc4 	bls.w	801b6ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801bb64:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 801bb68:	ab0d      	add	r3, sp, #52	@ 0x34
 801bb6a:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801bb6e:	6851      	ldr	r1, [r2, #4]
 801bb70:	c303      	stmia	r3!, {r0, r1}
 801bb72:	a80d      	add	r0, sp, #52	@ 0x34
 801bb74:	f7f7 f8a1 	bl	8012cba <_ZNK8touchgfx4Rect7isEmptyEv>
 801bb78:	b920      	cbnz	r0, 801bb84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7b4>
 801bb7a:	6823      	ldr	r3, [r4, #0]
 801bb7c:	a90d      	add	r1, sp, #52	@ 0x34
 801bb7e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801bb80:	4620      	mov	r0, r4
 801bb82:	4798      	blx	r3
 801bb84:	3501      	adds	r5, #1
 801bb86:	b2ad      	uxth	r5, r5
 801bb88:	e7e7      	b.n	801bb5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x78a>
 801bb8a:	bf00      	nop
 801bb8c:	2000e40c 	.word	0x2000e40c

0801bb90 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 801bb90:	4b03      	ldr	r3, [pc, #12]	@ (801bba0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801bb92:	2200      	movs	r2, #0
 801bb94:	801a      	strh	r2, [r3, #0]
 801bb96:	805a      	strh	r2, [r3, #2]
 801bb98:	809a      	strh	r2, [r3, #4]
 801bb9a:	80da      	strh	r2, [r3, #6]
 801bb9c:	4770      	bx	lr
 801bb9e:	bf00      	nop
 801bba0:	2000e458 	.word	0x2000e458

0801bba4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 801bba4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bba8:	4606      	mov	r6, r0
 801bbaa:	b09d      	sub	sp, #116	@ 0x74
 801bbac:	a803      	add	r0, sp, #12
 801bbae:	4614      	mov	r4, r2
 801bbb0:	468a      	mov	sl, r1
 801bbb2:	461d      	mov	r5, r3
 801bbb4:	f001 fa47 	bl	801d046 <_ZN8touchgfx12TextProviderC1Ev>
 801bbb8:	6833      	ldr	r3, [r6, #0]
 801bbba:	4630      	mov	r0, r6
 801bbbc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801bbbe:	4798      	blx	r3
 801bbc0:	6833      	ldr	r3, [r6, #0]
 801bbc2:	4607      	mov	r7, r0
 801bbc4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801bbc6:	4630      	mov	r0, r6
 801bbc8:	4798      	blx	r3
 801bbca:	462a      	mov	r2, r5
 801bbcc:	9000      	str	r0, [sp, #0]
 801bbce:	4621      	mov	r1, r4
 801bbd0:	463b      	mov	r3, r7
 801bbd2:	a803      	add	r0, sp, #12
 801bbd4:	f001 fa92 	bl	801d0fc <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801bbd8:	2500      	movs	r5, #0
 801bbda:	462c      	mov	r4, r5
 801bbdc:	46a9      	mov	r9, r5
 801bbde:	46a8      	mov	r8, r5
 801bbe0:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 801bbe4:	2300      	movs	r3, #0
 801bbe6:	9302      	str	r3, [sp, #8]
 801bbe8:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 801bbec:	429c      	cmp	r4, r3
 801bbee:	d002      	beq.n	801bbf6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 801bbf0:	455c      	cmp	r4, fp
 801bbf2:	bf18      	it	ne
 801bbf4:	4625      	movne	r5, r4
 801bbf6:	ab02      	add	r3, sp, #8
 801bbf8:	4632      	mov	r2, r6
 801bbfa:	4651      	mov	r1, sl
 801bbfc:	a803      	add	r0, sp, #12
 801bbfe:	f001 fda9 	bl	801d754 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801bc02:	4604      	mov	r4, r0
 801bc04:	b108      	cbz	r0, 801bc0a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801bc06:	280a      	cmp	r0, #10
 801bc08:	d10a      	bne.n	801bc20 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 801bc0a:	45c1      	cmp	r9, r8
 801bc0c:	bf38      	it	cc
 801bc0e:	46c1      	movcc	r9, r8
 801bc10:	f04f 0800 	mov.w	r8, #0
 801bc14:	2c00      	cmp	r4, #0
 801bc16:	d1e5      	bne.n	801bbe4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801bc18:	4648      	mov	r0, r9
 801bc1a:	b01d      	add	sp, #116	@ 0x74
 801bc1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bc20:	9a02      	ldr	r2, [sp, #8]
 801bc22:	2a00      	cmp	r2, #0
 801bc24:	d0de      	beq.n	801bbe4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801bc26:	7b57      	ldrb	r7, [r2, #13]
 801bc28:	6833      	ldr	r3, [r6, #0]
 801bc2a:	8894      	ldrh	r4, [r2, #4]
 801bc2c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801bc2e:	007f      	lsls	r7, r7, #1
 801bc30:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 801bc34:	7a97      	ldrb	r7, [r2, #10]
 801bc36:	4629      	mov	r1, r5
 801bc38:	4307      	orrs	r7, r0
 801bc3a:	4630      	mov	r0, r6
 801bc3c:	4798      	blx	r3
 801bc3e:	4438      	add	r0, r7
 801bc40:	4480      	add	r8, r0
 801bc42:	fa1f f888 	uxth.w	r8, r8
 801bc46:	e7e5      	b.n	801bc14 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0801bc48 <_ZNK8touchgfx4Font12getCharWidthEt>:
 801bc48:	b508      	push	{r3, lr}
 801bc4a:	6803      	ldr	r3, [r0, #0]
 801bc4c:	68db      	ldr	r3, [r3, #12]
 801bc4e:	4798      	blx	r3
 801bc50:	b128      	cbz	r0, 801bc5e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801bc52:	7b43      	ldrb	r3, [r0, #13]
 801bc54:	7a80      	ldrb	r0, [r0, #10]
 801bc56:	005b      	lsls	r3, r3, #1
 801bc58:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801bc5c:	4318      	orrs	r0, r3
 801bc5e:	bd08      	pop	{r3, pc}

0801bc60 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 801bc60:	b40e      	push	{r1, r2, r3}
 801bc62:	b5f0      	push	{r4, r5, r6, r7, lr}
 801bc64:	b09e      	sub	sp, #120	@ 0x78
 801bc66:	ab23      	add	r3, sp, #140	@ 0x8c
 801bc68:	4605      	mov	r5, r0
 801bc6a:	f853 4b04 	ldr.w	r4, [r3], #4
 801bc6e:	9303      	str	r3, [sp, #12]
 801bc70:	a805      	add	r0, sp, #20
 801bc72:	f001 f9e8 	bl	801d046 <_ZN8touchgfx12TextProviderC1Ev>
 801bc76:	682b      	ldr	r3, [r5, #0]
 801bc78:	4628      	mov	r0, r5
 801bc7a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801bc7c:	4798      	blx	r3
 801bc7e:	682b      	ldr	r3, [r5, #0]
 801bc80:	4606      	mov	r6, r0
 801bc82:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801bc84:	4628      	mov	r0, r5
 801bc86:	4798      	blx	r3
 801bc88:	4633      	mov	r3, r6
 801bc8a:	ae1e      	add	r6, sp, #120	@ 0x78
 801bc8c:	4621      	mov	r1, r4
 801bc8e:	9000      	str	r0, [sp, #0]
 801bc90:	9a03      	ldr	r2, [sp, #12]
 801bc92:	2400      	movs	r4, #0
 801bc94:	a805      	add	r0, sp, #20
 801bc96:	f001 fa31 	bl	801d0fc <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801bc9a:	f846 4d68 	str.w	r4, [r6, #-104]!
 801bc9e:	462a      	mov	r2, r5
 801bca0:	4633      	mov	r3, r6
 801bca2:	4621      	mov	r1, r4
 801bca4:	a805      	add	r0, sp, #20
 801bca6:	f001 fd55 	bl	801d754 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801bcaa:	b1f0      	cbz	r0, 801bcea <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 801bcac:	280a      	cmp	r0, #10
 801bcae:	d018      	beq.n	801bce2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801bcb0:	9f04      	ldr	r7, [sp, #16]
 801bcb2:	b1b7      	cbz	r7, 801bce2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801bcb4:	7b78      	ldrb	r0, [r7, #13]
 801bcb6:	7a3b      	ldrb	r3, [r7, #8]
 801bcb8:	88ea      	ldrh	r2, [r5, #6]
 801bcba:	00c1      	lsls	r1, r0, #3
 801bcbc:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801bcc0:	4319      	orrs	r1, r3
 801bcc2:	0643      	lsls	r3, r0, #25
 801bcc4:	bf44      	itt	mi
 801bcc6:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 801bcca:	b219      	sxthmi	r1, r3
 801bccc:	0100      	lsls	r0, r0, #4
 801bcce:	79fb      	ldrb	r3, [r7, #7]
 801bcd0:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 801bcd4:	4303      	orrs	r3, r0
 801bcd6:	4413      	add	r3, r2
 801bcd8:	1a5b      	subs	r3, r3, r1
 801bcda:	b21b      	sxth	r3, r3
 801bcdc:	429c      	cmp	r4, r3
 801bcde:	bfb8      	it	lt
 801bce0:	461c      	movlt	r4, r3
 801bce2:	4633      	mov	r3, r6
 801bce4:	462a      	mov	r2, r5
 801bce6:	2100      	movs	r1, #0
 801bce8:	e7dc      	b.n	801bca4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 801bcea:	b2a0      	uxth	r0, r4
 801bcec:	b01e      	add	sp, #120	@ 0x78
 801bcee:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801bcf2:	b003      	add	sp, #12
 801bcf4:	4770      	bx	lr

0801bcf6 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801bcf6:	7a43      	ldrb	r3, [r0, #9]
 801bcf8:	8880      	ldrh	r0, [r0, #4]
 801bcfa:	4418      	add	r0, r3
 801bcfc:	b280      	uxth	r0, r0
 801bcfe:	4770      	bx	lr

0801bd00 <_ZNK8touchgfx4Font13getFontHeightEv>:
 801bd00:	6803      	ldr	r3, [r0, #0]
 801bd02:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801bd04:	4718      	bx	r3

0801bd06 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801bd06:	b40e      	push	{r1, r2, r3}
 801bd08:	b570      	push	{r4, r5, r6, lr}
 801bd0a:	b09d      	sub	sp, #116	@ 0x74
 801bd0c:	ab21      	add	r3, sp, #132	@ 0x84
 801bd0e:	4604      	mov	r4, r0
 801bd10:	f853 5b04 	ldr.w	r5, [r3], #4
 801bd14:	9302      	str	r3, [sp, #8]
 801bd16:	a803      	add	r0, sp, #12
 801bd18:	f001 f995 	bl	801d046 <_ZN8touchgfx12TextProviderC1Ev>
 801bd1c:	6823      	ldr	r3, [r4, #0]
 801bd1e:	4620      	mov	r0, r4
 801bd20:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801bd22:	4798      	blx	r3
 801bd24:	6823      	ldr	r3, [r4, #0]
 801bd26:	4606      	mov	r6, r0
 801bd28:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801bd2a:	4620      	mov	r0, r4
 801bd2c:	4798      	blx	r3
 801bd2e:	4633      	mov	r3, r6
 801bd30:	9000      	str	r0, [sp, #0]
 801bd32:	9a02      	ldr	r2, [sp, #8]
 801bd34:	4629      	mov	r1, r5
 801bd36:	a803      	add	r0, sp, #12
 801bd38:	f001 f9e0 	bl	801d0fc <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801bd3c:	a803      	add	r0, sp, #12
 801bd3e:	f001 fdd7 	bl	801d8f0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801bd42:	2401      	movs	r4, #1
 801bd44:	b2a3      	uxth	r3, r4
 801bd46:	b140      	cbz	r0, 801bd5a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 801bd48:	280a      	cmp	r0, #10
 801bd4a:	bf08      	it	eq
 801bd4c:	3301      	addeq	r3, #1
 801bd4e:	a803      	add	r0, sp, #12
 801bd50:	bf08      	it	eq
 801bd52:	b21c      	sxtheq	r4, r3
 801bd54:	f001 fdcc 	bl	801d8f0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801bd58:	e7f4      	b.n	801bd44 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 801bd5a:	4618      	mov	r0, r3
 801bd5c:	b01d      	add	sp, #116	@ 0x74
 801bd5e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801bd62:	b003      	add	sp, #12
 801bd64:	4770      	bx	lr

0801bd66 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801bd66:	b40e      	push	{r1, r2, r3}
 801bd68:	b5f0      	push	{r4, r5, r6, r7, lr}
 801bd6a:	b09e      	sub	sp, #120	@ 0x78
 801bd6c:	ab23      	add	r3, sp, #140	@ 0x8c
 801bd6e:	4604      	mov	r4, r0
 801bd70:	f853 5b04 	ldr.w	r5, [r3], #4
 801bd74:	9303      	str	r3, [sp, #12]
 801bd76:	a805      	add	r0, sp, #20
 801bd78:	f001 f965 	bl	801d046 <_ZN8touchgfx12TextProviderC1Ev>
 801bd7c:	6823      	ldr	r3, [r4, #0]
 801bd7e:	4620      	mov	r0, r4
 801bd80:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801bd82:	4798      	blx	r3
 801bd84:	6823      	ldr	r3, [r4, #0]
 801bd86:	4606      	mov	r6, r0
 801bd88:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801bd8a:	4620      	mov	r0, r4
 801bd8c:	4798      	blx	r3
 801bd8e:	4633      	mov	r3, r6
 801bd90:	4629      	mov	r1, r5
 801bd92:	9000      	str	r0, [sp, #0]
 801bd94:	9a03      	ldr	r2, [sp, #12]
 801bd96:	a805      	add	r0, sp, #20
 801bd98:	ad1e      	add	r5, sp, #120	@ 0x78
 801bd9a:	f001 f9af 	bl	801d0fc <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801bd9e:	2100      	movs	r1, #0
 801bda0:	f845 1d68 	str.w	r1, [r5, #-104]!
 801bda4:	4622      	mov	r2, r4
 801bda6:	462b      	mov	r3, r5
 801bda8:	a805      	add	r0, sp, #20
 801bdaa:	f001 fcd3 	bl	801d754 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801bdae:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 801bdb2:	b1d8      	cbz	r0, 801bdec <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 801bdb4:	280a      	cmp	r0, #10
 801bdb6:	d012      	beq.n	801bdde <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801bdb8:	9804      	ldr	r0, [sp, #16]
 801bdba:	b180      	cbz	r0, 801bdde <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801bdbc:	7b47      	ldrb	r7, [r0, #13]
 801bdbe:	88e2      	ldrh	r2, [r4, #6]
 801bdc0:	00fb      	lsls	r3, r7, #3
 801bdc2:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 801bdc6:	7a03      	ldrb	r3, [r0, #8]
 801bdc8:	430b      	orrs	r3, r1
 801bdca:	0679      	lsls	r1, r7, #25
 801bdcc:	bf44      	itt	mi
 801bdce:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801bdd2:	b21b      	sxthmi	r3, r3
 801bdd4:	1ad3      	subs	r3, r2, r3
 801bdd6:	b21b      	sxth	r3, r3
 801bdd8:	429e      	cmp	r6, r3
 801bdda:	bfa8      	it	ge
 801bddc:	461e      	movge	r6, r3
 801bdde:	462b      	mov	r3, r5
 801bde0:	4622      	mov	r2, r4
 801bde2:	2100      	movs	r1, #0
 801bde4:	a805      	add	r0, sp, #20
 801bde6:	f001 fcb5 	bl	801d754 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801bdea:	e7e2      	b.n	801bdb2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 801bdec:	4630      	mov	r0, r6
 801bdee:	b01e      	add	sp, #120	@ 0x78
 801bdf0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801bdf4:	b003      	add	sp, #12
 801bdf6:	4770      	bx	lr

0801bdf8 <_ZNK8touchgfx8Drawable10invalidateEv>:
 801bdf8:	b513      	push	{r0, r1, r4, lr}
 801bdfa:	6803      	ldr	r3, [r0, #0]
 801bdfc:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801be00:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801be04:	f8ad 1004 	strh.w	r1, [sp, #4]
 801be08:	2400      	movs	r4, #0
 801be0a:	9400      	str	r4, [sp, #0]
 801be0c:	f8ad 2006 	strh.w	r2, [sp, #6]
 801be10:	691b      	ldr	r3, [r3, #16]
 801be12:	4669      	mov	r1, sp
 801be14:	4798      	blx	r3
 801be16:	b002      	add	sp, #8
 801be18:	bd10      	pop	{r4, pc}

0801be1a <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 801be1a:	b538      	push	{r3, r4, r5, lr}
 801be1c:	680b      	ldr	r3, [r1, #0]
 801be1e:	460c      	mov	r4, r1
 801be20:	68db      	ldr	r3, [r3, #12]
 801be22:	4605      	mov	r5, r0
 801be24:	4798      	blx	r3
 801be26:	6823      	ldr	r3, [r4, #0]
 801be28:	4620      	mov	r0, r4
 801be2a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801be2c:	4629      	mov	r1, r5
 801be2e:	4798      	blx	r3
 801be30:	4628      	mov	r0, r5
 801be32:	bd38      	pop	{r3, r4, r5, pc}

0801be34 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801be34:	b410      	push	{r4}
 801be36:	880a      	ldrh	r2, [r1, #0]
 801be38:	8884      	ldrh	r4, [r0, #4]
 801be3a:	4422      	add	r2, r4
 801be3c:	800a      	strh	r2, [r1, #0]
 801be3e:	88c4      	ldrh	r4, [r0, #6]
 801be40:	884a      	ldrh	r2, [r1, #2]
 801be42:	4422      	add	r2, r4
 801be44:	804a      	strh	r2, [r1, #2]
 801be46:	6940      	ldr	r0, [r0, #20]
 801be48:	b120      	cbz	r0, 801be54 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 801be4a:	6803      	ldr	r3, [r0, #0]
 801be4c:	f85d 4b04 	ldr.w	r4, [sp], #4
 801be50:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801be52:	4718      	bx	r3
 801be54:	f85d 4b04 	ldr.w	r4, [sp], #4
 801be58:	4770      	bx	lr

0801be5a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 801be5a:	b570      	push	{r4, r5, r6, lr}
 801be5c:	8882      	ldrh	r2, [r0, #4]
 801be5e:	880b      	ldrh	r3, [r1, #0]
 801be60:	4413      	add	r3, r2
 801be62:	800b      	strh	r3, [r1, #0]
 801be64:	88c2      	ldrh	r2, [r0, #6]
 801be66:	884b      	ldrh	r3, [r1, #2]
 801be68:	460c      	mov	r4, r1
 801be6a:	4413      	add	r3, r2
 801be6c:	804b      	strh	r3, [r1, #2]
 801be6e:	4605      	mov	r5, r0
 801be70:	1d01      	adds	r1, r0, #4
 801be72:	4620      	mov	r0, r4
 801be74:	f7f6 fede 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 801be78:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801be7c:	2b00      	cmp	r3, #0
 801be7e:	dd0b      	ble.n	801be98 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801be80:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801be84:	2b00      	cmp	r3, #0
 801be86:	dd07      	ble.n	801be98 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801be88:	6968      	ldr	r0, [r5, #20]
 801be8a:	b128      	cbz	r0, 801be98 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801be8c:	6803      	ldr	r3, [r0, #0]
 801be8e:	4621      	mov	r1, r4
 801be90:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801be92:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801be96:	4718      	bx	r3
 801be98:	bd70      	pop	{r4, r5, r6, pc}
	...

0801be9c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 801be9c:	b570      	push	{r4, r5, r6, lr}
 801be9e:	8882      	ldrh	r2, [r0, #4]
 801bea0:	880b      	ldrh	r3, [r1, #0]
 801bea2:	4413      	add	r3, r2
 801bea4:	800b      	strh	r3, [r1, #0]
 801bea6:	88c2      	ldrh	r2, [r0, #6]
 801bea8:	884b      	ldrh	r3, [r1, #2]
 801beaa:	460c      	mov	r4, r1
 801beac:	4413      	add	r3, r2
 801beae:	804b      	strh	r3, [r1, #2]
 801beb0:	4605      	mov	r5, r0
 801beb2:	1d01      	adds	r1, r0, #4
 801beb4:	4620      	mov	r0, r4
 801beb6:	f7f6 febd 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 801beba:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801bebe:	2b00      	cmp	r3, #0
 801bec0:	dd19      	ble.n	801bef6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801bec2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801bec6:	2b00      	cmp	r3, #0
 801bec8:	dd15      	ble.n	801bef6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801beca:	6968      	ldr	r0, [r5, #20]
 801becc:	b128      	cbz	r0, 801beda <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 801bece:	6803      	ldr	r3, [r0, #0]
 801bed0:	4621      	mov	r1, r4
 801bed2:	691b      	ldr	r3, [r3, #16]
 801bed4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801bed8:	4718      	bx	r3
 801beda:	4b07      	ldr	r3, [pc, #28]	@ (801bef8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 801bedc:	681b      	ldr	r3, [r3, #0]
 801bede:	3304      	adds	r3, #4
 801bee0:	429d      	cmp	r5, r3
 801bee2:	d108      	bne.n	801bef6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801bee4:	f7fe fdae 	bl	801aa44 <_ZN8touchgfx11Application11getInstanceEv>
 801bee8:	6803      	ldr	r3, [r0, #0]
 801beea:	6821      	ldr	r1, [r4, #0]
 801beec:	6862      	ldr	r2, [r4, #4]
 801beee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801bef0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801bef4:	4718      	bx	r3
 801bef6:	bd70      	pop	{r4, r5, r6, pc}
 801bef8:	2000e450 	.word	0x2000e450

0801befc <_ZN8touchgfx8Drawable12moveRelativeEss>:
 801befc:	b570      	push	{r4, r5, r6, lr}
 801befe:	4604      	mov	r4, r0
 801bf00:	4616      	mov	r6, r2
 801bf02:	460d      	mov	r5, r1
 801bf04:	b901      	cbnz	r1, 801bf08 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801bf06:	b192      	cbz	r2, 801bf2e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 801bf08:	6823      	ldr	r3, [r4, #0]
 801bf0a:	4620      	mov	r0, r4
 801bf0c:	699b      	ldr	r3, [r3, #24]
 801bf0e:	4798      	blx	r3
 801bf10:	88e2      	ldrh	r2, [r4, #6]
 801bf12:	88a1      	ldrh	r1, [r4, #4]
 801bf14:	4432      	add	r2, r6
 801bf16:	4429      	add	r1, r5
 801bf18:	4620      	mov	r0, r4
 801bf1a:	b212      	sxth	r2, r2
 801bf1c:	b209      	sxth	r1, r1
 801bf1e:	f7ea f8b5 	bl	800608c <_ZN8touchgfx8Drawable5setXYEss>
 801bf22:	6823      	ldr	r3, [r4, #0]
 801bf24:	4620      	mov	r0, r4
 801bf26:	699b      	ldr	r3, [r3, #24]
 801bf28:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801bf2c:	4718      	bx	r3
 801bf2e:	bd70      	pop	{r4, r5, r6, pc}

0801bf30 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 801bf30:	b510      	push	{r4, lr}
 801bf32:	4604      	mov	r4, r0
 801bf34:	4608      	mov	r0, r1
 801bf36:	2300      	movs	r3, #0
 801bf38:	8023      	strh	r3, [r4, #0]
 801bf3a:	8063      	strh	r3, [r4, #2]
 801bf3c:	6803      	ldr	r3, [r0, #0]
 801bf3e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801bf42:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801bf46:	80a1      	strh	r1, [r4, #4]
 801bf48:	80e2      	strh	r2, [r4, #6]
 801bf4a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801bf4c:	4621      	mov	r1, r4
 801bf4e:	4798      	blx	r3
 801bf50:	4620      	mov	r0, r4
 801bf52:	bd10      	pop	{r4, pc}

0801bf54 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
 801bf54:	4770      	bx	lr

0801bf56 <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
 801bf56:	b510      	push	{r4, lr}
 801bf58:	211c      	movs	r1, #28
 801bf5a:	4604      	mov	r4, r0
 801bf5c:	f011 fca7 	bl	802d8ae <_ZdlPvj>
 801bf60:	4620      	mov	r0, r4
 801bf62:	bd10      	pop	{r4, pc}

0801bf64 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
 801bf64:	4a04      	ldr	r2, [pc, #16]	@ (801bf78 <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
 801bf66:	6002      	str	r2, [r0, #0]
 801bf68:	2200      	movs	r2, #0
 801bf6a:	e9c0 2201 	strd	r2, r2, [r0, #4]
 801bf6e:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801bf72:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801bf76:	4770      	bx	lr
 801bf78:	08033174 	.word	0x08033174

0801bf7c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
 801bf7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bf80:	4604      	mov	r4, r0
 801bf82:	b087      	sub	sp, #28
 801bf84:	8b45      	ldrh	r5, [r0, #26]
 801bf86:	f8b2 c000 	ldrh.w	ip, [r2]
 801bf8a:	9105      	str	r1, [sp, #20]
 801bf8c:	68e1      	ldr	r1, [r4, #12]
 801bf8e:	9203      	str	r2, [sp, #12]
 801bf90:	1c68      	adds	r0, r5, #1
 801bf92:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 801bf96:	f01c 0501 	ands.w	r5, ip, #1
 801bf9a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801bf9e:	9502      	str	r5, [sp, #8]
 801bfa0:	b280      	uxth	r0, r0
 801bfa2:	d07d      	beq.n	801c0a0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x124>
 801bfa4:	ee07 2a90 	vmov	s15, r2
 801bfa8:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 801bfac:	8360      	strh	r0, [r4, #26]
 801bfae:	edc1 6a00 	vstr	s13, [r1]
 801bfb2:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801bfb6:	8b61      	ldrh	r1, [r4, #26]
 801bfb8:	ee07 2a10 	vmov	s14, r2
 801bfbc:	68e2      	ldr	r2, [r4, #12]
 801bfbe:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bfc2:	f04f 0e00 	mov.w	lr, #0
 801bfc6:	1c48      	adds	r0, r1, #1
 801bfc8:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 801bfcc:	ee06 ea10 	vmov	s12, lr
 801bfd0:	8360      	strh	r0, [r4, #26]
 801bfd2:	ed82 7a00 	vstr	s14, [r2]
 801bfd6:	8b21      	ldrh	r1, [r4, #24]
 801bfd8:	68a2      	ldr	r2, [r4, #8]
 801bfda:	2501      	movs	r5, #1
 801bfdc:	1c48      	adds	r0, r1, #1
 801bfde:	8320      	strh	r0, [r4, #24]
 801bfe0:	5455      	strb	r5, [r2, r1]
 801bfe2:	2200      	movs	r2, #0
 801bfe4:	3304      	adds	r3, #4
 801bfe6:	ee07 2a90 	vmov	s15, r2
 801bfea:	9300      	str	r3, [sp, #0]
 801bfec:	46aa      	mov	sl, r5
 801bfee:	4613      	mov	r3, r2
 801bff0:	4611      	mov	r1, r2
 801bff2:	462e      	mov	r6, r5
 801bff4:	9201      	str	r2, [sp, #4]
 801bff6:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 801bffa:	f8b4 8018 	ldrh.w	r8, [r4, #24]
 801bffe:	9805      	ldr	r0, [sp, #20]
 801c000:	f8d4 b008 	ldr.w	fp, [r4, #8]
 801c004:	f108 0701 	add.w	r7, r8, #1
 801c008:	42a8      	cmp	r0, r5
 801c00a:	b2bf      	uxth	r7, r7
 801c00c:	eb0b 0908 	add.w	r9, fp, r8
 801c010:	f340 80db 	ble.w	801c1ca <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x24e>
 801c014:	fa4c f906 	asr.w	r9, ip, r6
 801c018:	f009 0901 	and.w	r9, r9, #1
 801c01c:	fa5f f389 	uxtb.w	r3, r9
 801c020:	9304      	str	r3, [sp, #16]
 801c022:	9b00      	ldr	r3, [sp, #0]
 801c024:	f9b3 1000 	ldrsh.w	r1, [r3]
 801c028:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801c02c:	f1b9 0f00 	cmp.w	r9, #0
 801c030:	d07d      	beq.n	801c12e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1b2>
 801c032:	ee05 1a10 	vmov	s10, r1
 801c036:	eef8 4ac5 	vcvt.f32.s32	s9, s10
 801c03a:	ee05 3a10 	vmov	s10, r3
 801c03e:	8327      	strh	r7, [r4, #24]
 801c040:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 801c044:	f1ba 0f00 	cmp.w	sl, #0
 801c048:	d050      	beq.n	801c0ec <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x170>
 801c04a:	f04f 0002 	mov.w	r0, #2
 801c04e:	f80b 0008 	strb.w	r0, [fp, r8]
 801c052:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801c056:	68e7      	ldr	r7, [r4, #12]
 801c058:	f108 0901 	add.w	r9, r8, #1
 801c05c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801c060:	f8a4 901a 	strh.w	r9, [r4, #26]
 801c064:	edc7 4a00 	vstr	s9, [r7]
 801c068:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801c06c:	68e7      	ldr	r7, [r4, #12]
 801c06e:	f108 0901 	add.w	r9, r8, #1
 801c072:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801c076:	f8a4 901a 	strh.w	r9, [r4, #26]
 801c07a:	ed87 5a00 	vstr	s10, [r7]
 801c07e:	3601      	adds	r6, #1
 801c080:	2e10      	cmp	r6, #16
 801c082:	d106      	bne.n	801c092 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x116>
 801c084:	9e01      	ldr	r6, [sp, #4]
 801c086:	9803      	ldr	r0, [sp, #12]
 801c088:	3601      	adds	r6, #1
 801c08a:	9601      	str	r6, [sp, #4]
 801c08c:	f830 c016 	ldrh.w	ip, [r0, r6, lsl #1]
 801c090:	2600      	movs	r6, #0
 801c092:	9800      	ldr	r0, [sp, #0]
 801c094:	f8dd a010 	ldr.w	sl, [sp, #16]
 801c098:	3004      	adds	r0, #4
 801c09a:	3501      	adds	r5, #1
 801c09c:	9000      	str	r0, [sp, #0]
 801c09e:	e7ac      	b.n	801bffa <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x7e>
 801c0a0:	ee06 2a10 	vmov	s12, r2
 801c0a4:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 801c0a8:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 801c0ac:	ee16 5a10 	vmov	r5, s12
 801c0b0:	442a      	add	r2, r5
 801c0b2:	ee06 2a90 	vmov	s13, r2
 801c0b6:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 801c0ba:	8360      	strh	r0, [r4, #26]
 801c0bc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801c0c0:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801c0c4:	4472      	add	r2, lr
 801c0c6:	ee07 2a10 	vmov	s14, r2
 801c0ca:	ee66 6aa7 	vmul.f32	s13, s13, s15
 801c0ce:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801c0d2:	edc1 6a00 	vstr	s13, [r1]
 801c0d6:	8b61      	ldrh	r1, [r4, #26]
 801c0d8:	68e2      	ldr	r2, [r4, #12]
 801c0da:	ee27 7a27 	vmul.f32	s14, s14, s15
 801c0de:	1c48      	adds	r0, r1, #1
 801c0e0:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 801c0e4:	8360      	strh	r0, [r4, #26]
 801c0e6:	ed82 7a00 	vstr	s14, [r2]
 801c0ea:	e774      	b.n	801bfd6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x5a>
 801c0ec:	f04f 0005 	mov.w	r0, #5
 801c0f0:	f80b 0008 	strb.w	r0, [fp, r8]
 801c0f4:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801c0f8:	68e7      	ldr	r7, [r4, #12]
 801c0fa:	eeb8 4ae7 	vcvt.f32.s32	s8, s15
 801c0fe:	f108 0901 	add.w	r9, r8, #1
 801c102:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801c106:	f8a4 901a 	strh.w	r9, [r4, #26]
 801c10a:	ed87 4a00 	vstr	s8, [r7]
 801c10e:	ee04 2a10 	vmov	s8, r2
 801c112:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801c116:	68e7      	ldr	r7, [r4, #12]
 801c118:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
 801c11c:	f108 0901 	add.w	r9, r8, #1
 801c120:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801c124:	f8a4 901a 	strh.w	r9, [r4, #26]
 801c128:	ed87 4a00 	vstr	s8, [r7]
 801c12c:	e791      	b.n	801c052 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xd6>
 801c12e:	f1ba 0f00 	cmp.w	sl, #0
 801c132:	d146      	bne.n	801c1c2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x246>
 801c134:	f04f 0005 	mov.w	r0, #5
 801c138:	8327      	strh	r7, [r4, #24]
 801c13a:	f80b 0008 	strb.w	r0, [fp, r8]
 801c13e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801c142:	68e7      	ldr	r7, [r4, #12]
 801c144:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 801c148:	f108 0901 	add.w	r9, r8, #1
 801c14c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801c150:	ee17 0a90 	vmov	r0, s15
 801c154:	f8a4 901a 	strh.w	r9, [r4, #26]
 801c158:	ed87 5a00 	vstr	s10, [r7]
 801c15c:	ee05 2a10 	vmov	s10, r2
 801c160:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801c164:	68e7      	ldr	r7, [r4, #12]
 801c166:	4408      	add	r0, r1
 801c168:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 801c16c:	ee07 0a90 	vmov	s15, r0
 801c170:	f108 0901 	add.w	r9, r8, #1
 801c174:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801c178:	f8a4 901a 	strh.w	r9, [r4, #26]
 801c17c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801c180:	ed87 5a00 	vstr	s10, [r7]
 801c184:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801c188:	68e7      	ldr	r7, [r4, #12]
 801c18a:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801c18e:	f108 0901 	add.w	r9, r8, #1
 801c192:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801c196:	441a      	add	r2, r3
 801c198:	f8a4 901a 	strh.w	r9, [r4, #26]
 801c19c:	edc7 7a00 	vstr	s15, [r7]
 801c1a0:	ee07 2a90 	vmov	s15, r2
 801c1a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801c1a8:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801c1ac:	68e7      	ldr	r7, [r4, #12]
 801c1ae:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801c1b2:	f108 0901 	add.w	r9, r8, #1
 801c1b6:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801c1ba:	f8a4 901a 	strh.w	r9, [r4, #26]
 801c1be:	edc7 7a00 	vstr	s15, [r7]
 801c1c2:	461a      	mov	r2, r3
 801c1c4:	ee07 1a90 	vmov	s15, r1
 801c1c8:	e759      	b.n	801c07e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
 801c1ca:	f1ba 0f00 	cmp.w	sl, #0
 801c1ce:	d045      	beq.n	801c25c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 801c1d0:	ee05 1a90 	vmov	s11, r1
 801c1d4:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 801c1d8:	eef4 5a66 	vcmp.f32	s11, s13
 801c1dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c1e0:	d108      	bne.n	801c1f4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x278>
 801c1e2:	ee05 3a90 	vmov	s11, r3
 801c1e6:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 801c1ea:	eef4 5a47 	vcmp.f32	s11, s14
 801c1ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c1f2:	d033      	beq.n	801c25c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 801c1f4:	9b02      	ldr	r3, [sp, #8]
 801c1f6:	8327      	strh	r7, [r4, #24]
 801c1f8:	b1b3      	cbz	r3, 801c228 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2ac>
 801c1fa:	2302      	movs	r3, #2
 801c1fc:	f889 3000 	strb.w	r3, [r9]
 801c200:	8b62      	ldrh	r2, [r4, #26]
 801c202:	68e3      	ldr	r3, [r4, #12]
 801c204:	1c51      	adds	r1, r2, #1
 801c206:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801c20a:	8361      	strh	r1, [r4, #26]
 801c20c:	edc3 6a00 	vstr	s13, [r3]
 801c210:	8b62      	ldrh	r2, [r4, #26]
 801c212:	68e3      	ldr	r3, [r4, #12]
 801c214:	1c51      	adds	r1, r2, #1
 801c216:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801c21a:	8361      	strh	r1, [r4, #26]
 801c21c:	ed83 7a00 	vstr	s14, [r3]
 801c220:	9800      	ldr	r0, [sp, #0]
 801c222:	b007      	add	sp, #28
 801c224:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c228:	2305      	movs	r3, #5
 801c22a:	f889 3000 	strb.w	r3, [r9]
 801c22e:	8b62      	ldrh	r2, [r4, #26]
 801c230:	68e3      	ldr	r3, [r4, #12]
 801c232:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 801c236:	1c51      	adds	r1, r2, #1
 801c238:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801c23c:	8361      	strh	r1, [r4, #26]
 801c23e:	ee07 ea90 	vmov	s15, lr
 801c242:	ed83 6a00 	vstr	s12, [r3]
 801c246:	8b62      	ldrh	r2, [r4, #26]
 801c248:	68e3      	ldr	r3, [r4, #12]
 801c24a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801c24e:	1c51      	adds	r1, r2, #1
 801c250:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801c254:	8361      	strh	r1, [r4, #26]
 801c256:	edc3 7a00 	vstr	s15, [r3]
 801c25a:	e7d1      	b.n	801c200 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 801c25c:	ee05 2a90 	vmov	s11, r2
 801c260:	9902      	ldr	r1, [sp, #8]
 801c262:	8327      	strh	r7, [r4, #24]
 801c264:	2305      	movs	r3, #5
 801c266:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 801c26a:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 801c26e:	f889 3000 	strb.w	r3, [r9]
 801c272:	b181      	cbz	r1, 801c296 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x31a>
 801c274:	8b62      	ldrh	r2, [r4, #26]
 801c276:	68e3      	ldr	r3, [r4, #12]
 801c278:	1c51      	adds	r1, r2, #1
 801c27a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801c27e:	8361      	strh	r1, [r4, #26]
 801c280:	ed83 5a00 	vstr	s10, [r3]
 801c284:	8b62      	ldrh	r2, [r4, #26]
 801c286:	68e3      	ldr	r3, [r4, #12]
 801c288:	1c51      	adds	r1, r2, #1
 801c28a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801c28e:	8361      	strh	r1, [r4, #26]
 801c290:	edc3 5a00 	vstr	s11, [r3]
 801c294:	e7b4      	b.n	801c200 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 801c296:	8b65      	ldrh	r5, [r4, #26]
 801c298:	68e1      	ldr	r1, [r4, #12]
 801c29a:	1c6e      	adds	r6, r5, #1
 801c29c:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 801c2a0:	8366      	strh	r6, [r4, #26]
 801c2a2:	ed81 5a00 	vstr	s10, [r1]
 801c2a6:	8b65      	ldrh	r5, [r4, #26]
 801c2a8:	68e1      	ldr	r1, [r4, #12]
 801c2aa:	1c6e      	adds	r6, r5, #1
 801c2ac:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 801c2b0:	8366      	strh	r6, [r4, #26]
 801c2b2:	edc1 5a00 	vstr	s11, [r1]
 801c2b6:	8b65      	ldrh	r5, [r4, #26]
 801c2b8:	68e1      	ldr	r1, [r4, #12]
 801c2ba:	1c6e      	adds	r6, r5, #1
 801c2bc:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 801c2c0:	ee17 0a90 	vmov	r0, s15
 801c2c4:	ee16 5a10 	vmov	r5, s12
 801c2c8:	4428      	add	r0, r5
 801c2ca:	ee07 0a90 	vmov	s15, r0
 801c2ce:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801c2d2:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 801c2d6:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801c2da:	4472      	add	r2, lr
 801c2dc:	8366      	strh	r6, [r4, #26]
 801c2de:	edc1 7a00 	vstr	s15, [r1]
 801c2e2:	ee07 2a90 	vmov	s15, r2
 801c2e6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801c2ea:	8b61      	ldrh	r1, [r4, #26]
 801c2ec:	68e5      	ldr	r5, [r4, #12]
 801c2ee:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801c2f2:	1c4e      	adds	r6, r1, #1
 801c2f4:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 801c2f8:	8366      	strh	r6, [r4, #26]
 801c2fa:	edc1 7a00 	vstr	s15, [r1]
 801c2fe:	8b22      	ldrh	r2, [r4, #24]
 801c300:	68a1      	ldr	r1, [r4, #8]
 801c302:	1c55      	adds	r5, r2, #1
 801c304:	8325      	strh	r5, [r4, #24]
 801c306:	548b      	strb	r3, [r1, r2]
 801c308:	e791      	b.n	801c22e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2b2>
	...

0801c30c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
 801c30c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c310:	b08e      	sub	sp, #56	@ 0x38
 801c312:	4604      	mov	r4, r0
 801c314:	4688      	mov	r8, r1
 801c316:	4615      	mov	r5, r2
 801c318:	4699      	mov	r9, r3
 801c31a:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 801c31c:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
 801c320:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 801c322:	f7e7 f949 	bl	80035b8 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
 801c326:	6060      	str	r0, [r4, #4]
 801c328:	f1b9 0f00 	cmp.w	r9, #0
 801c32c:	f000 80e8 	beq.w	801c500 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 801c330:	2800      	cmp	r0, #0
 801c332:	f000 80e5 	beq.w	801c500 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 801c336:	a805      	add	r0, sp, #20
 801c338:	f000 f8f9 	bl	801c52e <_ZN8touchgfx9Matrix3x3C1Ev>
 801c33c:	6833      	ldr	r3, [r6, #0]
 801c33e:	4630      	mov	r0, r6
 801c340:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 801c342:	4798      	blx	r3
 801c344:	a805      	add	r0, sp, #20
 801c346:	eef0 0a40 	vmov.f32	s1, s0
 801c34a:	f000 f8f4 	bl	801c536 <_ZN8touchgfx9Matrix3x35scaleEff>
 801c34e:	6860      	ldr	r0, [r4, #4]
 801c350:	f1ba 0f03 	cmp.w	sl, #3
 801c354:	d83b      	bhi.n	801c3ce <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
 801c356:	e8df f00a 	tbb	[pc, sl]
 801c35a:	1002      	.short	0x1002
 801c35c:	9f71      	.short	0x9f71
 801c35e:	6803      	ldr	r3, [r0, #0]
 801c360:	462a      	mov	r2, r5
 801c362:	689b      	ldr	r3, [r3, #8]
 801c364:	4641      	mov	r1, r8
 801c366:	4798      	blx	r3
 801c368:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 801c36c:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 801c370:	ee07 7a90 	vmov	s15, r7
 801c374:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 801c378:	e026      	b.n	801c3c8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
 801c37a:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 801c37e:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 801c382:	8869      	ldrh	r1, [r5, #2]
 801c384:	f8ad 2010 	strh.w	r2, [sp, #16]
 801c388:	1a9b      	subs	r3, r3, r2
 801c38a:	1a5b      	subs	r3, r3, r1
 801c38c:	f8ad 300c 	strh.w	r3, [sp, #12]
 801c390:	882b      	ldrh	r3, [r5, #0]
 801c392:	f8ad 300e 	strh.w	r3, [sp, #14]
 801c396:	88ab      	ldrh	r3, [r5, #4]
 801c398:	f8ad 3012 	strh.w	r3, [sp, #18]
 801c39c:	6803      	ldr	r3, [r0, #0]
 801c39e:	aa03      	add	r2, sp, #12
 801c3a0:	689b      	ldr	r3, [r3, #8]
 801c3a2:	4641      	mov	r1, r8
 801c3a4:	4798      	blx	r3
 801c3a6:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 801c508 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
 801c3aa:	a805      	add	r0, sp, #20
 801c3ac:	f000 f8e8 	bl	801c580 <_ZN8touchgfx9Matrix3x36rotateEf>
 801c3b0:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 801c3b4:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801c3b6:	ee07 7a90 	vmov	s15, r7
 801c3ba:	1a9b      	subs	r3, r3, r2
 801c3bc:	ee00 3a10 	vmov	s0, r3
 801c3c0:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 801c3c4:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 801c3c8:	a805      	add	r0, sp, #20
 801c3ca:	f000 f927 	bl	801c61c <_ZN8touchgfx9Matrix3x39translateEff>
 801c3ce:	6860      	ldr	r0, [r4, #4]
 801c3d0:	6803      	ldr	r3, [r0, #0]
 801c3d2:	a905      	add	r1, sp, #20
 801c3d4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801c3d6:	4798      	blx	r3
 801c3d8:	6860      	ldr	r0, [r4, #4]
 801c3da:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801c3dc:	6803      	ldr	r3, [r0, #0]
 801c3de:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
 801c3e2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c3e4:	4798      	blx	r3
 801c3e6:	6860      	ldr	r0, [r4, #4]
 801c3e8:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 801c3ec:	6803      	ldr	r3, [r0, #0]
 801c3ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c3f0:	4798      	blx	r3
 801c3f2:	6860      	ldr	r0, [r4, #4]
 801c3f4:	6803      	ldr	r3, [r0, #0]
 801c3f6:	2101      	movs	r1, #1
 801c3f8:	68db      	ldr	r3, [r3, #12]
 801c3fa:	2500      	movs	r5, #0
 801c3fc:	4798      	blx	r3
 801c3fe:	f8b9 7000 	ldrh.w	r7, [r9]
 801c402:	61a5      	str	r5, [r4, #24]
 801c404:	f104 0310 	add.w	r3, r4, #16
 801c408:	f104 0208 	add.w	r2, r4, #8
 801c40c:	f104 0114 	add.w	r1, r4, #20
 801c410:	f104 000c 	add.w	r0, r4, #12
 801c414:	f109 0602 	add.w	r6, r9, #2
 801c418:	f7ee f84d 	bl	800a4b6 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
 801c41c:	42af      	cmp	r7, r5
 801c41e:	dd60      	ble.n	801c4e2 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
 801c420:	8831      	ldrh	r1, [r6, #0]
 801c422:	f101 030f 	add.w	r3, r1, #15
 801c426:	1cb2      	adds	r2, r6, #2
 801c428:	f3c3 1307 	ubfx	r3, r3, #4, #8
 801c42c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c430:	4620      	mov	r0, r4
 801c432:	f7ff fda3 	bl	801bf7c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
 801c436:	3501      	adds	r5, #1
 801c438:	4606      	mov	r6, r0
 801c43a:	e7ef      	b.n	801c41c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
 801c43c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 801c440:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 801c444:	8829      	ldrh	r1, [r5, #0]
 801c446:	f8ad 2010 	strh.w	r2, [sp, #16]
 801c44a:	1a9b      	subs	r3, r3, r2
 801c44c:	1a5b      	subs	r3, r3, r1
 801c44e:	f8ad 300c 	strh.w	r3, [sp, #12]
 801c452:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801c456:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 801c45a:	886d      	ldrh	r5, [r5, #2]
 801c45c:	f8ad 1012 	strh.w	r1, [sp, #18]
 801c460:	1a5b      	subs	r3, r3, r1
 801c462:	1b5b      	subs	r3, r3, r5
 801c464:	f8ad 300e 	strh.w	r3, [sp, #14]
 801c468:	6803      	ldr	r3, [r0, #0]
 801c46a:	aa03      	add	r2, sp, #12
 801c46c:	689b      	ldr	r3, [r3, #8]
 801c46e:	4641      	mov	r1, r8
 801c470:	4798      	blx	r3
 801c472:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 801c50c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
 801c476:	a805      	add	r0, sp, #20
 801c478:	f000 f882 	bl	801c580 <_ZN8touchgfx9Matrix3x36rotateEf>
 801c47c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 801c480:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801c482:	1a9b      	subs	r3, r3, r2
 801c484:	ee00 3a90 	vmov	s1, r3
 801c488:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 801c48c:	1bdb      	subs	r3, r3, r7
 801c48e:	ee00 3a10 	vmov	s0, r3
 801c492:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 801c496:	e795      	b.n	801c3c4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
 801c498:	886b      	ldrh	r3, [r5, #2]
 801c49a:	f8ad 300c 	strh.w	r3, [sp, #12]
 801c49e:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 801c4a2:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 801c4a6:	8829      	ldrh	r1, [r5, #0]
 801c4a8:	f8ad 2012 	strh.w	r2, [sp, #18]
 801c4ac:	1a9b      	subs	r3, r3, r2
 801c4ae:	1a5b      	subs	r3, r3, r1
 801c4b0:	f8ad 300e 	strh.w	r3, [sp, #14]
 801c4b4:	88eb      	ldrh	r3, [r5, #6]
 801c4b6:	f8ad 3010 	strh.w	r3, [sp, #16]
 801c4ba:	6803      	ldr	r3, [r0, #0]
 801c4bc:	aa03      	add	r2, sp, #12
 801c4be:	689b      	ldr	r3, [r3, #8]
 801c4c0:	4641      	mov	r1, r8
 801c4c2:	4798      	blx	r3
 801c4c4:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 801c510 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
 801c4c8:	a805      	add	r0, sp, #20
 801c4ca:	f000 f859 	bl	801c580 <_ZN8touchgfx9Matrix3x36rotateEf>
 801c4ce:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 801c4d2:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 801c4d6:	1bdb      	subs	r3, r3, r7
 801c4d8:	ee00 3a90 	vmov	s1, r3
 801c4dc:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 801c4e0:	e748      	b.n	801c374 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
 801c4e2:	6860      	ldr	r0, [r4, #4]
 801c4e4:	8b22      	ldrh	r2, [r4, #24]
 801c4e6:	6803      	ldr	r3, [r0, #0]
 801c4e8:	2100      	movs	r1, #0
 801c4ea:	9101      	str	r1, [sp, #4]
 801c4ec:	8b61      	ldrh	r1, [r4, #26]
 801c4ee:	9100      	str	r1, [sp, #0]
 801c4f0:	6a1d      	ldr	r5, [r3, #32]
 801c4f2:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
 801c4f6:	47a8      	blx	r5
 801c4f8:	6860      	ldr	r0, [r4, #4]
 801c4fa:	6803      	ldr	r3, [r0, #0]
 801c4fc:	69db      	ldr	r3, [r3, #28]
 801c4fe:	4798      	blx	r3
 801c500:	b00e      	add	sp, #56	@ 0x38
 801c502:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c506:	bf00      	nop
 801c508:	42b40000 	.word	0x42b40000
 801c50c:	43340000 	.word	0x43340000
 801c510:	43870000 	.word	0x43870000

0801c514 <_ZN8touchgfx9Matrix3x35resetEv>:
 801c514:	2300      	movs	r3, #0
 801c516:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 801c51a:	6002      	str	r2, [r0, #0]
 801c51c:	6043      	str	r3, [r0, #4]
 801c51e:	6083      	str	r3, [r0, #8]
 801c520:	60c3      	str	r3, [r0, #12]
 801c522:	6102      	str	r2, [r0, #16]
 801c524:	6143      	str	r3, [r0, #20]
 801c526:	6183      	str	r3, [r0, #24]
 801c528:	61c3      	str	r3, [r0, #28]
 801c52a:	6202      	str	r2, [r0, #32]
 801c52c:	4770      	bx	lr

0801c52e <_ZN8touchgfx9Matrix3x3C1Ev>:
 801c52e:	b508      	push	{r3, lr}
 801c530:	f7ff fff0 	bl	801c514 <_ZN8touchgfx9Matrix3x35resetEv>
 801c534:	bd08      	pop	{r3, pc}

0801c536 <_ZN8touchgfx9Matrix3x35scaleEff>:
 801c536:	edd0 7a00 	vldr	s15, [r0]
 801c53a:	ee67 7a80 	vmul.f32	s15, s15, s0
 801c53e:	edc0 7a00 	vstr	s15, [r0]
 801c542:	edd0 7a01 	vldr	s15, [r0, #4]
 801c546:	ee67 7a80 	vmul.f32	s15, s15, s0
 801c54a:	edc0 7a01 	vstr	s15, [r0, #4]
 801c54e:	edd0 7a02 	vldr	s15, [r0, #8]
 801c552:	ee27 0a80 	vmul.f32	s0, s15, s0
 801c556:	edd0 7a03 	vldr	s15, [r0, #12]
 801c55a:	ed80 0a02 	vstr	s0, [r0, #8]
 801c55e:	ee67 7aa0 	vmul.f32	s15, s15, s1
 801c562:	edc0 7a03 	vstr	s15, [r0, #12]
 801c566:	edd0 7a04 	vldr	s15, [r0, #16]
 801c56a:	ee67 7aa0 	vmul.f32	s15, s15, s1
 801c56e:	edc0 7a04 	vstr	s15, [r0, #16]
 801c572:	edd0 7a05 	vldr	s15, [r0, #20]
 801c576:	ee67 0aa0 	vmul.f32	s1, s15, s1
 801c57a:	edc0 0a05 	vstr	s1, [r0, #20]
 801c57e:	4770      	bx	lr

0801c580 <_ZN8touchgfx9Matrix3x36rotateEf>:
 801c580:	b510      	push	{r4, lr}
 801c582:	eddf 7a24 	vldr	s15, [pc, #144]	@ 801c614 <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
 801c586:	ee20 0a27 	vmul.f32	s0, s0, s15
 801c58a:	eddf 7a23 	vldr	s15, [pc, #140]	@ 801c618 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
 801c58e:	ed2d 8b02 	vpush	{d8}
 801c592:	eec0 8a27 	vdiv.f32	s17, s0, s15
 801c596:	4604      	mov	r4, r0
 801c598:	eeb0 0a68 	vmov.f32	s0, s17
 801c59c:	f011 f9d0 	bl	802d940 <cosf>
 801c5a0:	eeb0 8a40 	vmov.f32	s16, s0
 801c5a4:	eeb0 0a68 	vmov.f32	s0, s17
 801c5a8:	f011 fa0e 	bl	802d9c8 <sinf>
 801c5ac:	edd4 6a03 	vldr	s13, [r4, #12]
 801c5b0:	edd4 4a00 	vldr	s9, [r4]
 801c5b4:	ed94 7a04 	vldr	s14, [r4, #16]
 801c5b8:	ed94 5a01 	vldr	s10, [r4, #4]
 801c5bc:	edd4 5a02 	vldr	s11, [r4, #8]
 801c5c0:	ee60 7a66 	vnmul.f32	s15, s0, s13
 801c5c4:	ee66 6a88 	vmul.f32	s13, s13, s16
 801c5c8:	eee8 7a24 	vfma.f32	s15, s16, s9
 801c5cc:	eee0 6a24 	vfma.f32	s13, s0, s9
 801c5d0:	edc4 7a00 	vstr	s15, [r4]
 801c5d4:	ee60 7a47 	vnmul.f32	s15, s0, s14
 801c5d8:	ee27 7a08 	vmul.f32	s14, s14, s16
 801c5dc:	eee8 7a05 	vfma.f32	s15, s16, s10
 801c5e0:	eea0 7a05 	vfma.f32	s14, s0, s10
 801c5e4:	edc4 7a01 	vstr	s15, [r4, #4]
 801c5e8:	edd4 7a05 	vldr	s15, [r4, #20]
 801c5ec:	edc4 6a03 	vstr	s13, [r4, #12]
 801c5f0:	ee20 6a67 	vnmul.f32	s12, s0, s15
 801c5f4:	ee67 7a88 	vmul.f32	s15, s15, s16
 801c5f8:	eea8 6a25 	vfma.f32	s12, s16, s11
 801c5fc:	ecbd 8b02 	vpop	{d8}
 801c600:	eee0 7a25 	vfma.f32	s15, s0, s11
 801c604:	ed84 6a02 	vstr	s12, [r4, #8]
 801c608:	ed84 7a04 	vstr	s14, [r4, #16]
 801c60c:	edc4 7a05 	vstr	s15, [r4, #20]
 801c610:	bd10      	pop	{r4, pc}
 801c612:	bf00      	nop
 801c614:	40490fdb 	.word	0x40490fdb
 801c618:	43340000 	.word	0x43340000

0801c61c <_ZN8touchgfx9Matrix3x39translateEff>:
 801c61c:	ed90 6a06 	vldr	s12, [r0, #24]
 801c620:	edd0 7a00 	vldr	s15, [r0]
 801c624:	edd0 6a07 	vldr	s13, [r0, #28]
 801c628:	ed90 7a08 	vldr	s14, [r0, #32]
 801c62c:	eee6 7a00 	vfma.f32	s15, s12, s0
 801c630:	edc0 7a00 	vstr	s15, [r0]
 801c634:	edd0 7a01 	vldr	s15, [r0, #4]
 801c638:	eee6 7a80 	vfma.f32	s15, s13, s0
 801c63c:	edc0 7a01 	vstr	s15, [r0, #4]
 801c640:	edd0 7a02 	vldr	s15, [r0, #8]
 801c644:	eee7 7a00 	vfma.f32	s15, s14, s0
 801c648:	edc0 7a02 	vstr	s15, [r0, #8]
 801c64c:	edd0 7a03 	vldr	s15, [r0, #12]
 801c650:	eee6 7a20 	vfma.f32	s15, s12, s1
 801c654:	edc0 7a03 	vstr	s15, [r0, #12]
 801c658:	edd0 7a04 	vldr	s15, [r0, #16]
 801c65c:	eee6 7aa0 	vfma.f32	s15, s13, s1
 801c660:	edc0 7a04 	vstr	s15, [r0, #16]
 801c664:	edd0 7a05 	vldr	s15, [r0, #20]
 801c668:	eee7 7a20 	vfma.f32	s15, s14, s1
 801c66c:	edc0 7a05 	vstr	s15, [r0, #20]
 801c670:	4770      	bx	lr

0801c672 <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
 801c672:	edd0 6a01 	vldr	s13, [r0, #4]
 801c676:	edd0 7a04 	vldr	s15, [r0, #16]
 801c67a:	ed90 7a03 	vldr	s14, [r0, #12]
 801c67e:	ee60 7aa7 	vmul.f32	s15, s1, s15
 801c682:	ee60 0aa6 	vmul.f32	s1, s1, s13
 801c686:	edd0 6a00 	vldr	s13, [r0]
 801c68a:	eee7 7a00 	vfma.f32	s15, s14, s0
 801c68e:	b084      	sub	sp, #16
 801c690:	eee6 0a80 	vfma.f32	s1, s13, s0
 801c694:	ed90 7a05 	vldr	s14, [r0, #20]
 801c698:	ed90 0a02 	vldr	s0, [r0, #8]
 801c69c:	ee30 0a80 	vadd.f32	s0, s1, s0
 801c6a0:	ee77 0a87 	vadd.f32	s1, s15, s14
 801c6a4:	b004      	add	sp, #16
 801c6a6:	4770      	bx	lr

0801c6a8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 801c6a8:	b530      	push	{r4, r5, lr}
 801c6aa:	8083      	strh	r3, [r0, #4]
 801c6ac:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 801c6b0:	80c3      	strh	r3, [r0, #6]
 801c6b2:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801c6b6:	7203      	strb	r3, [r0, #8]
 801c6b8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801c6bc:	f89d 5018 	ldrb.w	r5, [sp, #24]
 801c6c0:	7243      	strb	r3, [r0, #9]
 801c6c2:	7a83      	ldrb	r3, [r0, #10]
 801c6c4:	6141      	str	r1, [r0, #20]
 801c6c6:	f365 0306 	bfi	r3, r5, #0, #7
 801c6ca:	f89d 501c 	ldrb.w	r5, [sp, #28]
 801c6ce:	8302      	strh	r2, [r0, #24]
 801c6d0:	f365 13c7 	bfi	r3, r5, #7, #1
 801c6d4:	7283      	strb	r3, [r0, #10]
 801c6d6:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801c6da:	72c3      	strb	r3, [r0, #11]
 801c6dc:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 801c6e0:	7303      	strb	r3, [r0, #12]
 801c6e2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801c6e6:	81c3      	strh	r3, [r0, #14]
 801c6e8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 801c6ec:	8203      	strh	r3, [r0, #16]
 801c6ee:	4b01      	ldr	r3, [pc, #4]	@ (801c6f4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 801c6f0:	6003      	str	r3, [r0, #0]
 801c6f2:	bd30      	pop	{r4, r5, pc}
 801c6f4:	08033188 	.word	0x08033188

0801c6f8 <_ZNK8touchgfx9ConstFont4findEt>:
 801c6f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c6fa:	6944      	ldr	r4, [r0, #20]
 801c6fc:	b3bc      	cbz	r4, 801c76e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801c6fe:	88a3      	ldrh	r3, [r4, #4]
 801c700:	8b02      	ldrh	r2, [r0, #24]
 801c702:	1acb      	subs	r3, r1, r3
 801c704:	f102 32ff 	add.w	r2, r2, #4294967295
 801c708:	d431      	bmi.n	801c76e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801c70a:	4293      	cmp	r3, r2
 801c70c:	dd0c      	ble.n	801c728 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801c70e:	230e      	movs	r3, #14
 801c710:	fb03 4302 	mla	r3, r3, r2, r4
 801c714:	889b      	ldrh	r3, [r3, #4]
 801c716:	1a5b      	subs	r3, r3, r1
 801c718:	1ad3      	subs	r3, r2, r3
 801c71a:	429a      	cmp	r2, r3
 801c71c:	db27      	blt.n	801c76e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801c71e:	2b00      	cmp	r3, #0
 801c720:	bfbc      	itt	lt
 801c722:	2302      	movlt	r3, #2
 801c724:	fb92 f3f3 	sdivlt	r3, r2, r3
 801c728:	2500      	movs	r5, #0
 801c72a:	260e      	movs	r6, #14
 801c72c:	4295      	cmp	r5, r2
 801c72e:	dc1e      	bgt.n	801c76e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801c730:	fb06 4003 	mla	r0, r6, r3, r4
 801c734:	8887      	ldrh	r7, [r0, #4]
 801c736:	42b9      	cmp	r1, r7
 801c738:	d01a      	beq.n	801c770 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801c73a:	d20d      	bcs.n	801c758 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 801c73c:	1e5a      	subs	r2, r3, #1
 801c73e:	4295      	cmp	r5, r2
 801c740:	dc15      	bgt.n	801c76e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801c742:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801c746:	1a5b      	subs	r3, r3, r1
 801c748:	1ad3      	subs	r3, r2, r3
 801c74a:	429a      	cmp	r2, r3
 801c74c:	db0f      	blt.n	801c76e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801c74e:	429d      	cmp	r5, r3
 801c750:	ddec      	ble.n	801c72c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801c752:	1953      	adds	r3, r2, r5
 801c754:	105b      	asrs	r3, r3, #1
 801c756:	e7e9      	b.n	801c72c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801c758:	1c5d      	adds	r5, r3, #1
 801c75a:	42aa      	cmp	r2, r5
 801c75c:	db07      	blt.n	801c76e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801c75e:	8a43      	ldrh	r3, [r0, #18]
 801c760:	1acb      	subs	r3, r1, r3
 801c762:	442b      	add	r3, r5
 801c764:	429d      	cmp	r5, r3
 801c766:	dc02      	bgt.n	801c76e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801c768:	429a      	cmp	r2, r3
 801c76a:	dadf      	bge.n	801c72c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801c76c:	e7f1      	b.n	801c752 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 801c76e:	2000      	movs	r0, #0
 801c770:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801c772 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 801c772:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c774:	4604      	mov	r4, r0
 801c776:	4617      	mov	r7, r2
 801c778:	461e      	mov	r6, r3
 801c77a:	b911      	cbnz	r1, 801c782 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 801c77c:	2500      	movs	r5, #0
 801c77e:	4628      	mov	r0, r5
 801c780:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801c782:	290a      	cmp	r1, #10
 801c784:	d0fa      	beq.n	801c77c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801c786:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 801c78a:	4291      	cmp	r1, r2
 801c78c:	d0f6      	beq.n	801c77c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801c78e:	f242 020b 	movw	r2, #8203	@ 0x200b
 801c792:	4291      	cmp	r1, r2
 801c794:	d0f2      	beq.n	801c77c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801c796:	f7ff ffaf 	bl	801c6f8 <_ZNK8touchgfx9ConstFont4findEt>
 801c79a:	4605      	mov	r5, r0
 801c79c:	b950      	cbnz	r0, 801c7b4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 801c79e:	6823      	ldr	r3, [r4, #0]
 801c7a0:	4620      	mov	r0, r4
 801c7a2:	691b      	ldr	r3, [r3, #16]
 801c7a4:	4798      	blx	r3
 801c7a6:	4601      	mov	r1, r0
 801c7a8:	4620      	mov	r0, r4
 801c7aa:	f7ff ffa5 	bl	801c6f8 <_ZNK8touchgfx9ConstFont4findEt>
 801c7ae:	4605      	mov	r5, r0
 801c7b0:	2800      	cmp	r0, #0
 801c7b2:	d0e3      	beq.n	801c77c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801c7b4:	6823      	ldr	r3, [r4, #0]
 801c7b6:	4629      	mov	r1, r5
 801c7b8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 801c7ba:	4620      	mov	r0, r4
 801c7bc:	4798      	blx	r3
 801c7be:	6038      	str	r0, [r7, #0]
 801c7c0:	6823      	ldr	r3, [r4, #0]
 801c7c2:	4620      	mov	r0, r4
 801c7c4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801c7c6:	4798      	blx	r3
 801c7c8:	7030      	strb	r0, [r6, #0]
 801c7ca:	e7d8      	b.n	801c77e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0801c7cc <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 801c7cc:	b538      	push	{r3, r4, r5, lr}
 801c7ce:	4605      	mov	r5, r0
 801c7d0:	f002 f964 	bl	801ea9c <_ZNK8touchgfx6Bitmap9getFormatEv>
 801c7d4:	4604      	mov	r4, r0
 801c7d6:	4628      	mov	r0, r5
 801c7d8:	f002 f8a4 	bl	801e924 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801c7dc:	2800      	cmp	r0, #0
 801c7de:	bf14      	ite	ne
 801c7e0:	2002      	movne	r0, #2
 801c7e2:	2000      	moveq	r0, #0
 801c7e4:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801c7e8:	b280      	uxth	r0, r0
 801c7ea:	bd38      	pop	{r3, r4, r5, pc}

0801c7ec <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 801c7ec:	b538      	push	{r3, r4, r5, lr}
 801c7ee:	4605      	mov	r5, r0
 801c7f0:	f002 f954 	bl	801ea9c <_ZNK8touchgfx6Bitmap9getFormatEv>
 801c7f4:	4604      	mov	r4, r0
 801c7f6:	4628      	mov	r0, r5
 801c7f8:	f002 f894 	bl	801e924 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801c7fc:	2800      	cmp	r0, #0
 801c7fe:	bf14      	ite	ne
 801c800:	2002      	movne	r0, #2
 801c802:	2000      	moveq	r0, #0
 801c804:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801c808:	f040 0001 	orr.w	r0, r0, #1
 801c80c:	b280      	uxth	r0, r0
 801c80e:	bd38      	pop	{r3, r4, r5, pc}

0801c810 <_ZN8touchgfx4clzuEm>:
 801c810:	4603      	mov	r3, r0
 801c812:	b1c8      	cbz	r0, 801c848 <_ZN8touchgfx4clzuEm+0x38>
 801c814:	0c02      	lsrs	r2, r0, #16
 801c816:	0412      	lsls	r2, r2, #16
 801c818:	b9a2      	cbnz	r2, 801c844 <_ZN8touchgfx4clzuEm+0x34>
 801c81a:	0403      	lsls	r3, r0, #16
 801c81c:	2010      	movs	r0, #16
 801c81e:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 801c822:	bf04      	itt	eq
 801c824:	021b      	lsleq	r3, r3, #8
 801c826:	3008      	addeq	r0, #8
 801c828:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 801c82c:	bf04      	itt	eq
 801c82e:	011b      	lsleq	r3, r3, #4
 801c830:	3004      	addeq	r0, #4
 801c832:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 801c836:	bf04      	itt	eq
 801c838:	009b      	lsleq	r3, r3, #2
 801c83a:	3002      	addeq	r0, #2
 801c83c:	2b00      	cmp	r3, #0
 801c83e:	db04      	blt.n	801c84a <_ZN8touchgfx4clzuEm+0x3a>
 801c840:	3001      	adds	r0, #1
 801c842:	4770      	bx	lr
 801c844:	2000      	movs	r0, #0
 801c846:	e7ea      	b.n	801c81e <_ZN8touchgfx4clzuEm+0xe>
 801c848:	2020      	movs	r0, #32
 801c84a:	4770      	bx	lr

0801c84c <_ZN8touchgfx7muldivuEmmmRm>:
 801c84c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 801c850:	460f      	mov	r7, r1
 801c852:	4615      	mov	r5, r2
 801c854:	461e      	mov	r6, r3
 801c856:	4601      	mov	r1, r0
 801c858:	b100      	cbz	r0, 801c85c <_ZN8touchgfx7muldivuEmmmRm+0x10>
 801c85a:	b927      	cbnz	r7, 801c866 <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 801c85c:	2000      	movs	r0, #0
 801c85e:	6030      	str	r0, [r6, #0]
 801c860:	b002      	add	sp, #8
 801c862:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c866:	f7ff ffd3 	bl	801c810 <_ZN8touchgfx4clzuEm>
 801c86a:	b980      	cbnz	r0, 801c88e <_ZN8touchgfx7muldivuEmmmRm+0x42>
 801c86c:	4638      	mov	r0, r7
 801c86e:	f7ff ffcf 	bl	801c810 <_ZN8touchgfx4clzuEm>
 801c872:	2800      	cmp	r0, #0
 801c874:	dd05      	ble.n	801c882 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801c876:	4633      	mov	r3, r6
 801c878:	462a      	mov	r2, r5
 801c87a:	4638      	mov	r0, r7
 801c87c:	f7ff ffe6 	bl	801c84c <_ZN8touchgfx7muldivuEmmmRm>
 801c880:	e7ee      	b.n	801c860 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801c882:	f04f 33ff 	mov.w	r3, #4294967295
 801c886:	6033      	str	r3, [r6, #0]
 801c888:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 801c88c:	e7e8      	b.n	801c860 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801c88e:	fa37 f800 	lsrs.w	r8, r7, r0
 801c892:	fb07 f301 	mul.w	r3, r7, r1
 801c896:	d105      	bne.n	801c8a4 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 801c898:	fbb3 f0f5 	udiv	r0, r3, r5
 801c89c:	fb05 3510 	mls	r5, r5, r0, r3
 801c8a0:	6035      	str	r5, [r6, #0]
 801c8a2:	e7dd      	b.n	801c860 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801c8a4:	2301      	movs	r3, #1
 801c8a6:	fa01 fa00 	lsl.w	sl, r1, r0
 801c8aa:	fa03 f000 	lsl.w	r0, r3, r0
 801c8ae:	3801      	subs	r0, #1
 801c8b0:	462a      	mov	r2, r5
 801c8b2:	4633      	mov	r3, r6
 801c8b4:	4038      	ands	r0, r7
 801c8b6:	f7ff ffc9 	bl	801c84c <_ZN8touchgfx7muldivuEmmmRm>
 801c8ba:	fbba f9f5 	udiv	r9, sl, r5
 801c8be:	462a      	mov	r2, r5
 801c8c0:	4607      	mov	r7, r0
 801c8c2:	ab01      	add	r3, sp, #4
 801c8c4:	fb05 a119 	mls	r1, r5, r9, sl
 801c8c8:	4640      	mov	r0, r8
 801c8ca:	f7ff ffbf 	bl	801c84c <_ZN8touchgfx7muldivuEmmmRm>
 801c8ce:	9b01      	ldr	r3, [sp, #4]
 801c8d0:	6832      	ldr	r2, [r6, #0]
 801c8d2:	fb08 f409 	mul.w	r4, r8, r9
 801c8d6:	441a      	add	r2, r3
 801c8d8:	fbb2 f3f5 	udiv	r3, r2, r5
 801c8dc:	441c      	add	r4, r3
 801c8de:	443c      	add	r4, r7
 801c8e0:	4420      	add	r0, r4
 801c8e2:	fb05 2513 	mls	r5, r5, r3, r2
 801c8e6:	e7db      	b.n	801c8a0 <_ZN8touchgfx7muldivuEmmmRm+0x54>

0801c8e8 <_ZN8touchgfx6muldivElllRl>:
 801c8e8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801c8ea:	2800      	cmp	r0, #0
 801c8ec:	bfba      	itte	lt
 801c8ee:	4240      	neglt	r0, r0
 801c8f0:	f04f 34ff 	movlt.w	r4, #4294967295
 801c8f4:	2401      	movge	r4, #1
 801c8f6:	2900      	cmp	r1, #0
 801c8f8:	bfbc      	itt	lt
 801c8fa:	4249      	neglt	r1, r1
 801c8fc:	4264      	neglt	r4, r4
 801c8fe:	2a00      	cmp	r2, #0
 801c900:	bfb6      	itet	lt
 801c902:	4265      	neglt	r5, r4
 801c904:	4625      	movge	r5, r4
 801c906:	4252      	neglt	r2, r2
 801c908:	4288      	cmp	r0, r1
 801c90a:	461e      	mov	r6, r3
 801c90c:	bfc2      	ittt	gt
 801c90e:	4603      	movgt	r3, r0
 801c910:	4608      	movgt	r0, r1
 801c912:	4619      	movgt	r1, r3
 801c914:	ab01      	add	r3, sp, #4
 801c916:	f7ff ff99 	bl	801c84c <_ZN8touchgfx7muldivuEmmmRm>
 801c91a:	9b01      	ldr	r3, [sp, #4]
 801c91c:	4368      	muls	r0, r5
 801c91e:	435c      	muls	r4, r3
 801c920:	6034      	str	r4, [r6, #0]
 801c922:	b002      	add	sp, #8
 801c924:	bd70      	pop	{r4, r5, r6, pc}

0801c926 <_ZN8touchgfx6muldivElll>:
 801c926:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801c928:	4606      	mov	r6, r0
 801c92a:	ab01      	add	r3, sp, #4
 801c92c:	460d      	mov	r5, r1
 801c92e:	4614      	mov	r4, r2
 801c930:	f7ff ffda 	bl	801c8e8 <_ZN8touchgfx6muldivElllRl>
 801c934:	2e00      	cmp	r6, #0
 801c936:	db20      	blt.n	801c97a <_ZN8touchgfx6muldivElll+0x54>
 801c938:	bf14      	ite	ne
 801c93a:	2301      	movne	r3, #1
 801c93c:	2300      	moveq	r3, #0
 801c93e:	2d00      	cmp	r5, #0
 801c940:	db1e      	blt.n	801c980 <_ZN8touchgfx6muldivElll+0x5a>
 801c942:	bf14      	ite	ne
 801c944:	2201      	movne	r2, #1
 801c946:	2200      	moveq	r2, #0
 801c948:	2c00      	cmp	r4, #0
 801c94a:	fb03 f202 	mul.w	r2, r3, r2
 801c94e:	db1a      	blt.n	801c986 <_ZN8touchgfx6muldivElll+0x60>
 801c950:	bf14      	ite	ne
 801c952:	2301      	movne	r3, #1
 801c954:	2300      	moveq	r3, #0
 801c956:	4353      	muls	r3, r2
 801c958:	2b01      	cmp	r3, #1
 801c95a:	d117      	bne.n	801c98c <_ZN8touchgfx6muldivElll+0x66>
 801c95c:	9b01      	ldr	r3, [sp, #4]
 801c95e:	2c00      	cmp	r4, #0
 801c960:	bfb8      	it	lt
 801c962:	4264      	neglt	r4, r4
 801c964:	2b00      	cmp	r3, #0
 801c966:	f104 0401 	add.w	r4, r4, #1
 801c96a:	bfb8      	it	lt
 801c96c:	425b      	neglt	r3, r3
 801c96e:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801c972:	db00      	blt.n	801c976 <_ZN8touchgfx6muldivElll+0x50>
 801c974:	3001      	adds	r0, #1
 801c976:	b002      	add	sp, #8
 801c978:	bd70      	pop	{r4, r5, r6, pc}
 801c97a:	f04f 33ff 	mov.w	r3, #4294967295
 801c97e:	e7de      	b.n	801c93e <_ZN8touchgfx6muldivElll+0x18>
 801c980:	f04f 32ff 	mov.w	r2, #4294967295
 801c984:	e7e0      	b.n	801c948 <_ZN8touchgfx6muldivElll+0x22>
 801c986:	f04f 33ff 	mov.w	r3, #4294967295
 801c98a:	e7e4      	b.n	801c956 <_ZN8touchgfx6muldivElll+0x30>
 801c98c:	3301      	adds	r3, #1
 801c98e:	d1f2      	bne.n	801c976 <_ZN8touchgfx6muldivElll+0x50>
 801c990:	9b01      	ldr	r3, [sp, #4]
 801c992:	2c00      	cmp	r4, #0
 801c994:	bfb8      	it	lt
 801c996:	4264      	neglt	r4, r4
 801c998:	2b00      	cmp	r3, #0
 801c99a:	bfb8      	it	lt
 801c99c:	425b      	neglt	r3, r3
 801c99e:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801c9a2:	bfc8      	it	gt
 801c9a4:	f100 30ff 	addgt.w	r0, r0, #4294967295
 801c9a8:	e7e5      	b.n	801c976 <_ZN8touchgfx6muldivElll+0x50>

0801c9aa <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801c9aa:	2000      	movs	r0, #0
 801c9ac:	4770      	bx	lr

0801c9ae <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 801c9ae:	2001      	movs	r0, #1
 801c9b0:	4770      	bx	lr

0801c9b2 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 801c9b2:	2002      	movs	r0, #2
 801c9b4:	4770      	bx	lr

0801c9b6 <_ZN8touchgfx6ScreenD1Ev>:
 801c9b6:	4770      	bx	lr

0801c9b8 <_ZN8touchgfx12GestureEventD1Ev>:
 801c9b8:	4770      	bx	lr

0801c9ba <_ZN8touchgfx9DragEventD1Ev>:
 801c9ba:	4770      	bx	lr

0801c9bc <_ZN8touchgfx10ClickEventD1Ev>:
 801c9bc:	4770      	bx	lr

0801c9be <_ZN8touchgfx10ClickEventD0Ev>:
 801c9be:	b510      	push	{r4, lr}
 801c9c0:	210c      	movs	r1, #12
 801c9c2:	4604      	mov	r4, r0
 801c9c4:	f010 ff73 	bl	802d8ae <_ZdlPvj>
 801c9c8:	4620      	mov	r0, r4
 801c9ca:	bd10      	pop	{r4, pc}

0801c9cc <_ZN8touchgfx9DragEventD0Ev>:
 801c9cc:	b510      	push	{r4, lr}
 801c9ce:	2110      	movs	r1, #16
 801c9d0:	4604      	mov	r4, r0
 801c9d2:	f010 ff6c 	bl	802d8ae <_ZdlPvj>
 801c9d6:	4620      	mov	r0, r4
 801c9d8:	bd10      	pop	{r4, pc}

0801c9da <_ZN8touchgfx12GestureEventD0Ev>:
 801c9da:	b510      	push	{r4, lr}
 801c9dc:	210c      	movs	r1, #12
 801c9de:	4604      	mov	r4, r0
 801c9e0:	f010 ff65 	bl	802d8ae <_ZdlPvj>
 801c9e4:	4620      	mov	r0, r4
 801c9e6:	bd10      	pop	{r4, pc}

0801c9e8 <_ZN8touchgfx6ScreenD0Ev>:
 801c9e8:	b510      	push	{r4, lr}
 801c9ea:	213c      	movs	r1, #60	@ 0x3c
 801c9ec:	4604      	mov	r4, r0
 801c9ee:	f010 ff5e 	bl	802d8ae <_ZdlPvj>
 801c9f2:	4620      	mov	r0, r4
 801c9f4:	bd10      	pop	{r4, pc}
	...

0801c9f8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801c9f8:	b530      	push	{r4, r5, lr}
 801c9fa:	460d      	mov	r5, r1
 801c9fc:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 801c9fe:	b087      	sub	sp, #28
 801ca00:	4604      	mov	r4, r0
 801ca02:	b301      	cbz	r1, 801ca46 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 801ca04:	a801      	add	r0, sp, #4
 801ca06:	f7ff fa93 	bl	801bf30 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801ca0a:	892a      	ldrh	r2, [r5, #8]
 801ca0c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801ca10:	7928      	ldrb	r0, [r5, #4]
 801ca12:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801ca16:	f88d 0010 	strb.w	r0, [sp, #16]
 801ca1a:	1ad2      	subs	r2, r2, r3
 801ca1c:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 801ca1e:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 801ca20:	f8ad 1012 	strh.w	r1, [sp, #18]
 801ca24:	441a      	add	r2, r3
 801ca26:	896b      	ldrh	r3, [r5, #10]
 801ca28:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 801ca2c:	f8ad 2014 	strh.w	r2, [sp, #20]
 801ca30:	1b5b      	subs	r3, r3, r5
 801ca32:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 801ca34:	442b      	add	r3, r5
 801ca36:	4d05      	ldr	r5, [pc, #20]	@ (801ca4c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801ca38:	9503      	str	r5, [sp, #12]
 801ca3a:	f8ad 3016 	strh.w	r3, [sp, #22]
 801ca3e:	6803      	ldr	r3, [r0, #0]
 801ca40:	a903      	add	r1, sp, #12
 801ca42:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801ca44:	4798      	blx	r3
 801ca46:	b007      	add	sp, #28
 801ca48:	bd30      	pop	{r4, r5, pc}
 801ca4a:	bf00      	nop
 801ca4c:	08033218 	.word	0x08033218

0801ca50 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 801ca50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801ca54:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 801ca56:	b08a      	sub	sp, #40	@ 0x28
 801ca58:	4604      	mov	r4, r0
 801ca5a:	460d      	mov	r5, r1
 801ca5c:	b113      	cbz	r3, 801ca64 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801ca5e:	790b      	ldrb	r3, [r1, #4]
 801ca60:	2b00      	cmp	r3, #0
 801ca62:	d044      	beq.n	801caee <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801ca64:	f104 0804 	add.w	r8, r4, #4
 801ca68:	4641      	mov	r1, r8
 801ca6a:	a803      	add	r0, sp, #12
 801ca6c:	f7ff fa60 	bl	801bf30 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801ca70:	792b      	ldrb	r3, [r5, #4]
 801ca72:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801ca76:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801ca7a:	b983      	cbnz	r3, 801ca9e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 801ca7c:	892a      	ldrh	r2, [r5, #8]
 801ca7e:	88e9      	ldrh	r1, [r5, #6]
 801ca80:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 801ca84:	1b92      	subs	r2, r2, r6
 801ca86:	1bc9      	subs	r1, r1, r7
 801ca88:	9301      	str	r3, [sp, #4]
 801ca8a:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 801ca8e:	9300      	str	r3, [sp, #0]
 801ca90:	b212      	sxth	r2, r2
 801ca92:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 801ca96:	b209      	sxth	r1, r1
 801ca98:	4640      	mov	r0, r8
 801ca9a:	f7f5 ffe7 	bl	8012a6c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801ca9e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 801caa0:	b329      	cbz	r1, 801caee <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801caa2:	a805      	add	r0, sp, #20
 801caa4:	f7ff fa44 	bl	801bf30 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801caa8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801caac:	792b      	ldrb	r3, [r5, #4]
 801caae:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 801cab0:	f88d 3020 	strb.w	r3, [sp, #32]
 801cab4:	1abf      	subs	r7, r7, r2
 801cab6:	88ea      	ldrh	r2, [r5, #6]
 801cab8:	4417      	add	r7, r2
 801caba:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 801cabc:	4417      	add	r7, r2
 801cabe:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801cac2:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 801cac6:	1ab6      	subs	r6, r6, r2
 801cac8:	892a      	ldrh	r2, [r5, #8]
 801caca:	4416      	add	r6, r2
 801cacc:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801cace:	4416      	add	r6, r2
 801cad0:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 801cad4:	4a07      	ldr	r2, [pc, #28]	@ (801caf4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801cad6:	9207      	str	r2, [sp, #28]
 801cad8:	2600      	movs	r6, #0
 801cada:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 801cade:	6803      	ldr	r3, [r0, #0]
 801cae0:	a907      	add	r1, sp, #28
 801cae2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801cae4:	4798      	blx	r3
 801cae6:	792b      	ldrb	r3, [r5, #4]
 801cae8:	b10b      	cbz	r3, 801caee <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801caea:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 801caee:	b00a      	add	sp, #40	@ 0x28
 801caf0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801caf4:	080331f0 	.word	0x080331f0

0801caf8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801caf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801cafc:	460c      	mov	r4, r1
 801cafe:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 801cb00:	b088      	sub	sp, #32
 801cb02:	4605      	mov	r5, r0
 801cb04:	2900      	cmp	r1, #0
 801cb06:	d06d      	beq.n	801cbe4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801cb08:	4668      	mov	r0, sp
 801cb0a:	f7ff fa11 	bl	801bf30 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801cb0e:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 801cb10:	88e3      	ldrh	r3, [r4, #6]
 801cb12:	f9bd 8000 	ldrsh.w	r8, [sp]
 801cb16:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801cb1a:	440b      	add	r3, r1
 801cb1c:	b21b      	sxth	r3, r3
 801cb1e:	4543      	cmp	r3, r8
 801cb20:	db31      	blt.n	801cb86 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801cb22:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801cb26:	44c4      	add	ip, r8
 801cb28:	fa0f fc8c 	sxth.w	ip, ip
 801cb2c:	4563      	cmp	r3, ip
 801cb2e:	da2a      	bge.n	801cb86 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801cb30:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 801cb32:	8926      	ldrh	r6, [r4, #8]
 801cb34:	4416      	add	r6, r2
 801cb36:	b236      	sxth	r6, r6
 801cb38:	42be      	cmp	r6, r7
 801cb3a:	db24      	blt.n	801cb86 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801cb3c:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801cb40:	4438      	add	r0, r7
 801cb42:	b200      	sxth	r0, r0
 801cb44:	4286      	cmp	r6, r0
 801cb46:	da1e      	bge.n	801cb86 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801cb48:	8963      	ldrh	r3, [r4, #10]
 801cb4a:	4419      	add	r1, r3
 801cb4c:	b209      	sxth	r1, r1
 801cb4e:	4541      	cmp	r1, r8
 801cb50:	db08      	blt.n	801cb64 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801cb52:	4561      	cmp	r1, ip
 801cb54:	da06      	bge.n	801cb64 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801cb56:	89a3      	ldrh	r3, [r4, #12]
 801cb58:	441a      	add	r2, r3
 801cb5a:	b212      	sxth	r2, r2
 801cb5c:	42ba      	cmp	r2, r7
 801cb5e:	db01      	blt.n	801cb64 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801cb60:	4282      	cmp	r2, r0
 801cb62:	db10      	blt.n	801cb86 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801cb64:	4b21      	ldr	r3, [pc, #132]	@ (801cbec <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801cb66:	9304      	str	r3, [sp, #16]
 801cb68:	2302      	movs	r3, #2
 801cb6a:	f88d 3014 	strb.w	r3, [sp, #20]
 801cb6e:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 801cb70:	2300      	movs	r3, #0
 801cb72:	f8ad 3016 	strh.w	r3, [sp, #22]
 801cb76:	f8ad 3018 	strh.w	r3, [sp, #24]
 801cb7a:	f8ad 301a 	strh.w	r3, [sp, #26]
 801cb7e:	6803      	ldr	r3, [r0, #0]
 801cb80:	a904      	add	r1, sp, #16
 801cb82:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801cb84:	4798      	blx	r3
 801cb86:	1d29      	adds	r1, r5, #4
 801cb88:	a802      	add	r0, sp, #8
 801cb8a:	f7ff f9d1 	bl	801bf30 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801cb8e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801cb92:	88e0      	ldrh	r0, [r4, #6]
 801cb94:	7921      	ldrb	r1, [r4, #4]
 801cb96:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 801cb9a:	8922      	ldrh	r2, [r4, #8]
 801cb9c:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 801cb9e:	f88d 1014 	strb.w	r1, [sp, #20]
 801cba2:	eba3 0808 	sub.w	r8, r3, r8
 801cba6:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801cbaa:	1bdf      	subs	r7, r3, r7
 801cbac:	b2bb      	uxth	r3, r7
 801cbae:	fa1f f888 	uxth.w	r8, r8
 801cbb2:	8967      	ldrh	r7, [r4, #10]
 801cbb4:	89a4      	ldrh	r4, [r4, #12]
 801cbb6:	4440      	add	r0, r8
 801cbb8:	4460      	add	r0, ip
 801cbba:	441a      	add	r2, r3
 801cbbc:	44b8      	add	r8, r7
 801cbbe:	4423      	add	r3, r4
 801cbc0:	f8ad 0016 	strh.w	r0, [sp, #22]
 801cbc4:	4433      	add	r3, r6
 801cbc6:	4432      	add	r2, r6
 801cbc8:	44e0      	add	r8, ip
 801cbca:	4c09      	ldr	r4, [pc, #36]	@ (801cbf0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 801cbcc:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 801cbce:	9404      	str	r4, [sp, #16]
 801cbd0:	f8ad 2018 	strh.w	r2, [sp, #24]
 801cbd4:	f8ad 801a 	strh.w	r8, [sp, #26]
 801cbd8:	f8ad 301c 	strh.w	r3, [sp, #28]
 801cbdc:	6803      	ldr	r3, [r0, #0]
 801cbde:	a904      	add	r1, sp, #16
 801cbe0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801cbe2:	4798      	blx	r3
 801cbe4:	b008      	add	sp, #32
 801cbe6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801cbea:	bf00      	nop
 801cbec:	080331f0 	.word	0x080331f0
 801cbf0:	08033204 	.word	0x08033204

0801cbf4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801cbf4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801cbf6:	4604      	mov	r4, r0
 801cbf8:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 801cbfc:	3201      	adds	r2, #1
 801cbfe:	d112      	bne.n	801cc26 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 801cc00:	6803      	ldr	r3, [r0, #0]
 801cc02:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801cc06:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801cc0a:	f8ad 1004 	strh.w	r1, [sp, #4]
 801cc0e:	2500      	movs	r5, #0
 801cc10:	9500      	str	r5, [sp, #0]
 801cc12:	466d      	mov	r5, sp
 801cc14:	4629      	mov	r1, r5
 801cc16:	f8ad 2006 	strh.w	r2, [sp, #6]
 801cc1a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801cc1c:	4798      	blx	r3
 801cc1e:	e895 0003 	ldmia.w	r5, {r0, r1}
 801cc22:	e884 0003 	stmia.w	r4, {r0, r1}
 801cc26:	4620      	mov	r0, r4
 801cc28:	b003      	add	sp, #12
 801cc2a:	bd30      	pop	{r4, r5, pc}

0801cc2c <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 801cc2c:	b513      	push	{r0, r1, r4, lr}
 801cc2e:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801cc32:	3301      	adds	r3, #1
 801cc34:	4604      	mov	r4, r0
 801cc36:	d109      	bne.n	801cc4c <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801cc38:	4601      	mov	r1, r0
 801cc3a:	4668      	mov	r0, sp
 801cc3c:	f7ff f978 	bl	801bf30 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801cc40:	f8bd 3000 	ldrh.w	r3, [sp]
 801cc44:	8423      	strh	r3, [r4, #32]
 801cc46:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801cc4a:	8463      	strh	r3, [r4, #34]	@ 0x22
 801cc4c:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 801cc50:	b002      	add	sp, #8
 801cc52:	bd10      	pop	{r4, pc}

0801cc54 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801cc54:	b513      	push	{r0, r1, r4, lr}
 801cc56:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 801cc5a:	3301      	adds	r3, #1
 801cc5c:	4604      	mov	r4, r0
 801cc5e:	d109      	bne.n	801cc74 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 801cc60:	4601      	mov	r1, r0
 801cc62:	4668      	mov	r0, sp
 801cc64:	f7ff f964 	bl	801bf30 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801cc68:	f8bd 3000 	ldrh.w	r3, [sp]
 801cc6c:	8423      	strh	r3, [r4, #32]
 801cc6e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801cc72:	8463      	strh	r3, [r4, #34]	@ 0x22
 801cc74:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 801cc78:	b002      	add	sp, #8
 801cc7a:	bd10      	pop	{r4, pc}

0801cc7c <_ZN8touchgfx6ScreenC1Ev>:
 801cc7c:	b570      	push	{r4, r5, r6, lr}
 801cc7e:	4605      	mov	r5, r0
 801cc80:	4b16      	ldr	r3, [pc, #88]	@ (801ccdc <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801cc82:	f845 3b04 	str.w	r3, [r5], #4
 801cc86:	2300      	movs	r3, #0
 801cc88:	8103      	strh	r3, [r0, #8]
 801cc8a:	8143      	strh	r3, [r0, #10]
 801cc8c:	8183      	strh	r3, [r0, #12]
 801cc8e:	81c3      	strh	r3, [r0, #14]
 801cc90:	8203      	strh	r3, [r0, #16]
 801cc92:	8243      	strh	r3, [r0, #18]
 801cc94:	8283      	strh	r3, [r0, #20]
 801cc96:	82c3      	strh	r3, [r0, #22]
 801cc98:	e9c0 3306 	strd	r3, r3, [r0, #24]
 801cc9c:	6203      	str	r3, [r0, #32]
 801cc9e:	8483      	strh	r3, [r0, #36]	@ 0x24
 801cca0:	84c3      	strh	r3, [r0, #38]	@ 0x26
 801cca2:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 801cca6:	4a0e      	ldr	r2, [pc, #56]	@ (801cce0 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801cca8:	6343      	str	r3, [r0, #52]	@ 0x34
 801ccaa:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 801ccae:	4b0d      	ldr	r3, [pc, #52]	@ (801cce4 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 801ccb0:	6042      	str	r2, [r0, #4]
 801ccb2:	f9b3 6000 	ldrsh.w	r6, [r3]
 801ccb6:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 801ccb8:	4a0b      	ldr	r2, [pc, #44]	@ (801cce8 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801ccba:	4604      	mov	r4, r0
 801ccbc:	2101      	movs	r1, #1
 801ccbe:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 801ccc2:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 801ccc6:	f9b2 1000 	ldrsh.w	r1, [r2]
 801ccca:	4628      	mov	r0, r5
 801cccc:	4798      	blx	r3
 801ccce:	6863      	ldr	r3, [r4, #4]
 801ccd0:	4628      	mov	r0, r5
 801ccd2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801ccd4:	4631      	mov	r1, r6
 801ccd6:	4798      	blx	r3
 801ccd8:	4620      	mov	r0, r4
 801ccda:	bd70      	pop	{r4, r5, r6, pc}
 801ccdc:	0803322c 	.word	0x0803322c
 801cce0:	080321ec 	.word	0x080321ec
 801cce4:	2000e402 	.word	0x2000e402
 801cce8:	2000e400 	.word	0x2000e400

0801ccec <_ZN8touchgfx6Screen4drawEv>:
 801ccec:	b507      	push	{r0, r1, r2, lr}
 801ccee:	4b09      	ldr	r3, [pc, #36]	@ (801cd14 <_ZN8touchgfx6Screen4drawEv+0x28>)
 801ccf0:	f9b3 2000 	ldrsh.w	r2, [r3]
 801ccf4:	4b08      	ldr	r3, [pc, #32]	@ (801cd18 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801ccf6:	f8ad 2004 	strh.w	r2, [sp, #4]
 801ccfa:	f9b3 3000 	ldrsh.w	r3, [r3]
 801ccfe:	f8ad 3006 	strh.w	r3, [sp, #6]
 801cd02:	6803      	ldr	r3, [r0, #0]
 801cd04:	2100      	movs	r1, #0
 801cd06:	9100      	str	r1, [sp, #0]
 801cd08:	689b      	ldr	r3, [r3, #8]
 801cd0a:	4669      	mov	r1, sp
 801cd0c:	4798      	blx	r3
 801cd0e:	b003      	add	sp, #12
 801cd10:	f85d fb04 	ldr.w	pc, [sp], #4
 801cd14:	2000e400 	.word	0x2000e400
 801cd18:	2000e402 	.word	0x2000e402

0801cd1c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 801cd1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cd20:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801cd24:	2b00      	cmp	r3, #0
 801cd26:	b089      	sub	sp, #36	@ 0x24
 801cd28:	4680      	mov	r8, r0
 801cd2a:	460c      	mov	r4, r1
 801cd2c:	4615      	mov	r5, r2
 801cd2e:	dd0e      	ble.n	801cd4e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801cd30:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801cd34:	2b00      	cmp	r3, #0
 801cd36:	dd0a      	ble.n	801cd4e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801cd38:	4628      	mov	r0, r5
 801cd3a:	f7ff ff5b 	bl	801cbf4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801cd3e:	4621      	mov	r1, r4
 801cd40:	f7fd fde7 	bl	801a912 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801cd44:	69eb      	ldr	r3, [r5, #28]
 801cd46:	b928      	cbnz	r0, 801cd54 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801cd48:	461d      	mov	r5, r3
 801cd4a:	2b00      	cmp	r3, #0
 801cd4c:	d1f4      	bne.n	801cd38 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801cd4e:	b009      	add	sp, #36	@ 0x24
 801cd50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cd54:	ae04      	add	r6, sp, #16
 801cd56:	2b00      	cmp	r3, #0
 801cd58:	f000 80b5 	beq.w	801cec6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801cd5c:	682b      	ldr	r3, [r5, #0]
 801cd5e:	4629      	mov	r1, r5
 801cd60:	68db      	ldr	r3, [r3, #12]
 801cd62:	a802      	add	r0, sp, #8
 801cd64:	4798      	blx	r3
 801cd66:	4628      	mov	r0, r5
 801cd68:	f7ff ff60 	bl	801cc2c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801cd6c:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 801cd70:	4407      	add	r7, r0
 801cd72:	4628      	mov	r0, r5
 801cd74:	f7ff ff6e 	bl	801cc54 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801cd78:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801cd7c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801cd80:	f8ad 2014 	strh.w	r2, [sp, #20]
 801cd84:	4418      	add	r0, r3
 801cd86:	4621      	mov	r1, r4
 801cd88:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801cd8c:	f8ad 0012 	strh.w	r0, [sp, #18]
 801cd90:	b23f      	sxth	r7, r7
 801cd92:	4630      	mov	r0, r6
 801cd94:	f8ad 3016 	strh.w	r3, [sp, #22]
 801cd98:	f8ad 7010 	strh.w	r7, [sp, #16]
 801cd9c:	f7f5 ff4a 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 801cda0:	4628      	mov	r0, r5
 801cda2:	f7ff ff27 	bl	801cbf4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801cda6:	4602      	mov	r2, r0
 801cda8:	e896 0003 	ldmia.w	r6, {r0, r1}
 801cdac:	ab06      	add	r3, sp, #24
 801cdae:	e883 0003 	stmia.w	r3, {r0, r1}
 801cdb2:	4611      	mov	r1, r2
 801cdb4:	4618      	mov	r0, r3
 801cdb6:	f7f5 ff3d 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 801cdba:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801cdbe:	f9b4 1000 	ldrsh.w	r1, [r4]
 801cdc2:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801cdc6:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801cdca:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 801cdce:	4299      	cmp	r1, r3
 801cdd0:	d10b      	bne.n	801cdea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801cdd2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801cdd6:	4552      	cmp	r2, sl
 801cdd8:	d107      	bne.n	801cdea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801cdda:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801cdde:	455a      	cmp	r2, fp
 801cde0:	d103      	bne.n	801cdea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801cde2:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801cde6:	454a      	cmp	r2, r9
 801cde8:	d06d      	beq.n	801cec6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801cdea:	f1bb 0f00 	cmp.w	fp, #0
 801cdee:	dd65      	ble.n	801cebc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801cdf0:	f1b9 0f00 	cmp.w	r9, #0
 801cdf4:	dd62      	ble.n	801cebc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801cdf6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801cdfa:	fa1f f08a 	uxth.w	r0, sl
 801cdfe:	4552      	cmp	r2, sl
 801ce00:	9000      	str	r0, [sp, #0]
 801ce02:	da12      	bge.n	801ce2a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 801ce04:	9301      	str	r3, [sp, #4]
 801ce06:	9b00      	ldr	r3, [sp, #0]
 801ce08:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801ce0c:	f8ad 2012 	strh.w	r2, [sp, #18]
 801ce10:	1a9a      	subs	r2, r3, r2
 801ce12:	f8ad 1010 	strh.w	r1, [sp, #16]
 801ce16:	f8ad 0014 	strh.w	r0, [sp, #20]
 801ce1a:	f8ad 2016 	strh.w	r2, [sp, #22]
 801ce1e:	69ea      	ldr	r2, [r5, #28]
 801ce20:	4631      	mov	r1, r6
 801ce22:	4640      	mov	r0, r8
 801ce24:	f7ff ff7a 	bl	801cd1c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801ce28:	9b01      	ldr	r3, [sp, #4]
 801ce2a:	f9b4 2000 	ldrsh.w	r2, [r4]
 801ce2e:	429a      	cmp	r2, r3
 801ce30:	b29f      	uxth	r7, r3
 801ce32:	da0d      	bge.n	801ce50 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801ce34:	f8ad 2010 	strh.w	r2, [sp, #16]
 801ce38:	1aba      	subs	r2, r7, r2
 801ce3a:	f8ad a012 	strh.w	sl, [sp, #18]
 801ce3e:	f8ad 2014 	strh.w	r2, [sp, #20]
 801ce42:	f8ad 9016 	strh.w	r9, [sp, #22]
 801ce46:	69ea      	ldr	r2, [r5, #28]
 801ce48:	4631      	mov	r1, r6
 801ce4a:	4640      	mov	r0, r8
 801ce4c:	f7ff ff66 	bl	801cd1c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801ce50:	8822      	ldrh	r2, [r4, #0]
 801ce52:	88a3      	ldrh	r3, [r4, #4]
 801ce54:	445f      	add	r7, fp
 801ce56:	4413      	add	r3, r2
 801ce58:	b29b      	uxth	r3, r3
 801ce5a:	b2bf      	uxth	r7, r7
 801ce5c:	b23a      	sxth	r2, r7
 801ce5e:	b219      	sxth	r1, r3
 801ce60:	4291      	cmp	r1, r2
 801ce62:	dd0d      	ble.n	801ce80 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 801ce64:	1bdb      	subs	r3, r3, r7
 801ce66:	f8ad 2010 	strh.w	r2, [sp, #16]
 801ce6a:	f8ad a012 	strh.w	sl, [sp, #18]
 801ce6e:	f8ad 3014 	strh.w	r3, [sp, #20]
 801ce72:	f8ad 9016 	strh.w	r9, [sp, #22]
 801ce76:	69ea      	ldr	r2, [r5, #28]
 801ce78:	4631      	mov	r1, r6
 801ce7a:	4640      	mov	r0, r8
 801ce7c:	f7ff ff4e 	bl	801cd1c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801ce80:	88e2      	ldrh	r2, [r4, #6]
 801ce82:	8863      	ldrh	r3, [r4, #2]
 801ce84:	4413      	add	r3, r2
 801ce86:	9a00      	ldr	r2, [sp, #0]
 801ce88:	444a      	add	r2, r9
 801ce8a:	b29b      	uxth	r3, r3
 801ce8c:	fa1f f982 	uxth.w	r9, r2
 801ce90:	fa0f f289 	sxth.w	r2, r9
 801ce94:	b219      	sxth	r1, r3
 801ce96:	428a      	cmp	r2, r1
 801ce98:	da15      	bge.n	801cec6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801ce9a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801ce9e:	f9b4 0000 	ldrsh.w	r0, [r4]
 801cea2:	f8ad 1014 	strh.w	r1, [sp, #20]
 801cea6:	eba3 0309 	sub.w	r3, r3, r9
 801ceaa:	f8ad 0010 	strh.w	r0, [sp, #16]
 801ceae:	f8ad 2012 	strh.w	r2, [sp, #18]
 801ceb2:	f8ad 3016 	strh.w	r3, [sp, #22]
 801ceb6:	69ea      	ldr	r2, [r5, #28]
 801ceb8:	4631      	mov	r1, r6
 801ceba:	e001      	b.n	801cec0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 801cebc:	69ea      	ldr	r2, [r5, #28]
 801cebe:	4621      	mov	r1, r4
 801cec0:	4640      	mov	r0, r8
 801cec2:	f7ff ff2b 	bl	801cd1c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801cec6:	4628      	mov	r0, r5
 801cec8:	f7ff fe94 	bl	801cbf4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801cecc:	6861      	ldr	r1, [r4, #4]
 801cece:	4602      	mov	r2, r0
 801ced0:	6820      	ldr	r0, [r4, #0]
 801ced2:	4633      	mov	r3, r6
 801ced4:	c303      	stmia	r3!, {r0, r1}
 801ced6:	4611      	mov	r1, r2
 801ced8:	4630      	mov	r0, r6
 801ceda:	f7f5 feab 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 801cede:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801cee2:	2b00      	cmp	r3, #0
 801cee4:	f77f af33 	ble.w	801cd4e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801cee8:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801ceec:	2b00      	cmp	r3, #0
 801ceee:	f77f af2e 	ble.w	801cd4e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801cef2:	4628      	mov	r0, r5
 801cef4:	f7ff fe9a 	bl	801cc2c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801cef8:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 801cefc:	1a18      	subs	r0, r3, r0
 801cefe:	f8ad 0010 	strh.w	r0, [sp, #16]
 801cf02:	4628      	mov	r0, r5
 801cf04:	f7ff fea6 	bl	801cc54 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801cf08:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801cf0c:	1a18      	subs	r0, r3, r0
 801cf0e:	f8ad 0012 	strh.w	r0, [sp, #18]
 801cf12:	682b      	ldr	r3, [r5, #0]
 801cf14:	4631      	mov	r1, r6
 801cf16:	689b      	ldr	r3, [r3, #8]
 801cf18:	4628      	mov	r0, r5
 801cf1a:	4798      	blx	r3
 801cf1c:	e717      	b.n	801cd4e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0801cf1e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 801cf1e:	b570      	push	{r4, r5, r6, lr}
 801cf20:	460c      	mov	r4, r1
 801cf22:	b086      	sub	sp, #24
 801cf24:	1d06      	adds	r6, r0, #4
 801cf26:	2300      	movs	r3, #0
 801cf28:	4631      	mov	r1, r6
 801cf2a:	4605      	mov	r5, r0
 801cf2c:	a802      	add	r0, sp, #8
 801cf2e:	9301      	str	r3, [sp, #4]
 801cf30:	f7fe fffe 	bl	801bf30 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801cf34:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801cf38:	8822      	ldrh	r2, [r4, #0]
 801cf3a:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801cf3e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801cf42:	f8ad 0014 	strh.w	r0, [sp, #20]
 801cf46:	1ad2      	subs	r2, r2, r3
 801cf48:	8863      	ldrh	r3, [r4, #2]
 801cf4a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801cf4e:	1a5b      	subs	r3, r3, r1
 801cf50:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801cf54:	f8ad 1016 	strh.w	r1, [sp, #22]
 801cf58:	aa01      	add	r2, sp, #4
 801cf5a:	a904      	add	r1, sp, #16
 801cf5c:	4630      	mov	r0, r6
 801cf5e:	f8ad 3012 	strh.w	r3, [sp, #18]
 801cf62:	f7f5 ff3f 	bl	8012de4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801cf66:	9a01      	ldr	r2, [sp, #4]
 801cf68:	b11a      	cbz	r2, 801cf72 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801cf6a:	4621      	mov	r1, r4
 801cf6c:	4628      	mov	r0, r5
 801cf6e:	f7ff fed5 	bl	801cd1c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801cf72:	b006      	add	sp, #24
 801cf74:	bd70      	pop	{r4, r5, r6, pc}

0801cf76 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801cf76:	b530      	push	{r4, r5, lr}
 801cf78:	4602      	mov	r2, r0
 801cf7a:	4604      	mov	r4, r0
 801cf7c:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801cf80:	b085      	sub	sp, #20
 801cf82:	460d      	mov	r5, r1
 801cf84:	6851      	ldr	r1, [r2, #4]
 801cf86:	466b      	mov	r3, sp
 801cf88:	c303      	stmia	r3!, {r0, r1}
 801cf8a:	4629      	mov	r1, r5
 801cf8c:	4668      	mov	r0, sp
 801cf8e:	f7f5 fe51 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 801cf92:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 801cf96:	b12b      	cbz	r3, 801cfa4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801cf98:	4669      	mov	r1, sp
 801cf9a:	4620      	mov	r0, r4
 801cf9c:	f7ff ffbf 	bl	801cf1e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801cfa0:	b005      	add	sp, #20
 801cfa2:	bd30      	pop	{r4, r5, pc}
 801cfa4:	3404      	adds	r4, #4
 801cfa6:	4621      	mov	r1, r4
 801cfa8:	a802      	add	r0, sp, #8
 801cfaa:	f7fe ffc1 	bl	801bf30 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801cfae:	f8bd 3000 	ldrh.w	r3, [sp]
 801cfb2:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801cfb6:	1a9b      	subs	r3, r3, r2
 801cfb8:	f8ad 3000 	strh.w	r3, [sp]
 801cfbc:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801cfc0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801cfc4:	4669      	mov	r1, sp
 801cfc6:	1a9b      	subs	r3, r3, r2
 801cfc8:	4620      	mov	r0, r4
 801cfca:	f8ad 3002 	strh.w	r3, [sp, #2]
 801cfce:	f7f5 fed0 	bl	8012d72 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801cfd2:	e7e5      	b.n	801cfa0 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0801cfd4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 801cfd4:	680a      	ldr	r2, [r1, #0]
 801cfd6:	460b      	mov	r3, r1
 801cfd8:	6992      	ldr	r2, [r2, #24]
 801cfda:	1d01      	adds	r1, r0, #4
 801cfdc:	4618      	mov	r0, r3
 801cfde:	4710      	bx	r2

0801cfe0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 801cfe0:	4298      	cmp	r0, r3
 801cfe2:	d200      	bcs.n	801cfe6 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 801cfe4:	b913      	cbnz	r3, 801cfec <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 801cfe6:	440a      	add	r2, r1
 801cfe8:	b210      	sxth	r0, r2
 801cfea:	4770      	bx	lr
 801cfec:	ee07 0a90 	vmov	s15, r0
 801cff0:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801cff4:	ee07 3a90 	vmov	s15, r3
 801cff8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801cffc:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801d000:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801d004:	ee37 7a66 	vsub.f32	s14, s14, s13
 801d008:	ee07 2a90 	vmov	s15, r2
 801d00c:	ee67 5a07 	vmul.f32	s11, s14, s14
 801d010:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801d014:	eee5 6a87 	vfma.f32	s13, s11, s14
 801d018:	ee07 1a90 	vmov	s15, r1
 801d01c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801d020:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 801d024:	eee6 7a26 	vfma.f32	s15, s12, s13
 801d028:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801d02c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d030:	bfcc      	ite	gt
 801d032:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801d036:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801d03a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801d03e:	ee17 3a90 	vmov	r3, s15
 801d042:	b218      	sxth	r0, r3
 801d044:	4770      	bx	lr

0801d046 <_ZN8touchgfx12TextProviderC1Ev>:
 801d046:	b538      	push	{r3, r4, r5, lr}
 801d048:	2500      	movs	r5, #0
 801d04a:	2302      	movs	r3, #2
 801d04c:	4604      	mov	r4, r0
 801d04e:	e9c0 5500 	strd	r5, r5, [r0]
 801d052:	7403      	strb	r3, [r0, #16]
 801d054:	6145      	str	r5, [r0, #20]
 801d056:	7605      	strb	r5, [r0, #24]
 801d058:	83c5      	strh	r5, [r0, #30]
 801d05a:	8405      	strh	r5, [r0, #32]
 801d05c:	86c5      	strh	r5, [r0, #54]	@ 0x36
 801d05e:	8705      	strh	r5, [r0, #56]	@ 0x38
 801d060:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 801d062:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 801d066:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 801d06a:	220e      	movs	r2, #14
 801d06c:	4629      	mov	r1, r5
 801d06e:	304c      	adds	r0, #76	@ 0x4c
 801d070:	f011 fd6b 	bl	802eb4a <memset>
 801d074:	2301      	movs	r3, #1
 801d076:	4620      	mov	r0, r4
 801d078:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 801d07c:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801d080:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 801d084:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 801d088:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 801d08c:	f7ed f988 	bl	800a3a0 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801d090:	4620      	mov	r0, r4
 801d092:	bd38      	pop	{r3, r4, r5, pc}

0801d094 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801d094:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801d096:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d09a:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 801d09c:	fab0 f080 	clz	r0, r0
 801d0a0:	0940      	lsrs	r0, r0, #5
 801d0a2:	4770      	bx	lr

0801d0a4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801d0a4:	b530      	push	{r4, r5, lr}
 801d0a6:	2500      	movs	r5, #0
 801d0a8:	2401      	movs	r4, #1
 801d0aa:	6843      	ldr	r3, [r0, #4]
 801d0ac:	b913      	cbnz	r3, 801d0b4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801d0ae:	6803      	ldr	r3, [r0, #0]
 801d0b0:	b313      	cbz	r3, 801d0f8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801d0b2:	6043      	str	r3, [r0, #4]
 801d0b4:	7e03      	ldrb	r3, [r0, #24]
 801d0b6:	b143      	cbz	r3, 801d0ca <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801d0b8:	6943      	ldr	r3, [r0, #20]
 801d0ba:	b12b      	cbz	r3, 801d0c8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801d0bc:	881a      	ldrh	r2, [r3, #0]
 801d0be:	b11a      	cbz	r2, 801d0c8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801d0c0:	1c9a      	adds	r2, r3, #2
 801d0c2:	6142      	str	r2, [r0, #20]
 801d0c4:	8818      	ldrh	r0, [r3, #0]
 801d0c6:	bd30      	pop	{r4, r5, pc}
 801d0c8:	7605      	strb	r5, [r0, #24]
 801d0ca:	6843      	ldr	r3, [r0, #4]
 801d0cc:	8819      	ldrh	r1, [r3, #0]
 801d0ce:	b199      	cbz	r1, 801d0f8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801d0d0:	1c9a      	adds	r2, r3, #2
 801d0d2:	2902      	cmp	r1, #2
 801d0d4:	6042      	str	r2, [r0, #4]
 801d0d6:	d1f5      	bne.n	801d0c4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801d0d8:	7c03      	ldrb	r3, [r0, #16]
 801d0da:	2b01      	cmp	r3, #1
 801d0dc:	d8e5      	bhi.n	801d0aa <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801d0de:	1c5a      	adds	r2, r3, #1
 801d0e0:	3302      	adds	r3, #2
 801d0e2:	7402      	strb	r2, [r0, #16]
 801d0e4:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801d0e8:	6143      	str	r3, [r0, #20]
 801d0ea:	2b00      	cmp	r3, #0
 801d0ec:	d0dd      	beq.n	801d0aa <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801d0ee:	881b      	ldrh	r3, [r3, #0]
 801d0f0:	2b00      	cmp	r3, #0
 801d0f2:	d0da      	beq.n	801d0aa <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801d0f4:	7604      	strb	r4, [r0, #24]
 801d0f6:	e7d8      	b.n	801d0aa <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801d0f8:	2000      	movs	r0, #0
 801d0fa:	e7e4      	b.n	801d0c6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801d0fc <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801d0fc:	b430      	push	{r4, r5}
 801d0fe:	6001      	str	r1, [r0, #0]
 801d100:	2100      	movs	r1, #0
 801d102:	6041      	str	r1, [r0, #4]
 801d104:	6815      	ldr	r5, [r2, #0]
 801d106:	6085      	str	r5, [r0, #8]
 801d108:	6852      	ldr	r2, [r2, #4]
 801d10a:	6443      	str	r3, [r0, #68]	@ 0x44
 801d10c:	9b02      	ldr	r3, [sp, #8]
 801d10e:	60c2      	str	r2, [r0, #12]
 801d110:	7401      	strb	r1, [r0, #16]
 801d112:	6141      	str	r1, [r0, #20]
 801d114:	7601      	strb	r1, [r0, #24]
 801d116:	8701      	strh	r1, [r0, #56]	@ 0x38
 801d118:	8401      	strh	r1, [r0, #32]
 801d11a:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 801d11e:	6483      	str	r3, [r0, #72]	@ 0x48
 801d120:	bc30      	pop	{r4, r5}
 801d122:	f7ed b93d 	b.w	800a3a0 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801d126 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801d126:	b408      	push	{r3}
 801d128:	b510      	push	{r4, lr}
 801d12a:	b085      	sub	sp, #20
 801d12c:	ac07      	add	r4, sp, #28
 801d12e:	f854 3b04 	ldr.w	r3, [r4], #4
 801d132:	9300      	str	r3, [sp, #0]
 801d134:	4613      	mov	r3, r2
 801d136:	4622      	mov	r2, r4
 801d138:	9403      	str	r4, [sp, #12]
 801d13a:	f7ff ffdf 	bl	801d0fc <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801d13e:	b005      	add	sp, #20
 801d140:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d144:	b001      	add	sp, #4
 801d146:	4770      	bx	lr

0801d148 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801d148:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d14a:	4605      	mov	r5, r0
 801d14c:	4608      	mov	r0, r1
 801d14e:	b1e9      	cbz	r1, 801d18c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 801d150:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 801d154:	460b      	mov	r3, r1
 801d156:	f101 0708 	add.w	r7, r1, #8
 801d15a:	4622      	mov	r2, r4
 801d15c:	6818      	ldr	r0, [r3, #0]
 801d15e:	6859      	ldr	r1, [r3, #4]
 801d160:	4626      	mov	r6, r4
 801d162:	c603      	stmia	r6!, {r0, r1}
 801d164:	3308      	adds	r3, #8
 801d166:	42bb      	cmp	r3, r7
 801d168:	4634      	mov	r4, r6
 801d16a:	d1f7      	bne.n	801d15c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801d16c:	6818      	ldr	r0, [r3, #0]
 801d16e:	6030      	str	r0, [r6, #0]
 801d170:	889b      	ldrh	r3, [r3, #4]
 801d172:	80b3      	strh	r3, [r6, #4]
 801d174:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 801d178:	015b      	lsls	r3, r3, #5
 801d17a:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 801d17e:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 801d182:	430b      	orrs	r3, r1
 801d184:	425b      	negs	r3, r3
 801d186:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 801d18a:	4610      	mov	r0, r2
 801d18c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801d18e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801d18e:	b538      	push	{r3, r4, r5, lr}
 801d190:	460c      	mov	r4, r1
 801d192:	6811      	ldr	r1, [r2, #0]
 801d194:	4610      	mov	r0, r2
 801d196:	68cd      	ldr	r5, [r1, #12]
 801d198:	4619      	mov	r1, r3
 801d19a:	47a8      	blx	r5
 801d19c:	2800      	cmp	r0, #0
 801d19e:	bf08      	it	eq
 801d1a0:	4620      	moveq	r0, r4
 801d1a2:	bd38      	pop	{r3, r4, r5, pc}

0801d1a4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 801d1a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d1a8:	468c      	mov	ip, r1
 801d1aa:	4605      	mov	r5, r0
 801d1ac:	4614      	mov	r4, r2
 801d1ae:	b942      	cbnz	r2, 801d1c2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 801d1b0:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 801d1b4:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 801d1b8:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 801d1bc:	4620      	mov	r0, r4
 801d1be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d1c2:	7b50      	ldrb	r0, [r2, #13]
 801d1c4:	8893      	ldrh	r3, [r2, #4]
 801d1c6:	0106      	lsls	r6, r0, #4
 801d1c8:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 801d1cc:	79e6      	ldrb	r6, [r4, #7]
 801d1ce:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 801d1d2:	4316      	orrs	r6, r2
 801d1d4:	185a      	adds	r2, r3, r1
 801d1d6:	b291      	uxth	r1, r2
 801d1d8:	291d      	cmp	r1, #29
 801d1da:	b2b7      	uxth	r7, r6
 801d1dc:	d87e      	bhi.n	801d2dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 801d1de:	2201      	movs	r2, #1
 801d1e0:	408a      	lsls	r2, r1
 801d1e2:	498a      	ldr	r1, [pc, #552]	@ (801d40c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 801d1e4:	420a      	tst	r2, r1
 801d1e6:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801d1ea:	d12d      	bne.n	801d248 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801d1ec:	f412 7f60 	tst.w	r2, #896	@ 0x380
 801d1f0:	d074      	beq.n	801d2dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 801d1f2:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 801d1f6:	4623      	mov	r3, r4
 801d1f8:	f104 0e08 	add.w	lr, r4, #8
 801d1fc:	4614      	mov	r4, r2
 801d1fe:	6818      	ldr	r0, [r3, #0]
 801d200:	6859      	ldr	r1, [r3, #4]
 801d202:	4694      	mov	ip, r2
 801d204:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801d208:	3308      	adds	r3, #8
 801d20a:	4573      	cmp	r3, lr
 801d20c:	4662      	mov	r2, ip
 801d20e:	d1f6      	bne.n	801d1fe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 801d210:	6818      	ldr	r0, [r3, #0]
 801d212:	f8cc 0000 	str.w	r0, [ip]
 801d216:	889b      	ldrh	r3, [r3, #4]
 801d218:	f8ac 3004 	strh.w	r3, [ip, #4]
 801d21c:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 801d220:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 801d224:	b2b3      	uxth	r3, r6
 801d226:	1aca      	subs	r2, r1, r3
 801d228:	b292      	uxth	r2, r2
 801d22a:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 801d22e:	10d2      	asrs	r2, r2, #3
 801d230:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 801d234:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 801d238:	4302      	orrs	r2, r0
 801d23a:	1bcf      	subs	r7, r1, r7
 801d23c:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 801d240:	1afb      	subs	r3, r7, r3
 801d242:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 801d246:	e7b9      	b.n	801d1bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 801d248:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 801d24c:	4623      	mov	r3, r4
 801d24e:	f104 0808 	add.w	r8, r4, #8
 801d252:	4614      	mov	r4, r2
 801d254:	6818      	ldr	r0, [r3, #0]
 801d256:	6859      	ldr	r1, [r3, #4]
 801d258:	4696      	mov	lr, r2
 801d25a:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801d25e:	3308      	adds	r3, #8
 801d260:	4543      	cmp	r3, r8
 801d262:	4672      	mov	r2, lr
 801d264:	d1f6      	bne.n	801d254 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 801d266:	6818      	ldr	r0, [r3, #0]
 801d268:	f8ce 0000 	str.w	r0, [lr]
 801d26c:	889b      	ldrh	r3, [r3, #4]
 801d26e:	f8ae 3004 	strh.w	r3, [lr, #4]
 801d272:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 801d274:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 801d278:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 801d27a:	f640 6333 	movw	r3, #3635	@ 0xe33
 801d27e:	4299      	cmp	r1, r3
 801d280:	d111      	bne.n	801d2a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 801d282:	f8dc 3000 	ldr.w	r3, [ip]
 801d286:	4660      	mov	r0, ip
 801d288:	68db      	ldr	r3, [r3, #12]
 801d28a:	4798      	blx	r3
 801d28c:	7b41      	ldrb	r1, [r0, #13]
 801d28e:	00cb      	lsls	r3, r1, #3
 801d290:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801d294:	7a03      	ldrb	r3, [r0, #8]
 801d296:	4313      	orrs	r3, r2
 801d298:	064a      	lsls	r2, r1, #25
 801d29a:	bf44      	itt	mi
 801d29c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801d2a0:	b21b      	sxthmi	r3, r3
 801d2a2:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 801d2a6:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 801d2aa:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 801d2ae:	443b      	add	r3, r7
 801d2b0:	4433      	add	r3, r6
 801d2b2:	b29b      	uxth	r3, r3
 801d2b4:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 801d2b8:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 801d2bc:	10db      	asrs	r3, r3, #3
 801d2be:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 801d2c2:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 801d2c6:	4313      	orrs	r3, r2
 801d2c8:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 801d2cc:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 801d2d0:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 801d2d4:	1a9b      	subs	r3, r3, r2
 801d2d6:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 801d2da:	e76f      	b.n	801d1bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 801d2dc:	f023 0204 	bic.w	r2, r3, #4
 801d2e0:	f640 611b 	movw	r1, #3611	@ 0xe1b
 801d2e4:	428a      	cmp	r2, r1
 801d2e6:	d003      	beq.n	801d2f0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14c>
 801d2e8:	f640 621d 	movw	r2, #3613	@ 0xe1d
 801d2ec:	4293      	cmp	r3, r2
 801d2ee:	d137      	bne.n	801d360 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
 801d2f0:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 801d2f4:	4622      	mov	r2, r4
 801d2f6:	f104 0808 	add.w	r8, r4, #8
 801d2fa:	4634      	mov	r4, r6
 801d2fc:	6810      	ldr	r0, [r2, #0]
 801d2fe:	6851      	ldr	r1, [r2, #4]
 801d300:	46b6      	mov	lr, r6
 801d302:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801d306:	3208      	adds	r2, #8
 801d308:	4542      	cmp	r2, r8
 801d30a:	4676      	mov	r6, lr
 801d30c:	d1f6      	bne.n	801d2fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 801d30e:	6810      	ldr	r0, [r2, #0]
 801d310:	f8ce 0000 	str.w	r0, [lr]
 801d314:	8892      	ldrh	r2, [r2, #4]
 801d316:	f8ae 2004 	strh.w	r2, [lr, #4]
 801d31a:	3b01      	subs	r3, #1
 801d31c:	b29b      	uxth	r3, r3
 801d31e:	4662      	mov	r2, ip
 801d320:	4621      	mov	r1, r4
 801d322:	4628      	mov	r0, r5
 801d324:	f7ff ff33 	bl	801d18e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801d328:	7b41      	ldrb	r1, [r0, #13]
 801d32a:	00cb      	lsls	r3, r1, #3
 801d32c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801d330:	7a03      	ldrb	r3, [r0, #8]
 801d332:	0648      	lsls	r0, r1, #25
 801d334:	ea43 0302 	orr.w	r3, r3, r2
 801d338:	bf44      	itt	mi
 801d33a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801d33e:	b21b      	sxthmi	r3, r3
 801d340:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 801d344:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 801d348:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 801d34c:	005b      	lsls	r3, r3, #1
 801d34e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801d352:	4313      	orrs	r3, r2
 801d354:	115a      	asrs	r2, r3, #5
 801d356:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801d35a:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 801d35e:	e046      	b.n	801d3ee <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x24a>
 801d360:	00c2      	lsls	r2, r0, #3
 801d362:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 801d366:	7a22      	ldrb	r2, [r4, #8]
 801d368:	430a      	orrs	r2, r1
 801d36a:	0641      	lsls	r1, r0, #25
 801d36c:	bf44      	itt	mi
 801d36e:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 801d372:	b212      	sxthmi	r2, r2
 801d374:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 801d378:	f640 6109 	movw	r1, #3593	@ 0xe09
 801d37c:	f023 0210 	bic.w	r2, r3, #16
 801d380:	428a      	cmp	r2, r1
 801d382:	d003      	beq.n	801d38c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e8>
 801d384:	f640 6213 	movw	r2, #3603	@ 0xe13
 801d388:	4293      	cmp	r3, r2
 801d38a:	d13d      	bne.n	801d408 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x264>
 801d38c:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 801d390:	f104 0808 	add.w	r8, r4, #8
 801d394:	4696      	mov	lr, r2
 801d396:	6820      	ldr	r0, [r4, #0]
 801d398:	6861      	ldr	r1, [r4, #4]
 801d39a:	4616      	mov	r6, r2
 801d39c:	c603      	stmia	r6!, {r0, r1}
 801d39e:	3408      	adds	r4, #8
 801d3a0:	4544      	cmp	r4, r8
 801d3a2:	4632      	mov	r2, r6
 801d3a4:	d1f7      	bne.n	801d396 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 801d3a6:	6820      	ldr	r0, [r4, #0]
 801d3a8:	6030      	str	r0, [r6, #0]
 801d3aa:	88a1      	ldrh	r1, [r4, #4]
 801d3ac:	80b1      	strh	r1, [r6, #4]
 801d3ae:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 801d3b2:	0076      	lsls	r6, r6, #1
 801d3b4:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 801d3b8:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 801d3bc:	4316      	orrs	r6, r2
 801d3be:	f640 6213 	movw	r2, #3603	@ 0xe13
 801d3c2:	4293      	cmp	r3, r2
 801d3c4:	bf1a      	itte	ne
 801d3c6:	f103 33ff 	addne.w	r3, r3, #4294967295
 801d3ca:	b29b      	uxthne	r3, r3
 801d3cc:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 801d3d0:	4662      	mov	r2, ip
 801d3d2:	4671      	mov	r1, lr
 801d3d4:	4628      	mov	r0, r5
 801d3d6:	4674      	mov	r4, lr
 801d3d8:	f7ff fed9 	bl	801d18e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801d3dc:	7b43      	ldrb	r3, [r0, #13]
 801d3de:	7a82      	ldrb	r2, [r0, #10]
 801d3e0:	005b      	lsls	r3, r3, #1
 801d3e2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801d3e6:	4313      	orrs	r3, r2
 801d3e8:	1af6      	subs	r6, r6, r3
 801d3ea:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 801d3ee:	7b61      	ldrb	r1, [r4, #13]
 801d3f0:	00cb      	lsls	r3, r1, #3
 801d3f2:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801d3f6:	7a23      	ldrb	r3, [r4, #8]
 801d3f8:	4313      	orrs	r3, r2
 801d3fa:	064a      	lsls	r2, r1, #25
 801d3fc:	bf44      	itt	mi
 801d3fe:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801d402:	b21b      	sxthmi	r3, r3
 801d404:	1bdb      	subs	r3, r3, r7
 801d406:	e71c      	b.n	801d242 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 801d408:	2300      	movs	r3, #0
 801d40a:	e7a6      	b.n	801d35a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 801d40c:	3fc00079 	.word	0x3fc00079

0801d410 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801d410:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801d414:	4604      	mov	r4, r0
 801d416:	b942      	cbnz	r2, 801d42a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 801d418:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 801d41c:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 801d420:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 801d424:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 801d428:	e047      	b.n	801d4ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801d42a:	7b51      	ldrb	r1, [r2, #13]
 801d42c:	8893      	ldrh	r3, [r2, #4]
 801d42e:	010d      	lsls	r5, r1, #4
 801d430:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 801d434:	79d5      	ldrb	r5, [r2, #7]
 801d436:	4305      	orrs	r5, r0
 801d438:	2d04      	cmp	r5, #4
 801d43a:	bfcc      	ite	gt
 801d43c:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 801d440:	f04f 0e01 	movle.w	lr, #1
 801d444:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 801d448:	f200 80ab 	bhi.w	801d5a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 801d44c:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 801d450:	4283      	cmp	r3, r0
 801d452:	d216      	bcs.n	801d482 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801d454:	f240 605b 	movw	r0, #1627	@ 0x65b
 801d458:	4283      	cmp	r3, r0
 801d45a:	d859      	bhi.n	801d510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 801d45c:	f240 6057 	movw	r0, #1623	@ 0x657
 801d460:	4283      	cmp	r3, r0
 801d462:	d20e      	bcs.n	801d482 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801d464:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 801d468:	d24a      	bcs.n	801d500 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 801d46a:	f240 604e 	movw	r0, #1614	@ 0x64e
 801d46e:	4283      	cmp	r3, r0
 801d470:	d207      	bcs.n	801d482 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801d472:	f240 601a 	movw	r0, #1562	@ 0x61a
 801d476:	4283      	cmp	r3, r0
 801d478:	d02a      	beq.n	801d4d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801d47a:	d821      	bhi.n	801d4c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 801d47c:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 801d480:	d35b      	bcc.n	801d53a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801d482:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 801d486:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801d48a:	f040 80d0 	bne.w	801d62e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801d48e:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 801d492:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801d496:	f040 80ca 	bne.w	801d62e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801d49a:	00cb      	lsls	r3, r1, #3
 801d49c:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 801d4a0:	7a13      	ldrb	r3, [r2, #8]
 801d4a2:	0649      	lsls	r1, r1, #25
 801d4a4:	ea43 0300 	orr.w	r3, r3, r0
 801d4a8:	bf44      	itt	mi
 801d4aa:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801d4ae:	b21b      	sxthmi	r3, r3
 801d4b0:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 801d4b4:	1b5d      	subs	r5, r3, r5
 801d4b6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801d4ba:	4610      	mov	r0, r2
 801d4bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801d4c0:	f240 604b 	movw	r0, #1611	@ 0x64b
 801d4c4:	4283      	cmp	r3, r0
 801d4c6:	d338      	bcc.n	801d53a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801d4c8:	f240 604c 	movw	r0, #1612	@ 0x64c
 801d4cc:	4283      	cmp	r3, r0
 801d4ce:	d9d8      	bls.n	801d482 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801d4d0:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 801d4d4:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 801d4d8:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801d4dc:	f040 80f2 	bne.w	801d6c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801d4e0:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801d4e4:	f040 80ee 	bne.w	801d6c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801d4e8:	00cb      	lsls	r3, r1, #3
 801d4ea:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 801d4ee:	7a13      	ldrb	r3, [r2, #8]
 801d4f0:	064e      	lsls	r6, r1, #25
 801d4f2:	ea43 0300 	orr.w	r3, r3, r0
 801d4f6:	bf44      	itt	mi
 801d4f8:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801d4fc:	b21b      	sxthmi	r3, r3
 801d4fe:	e7d9      	b.n	801d4b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801d500:	f240 6054 	movw	r0, #1620	@ 0x654
 801d504:	4283      	cmp	r3, r0
 801d506:	d8e3      	bhi.n	801d4d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801d508:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 801d50c:	d9e0      	bls.n	801d4d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801d50e:	e7b8      	b.n	801d482 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801d510:	f240 6074 	movw	r0, #1652	@ 0x674
 801d514:	4283      	cmp	r3, r0
 801d516:	d0b4      	beq.n	801d482 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801d518:	d82d      	bhi.n	801d576 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801d51a:	f240 605e 	movw	r0, #1630	@ 0x65e
 801d51e:	4283      	cmp	r3, r0
 801d520:	d804      	bhi.n	801d52c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801d522:	f240 605d 	movw	r0, #1629	@ 0x65d
 801d526:	4283      	cmp	r3, r0
 801d528:	d3d2      	bcc.n	801d4d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801d52a:	e7aa      	b.n	801d482 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801d52c:	f240 605f 	movw	r0, #1631	@ 0x65f
 801d530:	4283      	cmp	r3, r0
 801d532:	d0cd      	beq.n	801d4d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801d534:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 801d538:	d0a3      	beq.n	801d482 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801d53a:	00cb      	lsls	r3, r1, #3
 801d53c:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 801d540:	7a13      	ldrb	r3, [r2, #8]
 801d542:	0649      	lsls	r1, r1, #25
 801d544:	ea43 0300 	orr.w	r3, r3, r0
 801d548:	bf44      	itt	mi
 801d54a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801d54e:	b21b      	sxthmi	r3, r3
 801d550:	1b5d      	subs	r5, r3, r5
 801d552:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 801d556:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801d55a:	7b53      	ldrb	r3, [r2, #13]
 801d55c:	015b      	lsls	r3, r3, #5
 801d55e:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 801d562:	7993      	ldrb	r3, [r2, #6]
 801d564:	430b      	orrs	r3, r1
 801d566:	005b      	lsls	r3, r3, #1
 801d568:	2105      	movs	r1, #5
 801d56a:	fb93 f3f1 	sdiv	r3, r3, r1
 801d56e:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801d572:	440b      	add	r3, r1
 801d574:	e756      	b.n	801d424 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801d576:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 801d57a:	4283      	cmp	r3, r0
 801d57c:	d809      	bhi.n	801d592 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801d57e:	f240 60df 	movw	r0, #1759	@ 0x6df
 801d582:	4283      	cmp	r3, r0
 801d584:	f4bf af7d 	bcs.w	801d482 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801d588:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 801d58c:	2b05      	cmp	r3, #5
 801d58e:	d8d4      	bhi.n	801d53a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801d590:	e777      	b.n	801d482 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801d592:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 801d596:	4283      	cmp	r3, r0
 801d598:	d09a      	beq.n	801d4d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801d59a:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 801d59e:	4283      	cmp	r3, r0
 801d5a0:	e7ca      	b.n	801d538 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801d5a2:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 801d5a6:	d22b      	bcs.n	801d600 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 801d5a8:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 801d5ac:	4283      	cmp	r3, r0
 801d5ae:	d28f      	bcs.n	801d4d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801d5b0:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 801d5b4:	4283      	cmp	r3, r0
 801d5b6:	d816      	bhi.n	801d5e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 801d5b8:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 801d5bc:	4283      	cmp	r3, r0
 801d5be:	f4bf af60 	bcs.w	801d482 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801d5c2:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 801d5c6:	4283      	cmp	r3, r0
 801d5c8:	d80a      	bhi.n	801d5e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801d5ca:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 801d5ce:	4283      	cmp	r3, r0
 801d5d0:	f4bf af57 	bcs.w	801d482 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801d5d4:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 801d5d8:	4283      	cmp	r3, r0
 801d5da:	f43f af79 	beq.w	801d4d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801d5de:	e7ac      	b.n	801d53a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801d5e0:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 801d5e4:	e7f8      	b.n	801d5d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 801d5e6:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 801d5ea:	4283      	cmp	r3, r0
 801d5ec:	d802      	bhi.n	801d5f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801d5ee:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 801d5f2:	e798      	b.n	801d526 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 801d5f4:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 801d5f8:	4283      	cmp	r3, r0
 801d5fa:	f47f af42 	bne.w	801d482 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801d5fe:	e767      	b.n	801d4d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801d600:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 801d604:	4283      	cmp	r3, r0
 801d606:	f43f af63 	beq.w	801d4d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801d60a:	d802      	bhi.n	801d612 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 801d60c:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 801d610:	e7f2      	b.n	801d5f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801d612:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 801d616:	4283      	cmp	r3, r0
 801d618:	d805      	bhi.n	801d626 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801d61a:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 801d61e:	4283      	cmp	r3, r0
 801d620:	f4ff af2f 	bcc.w	801d482 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801d624:	e754      	b.n	801d4d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801d626:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 801d62a:	4283      	cmp	r3, r0
 801d62c:	e7af      	b.n	801d58e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801d62e:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 801d632:	4617      	mov	r7, r2
 801d634:	f102 0808 	add.w	r8, r2, #8
 801d638:	4666      	mov	r6, ip
 801d63a:	6838      	ldr	r0, [r7, #0]
 801d63c:	6879      	ldr	r1, [r7, #4]
 801d63e:	46e6      	mov	lr, ip
 801d640:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801d644:	3708      	adds	r7, #8
 801d646:	4547      	cmp	r7, r8
 801d648:	46f4      	mov	ip, lr
 801d64a:	d1f6      	bne.n	801d63a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 801d64c:	6838      	ldr	r0, [r7, #0]
 801d64e:	f8ce 0000 	str.w	r0, [lr]
 801d652:	88b9      	ldrh	r1, [r7, #4]
 801d654:	f8ae 1004 	strh.w	r1, [lr, #4]
 801d658:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 801d65c:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801d660:	d009      	beq.n	801d676 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801d662:	7b51      	ldrb	r1, [r2, #13]
 801d664:	7992      	ldrb	r2, [r2, #6]
 801d666:	0149      	lsls	r1, r1, #5
 801d668:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801d66c:	4311      	orrs	r1, r2
 801d66e:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801d672:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 801d676:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801d67a:	b2ad      	uxth	r5, r5
 801d67c:	d00d      	beq.n	801d69a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801d67e:	442b      	add	r3, r5
 801d680:	b29b      	uxth	r3, r3
 801d682:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 801d686:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 801d68a:	10db      	asrs	r3, r3, #3
 801d68c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 801d690:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 801d694:	4313      	orrs	r3, r2
 801d696:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 801d69a:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 801d69e:	00cb      	lsls	r3, r1, #3
 801d6a0:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801d6a4:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 801d6a8:	064f      	lsls	r7, r1, #25
 801d6aa:	ea43 0302 	orr.w	r3, r3, r2
 801d6ae:	bf44      	itt	mi
 801d6b0:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801d6b4:	b21b      	sxthmi	r3, r3
 801d6b6:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 801d6ba:	1b5b      	subs	r3, r3, r5
 801d6bc:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 801d6c0:	4632      	mov	r2, r6
 801d6c2:	e6fa      	b.n	801d4ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801d6c4:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 801d6c8:	4617      	mov	r7, r2
 801d6ca:	f102 0908 	add.w	r9, r2, #8
 801d6ce:	4666      	mov	r6, ip
 801d6d0:	6838      	ldr	r0, [r7, #0]
 801d6d2:	6879      	ldr	r1, [r7, #4]
 801d6d4:	46e0      	mov	r8, ip
 801d6d6:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801d6da:	3708      	adds	r7, #8
 801d6dc:	454f      	cmp	r7, r9
 801d6de:	46c4      	mov	ip, r8
 801d6e0:	d1f6      	bne.n	801d6d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801d6e2:	6838      	ldr	r0, [r7, #0]
 801d6e4:	f8c8 0000 	str.w	r0, [r8]
 801d6e8:	88b9      	ldrh	r1, [r7, #4]
 801d6ea:	f8a8 1004 	strh.w	r1, [r8, #4]
 801d6ee:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 801d6f2:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801d6f6:	d009      	beq.n	801d70c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 801d6f8:	7b51      	ldrb	r1, [r2, #13]
 801d6fa:	7992      	ldrb	r2, [r2, #6]
 801d6fc:	0149      	lsls	r1, r1, #5
 801d6fe:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801d702:	4311      	orrs	r1, r2
 801d704:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801d708:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 801d70c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801d710:	d00e      	beq.n	801d730 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801d712:	eba3 030e 	sub.w	r3, r3, lr
 801d716:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 801d71a:	b29b      	uxth	r3, r3
 801d71c:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 801d720:	10db      	asrs	r3, r3, #3
 801d722:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 801d726:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 801d72a:	4313      	orrs	r3, r2
 801d72c:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 801d730:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 801d734:	00cb      	lsls	r3, r1, #3
 801d736:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801d73a:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 801d73e:	0648      	lsls	r0, r1, #25
 801d740:	ea43 0302 	orr.w	r3, r3, r2
 801d744:	bf44      	itt	mi
 801d746:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801d74a:	b21b      	sxthmi	r3, r3
 801d74c:	1b5d      	subs	r5, r3, r5
 801d74e:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801d752:	e7b5      	b.n	801d6c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0801d754 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 801d754:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d758:	461e      	mov	r6, r3
 801d75a:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801d75c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d760:	4604      	mov	r4, r0
 801d762:	4617      	mov	r7, r2
 801d764:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 801d768:	f7ec fdc8 	bl	800a2fc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801d76c:	4605      	mov	r5, r0
 801d76e:	b918      	cbnz	r0, 801d778 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801d770:	6030      	str	r0, [r6, #0]
 801d772:	4628      	mov	r0, r5
 801d774:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d778:	683b      	ldr	r3, [r7, #0]
 801d77a:	4601      	mov	r1, r0
 801d77c:	68db      	ldr	r3, [r3, #12]
 801d77e:	4638      	mov	r0, r7
 801d780:	4798      	blx	r3
 801d782:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 801d786:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 801d78a:	4602      	mov	r2, r0
 801d78c:	6030      	str	r0, [r6, #0]
 801d78e:	d213      	bcs.n	801d7b8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801d790:	4643      	mov	r3, r8
 801d792:	4639      	mov	r1, r7
 801d794:	4620      	mov	r0, r4
 801d796:	f7ff fe3b 	bl	801d410 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801d79a:	6030      	str	r0, [r6, #0]
 801d79c:	6833      	ldr	r3, [r6, #0]
 801d79e:	b143      	cbz	r3, 801d7b2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801d7a0:	7b5a      	ldrb	r2, [r3, #13]
 801d7a2:	7a9b      	ldrb	r3, [r3, #10]
 801d7a4:	0052      	lsls	r2, r2, #1
 801d7a6:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 801d7aa:	4313      	orrs	r3, r2
 801d7ac:	bf0c      	ite	eq
 801d7ae:	2301      	moveq	r3, #1
 801d7b0:	2300      	movne	r3, #0
 801d7b2:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 801d7b6:	e7dc      	b.n	801d772 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 801d7b8:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 801d7bc:	b29b      	uxth	r3, r3
 801d7be:	2b7f      	cmp	r3, #127	@ 0x7f
 801d7c0:	d804      	bhi.n	801d7cc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801d7c2:	4639      	mov	r1, r7
 801d7c4:	4620      	mov	r0, r4
 801d7c6:	f7ff fced 	bl	801d1a4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801d7ca:	e7e6      	b.n	801d79a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 801d7cc:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 801d7d0:	2b00      	cmp	r3, #0
 801d7d2:	d0e3      	beq.n	801d79c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801d7d4:	f640 1302 	movw	r3, #2306	@ 0x902
 801d7d8:	429d      	cmp	r5, r3
 801d7da:	d1df      	bne.n	801d79c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801d7dc:	4601      	mov	r1, r0
 801d7de:	4620      	mov	r0, r4
 801d7e0:	f7ff fcb2 	bl	801d148 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801d7e4:	e7d9      	b.n	801d79a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801d7e6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801d7e6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801d7ea:	461e      	mov	r6, r3
 801d7ec:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801d7ee:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d7f2:	4604      	mov	r4, r0
 801d7f4:	4617      	mov	r7, r2
 801d7f6:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 801d7fa:	f7ec fd7f 	bl	800a2fc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801d7fe:	4605      	mov	r5, r0
 801d800:	b918      	cbnz	r0, 801d80a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801d802:	6030      	str	r0, [r6, #0]
 801d804:	4628      	mov	r0, r5
 801d806:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801d80a:	683b      	ldr	r3, [r7, #0]
 801d80c:	4601      	mov	r1, r0
 801d80e:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801d812:	4638      	mov	r0, r7
 801d814:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801d818:	47c8      	blx	r9
 801d81a:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 801d81e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 801d822:	4602      	mov	r2, r0
 801d824:	6030      	str	r0, [r6, #0]
 801d826:	d213      	bcs.n	801d850 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 801d828:	4643      	mov	r3, r8
 801d82a:	4639      	mov	r1, r7
 801d82c:	4620      	mov	r0, r4
 801d82e:	f7ff fdef 	bl	801d410 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801d832:	6030      	str	r0, [r6, #0]
 801d834:	6833      	ldr	r3, [r6, #0]
 801d836:	b143      	cbz	r3, 801d84a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 801d838:	7b5a      	ldrb	r2, [r3, #13]
 801d83a:	7a9b      	ldrb	r3, [r3, #10]
 801d83c:	0052      	lsls	r2, r2, #1
 801d83e:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 801d842:	4313      	orrs	r3, r2
 801d844:	bf0c      	ite	eq
 801d846:	2301      	moveq	r3, #1
 801d848:	2300      	movne	r3, #0
 801d84a:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 801d84e:	e7d9      	b.n	801d804 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801d850:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 801d854:	b29b      	uxth	r3, r3
 801d856:	2b7f      	cmp	r3, #127	@ 0x7f
 801d858:	d804      	bhi.n	801d864 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801d85a:	4639      	mov	r1, r7
 801d85c:	4620      	mov	r0, r4
 801d85e:	f7ff fca1 	bl	801d1a4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801d862:	e7e6      	b.n	801d832 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 801d864:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 801d868:	2b00      	cmp	r3, #0
 801d86a:	d0e3      	beq.n	801d834 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801d86c:	f640 1302 	movw	r3, #2306	@ 0x902
 801d870:	429d      	cmp	r5, r3
 801d872:	d1df      	bne.n	801d834 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801d874:	4601      	mov	r1, r0
 801d876:	4620      	mov	r0, r4
 801d878:	f7ff fc66 	bl	801d148 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801d87c:	e7d9      	b.n	801d832 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801d87e <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801d87e:	b510      	push	{r4, lr}
 801d880:	4604      	mov	r4, r0
 801d882:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 801d886:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 801d888:	b1f1      	cbz	r1, 801d8c8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801d88a:	2b0a      	cmp	r3, #10
 801d88c:	d02f      	beq.n	801d8ee <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801d88e:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 801d890:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801d894:	3901      	subs	r1, #1
 801d896:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 801d898:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 801d89c:	1c51      	adds	r1, r2, #1
 801d89e:	b289      	uxth	r1, r1
 801d8a0:	2901      	cmp	r1, #1
 801d8a2:	bf84      	itt	hi
 801d8a4:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801d8a8:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 801d8aa:	f103 0201 	add.w	r2, r3, #1
 801d8ae:	8722      	strh	r2, [r4, #56]	@ 0x38
 801d8b0:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801d8b2:	bf98      	it	ls
 801d8b4:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 801d8b6:	4413      	add	r3, r2
 801d8b8:	b29b      	uxth	r3, r3
 801d8ba:	2b09      	cmp	r3, #9
 801d8bc:	bf88      	it	hi
 801d8be:	3b0a      	subhi	r3, #10
 801d8c0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801d8c4:	8458      	strh	r0, [r3, #34]	@ 0x22
 801d8c6:	e7dc      	b.n	801d882 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801d8c8:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 801d8ca:	2b0a      	cmp	r3, #10
 801d8cc:	d00f      	beq.n	801d8ee <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801d8ce:	4620      	mov	r0, r4
 801d8d0:	f7ff fbe8 	bl	801d0a4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801d8d4:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 801d8d6:	1c5a      	adds	r2, r3, #1
 801d8d8:	8722      	strh	r2, [r4, #56]	@ 0x38
 801d8da:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801d8dc:	4413      	add	r3, r2
 801d8de:	b29b      	uxth	r3, r3
 801d8e0:	2b09      	cmp	r3, #9
 801d8e2:	bf88      	it	hi
 801d8e4:	3b0a      	subhi	r3, #10
 801d8e6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801d8ea:	8458      	strh	r0, [r3, #34]	@ 0x22
 801d8ec:	e7ec      	b.n	801d8c8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801d8ee:	bd10      	pop	{r4, pc}

0801d8f0 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801d8f0:	b538      	push	{r3, r4, r5, lr}
 801d8f2:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801d8f4:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 801d8f8:	4604      	mov	r4, r0
 801d8fa:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 801d8fc:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 801d8fe:	3a01      	subs	r2, #1
 801d900:	8702      	strh	r2, [r0, #56]	@ 0x38
 801d902:	1c5a      	adds	r2, r3, #1
 801d904:	b292      	uxth	r2, r2
 801d906:	2a09      	cmp	r2, #9
 801d908:	bf86      	itte	hi
 801d90a:	3b09      	subhi	r3, #9
 801d90c:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 801d90e:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 801d910:	f7ff ffb5 	bl	801d87e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801d914:	8c23      	ldrh	r3, [r4, #32]
 801d916:	2b01      	cmp	r3, #1
 801d918:	bf9c      	itt	ls
 801d91a:	3301      	addls	r3, #1
 801d91c:	8423      	strhls	r3, [r4, #32]
 801d91e:	8be3      	ldrh	r3, [r4, #30]
 801d920:	b90b      	cbnz	r3, 801d926 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801d922:	2302      	movs	r3, #2
 801d924:	83e3      	strh	r3, [r4, #30]
 801d926:	8be3      	ldrh	r3, [r4, #30]
 801d928:	3b01      	subs	r3, #1
 801d92a:	b29b      	uxth	r3, r3
 801d92c:	83e3      	strh	r3, [r4, #30]
 801d92e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d932:	4628      	mov	r0, r5
 801d934:	8365      	strh	r5, [r4, #26]
 801d936:	bd38      	pop	{r3, r4, r5, pc}

0801d938 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801d938:	428a      	cmp	r2, r1
 801d93a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d93e:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 801d940:	d931      	bls.n	801d9a6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801d942:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 801d944:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 801d948:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 801d94c:	19ee      	adds	r6, r5, r7
 801d94e:	1a54      	subs	r4, r2, r1
 801d950:	3e01      	subs	r6, #1
 801d952:	fa1f fe84 	uxth.w	lr, r4
 801d956:	b2b4      	uxth	r4, r6
 801d958:	eba4 090e 	sub.w	r9, r4, lr
 801d95c:	fa1f f989 	uxth.w	r9, r9
 801d960:	2c09      	cmp	r4, #9
 801d962:	4626      	mov	r6, r4
 801d964:	bf88      	it	hi
 801d966:	f1a4 060a 	subhi.w	r6, r4, #10
 801d96a:	f1bc 0f00 	cmp.w	ip, #0
 801d96e:	bf08      	it	eq
 801d970:	f04f 0c02 	moveq.w	ip, #2
 801d974:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801d978:	f10c 3cff 	add.w	ip, ip, #4294967295
 801d97c:	fa1f fc8c 	uxth.w	ip, ip
 801d980:	3c01      	subs	r4, #1
 801d982:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 801d986:	b2a4      	uxth	r4, r4
 801d988:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 801d98c:	454c      	cmp	r4, r9
 801d98e:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 801d992:	d1e5      	bne.n	801d960 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 801d994:	eba5 050e 	sub.w	r5, r5, lr
 801d998:	eb0e 0408 	add.w	r4, lr, r8
 801d99c:	8705      	strh	r5, [r0, #56]	@ 0x38
 801d99e:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 801d9a2:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 801d9a6:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 801d9a8:	1a64      	subs	r4, r4, r1
 801d9aa:	4439      	add	r1, r7
 801d9ac:	b289      	uxth	r1, r1
 801d9ae:	2909      	cmp	r1, #9
 801d9b0:	bf88      	it	hi
 801d9b2:	390a      	subhi	r1, #10
 801d9b4:	8704      	strh	r4, [r0, #56]	@ 0x38
 801d9b6:	86c1      	strh	r1, [r0, #54]	@ 0x36
 801d9b8:	250a      	movs	r5, #10
 801d9ba:	b18a      	cbz	r2, 801d9e0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 801d9bc:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 801d9be:	3a01      	subs	r2, #1
 801d9c0:	b292      	uxth	r2, r2
 801d9c2:	3101      	adds	r1, #1
 801d9c4:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801d9c8:	8701      	strh	r1, [r0, #56]	@ 0x38
 801d9ca:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 801d9cc:	b901      	cbnz	r1, 801d9d0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801d9ce:	86c5      	strh	r5, [r0, #54]	@ 0x36
 801d9d0:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 801d9d2:	3901      	subs	r1, #1
 801d9d4:	b289      	uxth	r1, r1
 801d9d6:	86c1      	strh	r1, [r0, #54]	@ 0x36
 801d9d8:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801d9dc:	844c      	strh	r4, [r1, #34]	@ 0x22
 801d9de:	e7ec      	b.n	801d9ba <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801d9e0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d9e4:	f7ff bf4b 	b.w	801d87e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0801d9e8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801d9e8:	b570      	push	{r4, r5, r6, lr}
 801d9ea:	2500      	movs	r5, #0
 801d9ec:	4295      	cmp	r5, r2
 801d9ee:	d011      	beq.n	801da14 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801d9f0:	8bc4      	ldrh	r4, [r0, #30]
 801d9f2:	f831 6b02 	ldrh.w	r6, [r1], #2
 801d9f6:	4414      	add	r4, r2
 801d9f8:	3c01      	subs	r4, #1
 801d9fa:	1b64      	subs	r4, r4, r5
 801d9fc:	b2a4      	uxth	r4, r4
 801d9fe:	2c01      	cmp	r4, #1
 801da00:	bf88      	it	hi
 801da02:	3c02      	subhi	r4, #2
 801da04:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801da08:	8b64      	ldrh	r4, [r4, #26]
 801da0a:	42b4      	cmp	r4, r6
 801da0c:	d117      	bne.n	801da3e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801da0e:	3501      	adds	r5, #1
 801da10:	b2ad      	uxth	r5, r5
 801da12:	e7eb      	b.n	801d9ec <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 801da14:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801da18:	2400      	movs	r4, #0
 801da1a:	4413      	add	r3, r2
 801da1c:	b2a2      	uxth	r2, r4
 801da1e:	429a      	cmp	r2, r3
 801da20:	da0f      	bge.n	801da42 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801da22:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 801da24:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801da28:	4432      	add	r2, r6
 801da2a:	b292      	uxth	r2, r2
 801da2c:	2a09      	cmp	r2, #9
 801da2e:	bf88      	it	hi
 801da30:	3a0a      	subhi	r2, #10
 801da32:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801da36:	3401      	adds	r4, #1
 801da38:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 801da3a:	42aa      	cmp	r2, r5
 801da3c:	d0ee      	beq.n	801da1c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801da3e:	2000      	movs	r0, #0
 801da40:	bd70      	pop	{r4, r5, r6, pc}
 801da42:	2001      	movs	r0, #1
 801da44:	e7fc      	b.n	801da40 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801da46 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801da46:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801da4a:	4605      	mov	r5, r0
 801da4c:	4616      	mov	r6, r2
 801da4e:	1c8c      	adds	r4, r1, #2
 801da50:	8809      	ldrh	r1, [r1, #0]
 801da52:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801da56:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801da5a:	42b3      	cmp	r3, r6
 801da5c:	d124      	bne.n	801daa8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801da5e:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801da62:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801da66:	f001 070f 	and.w	r7, r1, #15
 801da6a:	f8cd 8000 	str.w	r8, [sp]
 801da6e:	464b      	mov	r3, r9
 801da70:	4652      	mov	r2, sl
 801da72:	4621      	mov	r1, r4
 801da74:	4628      	mov	r0, r5
 801da76:	f7ff ffb7 	bl	801d9e8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801da7a:	4683      	mov	fp, r0
 801da7c:	b168      	cbz	r0, 801da9a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801da7e:	eb0a 0109 	add.w	r1, sl, r9
 801da82:	4441      	add	r1, r8
 801da84:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801da88:	463a      	mov	r2, r7
 801da8a:	4649      	mov	r1, r9
 801da8c:	4628      	mov	r0, r5
 801da8e:	f7ff ff53 	bl	801d938 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801da92:	4658      	mov	r0, fp
 801da94:	b003      	add	sp, #12
 801da96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801da9a:	eb07 010a 	add.w	r1, r7, sl
 801da9e:	4449      	add	r1, r9
 801daa0:	4441      	add	r1, r8
 801daa2:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801daa6:	e7d2      	b.n	801da4e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801daa8:	f04f 0b00 	mov.w	fp, #0
 801daac:	e7f1      	b.n	801da92 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801daae <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801daae:	b570      	push	{r4, r5, r6, lr}
 801dab0:	8810      	ldrh	r0, [r2, #0]
 801dab2:	4298      	cmp	r0, r3
 801dab4:	d817      	bhi.n	801dae6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801dab6:	1e48      	subs	r0, r1, #1
 801dab8:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801dabc:	4298      	cmp	r0, r3
 801dabe:	d312      	bcc.n	801dae6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801dac0:	2400      	movs	r4, #0
 801dac2:	428c      	cmp	r4, r1
 801dac4:	d20f      	bcs.n	801dae6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801dac6:	1860      	adds	r0, r4, r1
 801dac8:	1040      	asrs	r0, r0, #1
 801daca:	0085      	lsls	r5, r0, #2
 801dacc:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801dad0:	42b3      	cmp	r3, r6
 801dad2:	d902      	bls.n	801dada <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801dad4:	3001      	adds	r0, #1
 801dad6:	b284      	uxth	r4, r0
 801dad8:	e7f3      	b.n	801dac2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801dada:	d201      	bcs.n	801dae0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801dadc:	b281      	uxth	r1, r0
 801dade:	e7f0      	b.n	801dac2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801dae0:	442a      	add	r2, r5
 801dae2:	8850      	ldrh	r0, [r2, #2]
 801dae4:	bd70      	pop	{r4, r5, r6, pc}
 801dae6:	2000      	movs	r0, #0
 801dae8:	e7fc      	b.n	801dae4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801daea <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801daea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801daee:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 801daf0:	886f      	ldrh	r7, [r5, #2]
 801daf2:	4604      	mov	r4, r0
 801daf4:	087f      	lsrs	r7, r7, #1
 801daf6:	260b      	movs	r6, #11
 801daf8:	3e01      	subs	r6, #1
 801dafa:	d013      	beq.n	801db24 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801dafc:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 801dafe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801db02:	462a      	mov	r2, r5
 801db04:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 801db08:	4639      	mov	r1, r7
 801db0a:	4643      	mov	r3, r8
 801db0c:	4620      	mov	r0, r4
 801db0e:	f7ff ffce 	bl	801daae <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801db12:	b138      	cbz	r0, 801db24 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801db14:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801db18:	4642      	mov	r2, r8
 801db1a:	4620      	mov	r0, r4
 801db1c:	f7ff ff93 	bl	801da46 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801db20:	2800      	cmp	r0, #0
 801db22:	d1e9      	bne.n	801daf8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801db24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801db28 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801db28:	b570      	push	{r4, r5, r6, lr}
 801db2a:	694a      	ldr	r2, [r1, #20]
 801db2c:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 801db2e:	684b      	ldr	r3, [r1, #4]
 801db30:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 801db32:	1b54      	subs	r4, r2, r5
 801db34:	f000 8106 	beq.w	801dd44 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801db38:	1b9b      	subs	r3, r3, r6
 801db3a:	d003      	beq.n	801db44 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801db3c:	4363      	muls	r3, r4
 801db3e:	2210      	movs	r2, #16
 801db40:	fb93 f3f2 	sdiv	r3, r3, r2
 801db44:	680c      	ldr	r4, [r1, #0]
 801db46:	698a      	ldr	r2, [r1, #24]
 801db48:	1b65      	subs	r5, r4, r5
 801db4a:	f000 80fd 	beq.w	801dd48 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801db4e:	1b92      	subs	r2, r2, r6
 801db50:	d003      	beq.n	801db5a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801db52:	436a      	muls	r2, r5
 801db54:	2410      	movs	r4, #16
 801db56:	fb92 f2f4 	sdiv	r2, r2, r4
 801db5a:	1a9b      	subs	r3, r3, r2
 801db5c:	ee07 3a90 	vmov	s15, r3
 801db60:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 801dd84 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801db64:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801db68:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801db6c:	ee67 7a84 	vmul.f32	s15, s15, s8
 801db70:	460a      	mov	r2, r1
 801db72:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801db76:	4603      	mov	r3, r0
 801db78:	f100 040c 	add.w	r4, r0, #12
 801db7c:	eeb1 6a43 	vneg.f32	s12, s6
 801db80:	edd2 7a02 	vldr	s15, [r2, #8]
 801db84:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801db88:	3214      	adds	r2, #20
 801db8a:	ece3 6a01 	vstmia	r3!, {s13}
 801db8e:	ed52 7a02 	vldr	s15, [r2, #-8]
 801db92:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801db96:	429c      	cmp	r4, r3
 801db98:	edc3 7a02 	vstr	s15, [r3, #8]
 801db9c:	ed52 7a01 	vldr	s15, [r2, #-4]
 801dba0:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801dba4:	edc3 7a05 	vstr	s15, [r3, #20]
 801dba8:	d1ea      	bne.n	801db80 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801dbaa:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801dbac:	698b      	ldr	r3, [r1, #24]
 801dbae:	edd0 4a02 	vldr	s9, [r0, #8]
 801dbb2:	edd0 3a00 	vldr	s7, [r0]
 801dbb6:	edd0 6a01 	vldr	s13, [r0, #4]
 801dbba:	ed90 5a05 	vldr	s10, [r0, #20]
 801dbbe:	ed90 2a03 	vldr	s4, [r0, #12]
 801dbc2:	edd0 5a04 	vldr	s11, [r0, #16]
 801dbc6:	ed90 1a07 	vldr	s2, [r0, #28]
 801dbca:	edd0 2a06 	vldr	s5, [r0, #24]
 801dbce:	1a9b      	subs	r3, r3, r2
 801dbd0:	ee07 3a90 	vmov	s15, r3
 801dbd4:	684b      	ldr	r3, [r1, #4]
 801dbd6:	1a9b      	subs	r3, r3, r2
 801dbd8:	ee07 3a10 	vmov	s14, r3
 801dbdc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801dbe0:	ee76 6ae4 	vsub.f32	s13, s13, s9
 801dbe4:	ee67 7a84 	vmul.f32	s15, s15, s8
 801dbe8:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801dbec:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801dbf0:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 801dbf4:	ee27 7a04 	vmul.f32	s14, s14, s8
 801dbf8:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801dbfc:	eee6 7a87 	vfma.f32	s15, s13, s14
 801dc00:	ee32 5a45 	vsub.f32	s10, s4, s10
 801dc04:	ee67 7a83 	vmul.f32	s15, s15, s6
 801dc08:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 801dc0c:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801dc0e:	694a      	ldr	r2, [r1, #20]
 801dc10:	1b13      	subs	r3, r2, r4
 801dc12:	ee07 3a10 	vmov	s14, r3
 801dc16:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801dc1a:	680b      	ldr	r3, [r1, #0]
 801dc1c:	ee27 7a04 	vmul.f32	s14, s14, s8
 801dc20:	1b1b      	subs	r3, r3, r4
 801dc22:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801dc26:	ee07 3a10 	vmov	s14, r3
 801dc2a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801dc2e:	ee27 7a04 	vmul.f32	s14, s14, s8
 801dc32:	eee6 4a87 	vfma.f32	s9, s13, s14
 801dc36:	ee64 4a86 	vmul.f32	s9, s9, s12
 801dc3a:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 801dc3e:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801dc40:	698b      	ldr	r3, [r1, #24]
 801dc42:	1a9b      	subs	r3, r3, r2
 801dc44:	ee06 3a90 	vmov	s13, r3
 801dc48:	684b      	ldr	r3, [r1, #4]
 801dc4a:	1a9b      	subs	r3, r3, r2
 801dc4c:	ee07 3a10 	vmov	s14, r3
 801dc50:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801dc54:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801dc58:	ee66 6a84 	vmul.f32	s13, s13, s8
 801dc5c:	ee27 7a04 	vmul.f32	s14, s14, s8
 801dc60:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801dc64:	eee5 6a87 	vfma.f32	s13, s11, s14
 801dc68:	ee66 6a83 	vmul.f32	s13, s13, s6
 801dc6c:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 801dc70:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801dc72:	694a      	ldr	r2, [r1, #20]
 801dc74:	1b13      	subs	r3, r2, r4
 801dc76:	ee07 3a10 	vmov	s14, r3
 801dc7a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801dc7e:	680b      	ldr	r3, [r1, #0]
 801dc80:	ee27 7a04 	vmul.f32	s14, s14, s8
 801dc84:	1b1b      	subs	r3, r3, r4
 801dc86:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801dc8a:	ee07 3a10 	vmov	s14, r3
 801dc8e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801dc92:	ee27 7a04 	vmul.f32	s14, s14, s8
 801dc96:	eea5 5a87 	vfma.f32	s10, s11, s14
 801dc9a:	edd0 5a08 	vldr	s11, [r0, #32]
 801dc9e:	ee25 5a06 	vmul.f32	s10, s10, s12
 801dca2:	ee31 1a65 	vsub.f32	s2, s2, s11
 801dca6:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 801dcaa:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801dcac:	698b      	ldr	r3, [r1, #24]
 801dcae:	1a9b      	subs	r3, r3, r2
 801dcb0:	ee07 3a10 	vmov	s14, r3
 801dcb4:	684b      	ldr	r3, [r1, #4]
 801dcb6:	1a9b      	subs	r3, r3, r2
 801dcb8:	ee01 3a90 	vmov	s3, r3
 801dcbc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801dcc0:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801dcc4:	ee27 7a04 	vmul.f32	s14, s14, s8
 801dcc8:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801dccc:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801dcd0:	ee61 1a84 	vmul.f32	s3, s3, s8
 801dcd4:	eea1 7a21 	vfma.f32	s14, s2, s3
 801dcd8:	ee27 7a03 	vmul.f32	s14, s14, s6
 801dcdc:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 801dce0:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801dce2:	694a      	ldr	r2, [r1, #20]
 801dce4:	1b13      	subs	r3, r2, r4
 801dce6:	ee03 3a10 	vmov	s6, r3
 801dcea:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801dcee:	680b      	ldr	r3, [r1, #0]
 801dcf0:	ee23 3a04 	vmul.f32	s6, s6, s8
 801dcf4:	1b1b      	subs	r3, r3, r4
 801dcf6:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801dcfa:	ee03 3a10 	vmov	s6, r3
 801dcfe:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801dd02:	ee23 4a04 	vmul.f32	s8, s6, s8
 801dd06:	eee1 5a04 	vfma.f32	s11, s2, s8
 801dd0a:	ee25 6a86 	vmul.f32	s12, s11, s12
 801dd0e:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801dd12:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 801dd16:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801dd1a:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801dd1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801dd22:	dd13      	ble.n	801dd4c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 801dd24:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 801dd28:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801dd2c:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801dd2e:	eee3 7a87 	vfma.f32	s15, s7, s14
 801dd32:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801dd36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801dd3a:	dd15      	ble.n	801dd68 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801dd3c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 801dd40:	6403      	str	r3, [r0, #64]	@ 0x40
 801dd42:	bd70      	pop	{r4, r5, r6, pc}
 801dd44:	4623      	mov	r3, r4
 801dd46:	e6fd      	b.n	801db44 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801dd48:	462a      	mov	r2, r5
 801dd4a:	e706      	b.n	801db5a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801dd4c:	d502      	bpl.n	801dd54 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801dd4e:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 801dd52:	e7e9      	b.n	801dd28 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801dd54:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801dd58:	eea3 2a85 	vfma.f32	s4, s7, s10
 801dd5c:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801dd60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801dd64:	dade      	bge.n	801dd24 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801dd66:	e7f2      	b.n	801dd4e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801dd68:	d502      	bpl.n	801dd70 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801dd6a:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 801dd6e:	e7e7      	b.n	801dd40 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801dd70:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801dd74:	eee3 4a86 	vfma.f32	s9, s7, s12
 801dd78:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801dd7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801dd80:	dadc      	bge.n	801dd3c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801dd82:	e7f2      	b.n	801dd6a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801dd84:	3d800000 	.word	0x3d800000

0801dd88 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801dd88:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801dd8c:	2714      	movs	r7, #20
 801dd8e:	435f      	muls	r7, r3
 801dd90:	eb02 0c07 	add.w	ip, r2, r7
 801dd94:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801dd98:	f115 0e0f 	adds.w	lr, r5, #15
 801dd9c:	f100 80a2 	bmi.w	801dee4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801dda0:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801dda4:	9c08      	ldr	r4, [sp, #32]
 801dda6:	f8c0 e014 	str.w	lr, [r0, #20]
 801ddaa:	2614      	movs	r6, #20
 801ddac:	4366      	muls	r6, r4
 801ddae:	eb02 0806 	add.w	r8, r2, r6
 801ddb2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801ddb6:	f115 040f 	adds.w	r4, r5, #15
 801ddba:	f100 809f 	bmi.w	801defc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801ddbe:	1124      	asrs	r4, r4, #4
 801ddc0:	eba4 040e 	sub.w	r4, r4, lr
 801ddc4:	6184      	str	r4, [r0, #24]
 801ddc6:	2c00      	cmp	r4, #0
 801ddc8:	f000 808a 	beq.w	801dee0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 801ddcc:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801ddd0:	f8d8 4004 	ldr.w	r4, [r8, #4]
 801ddd4:	5995      	ldr	r5, [r2, r6]
 801ddd6:	eba4 0809 	sub.w	r8, r4, r9
 801ddda:	59d4      	ldr	r4, [r2, r7]
 801dddc:	eba5 0a04 	sub.w	sl, r5, r4
 801dde0:	ea4f 150a 	mov.w	r5, sl, lsl #4
 801dde4:	fb0e fe05 	mul.w	lr, lr, r5
 801dde8:	fb0a ee19 	mls	lr, sl, r9, lr
 801ddec:	fb08 e404 	mla	r4, r8, r4, lr
 801ddf0:	ea4f 1608 	mov.w	r6, r8, lsl #4
 801ddf4:	3c01      	subs	r4, #1
 801ddf6:	19a4      	adds	r4, r4, r6
 801ddf8:	f100 808c 	bmi.w	801df14 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 801ddfc:	fb94 fef6 	sdiv	lr, r4, r6
 801de00:	f8c0 e000 	str.w	lr, [r0]
 801de04:	fb06 441e 	mls	r4, r6, lr, r4
 801de08:	6104      	str	r4, [r0, #16]
 801de0a:	2d00      	cmp	r5, #0
 801de0c:	f2c0 8095 	blt.w	801df3a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801de10:	fb95 f4f6 	sdiv	r4, r5, r6
 801de14:	6044      	str	r4, [r0, #4]
 801de16:	fb06 5514 	mls	r5, r6, r4, r5
 801de1a:	6085      	str	r5, [r0, #8]
 801de1c:	60c6      	str	r6, [r0, #12]
 801de1e:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801de22:	6945      	ldr	r5, [r0, #20]
 801de24:	59d2      	ldr	r2, [r2, r7]
 801de26:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 801df5c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801de2a:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 801de2e:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801de32:	ee07 4a10 	vmov	s14, r4
 801de36:	6804      	ldr	r4, [r0, #0]
 801de38:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 801de3c:	ee07 2a90 	vmov	s15, r2
 801de40:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801de44:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801de48:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801de4c:	ee27 7a26 	vmul.f32	s14, s14, s13
 801de50:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801de54:	edd3 6a00 	vldr	s13, [r3]
 801de58:	eee6 6a07 	vfma.f32	s13, s12, s14
 801de5c:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 801de60:	eee6 6a27 	vfma.f32	s13, s12, s15
 801de64:	edc0 6a07 	vstr	s13, [r0, #28]
 801de68:	edd0 6a01 	vldr	s13, [r0, #4]
 801de6c:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 801de70:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 801de74:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801de78:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801de7c:	ed80 6a08 	vstr	s12, [r0, #32]
 801de80:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 801de82:	6242      	str	r2, [r0, #36]	@ 0x24
 801de84:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 801de88:	ed93 6a03 	vldr	s12, [r3, #12]
 801de8c:	eea5 6a87 	vfma.f32	s12, s11, s14
 801de90:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 801de94:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801de98:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 801de9c:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 801dea0:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 801dea4:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801dea8:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 801deac:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801deae:	6302      	str	r2, [r0, #48]	@ 0x30
 801deb0:	ed93 6a06 	vldr	s12, [r3, #24]
 801deb4:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 801deb8:	eea5 6a87 	vfma.f32	s12, s11, s14
 801debc:	eeb0 7a46 	vmov.f32	s14, s12
 801dec0:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 801dec4:	eea6 7a27 	vfma.f32	s14, s12, s15
 801dec8:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 801decc:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 801ded0:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 801ded4:	eee6 7a87 	vfma.f32	s15, s13, s14
 801ded8:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 801dedc:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 801dede:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801dee0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801dee4:	f1c5 0501 	rsb	r5, r5, #1
 801dee8:	f015 050f 	ands.w	r5, r5, #15
 801deec:	bf18      	it	ne
 801deee:	2501      	movne	r5, #1
 801def0:	2410      	movs	r4, #16
 801def2:	fb9e fef4 	sdiv	lr, lr, r4
 801def6:	ebae 0e05 	sub.w	lr, lr, r5
 801defa:	e753      	b.n	801dda4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 801defc:	f1c5 0501 	rsb	r5, r5, #1
 801df00:	f015 050f 	ands.w	r5, r5, #15
 801df04:	bf18      	it	ne
 801df06:	2501      	movne	r5, #1
 801df08:	f04f 0910 	mov.w	r9, #16
 801df0c:	fb94 f4f9 	sdiv	r4, r4, r9
 801df10:	1b64      	subs	r4, r4, r5
 801df12:	e755      	b.n	801ddc0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 801df14:	4264      	negs	r4, r4
 801df16:	fb94 fef6 	sdiv	lr, r4, r6
 801df1a:	f1ce 0800 	rsb	r8, lr, #0
 801df1e:	fb06 441e 	mls	r4, r6, lr, r4
 801df22:	f8c0 8000 	str.w	r8, [r0]
 801df26:	6104      	str	r4, [r0, #16]
 801df28:	2c00      	cmp	r4, #0
 801df2a:	f43f af6e 	beq.w	801de0a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801df2e:	ea6f 0e0e 	mvn.w	lr, lr
 801df32:	f8c0 e000 	str.w	lr, [r0]
 801df36:	1b34      	subs	r4, r6, r4
 801df38:	e766      	b.n	801de08 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 801df3a:	426d      	negs	r5, r5
 801df3c:	fb95 f4f6 	sdiv	r4, r5, r6
 801df40:	f1c4 0e00 	rsb	lr, r4, #0
 801df44:	fb06 5514 	mls	r5, r6, r4, r5
 801df48:	f8c0 e004 	str.w	lr, [r0, #4]
 801df4c:	6085      	str	r5, [r0, #8]
 801df4e:	2d00      	cmp	r5, #0
 801df50:	f43f af64 	beq.w	801de1c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801df54:	43e4      	mvns	r4, r4
 801df56:	6044      	str	r4, [r0, #4]
 801df58:	1b75      	subs	r5, r6, r5
 801df5a:	e75e      	b.n	801de1a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 801df5c:	3d800000 	.word	0x3d800000

0801df60 <_ZN8touchgfx7Unicode6strlenEPKt>:
 801df60:	4602      	mov	r2, r0
 801df62:	b148      	cbz	r0, 801df78 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801df64:	2300      	movs	r3, #0
 801df66:	b298      	uxth	r0, r3
 801df68:	3301      	adds	r3, #1
 801df6a:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801df6e:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801df72:	2900      	cmp	r1, #0
 801df74:	d1f7      	bne.n	801df66 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801df76:	4770      	bx	lr
 801df78:	4770      	bx	lr

0801df7a <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801df7a:	b530      	push	{r4, r5, lr}
 801df7c:	4604      	mov	r4, r0
 801df7e:	b159      	cbz	r1, 801df98 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 801df80:	b148      	cbz	r0, 801df96 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801df82:	2300      	movs	r3, #0
 801df84:	b298      	uxth	r0, r3
 801df86:	4282      	cmp	r2, r0
 801df88:	d905      	bls.n	801df96 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801df8a:	5ccd      	ldrb	r5, [r1, r3]
 801df8c:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801df90:	3301      	adds	r3, #1
 801df92:	2d00      	cmp	r5, #0
 801df94:	d1f6      	bne.n	801df84 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801df96:	bd30      	pop	{r4, r5, pc}
 801df98:	4608      	mov	r0, r1
 801df9a:	e7fc      	b.n	801df96 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0801df9c <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 801df9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801df9e:	b08b      	sub	sp, #44	@ 0x2c
 801dfa0:	468c      	mov	ip, r1
 801dfa2:	2100      	movs	r1, #0
 801dfa4:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 801dfa8:	4604      	mov	r4, r0
 801dfaa:	261f      	movs	r6, #31
 801dfac:	af01      	add	r7, sp, #4
 801dfae:	fb94 fef3 	sdiv	lr, r4, r3
 801dfb2:	fb03 441e 	mls	r4, r3, lr, r4
 801dfb6:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 801dfba:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801dfbe:	b2ec      	uxtb	r4, r5
 801dfc0:	2d09      	cmp	r5, #9
 801dfc2:	bfd4      	ite	le
 801dfc4:	3430      	addle	r4, #48	@ 0x30
 801dfc6:	3457      	addgt	r4, #87	@ 0x57
 801dfc8:	b2e4      	uxtb	r4, r4
 801dfca:	55bc      	strb	r4, [r7, r6]
 801dfcc:	4674      	mov	r4, lr
 801dfce:	1e71      	subs	r1, r6, #1
 801dfd0:	b974      	cbnz	r4, 801dff0 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801dfd2:	2800      	cmp	r0, #0
 801dfd4:	da05      	bge.n	801dfe2 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 801dfd6:	ab0a      	add	r3, sp, #40	@ 0x28
 801dfd8:	4419      	add	r1, r3
 801dfda:	232d      	movs	r3, #45	@ 0x2d
 801dfdc:	f801 3c24 	strb.w	r3, [r1, #-36]
 801dfe0:	1eb1      	subs	r1, r6, #2
 801dfe2:	3101      	adds	r1, #1
 801dfe4:	4439      	add	r1, r7
 801dfe6:	4660      	mov	r0, ip
 801dfe8:	f7ff ffc7 	bl	801df7a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801dfec:	b00b      	add	sp, #44	@ 0x2c
 801dfee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801dff0:	460e      	mov	r6, r1
 801dff2:	e7dc      	b.n	801dfae <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

0801dff4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 801dff4:	b5f0      	push	{r4, r5, r6, r7, lr}
 801dff6:	b08b      	sub	sp, #44	@ 0x2c
 801dff8:	468c      	mov	ip, r1
 801dffa:	2100      	movs	r1, #0
 801dffc:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 801e000:	ae01      	add	r6, sp, #4
 801e002:	211f      	movs	r1, #31
 801e004:	fbb0 f7f3 	udiv	r7, r0, r3
 801e008:	fb03 0517 	mls	r5, r3, r7, r0
 801e00c:	b2ec      	uxtb	r4, r5
 801e00e:	2d09      	cmp	r5, #9
 801e010:	bfd4      	ite	le
 801e012:	3430      	addle	r4, #48	@ 0x30
 801e014:	3457      	addgt	r4, #87	@ 0x57
 801e016:	b2e4      	uxtb	r4, r4
 801e018:	558c      	strb	r4, [r1, r6]
 801e01a:	4638      	mov	r0, r7
 801e01c:	1e4c      	subs	r4, r1, #1
 801e01e:	b92f      	cbnz	r7, 801e02c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 801e020:	4431      	add	r1, r6
 801e022:	4660      	mov	r0, ip
 801e024:	f7ff ffa9 	bl	801df7a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801e028:	b00b      	add	sp, #44	@ 0x2c
 801e02a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801e02c:	4621      	mov	r1, r4
 801e02e:	e7e9      	b.n	801e004 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0801e030 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 801e030:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e034:	4691      	mov	r9, r2
 801e036:	b085      	sub	sp, #20
 801e038:	6802      	ldr	r2, [r0, #0]
 801e03a:	9201      	str	r2, [sp, #4]
 801e03c:	4688      	mov	r8, r1
 801e03e:	4683      	mov	fp, r0
 801e040:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
 801e044:	9103      	str	r1, [sp, #12]
 801e046:	4610      	mov	r0, r2
 801e048:	461c      	mov	r4, r3
 801e04a:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
 801e04e:	9302      	str	r3, [sp, #8]
 801e050:	f7ff ff86 	bl	801df60 <_ZN8touchgfx7Unicode6strlenEPKt>
 801e054:	f1b8 0f00 	cmp.w	r8, #0
 801e058:	bf0c      	ite	eq
 801e05a:	4684      	moveq	ip, r0
 801e05c:	f100 0c01 	addne.w	ip, r0, #1
 801e060:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
 801e064:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 801e068:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801e06a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801e06c:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 801e070:	9903      	ldr	r1, [sp, #12]
 801e072:	fa1f fc8c 	uxth.w	ip, ip
 801e076:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801e07a:	d041      	beq.n	801e100 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801e07c:	d834      	bhi.n	801e0e8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801e07e:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
 801e082:	d059      	beq.n	801e138 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 801e084:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
 801e088:	d03a      	beq.n	801e100 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801e08a:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
 801e08e:	d034      	beq.n	801e0fa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801e090:	2400      	movs	r4, #0
 801e092:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 801e096:	3a01      	subs	r2, #1
 801e098:	b169      	cbz	r1, 801e0b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801e09a:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801e09c:	458c      	cmp	ip, r1
 801e09e:	da09      	bge.n	801e0b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801e0a0:	eba1 010c 	sub.w	r1, r1, ip
 801e0a4:	b289      	uxth	r1, r1
 801e0a6:	b933      	cbnz	r3, 801e0b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801e0a8:	2e00      	cmp	r6, #0
 801e0aa:	d051      	beq.n	801e150 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801e0ac:	2800      	cmp	r0, #0
 801e0ae:	d04f      	beq.n	801e150 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801e0b0:	440c      	add	r4, r1
 801e0b2:	b2a4      	uxth	r4, r4
 801e0b4:	2100      	movs	r1, #0
 801e0b6:	682b      	ldr	r3, [r5, #0]
 801e0b8:	4293      	cmp	r3, r2
 801e0ba:	da07      	bge.n	801e0cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801e0bc:	f1b8 0f00 	cmp.w	r8, #0
 801e0c0:	d004      	beq.n	801e0cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801e0c2:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801e0c6:	682b      	ldr	r3, [r5, #0]
 801e0c8:	3301      	adds	r3, #1
 801e0ca:	602b      	str	r3, [r5, #0]
 801e0cc:	2730      	movs	r7, #48	@ 0x30
 801e0ce:	2c00      	cmp	r4, #0
 801e0d0:	d04e      	beq.n	801e170 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801e0d2:	682e      	ldr	r6, [r5, #0]
 801e0d4:	3c01      	subs	r4, #1
 801e0d6:	42b2      	cmp	r2, r6
 801e0d8:	b2a4      	uxth	r4, r4
 801e0da:	dd49      	ble.n	801e170 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801e0dc:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801e0e0:	682b      	ldr	r3, [r5, #0]
 801e0e2:	3301      	adds	r3, #1
 801e0e4:	602b      	str	r3, [r5, #0]
 801e0e6:	e7f2      	b.n	801e0ce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 801e0e8:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
 801e0ec:	d01d      	beq.n	801e12a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801e0ee:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
 801e0f2:	d002      	beq.n	801e0fa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801e0f4:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
 801e0f8:	e7c9      	b.n	801e08e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801e0fa:	4684      	mov	ip, r0
 801e0fc:	f04f 0800 	mov.w	r8, #0
 801e100:	2c00      	cmp	r4, #0
 801e102:	d0c6      	beq.n	801e092 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801e104:	b947      	cbnz	r7, 801e118 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801e106:	2801      	cmp	r0, #1
 801e108:	d106      	bne.n	801e118 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801e10a:	8814      	ldrh	r4, [r2, #0]
 801e10c:	2c30      	cmp	r4, #48	@ 0x30
 801e10e:	bf02      	ittt	eq
 801e110:	3202      	addeq	r2, #2
 801e112:	f8cb 2000 	streq.w	r2, [fp]
 801e116:	4638      	moveq	r0, r7
 801e118:	45bc      	cmp	ip, r7
 801e11a:	da14      	bge.n	801e146 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 801e11c:	b2bf      	uxth	r7, r7
 801e11e:	eba7 040c 	sub.w	r4, r7, ip
 801e122:	b2a4      	uxth	r4, r4
 801e124:	46bc      	mov	ip, r7
 801e126:	2600      	movs	r6, #0
 801e128:	e7b3      	b.n	801e092 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801e12a:	4684      	mov	ip, r0
 801e12c:	b16c      	cbz	r4, 801e14a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801e12e:	42b8      	cmp	r0, r7
 801e130:	dd00      	ble.n	801e134 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801e132:	b2b8      	uxth	r0, r7
 801e134:	2400      	movs	r4, #0
 801e136:	e003      	b.n	801e140 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801e138:	f04f 0c01 	mov.w	ip, #1
 801e13c:	2400      	movs	r4, #0
 801e13e:	4660      	mov	r0, ip
 801e140:	4626      	mov	r6, r4
 801e142:	46a0      	mov	r8, r4
 801e144:	e7a5      	b.n	801e092 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801e146:	2400      	movs	r4, #0
 801e148:	e7ed      	b.n	801e126 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801e14a:	4626      	mov	r6, r4
 801e14c:	46a0      	mov	r8, r4
 801e14e:	e7a0      	b.n	801e092 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801e150:	2900      	cmp	r1, #0
 801e152:	d0b0      	beq.n	801e0b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801e154:	2720      	movs	r7, #32
 801e156:	682e      	ldr	r6, [r5, #0]
 801e158:	2900      	cmp	r1, #0
 801e15a:	d0ac      	beq.n	801e0b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801e15c:	3901      	subs	r1, #1
 801e15e:	4296      	cmp	r6, r2
 801e160:	b289      	uxth	r1, r1
 801e162:	daa7      	bge.n	801e0b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801e164:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801e168:	682b      	ldr	r3, [r5, #0]
 801e16a:	3301      	adds	r3, #1
 801e16c:	602b      	str	r3, [r5, #0]
 801e16e:	e7f2      	b.n	801e156 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 801e170:	b188      	cbz	r0, 801e196 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801e172:	682b      	ldr	r3, [r5, #0]
 801e174:	3801      	subs	r0, #1
 801e176:	429a      	cmp	r2, r3
 801e178:	b280      	uxth	r0, r0
 801e17a:	dd0c      	ble.n	801e196 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801e17c:	f8db 3000 	ldr.w	r3, [fp]
 801e180:	1c9c      	adds	r4, r3, #2
 801e182:	f8cb 4000 	str.w	r4, [fp]
 801e186:	881c      	ldrh	r4, [r3, #0]
 801e188:	682b      	ldr	r3, [r5, #0]
 801e18a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801e18e:	682b      	ldr	r3, [r5, #0]
 801e190:	3301      	adds	r3, #1
 801e192:	602b      	str	r3, [r5, #0]
 801e194:	e7ec      	b.n	801e170 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801e196:	2620      	movs	r6, #32
 801e198:	b151      	cbz	r1, 801e1b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801e19a:	6828      	ldr	r0, [r5, #0]
 801e19c:	3901      	subs	r1, #1
 801e19e:	4282      	cmp	r2, r0
 801e1a0:	b289      	uxth	r1, r1
 801e1a2:	dd05      	ble.n	801e1b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801e1a4:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801e1a8:	682b      	ldr	r3, [r5, #0]
 801e1aa:	3301      	adds	r3, #1
 801e1ac:	602b      	str	r3, [r5, #0]
 801e1ae:	e7f3      	b.n	801e198 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801e1b0:	b005      	add	sp, #20
 801e1b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e1b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801e1b6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801e1ba:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801e1be:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
 801e1c2:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
 801e1c6:	2400      	movs	r4, #0
 801e1c8:	8014      	strh	r4, [r2, #0]
 801e1ca:	701c      	strb	r4, [r3, #0]
 801e1cc:	f888 4000 	strb.w	r4, [r8]
 801e1d0:	f88c 4000 	strb.w	r4, [ip]
 801e1d4:	f88e 4000 	strb.w	r4, [lr]
 801e1d8:	703c      	strb	r4, [r7, #0]
 801e1da:	6804      	ldr	r4, [r0, #0]
 801e1dc:	b1a4      	cbz	r4, 801e208 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801e1de:	8824      	ldrh	r4, [r4, #0]
 801e1e0:	f04f 0901 	mov.w	r9, #1
 801e1e4:	b314      	cbz	r4, 801e22c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801e1e6:	2c2b      	cmp	r4, #43	@ 0x2b
 801e1e8:	d001      	beq.n	801e1ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801e1ea:	2c20      	cmp	r4, #32
 801e1ec:	d110      	bne.n	801e210 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801e1ee:	8014      	strh	r4, [r2, #0]
 801e1f0:	6804      	ldr	r4, [r0, #0]
 801e1f2:	b10c      	cbz	r4, 801e1f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 801e1f4:	3402      	adds	r4, #2
 801e1f6:	6004      	str	r4, [r0, #0]
 801e1f8:	680c      	ldr	r4, [r1, #0]
 801e1fa:	b10c      	cbz	r4, 801e200 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 801e1fc:	3401      	adds	r4, #1
 801e1fe:	600c      	str	r4, [r1, #0]
 801e200:	6804      	ldr	r4, [r0, #0]
 801e202:	b17c      	cbz	r4, 801e224 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 801e204:	8824      	ldrh	r4, [r4, #0]
 801e206:	e7ed      	b.n	801e1e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801e208:	680c      	ldr	r4, [r1, #0]
 801e20a:	b17c      	cbz	r4, 801e22c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801e20c:	7824      	ldrb	r4, [r4, #0]
 801e20e:	e7e7      	b.n	801e1e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801e210:	2c2d      	cmp	r4, #45	@ 0x2d
 801e212:	d102      	bne.n	801e21a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 801e214:	f883 9000 	strb.w	r9, [r3]
 801e218:	e7ea      	b.n	801e1f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801e21a:	2c23      	cmp	r4, #35	@ 0x23
 801e21c:	d107      	bne.n	801e22e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801e21e:	f888 9000 	strb.w	r9, [r8]
 801e222:	e7e5      	b.n	801e1f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801e224:	680c      	ldr	r4, [r1, #0]
 801e226:	b10c      	cbz	r4, 801e22c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801e228:	7824      	ldrb	r4, [r4, #0]
 801e22a:	e7db      	b.n	801e1e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801e22c:	2400      	movs	r4, #0
 801e22e:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 801e232:	2b09      	cmp	r3, #9
 801e234:	d901      	bls.n	801e23a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801e236:	2c2a      	cmp	r4, #42	@ 0x2a
 801e238:	d122      	bne.n	801e280 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801e23a:	2301      	movs	r3, #1
 801e23c:	2c30      	cmp	r4, #48	@ 0x30
 801e23e:	f88e 3000 	strb.w	r3, [lr]
 801e242:	d10d      	bne.n	801e260 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801e244:	f88c 3000 	strb.w	r3, [ip]
 801e248:	6803      	ldr	r3, [r0, #0]
 801e24a:	b10b      	cbz	r3, 801e250 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 801e24c:	3302      	adds	r3, #2
 801e24e:	6003      	str	r3, [r0, #0]
 801e250:	680b      	ldr	r3, [r1, #0]
 801e252:	b10b      	cbz	r3, 801e258 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 801e254:	3301      	adds	r3, #1
 801e256:	600b      	str	r3, [r1, #0]
 801e258:	6803      	ldr	r3, [r0, #0]
 801e25a:	2b00      	cmp	r3, #0
 801e25c:	d02f      	beq.n	801e2be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801e25e:	881c      	ldrh	r4, [r3, #0]
 801e260:	2c2a      	cmp	r4, #42	@ 0x2a
 801e262:	d135      	bne.n	801e2d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801e264:	f04f 33ff 	mov.w	r3, #4294967295
 801e268:	6033      	str	r3, [r6, #0]
 801e26a:	6803      	ldr	r3, [r0, #0]
 801e26c:	b10b      	cbz	r3, 801e272 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801e26e:	3302      	adds	r3, #2
 801e270:	6003      	str	r3, [r0, #0]
 801e272:	680b      	ldr	r3, [r1, #0]
 801e274:	b10b      	cbz	r3, 801e27a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801e276:	3301      	adds	r3, #1
 801e278:	600b      	str	r3, [r1, #0]
 801e27a:	6803      	ldr	r3, [r0, #0]
 801e27c:	b31b      	cbz	r3, 801e2c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801e27e:	881c      	ldrh	r4, [r3, #0]
 801e280:	2c2e      	cmp	r4, #46	@ 0x2e
 801e282:	d11a      	bne.n	801e2ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801e284:	2301      	movs	r3, #1
 801e286:	703b      	strb	r3, [r7, #0]
 801e288:	6803      	ldr	r3, [r0, #0]
 801e28a:	b10b      	cbz	r3, 801e290 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801e28c:	3302      	adds	r3, #2
 801e28e:	6003      	str	r3, [r0, #0]
 801e290:	680b      	ldr	r3, [r1, #0]
 801e292:	b10b      	cbz	r3, 801e298 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 801e294:	3301      	adds	r3, #1
 801e296:	600b      	str	r3, [r1, #0]
 801e298:	6803      	ldr	r3, [r0, #0]
 801e29a:	2b00      	cmp	r3, #0
 801e29c:	d036      	beq.n	801e30c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801e29e:	881b      	ldrh	r3, [r3, #0]
 801e2a0:	2b2a      	cmp	r3, #42	@ 0x2a
 801e2a2:	d137      	bne.n	801e314 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801e2a4:	f04f 33ff 	mov.w	r3, #4294967295
 801e2a8:	602b      	str	r3, [r5, #0]
 801e2aa:	6803      	ldr	r3, [r0, #0]
 801e2ac:	b10b      	cbz	r3, 801e2b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801e2ae:	3302      	adds	r3, #2
 801e2b0:	6003      	str	r3, [r0, #0]
 801e2b2:	680b      	ldr	r3, [r1, #0]
 801e2b4:	b10b      	cbz	r3, 801e2ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801e2b6:	3301      	adds	r3, #1
 801e2b8:	600b      	str	r3, [r1, #0]
 801e2ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801e2be:	680c      	ldr	r4, [r1, #0]
 801e2c0:	b134      	cbz	r4, 801e2d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801e2c2:	7824      	ldrb	r4, [r4, #0]
 801e2c4:	e7cc      	b.n	801e260 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801e2c6:	680b      	ldr	r3, [r1, #0]
 801e2c8:	2b00      	cmp	r3, #0
 801e2ca:	d0f6      	beq.n	801e2ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801e2cc:	781c      	ldrb	r4, [r3, #0]
 801e2ce:	e7d7      	b.n	801e280 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801e2d0:	2300      	movs	r3, #0
 801e2d2:	6033      	str	r3, [r6, #0]
 801e2d4:	220a      	movs	r2, #10
 801e2d6:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 801e2da:	fa1f f38c 	uxth.w	r3, ip
 801e2de:	2b09      	cmp	r3, #9
 801e2e0:	d8ce      	bhi.n	801e280 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801e2e2:	6833      	ldr	r3, [r6, #0]
 801e2e4:	fb02 c303 	mla	r3, r2, r3, ip
 801e2e8:	6033      	str	r3, [r6, #0]
 801e2ea:	6803      	ldr	r3, [r0, #0]
 801e2ec:	b10b      	cbz	r3, 801e2f2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801e2ee:	3302      	adds	r3, #2
 801e2f0:	6003      	str	r3, [r0, #0]
 801e2f2:	680b      	ldr	r3, [r1, #0]
 801e2f4:	b10b      	cbz	r3, 801e2fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801e2f6:	3301      	adds	r3, #1
 801e2f8:	600b      	str	r3, [r1, #0]
 801e2fa:	6803      	ldr	r3, [r0, #0]
 801e2fc:	b10b      	cbz	r3, 801e302 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801e2fe:	881c      	ldrh	r4, [r3, #0]
 801e300:	e7e9      	b.n	801e2d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801e302:	680c      	ldr	r4, [r1, #0]
 801e304:	2c00      	cmp	r4, #0
 801e306:	d0e6      	beq.n	801e2d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801e308:	7824      	ldrb	r4, [r4, #0]
 801e30a:	e7e4      	b.n	801e2d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801e30c:	680b      	ldr	r3, [r1, #0]
 801e30e:	b10b      	cbz	r3, 801e314 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801e310:	781b      	ldrb	r3, [r3, #0]
 801e312:	e7c5      	b.n	801e2a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 801e314:	2200      	movs	r2, #0
 801e316:	602a      	str	r2, [r5, #0]
 801e318:	240a      	movs	r4, #10
 801e31a:	3b30      	subs	r3, #48	@ 0x30
 801e31c:	b29e      	uxth	r6, r3
 801e31e:	2e09      	cmp	r6, #9
 801e320:	682a      	ldr	r2, [r5, #0]
 801e322:	d813      	bhi.n	801e34c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 801e324:	fb04 3302 	mla	r3, r4, r2, r3
 801e328:	602b      	str	r3, [r5, #0]
 801e32a:	6803      	ldr	r3, [r0, #0]
 801e32c:	b10b      	cbz	r3, 801e332 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801e32e:	3302      	adds	r3, #2
 801e330:	6003      	str	r3, [r0, #0]
 801e332:	680b      	ldr	r3, [r1, #0]
 801e334:	b10b      	cbz	r3, 801e33a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801e336:	3301      	adds	r3, #1
 801e338:	600b      	str	r3, [r1, #0]
 801e33a:	6803      	ldr	r3, [r0, #0]
 801e33c:	b10b      	cbz	r3, 801e342 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801e33e:	881b      	ldrh	r3, [r3, #0]
 801e340:	e7eb      	b.n	801e31a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801e342:	680b      	ldr	r3, [r1, #0]
 801e344:	2b00      	cmp	r3, #0
 801e346:	d0e8      	beq.n	801e31a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801e348:	781b      	ldrb	r3, [r3, #0]
 801e34a:	e7e6      	b.n	801e31a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801e34c:	2a06      	cmp	r2, #6
 801e34e:	bfa8      	it	ge
 801e350:	2206      	movge	r2, #6
 801e352:	602a      	str	r2, [r5, #0]
 801e354:	e7b1      	b.n	801e2ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801e356 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801e356:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e35a:	b0a3      	sub	sp, #140	@ 0x8c
 801e35c:	2600      	movs	r6, #0
 801e35e:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
 801e362:	4607      	mov	r7, r0
 801e364:	4688      	mov	r8, r1
 801e366:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801e36a:	4631      	mov	r1, r6
 801e36c:	2242      	movs	r2, #66	@ 0x42
 801e36e:	4648      	mov	r0, r9
 801e370:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
 801e372:	960d      	str	r6, [sp, #52]	@ 0x34
 801e374:	f010 fbe9 	bl	802eb4a <memset>
 801e378:	b15f      	cbz	r7, 801e392 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801e37a:	f108 3aff 	add.w	sl, r8, #4294967295
 801e37e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e380:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e382:	b152      	cbz	r2, 801e39a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 801e384:	8812      	ldrh	r2, [r2, #0]
 801e386:	b10a      	cbz	r2, 801e38c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801e388:	459a      	cmp	sl, r3
 801e38a:	dc2e      	bgt.n	801e3ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801e38c:	2200      	movs	r2, #0
 801e38e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801e392:	4638      	mov	r0, r7
 801e394:	b023      	add	sp, #140	@ 0x8c
 801e396:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e39a:	9a08      	ldr	r2, [sp, #32]
 801e39c:	2a00      	cmp	r2, #0
 801e39e:	d0f5      	beq.n	801e38c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801e3a0:	7812      	ldrb	r2, [r2, #0]
 801e3a2:	e7f0      	b.n	801e386 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801e3a4:	2d00      	cmp	r5, #0
 801e3a6:	d0ea      	beq.n	801e37e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801e3a8:	782a      	ldrb	r2, [r5, #0]
 801e3aa:	b142      	cbz	r2, 801e3be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801e3ac:	2a25      	cmp	r2, #37	@ 0x25
 801e3ae:	d001      	beq.n	801e3b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801e3b0:	459a      	cmp	sl, r3
 801e3b2:	dc08      	bgt.n	801e3c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 801e3b4:	f1bb 0f00 	cmp.w	fp, #0
 801e3b8:	d121      	bne.n	801e3fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801e3ba:	2d00      	cmp	r5, #0
 801e3bc:	d0df      	beq.n	801e37e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801e3be:	782a      	ldrb	r2, [r5, #0]
 801e3c0:	f04f 0b00 	mov.w	fp, #0
 801e3c4:	e01d      	b.n	801e402 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801e3c6:	f1bb 0f00 	cmp.w	fp, #0
 801e3ca:	d078      	beq.n	801e4be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 801e3cc:	f8bb 2000 	ldrh.w	r2, [fp]
 801e3d0:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801e3d4:	f1bb 0f00 	cmp.w	fp, #0
 801e3d8:	d002      	beq.n	801e3e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801e3da:	f10b 0202 	add.w	r2, fp, #2
 801e3de:	9209      	str	r2, [sp, #36]	@ 0x24
 801e3e0:	b10d      	cbz	r5, 801e3e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801e3e2:	3501      	adds	r5, #1
 801e3e4:	9508      	str	r5, [sp, #32]
 801e3e6:	3301      	adds	r3, #1
 801e3e8:	930d      	str	r3, [sp, #52]	@ 0x34
 801e3ea:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801e3ee:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e3f0:	f1bb 0f00 	cmp.w	fp, #0
 801e3f4:	d0d6      	beq.n	801e3a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801e3f6:	f8bb 2000 	ldrh.w	r2, [fp]
 801e3fa:	2a00      	cmp	r2, #0
 801e3fc:	d1d6      	bne.n	801e3ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801e3fe:	f8bb 2000 	ldrh.w	r2, [fp]
 801e402:	2a00      	cmp	r2, #0
 801e404:	d0bb      	beq.n	801e37e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801e406:	459a      	cmp	sl, r3
 801e408:	ddb9      	ble.n	801e37e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801e40a:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
 801e40e:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
 801e412:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
 801e416:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
 801e41a:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
 801e41e:	960e      	str	r6, [sp, #56]	@ 0x38
 801e420:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
 801e424:	960f      	str	r6, [sp, #60]	@ 0x3c
 801e426:	f1bb 0f00 	cmp.w	fp, #0
 801e42a:	d002      	beq.n	801e432 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 801e42c:	f10b 0302 	add.w	r3, fp, #2
 801e430:	9309      	str	r3, [sp, #36]	@ 0x24
 801e432:	b10d      	cbz	r5, 801e438 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 801e434:	1c6b      	adds	r3, r5, #1
 801e436:	9308      	str	r3, [sp, #32]
 801e438:	ab0f      	add	r3, sp, #60	@ 0x3c
 801e43a:	9305      	str	r3, [sp, #20]
 801e43c:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 801e440:	9304      	str	r3, [sp, #16]
 801e442:	ab0e      	add	r3, sp, #56	@ 0x38
 801e444:	9303      	str	r3, [sp, #12]
 801e446:	ab0c      	add	r3, sp, #48	@ 0x30
 801e448:	9302      	str	r3, [sp, #8]
 801e44a:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 801e44e:	9301      	str	r3, [sp, #4]
 801e450:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 801e454:	9300      	str	r3, [sp, #0]
 801e456:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 801e45a:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 801e45e:	a908      	add	r1, sp, #32
 801e460:	a809      	add	r0, sp, #36	@ 0x24
 801e462:	f7ff fea8 	bl	801e1b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801e466:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e468:	2b00      	cmp	r3, #0
 801e46a:	bfbe      	ittt	lt
 801e46c:	6823      	ldrlt	r3, [r4, #0]
 801e46e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801e472:	930e      	strlt	r3, [sp, #56]	@ 0x38
 801e474:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801e476:	bfb8      	it	lt
 801e478:	3404      	addlt	r4, #4
 801e47a:	2b00      	cmp	r3, #0
 801e47c:	bfb8      	it	lt
 801e47e:	6823      	ldrlt	r3, [r4, #0]
 801e480:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801e484:	bfbe      	ittt	lt
 801e486:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801e48a:	930f      	strlt	r3, [sp, #60]	@ 0x3c
 801e48c:	3404      	addlt	r4, #4
 801e48e:	b1d9      	cbz	r1, 801e4c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 801e490:	880b      	ldrh	r3, [r1, #0]
 801e492:	2b69      	cmp	r3, #105	@ 0x69
 801e494:	d01f      	beq.n	801e4d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801e496:	d82f      	bhi.n	801e4f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 801e498:	2b58      	cmp	r3, #88	@ 0x58
 801e49a:	d01c      	beq.n	801e4d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801e49c:	d818      	bhi.n	801e4d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801e49e:	2b25      	cmp	r3, #37	@ 0x25
 801e4a0:	d034      	beq.n	801e50c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801e4a2:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801e4a6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e4a8:	f1bb 0f00 	cmp.w	fp, #0
 801e4ac:	f000 80b8 	beq.w	801e620 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 801e4b0:	f8bb 5000 	ldrh.w	r5, [fp]
 801e4b4:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801e4b8:	3301      	adds	r3, #1
 801e4ba:	930d      	str	r3, [sp, #52]	@ 0x34
 801e4bc:	e029      	b.n	801e512 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801e4be:	b10d      	cbz	r5, 801e4c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 801e4c0:	782a      	ldrb	r2, [r5, #0]
 801e4c2:	e785      	b.n	801e3d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801e4c4:	462a      	mov	r2, r5
 801e4c6:	e783      	b.n	801e3d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801e4c8:	2a00      	cmp	r2, #0
 801e4ca:	d0ea      	beq.n	801e4a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801e4cc:	7813      	ldrb	r3, [r2, #0]
 801e4ce:	e7e0      	b.n	801e492 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 801e4d0:	3b63      	subs	r3, #99	@ 0x63
 801e4d2:	2b01      	cmp	r3, #1
 801e4d4:	d8e5      	bhi.n	801e4a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801e4d6:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 801e4da:	b329      	cbz	r1, 801e528 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 801e4dc:	880b      	ldrh	r3, [r1, #0]
 801e4de:	2b69      	cmp	r3, #105	@ 0x69
 801e4e0:	d063      	beq.n	801e5aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801e4e2:	d825      	bhi.n	801e530 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 801e4e4:	2b63      	cmp	r3, #99	@ 0x63
 801e4e6:	d038      	beq.n	801e55a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 801e4e8:	2b64      	cmp	r3, #100	@ 0x64
 801e4ea:	d05e      	beq.n	801e5aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801e4ec:	2b58      	cmp	r3, #88	@ 0x58
 801e4ee:	d07b      	beq.n	801e5e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 801e4f0:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 801e4f4:	4625      	mov	r5, r4
 801e4f6:	e036      	b.n	801e566 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801e4f8:	2b73      	cmp	r3, #115	@ 0x73
 801e4fa:	d0ec      	beq.n	801e4d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801e4fc:	d802      	bhi.n	801e504 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801e4fe:	2b6f      	cmp	r3, #111	@ 0x6f
 801e500:	d1cf      	bne.n	801e4a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801e502:	e7e8      	b.n	801e4d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801e504:	2b75      	cmp	r3, #117	@ 0x75
 801e506:	d0e6      	beq.n	801e4d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801e508:	2b78      	cmp	r3, #120	@ 0x78
 801e50a:	e7f9      	b.n	801e500 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 801e50c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801e50e:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801e512:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e514:	b10b      	cbz	r3, 801e51a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801e516:	3302      	adds	r3, #2
 801e518:	9309      	str	r3, [sp, #36]	@ 0x24
 801e51a:	9b08      	ldr	r3, [sp, #32]
 801e51c:	2b00      	cmp	r3, #0
 801e51e:	f43f af2e 	beq.w	801e37e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801e522:	3301      	adds	r3, #1
 801e524:	9308      	str	r3, [sp, #32]
 801e526:	e72a      	b.n	801e37e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801e528:	2a00      	cmp	r2, #0
 801e52a:	d0e1      	beq.n	801e4f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801e52c:	7813      	ldrb	r3, [r2, #0]
 801e52e:	e7d6      	b.n	801e4de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 801e530:	2b73      	cmp	r3, #115	@ 0x73
 801e532:	d036      	beq.n	801e5a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 801e534:	d807      	bhi.n	801e546 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801e536:	2b6f      	cmp	r3, #111	@ 0x6f
 801e538:	d1da      	bne.n	801e4f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801e53a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801e53c:	1d25      	adds	r5, r4, #4
 801e53e:	eba8 0202 	sub.w	r2, r8, r2
 801e542:	2308      	movs	r3, #8
 801e544:	e04a      	b.n	801e5dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801e546:	2b75      	cmp	r3, #117	@ 0x75
 801e548:	d043      	beq.n	801e5d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801e54a:	2b78      	cmp	r3, #120	@ 0x78
 801e54c:	d1d0      	bne.n	801e4f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801e54e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801e550:	1d25      	adds	r5, r4, #4
 801e552:	eba8 0202 	sub.w	r2, r8, r2
 801e556:	2310      	movs	r3, #16
 801e558:	e040      	b.n	801e5dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801e55a:	6823      	ldr	r3, [r4, #0]
 801e55c:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 801e560:	1d25      	adds	r5, r4, #4
 801e562:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
 801e566:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e568:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 801e56c:	2b00      	cmp	r3, #0
 801e56e:	d052      	beq.n	801e616 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 801e570:	881a      	ldrh	r2, [r3, #0]
 801e572:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 801e576:	a80d      	add	r0, sp, #52	@ 0x34
 801e578:	9005      	str	r0, [sp, #20]
 801e57a:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 801e57e:	9004      	str	r0, [sp, #16]
 801e580:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801e582:	9003      	str	r0, [sp, #12]
 801e584:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 801e588:	9002      	str	r0, [sp, #8]
 801e58a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801e58c:	9001      	str	r0, [sp, #4]
 801e58e:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 801e592:	9000      	str	r0, [sp, #0]
 801e594:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801e598:	a810      	add	r0, sp, #64	@ 0x40
 801e59a:	f7ff fd49 	bl	801e030 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801e59e:	462c      	mov	r4, r5
 801e5a0:	e7b7      	b.n	801e512 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801e5a2:	6823      	ldr	r3, [r4, #0]
 801e5a4:	1d25      	adds	r5, r4, #4
 801e5a6:	9310      	str	r3, [sp, #64]	@ 0x40
 801e5a8:	e7dd      	b.n	801e566 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801e5aa:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801e5ac:	6820      	ldr	r0, [r4, #0]
 801e5ae:	eba8 0202 	sub.w	r2, r8, r2
 801e5b2:	230a      	movs	r3, #10
 801e5b4:	b292      	uxth	r2, r2
 801e5b6:	4649      	mov	r1, r9
 801e5b8:	f7ff fcf0 	bl	801df9c <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801e5bc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 801e5c0:	2b2d      	cmp	r3, #45	@ 0x2d
 801e5c2:	f104 0504 	add.w	r5, r4, #4
 801e5c6:	d1ce      	bne.n	801e566 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801e5c8:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801e5cc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801e5ce:	3302      	adds	r3, #2
 801e5d0:	e7e9      	b.n	801e5a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801e5d2:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801e5d4:	1d25      	adds	r5, r4, #4
 801e5d6:	eba8 0202 	sub.w	r2, r8, r2
 801e5da:	230a      	movs	r3, #10
 801e5dc:	b292      	uxth	r2, r2
 801e5de:	4649      	mov	r1, r9
 801e5e0:	6820      	ldr	r0, [r4, #0]
 801e5e2:	f7ff fd07 	bl	801dff4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801e5e6:	e7be      	b.n	801e566 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801e5e8:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801e5ea:	6820      	ldr	r0, [r4, #0]
 801e5ec:	eba8 0202 	sub.w	r2, r8, r2
 801e5f0:	b292      	uxth	r2, r2
 801e5f2:	2310      	movs	r3, #16
 801e5f4:	4649      	mov	r1, r9
 801e5f6:	f7ff fcfd 	bl	801dff4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801e5fa:	1d25      	adds	r5, r4, #4
 801e5fc:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
 801e600:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 801e604:	2b00      	cmp	r3, #0
 801e606:	d0ae      	beq.n	801e566 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801e608:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
 801e60c:	2919      	cmp	r1, #25
 801e60e:	d8f7      	bhi.n	801e600 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801e610:	3b20      	subs	r3, #32
 801e612:	8013      	strh	r3, [r2, #0]
 801e614:	e7f4      	b.n	801e600 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801e616:	9a08      	ldr	r2, [sp, #32]
 801e618:	2a00      	cmp	r2, #0
 801e61a:	d0aa      	beq.n	801e572 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801e61c:	7812      	ldrb	r2, [r2, #0]
 801e61e:	e7a8      	b.n	801e572 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801e620:	2d00      	cmp	r5, #0
 801e622:	f43f af47 	beq.w	801e4b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801e626:	782d      	ldrb	r5, [r5, #0]
 801e628:	e744      	b.n	801e4b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801e62a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801e62a:	b507      	push	{r0, r1, r2, lr}
 801e62c:	9300      	str	r3, [sp, #0]
 801e62e:	4613      	mov	r3, r2
 801e630:	2200      	movs	r2, #0
 801e632:	f7ff fe90 	bl	801e356 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801e636:	b003      	add	sp, #12
 801e638:	f85d fb04 	ldr.w	pc, [sp], #4

0801e63c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801e63c:	b40c      	push	{r2, r3}
 801e63e:	b507      	push	{r0, r1, r2, lr}
 801e640:	ab04      	add	r3, sp, #16
 801e642:	f853 2b04 	ldr.w	r2, [r3], #4
 801e646:	9301      	str	r3, [sp, #4]
 801e648:	f7ff ffef 	bl	801e62a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801e64c:	b003      	add	sp, #12
 801e64e:	f85d eb04 	ldr.w	lr, [sp], #4
 801e652:	b002      	add	sp, #8
 801e654:	4770      	bx	lr
	...

0801e658 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801e658:	4b01      	ldr	r3, [pc, #4]	@ (801e660 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801e65a:	6018      	str	r0, [r3, #0]
 801e65c:	4770      	bx	lr
 801e65e:	bf00      	nop
 801e660:	2000e474 	.word	0x2000e474

0801e664 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801e664:	4b06      	ldr	r3, [pc, #24]	@ (801e680 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801e666:	881a      	ldrh	r2, [r3, #0]
 801e668:	4282      	cmp	r2, r0
 801e66a:	d807      	bhi.n	801e67c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801e66c:	4b05      	ldr	r3, [pc, #20]	@ (801e684 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801e66e:	881b      	ldrh	r3, [r3, #0]
 801e670:	4413      	add	r3, r2
 801e672:	4298      	cmp	r0, r3
 801e674:	bfac      	ite	ge
 801e676:	2000      	movge	r0, #0
 801e678:	2001      	movlt	r0, #1
 801e67a:	4770      	bx	lr
 801e67c:	2000      	movs	r0, #0
 801e67e:	4770      	bx	lr
 801e680:	2000e494 	.word	0x2000e494
 801e684:	2000e498 	.word	0x2000e498

0801e688 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801e688:	b508      	push	{r3, lr}
 801e68a:	4601      	mov	r1, r0
 801e68c:	f7ff ffea 	bl	801e664 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801e690:	b118      	cbz	r0, 801e69a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801e692:	4b02      	ldr	r3, [pc, #8]	@ (801e69c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801e694:	681b      	ldr	r3, [r3, #0]
 801e696:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801e69a:	bd08      	pop	{r3, pc}
 801e69c:	2000e478 	.word	0x2000e478

0801e6a0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801e6a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 801e6a2:	4c24      	ldr	r4, [pc, #144]	@ (801e734 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801e6a4:	6823      	ldr	r3, [r4, #0]
 801e6a6:	2b00      	cmp	r3, #0
 801e6a8:	d042      	beq.n	801e730 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801e6aa:	4a23      	ldr	r2, [pc, #140]	@ (801e738 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801e6ac:	4d23      	ldr	r5, [pc, #140]	@ (801e73c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801e6ae:	8811      	ldrh	r1, [r2, #0]
 801e6b0:	f8b5 c000 	ldrh.w	ip, [r5]
 801e6b4:	4822      	ldr	r0, [pc, #136]	@ (801e740 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801e6b6:	4461      	add	r1, ip
 801e6b8:	1c4a      	adds	r2, r1, #1
 801e6ba:	f022 0201 	bic.w	r2, r2, #1
 801e6be:	008f      	lsls	r7, r1, #2
 801e6c0:	0412      	lsls	r2, r2, #16
 801e6c2:	19de      	adds	r6, r3, r7
 801e6c4:	0c12      	lsrs	r2, r2, #16
 801e6c6:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801e6ca:	6006      	str	r6, [r0, #0]
 801e6cc:	4e1d      	ldr	r6, [pc, #116]	@ (801e744 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801e6ce:	19da      	adds	r2, r3, r7
 801e6d0:	6032      	str	r2, [r6, #0]
 801e6d2:	220e      	movs	r2, #14
 801e6d4:	fb02 f20c 	mul.w	r2, r2, ip
 801e6d8:	3203      	adds	r2, #3
 801e6da:	f022 0203 	bic.w	r2, r2, #3
 801e6de:	443a      	add	r2, r7
 801e6e0:	4f19      	ldr	r7, [pc, #100]	@ (801e748 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801e6e2:	4413      	add	r3, r2
 801e6e4:	603b      	str	r3, [r7, #0]
 801e6e6:	4f19      	ldr	r7, [pc, #100]	@ (801e74c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801e6e8:	2300      	movs	r3, #0
 801e6ea:	803b      	strh	r3, [r7, #0]
 801e6ec:	4f18      	ldr	r7, [pc, #96]	@ (801e750 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801e6ee:	683f      	ldr	r7, [r7, #0]
 801e6f0:	1aba      	subs	r2, r7, r2
 801e6f2:	4f18      	ldr	r7, [pc, #96]	@ (801e754 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801e6f4:	603a      	str	r2, [r7, #0]
 801e6f6:	4a18      	ldr	r2, [pc, #96]	@ (801e758 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801e6f8:	469c      	mov	ip, r3
 801e6fa:	8013      	strh	r3, [r2, #0]
 801e6fc:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 801e700:	428b      	cmp	r3, r1
 801e702:	d10d      	bne.n	801e720 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801e704:	882d      	ldrh	r5, [r5, #0]
 801e706:	6830      	ldr	r0, [r6, #0]
 801e708:	2300      	movs	r3, #0
 801e70a:	240e      	movs	r4, #14
 801e70c:	429d      	cmp	r5, r3
 801e70e:	d90f      	bls.n	801e730 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801e710:	fb04 0203 	mla	r2, r4, r3, r0
 801e714:	3301      	adds	r3, #1
 801e716:	7b11      	ldrb	r1, [r2, #12]
 801e718:	f36f 1145 	bfc	r1, #5, #1
 801e71c:	7311      	strb	r1, [r2, #12]
 801e71e:	e7f5      	b.n	801e70c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801e720:	6822      	ldr	r2, [r4, #0]
 801e722:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801e726:	6802      	ldr	r2, [r0, #0]
 801e728:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801e72c:	3301      	adds	r3, #1
 801e72e:	e7e7      	b.n	801e700 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801e730:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801e732:	bf00      	nop
 801e734:	2000e478 	.word	0x2000e478
 801e738:	2000e494 	.word	0x2000e494
 801e73c:	2000e498 	.word	0x2000e498
 801e740:	2000e48c 	.word	0x2000e48c
 801e744:	2000e47c 	.word	0x2000e47c
 801e748:	2000e484 	.word	0x2000e484
 801e74c:	2000e496 	.word	0x2000e496
 801e750:	2000e480 	.word	0x2000e480
 801e754:	2000e490 	.word	0x2000e490
 801e758:	2000e488 	.word	0x2000e488

0801e75c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801e75c:	4b06      	ldr	r3, [pc, #24]	@ (801e778 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801e75e:	681b      	ldr	r3, [r3, #0]
 801e760:	b943      	cbnz	r3, 801e774 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801e762:	b139      	cbz	r1, 801e774 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801e764:	4b05      	ldr	r3, [pc, #20]	@ (801e77c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801e766:	801a      	strh	r2, [r3, #0]
 801e768:	4b05      	ldr	r3, [pc, #20]	@ (801e780 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801e76a:	6019      	str	r1, [r3, #0]
 801e76c:	4b05      	ldr	r3, [pc, #20]	@ (801e784 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801e76e:	6018      	str	r0, [r3, #0]
 801e770:	f7ff bf96 	b.w	801e6a0 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801e774:	4770      	bx	lr
 801e776:	bf00      	nop
 801e778:	2000e484 	.word	0x2000e484
 801e77c:	2000e498 	.word	0x2000e498
 801e780:	2000e480 	.word	0x2000e480
 801e784:	2000e478 	.word	0x2000e478

0801e788 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801e788:	b470      	push	{r4, r5, r6}
 801e78a:	4c07      	ldr	r4, [pc, #28]	@ (801e7a8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801e78c:	6826      	ldr	r6, [r4, #0]
 801e78e:	4605      	mov	r5, r0
 801e790:	4610      	mov	r0, r2
 801e792:	9a03      	ldr	r2, [sp, #12]
 801e794:	b936      	cbnz	r6, 801e7a4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801e796:	6025      	str	r5, [r4, #0]
 801e798:	4c04      	ldr	r4, [pc, #16]	@ (801e7ac <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801e79a:	8021      	strh	r1, [r4, #0]
 801e79c:	bc70      	pop	{r4, r5, r6}
 801e79e:	4619      	mov	r1, r3
 801e7a0:	f7ff bfdc 	b.w	801e75c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801e7a4:	bc70      	pop	{r4, r5, r6}
 801e7a6:	4770      	bx	lr
 801e7a8:	2000e49c 	.word	0x2000e49c
 801e7ac:	2000e494 	.word	0x2000e494

0801e7b0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801e7b0:	4a12      	ldr	r2, [pc, #72]	@ (801e7fc <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801e7b2:	8803      	ldrh	r3, [r0, #0]
 801e7b4:	8812      	ldrh	r2, [r2, #0]
 801e7b6:	4293      	cmp	r3, r2
 801e7b8:	d207      	bcs.n	801e7ca <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801e7ba:	4a11      	ldr	r2, [pc, #68]	@ (801e800 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801e7bc:	6812      	ldr	r2, [r2, #0]
 801e7be:	2114      	movs	r1, #20
 801e7c0:	fb01 2303 	mla	r3, r1, r3, r2
 801e7c4:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801e7c8:	4770      	bx	lr
 801e7ca:	490e      	ldr	r1, [pc, #56]	@ (801e804 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801e7cc:	8809      	ldrh	r1, [r1, #0]
 801e7ce:	4411      	add	r1, r2
 801e7d0:	428b      	cmp	r3, r1
 801e7d2:	da04      	bge.n	801e7de <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801e7d4:	1a9b      	subs	r3, r3, r2
 801e7d6:	4a0c      	ldr	r2, [pc, #48]	@ (801e808 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801e7d8:	210e      	movs	r1, #14
 801e7da:	6812      	ldr	r2, [r2, #0]
 801e7dc:	e7f0      	b.n	801e7c0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801e7de:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801e7e2:	4293      	cmp	r3, r2
 801e7e4:	d108      	bne.n	801e7f8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801e7e6:	4b09      	ldr	r3, [pc, #36]	@ (801e80c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801e7e8:	781b      	ldrb	r3, [r3, #0]
 801e7ea:	b91b      	cbnz	r3, 801e7f4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801e7ec:	4b08      	ldr	r3, [pc, #32]	@ (801e810 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801e7ee:	f9b3 0000 	ldrsh.w	r0, [r3]
 801e7f2:	4770      	bx	lr
 801e7f4:	4b07      	ldr	r3, [pc, #28]	@ (801e814 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801e7f6:	e7fa      	b.n	801e7ee <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801e7f8:	2000      	movs	r0, #0
 801e7fa:	4770      	bx	lr
 801e7fc:	2000e494 	.word	0x2000e494
 801e800:	2000e49c 	.word	0x2000e49c
 801e804:	2000e498 	.word	0x2000e498
 801e808:	2000e47c 	.word	0x2000e47c
 801e80c:	2000e404 	.word	0x2000e404
 801e810:	2000e406 	.word	0x2000e406
 801e814:	2000e408 	.word	0x2000e408

0801e818 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801e818:	4a12      	ldr	r2, [pc, #72]	@ (801e864 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801e81a:	8803      	ldrh	r3, [r0, #0]
 801e81c:	8812      	ldrh	r2, [r2, #0]
 801e81e:	4293      	cmp	r3, r2
 801e820:	d207      	bcs.n	801e832 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801e822:	4a11      	ldr	r2, [pc, #68]	@ (801e868 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801e824:	6812      	ldr	r2, [r2, #0]
 801e826:	2114      	movs	r1, #20
 801e828:	fb01 2303 	mla	r3, r1, r3, r2
 801e82c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801e830:	4770      	bx	lr
 801e832:	490e      	ldr	r1, [pc, #56]	@ (801e86c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801e834:	8809      	ldrh	r1, [r1, #0]
 801e836:	4411      	add	r1, r2
 801e838:	428b      	cmp	r3, r1
 801e83a:	da04      	bge.n	801e846 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801e83c:	1a9b      	subs	r3, r3, r2
 801e83e:	4a0c      	ldr	r2, [pc, #48]	@ (801e870 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801e840:	210e      	movs	r1, #14
 801e842:	6812      	ldr	r2, [r2, #0]
 801e844:	e7f0      	b.n	801e828 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801e846:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801e84a:	4293      	cmp	r3, r2
 801e84c:	d108      	bne.n	801e860 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801e84e:	4b09      	ldr	r3, [pc, #36]	@ (801e874 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801e850:	781b      	ldrb	r3, [r3, #0]
 801e852:	b91b      	cbnz	r3, 801e85c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801e854:	4b08      	ldr	r3, [pc, #32]	@ (801e878 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801e856:	f9b3 0000 	ldrsh.w	r0, [r3]
 801e85a:	4770      	bx	lr
 801e85c:	4b07      	ldr	r3, [pc, #28]	@ (801e87c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801e85e:	e7fa      	b.n	801e856 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801e860:	2000      	movs	r0, #0
 801e862:	4770      	bx	lr
 801e864:	2000e494 	.word	0x2000e494
 801e868:	2000e49c 	.word	0x2000e49c
 801e86c:	2000e498 	.word	0x2000e498
 801e870:	2000e47c 	.word	0x2000e47c
 801e874:	2000e404 	.word	0x2000e404
 801e878:	2000e408 	.word	0x2000e408
 801e87c:	2000e406 	.word	0x2000e406

0801e880 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801e880:	b530      	push	{r4, r5, lr}
 801e882:	4a22      	ldr	r2, [pc, #136]	@ (801e90c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801e884:	880b      	ldrh	r3, [r1, #0]
 801e886:	8812      	ldrh	r2, [r2, #0]
 801e888:	4293      	cmp	r3, r2
 801e88a:	d213      	bcs.n	801e8b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801e88c:	4a20      	ldr	r2, [pc, #128]	@ (801e910 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801e88e:	6812      	ldr	r2, [r2, #0]
 801e890:	2114      	movs	r1, #20
 801e892:	fb01 2303 	mla	r3, r1, r3, r2
 801e896:	8a1a      	ldrh	r2, [r3, #16]
 801e898:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801e89c:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801e8a0:	8a5b      	ldrh	r3, [r3, #18]
 801e8a2:	8004      	strh	r4, [r0, #0]
 801e8a4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801e8a8:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801e8ac:	8041      	strh	r1, [r0, #2]
 801e8ae:	8082      	strh	r2, [r0, #4]
 801e8b0:	80c3      	strh	r3, [r0, #6]
 801e8b2:	e024      	b.n	801e8fe <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 801e8b4:	4917      	ldr	r1, [pc, #92]	@ (801e914 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801e8b6:	8809      	ldrh	r1, [r1, #0]
 801e8b8:	4411      	add	r1, r2
 801e8ba:	428b      	cmp	r3, r1
 801e8bc:	da10      	bge.n	801e8e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 801e8be:	1a9b      	subs	r3, r3, r2
 801e8c0:	220e      	movs	r2, #14
 801e8c2:	4353      	muls	r3, r2
 801e8c4:	4a14      	ldr	r2, [pc, #80]	@ (801e918 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 801e8c6:	6811      	ldr	r1, [r2, #0]
 801e8c8:	18ca      	adds	r2, r1, r3
 801e8ca:	5ecd      	ldrsh	r5, [r1, r3]
 801e8cc:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 801e8d0:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 801e8d4:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 801e8d8:	8005      	strh	r5, [r0, #0]
 801e8da:	8044      	strh	r4, [r0, #2]
 801e8dc:	8081      	strh	r1, [r0, #4]
 801e8de:	e7e7      	b.n	801e8b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801e8e0:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801e8e4:	4293      	cmp	r3, r2
 801e8e6:	d10b      	bne.n	801e900 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 801e8e8:	4b0c      	ldr	r3, [pc, #48]	@ (801e91c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 801e8ea:	f9b3 1000 	ldrsh.w	r1, [r3]
 801e8ee:	4b0c      	ldr	r3, [pc, #48]	@ (801e920 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 801e8f0:	8081      	strh	r1, [r0, #4]
 801e8f2:	f9b3 2000 	ldrsh.w	r2, [r3]
 801e8f6:	80c2      	strh	r2, [r0, #6]
 801e8f8:	2300      	movs	r3, #0
 801e8fa:	8003      	strh	r3, [r0, #0]
 801e8fc:	8043      	strh	r3, [r0, #2]
 801e8fe:	bd30      	pop	{r4, r5, pc}
 801e900:	2300      	movs	r3, #0
 801e902:	8003      	strh	r3, [r0, #0]
 801e904:	8043      	strh	r3, [r0, #2]
 801e906:	8083      	strh	r3, [r0, #4]
 801e908:	e7d2      	b.n	801e8b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801e90a:	bf00      	nop
 801e90c:	2000e494 	.word	0x2000e494
 801e910:	2000e49c 	.word	0x2000e49c
 801e914:	2000e498 	.word	0x2000e498
 801e918:	2000e47c 	.word	0x2000e47c
 801e91c:	2000e400 	.word	0x2000e400
 801e920:	2000e402 	.word	0x2000e402

0801e924 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801e924:	4a17      	ldr	r2, [pc, #92]	@ (801e984 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801e926:	8803      	ldrh	r3, [r0, #0]
 801e928:	8812      	ldrh	r2, [r2, #0]
 801e92a:	4293      	cmp	r3, r2
 801e92c:	d213      	bcs.n	801e956 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801e92e:	4a16      	ldr	r2, [pc, #88]	@ (801e988 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801e930:	6812      	ldr	r2, [r2, #0]
 801e932:	2114      	movs	r1, #20
 801e934:	fb01 2303 	mla	r3, r1, r3, r2
 801e938:	8a1a      	ldrh	r2, [r3, #16]
 801e93a:	8919      	ldrh	r1, [r3, #8]
 801e93c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801e940:	428a      	cmp	r2, r1
 801e942:	db1d      	blt.n	801e980 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801e944:	8a58      	ldrh	r0, [r3, #18]
 801e946:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801e94a:	895b      	ldrh	r3, [r3, #10]
 801e94c:	4298      	cmp	r0, r3
 801e94e:	bfac      	ite	ge
 801e950:	2000      	movge	r0, #0
 801e952:	2001      	movlt	r0, #1
 801e954:	4770      	bx	lr
 801e956:	490d      	ldr	r1, [pc, #52]	@ (801e98c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801e958:	8809      	ldrh	r1, [r1, #0]
 801e95a:	4411      	add	r1, r2
 801e95c:	428b      	cmp	r3, r1
 801e95e:	da0d      	bge.n	801e97c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801e960:	1a9b      	subs	r3, r3, r2
 801e962:	4a0b      	ldr	r2, [pc, #44]	@ (801e990 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801e964:	6812      	ldr	r2, [r2, #0]
 801e966:	210e      	movs	r1, #14
 801e968:	fb01 2303 	mla	r3, r1, r3, r2
 801e96c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801e970:	891a      	ldrh	r2, [r3, #8]
 801e972:	4291      	cmp	r1, r2
 801e974:	db04      	blt.n	801e980 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801e976:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801e97a:	e7e6      	b.n	801e94a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801e97c:	2000      	movs	r0, #0
 801e97e:	4770      	bx	lr
 801e980:	2001      	movs	r0, #1
 801e982:	4770      	bx	lr
 801e984:	2000e494 	.word	0x2000e494
 801e988:	2000e49c 	.word	0x2000e49c
 801e98c:	2000e498 	.word	0x2000e498
 801e990:	2000e47c 	.word	0x2000e47c

0801e994 <_ZNK8touchgfx6Bitmap7getDataEv>:
 801e994:	4a12      	ldr	r2, [pc, #72]	@ (801e9e0 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801e996:	8803      	ldrh	r3, [r0, #0]
 801e998:	8811      	ldrh	r1, [r2, #0]
 801e99a:	428b      	cmp	r3, r1
 801e99c:	d20b      	bcs.n	801e9b6 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801e99e:	4a11      	ldr	r2, [pc, #68]	@ (801e9e4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801e9a0:	6812      	ldr	r2, [r2, #0]
 801e9a2:	b112      	cbz	r2, 801e9aa <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801e9a4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801e9a8:	b9c0      	cbnz	r0, 801e9dc <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801e9aa:	4a0f      	ldr	r2, [pc, #60]	@ (801e9e8 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801e9ac:	6811      	ldr	r1, [r2, #0]
 801e9ae:	2214      	movs	r2, #20
 801e9b0:	4353      	muls	r3, r2
 801e9b2:	58c8      	ldr	r0, [r1, r3]
 801e9b4:	4770      	bx	lr
 801e9b6:	4a0d      	ldr	r2, [pc, #52]	@ (801e9ec <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801e9b8:	8812      	ldrh	r2, [r2, #0]
 801e9ba:	440a      	add	r2, r1
 801e9bc:	4293      	cmp	r3, r2
 801e9be:	da04      	bge.n	801e9ca <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801e9c0:	4a08      	ldr	r2, [pc, #32]	@ (801e9e4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801e9c2:	6812      	ldr	r2, [r2, #0]
 801e9c4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801e9c8:	4770      	bx	lr
 801e9ca:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801e9ce:	4293      	cmp	r3, r2
 801e9d0:	d103      	bne.n	801e9da <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801e9d2:	4b07      	ldr	r3, [pc, #28]	@ (801e9f0 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801e9d4:	681b      	ldr	r3, [r3, #0]
 801e9d6:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 801e9d8:	4770      	bx	lr
 801e9da:	2000      	movs	r0, #0
 801e9dc:	4770      	bx	lr
 801e9de:	bf00      	nop
 801e9e0:	2000e494 	.word	0x2000e494
 801e9e4:	2000e478 	.word	0x2000e478
 801e9e8:	2000e49c 	.word	0x2000e49c
 801e9ec:	2000e498 	.word	0x2000e498
 801e9f0:	2000e40c 	.word	0x2000e40c

0801e9f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801e9f4:	4b24      	ldr	r3, [pc, #144]	@ (801ea88 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801e9f6:	8802      	ldrh	r2, [r0, #0]
 801e9f8:	8818      	ldrh	r0, [r3, #0]
 801e9fa:	4282      	cmp	r2, r0
 801e9fc:	d221      	bcs.n	801ea42 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801e9fe:	4b23      	ldr	r3, [pc, #140]	@ (801ea8c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801ea00:	6819      	ldr	r1, [r3, #0]
 801ea02:	2314      	movs	r3, #20
 801ea04:	fb03 1302 	mla	r3, r3, r2, r1
 801ea08:	6858      	ldr	r0, [r3, #4]
 801ea0a:	2800      	cmp	r0, #0
 801ea0c:	d03a      	beq.n	801ea84 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801ea0e:	4920      	ldr	r1, [pc, #128]	@ (801ea90 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801ea10:	6809      	ldr	r1, [r1, #0]
 801ea12:	2900      	cmp	r1, #0
 801ea14:	d036      	beq.n	801ea84 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801ea16:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801ea1a:	2900      	cmp	r1, #0
 801ea1c:	d032      	beq.n	801ea84 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801ea1e:	891a      	ldrh	r2, [r3, #8]
 801ea20:	8958      	ldrh	r0, [r3, #10]
 801ea22:	4350      	muls	r0, r2
 801ea24:	7c5a      	ldrb	r2, [r3, #17]
 801ea26:	7cdb      	ldrb	r3, [r3, #19]
 801ea28:	0952      	lsrs	r2, r2, #5
 801ea2a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801ea2e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801ea32:	2b0b      	cmp	r3, #11
 801ea34:	bf18      	it	ne
 801ea36:	0040      	lslne	r0, r0, #1
 801ea38:	3003      	adds	r0, #3
 801ea3a:	f020 0003 	bic.w	r0, r0, #3
 801ea3e:	4408      	add	r0, r1
 801ea40:	4770      	bx	lr
 801ea42:	4b14      	ldr	r3, [pc, #80]	@ (801ea94 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801ea44:	881b      	ldrh	r3, [r3, #0]
 801ea46:	4403      	add	r3, r0
 801ea48:	429a      	cmp	r2, r3
 801ea4a:	da1a      	bge.n	801ea82 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801ea4c:	4b12      	ldr	r3, [pc, #72]	@ (801ea98 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801ea4e:	681b      	ldr	r3, [r3, #0]
 801ea50:	1a10      	subs	r0, r2, r0
 801ea52:	210e      	movs	r1, #14
 801ea54:	fb01 3000 	mla	r0, r1, r0, r3
 801ea58:	7b03      	ldrb	r3, [r0, #12]
 801ea5a:	f003 031f 	and.w	r3, r3, #31
 801ea5e:	2b0b      	cmp	r3, #11
 801ea60:	d10b      	bne.n	801ea7a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801ea62:	8903      	ldrh	r3, [r0, #8]
 801ea64:	8940      	ldrh	r0, [r0, #10]
 801ea66:	4358      	muls	r0, r3
 801ea68:	4b09      	ldr	r3, [pc, #36]	@ (801ea90 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801ea6a:	6819      	ldr	r1, [r3, #0]
 801ea6c:	3003      	adds	r0, #3
 801ea6e:	f020 0303 	bic.w	r3, r0, #3
 801ea72:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801ea76:	4418      	add	r0, r3
 801ea78:	4770      	bx	lr
 801ea7a:	2b0d      	cmp	r3, #13
 801ea7c:	d101      	bne.n	801ea82 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801ea7e:	300d      	adds	r0, #13
 801ea80:	4770      	bx	lr
 801ea82:	2000      	movs	r0, #0
 801ea84:	4770      	bx	lr
 801ea86:	bf00      	nop
 801ea88:	2000e494 	.word	0x2000e494
 801ea8c:	2000e49c 	.word	0x2000e49c
 801ea90:	2000e478 	.word	0x2000e478
 801ea94:	2000e498 	.word	0x2000e498
 801ea98:	2000e47c 	.word	0x2000e47c

0801ea9c <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801ea9c:	b510      	push	{r4, lr}
 801ea9e:	4b1f      	ldr	r3, [pc, #124]	@ (801eb1c <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 801eaa0:	8802      	ldrh	r2, [r0, #0]
 801eaa2:	881b      	ldrh	r3, [r3, #0]
 801eaa4:	429a      	cmp	r2, r3
 801eaa6:	d21a      	bcs.n	801eade <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 801eaa8:	4b1d      	ldr	r3, [pc, #116]	@ (801eb20 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 801eaaa:	681b      	ldr	r3, [r3, #0]
 801eaac:	2114      	movs	r1, #20
 801eaae:	fb01 3102 	mla	r1, r1, r2, r3
 801eab2:	7c4b      	ldrb	r3, [r1, #17]
 801eab4:	0958      	lsrs	r0, r3, #5
 801eab6:	7ccb      	ldrb	r3, [r1, #19]
 801eab8:	491a      	ldr	r1, [pc, #104]	@ (801eb24 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 801eaba:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801eabe:	6809      	ldr	r1, [r1, #0]
 801eac0:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 801eac4:	b2d8      	uxtb	r0, r3
 801eac6:	b149      	cbz	r1, 801eadc <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801eac8:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 801eacc:	b132      	cbz	r2, 801eadc <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801eace:	2b0e      	cmp	r3, #14
 801ead0:	d021      	beq.n	801eb16 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 801ead2:	280f      	cmp	r0, #15
 801ead4:	d01d      	beq.n	801eb12 <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 801ead6:	2810      	cmp	r0, #16
 801ead8:	bf08      	it	eq
 801eada:	2002      	moveq	r0, #2
 801eadc:	bd10      	pop	{r4, pc}
 801eade:	4912      	ldr	r1, [pc, #72]	@ (801eb28 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 801eae0:	8809      	ldrh	r1, [r1, #0]
 801eae2:	4419      	add	r1, r3
 801eae4:	428a      	cmp	r2, r1
 801eae6:	da09      	bge.n	801eafc <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 801eae8:	1ad3      	subs	r3, r2, r3
 801eaea:	4a10      	ldr	r2, [pc, #64]	@ (801eb2c <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 801eaec:	6812      	ldr	r2, [r2, #0]
 801eaee:	210e      	movs	r1, #14
 801eaf0:	fb01 2303 	mla	r3, r1, r3, r2
 801eaf4:	7b18      	ldrb	r0, [r3, #12]
 801eaf6:	f000 001f 	and.w	r0, r0, #31
 801eafa:	e7ef      	b.n	801eadc <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801eafc:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 801eb00:	429a      	cmp	r2, r3
 801eb02:	d108      	bne.n	801eb16 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 801eb04:	f7f4 fb90 	bl	8013228 <_ZN8touchgfx3HAL3lcdEv>
 801eb08:	6803      	ldr	r3, [r0, #0]
 801eb0a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801eb0e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801eb10:	4718      	bx	r3
 801eb12:	2001      	movs	r0, #1
 801eb14:	e7e2      	b.n	801eadc <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801eb16:	2000      	movs	r0, #0
 801eb18:	e7e0      	b.n	801eadc <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801eb1a:	bf00      	nop
 801eb1c:	2000e494 	.word	0x2000e494
 801eb20:	2000e49c 	.word	0x2000e49c
 801eb24:	2000e478 	.word	0x2000e478
 801eb28:	2000e498 	.word	0x2000e498
 801eb2c:	2000e47c 	.word	0x2000e47c

0801eb30 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801eb30:	2010      	movs	r0, #16
 801eb32:	4770      	bx	lr

0801eb34 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801eb34:	2000      	movs	r0, #0
 801eb36:	4770      	bx	lr

0801eb38 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801eb38:	4b02      	ldr	r3, [pc, #8]	@ (801eb44 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801eb3a:	8818      	ldrh	r0, [r3, #0]
 801eb3c:	0040      	lsls	r0, r0, #1
 801eb3e:	b280      	uxth	r0, r0
 801eb40:	4770      	bx	lr
 801eb42:	bf00      	nop
 801eb44:	2000e406 	.word	0x2000e406

0801eb48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801eb48:	2bff      	cmp	r3, #255	@ 0xff
 801eb4a:	d05e      	beq.n	801ec0a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 801eb4c:	2a0b      	cmp	r2, #11
 801eb4e:	d058      	beq.n	801ec02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 801eb50:	d80e      	bhi.n	801eb70 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801eb52:	2a03      	cmp	r2, #3
 801eb54:	d04d      	beq.n	801ebf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 801eb56:	d804      	bhi.n	801eb62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801eb58:	2a01      	cmp	r2, #1
 801eb5a:	d04c      	beq.n	801ebf6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 801eb5c:	d94d      	bls.n	801ebfa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 801eb5e:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 801eb60:	e031      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801eb62:	2a09      	cmp	r2, #9
 801eb64:	d04d      	beq.n	801ec02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 801eb66:	d84a      	bhi.n	801ebfe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 801eb68:	2a08      	cmp	r2, #8
 801eb6a:	d048      	beq.n	801ebfe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 801eb6c:	2300      	movs	r3, #0
 801eb6e:	e02a      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801eb70:	2a2f      	cmp	r2, #47	@ 0x2f
 801eb72:	d02c      	beq.n	801ebce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 801eb74:	d811      	bhi.n	801eb9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 801eb76:	2a2d      	cmp	r2, #45	@ 0x2d
 801eb78:	d018      	beq.n	801ebac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 801eb7a:	d831      	bhi.n	801ebe0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 801eb7c:	2a2c      	cmp	r2, #44	@ 0x2c
 801eb7e:	d1f5      	bne.n	801eb6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801eb80:	684a      	ldr	r2, [r1, #4]
 801eb82:	7813      	ldrb	r3, [r2, #0]
 801eb84:	7852      	ldrb	r2, [r2, #1]
 801eb86:	2a00      	cmp	r2, #0
 801eb88:	d1f0      	bne.n	801eb6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801eb8a:	2b01      	cmp	r3, #1
 801eb8c:	d01d      	beq.n	801ebca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801eb8e:	2b00      	cmp	r3, #0
 801eb90:	d02d      	beq.n	801ebee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801eb92:	2b02      	cmp	r3, #2
 801eb94:	d1ea      	bne.n	801eb6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801eb96:	68c3      	ldr	r3, [r0, #12]
 801eb98:	e015      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801eb9a:	2a31      	cmp	r2, #49	@ 0x31
 801eb9c:	d004      	beq.n	801eba8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 801eb9e:	d332      	bcc.n	801ec06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 801eba0:	2a32      	cmp	r2, #50	@ 0x32
 801eba2:	d030      	beq.n	801ec06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 801eba4:	2a33      	cmp	r2, #51	@ 0x33
 801eba6:	d1e1      	bne.n	801eb6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801eba8:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 801ebaa:	e00c      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ebac:	684a      	ldr	r2, [r1, #4]
 801ebae:	7813      	ldrb	r3, [r2, #0]
 801ebb0:	7852      	ldrb	r2, [r2, #1]
 801ebb2:	2a00      	cmp	r2, #0
 801ebb4:	d1da      	bne.n	801eb6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ebb6:	2b01      	cmp	r3, #1
 801ebb8:	d004      	beq.n	801ebc4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 801ebba:	d30f      	bcc.n	801ebdc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 801ebbc:	2b02      	cmp	r3, #2
 801ebbe:	d1d5      	bne.n	801eb6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ebc0:	6943      	ldr	r3, [r0, #20]
 801ebc2:	e000      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ebc4:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 801ebc6:	4618      	mov	r0, r3
 801ebc8:	4770      	bx	lr
 801ebca:	69c3      	ldr	r3, [r0, #28]
 801ebcc:	e7fb      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ebce:	684b      	ldr	r3, [r1, #4]
 801ebd0:	781a      	ldrb	r2, [r3, #0]
 801ebd2:	785b      	ldrb	r3, [r3, #1]
 801ebd4:	2b00      	cmp	r3, #0
 801ebd6:	d1c9      	bne.n	801eb6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ebd8:	2a00      	cmp	r2, #0
 801ebda:	d1f4      	bne.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ebdc:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801ebde:	e7f2      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ebe0:	684b      	ldr	r3, [r1, #4]
 801ebe2:	781a      	ldrb	r2, [r3, #0]
 801ebe4:	785b      	ldrb	r3, [r3, #1]
 801ebe6:	2b00      	cmp	r3, #0
 801ebe8:	d1c0      	bne.n	801eb6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ebea:	2a00      	cmp	r2, #0
 801ebec:	d1eb      	bne.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ebee:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 801ebf0:	e7e9      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ebf2:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 801ebf4:	e7e7      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ebf6:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 801ebf8:	e7e5      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ebfa:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 801ebfc:	e7e3      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ebfe:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 801ec00:	e7e1      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ec02:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 801ec04:	e7df      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ec06:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 801ec08:	e7dd      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ec0a:	2a0b      	cmp	r2, #11
 801ec0c:	d059      	beq.n	801ecc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 801ec0e:	d80e      	bhi.n	801ec2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 801ec10:	2a03      	cmp	r2, #3
 801ec12:	d050      	beq.n	801ecb6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 801ec14:	d804      	bhi.n	801ec20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 801ec16:	2a01      	cmp	r2, #1
 801ec18:	d04f      	beq.n	801ecba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 801ec1a:	d950      	bls.n	801ecbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 801ec1c:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 801ec1e:	e7d2      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ec20:	2a09      	cmp	r2, #9
 801ec22:	d04e      	beq.n	801ecc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 801ec24:	d801      	bhi.n	801ec2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 801ec26:	2a08      	cmp	r2, #8
 801ec28:	d1a0      	bne.n	801eb6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ec2a:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 801ec2c:	e7cb      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ec2e:	2a2f      	cmp	r2, #47	@ 0x2f
 801ec30:	d02d      	beq.n	801ec8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 801ec32:	d811      	bhi.n	801ec58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801ec34:	2a2d      	cmp	r2, #45	@ 0x2d
 801ec36:	d018      	beq.n	801ec6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 801ec38:	d833      	bhi.n	801eca2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 801ec3a:	2a2c      	cmp	r2, #44	@ 0x2c
 801ec3c:	d196      	bne.n	801eb6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ec3e:	684a      	ldr	r2, [r1, #4]
 801ec40:	7813      	ldrb	r3, [r2, #0]
 801ec42:	7852      	ldrb	r2, [r2, #1]
 801ec44:	2a00      	cmp	r2, #0
 801ec46:	d191      	bne.n	801eb6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ec48:	2b01      	cmp	r3, #1
 801ec4a:	d01e      	beq.n	801ec8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801ec4c:	2b00      	cmp	r3, #0
 801ec4e:	d030      	beq.n	801ecb2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 801ec50:	2b02      	cmp	r3, #2
 801ec52:	d18b      	bne.n	801eb6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ec54:	6903      	ldr	r3, [r0, #16]
 801ec56:	e7b6      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ec58:	2a31      	cmp	r2, #49	@ 0x31
 801ec5a:	d004      	beq.n	801ec66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 801ec5c:	d333      	bcc.n	801ecc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 801ec5e:	2a32      	cmp	r2, #50	@ 0x32
 801ec60:	d031      	beq.n	801ecc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 801ec62:	2a33      	cmp	r2, #51	@ 0x33
 801ec64:	d182      	bne.n	801eb6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ec66:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 801ec68:	e7ad      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ec6a:	684a      	ldr	r2, [r1, #4]
 801ec6c:	7813      	ldrb	r3, [r2, #0]
 801ec6e:	7852      	ldrb	r2, [r2, #1]
 801ec70:	2a00      	cmp	r2, #0
 801ec72:	f47f af7b 	bne.w	801eb6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ec76:	2b01      	cmp	r3, #1
 801ec78:	d005      	beq.n	801ec86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801ec7a:	d310      	bcc.n	801ec9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 801ec7c:	2b02      	cmp	r3, #2
 801ec7e:	f47f af75 	bne.w	801eb6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ec82:	6983      	ldr	r3, [r0, #24]
 801ec84:	e79f      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ec86:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 801ec88:	e79d      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ec8a:	6a03      	ldr	r3, [r0, #32]
 801ec8c:	e79b      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ec8e:	684b      	ldr	r3, [r1, #4]
 801ec90:	781a      	ldrb	r2, [r3, #0]
 801ec92:	785b      	ldrb	r3, [r3, #1]
 801ec94:	2b00      	cmp	r3, #0
 801ec96:	f47f af69 	bne.w	801eb6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ec9a:	2a00      	cmp	r2, #0
 801ec9c:	d193      	bne.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ec9e:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 801eca0:	e791      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801eca2:	684b      	ldr	r3, [r1, #4]
 801eca4:	781a      	ldrb	r2, [r3, #0]
 801eca6:	785b      	ldrb	r3, [r3, #1]
 801eca8:	2b00      	cmp	r3, #0
 801ecaa:	f47f af5f 	bne.w	801eb6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ecae:	2a00      	cmp	r2, #0
 801ecb0:	d189      	bne.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ecb2:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 801ecb4:	e787      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ecb6:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 801ecb8:	e785      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ecba:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 801ecbc:	e783      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ecbe:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 801ecc0:	e781      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ecc2:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 801ecc4:	e77f      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ecc6:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 801ecc8:	e77d      	b.n	801ebc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

0801ecca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ecca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ecce:	b087      	sub	sp, #28
 801ecd0:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801ecd2:	9205      	str	r2, [sp, #20]
 801ecd4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801ecd8:	9202      	str	r2, [sp, #8]
 801ecda:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801ecde:	9101      	str	r1, [sp, #4]
 801ece0:	6841      	ldr	r1, [r0, #4]
 801ece2:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 801ece6:	fb01 2404 	mla	r4, r1, r4, r2
 801ecea:	6802      	ldr	r2, [r0, #0]
 801ecec:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ecf0:	f8de 2000 	ldr.w	r2, [lr]
 801ecf4:	9203      	str	r2, [sp, #12]
 801ecf6:	f8de 2004 	ldr.w	r2, [lr, #4]
 801ecfa:	3204      	adds	r2, #4
 801ecfc:	9204      	str	r2, [sp, #16]
 801ecfe:	9a02      	ldr	r2, [sp, #8]
 801ed00:	43d6      	mvns	r6, r2
 801ed02:	b2f6      	uxtb	r6, r6
 801ed04:	9a01      	ldr	r2, [sp, #4]
 801ed06:	2a00      	cmp	r2, #0
 801ed08:	dc03      	bgt.n	801ed12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ed0a:	9a05      	ldr	r2, [sp, #20]
 801ed0c:	2a00      	cmp	r2, #0
 801ed0e:	f340 8129 	ble.w	801ef64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801ed12:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801ed14:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801ed18:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801ed1c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801ed20:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801ed22:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801ed26:	2b00      	cmp	r3, #0
 801ed28:	dd0e      	ble.n	801ed48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ed2a:	1408      	asrs	r0, r1, #16
 801ed2c:	d405      	bmi.n	801ed3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ed2e:	4560      	cmp	r0, ip
 801ed30:	da03      	bge.n	801ed3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ed32:	1410      	asrs	r0, r2, #16
 801ed34:	d401      	bmi.n	801ed3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ed36:	42b8      	cmp	r0, r7
 801ed38:	db07      	blt.n	801ed4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ed3a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801ed3c:	4401      	add	r1, r0
 801ed3e:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801ed40:	3b01      	subs	r3, #1
 801ed42:	4402      	add	r2, r0
 801ed44:	3402      	adds	r4, #2
 801ed46:	e7ee      	b.n	801ed26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801ed48:	d071      	beq.n	801ee2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ed4a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801ed4c:	1e58      	subs	r0, r3, #1
 801ed4e:	fb05 1500 	mla	r5, r5, r0, r1
 801ed52:	142d      	asrs	r5, r5, #16
 801ed54:	d45f      	bmi.n	801ee16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ed56:	4565      	cmp	r5, ip
 801ed58:	da5d      	bge.n	801ee16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ed5a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801ed5c:	fb05 2000 	mla	r0, r5, r0, r2
 801ed60:	1400      	asrs	r0, r0, #16
 801ed62:	d458      	bmi.n	801ee16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ed64:	42b8      	cmp	r0, r7
 801ed66:	da56      	bge.n	801ee16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ed68:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801ed6c:	4699      	mov	r9, r3
 801ed6e:	46a2      	mov	sl, r4
 801ed70:	f1b9 0f00 	cmp.w	r9, #0
 801ed74:	dd57      	ble.n	801ee26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801ed76:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801ed7a:	9803      	ldr	r0, [sp, #12]
 801ed7c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801ed80:	140d      	asrs	r5, r1, #16
 801ed82:	fb07 000c 	mla	r0, r7, ip, r0
 801ed86:	f109 39ff 	add.w	r9, r9, #4294967295
 801ed8a:	5d40      	ldrb	r0, [r0, r5]
 801ed8c:	9d04      	ldr	r5, [sp, #16]
 801ed8e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801ed92:	f8ba 5000 	ldrh.w	r5, [sl]
 801ed96:	122f      	asrs	r7, r5, #8
 801ed98:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801ed9c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801eda0:	fb17 f706 	smulbb	r7, r7, r6
 801eda4:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801eda8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801edac:	00ed      	lsls	r5, r5, #3
 801edae:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801edb2:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 801edb6:	10c7      	asrs	r7, r0, #3
 801edb8:	b2ed      	uxtb	r5, r5
 801edba:	00c0      	lsls	r0, r0, #3
 801edbc:	fb18 f806 	smulbb	r8, r8, r6
 801edc0:	fb15 f506 	smulbb	r5, r5, r6
 801edc4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801edc8:	b2c0      	uxtb	r0, r0
 801edca:	fa1f fc8c 	uxth.w	ip, ip
 801edce:	fb07 870b 	mla	r7, r7, fp, r8
 801edd2:	fb00 500b 	mla	r0, r0, fp, r5
 801edd6:	b280      	uxth	r0, r0
 801edd8:	b2bf      	uxth	r7, r7
 801edda:	f10c 0501 	add.w	r5, ip, #1
 801edde:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ede2:	f107 0801 	add.w	r8, r7, #1
 801ede6:	1c45      	adds	r5, r0, #1
 801ede8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801edec:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801edf0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801edf2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801edf6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801edfa:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801edfe:	ea45 0c0c 	orr.w	ip, r5, ip
 801ee02:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801ee06:	4401      	add	r1, r0
 801ee08:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801ee0a:	ea4c 0c08 	orr.w	ip, ip, r8
 801ee0e:	f82a cb02 	strh.w	ip, [sl], #2
 801ee12:	4402      	add	r2, r0
 801ee14:	e7ac      	b.n	801ed70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801ee16:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801ee1a:	f04f 0800 	mov.w	r8, #0
 801ee1e:	eb03 0008 	add.w	r0, r3, r8
 801ee22:	2800      	cmp	r0, #0
 801ee24:	dc41      	bgt.n	801eeaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801ee26:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ee2a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ee2e:	9b01      	ldr	r3, [sp, #4]
 801ee30:	2b00      	cmp	r3, #0
 801ee32:	f340 8097 	ble.w	801ef64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801ee36:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ee3a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ee3e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ee42:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ee44:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ee48:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ee4c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ee50:	eef0 6a62 	vmov.f32	s13, s5
 801ee54:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ee58:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ee5c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ee60:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 801ee64:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ee68:	eef0 6a43 	vmov.f32	s13, s6
 801ee6c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ee70:	ee12 2a90 	vmov	r2, s5
 801ee74:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ee78:	fb92 f3f3 	sdiv	r3, r2, r3
 801ee7c:	ee13 2a10 	vmov	r2, s6
 801ee80:	9313      	str	r3, [sp, #76]	@ 0x4c
 801ee82:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ee84:	fb92 f3f3 	sdiv	r3, r2, r3
 801ee88:	9314      	str	r3, [sp, #80]	@ 0x50
 801ee8a:	9b01      	ldr	r3, [sp, #4]
 801ee8c:	9a05      	ldr	r2, [sp, #20]
 801ee8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ee92:	3b01      	subs	r3, #1
 801ee94:	9301      	str	r3, [sp, #4]
 801ee96:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 801ee9a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ee9c:	eeb0 3a67 	vmov.f32	s6, s15
 801eea0:	bf08      	it	eq
 801eea2:	4613      	moveq	r3, r2
 801eea4:	eef0 2a47 	vmov.f32	s5, s14
 801eea8:	e72c      	b.n	801ed04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801eeaa:	140f      	asrs	r7, r1, #16
 801eeac:	d453      	bmi.n	801ef56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801eeae:	f8de 5008 	ldr.w	r5, [lr, #8]
 801eeb2:	42bd      	cmp	r5, r7
 801eeb4:	dd4f      	ble.n	801ef56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801eeb6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801eeba:	d44c      	bmi.n	801ef56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801eebc:	f8de 000c 	ldr.w	r0, [lr, #12]
 801eec0:	4560      	cmp	r0, ip
 801eec2:	dd48      	ble.n	801ef56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801eec4:	9803      	ldr	r0, [sp, #12]
 801eec6:	b22d      	sxth	r5, r5
 801eec8:	fb0c 0505 	mla	r5, ip, r5, r0
 801eecc:	5de8      	ldrb	r0, [r5, r7]
 801eece:	9d04      	ldr	r5, [sp, #16]
 801eed0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801eed4:	f06f 0501 	mvn.w	r5, #1
 801eed8:	fb05 fb08 	mul.w	fp, r5, r8
 801eedc:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801eee0:	f834 500b 	ldrh.w	r5, [r4, fp]
 801eee4:	122f      	asrs	r7, r5, #8
 801eee6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801eeea:	fb17 f706 	smulbb	r7, r7, r6
 801eeee:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801eef2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801eef6:	00ed      	lsls	r5, r5, #3
 801eef8:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801eefc:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801ef00:	10c7      	asrs	r7, r0, #3
 801ef02:	b2ed      	uxtb	r5, r5
 801ef04:	00c0      	lsls	r0, r0, #3
 801ef06:	fb19 f906 	smulbb	r9, r9, r6
 801ef0a:	fb15 f506 	smulbb	r5, r5, r6
 801ef0e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801ef12:	b2c0      	uxtb	r0, r0
 801ef14:	fa1f fc8c 	uxth.w	ip, ip
 801ef18:	fb07 970a 	mla	r7, r7, sl, r9
 801ef1c:	fb00 500a 	mla	r0, r0, sl, r5
 801ef20:	b2bf      	uxth	r7, r7
 801ef22:	b280      	uxth	r0, r0
 801ef24:	f10c 0501 	add.w	r5, ip, #1
 801ef28:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ef2c:	f107 0901 	add.w	r9, r7, #1
 801ef30:	1c45      	adds	r5, r0, #1
 801ef32:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801ef36:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801ef3a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801ef3e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ef42:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ef46:	ea45 0c0c 	orr.w	ip, r5, ip
 801ef4a:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801ef4e:	ea4c 0c09 	orr.w	ip, ip, r9
 801ef52:	f824 c00b 	strh.w	ip, [r4, fp]
 801ef56:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801ef58:	4401      	add	r1, r0
 801ef5a:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801ef5c:	f108 38ff 	add.w	r8, r8, #4294967295
 801ef60:	4402      	add	r2, r0
 801ef62:	e75c      	b.n	801ee1e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801ef64:	b007      	add	sp, #28
 801ef66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ef6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ef6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ef6e:	b085      	sub	sp, #20
 801ef70:	4693      	mov	fp, r2
 801ef72:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801ef74:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ef76:	6870      	ldr	r0, [r6, #4]
 801ef78:	9100      	str	r1, [sp, #0]
 801ef7a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801ef7e:	fb00 2404 	mla	r4, r0, r4, r2
 801ef82:	6832      	ldr	r2, [r6, #0]
 801ef84:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ef88:	682a      	ldr	r2, [r5, #0]
 801ef8a:	9201      	str	r2, [sp, #4]
 801ef8c:	686a      	ldr	r2, [r5, #4]
 801ef8e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 801ef92:	3204      	adds	r2, #4
 801ef94:	9202      	str	r2, [sp, #8]
 801ef96:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801ef9a:	9a00      	ldr	r2, [sp, #0]
 801ef9c:	2a00      	cmp	r2, #0
 801ef9e:	dc03      	bgt.n	801efa8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801efa0:	f1bb 0f00 	cmp.w	fp, #0
 801efa4:	f340 80a0 	ble.w	801f0e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801efa8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801efaa:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801efae:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801efb2:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801efb6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801efb8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801efbc:	2b00      	cmp	r3, #0
 801efbe:	dd0c      	ble.n	801efda <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801efc0:	1406      	asrs	r6, r0, #16
 801efc2:	d405      	bmi.n	801efd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801efc4:	454e      	cmp	r6, r9
 801efc6:	da03      	bge.n	801efd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801efc8:	1416      	asrs	r6, r2, #16
 801efca:	d401      	bmi.n	801efd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801efcc:	4546      	cmp	r6, r8
 801efce:	db05      	blt.n	801efdc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801efd0:	4470      	add	r0, lr
 801efd2:	4462      	add	r2, ip
 801efd4:	3b01      	subs	r3, #1
 801efd6:	3402      	adds	r4, #2
 801efd8:	e7f0      	b.n	801efbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801efda:	d00f      	beq.n	801effc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801efdc:	1e5e      	subs	r6, r3, #1
 801efde:	fb0e 0706 	mla	r7, lr, r6, r0
 801efe2:	143f      	asrs	r7, r7, #16
 801efe4:	d541      	bpl.n	801f06a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801efe6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801efea:	4698      	mov	r8, r3
 801efec:	9603      	str	r6, [sp, #12]
 801efee:	f1b8 0f00 	cmp.w	r8, #0
 801eff2:	dc59      	bgt.n	801f0a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801eff4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801eff8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801effc:	9b00      	ldr	r3, [sp, #0]
 801effe:	2b00      	cmp	r3, #0
 801f000:	dd72      	ble.n	801f0e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801f002:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f006:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f00a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801f00e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f010:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f014:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f018:	eeb0 6a62 	vmov.f32	s12, s5
 801f01c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f020:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f024:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f028:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801f02c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f030:	eeb0 6a43 	vmov.f32	s12, s6
 801f034:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f038:	ee12 2a90 	vmov	r2, s5
 801f03c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f040:	fb92 fef3 	sdiv	lr, r2, r3
 801f044:	ee13 2a10 	vmov	r2, s6
 801f048:	fb92 fcf3 	sdiv	ip, r2, r3
 801f04c:	9b00      	ldr	r3, [sp, #0]
 801f04e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f052:	3b01      	subs	r3, #1
 801f054:	9300      	str	r3, [sp, #0]
 801f056:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801f05a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f05c:	eeb0 3a67 	vmov.f32	s6, s15
 801f060:	bf08      	it	eq
 801f062:	465b      	moveq	r3, fp
 801f064:	eef0 2a47 	vmov.f32	s5, s14
 801f068:	e797      	b.n	801ef9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801f06a:	454f      	cmp	r7, r9
 801f06c:	dabb      	bge.n	801efe6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801f06e:	fb0c 2606 	mla	r6, ip, r6, r2
 801f072:	1436      	asrs	r6, r6, #16
 801f074:	d4b7      	bmi.n	801efe6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801f076:	4546      	cmp	r6, r8
 801f078:	dab5      	bge.n	801efe6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801f07a:	461e      	mov	r6, r3
 801f07c:	46a0      	mov	r8, r4
 801f07e:	2e00      	cmp	r6, #0
 801f080:	ddb8      	ble.n	801eff4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f082:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801f086:	9901      	ldr	r1, [sp, #4]
 801f088:	1417      	asrs	r7, r2, #16
 801f08a:	ea4f 4920 	mov.w	r9, r0, asr #16
 801f08e:	fb0a 1707 	mla	r7, sl, r7, r1
 801f092:	9902      	ldr	r1, [sp, #8]
 801f094:	f817 7009 	ldrb.w	r7, [r7, r9]
 801f098:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801f09c:	f828 7b02 	strh.w	r7, [r8], #2
 801f0a0:	4470      	add	r0, lr
 801f0a2:	4462      	add	r2, ip
 801f0a4:	3e01      	subs	r6, #1
 801f0a6:	e7ea      	b.n	801f07e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801f0a8:	ea5f 4920 	movs.w	r9, r0, asr #16
 801f0ac:	d417      	bmi.n	801f0de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801f0ae:	68ae      	ldr	r6, [r5, #8]
 801f0b0:	454e      	cmp	r6, r9
 801f0b2:	dd14      	ble.n	801f0de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801f0b4:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801f0b8:	d411      	bmi.n	801f0de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801f0ba:	68ef      	ldr	r7, [r5, #12]
 801f0bc:	4557      	cmp	r7, sl
 801f0be:	dd0e      	ble.n	801f0de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801f0c0:	9f01      	ldr	r7, [sp, #4]
 801f0c2:	b236      	sxth	r6, r6
 801f0c4:	fb0a 7606 	mla	r6, sl, r6, r7
 801f0c8:	9f02      	ldr	r7, [sp, #8]
 801f0ca:	f816 6009 	ldrb.w	r6, [r6, r9]
 801f0ce:	f06f 0101 	mvn.w	r1, #1
 801f0d2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801f0d6:	fb01 f608 	mul.w	r6, r1, r8
 801f0da:	9903      	ldr	r1, [sp, #12]
 801f0dc:	538f      	strh	r7, [r1, r6]
 801f0de:	4470      	add	r0, lr
 801f0e0:	4462      	add	r2, ip
 801f0e2:	f108 38ff 	add.w	r8, r8, #4294967295
 801f0e6:	e782      	b.n	801efee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801f0e8:	b005      	add	sp, #20
 801f0ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f0ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f0ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f0f2:	b087      	sub	sp, #28
 801f0f4:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801f0f6:	9205      	str	r2, [sp, #20]
 801f0f8:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801f0fc:	9203      	str	r2, [sp, #12]
 801f0fe:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 801f102:	9102      	str	r1, [sp, #8]
 801f104:	6861      	ldr	r1, [r4, #4]
 801f106:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 801f10a:	fb01 2000 	mla	r0, r1, r0, r2
 801f10e:	6822      	ldr	r2, [r4, #0]
 801f110:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801f114:	9200      	str	r2, [sp, #0]
 801f116:	f8dc 2000 	ldr.w	r2, [ip]
 801f11a:	9204      	str	r2, [sp, #16]
 801f11c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801f120:	3204      	adds	r2, #4
 801f122:	9201      	str	r2, [sp, #4]
 801f124:	9a03      	ldr	r2, [sp, #12]
 801f126:	43d5      	mvns	r5, r2
 801f128:	b2ed      	uxtb	r5, r5
 801f12a:	9a02      	ldr	r2, [sp, #8]
 801f12c:	2a00      	cmp	r2, #0
 801f12e:	dc03      	bgt.n	801f138 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801f130:	9a05      	ldr	r2, [sp, #20]
 801f132:	2a00      	cmp	r2, #0
 801f134:	f340 812c 	ble.w	801f390 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801f138:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801f13a:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801f13e:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801f142:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801f146:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801f148:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801f14c:	2b00      	cmp	r3, #0
 801f14e:	dd10      	ble.n	801f172 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801f150:	140c      	asrs	r4, r1, #16
 801f152:	d405      	bmi.n	801f160 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f154:	4574      	cmp	r4, lr
 801f156:	da03      	bge.n	801f160 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f158:	1414      	asrs	r4, r2, #16
 801f15a:	d401      	bmi.n	801f160 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f15c:	42bc      	cmp	r4, r7
 801f15e:	db09      	blt.n	801f174 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f160:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801f162:	9800      	ldr	r0, [sp, #0]
 801f164:	4421      	add	r1, r4
 801f166:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801f168:	3002      	adds	r0, #2
 801f16a:	4422      	add	r2, r4
 801f16c:	3b01      	subs	r3, #1
 801f16e:	9000      	str	r0, [sp, #0]
 801f170:	e7ec      	b.n	801f14c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801f172:	d071      	beq.n	801f258 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801f174:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801f176:	1e5c      	subs	r4, r3, #1
 801f178:	fb06 1604 	mla	r6, r6, r4, r1
 801f17c:	1436      	asrs	r6, r6, #16
 801f17e:	d45d      	bmi.n	801f23c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801f180:	4576      	cmp	r6, lr
 801f182:	da5b      	bge.n	801f23c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801f184:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 801f186:	fb06 2404 	mla	r4, r6, r4, r2
 801f18a:	1424      	asrs	r4, r4, #16
 801f18c:	d456      	bmi.n	801f23c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801f18e:	42bc      	cmp	r4, r7
 801f190:	da54      	bge.n	801f23c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801f192:	f8dd 9000 	ldr.w	r9, [sp]
 801f196:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801f19a:	4698      	mov	r8, r3
 801f19c:	f1b8 0f00 	cmp.w	r8, #0
 801f1a0:	dd54      	ble.n	801f24c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801f1a2:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801f1a6:	9804      	ldr	r0, [sp, #16]
 801f1a8:	1414      	asrs	r4, r2, #16
 801f1aa:	fb07 0404 	mla	r4, r7, r4, r0
 801f1ae:	140e      	asrs	r6, r1, #16
 801f1b0:	9801      	ldr	r0, [sp, #4]
 801f1b2:	f814 e006 	ldrb.w	lr, [r4, r6]
 801f1b6:	f8b9 4000 	ldrh.w	r4, [r9]
 801f1ba:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801f1be:	eb00 0b0e 	add.w	fp, r0, lr
 801f1c2:	1227      	asrs	r7, r4, #8
 801f1c4:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801f1c8:	f89b b001 	ldrb.w	fp, [fp, #1]
 801f1cc:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801f1d0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801f1d2:	fb16 f60a 	smulbb	r6, r6, sl
 801f1d6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801f1da:	fb07 6705 	mla	r7, r7, r5, r6
 801f1de:	10e6      	asrs	r6, r4, #3
 801f1e0:	00e4      	lsls	r4, r4, #3
 801f1e2:	b2e4      	uxtb	r4, r4
 801f1e4:	fb1b fb0a 	smulbb	fp, fp, sl
 801f1e8:	fb14 f405 	smulbb	r4, r4, r5
 801f1ec:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801f1f0:	b2bf      	uxth	r7, r7
 801f1f2:	fb06 b605 	mla	r6, r6, r5, fp
 801f1f6:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801f1fa:	b2b6      	uxth	r6, r6
 801f1fc:	fa1f fe8e 	uxth.w	lr, lr
 801f200:	1c7c      	adds	r4, r7, #1
 801f202:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801f206:	f106 0b01 	add.w	fp, r6, #1
 801f20a:	f10e 0401 	add.w	r4, lr, #1
 801f20e:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801f212:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801f216:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801f21a:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801f21e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801f222:	4327      	orrs	r7, r4
 801f224:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801f228:	4401      	add	r1, r0
 801f22a:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801f22c:	ea47 070b 	orr.w	r7, r7, fp
 801f230:	f829 7b02 	strh.w	r7, [r9], #2
 801f234:	4402      	add	r2, r0
 801f236:	f108 38ff 	add.w	r8, r8, #4294967295
 801f23a:	e7af      	b.n	801f19c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801f23c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801f240:	f04f 0e00 	mov.w	lr, #0
 801f244:	eb03 040e 	add.w	r4, r3, lr
 801f248:	2c00      	cmp	r4, #0
 801f24a:	dc43      	bgt.n	801f2d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801f24c:	9a00      	ldr	r2, [sp, #0]
 801f24e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f252:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f256:	9300      	str	r3, [sp, #0]
 801f258:	9b02      	ldr	r3, [sp, #8]
 801f25a:	2b00      	cmp	r3, #0
 801f25c:	f340 8098 	ble.w	801f390 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801f260:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f264:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f268:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f26c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f26e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f272:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f276:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f27a:	eef0 6a62 	vmov.f32	s13, s5
 801f27e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f282:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f286:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f28a:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 801f28e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f292:	eef0 6a43 	vmov.f32	s13, s6
 801f296:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f29a:	ee12 2a90 	vmov	r2, s5
 801f29e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f2a2:	fb92 f3f3 	sdiv	r3, r2, r3
 801f2a6:	ee13 2a10 	vmov	r2, s6
 801f2aa:	9313      	str	r3, [sp, #76]	@ 0x4c
 801f2ac:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f2ae:	fb92 f3f3 	sdiv	r3, r2, r3
 801f2b2:	9314      	str	r3, [sp, #80]	@ 0x50
 801f2b4:	9b02      	ldr	r3, [sp, #8]
 801f2b6:	9a05      	ldr	r2, [sp, #20]
 801f2b8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f2bc:	3b01      	subs	r3, #1
 801f2be:	9302      	str	r3, [sp, #8]
 801f2c0:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 801f2c4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f2c6:	eeb0 3a67 	vmov.f32	s6, s15
 801f2ca:	bf08      	it	eq
 801f2cc:	4613      	moveq	r3, r2
 801f2ce:	eef0 2a47 	vmov.f32	s5, s14
 801f2d2:	e72a      	b.n	801f12a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801f2d4:	140f      	asrs	r7, r1, #16
 801f2d6:	d454      	bmi.n	801f382 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801f2d8:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801f2dc:	42be      	cmp	r6, r7
 801f2de:	dd50      	ble.n	801f382 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801f2e0:	ea5f 4822 	movs.w	r8, r2, asr #16
 801f2e4:	d44d      	bmi.n	801f382 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801f2e6:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801f2ea:	4544      	cmp	r4, r8
 801f2ec:	dd49      	ble.n	801f382 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801f2ee:	9c04      	ldr	r4, [sp, #16]
 801f2f0:	b236      	sxth	r6, r6
 801f2f2:	fb08 4606 	mla	r6, r8, r6, r4
 801f2f6:	f06f 0001 	mvn.w	r0, #1
 801f2fa:	f816 8007 	ldrb.w	r8, [r6, r7]
 801f2fe:	9c01      	ldr	r4, [sp, #4]
 801f300:	fb00 fa0e 	mul.w	sl, r0, lr
 801f304:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801f308:	9800      	ldr	r0, [sp, #0]
 801f30a:	eb04 0b08 	add.w	fp, r4, r8
 801f30e:	f830 400a 	ldrh.w	r4, [r0, sl]
 801f312:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801f316:	9801      	ldr	r0, [sp, #4]
 801f318:	f89b b001 	ldrb.w	fp, [fp, #1]
 801f31c:	f810 8008 	ldrb.w	r8, [r0, r8]
 801f320:	9800      	ldr	r0, [sp, #0]
 801f322:	1227      	asrs	r7, r4, #8
 801f324:	fb16 f609 	smulbb	r6, r6, r9
 801f328:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801f32c:	fb07 6705 	mla	r7, r7, r5, r6
 801f330:	10e6      	asrs	r6, r4, #3
 801f332:	00e4      	lsls	r4, r4, #3
 801f334:	b2e4      	uxtb	r4, r4
 801f336:	fb1b fb09 	smulbb	fp, fp, r9
 801f33a:	fb14 f405 	smulbb	r4, r4, r5
 801f33e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801f342:	b2bf      	uxth	r7, r7
 801f344:	fb06 b605 	mla	r6, r6, r5, fp
 801f348:	fb08 4809 	mla	r8, r8, r9, r4
 801f34c:	b2b6      	uxth	r6, r6
 801f34e:	fa1f f888 	uxth.w	r8, r8
 801f352:	1c7c      	adds	r4, r7, #1
 801f354:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801f358:	f106 0b01 	add.w	fp, r6, #1
 801f35c:	f108 0401 	add.w	r4, r8, #1
 801f360:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801f364:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801f368:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801f36c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801f370:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801f374:	4327      	orrs	r7, r4
 801f376:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801f37a:	ea47 070b 	orr.w	r7, r7, fp
 801f37e:	f820 700a 	strh.w	r7, [r0, sl]
 801f382:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801f384:	4401      	add	r1, r0
 801f386:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801f388:	f10e 3eff 	add.w	lr, lr, #4294967295
 801f38c:	4402      	add	r2, r0
 801f38e:	e759      	b.n	801f244 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801f390:	b007      	add	sp, #28
 801f392:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801f398 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f398:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f39c:	b085      	sub	sp, #20
 801f39e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801f3a2:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801f3a4:	9203      	str	r2, [sp, #12]
 801f3a6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801f3aa:	6870      	ldr	r0, [r6, #4]
 801f3ac:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801f3ae:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 801f3b2:	686f      	ldr	r7, [r5, #4]
 801f3b4:	9101      	str	r1, [sp, #4]
 801f3b6:	fb00 2404 	mla	r4, r0, r4, r2
 801f3ba:	6832      	ldr	r2, [r6, #0]
 801f3bc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801f3c0:	682a      	ldr	r2, [r5, #0]
 801f3c2:	9202      	str	r2, [sp, #8]
 801f3c4:	3704      	adds	r7, #4
 801f3c6:	9a01      	ldr	r2, [sp, #4]
 801f3c8:	2a00      	cmp	r2, #0
 801f3ca:	dc03      	bgt.n	801f3d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801f3cc:	9a03      	ldr	r2, [sp, #12]
 801f3ce:	2a00      	cmp	r2, #0
 801f3d0:	f340 80cc 	ble.w	801f56c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f3d4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f3d6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801f3da:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801f3de:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801f3e2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801f3e4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801f3e8:	2b00      	cmp	r3, #0
 801f3ea:	dd0d      	ble.n	801f408 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f3ec:	1406      	asrs	r6, r0, #16
 801f3ee:	d405      	bmi.n	801f3fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801f3f0:	454e      	cmp	r6, r9
 801f3f2:	da03      	bge.n	801f3fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801f3f4:	1416      	asrs	r6, r2, #16
 801f3f6:	d401      	bmi.n	801f3fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801f3f8:	4546      	cmp	r6, r8
 801f3fa:	db06      	blt.n	801f40a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f3fc:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 801f3fe:	4460      	add	r0, ip
 801f400:	4432      	add	r2, r6
 801f402:	3b01      	subs	r3, #1
 801f404:	3402      	adds	r4, #2
 801f406:	e7ef      	b.n	801f3e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801f408:	d00f      	beq.n	801f42a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f40a:	1e5e      	subs	r6, r3, #1
 801f40c:	fb0c 0e06 	mla	lr, ip, r6, r0
 801f410:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801f414:	d543      	bpl.n	801f49e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801f416:	4698      	mov	r8, r3
 801f418:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801f41c:	f1b8 0f00 	cmp.w	r8, #0
 801f420:	dc71      	bgt.n	801f506 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801f422:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f426:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801f42a:	9b01      	ldr	r3, [sp, #4]
 801f42c:	2b00      	cmp	r3, #0
 801f42e:	f340 809d 	ble.w	801f56c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f432:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f436:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f43a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801f43e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f440:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f444:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f448:	eeb0 6a62 	vmov.f32	s12, s5
 801f44c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f450:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f454:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f458:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801f45c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f460:	eeb0 6a43 	vmov.f32	s12, s6
 801f464:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f468:	ee12 2a90 	vmov	r2, s5
 801f46c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f470:	fb92 fcf3 	sdiv	ip, r2, r3
 801f474:	ee13 2a10 	vmov	r2, s6
 801f478:	fb92 f3f3 	sdiv	r3, r2, r3
 801f47c:	9312      	str	r3, [sp, #72]	@ 0x48
 801f47e:	9b01      	ldr	r3, [sp, #4]
 801f480:	9a03      	ldr	r2, [sp, #12]
 801f482:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f486:	3b01      	subs	r3, #1
 801f488:	9301      	str	r3, [sp, #4]
 801f48a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801f48e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f490:	eeb0 3a67 	vmov.f32	s6, s15
 801f494:	bf08      	it	eq
 801f496:	4613      	moveq	r3, r2
 801f498:	eef0 2a47 	vmov.f32	s5, s14
 801f49c:	e793      	b.n	801f3c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801f49e:	45ce      	cmp	lr, r9
 801f4a0:	dab9      	bge.n	801f416 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801f4a2:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801f4a4:	fb01 2606 	mla	r6, r1, r6, r2
 801f4a8:	1436      	asrs	r6, r6, #16
 801f4aa:	d4b4      	bmi.n	801f416 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801f4ac:	4546      	cmp	r6, r8
 801f4ae:	dab2      	bge.n	801f416 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801f4b0:	4698      	mov	r8, r3
 801f4b2:	46a2      	mov	sl, r4
 801f4b4:	f1b8 0f00 	cmp.w	r8, #0
 801f4b8:	ddb3      	ble.n	801f422 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f4ba:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801f4be:	9902      	ldr	r1, [sp, #8]
 801f4c0:	1416      	asrs	r6, r2, #16
 801f4c2:	fb09 1606 	mla	r6, r9, r6, r1
 801f4c6:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801f4ca:	492a      	ldr	r1, [pc, #168]	@ (801f574 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801f4cc:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801f4d0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801f4d4:	eb07 0b0e 	add.w	fp, r7, lr
 801f4d8:	4460      	add	r0, ip
 801f4da:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801f4de:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801f4e2:	00f6      	lsls	r6, r6, #3
 801f4e4:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801f4e8:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801f4ec:	ea49 0606 	orr.w	r6, r9, r6
 801f4f0:	f817 900e 	ldrb.w	r9, [r7, lr]
 801f4f4:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801f4f6:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801f4fa:	f82a 6b02 	strh.w	r6, [sl], #2
 801f4fe:	440a      	add	r2, r1
 801f500:	f108 38ff 	add.w	r8, r8, #4294967295
 801f504:	e7d6      	b.n	801f4b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801f506:	ea5f 4920 	movs.w	r9, r0, asr #16
 801f50a:	d429      	bmi.n	801f560 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801f50c:	68ae      	ldr	r6, [r5, #8]
 801f50e:	454e      	cmp	r6, r9
 801f510:	dd26      	ble.n	801f560 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801f512:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801f516:	d423      	bmi.n	801f560 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801f518:	68e9      	ldr	r1, [r5, #12]
 801f51a:	4559      	cmp	r1, fp
 801f51c:	dd20      	ble.n	801f560 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801f51e:	9902      	ldr	r1, [sp, #8]
 801f520:	fa0f fe86 	sxth.w	lr, r6
 801f524:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801f528:	f06f 0101 	mvn.w	r1, #1
 801f52c:	f81e e009 	ldrb.w	lr, [lr, r9]
 801f530:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801f534:	eb07 060e 	add.w	r6, r7, lr
 801f538:	fb01 f908 	mul.w	r9, r1, r8
 801f53c:	f896 b002 	ldrb.w	fp, [r6, #2]
 801f540:	7876      	ldrb	r6, [r6, #1]
 801f542:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 801f546:	00f6      	lsls	r6, r6, #3
 801f548:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801f54c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801f550:	ea4b 0606 	orr.w	r6, fp, r6
 801f554:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801f558:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801f55c:	f82a 6009 	strh.w	r6, [sl, r9]
 801f560:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801f562:	4460      	add	r0, ip
 801f564:	440a      	add	r2, r1
 801f566:	f108 38ff 	add.w	r8, r8, #4294967295
 801f56a:	e757      	b.n	801f41c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801f56c:	b005      	add	sp, #20
 801f56e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f572:	bf00      	nop
 801f574:	fffff800 	.word	0xfffff800

0801f578 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f578:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f57c:	b087      	sub	sp, #28
 801f57e:	468b      	mov	fp, r1
 801f580:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801f582:	9204      	str	r2, [sp, #16]
 801f584:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801f588:	9205      	str	r2, [sp, #20]
 801f58a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801f58e:	6841      	ldr	r1, [r0, #4]
 801f590:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 801f594:	fb01 2404 	mla	r4, r1, r4, r2
 801f598:	6802      	ldr	r2, [r0, #0]
 801f59a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801f59e:	f8dc 2000 	ldr.w	r2, [ip]
 801f5a2:	9201      	str	r2, [sp, #4]
 801f5a4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801f5a8:	3204      	adds	r2, #4
 801f5aa:	9202      	str	r2, [sp, #8]
 801f5ac:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801f5b0:	f1bb 0f00 	cmp.w	fp, #0
 801f5b4:	dc03      	bgt.n	801f5be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801f5b6:	9a04      	ldr	r2, [sp, #16]
 801f5b8:	2a00      	cmp	r2, #0
 801f5ba:	f340 8138 	ble.w	801f82e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801f5be:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801f5c0:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801f5c4:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801f5c8:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801f5cc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801f5ce:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801f5d2:	2b00      	cmp	r3, #0
 801f5d4:	dd0e      	ble.n	801f5f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801f5d6:	1402      	asrs	r2, r0, #16
 801f5d8:	d405      	bmi.n	801f5e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f5da:	42ba      	cmp	r2, r7
 801f5dc:	da03      	bge.n	801f5e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f5de:	140a      	asrs	r2, r1, #16
 801f5e0:	d401      	bmi.n	801f5e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f5e2:	42b2      	cmp	r2, r6
 801f5e4:	db07      	blt.n	801f5f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801f5e6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801f5e8:	4410      	add	r0, r2
 801f5ea:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801f5ec:	3b01      	subs	r3, #1
 801f5ee:	4411      	add	r1, r2
 801f5f0:	3402      	adds	r4, #2
 801f5f2:	e7ee      	b.n	801f5d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801f5f4:	d019      	beq.n	801f62a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801f5f6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f5f8:	1e5a      	subs	r2, r3, #1
 801f5fa:	fb05 0502 	mla	r5, r5, r2, r0
 801f5fe:	142d      	asrs	r5, r5, #16
 801f600:	d409      	bmi.n	801f616 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801f602:	42bd      	cmp	r5, r7
 801f604:	da07      	bge.n	801f616 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801f606:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f608:	fb05 1202 	mla	r2, r5, r2, r1
 801f60c:	1412      	asrs	r2, r2, #16
 801f60e:	d402      	bmi.n	801f616 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801f610:	42b2      	cmp	r2, r6
 801f612:	f2c0 80ac 	blt.w	801f76e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801f616:	f04f 0e00 	mov.w	lr, #0
 801f61a:	eb03 020e 	add.w	r2, r3, lr
 801f61e:	2a00      	cmp	r2, #0
 801f620:	dc3e      	bgt.n	801f6a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801f622:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f626:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801f62a:	f1bb 0f00 	cmp.w	fp, #0
 801f62e:	f340 80fe 	ble.w	801f82e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801f632:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f636:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f63a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801f63e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f640:	f1bb 0b01 	subs.w	fp, fp, #1
 801f644:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f648:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f64c:	eeb0 6a62 	vmov.f32	s12, s5
 801f650:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f654:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f658:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f65c:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801f660:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f664:	eeb0 6a43 	vmov.f32	s12, s6
 801f668:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f66c:	ee12 2a90 	vmov	r2, s5
 801f670:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f674:	fb92 f3f3 	sdiv	r3, r2, r3
 801f678:	ee13 2a10 	vmov	r2, s6
 801f67c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f680:	9313      	str	r3, [sp, #76]	@ 0x4c
 801f682:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f684:	fb92 f3f3 	sdiv	r3, r2, r3
 801f688:	9a04      	ldr	r2, [sp, #16]
 801f68a:	9314      	str	r3, [sp, #80]	@ 0x50
 801f68c:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801f690:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f692:	eeb0 3a67 	vmov.f32	s6, s15
 801f696:	bf08      	it	eq
 801f698:	4613      	moveq	r3, r2
 801f69a:	eef0 2a47 	vmov.f32	s5, s14
 801f69e:	e787      	b.n	801f5b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801f6a0:	1406      	asrs	r6, r0, #16
 801f6a2:	d45d      	bmi.n	801f760 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f6a4:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801f6a8:	42b5      	cmp	r5, r6
 801f6aa:	dd59      	ble.n	801f760 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f6ac:	140f      	asrs	r7, r1, #16
 801f6ae:	d457      	bmi.n	801f760 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f6b0:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801f6b4:	42ba      	cmp	r2, r7
 801f6b6:	dd53      	ble.n	801f760 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f6b8:	9a01      	ldr	r2, [sp, #4]
 801f6ba:	b22d      	sxth	r5, r5
 801f6bc:	fb07 2505 	mla	r5, r7, r5, r2
 801f6c0:	5daa      	ldrb	r2, [r5, r6]
 801f6c2:	9d02      	ldr	r5, [sp, #8]
 801f6c4:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801f6c8:	0e2e      	lsrs	r6, r5, #24
 801f6ca:	d049      	beq.n	801f760 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f6cc:	f06f 0201 	mvn.w	r2, #1
 801f6d0:	fb02 f20e 	mul.w	r2, r2, lr
 801f6d4:	9203      	str	r2, [sp, #12]
 801f6d6:	f834 8002 	ldrh.w	r8, [r4, r2]
 801f6da:	9a05      	ldr	r2, [sp, #20]
 801f6dc:	4356      	muls	r6, r2
 801f6de:	1c72      	adds	r2, r6, #1
 801f6e0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801f6e4:	1212      	asrs	r2, r2, #8
 801f6e6:	fa1f f982 	uxth.w	r9, r2
 801f6ea:	ea4f 2728 	mov.w	r7, r8, asr #8
 801f6ee:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801f6f2:	43d2      	mvns	r2, r2
 801f6f4:	b2d2      	uxtb	r2, r2
 801f6f6:	fb16 f609 	smulbb	r6, r6, r9
 801f6fa:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801f6fe:	fb07 6702 	mla	r7, r7, r2, r6
 801f702:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801f706:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801f70a:	b2ed      	uxtb	r5, r5
 801f70c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801f710:	fa5f f888 	uxtb.w	r8, r8
 801f714:	fb15 f509 	smulbb	r5, r5, r9
 801f718:	fb08 5502 	mla	r5, r8, r2, r5
 801f71c:	b2bf      	uxth	r7, r7
 801f71e:	fb1a fa09 	smulbb	sl, sl, r9
 801f722:	b2ad      	uxth	r5, r5
 801f724:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801f728:	fb06 a602 	mla	r6, r6, r2, sl
 801f72c:	1c7a      	adds	r2, r7, #1
 801f72e:	f105 0a01 	add.w	sl, r5, #1
 801f732:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801f736:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801f73a:	b2b6      	uxth	r6, r6
 801f73c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801f740:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801f744:	ea4a 0707 	orr.w	r7, sl, r7
 801f748:	f106 0a01 	add.w	sl, r6, #1
 801f74c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801f750:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f754:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801f758:	9a03      	ldr	r2, [sp, #12]
 801f75a:	ea47 070a 	orr.w	r7, r7, sl
 801f75e:	52a7      	strh	r7, [r4, r2]
 801f760:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801f762:	4410      	add	r0, r2
 801f764:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801f766:	f10e 3eff 	add.w	lr, lr, #4294967295
 801f76a:	4411      	add	r1, r2
 801f76c:	e755      	b.n	801f61a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801f76e:	f04f 0800 	mov.w	r8, #0
 801f772:	eba3 0208 	sub.w	r2, r3, r8
 801f776:	2a00      	cmp	r2, #0
 801f778:	f77f af53 	ble.w	801f622 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801f77c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801f780:	9f01      	ldr	r7, [sp, #4]
 801f782:	140a      	asrs	r2, r1, #16
 801f784:	1405      	asrs	r5, r0, #16
 801f786:	fb06 7202 	mla	r2, r6, r2, r7
 801f78a:	5d52      	ldrb	r2, [r2, r5]
 801f78c:	9d02      	ldr	r5, [sp, #8]
 801f78e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801f792:	0e2e      	lsrs	r6, r5, #24
 801f794:	d044      	beq.n	801f820 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f796:	9a05      	ldr	r2, [sp, #20]
 801f798:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801f79c:	4356      	muls	r6, r2
 801f79e:	1c72      	adds	r2, r6, #1
 801f7a0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801f7a4:	1212      	asrs	r2, r2, #8
 801f7a6:	fa1f f982 	uxth.w	r9, r2
 801f7aa:	ea4f 272e 	mov.w	r7, lr, asr #8
 801f7ae:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801f7b2:	43d2      	mvns	r2, r2
 801f7b4:	b2d2      	uxtb	r2, r2
 801f7b6:	fb16 f609 	smulbb	r6, r6, r9
 801f7ba:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801f7be:	fb07 6702 	mla	r7, r7, r2, r6
 801f7c2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801f7c6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801f7ca:	b2ed      	uxtb	r5, r5
 801f7cc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f7d0:	fa5f fe8e 	uxtb.w	lr, lr
 801f7d4:	fb15 f509 	smulbb	r5, r5, r9
 801f7d8:	fb0e 5502 	mla	r5, lr, r2, r5
 801f7dc:	b2bf      	uxth	r7, r7
 801f7de:	fb1a fa09 	smulbb	sl, sl, r9
 801f7e2:	b2ad      	uxth	r5, r5
 801f7e4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801f7e8:	fb06 a602 	mla	r6, r6, r2, sl
 801f7ec:	1c7a      	adds	r2, r7, #1
 801f7ee:	f105 0a01 	add.w	sl, r5, #1
 801f7f2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801f7f6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801f7fa:	b2b6      	uxth	r6, r6
 801f7fc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801f800:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801f804:	ea4a 0707 	orr.w	r7, sl, r7
 801f808:	f106 0a01 	add.w	sl, r6, #1
 801f80c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801f810:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f814:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801f818:	ea47 070a 	orr.w	r7, r7, sl
 801f81c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801f820:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801f822:	4410      	add	r0, r2
 801f824:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801f826:	f108 0801 	add.w	r8, r8, #1
 801f82a:	4411      	add	r1, r2
 801f82c:	e7a1      	b.n	801f772 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801f82e:	b007      	add	sp, #28
 801f830:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f834 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f834:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f838:	b085      	sub	sp, #20
 801f83a:	468b      	mov	fp, r1
 801f83c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801f83e:	9203      	str	r2, [sp, #12]
 801f840:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801f844:	6841      	ldr	r1, [r0, #4]
 801f846:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 801f84a:	fb01 2404 	mla	r4, r1, r4, r2
 801f84e:	6802      	ldr	r2, [r0, #0]
 801f850:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801f854:	f8de 2000 	ldr.w	r2, [lr]
 801f858:	9200      	str	r2, [sp, #0]
 801f85a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801f85e:	3204      	adds	r2, #4
 801f860:	9201      	str	r2, [sp, #4]
 801f862:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801f866:	f1bb 0f00 	cmp.w	fp, #0
 801f86a:	dc03      	bgt.n	801f874 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801f86c:	9a03      	ldr	r2, [sp, #12]
 801f86e:	2a00      	cmp	r2, #0
 801f870:	f340 8153 	ble.w	801fb1a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801f874:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f876:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801f87a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801f87e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801f882:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801f884:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801f888:	2b00      	cmp	r3, #0
 801f88a:	dd0e      	ble.n	801f8aa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801f88c:	1408      	asrs	r0, r1, #16
 801f88e:	d405      	bmi.n	801f89c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f890:	42b8      	cmp	r0, r7
 801f892:	da03      	bge.n	801f89c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f894:	1410      	asrs	r0, r2, #16
 801f896:	d401      	bmi.n	801f89c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f898:	42b0      	cmp	r0, r6
 801f89a:	db07      	blt.n	801f8ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f89c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801f89e:	4401      	add	r1, r0
 801f8a0:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801f8a2:	3b01      	subs	r3, #1
 801f8a4:	4402      	add	r2, r0
 801f8a6:	3402      	adds	r4, #2
 801f8a8:	e7ee      	b.n	801f888 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801f8aa:	d017      	beq.n	801f8dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801f8ac:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f8ae:	1e58      	subs	r0, r3, #1
 801f8b0:	fb05 1500 	mla	r5, r5, r0, r1
 801f8b4:	142d      	asrs	r5, r5, #16
 801f8b6:	d409      	bmi.n	801f8cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801f8b8:	42bd      	cmp	r5, r7
 801f8ba:	da07      	bge.n	801f8cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801f8bc:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f8be:	fb05 2000 	mla	r0, r5, r0, r2
 801f8c2:	1400      	asrs	r0, r0, #16
 801f8c4:	d402      	bmi.n	801f8cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801f8c6:	42b0      	cmp	r0, r6
 801f8c8:	f2c0 80bc 	blt.w	801fa44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801f8cc:	2600      	movs	r6, #0
 801f8ce:	1998      	adds	r0, r3, r6
 801f8d0:	2800      	cmp	r0, #0
 801f8d2:	dc3e      	bgt.n	801f952 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801f8d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f8d8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801f8dc:	f1bb 0f00 	cmp.w	fp, #0
 801f8e0:	f340 811b 	ble.w	801fb1a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801f8e4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f8e8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f8ec:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801f8f0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f8f2:	f1bb 0b01 	subs.w	fp, fp, #1
 801f8f6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f8fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f8fe:	eeb0 6a62 	vmov.f32	s12, s5
 801f902:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f906:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f90a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f90e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801f912:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f916:	eeb0 6a43 	vmov.f32	s12, s6
 801f91a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f91e:	ee12 2a90 	vmov	r2, s5
 801f922:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f926:	fb92 f3f3 	sdiv	r3, r2, r3
 801f92a:	ee13 2a10 	vmov	r2, s6
 801f92e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f932:	9311      	str	r3, [sp, #68]	@ 0x44
 801f934:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f936:	fb92 f3f3 	sdiv	r3, r2, r3
 801f93a:	9a03      	ldr	r2, [sp, #12]
 801f93c:	9312      	str	r3, [sp, #72]	@ 0x48
 801f93e:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801f942:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f944:	eeb0 3a67 	vmov.f32	s6, s15
 801f948:	bf08      	it	eq
 801f94a:	4613      	moveq	r3, r2
 801f94c:	eef0 2a47 	vmov.f32	s5, s14
 801f950:	e789      	b.n	801f866 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801f952:	140f      	asrs	r7, r1, #16
 801f954:	d426      	bmi.n	801f9a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801f956:	f8de 5008 	ldr.w	r5, [lr, #8]
 801f95a:	42bd      	cmp	r5, r7
 801f95c:	dd22      	ble.n	801f9a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801f95e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801f962:	d41f      	bmi.n	801f9a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801f964:	f8de 000c 	ldr.w	r0, [lr, #12]
 801f968:	4560      	cmp	r0, ip
 801f96a:	dd1b      	ble.n	801f9a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801f96c:	9800      	ldr	r0, [sp, #0]
 801f96e:	b22d      	sxth	r5, r5
 801f970:	fb0c 0505 	mla	r5, ip, r5, r0
 801f974:	5de8      	ldrb	r0, [r5, r7]
 801f976:	9d01      	ldr	r5, [sp, #4]
 801f978:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801f97c:	0e07      	lsrs	r7, r0, #24
 801f97e:	2fff      	cmp	r7, #255	@ 0xff
 801f980:	d116      	bne.n	801f9b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801f982:	f06f 0501 	mvn.w	r5, #1
 801f986:	fb05 f706 	mul.w	r7, r5, r6
 801f98a:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 801f98e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801f992:	0945      	lsrs	r5, r0, #5
 801f994:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f998:	ea4c 0505 	orr.w	r5, ip, r5
 801f99c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801f9a0:	4305      	orrs	r5, r0
 801f9a2:	53e5      	strh	r5, [r4, r7]
 801f9a4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801f9a6:	4401      	add	r1, r0
 801f9a8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801f9aa:	3e01      	subs	r6, #1
 801f9ac:	4402      	add	r2, r0
 801f9ae:	e78e      	b.n	801f8ce <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f9b0:	b2fd      	uxtb	r5, r7
 801f9b2:	2f00      	cmp	r7, #0
 801f9b4:	d0f6      	beq.n	801f9a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801f9b6:	f06f 0701 	mvn.w	r7, #1
 801f9ba:	4377      	muls	r7, r6
 801f9bc:	fa1f f985 	uxth.w	r9, r5
 801f9c0:	f834 8007 	ldrh.w	r8, [r4, r7]
 801f9c4:	9702      	str	r7, [sp, #8]
 801f9c6:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801f9ca:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801f9ce:	43ed      	mvns	r5, r5
 801f9d0:	b2ed      	uxtb	r5, r5
 801f9d2:	fb17 f709 	smulbb	r7, r7, r9
 801f9d6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801f9da:	fb0c 7c05 	mla	ip, ip, r5, r7
 801f9de:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801f9e2:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801f9e6:	b2c0      	uxtb	r0, r0
 801f9e8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801f9ec:	fa5f f888 	uxtb.w	r8, r8
 801f9f0:	fb10 f009 	smulbb	r0, r0, r9
 801f9f4:	fb08 0005 	mla	r0, r8, r5, r0
 801f9f8:	b280      	uxth	r0, r0
 801f9fa:	fa1f fc8c 	uxth.w	ip, ip
 801f9fe:	fb1a fa09 	smulbb	sl, sl, r9
 801fa02:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801fa06:	fb07 a705 	mla	r7, r7, r5, sl
 801fa0a:	f100 0a01 	add.w	sl, r0, #1
 801fa0e:	f10c 0501 	add.w	r5, ip, #1
 801fa12:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801fa16:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801fa1a:	b2bf      	uxth	r7, r7
 801fa1c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801fa20:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801fa24:	ea4a 0c0c 	orr.w	ip, sl, ip
 801fa28:	f107 0a01 	add.w	sl, r7, #1
 801fa2c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801fa30:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fa34:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801fa38:	9802      	ldr	r0, [sp, #8]
 801fa3a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801fa3e:	f824 c000 	strh.w	ip, [r4, r0]
 801fa42:	e7af      	b.n	801f9a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801fa44:	f04f 0800 	mov.w	r8, #0
 801fa48:	eba3 0008 	sub.w	r0, r3, r8
 801fa4c:	2800      	cmp	r0, #0
 801fa4e:	f77f af41 	ble.w	801f8d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801fa52:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801fa56:	9f00      	ldr	r7, [sp, #0]
 801fa58:	1410      	asrs	r0, r2, #16
 801fa5a:	140d      	asrs	r5, r1, #16
 801fa5c:	fb06 7000 	mla	r0, r6, r0, r7
 801fa60:	5d40      	ldrb	r0, [r0, r5]
 801fa62:	9d01      	ldr	r5, [sp, #4]
 801fa64:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801fa68:	0e2e      	lsrs	r6, r5, #24
 801fa6a:	2eff      	cmp	r6, #255	@ 0xff
 801fa6c:	d112      	bne.n	801fa94 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801fa6e:	482c      	ldr	r0, [pc, #176]	@ (801fb20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801fa70:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801fa74:	0968      	lsrs	r0, r5, #5
 801fa76:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801fa7a:	4330      	orrs	r0, r6
 801fa7c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801fa80:	4328      	orrs	r0, r5
 801fa82:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801fa86:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801fa88:	4401      	add	r1, r0
 801fa8a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801fa8c:	f108 0801 	add.w	r8, r8, #1
 801fa90:	4402      	add	r2, r0
 801fa92:	e7d9      	b.n	801fa48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fa94:	b2f0      	uxtb	r0, r6
 801fa96:	2e00      	cmp	r6, #0
 801fa98:	d0f5      	beq.n	801fa86 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801fa9a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801fa9e:	fa1f f980 	uxth.w	r9, r0
 801faa2:	ea4f 272c 	mov.w	r7, ip, asr #8
 801faa6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801faaa:	43c0      	mvns	r0, r0
 801faac:	b2c0      	uxtb	r0, r0
 801faae:	fb16 f609 	smulbb	r6, r6, r9
 801fab2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801fab6:	fb07 6700 	mla	r7, r7, r0, r6
 801faba:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801fabe:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801fac2:	b2ed      	uxtb	r5, r5
 801fac4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fac8:	fa5f fc8c 	uxtb.w	ip, ip
 801facc:	fb15 f509 	smulbb	r5, r5, r9
 801fad0:	fb0c 5500 	mla	r5, ip, r0, r5
 801fad4:	b2bf      	uxth	r7, r7
 801fad6:	fb1a fa09 	smulbb	sl, sl, r9
 801fada:	b2ad      	uxth	r5, r5
 801fadc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801fae0:	fb06 a600 	mla	r6, r6, r0, sl
 801fae4:	1c78      	adds	r0, r7, #1
 801fae6:	f105 0a01 	add.w	sl, r5, #1
 801faea:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801faee:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801faf2:	b2b6      	uxth	r6, r6
 801faf4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801faf8:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801fafc:	ea4a 0707 	orr.w	r7, sl, r7
 801fb00:	f106 0a01 	add.w	sl, r6, #1
 801fb04:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801fb08:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fb0c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801fb10:	ea47 070a 	orr.w	r7, r7, sl
 801fb14:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801fb18:	e7b5      	b.n	801fa86 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801fb1a:	b005      	add	sp, #20
 801fb1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fb20:	fffff800 	.word	0xfffff800

0801fb24 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fb24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fb28:	b087      	sub	sp, #28
 801fb2a:	468b      	mov	fp, r1
 801fb2c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801fb2e:	9204      	str	r2, [sp, #16]
 801fb30:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801fb34:	9205      	str	r2, [sp, #20]
 801fb36:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 801fb3a:	6861      	ldr	r1, [r4, #4]
 801fb3c:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 801fb40:	fb01 2000 	mla	r0, r1, r0, r2
 801fb44:	6822      	ldr	r2, [r4, #0]
 801fb46:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801fb4a:	f8de 2000 	ldr.w	r2, [lr]
 801fb4e:	9201      	str	r2, [sp, #4]
 801fb50:	f8de 2004 	ldr.w	r2, [lr, #4]
 801fb54:	9202      	str	r2, [sp, #8]
 801fb56:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801fb5a:	f1bb 0f00 	cmp.w	fp, #0
 801fb5e:	dc03      	bgt.n	801fb68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801fb60:	9a04      	ldr	r2, [sp, #16]
 801fb62:	2a00      	cmp	r2, #0
 801fb64:	f340 8142 	ble.w	801fdec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801fb68:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801fb6a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801fb6e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801fb72:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801fb76:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801fb78:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801fb7c:	2b00      	cmp	r3, #0
 801fb7e:	dd0e      	ble.n	801fb9e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fb80:	140c      	asrs	r4, r1, #16
 801fb82:	d405      	bmi.n	801fb90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801fb84:	42bc      	cmp	r4, r7
 801fb86:	da03      	bge.n	801fb90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801fb88:	1414      	asrs	r4, r2, #16
 801fb8a:	d401      	bmi.n	801fb90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801fb8c:	42b4      	cmp	r4, r6
 801fb8e:	db07      	blt.n	801fba0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801fb90:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801fb92:	4421      	add	r1, r4
 801fb94:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801fb96:	3b01      	subs	r3, #1
 801fb98:	4422      	add	r2, r4
 801fb9a:	3002      	adds	r0, #2
 801fb9c:	e7ee      	b.n	801fb7c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801fb9e:	d019      	beq.n	801fbd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801fba0:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801fba2:	1e5c      	subs	r4, r3, #1
 801fba4:	fb05 1504 	mla	r5, r5, r4, r1
 801fba8:	142d      	asrs	r5, r5, #16
 801fbaa:	d409      	bmi.n	801fbc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801fbac:	42bd      	cmp	r5, r7
 801fbae:	da07      	bge.n	801fbc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801fbb0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801fbb2:	fb05 2404 	mla	r4, r5, r4, r2
 801fbb6:	1424      	asrs	r4, r4, #16
 801fbb8:	d402      	bmi.n	801fbc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801fbba:	42b4      	cmp	r4, r6
 801fbbc:	f2c0 80b1 	blt.w	801fd22 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801fbc0:	f04f 0800 	mov.w	r8, #0
 801fbc4:	eb03 0408 	add.w	r4, r3, r8
 801fbc8:	2c00      	cmp	r4, #0
 801fbca:	dc3e      	bgt.n	801fc4a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801fbcc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801fbd0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801fbd4:	f1bb 0f00 	cmp.w	fp, #0
 801fbd8:	f340 8108 	ble.w	801fdec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801fbdc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fbe0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fbe4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801fbe8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801fbea:	f1bb 0b01 	subs.w	fp, fp, #1
 801fbee:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fbf2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fbf6:	eeb0 6a62 	vmov.f32	s12, s5
 801fbfa:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fbfe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801fc02:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fc06:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801fc0a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fc0e:	eeb0 6a43 	vmov.f32	s12, s6
 801fc12:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fc16:	ee12 2a90 	vmov	r2, s5
 801fc1a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fc1e:	fb92 f3f3 	sdiv	r3, r2, r3
 801fc22:	ee13 2a10 	vmov	r2, s6
 801fc26:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801fc2a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801fc2c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801fc2e:	fb92 f3f3 	sdiv	r3, r2, r3
 801fc32:	9a04      	ldr	r2, [sp, #16]
 801fc34:	9314      	str	r3, [sp, #80]	@ 0x50
 801fc36:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801fc3a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801fc3c:	eeb0 3a67 	vmov.f32	s6, s15
 801fc40:	bf08      	it	eq
 801fc42:	4613      	moveq	r3, r2
 801fc44:	eef0 2a47 	vmov.f32	s5, s14
 801fc48:	e787      	b.n	801fb5a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801fc4a:	140e      	asrs	r6, r1, #16
 801fc4c:	d462      	bmi.n	801fd14 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801fc4e:	f8de 5008 	ldr.w	r5, [lr, #8]
 801fc52:	42b5      	cmp	r5, r6
 801fc54:	dd5e      	ble.n	801fd14 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801fc56:	1417      	asrs	r7, r2, #16
 801fc58:	d45c      	bmi.n	801fd14 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801fc5a:	f8de 400c 	ldr.w	r4, [lr, #12]
 801fc5e:	42bc      	cmp	r4, r7
 801fc60:	dd58      	ble.n	801fd14 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801fc62:	b22d      	sxth	r5, r5
 801fc64:	fb07 6505 	mla	r5, r7, r5, r6
 801fc68:	9c02      	ldr	r4, [sp, #8]
 801fc6a:	5d66      	ldrb	r6, [r4, r5]
 801fc6c:	2e00      	cmp	r6, #0
 801fc6e:	d051      	beq.n	801fd14 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801fc70:	9c01      	ldr	r4, [sp, #4]
 801fc72:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801fc76:	f06f 0401 	mvn.w	r4, #1
 801fc7a:	fb04 f408 	mul.w	r4, r4, r8
 801fc7e:	9403      	str	r4, [sp, #12]
 801fc80:	5b05      	ldrh	r5, [r0, r4]
 801fc82:	9c05      	ldr	r4, [sp, #20]
 801fc84:	4366      	muls	r6, r4
 801fc86:	1c74      	adds	r4, r6, #1
 801fc88:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801fc8c:	1224      	asrs	r4, r4, #8
 801fc8e:	b2a7      	uxth	r7, r4
 801fc90:	122e      	asrs	r6, r5, #8
 801fc92:	43e4      	mvns	r4, r4
 801fc94:	b2e4      	uxtb	r4, r4
 801fc96:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801fc9a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801fc9e:	fb16 f604 	smulbb	r6, r6, r4
 801fca2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801fca6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801fcaa:	00ed      	lsls	r5, r5, #3
 801fcac:	fb0c 6c07 	mla	ip, ip, r7, r6
 801fcb0:	b2ed      	uxtb	r5, r5
 801fcb2:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801fcb6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801fcba:	fb15 f504 	smulbb	r5, r5, r4
 801fcbe:	fa5f f989 	uxtb.w	r9, r9
 801fcc2:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801fcc6:	fb09 5507 	mla	r5, r9, r7, r5
 801fcca:	fb1a fa04 	smulbb	sl, sl, r4
 801fcce:	fa1f fc8c 	uxth.w	ip, ip
 801fcd2:	b2ad      	uxth	r5, r5
 801fcd4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801fcd8:	fb06 a607 	mla	r6, r6, r7, sl
 801fcdc:	f10c 0401 	add.w	r4, ip, #1
 801fce0:	f105 0a01 	add.w	sl, r5, #1
 801fce4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801fce8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801fcec:	b2b6      	uxth	r6, r6
 801fcee:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801fcf2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801fcf6:	ea4a 0c0c 	orr.w	ip, sl, ip
 801fcfa:	f106 0a01 	add.w	sl, r6, #1
 801fcfe:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801fd02:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fd06:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801fd0a:	9c03      	ldr	r4, [sp, #12]
 801fd0c:	ea4c 0c0a 	orr.w	ip, ip, sl
 801fd10:	f820 c004 	strh.w	ip, [r0, r4]
 801fd14:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801fd16:	4421      	add	r1, r4
 801fd18:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801fd1a:	f108 38ff 	add.w	r8, r8, #4294967295
 801fd1e:	4422      	add	r2, r4
 801fd20:	e750      	b.n	801fbc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801fd22:	f04f 0900 	mov.w	r9, #0
 801fd26:	eba3 0409 	sub.w	r4, r3, r9
 801fd2a:	2c00      	cmp	r4, #0
 801fd2c:	f77f af4e 	ble.w	801fbcc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801fd30:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801fd34:	140d      	asrs	r5, r1, #16
 801fd36:	1414      	asrs	r4, r2, #16
 801fd38:	fb06 5404 	mla	r4, r6, r4, r5
 801fd3c:	9d02      	ldr	r5, [sp, #8]
 801fd3e:	5d2e      	ldrb	r6, [r5, r4]
 801fd40:	2e00      	cmp	r6, #0
 801fd42:	d04c      	beq.n	801fdde <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801fd44:	9d01      	ldr	r5, [sp, #4]
 801fd46:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801fd4a:	9c05      	ldr	r4, [sp, #20]
 801fd4c:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801fd50:	4366      	muls	r6, r4
 801fd52:	1c74      	adds	r4, r6, #1
 801fd54:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801fd58:	1224      	asrs	r4, r4, #8
 801fd5a:	b2a7      	uxth	r7, r4
 801fd5c:	122e      	asrs	r6, r5, #8
 801fd5e:	43e4      	mvns	r4, r4
 801fd60:	b2e4      	uxtb	r4, r4
 801fd62:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801fd66:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801fd6a:	fb16 f604 	smulbb	r6, r6, r4
 801fd6e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801fd72:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801fd76:	00ed      	lsls	r5, r5, #3
 801fd78:	fb0c 6c07 	mla	ip, ip, r7, r6
 801fd7c:	b2ed      	uxtb	r5, r5
 801fd7e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801fd82:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801fd86:	fb15 f504 	smulbb	r5, r5, r4
 801fd8a:	fa5f f888 	uxtb.w	r8, r8
 801fd8e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801fd92:	fb08 5507 	mla	r5, r8, r7, r5
 801fd96:	fb1a fa04 	smulbb	sl, sl, r4
 801fd9a:	fa1f fc8c 	uxth.w	ip, ip
 801fd9e:	b2ad      	uxth	r5, r5
 801fda0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801fda4:	fb06 a607 	mla	r6, r6, r7, sl
 801fda8:	f10c 0401 	add.w	r4, ip, #1
 801fdac:	f105 0a01 	add.w	sl, r5, #1
 801fdb0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801fdb4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801fdb8:	b2b6      	uxth	r6, r6
 801fdba:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801fdbe:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801fdc2:	ea4a 0c0c 	orr.w	ip, sl, ip
 801fdc6:	f106 0a01 	add.w	sl, r6, #1
 801fdca:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801fdce:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fdd2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801fdd6:	ea4c 0c0a 	orr.w	ip, ip, sl
 801fdda:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801fdde:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801fde0:	4421      	add	r1, r4
 801fde2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801fde4:	f109 0901 	add.w	r9, r9, #1
 801fde8:	4422      	add	r2, r4
 801fdea:	e79c      	b.n	801fd26 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801fdec:	b007      	add	sp, #28
 801fdee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fdf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fdf2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fdf6:	b085      	sub	sp, #20
 801fdf8:	468b      	mov	fp, r1
 801fdfa:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801fdfc:	9203      	str	r2, [sp, #12]
 801fdfe:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 801fe02:	6861      	ldr	r1, [r4, #4]
 801fe04:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 801fe08:	fb01 2000 	mla	r0, r1, r0, r2
 801fe0c:	6822      	ldr	r2, [r4, #0]
 801fe0e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801fe12:	f8d8 2000 	ldr.w	r2, [r8]
 801fe16:	9200      	str	r2, [sp, #0]
 801fe18:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801fe1c:	9201      	str	r2, [sp, #4]
 801fe1e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801fe22:	f1bb 0f00 	cmp.w	fp, #0
 801fe26:	dc03      	bgt.n	801fe30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801fe28:	9a03      	ldr	r2, [sp, #12]
 801fe2a:	2a00      	cmp	r2, #0
 801fe2c:	f340 8146 	ble.w	80200bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801fe30:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801fe32:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801fe36:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801fe3a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801fe3e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801fe40:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801fe44:	2b00      	cmp	r3, #0
 801fe46:	dd0e      	ble.n	801fe66 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801fe48:	140c      	asrs	r4, r1, #16
 801fe4a:	d405      	bmi.n	801fe58 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801fe4c:	42bc      	cmp	r4, r7
 801fe4e:	da03      	bge.n	801fe58 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801fe50:	1414      	asrs	r4, r2, #16
 801fe52:	d401      	bmi.n	801fe58 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801fe54:	42b4      	cmp	r4, r6
 801fe56:	db07      	blt.n	801fe68 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801fe58:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801fe5a:	4421      	add	r1, r4
 801fe5c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801fe5e:	3b01      	subs	r3, #1
 801fe60:	4422      	add	r2, r4
 801fe62:	3002      	adds	r0, #2
 801fe64:	e7ee      	b.n	801fe44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801fe66:	d017      	beq.n	801fe98 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801fe68:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801fe6a:	1e5c      	subs	r4, r3, #1
 801fe6c:	fb05 1504 	mla	r5, r5, r4, r1
 801fe70:	142d      	asrs	r5, r5, #16
 801fe72:	d409      	bmi.n	801fe88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801fe74:	42bd      	cmp	r5, r7
 801fe76:	da07      	bge.n	801fe88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801fe78:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801fe7a:	fb05 2404 	mla	r4, r5, r4, r2
 801fe7e:	1424      	asrs	r4, r4, #16
 801fe80:	d402      	bmi.n	801fe88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801fe82:	42b4      	cmp	r4, r6
 801fe84:	f2c0 80b3 	blt.w	801ffee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801fe88:	2600      	movs	r6, #0
 801fe8a:	199c      	adds	r4, r3, r6
 801fe8c:	2c00      	cmp	r4, #0
 801fe8e:	dc3e      	bgt.n	801ff0e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801fe90:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801fe94:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801fe98:	f1bb 0f00 	cmp.w	fp, #0
 801fe9c:	f340 810e 	ble.w	80200bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801fea0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fea4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fea8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801feac:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801feae:	f1bb 0b01 	subs.w	fp, fp, #1
 801feb2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801feb6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801feba:	eeb0 6a62 	vmov.f32	s12, s5
 801febe:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fec2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801fec6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801feca:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801fece:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fed2:	eeb0 6a43 	vmov.f32	s12, s6
 801fed6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801feda:	ee12 2a90 	vmov	r2, s5
 801fede:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fee2:	fb92 f3f3 	sdiv	r3, r2, r3
 801fee6:	ee13 2a10 	vmov	r2, s6
 801feea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801feee:	9311      	str	r3, [sp, #68]	@ 0x44
 801fef0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fef2:	fb92 f3f3 	sdiv	r3, r2, r3
 801fef6:	9a03      	ldr	r2, [sp, #12]
 801fef8:	9312      	str	r3, [sp, #72]	@ 0x48
 801fefa:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801fefe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ff00:	eeb0 3a67 	vmov.f32	s6, s15
 801ff04:	bf08      	it	eq
 801ff06:	4613      	moveq	r3, r2
 801ff08:	eef0 2a47 	vmov.f32	s5, s14
 801ff0c:	e789      	b.n	801fe22 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801ff0e:	140f      	asrs	r7, r1, #16
 801ff10:	d418      	bmi.n	801ff44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ff12:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801ff16:	42bd      	cmp	r5, r7
 801ff18:	dd14      	ble.n	801ff44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ff1a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801ff1e:	d411      	bmi.n	801ff44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ff20:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801ff24:	4564      	cmp	r4, ip
 801ff26:	dd0d      	ble.n	801ff44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ff28:	b22d      	sxth	r5, r5
 801ff2a:	fb0c 7505 	mla	r5, ip, r5, r7
 801ff2e:	9c01      	ldr	r4, [sp, #4]
 801ff30:	5d64      	ldrb	r4, [r4, r5]
 801ff32:	2cff      	cmp	r4, #255	@ 0xff
 801ff34:	d10c      	bne.n	801ff50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801ff36:	9c00      	ldr	r4, [sp, #0]
 801ff38:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801ff3c:	f06f 0401 	mvn.w	r4, #1
 801ff40:	4374      	muls	r4, r6
 801ff42:	5305      	strh	r5, [r0, r4]
 801ff44:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801ff46:	4421      	add	r1, r4
 801ff48:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801ff4a:	3e01      	subs	r6, #1
 801ff4c:	4422      	add	r2, r4
 801ff4e:	e79c      	b.n	801fe8a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801ff50:	2c00      	cmp	r4, #0
 801ff52:	d0f7      	beq.n	801ff44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ff54:	9f00      	ldr	r7, [sp, #0]
 801ff56:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801ff5a:	f06f 0501 	mvn.w	r5, #1
 801ff5e:	4375      	muls	r5, r6
 801ff60:	9502      	str	r5, [sp, #8]
 801ff62:	5b45      	ldrh	r5, [r0, r5]
 801ff64:	fa1f fc84 	uxth.w	ip, r4
 801ff68:	122f      	asrs	r7, r5, #8
 801ff6a:	43e4      	mvns	r4, r4
 801ff6c:	b2e4      	uxtb	r4, r4
 801ff6e:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801ff72:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801ff76:	fb17 f704 	smulbb	r7, r7, r4
 801ff7a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ff7e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801ff82:	00ed      	lsls	r5, r5, #3
 801ff84:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801ff88:	b2ed      	uxtb	r5, r5
 801ff8a:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801ff8e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801ff92:	fb15 f504 	smulbb	r5, r5, r4
 801ff96:	fa5f f989 	uxtb.w	r9, r9
 801ff9a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801ff9e:	fb09 550c 	mla	r5, r9, ip, r5
 801ffa2:	fb1a fa04 	smulbb	sl, sl, r4
 801ffa6:	fa1f fe8e 	uxth.w	lr, lr
 801ffaa:	b2ad      	uxth	r5, r5
 801ffac:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801ffb0:	fb07 a70c 	mla	r7, r7, ip, sl
 801ffb4:	f10e 0401 	add.w	r4, lr, #1
 801ffb8:	f105 0a01 	add.w	sl, r5, #1
 801ffbc:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801ffc0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ffc4:	b2bf      	uxth	r7, r7
 801ffc6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ffca:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 801ffce:	ea4a 0e0e 	orr.w	lr, sl, lr
 801ffd2:	f107 0a01 	add.w	sl, r7, #1
 801ffd6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801ffda:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ffde:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801ffe2:	9c02      	ldr	r4, [sp, #8]
 801ffe4:	ea4e 0e0a 	orr.w	lr, lr, sl
 801ffe8:	f820 e004 	strh.w	lr, [r0, r4]
 801ffec:	e7aa      	b.n	801ff44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ffee:	f04f 0900 	mov.w	r9, #0
 801fff2:	eba3 0409 	sub.w	r4, r3, r9
 801fff6:	2c00      	cmp	r4, #0
 801fff8:	f77f af4a 	ble.w	801fe90 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801fffc:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8020000:	1414      	asrs	r4, r2, #16
 8020002:	140d      	asrs	r5, r1, #16
 8020004:	fb06 5504 	mla	r5, r6, r4, r5
 8020008:	9c01      	ldr	r4, [sp, #4]
 802000a:	5d64      	ldrb	r4, [r4, r5]
 802000c:	2cff      	cmp	r4, #255	@ 0xff
 802000e:	d10b      	bne.n	8020028 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8020010:	9c00      	ldr	r4, [sp, #0]
 8020012:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8020016:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 802001a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 802001c:	4421      	add	r1, r4
 802001e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8020020:	f109 0901 	add.w	r9, r9, #1
 8020024:	4422      	add	r2, r4
 8020026:	e7e4      	b.n	801fff2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020028:	2c00      	cmp	r4, #0
 802002a:	d0f6      	beq.n	802001a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 802002c:	9e00      	ldr	r6, [sp, #0]
 802002e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8020032:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8020036:	b2a7      	uxth	r7, r4
 8020038:	122e      	asrs	r6, r5, #8
 802003a:	43e4      	mvns	r4, r4
 802003c:	b2e4      	uxtb	r4, r4
 802003e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8020042:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8020046:	fb16 f604 	smulbb	r6, r6, r4
 802004a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 802004e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8020052:	00ed      	lsls	r5, r5, #3
 8020054:	fb0c 6c07 	mla	ip, ip, r7, r6
 8020058:	b2ed      	uxtb	r5, r5
 802005a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 802005e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020062:	fb15 f504 	smulbb	r5, r5, r4
 8020066:	fa5f fe8e 	uxtb.w	lr, lr
 802006a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 802006e:	fb0e 5507 	mla	r5, lr, r7, r5
 8020072:	fb1a fa04 	smulbb	sl, sl, r4
 8020076:	fa1f fc8c 	uxth.w	ip, ip
 802007a:	b2ad      	uxth	r5, r5
 802007c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8020080:	fb06 a607 	mla	r6, r6, r7, sl
 8020084:	f10c 0401 	add.w	r4, ip, #1
 8020088:	f105 0a01 	add.w	sl, r5, #1
 802008c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8020090:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8020094:	b2b6      	uxth	r6, r6
 8020096:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 802009a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 802009e:	ea4a 0c0c 	orr.w	ip, sl, ip
 80200a2:	f106 0a01 	add.w	sl, r6, #1
 80200a6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80200aa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80200ae:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80200b2:	ea4c 0c0a 	orr.w	ip, ip, sl
 80200b6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80200ba:	e7ae      	b.n	802001a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80200bc:	b005      	add	sp, #20
 80200be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080200c2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80200c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80200c6:	b085      	sub	sp, #20
 80200c8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80200ca:	9203      	str	r2, [sp, #12]
 80200cc:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 80200d0:	9201      	str	r2, [sp, #4]
 80200d2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80200d6:	9100      	str	r1, [sp, #0]
 80200d8:	6841      	ldr	r1, [r0, #4]
 80200da:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 80200de:	fb01 2404 	mla	r4, r1, r4, r2
 80200e2:	6802      	ldr	r2, [r0, #0]
 80200e4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80200e8:	f8de 2000 	ldr.w	r2, [lr]
 80200ec:	9202      	str	r2, [sp, #8]
 80200ee:	9a01      	ldr	r2, [sp, #4]
 80200f0:	43d6      	mvns	r6, r2
 80200f2:	b2f6      	uxtb	r6, r6
 80200f4:	9a00      	ldr	r2, [sp, #0]
 80200f6:	2a00      	cmp	r2, #0
 80200f8:	dc03      	bgt.n	8020102 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80200fa:	9a03      	ldr	r2, [sp, #12]
 80200fc:	2a00      	cmp	r2, #0
 80200fe:	f340 8124 	ble.w	802034a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8020102:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8020104:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8020108:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 802010c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8020110:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8020112:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8020116:	2b00      	cmp	r3, #0
 8020118:	dd0e      	ble.n	8020138 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802011a:	1408      	asrs	r0, r1, #16
 802011c:	d405      	bmi.n	802012a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802011e:	4560      	cmp	r0, ip
 8020120:	da03      	bge.n	802012a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8020122:	1410      	asrs	r0, r2, #16
 8020124:	d401      	bmi.n	802012a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8020126:	42b8      	cmp	r0, r7
 8020128:	db07      	blt.n	802013a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802012a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802012c:	4401      	add	r1, r0
 802012e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8020130:	3b01      	subs	r3, #1
 8020132:	4402      	add	r2, r0
 8020134:	3402      	adds	r4, #2
 8020136:	e7ee      	b.n	8020116 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8020138:	d06e      	beq.n	8020218 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 802013a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802013c:	1e58      	subs	r0, r3, #1
 802013e:	fb05 1500 	mla	r5, r5, r0, r1
 8020142:	142d      	asrs	r5, r5, #16
 8020144:	d45c      	bmi.n	8020200 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8020146:	4565      	cmp	r5, ip
 8020148:	da5a      	bge.n	8020200 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 802014a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802014c:	fb05 2000 	mla	r0, r5, r0, r2
 8020150:	1400      	asrs	r0, r0, #16
 8020152:	d455      	bmi.n	8020200 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8020154:	42b8      	cmp	r0, r7
 8020156:	da53      	bge.n	8020200 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8020158:	f8bd b004 	ldrh.w	fp, [sp, #4]
 802015c:	4699      	mov	r9, r3
 802015e:	46a2      	mov	sl, r4
 8020160:	f1b9 0f00 	cmp.w	r9, #0
 8020164:	dd54      	ble.n	8020210 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8020166:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 802016a:	140d      	asrs	r5, r1, #16
 802016c:	1410      	asrs	r0, r2, #16
 802016e:	fb07 5000 	mla	r0, r7, r0, r5
 8020172:	9d02      	ldr	r5, [sp, #8]
 8020174:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8020178:	f8ba 5000 	ldrh.w	r5, [sl]
 802017c:	122f      	asrs	r7, r5, #8
 802017e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8020182:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8020186:	fb17 f706 	smulbb	r7, r7, r6
 802018a:	ea4f 08e5 	mov.w	r8, r5, asr #3
 802018e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8020192:	00ed      	lsls	r5, r5, #3
 8020194:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8020198:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 802019c:	10c7      	asrs	r7, r0, #3
 802019e:	b2ed      	uxtb	r5, r5
 80201a0:	00c0      	lsls	r0, r0, #3
 80201a2:	fb18 f806 	smulbb	r8, r8, r6
 80201a6:	fb15 f506 	smulbb	r5, r5, r6
 80201aa:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80201ae:	b2c0      	uxtb	r0, r0
 80201b0:	fa1f fc8c 	uxth.w	ip, ip
 80201b4:	fb07 870b 	mla	r7, r7, fp, r8
 80201b8:	fb00 500b 	mla	r0, r0, fp, r5
 80201bc:	b280      	uxth	r0, r0
 80201be:	b2bf      	uxth	r7, r7
 80201c0:	f10c 0501 	add.w	r5, ip, #1
 80201c4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80201c8:	f107 0801 	add.w	r8, r7, #1
 80201cc:	1c45      	adds	r5, r0, #1
 80201ce:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80201d2:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80201d6:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80201d8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80201dc:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80201e0:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80201e4:	ea45 0c0c 	orr.w	ip, r5, ip
 80201e8:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80201ec:	4401      	add	r1, r0
 80201ee:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80201f0:	ea4c 0c08 	orr.w	ip, ip, r8
 80201f4:	f82a cb02 	strh.w	ip, [sl], #2
 80201f8:	4402      	add	r2, r0
 80201fa:	f109 39ff 	add.w	r9, r9, #4294967295
 80201fe:	e7af      	b.n	8020160 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8020200:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8020204:	f04f 0800 	mov.w	r8, #0
 8020208:	eb03 0008 	add.w	r0, r3, r8
 802020c:	2800      	cmp	r0, #0
 802020e:	dc41      	bgt.n	8020294 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8020210:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020214:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8020218:	9b00      	ldr	r3, [sp, #0]
 802021a:	2b00      	cmp	r3, #0
 802021c:	f340 8095 	ble.w	802034a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8020220:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020224:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020228:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802022c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802022e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020232:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020236:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802023a:	eef0 6a62 	vmov.f32	s13, s5
 802023e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020242:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020246:	ee77 2a62 	vsub.f32	s5, s14, s5
 802024a:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 802024e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020252:	eef0 6a43 	vmov.f32	s13, s6
 8020256:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802025a:	ee12 2a90 	vmov	r2, s5
 802025e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020262:	fb92 f3f3 	sdiv	r3, r2, r3
 8020266:	ee13 2a10 	vmov	r2, s6
 802026a:	9311      	str	r3, [sp, #68]	@ 0x44
 802026c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802026e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020272:	9312      	str	r3, [sp, #72]	@ 0x48
 8020274:	9b00      	ldr	r3, [sp, #0]
 8020276:	9a03      	ldr	r2, [sp, #12]
 8020278:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802027c:	3b01      	subs	r3, #1
 802027e:	9300      	str	r3, [sp, #0]
 8020280:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8020284:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8020286:	eeb0 3a67 	vmov.f32	s6, s15
 802028a:	bf08      	it	eq
 802028c:	4613      	moveq	r3, r2
 802028e:	eef0 2a47 	vmov.f32	s5, s14
 8020292:	e72f      	b.n	80200f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8020294:	140f      	asrs	r7, r1, #16
 8020296:	d451      	bmi.n	802033c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8020298:	f8de 5008 	ldr.w	r5, [lr, #8]
 802029c:	42bd      	cmp	r5, r7
 802029e:	dd4d      	ble.n	802033c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80202a0:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80202a4:	d44a      	bmi.n	802033c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80202a6:	f8de 000c 	ldr.w	r0, [lr, #12]
 80202aa:	4560      	cmp	r0, ip
 80202ac:	dd46      	ble.n	802033c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80202ae:	b22d      	sxth	r5, r5
 80202b0:	fb0c 7505 	mla	r5, ip, r5, r7
 80202b4:	9802      	ldr	r0, [sp, #8]
 80202b6:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 80202ba:	f06f 0501 	mvn.w	r5, #1
 80202be:	fb05 fb08 	mul.w	fp, r5, r8
 80202c2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80202c6:	f834 500b 	ldrh.w	r5, [r4, fp]
 80202ca:	122f      	asrs	r7, r5, #8
 80202cc:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80202d0:	fb17 f706 	smulbb	r7, r7, r6
 80202d4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80202d8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80202dc:	00ed      	lsls	r5, r5, #3
 80202de:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80202e2:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80202e6:	10c7      	asrs	r7, r0, #3
 80202e8:	b2ed      	uxtb	r5, r5
 80202ea:	00c0      	lsls	r0, r0, #3
 80202ec:	fb19 f906 	smulbb	r9, r9, r6
 80202f0:	fb15 f506 	smulbb	r5, r5, r6
 80202f4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80202f8:	b2c0      	uxtb	r0, r0
 80202fa:	fa1f fc8c 	uxth.w	ip, ip
 80202fe:	fb07 970a 	mla	r7, r7, sl, r9
 8020302:	fb00 500a 	mla	r0, r0, sl, r5
 8020306:	b2bf      	uxth	r7, r7
 8020308:	b280      	uxth	r0, r0
 802030a:	f10c 0501 	add.w	r5, ip, #1
 802030e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8020312:	f107 0901 	add.w	r9, r7, #1
 8020316:	1c45      	adds	r5, r0, #1
 8020318:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 802031c:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8020320:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8020324:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8020328:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802032c:	ea45 0c0c 	orr.w	ip, r5, ip
 8020330:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8020334:	ea4c 0c09 	orr.w	ip, ip, r9
 8020338:	f824 c00b 	strh.w	ip, [r4, fp]
 802033c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802033e:	4401      	add	r1, r0
 8020340:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8020342:	f108 38ff 	add.w	r8, r8, #4294967295
 8020346:	4402      	add	r2, r0
 8020348:	e75e      	b.n	8020208 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 802034a:	b005      	add	sp, #20
 802034c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020350 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020350:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020354:	b085      	sub	sp, #20
 8020356:	4693      	mov	fp, r2
 8020358:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 802035a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802035c:	6870      	ldr	r0, [r6, #4]
 802035e:	9101      	str	r1, [sp, #4]
 8020360:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8020364:	fb00 2404 	mla	r4, r0, r4, r2
 8020368:	6832      	ldr	r2, [r6, #0]
 802036a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 802036e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8020372:	682a      	ldr	r2, [r5, #0]
 8020374:	9202      	str	r2, [sp, #8]
 8020376:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 802037a:	9a01      	ldr	r2, [sp, #4]
 802037c:	2a00      	cmp	r2, #0
 802037e:	dc03      	bgt.n	8020388 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8020380:	f1bb 0f00 	cmp.w	fp, #0
 8020384:	f340 809a 	ble.w	80204bc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8020388:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802038a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 802038e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8020392:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8020396:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8020398:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 802039c:	2b00      	cmp	r3, #0
 802039e:	dd0c      	ble.n	80203ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80203a0:	1406      	asrs	r6, r0, #16
 80203a2:	d405      	bmi.n	80203b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80203a4:	454e      	cmp	r6, r9
 80203a6:	da03      	bge.n	80203b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80203a8:	1416      	asrs	r6, r2, #16
 80203aa:	d401      	bmi.n	80203b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80203ac:	4546      	cmp	r6, r8
 80203ae:	db05      	blt.n	80203bc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80203b0:	4470      	add	r0, lr
 80203b2:	4462      	add	r2, ip
 80203b4:	3b01      	subs	r3, #1
 80203b6:	3402      	adds	r4, #2
 80203b8:	e7f0      	b.n	802039c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80203ba:	d00f      	beq.n	80203dc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80203bc:	1e5e      	subs	r6, r3, #1
 80203be:	fb0e 0706 	mla	r7, lr, r6, r0
 80203c2:	143f      	asrs	r7, r7, #16
 80203c4:	d541      	bpl.n	802044a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80203c6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80203ca:	4698      	mov	r8, r3
 80203cc:	9603      	str	r6, [sp, #12]
 80203ce:	f1b8 0f00 	cmp.w	r8, #0
 80203d2:	dc56      	bgt.n	8020482 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 80203d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80203d8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80203dc:	9b01      	ldr	r3, [sp, #4]
 80203de:	2b00      	cmp	r3, #0
 80203e0:	dd6c      	ble.n	80204bc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80203e2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80203e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80203ea:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80203ee:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80203f0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80203f4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80203f8:	eeb0 6a62 	vmov.f32	s12, s5
 80203fc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020400:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020404:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020408:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 802040c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020410:	eeb0 6a43 	vmov.f32	s12, s6
 8020414:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020418:	ee12 2a90 	vmov	r2, s5
 802041c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020420:	fb92 fef3 	sdiv	lr, r2, r3
 8020424:	ee13 2a10 	vmov	r2, s6
 8020428:	fb92 fcf3 	sdiv	ip, r2, r3
 802042c:	9b01      	ldr	r3, [sp, #4]
 802042e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020432:	3b01      	subs	r3, #1
 8020434:	9301      	str	r3, [sp, #4]
 8020436:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 802043a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802043c:	eeb0 3a67 	vmov.f32	s6, s15
 8020440:	bf08      	it	eq
 8020442:	465b      	moveq	r3, fp
 8020444:	eef0 2a47 	vmov.f32	s5, s14
 8020448:	e797      	b.n	802037a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 802044a:	454f      	cmp	r7, r9
 802044c:	dabb      	bge.n	80203c6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802044e:	fb0c 2606 	mla	r6, ip, r6, r2
 8020452:	1436      	asrs	r6, r6, #16
 8020454:	d4b7      	bmi.n	80203c6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8020456:	4546      	cmp	r6, r8
 8020458:	dab5      	bge.n	80203c6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802045a:	461e      	mov	r6, r3
 802045c:	46a0      	mov	r8, r4
 802045e:	2e00      	cmp	r6, #0
 8020460:	ddb8      	ble.n	80203d4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8020462:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8020466:	9902      	ldr	r1, [sp, #8]
 8020468:	1417      	asrs	r7, r2, #16
 802046a:	ea4f 4920 	mov.w	r9, r0, asr #16
 802046e:	fb0a 9707 	mla	r7, sl, r7, r9
 8020472:	4470      	add	r0, lr
 8020474:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8020478:	f828 7b02 	strh.w	r7, [r8], #2
 802047c:	4462      	add	r2, ip
 802047e:	3e01      	subs	r6, #1
 8020480:	e7ed      	b.n	802045e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8020482:	ea5f 4920 	movs.w	r9, r0, asr #16
 8020486:	d414      	bmi.n	80204b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8020488:	68ae      	ldr	r6, [r5, #8]
 802048a:	454e      	cmp	r6, r9
 802048c:	dd11      	ble.n	80204b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 802048e:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8020492:	d40e      	bmi.n	80204b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8020494:	68ef      	ldr	r7, [r5, #12]
 8020496:	4557      	cmp	r7, sl
 8020498:	dd0b      	ble.n	80204b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 802049a:	b236      	sxth	r6, r6
 802049c:	fb0a 9606 	mla	r6, sl, r6, r9
 80204a0:	9f02      	ldr	r7, [sp, #8]
 80204a2:	f06f 0101 	mvn.w	r1, #1
 80204a6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80204aa:	fb01 f608 	mul.w	r6, r1, r8
 80204ae:	9903      	ldr	r1, [sp, #12]
 80204b0:	538f      	strh	r7, [r1, r6]
 80204b2:	4470      	add	r0, lr
 80204b4:	4462      	add	r2, ip
 80204b6:	f108 38ff 	add.w	r8, r8, #4294967295
 80204ba:	e788      	b.n	80203ce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80204bc:	b005      	add	sp, #20
 80204be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080204c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80204c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80204c6:	b087      	sub	sp, #28
 80204c8:	468b      	mov	fp, r1
 80204ca:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80204cc:	9203      	str	r2, [sp, #12]
 80204ce:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80204d2:	9204      	str	r2, [sp, #16]
 80204d4:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 80204d8:	6841      	ldr	r1, [r0, #4]
 80204da:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 80204de:	fb01 2505 	mla	r5, r1, r5, r2
 80204e2:	6802      	ldr	r2, [r0, #0]
 80204e4:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80204e8:	f8d9 2000 	ldr.w	r2, [r9]
 80204ec:	9201      	str	r2, [sp, #4]
 80204ee:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80204f2:	f1bb 0f00 	cmp.w	fp, #0
 80204f6:	dc03      	bgt.n	8020500 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80204f8:	9a03      	ldr	r2, [sp, #12]
 80204fa:	2a00      	cmp	r2, #0
 80204fc:	f340 8159 	ble.w	80207b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8020500:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8020502:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8020506:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 802050a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 802050e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8020510:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8020514:	2b00      	cmp	r3, #0
 8020516:	dd0e      	ble.n	8020536 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8020518:	1402      	asrs	r2, r0, #16
 802051a:	d405      	bmi.n	8020528 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802051c:	42ba      	cmp	r2, r7
 802051e:	da03      	bge.n	8020528 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8020520:	140a      	asrs	r2, r1, #16
 8020522:	d401      	bmi.n	8020528 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8020524:	42b2      	cmp	r2, r6
 8020526:	db07      	blt.n	8020538 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8020528:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802052a:	4410      	add	r0, r2
 802052c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802052e:	3b01      	subs	r3, #1
 8020530:	4411      	add	r1, r2
 8020532:	3502      	adds	r5, #2
 8020534:	e7ee      	b.n	8020514 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8020536:	d017      	beq.n	8020568 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8020538:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 802053a:	1e5a      	subs	r2, r3, #1
 802053c:	fb04 0402 	mla	r4, r4, r2, r0
 8020540:	1424      	asrs	r4, r4, #16
 8020542:	d409      	bmi.n	8020558 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8020544:	42bc      	cmp	r4, r7
 8020546:	da07      	bge.n	8020558 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8020548:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 802054a:	fb04 1202 	mla	r2, r4, r2, r1
 802054e:	1412      	asrs	r2, r2, #16
 8020550:	d402      	bmi.n	8020558 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8020552:	42b2      	cmp	r2, r6
 8020554:	f2c0 80bf 	blt.w	80206d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020558:	2700      	movs	r7, #0
 802055a:	19da      	adds	r2, r3, r7
 802055c:	2a00      	cmp	r2, #0
 802055e:	dc3e      	bgt.n	80205de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8020560:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020564:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8020568:	f1bb 0f00 	cmp.w	fp, #0
 802056c:	f340 8121 	ble.w	80207b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8020570:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020574:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020578:	eec6 7a80 	vdiv.f32	s15, s13, s0
 802057c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802057e:	f1bb 0b01 	subs.w	fp, fp, #1
 8020582:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020586:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802058a:	eeb0 6a62 	vmov.f32	s12, s5
 802058e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020592:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020596:	ee77 2a62 	vsub.f32	s5, s14, s5
 802059a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 802059e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80205a2:	eeb0 6a43 	vmov.f32	s12, s6
 80205a6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80205aa:	ee12 2a90 	vmov	r2, s5
 80205ae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80205b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80205b6:	ee13 2a10 	vmov	r2, s6
 80205ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80205be:	9313      	str	r3, [sp, #76]	@ 0x4c
 80205c0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80205c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80205c6:	9a03      	ldr	r2, [sp, #12]
 80205c8:	9314      	str	r3, [sp, #80]	@ 0x50
 80205ca:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80205ce:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80205d0:	eeb0 3a67 	vmov.f32	s6, s15
 80205d4:	bf08      	it	eq
 80205d6:	4613      	moveq	r3, r2
 80205d8:	eef0 2a47 	vmov.f32	s5, s14
 80205dc:	e789      	b.n	80204f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80205de:	1406      	asrs	r6, r0, #16
 80205e0:	d42d      	bmi.n	802063e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80205e2:	f8d9 4008 	ldr.w	r4, [r9, #8]
 80205e6:	42b4      	cmp	r4, r6
 80205e8:	dd29      	ble.n	802063e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80205ea:	ea5f 4c21 	movs.w	ip, r1, asr #16
 80205ee:	d426      	bmi.n	802063e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80205f0:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80205f4:	4562      	cmp	r2, ip
 80205f6:	dd22      	ble.n	802063e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80205f8:	b224      	sxth	r4, r4
 80205fa:	9a01      	ldr	r2, [sp, #4]
 80205fc:	fb0c 6404 	mla	r4, ip, r4, r6
 8020600:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8020604:	0e22      	lsrs	r2, r4, #24
 8020606:	d01a      	beq.n	802063e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8020608:	9e04      	ldr	r6, [sp, #16]
 802060a:	4372      	muls	r2, r6
 802060c:	1c56      	adds	r6, r2, #1
 802060e:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8020612:	1212      	asrs	r2, r2, #8
 8020614:	0a26      	lsrs	r6, r4, #8
 8020616:	2aff      	cmp	r2, #255	@ 0xff
 8020618:	9605      	str	r6, [sp, #20]
 802061a:	d116      	bne.n	802064a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 802061c:	f06f 0201 	mvn.w	r2, #1
 8020620:	fb02 fc07 	mul.w	ip, r2, r7
 8020624:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8020628:	0962      	lsrs	r2, r4, #5
 802062a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802062e:	f026 0607 	bic.w	r6, r6, #7
 8020632:	4316      	orrs	r6, r2
 8020634:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8020638:	4326      	orrs	r6, r4
 802063a:	f825 600c 	strh.w	r6, [r5, ip]
 802063e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8020640:	4410      	add	r0, r2
 8020642:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8020644:	3f01      	subs	r7, #1
 8020646:	4411      	add	r1, r2
 8020648:	e787      	b.n	802055a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 802064a:	f06f 0601 	mvn.w	r6, #1
 802064e:	437e      	muls	r6, r7
 8020650:	fa1f fa82 	uxth.w	sl, r2
 8020654:	f835 8006 	ldrh.w	r8, [r5, r6]
 8020658:	9602      	str	r6, [sp, #8]
 802065a:	ea4f 2e28 	mov.w	lr, r8, asr #8
 802065e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8020662:	43d2      	mvns	r2, r2
 8020664:	b2d2      	uxtb	r2, r2
 8020666:	fb1c fc0a 	smulbb	ip, ip, sl
 802066a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 802066e:	fb0e ce02 	mla	lr, lr, r2, ip
 8020672:	b2e4      	uxtb	r4, r4
 8020674:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8020678:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 802067c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8020680:	fa5f f888 	uxtb.w	r8, r8
 8020684:	fb14 f40a 	smulbb	r4, r4, sl
 8020688:	fb08 4402 	mla	r4, r8, r2, r4
 802068c:	fa1f fe8e 	uxth.w	lr, lr
 8020690:	fb16 f60a 	smulbb	r6, r6, sl
 8020694:	b2a4      	uxth	r4, r4
 8020696:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 802069a:	fb0c 6c02 	mla	ip, ip, r2, r6
 802069e:	f10e 0201 	add.w	r2, lr, #1
 80206a2:	1c66      	adds	r6, r4, #1
 80206a4:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80206a8:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80206ac:	fa1f fc8c 	uxth.w	ip, ip
 80206b0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80206b4:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 80206b8:	ea46 0e0e 	orr.w	lr, r6, lr
 80206bc:	f10c 0601 	add.w	r6, ip, #1
 80206c0:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80206c4:	0976      	lsrs	r6, r6, #5
 80206c6:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80206ca:	9a02      	ldr	r2, [sp, #8]
 80206cc:	ea4e 0e06 	orr.w	lr, lr, r6
 80206d0:	f825 e002 	strh.w	lr, [r5, r2]
 80206d4:	e7b3      	b.n	802063e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80206d6:	f04f 0800 	mov.w	r8, #0
 80206da:	eba3 0208 	sub.w	r2, r3, r8
 80206de:	2a00      	cmp	r2, #0
 80206e0:	f77f af3e 	ble.w	8020560 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80206e4:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 80206e8:	1404      	asrs	r4, r0, #16
 80206ea:	140a      	asrs	r2, r1, #16
 80206ec:	fb06 4202 	mla	r2, r6, r2, r4
 80206f0:	9c01      	ldr	r4, [sp, #4]
 80206f2:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 80206f6:	0e22      	lsrs	r2, r4, #24
 80206f8:	d016      	beq.n	8020728 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80206fa:	9e04      	ldr	r6, [sp, #16]
 80206fc:	4372      	muls	r2, r6
 80206fe:	1c56      	adds	r6, r2, #1
 8020700:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8020704:	1212      	asrs	r2, r2, #8
 8020706:	2aff      	cmp	r2, #255	@ 0xff
 8020708:	ea4f 2614 	mov.w	r6, r4, lsr #8
 802070c:	d113      	bne.n	8020736 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 802070e:	0962      	lsrs	r2, r4, #5
 8020710:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8020714:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020718:	f026 0607 	bic.w	r6, r6, #7
 802071c:	4316      	orrs	r6, r2
 802071e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8020722:	4326      	orrs	r6, r4
 8020724:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8020728:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802072a:	4410      	add	r0, r2
 802072c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802072e:	f108 0801 	add.w	r8, r8, #1
 8020732:	4411      	add	r1, r2
 8020734:	e7d1      	b.n	80206da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8020736:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 802073a:	fa1f fa82 	uxth.w	sl, r2
 802073e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8020742:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8020746:	43d2      	mvns	r2, r2
 8020748:	b2d2      	uxtb	r2, r2
 802074a:	fb17 f70a 	smulbb	r7, r7, sl
 802074e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8020752:	fb0c 7c02 	mla	ip, ip, r2, r7
 8020756:	b2e4      	uxtb	r4, r4
 8020758:	ea4f 07ee 	mov.w	r7, lr, asr #3
 802075c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020760:	fa5f fe8e 	uxtb.w	lr, lr
 8020764:	fb14 f40a 	smulbb	r4, r4, sl
 8020768:	fb0e 4402 	mla	r4, lr, r2, r4
 802076c:	b2f6      	uxtb	r6, r6
 802076e:	fa1f fc8c 	uxth.w	ip, ip
 8020772:	fb16 f60a 	smulbb	r6, r6, sl
 8020776:	b2a4      	uxth	r4, r4
 8020778:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 802077c:	fb07 6702 	mla	r7, r7, r2, r6
 8020780:	f10c 0201 	add.w	r2, ip, #1
 8020784:	1c66      	adds	r6, r4, #1
 8020786:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 802078a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 802078e:	b2bf      	uxth	r7, r7
 8020790:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8020794:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8020798:	ea46 0c0c 	orr.w	ip, r6, ip
 802079c:	1c7e      	adds	r6, r7, #1
 802079e:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80207a2:	0976      	lsrs	r6, r6, #5
 80207a4:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80207a8:	ea4c 0c06 	orr.w	ip, ip, r6
 80207ac:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 80207b0:	e7ba      	b.n	8020728 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80207b2:	b007      	add	sp, #28
 80207b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080207b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80207b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80207bc:	b085      	sub	sp, #20
 80207be:	468b      	mov	fp, r1
 80207c0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80207c2:	9203      	str	r2, [sp, #12]
 80207c4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80207c8:	6841      	ldr	r1, [r0, #4]
 80207ca:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 80207ce:	fb01 2404 	mla	r4, r1, r4, r2
 80207d2:	6802      	ldr	r2, [r0, #0]
 80207d4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80207d8:	f8d8 2000 	ldr.w	r2, [r8]
 80207dc:	9201      	str	r2, [sp, #4]
 80207de:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80207e2:	f1bb 0f00 	cmp.w	fp, #0
 80207e6:	dc03      	bgt.n	80207f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80207e8:	9a03      	ldr	r2, [sp, #12]
 80207ea:	2a00      	cmp	r2, #0
 80207ec:	f340 814f 	ble.w	8020a8e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80207f0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80207f2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80207f6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80207fa:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80207fe:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8020800:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8020804:	2b00      	cmp	r3, #0
 8020806:	dd0e      	ble.n	8020826 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020808:	1408      	asrs	r0, r1, #16
 802080a:	d405      	bmi.n	8020818 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 802080c:	42b8      	cmp	r0, r7
 802080e:	da03      	bge.n	8020818 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8020810:	1410      	asrs	r0, r2, #16
 8020812:	d401      	bmi.n	8020818 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8020814:	42b0      	cmp	r0, r6
 8020816:	db07      	blt.n	8020828 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020818:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802081a:	4401      	add	r1, r0
 802081c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 802081e:	3b01      	subs	r3, #1
 8020820:	4402      	add	r2, r0
 8020822:	3402      	adds	r4, #2
 8020824:	e7ee      	b.n	8020804 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8020826:	d017      	beq.n	8020858 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8020828:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802082a:	1e58      	subs	r0, r3, #1
 802082c:	fb05 1500 	mla	r5, r5, r0, r1
 8020830:	142d      	asrs	r5, r5, #16
 8020832:	d409      	bmi.n	8020848 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020834:	42bd      	cmp	r5, r7
 8020836:	da07      	bge.n	8020848 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020838:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802083a:	fb05 2000 	mla	r0, r5, r0, r2
 802083e:	1400      	asrs	r0, r0, #16
 8020840:	d402      	bmi.n	8020848 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020842:	42b0      	cmp	r0, r6
 8020844:	f2c0 80ba 	blt.w	80209bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020848:	2600      	movs	r6, #0
 802084a:	1998      	adds	r0, r3, r6
 802084c:	2800      	cmp	r0, #0
 802084e:	dc3e      	bgt.n	80208ce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020850:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020854:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8020858:	f1bb 0f00 	cmp.w	fp, #0
 802085c:	f340 8117 	ble.w	8020a8e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8020860:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020864:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020868:	eec6 7a80 	vdiv.f32	s15, s13, s0
 802086c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802086e:	f1bb 0b01 	subs.w	fp, fp, #1
 8020872:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020876:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802087a:	eeb0 6a62 	vmov.f32	s12, s5
 802087e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020882:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020886:	ee77 2a62 	vsub.f32	s5, s14, s5
 802088a:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 802088e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020892:	eeb0 6a43 	vmov.f32	s12, s6
 8020896:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802089a:	ee12 2a90 	vmov	r2, s5
 802089e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80208a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80208a6:	ee13 2a10 	vmov	r2, s6
 80208aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80208ae:	9311      	str	r3, [sp, #68]	@ 0x44
 80208b0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80208b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80208b6:	9a03      	ldr	r2, [sp, #12]
 80208b8:	9312      	str	r3, [sp, #72]	@ 0x48
 80208ba:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80208be:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80208c0:	eeb0 3a67 	vmov.f32	s6, s15
 80208c4:	bf08      	it	eq
 80208c6:	4613      	moveq	r3, r2
 80208c8:	eef0 2a47 	vmov.f32	s5, s14
 80208cc:	e789      	b.n	80207e2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80208ce:	140f      	asrs	r7, r1, #16
 80208d0:	d424      	bmi.n	802091c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80208d2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80208d6:	42bd      	cmp	r5, r7
 80208d8:	dd20      	ble.n	802091c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80208da:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80208de:	d41d      	bmi.n	802091c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80208e0:	f8d8 000c 	ldr.w	r0, [r8, #12]
 80208e4:	4560      	cmp	r0, ip
 80208e6:	dd19      	ble.n	802091c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80208e8:	b22d      	sxth	r5, r5
 80208ea:	fb0c 7505 	mla	r5, ip, r5, r7
 80208ee:	9801      	ldr	r0, [sp, #4]
 80208f0:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 80208f4:	0e07      	lsrs	r7, r0, #24
 80208f6:	2fff      	cmp	r7, #255	@ 0xff
 80208f8:	d116      	bne.n	8020928 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80208fa:	f06f 0501 	mvn.w	r5, #1
 80208fe:	fb05 f706 	mul.w	r7, r5, r6
 8020902:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8020906:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 802090a:	0945      	lsrs	r5, r0, #5
 802090c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8020910:	ea4c 0505 	orr.w	r5, ip, r5
 8020914:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8020918:	4305      	orrs	r5, r0
 802091a:	53e5      	strh	r5, [r4, r7]
 802091c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802091e:	4401      	add	r1, r0
 8020920:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8020922:	3e01      	subs	r6, #1
 8020924:	4402      	add	r2, r0
 8020926:	e790      	b.n	802084a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020928:	b2fd      	uxtb	r5, r7
 802092a:	2f00      	cmp	r7, #0
 802092c:	d0f6      	beq.n	802091c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802092e:	f06f 0701 	mvn.w	r7, #1
 8020932:	4377      	muls	r7, r6
 8020934:	fa1f f985 	uxth.w	r9, r5
 8020938:	f834 e007 	ldrh.w	lr, [r4, r7]
 802093c:	9702      	str	r7, [sp, #8]
 802093e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8020942:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8020946:	43ed      	mvns	r5, r5
 8020948:	b2ed      	uxtb	r5, r5
 802094a:	fb17 f709 	smulbb	r7, r7, r9
 802094e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8020952:	fb0c 7c05 	mla	ip, ip, r5, r7
 8020956:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 802095a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 802095e:	b2c0      	uxtb	r0, r0
 8020960:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020964:	fa5f fe8e 	uxtb.w	lr, lr
 8020968:	fb10 f009 	smulbb	r0, r0, r9
 802096c:	fb0e 0005 	mla	r0, lr, r5, r0
 8020970:	b280      	uxth	r0, r0
 8020972:	fa1f fc8c 	uxth.w	ip, ip
 8020976:	fb1a fa09 	smulbb	sl, sl, r9
 802097a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 802097e:	fb07 a705 	mla	r7, r7, r5, sl
 8020982:	f100 0a01 	add.w	sl, r0, #1
 8020986:	f10c 0501 	add.w	r5, ip, #1
 802098a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 802098e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8020992:	b2bf      	uxth	r7, r7
 8020994:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8020998:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 802099c:	ea4a 0c0c 	orr.w	ip, sl, ip
 80209a0:	f107 0a01 	add.w	sl, r7, #1
 80209a4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80209a8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80209ac:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80209b0:	9802      	ldr	r0, [sp, #8]
 80209b2:	ea4c 0c0a 	orr.w	ip, ip, sl
 80209b6:	f824 c000 	strh.w	ip, [r4, r0]
 80209ba:	e7af      	b.n	802091c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80209bc:	f04f 0e00 	mov.w	lr, #0
 80209c0:	eba3 000e 	sub.w	r0, r3, lr
 80209c4:	2800      	cmp	r0, #0
 80209c6:	f77f af43 	ble.w	8020850 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80209ca:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80209ce:	140d      	asrs	r5, r1, #16
 80209d0:	1410      	asrs	r0, r2, #16
 80209d2:	fb06 5000 	mla	r0, r6, r0, r5
 80209d6:	9d01      	ldr	r5, [sp, #4]
 80209d8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80209dc:	0e2e      	lsrs	r6, r5, #24
 80209de:	2eff      	cmp	r6, #255	@ 0xff
 80209e0:	d112      	bne.n	8020a08 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 80209e2:	482c      	ldr	r0, [pc, #176]	@ (8020a94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 80209e4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80209e8:	0968      	lsrs	r0, r5, #5
 80209ea:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80209ee:	4330      	orrs	r0, r6
 80209f0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80209f4:	4328      	orrs	r0, r5
 80209f6:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 80209fa:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80209fc:	4401      	add	r1, r0
 80209fe:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8020a00:	f10e 0e01 	add.w	lr, lr, #1
 8020a04:	4402      	add	r2, r0
 8020a06:	e7db      	b.n	80209c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8020a08:	b2f0      	uxtb	r0, r6
 8020a0a:	2e00      	cmp	r6, #0
 8020a0c:	d0f5      	beq.n	80209fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8020a0e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8020a12:	fa1f f980 	uxth.w	r9, r0
 8020a16:	ea4f 272c 	mov.w	r7, ip, asr #8
 8020a1a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8020a1e:	43c0      	mvns	r0, r0
 8020a20:	b2c0      	uxtb	r0, r0
 8020a22:	fb16 f609 	smulbb	r6, r6, r9
 8020a26:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8020a2a:	fb07 6700 	mla	r7, r7, r0, r6
 8020a2e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8020a32:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8020a36:	b2ed      	uxtb	r5, r5
 8020a38:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020a3c:	fa5f fc8c 	uxtb.w	ip, ip
 8020a40:	fb15 f509 	smulbb	r5, r5, r9
 8020a44:	fb0c 5500 	mla	r5, ip, r0, r5
 8020a48:	b2bf      	uxth	r7, r7
 8020a4a:	fb1a fa09 	smulbb	sl, sl, r9
 8020a4e:	b2ad      	uxth	r5, r5
 8020a50:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8020a54:	fb06 a600 	mla	r6, r6, r0, sl
 8020a58:	1c78      	adds	r0, r7, #1
 8020a5a:	f105 0a01 	add.w	sl, r5, #1
 8020a5e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8020a62:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8020a66:	b2b6      	uxth	r6, r6
 8020a68:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8020a6c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8020a70:	ea4a 0707 	orr.w	r7, sl, r7
 8020a74:	f106 0a01 	add.w	sl, r6, #1
 8020a78:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8020a7c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020a80:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8020a84:	ea47 070a 	orr.w	r7, r7, sl
 8020a88:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8020a8c:	e7b5      	b.n	80209fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8020a8e:	b005      	add	sp, #20
 8020a90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020a94:	fffff800 	.word	0xfffff800

08020a98 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020a98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020a9c:	b087      	sub	sp, #28
 8020a9e:	468b      	mov	fp, r1
 8020aa0:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8020aa2:	9203      	str	r2, [sp, #12]
 8020aa4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8020aa8:	9204      	str	r2, [sp, #16]
 8020aaa:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8020aae:	6841      	ldr	r1, [r0, #4]
 8020ab0:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8020ab4:	fb01 2404 	mla	r4, r1, r4, r2
 8020ab8:	6802      	ldr	r2, [r0, #0]
 8020aba:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8020abe:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8020ac2:	3201      	adds	r2, #1
 8020ac4:	f022 0201 	bic.w	r2, r2, #1
 8020ac8:	9200      	str	r2, [sp, #0]
 8020aca:	f8d9 2000 	ldr.w	r2, [r9]
 8020ace:	9201      	str	r2, [sp, #4]
 8020ad0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8020ad4:	f1bb 0f00 	cmp.w	fp, #0
 8020ad8:	dc03      	bgt.n	8020ae2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8020ada:	9a03      	ldr	r2, [sp, #12]
 8020adc:	2a00      	cmp	r2, #0
 8020ade:	f340 8169 	ble.w	8020db4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8020ae2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8020ae4:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8020ae8:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8020aec:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8020af0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8020af2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8020af6:	2b00      	cmp	r3, #0
 8020af8:	dd0e      	ble.n	8020b18 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8020afa:	1402      	asrs	r2, r0, #16
 8020afc:	d405      	bmi.n	8020b0a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020afe:	42ba      	cmp	r2, r7
 8020b00:	da03      	bge.n	8020b0a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020b02:	140a      	asrs	r2, r1, #16
 8020b04:	d401      	bmi.n	8020b0a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020b06:	42b2      	cmp	r2, r6
 8020b08:	db07      	blt.n	8020b1a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8020b0a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8020b0c:	4410      	add	r0, r2
 8020b0e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8020b10:	3b01      	subs	r3, #1
 8020b12:	4411      	add	r1, r2
 8020b14:	3402      	adds	r4, #2
 8020b16:	e7ee      	b.n	8020af6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8020b18:	d017      	beq.n	8020b4a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8020b1a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8020b1c:	1e5a      	subs	r2, r3, #1
 8020b1e:	fb05 0502 	mla	r5, r5, r2, r0
 8020b22:	142d      	asrs	r5, r5, #16
 8020b24:	d409      	bmi.n	8020b3a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8020b26:	42bd      	cmp	r5, r7
 8020b28:	da07      	bge.n	8020b3a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8020b2a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8020b2c:	fb05 1202 	mla	r2, r5, r2, r1
 8020b30:	1412      	asrs	r2, r2, #16
 8020b32:	d402      	bmi.n	8020b3a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8020b34:	42b2      	cmp	r2, r6
 8020b36:	f2c0 80c7 	blt.w	8020cc8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8020b3a:	2700      	movs	r7, #0
 8020b3c:	19da      	adds	r2, r3, r7
 8020b3e:	2a00      	cmp	r2, #0
 8020b40:	dc3e      	bgt.n	8020bc0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8020b42:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020b46:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8020b4a:	f1bb 0f00 	cmp.w	fp, #0
 8020b4e:	f340 8131 	ble.w	8020db4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8020b52:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020b56:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020b5a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8020b5e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020b60:	f1bb 0b01 	subs.w	fp, fp, #1
 8020b64:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020b68:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020b6c:	eeb0 6a62 	vmov.f32	s12, s5
 8020b70:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020b74:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020b78:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020b7c:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8020b80:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020b84:	eeb0 6a43 	vmov.f32	s12, s6
 8020b88:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020b8c:	ee12 2a90 	vmov	r2, s5
 8020b90:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020b94:	fb92 f3f3 	sdiv	r3, r2, r3
 8020b98:	ee13 2a10 	vmov	r2, s6
 8020b9c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020ba0:	9313      	str	r3, [sp, #76]	@ 0x4c
 8020ba2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020ba4:	fb92 f3f3 	sdiv	r3, r2, r3
 8020ba8:	9a03      	ldr	r2, [sp, #12]
 8020baa:	9314      	str	r3, [sp, #80]	@ 0x50
 8020bac:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8020bb0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020bb2:	eeb0 3a67 	vmov.f32	s6, s15
 8020bb6:	bf08      	it	eq
 8020bb8:	4613      	moveq	r3, r2
 8020bba:	eef0 2a47 	vmov.f32	s5, s14
 8020bbe:	e789      	b.n	8020ad4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020bc0:	1405      	asrs	r5, r0, #16
 8020bc2:	d435      	bmi.n	8020c30 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020bc4:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8020bc8:	42aa      	cmp	r2, r5
 8020bca:	dd31      	ble.n	8020c30 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020bcc:	140e      	asrs	r6, r1, #16
 8020bce:	d42f      	bmi.n	8020c30 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020bd0:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8020bd4:	42b2      	cmp	r2, r6
 8020bd6:	dd2b      	ble.n	8020c30 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020bd8:	9a00      	ldr	r2, [sp, #0]
 8020bda:	fb06 5502 	mla	r5, r6, r2, r5
 8020bde:	086a      	lsrs	r2, r5, #1
 8020be0:	9e01      	ldr	r6, [sp, #4]
 8020be2:	5cb2      	ldrb	r2, [r6, r2]
 8020be4:	07ee      	lsls	r6, r5, #31
 8020be6:	bf54      	ite	pl
 8020be8:	f002 020f 	andpl.w	r2, r2, #15
 8020bec:	1112      	asrmi	r2, r2, #4
 8020bee:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8020bf2:	b2d2      	uxtb	r2, r2
 8020bf4:	b1e2      	cbz	r2, 8020c30 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020bf6:	9d04      	ldr	r5, [sp, #16]
 8020bf8:	436a      	muls	r2, r5
 8020bfa:	1c55      	adds	r5, r2, #1
 8020bfc:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8020c00:	4d6e      	ldr	r5, [pc, #440]	@ (8020dbc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8020c02:	682d      	ldr	r5, [r5, #0]
 8020c04:	1212      	asrs	r2, r2, #8
 8020c06:	0a2e      	lsrs	r6, r5, #8
 8020c08:	2aff      	cmp	r2, #255	@ 0xff
 8020c0a:	9605      	str	r6, [sp, #20]
 8020c0c:	d116      	bne.n	8020c3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020c0e:	f06f 0201 	mvn.w	r2, #1
 8020c12:	fb02 fc07 	mul.w	ip, r2, r7
 8020c16:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8020c1a:	096a      	lsrs	r2, r5, #5
 8020c1c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020c20:	f026 0607 	bic.w	r6, r6, #7
 8020c24:	4316      	orrs	r6, r2
 8020c26:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8020c2a:	432e      	orrs	r6, r5
 8020c2c:	f824 600c 	strh.w	r6, [r4, ip]
 8020c30:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8020c32:	4410      	add	r0, r2
 8020c34:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8020c36:	3f01      	subs	r7, #1
 8020c38:	4411      	add	r1, r2
 8020c3a:	e77f      	b.n	8020b3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8020c3c:	f06f 0601 	mvn.w	r6, #1
 8020c40:	437e      	muls	r6, r7
 8020c42:	fa1f fa82 	uxth.w	sl, r2
 8020c46:	f834 8006 	ldrh.w	r8, [r4, r6]
 8020c4a:	9602      	str	r6, [sp, #8]
 8020c4c:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8020c50:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8020c54:	43d2      	mvns	r2, r2
 8020c56:	b2d2      	uxtb	r2, r2
 8020c58:	fb1c fc0a 	smulbb	ip, ip, sl
 8020c5c:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8020c60:	fb0e ce02 	mla	lr, lr, r2, ip
 8020c64:	b2ed      	uxtb	r5, r5
 8020c66:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8020c6a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8020c6e:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8020c72:	fa5f f888 	uxtb.w	r8, r8
 8020c76:	fb15 f50a 	smulbb	r5, r5, sl
 8020c7a:	fb08 5502 	mla	r5, r8, r2, r5
 8020c7e:	fa1f fe8e 	uxth.w	lr, lr
 8020c82:	fb16 f60a 	smulbb	r6, r6, sl
 8020c86:	b2ad      	uxth	r5, r5
 8020c88:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8020c8c:	fb0c 6c02 	mla	ip, ip, r2, r6
 8020c90:	f10e 0201 	add.w	r2, lr, #1
 8020c94:	1c6e      	adds	r6, r5, #1
 8020c96:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8020c9a:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8020c9e:	fa1f fc8c 	uxth.w	ip, ip
 8020ca2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8020ca6:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8020caa:	ea46 0e0e 	orr.w	lr, r6, lr
 8020cae:	f10c 0601 	add.w	r6, ip, #1
 8020cb2:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8020cb6:	0976      	lsrs	r6, r6, #5
 8020cb8:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8020cbc:	9a02      	ldr	r2, [sp, #8]
 8020cbe:	ea4e 0e06 	orr.w	lr, lr, r6
 8020cc2:	f824 e002 	strh.w	lr, [r4, r2]
 8020cc6:	e7b3      	b.n	8020c30 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020cc8:	f04f 0800 	mov.w	r8, #0
 8020ccc:	eba3 0208 	sub.w	r2, r3, r8
 8020cd0:	2a00      	cmp	r2, #0
 8020cd2:	f77f af36 	ble.w	8020b42 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8020cd6:	9e00      	ldr	r6, [sp, #0]
 8020cd8:	1402      	asrs	r2, r0, #16
 8020cda:	140d      	asrs	r5, r1, #16
 8020cdc:	fb06 2505 	mla	r5, r6, r5, r2
 8020ce0:	086a      	lsrs	r2, r5, #1
 8020ce2:	9e01      	ldr	r6, [sp, #4]
 8020ce4:	5cb2      	ldrb	r2, [r6, r2]
 8020ce6:	07ed      	lsls	r5, r5, #31
 8020ce8:	bf54      	ite	pl
 8020cea:	f002 020f 	andpl.w	r2, r2, #15
 8020cee:	1112      	asrmi	r2, r2, #4
 8020cf0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8020cf4:	b2d2      	uxtb	r2, r2
 8020cf6:	b1c2      	cbz	r2, 8020d2a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8020cf8:	9d04      	ldr	r5, [sp, #16]
 8020cfa:	436a      	muls	r2, r5
 8020cfc:	1c55      	adds	r5, r2, #1
 8020cfe:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8020d02:	4d2e      	ldr	r5, [pc, #184]	@ (8020dbc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8020d04:	1212      	asrs	r2, r2, #8
 8020d06:	682e      	ldr	r6, [r5, #0]
 8020d08:	2aff      	cmp	r2, #255	@ 0xff
 8020d0a:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8020d0e:	d113      	bne.n	8020d38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8020d10:	0972      	lsrs	r2, r6, #5
 8020d12:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8020d16:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020d1a:	f025 0507 	bic.w	r5, r5, #7
 8020d1e:	4315      	orrs	r5, r2
 8020d20:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8020d24:	4335      	orrs	r5, r6
 8020d26:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8020d2a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8020d2c:	4410      	add	r0, r2
 8020d2e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8020d30:	f108 0801 	add.w	r8, r8, #1
 8020d34:	4411      	add	r1, r2
 8020d36:	e7c9      	b.n	8020ccc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020d38:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8020d3c:	fa1f fa82 	uxth.w	sl, r2
 8020d40:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8020d44:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8020d48:	43d2      	mvns	r2, r2
 8020d4a:	b2d2      	uxtb	r2, r2
 8020d4c:	fb17 f70a 	smulbb	r7, r7, sl
 8020d50:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8020d54:	fb0c 7c02 	mla	ip, ip, r2, r7
 8020d58:	b2f6      	uxtb	r6, r6
 8020d5a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8020d5e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020d62:	fa5f fe8e 	uxtb.w	lr, lr
 8020d66:	fb16 f60a 	smulbb	r6, r6, sl
 8020d6a:	fb0e 6602 	mla	r6, lr, r2, r6
 8020d6e:	b2ed      	uxtb	r5, r5
 8020d70:	fa1f fc8c 	uxth.w	ip, ip
 8020d74:	fb15 f50a 	smulbb	r5, r5, sl
 8020d78:	b2b6      	uxth	r6, r6
 8020d7a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8020d7e:	fb07 5702 	mla	r7, r7, r2, r5
 8020d82:	f10c 0201 	add.w	r2, ip, #1
 8020d86:	1c75      	adds	r5, r6, #1
 8020d88:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8020d8c:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8020d90:	b2bf      	uxth	r7, r7
 8020d92:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8020d96:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8020d9a:	ea45 0c0c 	orr.w	ip, r5, ip
 8020d9e:	1c7d      	adds	r5, r7, #1
 8020da0:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8020da4:	096d      	lsrs	r5, r5, #5
 8020da6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8020daa:	ea4c 0c05 	orr.w	ip, ip, r5
 8020dae:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8020db2:	e7ba      	b.n	8020d2a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8020db4:	b007      	add	sp, #28
 8020db6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020dba:	bf00      	nop
 8020dbc:	2000e41c 	.word	0x2000e41c

08020dc0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020dc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020dc4:	b087      	sub	sp, #28
 8020dc6:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 80210d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8020dca:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8020dcc:	9205      	str	r2, [sp, #20]
 8020dce:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8020dd2:	9101      	str	r1, [sp, #4]
 8020dd4:	6841      	ldr	r1, [r0, #4]
 8020dd6:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 8020dda:	fb01 2404 	mla	r4, r1, r4, r2
 8020dde:	6802      	ldr	r2, [r0, #0]
 8020de0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8020de4:	f8db 2008 	ldr.w	r2, [fp, #8]
 8020de8:	3201      	adds	r2, #1
 8020dea:	f022 0201 	bic.w	r2, r2, #1
 8020dee:	9202      	str	r2, [sp, #8]
 8020df0:	f8db 2000 	ldr.w	r2, [fp]
 8020df4:	9203      	str	r2, [sp, #12]
 8020df6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8020dfa:	9a01      	ldr	r2, [sp, #4]
 8020dfc:	2a00      	cmp	r2, #0
 8020dfe:	dc03      	bgt.n	8020e08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8020e00:	9a05      	ldr	r2, [sp, #20]
 8020e02:	2a00      	cmp	r2, #0
 8020e04:	f340 8162 	ble.w	80210cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8020e08:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8020e0a:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8020e0e:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8020e12:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8020e16:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8020e18:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8020e1c:	2b00      	cmp	r3, #0
 8020e1e:	dd0e      	ble.n	8020e3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8020e20:	1402      	asrs	r2, r0, #16
 8020e22:	d405      	bmi.n	8020e30 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020e24:	42ba      	cmp	r2, r7
 8020e26:	da03      	bge.n	8020e30 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020e28:	140a      	asrs	r2, r1, #16
 8020e2a:	d401      	bmi.n	8020e30 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020e2c:	42b2      	cmp	r2, r6
 8020e2e:	db07      	blt.n	8020e40 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8020e30:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8020e32:	4410      	add	r0, r2
 8020e34:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8020e36:	3b01      	subs	r3, #1
 8020e38:	4411      	add	r1, r2
 8020e3a:	3402      	adds	r4, #2
 8020e3c:	e7ee      	b.n	8020e1c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8020e3e:	d017      	beq.n	8020e70 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8020e40:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8020e42:	1e5a      	subs	r2, r3, #1
 8020e44:	fb05 0502 	mla	r5, r5, r2, r0
 8020e48:	142d      	asrs	r5, r5, #16
 8020e4a:	d409      	bmi.n	8020e60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8020e4c:	42bd      	cmp	r5, r7
 8020e4e:	da07      	bge.n	8020e60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8020e50:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8020e52:	fb05 1202 	mla	r2, r5, r2, r1
 8020e56:	1412      	asrs	r2, r2, #16
 8020e58:	d402      	bmi.n	8020e60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8020e5a:	42b2      	cmp	r2, r6
 8020e5c:	f2c0 80c3 	blt.w	8020fe6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8020e60:	2500      	movs	r5, #0
 8020e62:	195a      	adds	r2, r3, r5
 8020e64:	2a00      	cmp	r2, #0
 8020e66:	dc3f      	bgt.n	8020ee8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8020e68:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020e6c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8020e70:	9b01      	ldr	r3, [sp, #4]
 8020e72:	2b00      	cmp	r3, #0
 8020e74:	f340 812a 	ble.w	80210cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8020e78:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020e7c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020e80:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8020e84:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020e86:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020e8a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020e8e:	eeb0 6a62 	vmov.f32	s12, s5
 8020e92:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020e96:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020e9a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020e9e:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8020ea2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020ea6:	eeb0 6a43 	vmov.f32	s12, s6
 8020eaa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020eae:	ee12 2a90 	vmov	r2, s5
 8020eb2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020eb6:	fb92 f3f3 	sdiv	r3, r2, r3
 8020eba:	ee13 2a10 	vmov	r2, s6
 8020ebe:	9313      	str	r3, [sp, #76]	@ 0x4c
 8020ec0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020ec2:	fb92 f3f3 	sdiv	r3, r2, r3
 8020ec6:	9314      	str	r3, [sp, #80]	@ 0x50
 8020ec8:	9b01      	ldr	r3, [sp, #4]
 8020eca:	9a05      	ldr	r2, [sp, #20]
 8020ecc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020ed0:	3b01      	subs	r3, #1
 8020ed2:	9301      	str	r3, [sp, #4]
 8020ed4:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8020ed8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020eda:	eeb0 3a67 	vmov.f32	s6, s15
 8020ede:	bf08      	it	eq
 8020ee0:	4613      	moveq	r3, r2
 8020ee2:	eef0 2a47 	vmov.f32	s5, s14
 8020ee6:	e788      	b.n	8020dfa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8020ee8:	1406      	asrs	r6, r0, #16
 8020eea:	d42c      	bmi.n	8020f46 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020eec:	f8db 2008 	ldr.w	r2, [fp, #8]
 8020ef0:	42b2      	cmp	r2, r6
 8020ef2:	dd28      	ble.n	8020f46 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020ef4:	140f      	asrs	r7, r1, #16
 8020ef6:	d426      	bmi.n	8020f46 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020ef8:	f8db 200c 	ldr.w	r2, [fp, #12]
 8020efc:	42ba      	cmp	r2, r7
 8020efe:	dd22      	ble.n	8020f46 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020f00:	9a02      	ldr	r2, [sp, #8]
 8020f02:	fb07 6602 	mla	r6, r7, r2, r6
 8020f06:	0872      	lsrs	r2, r6, #1
 8020f08:	9f03      	ldr	r7, [sp, #12]
 8020f0a:	5cba      	ldrb	r2, [r7, r2]
 8020f0c:	07f6      	lsls	r6, r6, #31
 8020f0e:	bf54      	ite	pl
 8020f10:	f002 020f 	andpl.w	r2, r2, #15
 8020f14:	1112      	asrmi	r2, r2, #4
 8020f16:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8020f1a:	b2d2      	uxtb	r2, r2
 8020f1c:	2aff      	cmp	r2, #255	@ 0xff
 8020f1e:	d118      	bne.n	8020f52 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8020f20:	f8d8 2000 	ldr.w	r2, [r8]
 8020f24:	f06f 0601 	mvn.w	r6, #1
 8020f28:	fb06 f705 	mul.w	r7, r6, r5
 8020f2c:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 8020f30:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8020f34:	0956      	lsrs	r6, r2, #5
 8020f36:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8020f3a:	ea4c 0606 	orr.w	r6, ip, r6
 8020f3e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020f42:	4316      	orrs	r6, r2
 8020f44:	53e6      	strh	r6, [r4, r7]
 8020f46:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8020f48:	4410      	add	r0, r2
 8020f4a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8020f4c:	3d01      	subs	r5, #1
 8020f4e:	4411      	add	r1, r2
 8020f50:	e787      	b.n	8020e62 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8020f52:	2a00      	cmp	r2, #0
 8020f54:	d0f7      	beq.n	8020f46 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020f56:	f06f 0601 	mvn.w	r6, #1
 8020f5a:	436e      	muls	r6, r5
 8020f5c:	f8d8 c000 	ldr.w	ip, [r8]
 8020f60:	f834 e006 	ldrh.w	lr, [r4, r6]
 8020f64:	9604      	str	r6, [sp, #16]
 8020f66:	fa1f f982 	uxth.w	r9, r2
 8020f6a:	ea4f 272e 	mov.w	r7, lr, asr #8
 8020f6e:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8020f72:	43d2      	mvns	r2, r2
 8020f74:	b2d2      	uxtb	r2, r2
 8020f76:	fb16 f609 	smulbb	r6, r6, r9
 8020f7a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8020f7e:	fb07 6702 	mla	r7, r7, r2, r6
 8020f82:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8020f86:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8020f8a:	fa5f fc8c 	uxtb.w	ip, ip
 8020f8e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020f92:	fa5f fe8e 	uxtb.w	lr, lr
 8020f96:	fb1c fc09 	smulbb	ip, ip, r9
 8020f9a:	fb0e cc02 	mla	ip, lr, r2, ip
 8020f9e:	b2bf      	uxth	r7, r7
 8020fa0:	fb1a fa09 	smulbb	sl, sl, r9
 8020fa4:	fa1f fc8c 	uxth.w	ip, ip
 8020fa8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8020fac:	fb06 a602 	mla	r6, r6, r2, sl
 8020fb0:	1c7a      	adds	r2, r7, #1
 8020fb2:	f10c 0a01 	add.w	sl, ip, #1
 8020fb6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8020fba:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8020fbe:	b2b6      	uxth	r6, r6
 8020fc0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8020fc4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8020fc8:	ea4a 0707 	orr.w	r7, sl, r7
 8020fcc:	f106 0a01 	add.w	sl, r6, #1
 8020fd0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8020fd4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020fd8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8020fdc:	9a04      	ldr	r2, [sp, #16]
 8020fde:	ea47 070a 	orr.w	r7, r7, sl
 8020fe2:	52a7      	strh	r7, [r4, r2]
 8020fe4:	e7af      	b.n	8020f46 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020fe6:	f04f 0e00 	mov.w	lr, #0
 8020fea:	eba3 020e 	sub.w	r2, r3, lr
 8020fee:	2a00      	cmp	r2, #0
 8020ff0:	f77f af3a 	ble.w	8020e68 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8020ff4:	9e02      	ldr	r6, [sp, #8]
 8020ff6:	1402      	asrs	r2, r0, #16
 8020ff8:	140d      	asrs	r5, r1, #16
 8020ffa:	fb06 2505 	mla	r5, r6, r5, r2
 8020ffe:	086a      	lsrs	r2, r5, #1
 8021000:	9e03      	ldr	r6, [sp, #12]
 8021002:	5cb2      	ldrb	r2, [r6, r2]
 8021004:	07ed      	lsls	r5, r5, #31
 8021006:	bf54      	ite	pl
 8021008:	f002 020f 	andpl.w	r2, r2, #15
 802100c:	1112      	asrmi	r2, r2, #4
 802100e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8021012:	b2d2      	uxtb	r2, r2
 8021014:	2aff      	cmp	r2, #255	@ 0xff
 8021016:	d115      	bne.n	8021044 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8021018:	f8d8 5000 	ldr.w	r5, [r8]
 802101c:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 8021020:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8021024:	096a      	lsrs	r2, r5, #5
 8021026:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802102a:	4332      	orrs	r2, r6
 802102c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8021030:	432a      	orrs	r2, r5
 8021032:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8021036:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8021038:	4410      	add	r0, r2
 802103a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802103c:	f10e 0e01 	add.w	lr, lr, #1
 8021040:	4411      	add	r1, r2
 8021042:	e7d2      	b.n	8020fea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8021044:	2a00      	cmp	r2, #0
 8021046:	d0f6      	beq.n	8021036 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8021048:	f8d8 7000 	ldr.w	r7, [r8]
 802104c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8021050:	fa1f f982 	uxth.w	r9, r2
 8021054:	ea4f 262c 	mov.w	r6, ip, asr #8
 8021058:	f3c7 4507 	ubfx	r5, r7, #16, #8
 802105c:	43d2      	mvns	r2, r2
 802105e:	b2d2      	uxtb	r2, r2
 8021060:	fb15 f509 	smulbb	r5, r5, r9
 8021064:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8021068:	fb06 5602 	mla	r6, r6, r2, r5
 802106c:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8021070:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8021074:	b2ff      	uxtb	r7, r7
 8021076:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802107a:	fa5f fc8c 	uxtb.w	ip, ip
 802107e:	fb17 f709 	smulbb	r7, r7, r9
 8021082:	fb0c 7702 	mla	r7, ip, r2, r7
 8021086:	b2b6      	uxth	r6, r6
 8021088:	fb1a fa09 	smulbb	sl, sl, r9
 802108c:	b2bf      	uxth	r7, r7
 802108e:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8021092:	fb05 a502 	mla	r5, r5, r2, sl
 8021096:	1c72      	adds	r2, r6, #1
 8021098:	f107 0a01 	add.w	sl, r7, #1
 802109c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80210a0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80210a4:	b2ad      	uxth	r5, r5
 80210a6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80210aa:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 80210ae:	ea4a 0606 	orr.w	r6, sl, r6
 80210b2:	f105 0a01 	add.w	sl, r5, #1
 80210b6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80210ba:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80210be:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80210c2:	ea46 060a 	orr.w	r6, r6, sl
 80210c6:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 80210ca:	e7b4      	b.n	8021036 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80210cc:	b007      	add	sp, #28
 80210ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80210d2:	bf00      	nop
 80210d4:	2000e41c 	.word	0x2000e41c

080210d8 <_ZN8touchgfx8LCD16bppD1Ev>:
 80210d8:	4770      	bx	lr

080210da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 80210da:	4770      	bx	lr

080210dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 80210dc:	4770      	bx	lr

080210de <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 80210de:	4770      	bx	lr

080210e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 80210e0:	4770      	bx	lr

080210e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80210e2:	4770      	bx	lr

080210e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80210e4:	4770      	bx	lr

080210e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 80210e6:	4770      	bx	lr

080210e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 80210e8:	4770      	bx	lr

080210ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80210ea:	4770      	bx	lr

080210ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80210ec:	4770      	bx	lr

080210ee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80210ee:	4770      	bx	lr

080210f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80210f0:	4770      	bx	lr

080210f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80210f2:	4770      	bx	lr

080210f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80210f4:	4770      	bx	lr

080210f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80210f6:	4770      	bx	lr

080210f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80210f8:	4770      	bx	lr

080210fa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80210fa:	4770      	bx	lr

080210fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80210fc:	4770      	bx	lr

080210fe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80210fe:	4770      	bx	lr

08021100 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8021100:	4770      	bx	lr

08021102 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8021102:	4770      	bx	lr

08021104 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8021104:	4770      	bx	lr

08021106 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8021106:	4770      	bx	lr

08021108 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8021108:	4770      	bx	lr

0802110a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 802110a:	4770      	bx	lr

0802110c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 802110c:	4770      	bx	lr

0802110e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 802110e:	4770      	bx	lr

08021110 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8021110:	4770      	bx	lr

08021112 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8021112:	4770      	bx	lr

08021114 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8021114:	4770      	bx	lr

08021116 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8021116:	4770      	bx	lr

08021118 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8021118:	4770      	bx	lr

0802111a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 802111a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802111e:	b088      	sub	sp, #32
 8021120:	ac08      	add	r4, sp, #32
 8021122:	4606      	mov	r6, r0
 8021124:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8021128:	4620      	mov	r0, r4
 802112a:	4688      	mov	r8, r1
 802112c:	4691      	mov	r9, r2
 802112e:	f7fd fc31 	bl	801e994 <_ZNK8touchgfx6Bitmap7getDataEv>
 8021132:	6833      	ldr	r3, [r6, #0]
 8021134:	4605      	mov	r5, r0
 8021136:	4620      	mov	r0, r4
 8021138:	699f      	ldr	r7, [r3, #24]
 802113a:	f7fd fb39 	bl	801e7b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802113e:	4682      	mov	sl, r0
 8021140:	4620      	mov	r0, r4
 8021142:	f7fd fb69 	bl	801e818 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8021146:	9500      	str	r5, [sp, #0]
 8021148:	e9cd a001 	strd	sl, r0, [sp, #4]
 802114c:	464b      	mov	r3, r9
 802114e:	a806      	add	r0, sp, #24
 8021150:	4642      	mov	r2, r8
 8021152:	4631      	mov	r1, r6
 8021154:	47b8      	blx	r7
 8021156:	4628      	mov	r0, r5
 8021158:	b008      	add	sp, #32
 802115a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08021160 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8021160:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8021164:	2300      	movs	r3, #0
 8021166:	9300      	str	r3, [sp, #0]
 8021168:	4b3d      	ldr	r3, [pc, #244]	@ (8021260 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 802116a:	781b      	ldrb	r3, [r3, #0]
 802116c:	2b00      	cmp	r3, #0
 802116e:	d137      	bne.n	80211e0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8021170:	4a3c      	ldr	r2, [pc, #240]	@ (8021264 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8021172:	f9b2 2000 	ldrsh.w	r2, [r2]
 8021176:	f8ad 2004 	strh.w	r2, [sp, #4]
 802117a:	2b00      	cmp	r3, #0
 802117c:	d132      	bne.n	80211e4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 802117e:	4b3a      	ldr	r3, [pc, #232]	@ (8021268 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8021180:	f9b3 3000 	ldrsh.w	r3, [r3]
 8021184:	6808      	ldr	r0, [r1, #0]
 8021186:	6849      	ldr	r1, [r1, #4]
 8021188:	f8ad 3006 	strh.w	r3, [sp, #6]
 802118c:	ac02      	add	r4, sp, #8
 802118e:	ab02      	add	r3, sp, #8
 8021190:	c303      	stmia	r3!, {r0, r1}
 8021192:	4669      	mov	r1, sp
 8021194:	4620      	mov	r0, r4
 8021196:	f7f9 fb2b 	bl	801a7f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802119a:	4668      	mov	r0, sp
 802119c:	f7f9 fae4 	bl	801a768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80211a0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80211a4:	f8bd 2000 	ldrh.w	r2, [sp]
 80211a8:	4d30      	ldr	r5, [pc, #192]	@ (802126c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 80211aa:	4413      	add	r3, r2
 80211ac:	f8ad 3008 	strh.w	r3, [sp, #8]
 80211b0:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80211b4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80211b8:	6828      	ldr	r0, [r5, #0]
 80211ba:	4413      	add	r3, r2
 80211bc:	f8ad 300a 	strh.w	r3, [sp, #10]
 80211c0:	6803      	ldr	r3, [r0, #0]
 80211c2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80211c4:	4798      	blx	r3
 80211c6:	f010 0f01 	tst.w	r0, #1
 80211ca:	462f      	mov	r7, r5
 80211cc:	d00c      	beq.n	80211e8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 80211ce:	6828      	ldr	r0, [r5, #0]
 80211d0:	6803      	ldr	r3, [r0, #0]
 80211d2:	e894 0006 	ldmia.w	r4, {r1, r2}
 80211d6:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80211d8:	4798      	blx	r3
 80211da:	b004      	add	sp, #16
 80211dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80211e0:	4a21      	ldr	r2, [pc, #132]	@ (8021268 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80211e2:	e7c6      	b.n	8021172 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 80211e4:	4b1f      	ldr	r3, [pc, #124]	@ (8021264 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80211e6:	e7cb      	b.n	8021180 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 80211e8:	6838      	ldr	r0, [r7, #0]
 80211ea:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80211ee:	6803      	ldr	r3, [r0, #0]
 80211f0:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 80211f4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80211f6:	4798      	blx	r3
 80211f8:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 80211fc:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8021200:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8021204:	fb16 3602 	smlabb	r6, r6, r2, r3
 8021208:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 802120c:	6838      	ldr	r0, [r7, #0]
 802120e:	6803      	ldr	r3, [r0, #0]
 8021210:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8021212:	4798      	blx	r3
 8021214:	4a13      	ldr	r2, [pc, #76]	@ (8021264 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8021216:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 802121a:	8813      	ldrh	r3, [r2, #0]
 802121c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8021220:	fb03 1404 	mla	r4, r3, r4, r1
 8021224:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8021228:	435d      	muls	r5, r3
 802122a:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 802122e:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8021232:	4691      	mov	r9, r2
 8021234:	6838      	ldr	r0, [r7, #0]
 8021236:	42ac      	cmp	r4, r5
 8021238:	6803      	ldr	r3, [r0, #0]
 802123a:	d20e      	bcs.n	802125a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 802123c:	f8d3 a038 	ldr.w	sl, [r3, #56]	@ 0x38
 8021240:	4632      	mov	r2, r6
 8021242:	4643      	mov	r3, r8
 8021244:	4621      	mov	r1, r4
 8021246:	47d0      	blx	sl
 8021248:	f8b9 3000 	ldrh.w	r3, [r9]
 802124c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8021250:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8021254:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8021258:	e7ec      	b.n	8021234 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 802125a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802125c:	4798      	blx	r3
 802125e:	e7bc      	b.n	80211da <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8021260:	2000e404 	.word	0x2000e404
 8021264:	2000e406 	.word	0x2000e406
 8021268:	2000e408 	.word	0x2000e408
 802126c:	2000e40c 	.word	0x2000e40c

08021270 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8021270:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021274:	b08b      	sub	sp, #44	@ 0x2c
 8021276:	460f      	mov	r7, r1
 8021278:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 802127c:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 8021280:	4616      	mov	r6, r2
 8021282:	f1bb 0f00 	cmp.w	fp, #0
 8021286:	d04a      	beq.n	802131e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8021288:	6810      	ldr	r0, [r2, #0]
 802128a:	6851      	ldr	r1, [r2, #4]
 802128c:	ad06      	add	r5, sp, #24
 802128e:	c503      	stmia	r5!, {r0, r1}
 8021290:	6818      	ldr	r0, [r3, #0]
 8021292:	6859      	ldr	r1, [r3, #4]
 8021294:	ad08      	add	r5, sp, #32
 8021296:	c503      	stmia	r5!, {r0, r1}
 8021298:	a806      	add	r0, sp, #24
 802129a:	f7f9 fa65 	bl	801a768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802129e:	4631      	mov	r1, r6
 80212a0:	a808      	add	r0, sp, #32
 80212a2:	f7f9 faa5 	bl	801a7f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80212a6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80212aa:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 80212ae:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 80212b2:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 80212b6:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 80212ba:	fb16 2103 	smlabb	r1, r6, r3, r2
 80212be:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 80212c2:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80212c6:	4f5f      	ldr	r7, [pc, #380]	@ (8021444 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80212c8:	440a      	add	r2, r1
 80212ca:	f8ad 2020 	strh.w	r2, [sp, #32]
 80212ce:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80212d2:	6838      	ldr	r0, [r7, #0]
 80212d4:	4413      	add	r3, r2
 80212d6:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 80212da:	6803      	ldr	r3, [r0, #0]
 80212dc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80212de:	4798      	blx	r3
 80212e0:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 80212e4:	46b9      	mov	r9, r7
 80212e6:	d11d      	bne.n	8021324 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 80212e8:	b9fc      	cbnz	r4, 802132a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80212ea:	f010 0f01 	tst.w	r0, #1
 80212ee:	d01c      	beq.n	802132a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80212f0:	f8d9 0000 	ldr.w	r0, [r9]
 80212f4:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 80212f8:	6801      	ldr	r1, [r0, #0]
 80212fa:	f8cd b00c 	str.w	fp, [sp, #12]
 80212fe:	2700      	movs	r7, #0
 8021300:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8021304:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8021308:	9402      	str	r4, [sp, #8]
 802130a:	b2ad      	uxth	r5, r5
 802130c:	fa1f f488 	uxth.w	r4, r8
 8021310:	9501      	str	r5, [sp, #4]
 8021312:	9400      	str	r4, [sp, #0]
 8021314:	6c8c      	ldr	r4, [r1, #72]	@ 0x48
 8021316:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 802131a:	4631      	mov	r1, r6
 802131c:	47a0      	blx	r4
 802131e:	b00b      	add	sp, #44	@ 0x2c
 8021320:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021324:	f010 0f04 	tst.w	r0, #4
 8021328:	e7e1      	b.n	80212ee <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 802132a:	f8d9 0000 	ldr.w	r0, [r9]
 802132e:	6803      	ldr	r3, [r0, #0]
 8021330:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8021332:	4798      	blx	r3
 8021334:	4b44      	ldr	r3, [pc, #272]	@ (8021448 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8021336:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 802133a:	881a      	ldrh	r2, [r3, #0]
 802133c:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8021340:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8021344:	fb02 1404 	mla	r4, r2, r4, r1
 8021348:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802134c:	469a      	mov	sl, r3
 802134e:	fb05 f502 	mul.w	r5, r5, r2
 8021352:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8021356:	d059      	beq.n	802140c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8021358:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 802135c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8021360:	fa1f f28b 	uxth.w	r2, fp
 8021364:	fa1f f989 	uxth.w	r9, r9
 8021368:	469e      	mov	lr, r3
 802136a:	42ac      	cmp	r4, r5
 802136c:	d264      	bcs.n	8021438 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 802136e:	eb04 0a07 	add.w	sl, r4, r7
 8021372:	4554      	cmp	r4, sl
 8021374:	d23d      	bcs.n	80213f2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8021376:	8821      	ldrh	r1, [r4, #0]
 8021378:	f836 3b02 	ldrh.w	r3, [r6], #2
 802137c:	1208      	asrs	r0, r1, #8
 802137e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8021382:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8021386:	fb10 f009 	smulbb	r0, r0, r9
 802138a:	ea4f 0be1 	mov.w	fp, r1, asr #3
 802138e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8021392:	00c9      	lsls	r1, r1, #3
 8021394:	fb0c 0c02 	mla	ip, ip, r2, r0
 8021398:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 802139c:	10d8      	asrs	r0, r3, #3
 802139e:	b2c9      	uxtb	r1, r1
 80213a0:	00db      	lsls	r3, r3, #3
 80213a2:	fa1f fc8c 	uxth.w	ip, ip
 80213a6:	fb1b fb09 	smulbb	fp, fp, r9
 80213aa:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80213ae:	b2db      	uxtb	r3, r3
 80213b0:	fb11 f109 	smulbb	r1, r1, r9
 80213b4:	fb00 b002 	mla	r0, r0, r2, fp
 80213b8:	fb03 1302 	mla	r3, r3, r2, r1
 80213bc:	f10c 0b01 	add.w	fp, ip, #1
 80213c0:	b29b      	uxth	r3, r3
 80213c2:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 80213c6:	b280      	uxth	r0, r0
 80213c8:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 80213cc:	f103 0c01 	add.w	ip, r3, #1
 80213d0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80213d4:	1c43      	adds	r3, r0, #1
 80213d6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80213da:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80213de:	0940      	lsrs	r0, r0, #5
 80213e0:	ea4c 0c0b 	orr.w	ip, ip, fp
 80213e4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80213e8:	ea4c 0c00 	orr.w	ip, ip, r0
 80213ec:	f824 cb02 	strh.w	ip, [r4], #2
 80213f0:	e7bf      	b.n	8021372 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 80213f2:	f8be 3000 	ldrh.w	r3, [lr]
 80213f6:	eba3 0308 	sub.w	r3, r3, r8
 80213fa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80213fe:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8021402:	eba3 0308 	sub.w	r3, r3, r8
 8021406:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 802140a:	e7ae      	b.n	802136a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 802140c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8021410:	f8d9 0000 	ldr.w	r0, [r9]
 8021414:	42ac      	cmp	r4, r5
 8021416:	6803      	ldr	r3, [r0, #0]
 8021418:	d20e      	bcs.n	8021438 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 802141a:	f8d3 8038 	ldr.w	r8, [r3, #56]	@ 0x38
 802141e:	4632      	mov	r2, r6
 8021420:	463b      	mov	r3, r7
 8021422:	4621      	mov	r1, r4
 8021424:	47c0      	blx	r8
 8021426:	f8ba 3000 	ldrh.w	r3, [sl]
 802142a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802142e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8021432:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8021436:	e7eb      	b.n	8021410 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8021438:	4b02      	ldr	r3, [pc, #8]	@ (8021444 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 802143a:	6818      	ldr	r0, [r3, #0]
 802143c:	6803      	ldr	r3, [r0, #0]
 802143e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8021440:	4798      	blx	r3
 8021442:	e76c      	b.n	802131e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8021444:	2000e40c 	.word	0x2000e40c
 8021448:	2000e406 	.word	0x2000e406

0802144c <_ZN8touchgfx8LCD16bppD0Ev>:
 802144c:	b510      	push	{r4, lr}
 802144e:	218c      	movs	r1, #140	@ 0x8c
 8021450:	4604      	mov	r4, r0
 8021452:	f00c fa2c 	bl	802d8ae <_ZdlPvj>
 8021456:	4620      	mov	r0, r4
 8021458:	bd10      	pop	{r4, pc}

0802145a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 802145a:	b510      	push	{r4, lr}
 802145c:	2104      	movs	r1, #4
 802145e:	4604      	mov	r4, r0
 8021460:	f00c fa25 	bl	802d8ae <_ZdlPvj>
 8021464:	4620      	mov	r0, r4
 8021466:	bd10      	pop	{r4, pc}

08021468 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8021468:	b510      	push	{r4, lr}
 802146a:	2104      	movs	r1, #4
 802146c:	4604      	mov	r4, r0
 802146e:	f00c fa1e 	bl	802d8ae <_ZdlPvj>
 8021472:	4620      	mov	r0, r4
 8021474:	bd10      	pop	{r4, pc}

08021476 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8021476:	b510      	push	{r4, lr}
 8021478:	f640 0144 	movw	r1, #2116	@ 0x844
 802147c:	4604      	mov	r4, r0
 802147e:	f00c fa16 	bl	802d8ae <_ZdlPvj>
 8021482:	4620      	mov	r0, r4
 8021484:	bd10      	pop	{r4, pc}

08021486 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 8021486:	b510      	push	{r4, lr}
 8021488:	f44f 7182 	mov.w	r1, #260	@ 0x104
 802148c:	4604      	mov	r4, r0
 802148e:	f00c fa0e 	bl	802d8ae <_ZdlPvj>
 8021492:	4620      	mov	r0, r4
 8021494:	bd10      	pop	{r4, pc}

08021496 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8021496:	b510      	push	{r4, lr}
 8021498:	2104      	movs	r1, #4
 802149a:	4604      	mov	r4, r0
 802149c:	f00c fa07 	bl	802d8ae <_ZdlPvj>
 80214a0:	4620      	mov	r0, r4
 80214a2:	bd10      	pop	{r4, pc}

080214a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80214a4:	b510      	push	{r4, lr}
 80214a6:	2104      	movs	r1, #4
 80214a8:	4604      	mov	r4, r0
 80214aa:	f00c fa00 	bl	802d8ae <_ZdlPvj>
 80214ae:	4620      	mov	r0, r4
 80214b0:	bd10      	pop	{r4, pc}

080214b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80214b2:	b510      	push	{r4, lr}
 80214b4:	2104      	movs	r1, #4
 80214b6:	4604      	mov	r4, r0
 80214b8:	f00c f9f9 	bl	802d8ae <_ZdlPvj>
 80214bc:	4620      	mov	r0, r4
 80214be:	bd10      	pop	{r4, pc}

080214c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80214c0:	b510      	push	{r4, lr}
 80214c2:	2104      	movs	r1, #4
 80214c4:	4604      	mov	r4, r0
 80214c6:	f00c f9f2 	bl	802d8ae <_ZdlPvj>
 80214ca:	4620      	mov	r0, r4
 80214cc:	bd10      	pop	{r4, pc}

080214ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80214ce:	b510      	push	{r4, lr}
 80214d0:	2104      	movs	r1, #4
 80214d2:	4604      	mov	r4, r0
 80214d4:	f00c f9eb 	bl	802d8ae <_ZdlPvj>
 80214d8:	4620      	mov	r0, r4
 80214da:	bd10      	pop	{r4, pc}

080214dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 80214dc:	b510      	push	{r4, lr}
 80214de:	2104      	movs	r1, #4
 80214e0:	4604      	mov	r4, r0
 80214e2:	f00c f9e4 	bl	802d8ae <_ZdlPvj>
 80214e6:	4620      	mov	r0, r4
 80214e8:	bd10      	pop	{r4, pc}

080214ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 80214ea:	b510      	push	{r4, lr}
 80214ec:	2104      	movs	r1, #4
 80214ee:	4604      	mov	r4, r0
 80214f0:	f00c f9dd 	bl	802d8ae <_ZdlPvj>
 80214f4:	4620      	mov	r0, r4
 80214f6:	bd10      	pop	{r4, pc}

080214f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 80214f8:	b510      	push	{r4, lr}
 80214fa:	2104      	movs	r1, #4
 80214fc:	4604      	mov	r4, r0
 80214fe:	f00c f9d6 	bl	802d8ae <_ZdlPvj>
 8021502:	4620      	mov	r0, r4
 8021504:	bd10      	pop	{r4, pc}

08021506 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8021506:	b510      	push	{r4, lr}
 8021508:	2104      	movs	r1, #4
 802150a:	4604      	mov	r4, r0
 802150c:	f00c f9cf 	bl	802d8ae <_ZdlPvj>
 8021510:	4620      	mov	r0, r4
 8021512:	bd10      	pop	{r4, pc}

08021514 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8021514:	b510      	push	{r4, lr}
 8021516:	2104      	movs	r1, #4
 8021518:	4604      	mov	r4, r0
 802151a:	f00c f9c8 	bl	802d8ae <_ZdlPvj>
 802151e:	4620      	mov	r0, r4
 8021520:	bd10      	pop	{r4, pc}

08021522 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8021522:	b510      	push	{r4, lr}
 8021524:	2104      	movs	r1, #4
 8021526:	4604      	mov	r4, r0
 8021528:	f00c f9c1 	bl	802d8ae <_ZdlPvj>
 802152c:	4620      	mov	r0, r4
 802152e:	bd10      	pop	{r4, pc}

08021530 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8021530:	b510      	push	{r4, lr}
 8021532:	2104      	movs	r1, #4
 8021534:	4604      	mov	r4, r0
 8021536:	f00c f9ba 	bl	802d8ae <_ZdlPvj>
 802153a:	4620      	mov	r0, r4
 802153c:	bd10      	pop	{r4, pc}

0802153e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 802153e:	b510      	push	{r4, lr}
 8021540:	2104      	movs	r1, #4
 8021542:	4604      	mov	r4, r0
 8021544:	f00c f9b3 	bl	802d8ae <_ZdlPvj>
 8021548:	4620      	mov	r0, r4
 802154a:	bd10      	pop	{r4, pc}

0802154c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 802154c:	b510      	push	{r4, lr}
 802154e:	2104      	movs	r1, #4
 8021550:	4604      	mov	r4, r0
 8021552:	f00c f9ac 	bl	802d8ae <_ZdlPvj>
 8021556:	4620      	mov	r0, r4
 8021558:	bd10      	pop	{r4, pc}

0802155a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 802155a:	b510      	push	{r4, lr}
 802155c:	2104      	movs	r1, #4
 802155e:	4604      	mov	r4, r0
 8021560:	f00c f9a5 	bl	802d8ae <_ZdlPvj>
 8021564:	4620      	mov	r0, r4
 8021566:	bd10      	pop	{r4, pc}

08021568 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8021568:	b510      	push	{r4, lr}
 802156a:	2104      	movs	r1, #4
 802156c:	4604      	mov	r4, r0
 802156e:	f00c f99e 	bl	802d8ae <_ZdlPvj>
 8021572:	4620      	mov	r0, r4
 8021574:	bd10      	pop	{r4, pc}

08021576 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8021576:	b510      	push	{r4, lr}
 8021578:	2104      	movs	r1, #4
 802157a:	4604      	mov	r4, r0
 802157c:	f00c f997 	bl	802d8ae <_ZdlPvj>
 8021580:	4620      	mov	r0, r4
 8021582:	bd10      	pop	{r4, pc}

08021584 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8021584:	b510      	push	{r4, lr}
 8021586:	2104      	movs	r1, #4
 8021588:	4604      	mov	r4, r0
 802158a:	f00c f990 	bl	802d8ae <_ZdlPvj>
 802158e:	4620      	mov	r0, r4
 8021590:	bd10      	pop	{r4, pc}

08021592 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8021592:	b510      	push	{r4, lr}
 8021594:	2104      	movs	r1, #4
 8021596:	4604      	mov	r4, r0
 8021598:	f00c f989 	bl	802d8ae <_ZdlPvj>
 802159c:	4620      	mov	r0, r4
 802159e:	bd10      	pop	{r4, pc}

080215a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 80215a0:	b510      	push	{r4, lr}
 80215a2:	2104      	movs	r1, #4
 80215a4:	4604      	mov	r4, r0
 80215a6:	f00c f982 	bl	802d8ae <_ZdlPvj>
 80215aa:	4620      	mov	r0, r4
 80215ac:	bd10      	pop	{r4, pc}

080215ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80215ae:	b510      	push	{r4, lr}
 80215b0:	2104      	movs	r1, #4
 80215b2:	4604      	mov	r4, r0
 80215b4:	f00c f97b 	bl	802d8ae <_ZdlPvj>
 80215b8:	4620      	mov	r0, r4
 80215ba:	bd10      	pop	{r4, pc}

080215bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80215bc:	b510      	push	{r4, lr}
 80215be:	2104      	movs	r1, #4
 80215c0:	4604      	mov	r4, r0
 80215c2:	f00c f974 	bl	802d8ae <_ZdlPvj>
 80215c6:	4620      	mov	r0, r4
 80215c8:	bd10      	pop	{r4, pc}

080215ca <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80215ca:	b510      	push	{r4, lr}
 80215cc:	2104      	movs	r1, #4
 80215ce:	4604      	mov	r4, r0
 80215d0:	f00c f96d 	bl	802d8ae <_ZdlPvj>
 80215d4:	4620      	mov	r0, r4
 80215d6:	bd10      	pop	{r4, pc}

080215d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80215d8:	b510      	push	{r4, lr}
 80215da:	2104      	movs	r1, #4
 80215dc:	4604      	mov	r4, r0
 80215de:	f00c f966 	bl	802d8ae <_ZdlPvj>
 80215e2:	4620      	mov	r0, r4
 80215e4:	bd10      	pop	{r4, pc}

080215e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 80215e6:	b510      	push	{r4, lr}
 80215e8:	2104      	movs	r1, #4
 80215ea:	4604      	mov	r4, r0
 80215ec:	f00c f95f 	bl	802d8ae <_ZdlPvj>
 80215f0:	4620      	mov	r0, r4
 80215f2:	bd10      	pop	{r4, pc}

080215f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 80215f4:	b510      	push	{r4, lr}
 80215f6:	2104      	movs	r1, #4
 80215f8:	4604      	mov	r4, r0
 80215fa:	f00c f958 	bl	802d8ae <_ZdlPvj>
 80215fe:	4620      	mov	r0, r4
 8021600:	bd10      	pop	{r4, pc}

08021602 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8021602:	b510      	push	{r4, lr}
 8021604:	2104      	movs	r1, #4
 8021606:	4604      	mov	r4, r0
 8021608:	f00c f951 	bl	802d8ae <_ZdlPvj>
 802160c:	4620      	mov	r0, r4
 802160e:	bd10      	pop	{r4, pc}

08021610 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8021610:	b510      	push	{r4, lr}
 8021612:	2104      	movs	r1, #4
 8021614:	4604      	mov	r4, r0
 8021616:	f00c f94a 	bl	802d8ae <_ZdlPvj>
 802161a:	4620      	mov	r0, r4
 802161c:	bd10      	pop	{r4, pc}
	...

08021620 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 8021620:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021624:	b08f      	sub	sp, #60	@ 0x3c
 8021626:	4616      	mov	r6, r2
 8021628:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 802162c:	9205      	str	r2, [sp, #20]
 802162e:	4682      	mov	sl, r0
 8021630:	460d      	mov	r5, r1
 8021632:	2a00      	cmp	r2, #0
 8021634:	f000 82b7 	beq.w	8021ba6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 8021638:	6830      	ldr	r0, [r6, #0]
 802163a:	6871      	ldr	r1, [r6, #4]
 802163c:	ac0a      	add	r4, sp, #40	@ 0x28
 802163e:	c403      	stmia	r4!, {r0, r1}
 8021640:	6818      	ldr	r0, [r3, #0]
 8021642:	6859      	ldr	r1, [r3, #4]
 8021644:	ac0c      	add	r4, sp, #48	@ 0x30
 8021646:	c403      	stmia	r4!, {r0, r1}
 8021648:	a80a      	add	r0, sp, #40	@ 0x28
 802164a:	f7f9 f88d 	bl	801a768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802164e:	4631      	mov	r1, r6
 8021650:	a80c      	add	r0, sp, #48	@ 0x30
 8021652:	f7f9 f8cd 	bl	801a7f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021656:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 802165a:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 802165e:	bfd7      	itett	le
 8021660:	b293      	uxthle	r3, r2
 8021662:	2301      	movgt	r3, #1
 8021664:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8021668:	fb91 f3f3 	sdivle	r3, r1, r3
 802166c:	9300      	str	r3, [sp, #0]
 802166e:	f105 0308 	add.w	r3, r5, #8
 8021672:	9900      	ldr	r1, [sp, #0]
 8021674:	9306      	str	r3, [sp, #24]
 8021676:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 802167a:	440b      	add	r3, r1
 802167c:	3b01      	subs	r3, #1
 802167e:	fb93 f3f1 	sdiv	r3, r3, r1
 8021682:	9906      	ldr	r1, [sp, #24]
 8021684:	3b01      	subs	r3, #1
 8021686:	b29b      	uxth	r3, r3
 8021688:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802168c:	9307      	str	r3, [sp, #28]
 802168e:	9900      	ldr	r1, [sp, #0]
 8021690:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8021694:	fb93 f0f1 	sdiv	r0, r3, r1
 8021698:	b284      	uxth	r4, r0
 802169a:	9402      	str	r4, [sp, #8]
 802169c:	9d02      	ldr	r5, [sp, #8]
 802169e:	9c00      	ldr	r4, [sp, #0]
 80216a0:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 80216a4:	fb05 3414 	mls	r4, r5, r4, r3
 80216a8:	fb14 f402 	smulbb	r4, r4, r2
 80216ac:	440c      	add	r4, r1
 80216ae:	b2a4      	uxth	r4, r4
 80216b0:	2d00      	cmp	r5, #0
 80216b2:	d06c      	beq.n	802178e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 80216b4:	1e6a      	subs	r2, r5, #1
 80216b6:	9806      	ldr	r0, [sp, #24]
 80216b8:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 80216bc:	9a07      	ldr	r2, [sp, #28]
 80216be:	ba36      	rev	r6, r6
 80216c0:	4416      	add	r6, r2
 80216c2:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 80216c6:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 80216ca:	f8df 9334 	ldr.w	r9, [pc, #820]	@ 8021a00 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 80216ce:	4411      	add	r1, r2
 80216d0:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 80216d4:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 80216d8:	4413      	add	r3, r2
 80216da:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80216de:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80216e2:	9301      	str	r3, [sp, #4]
 80216e4:	4bc4      	ldr	r3, [pc, #784]	@ (80219f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 80216e6:	6818      	ldr	r0, [r3, #0]
 80216e8:	6803      	ldr	r3, [r0, #0]
 80216ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80216ec:	4798      	blx	r3
 80216ee:	4bc3      	ldr	r3, [pc, #780]	@ (80219fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 80216f0:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80216f4:	881b      	ldrh	r3, [r3, #0]
 80216f6:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 80216fa:	fb03 2808 	mla	r8, r3, r8, r2
 80216fe:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 8021702:	436b      	muls	r3, r5
 8021704:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 8021708:	9309      	str	r3, [sp, #36]	@ 0x24
 802170a:	2500      	movs	r5, #0
 802170c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8021710:	fb94 f3f3 	sdiv	r3, r4, r3
 8021714:	9304      	str	r3, [sp, #16]
 8021716:	f10a 0304 	add.w	r3, sl, #4
 802171a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 802171e:	4629      	mov	r1, r5
 8021720:	4618      	mov	r0, r3
 8021722:	9308      	str	r3, [sp, #32]
 8021724:	f00d fa11 	bl	802eb4a <memset>
 8021728:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802172a:	4543      	cmp	r3, r8
 802172c:	f240 8236 	bls.w	8021b9c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 8021730:	2203      	movs	r2, #3
 8021732:	2107      	movs	r1, #7
 8021734:	200b      	movs	r0, #11
 8021736:	2c00      	cmp	r4, #0
 8021738:	f000 8131 	beq.w	802199e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 802173c:	7833      	ldrb	r3, [r6, #0]
 802173e:	b2db      	uxtb	r3, r3
 8021740:	2bfe      	cmp	r3, #254	@ 0xfe
 8021742:	d126      	bne.n	8021792 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 8021744:	f896 e001 	ldrb.w	lr, [r6, #1]
 8021748:	f896 c002 	ldrb.w	ip, [r6, #2]
 802174c:	f896 b003 	ldrb.w	fp, [r6, #3]
 8021750:	fa5f fe8e 	uxtb.w	lr, lr
 8021754:	fa5f fc8c 	uxtb.w	ip, ip
 8021758:	f36e 0507 	bfi	r5, lr, #0, #8
 802175c:	f36c 250f 	bfi	r5, ip, #8, #8
 8021760:	fa5f fb8b 	uxtb.w	fp, fp
 8021764:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 8021768:	f36b 4517 	bfi	r5, fp, #16, #8
 802176c:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 8021770:	0e2b      	lsrs	r3, r5, #24
 8021772:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 8021776:	fb10 c303 	smlabb	r3, r0, r3, ip
 802177a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 802177e:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8021782:	3c01      	subs	r4, #1
 8021784:	1d37      	adds	r7, r6, #4
 8021786:	b2a4      	uxth	r4, r4
 8021788:	605d      	str	r5, [r3, #4]
 802178a:	463e      	mov	r6, r7
 802178c:	e7d3      	b.n	8021736 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 802178e:	9e07      	ldr	r6, [sp, #28]
 8021790:	e797      	b.n	80216c2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 8021792:	2bff      	cmp	r3, #255	@ 0xff
 8021794:	d127      	bne.n	80217e6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 8021796:	f896 c001 	ldrb.w	ip, [r6, #1]
 802179a:	78b3      	ldrb	r3, [r6, #2]
 802179c:	f896 e003 	ldrb.w	lr, [r6, #3]
 80217a0:	f896 b004 	ldrb.w	fp, [r6, #4]
 80217a4:	fa5f fc8c 	uxtb.w	ip, ip
 80217a8:	b2db      	uxtb	r3, r3
 80217aa:	f36c 0507 	bfi	r5, ip, #0, #8
 80217ae:	f363 250f 	bfi	r5, r3, #8, #8
 80217b2:	fa5f fe8e 	uxtb.w	lr, lr
 80217b6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80217ba:	fb12 330e 	smlabb	r3, r2, lr, r3
 80217be:	fa5f fb8b 	uxtb.w	fp, fp
 80217c2:	f36e 4517 	bfi	r5, lr, #16, #8
 80217c6:	fb11 330c 	smlabb	r3, r1, ip, r3
 80217ca:	f36b 651f 	bfi	r5, fp, #24, #8
 80217ce:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 80217d2:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 80217d6:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 80217da:	3c01      	subs	r4, #1
 80217dc:	1d77      	adds	r7, r6, #5
 80217de:	b2a4      	uxth	r4, r4
 80217e0:	f8cb 5004 	str.w	r5, [fp, #4]
 80217e4:	e7d1      	b.n	802178a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 80217e6:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 80217ea:	f106 0701 	add.w	r7, r6, #1
 80217ee:	d107      	bne.n	8021800 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 80217f0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80217f4:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80217f8:	685d      	ldr	r5, [r3, #4]
 80217fa:	3c01      	subs	r4, #1
 80217fc:	b2a4      	uxth	r4, r4
 80217fe:	e7c4      	b.n	802178a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8021800:	f1bc 0f01 	cmp.w	ip, #1
 8021804:	d12c      	bne.n	8021860 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 8021806:	f003 0e03 	and.w	lr, r3, #3
 802180a:	f1ae 0e02 	sub.w	lr, lr, #2
 802180e:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 8021812:	fa5f fe8e 	uxtb.w	lr, lr
 8021816:	f003 0c0c 	and.w	ip, r3, #12
 802181a:	f36e 0507 	bfi	r5, lr, #0, #8
 802181e:	f1ac 0c08 	sub.w	ip, ip, #8
 8021822:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8021826:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 802182a:	f36c 250f 	bfi	r5, ip, #8, #8
 802182e:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8021832:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8021836:	3b02      	subs	r3, #2
 8021838:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 802183c:	b2db      	uxtb	r3, r3
 802183e:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 8021842:	f363 4517 	bfi	r5, r3, #16, #8
 8021846:	fb12 cc03 	smlabb	ip, r2, r3, ip
 802184a:	0e2e      	lsrs	r6, r5, #24
 802184c:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 8021850:	fb10 c606 	smlabb	r6, r0, r6, ip
 8021854:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 8021858:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 802185c:	6075      	str	r5, [r6, #4]
 802185e:	e7cc      	b.n	80217fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 8021860:	f1bc 0f02 	cmp.w	ip, #2
 8021864:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8021868:	d12a      	bne.n	80218c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 802186a:	1cb7      	adds	r7, r6, #2
 802186c:	7876      	ldrb	r6, [r6, #1]
 802186e:	b2f6      	uxtb	r6, r6
 8021870:	f006 0c0f 	and.w	ip, r6, #15
 8021874:	3b20      	subs	r3, #32
 8021876:	f1ac 0c08 	sub.w	ip, ip, #8
 802187a:	449c      	add	ip, r3
 802187c:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 8021880:	fa5f fc8c 	uxtb.w	ip, ip
 8021884:	f36c 0507 	bfi	r5, ip, #0, #8
 8021888:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 802188c:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 8021890:	fa5f fe8e 	uxtb.w	lr, lr
 8021894:	1136      	asrs	r6, r6, #4
 8021896:	f36e 250f 	bfi	r5, lr, #8, #8
 802189a:	3e08      	subs	r6, #8
 802189c:	4433      	add	r3, r6
 802189e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80218a2:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 80218a6:	b2db      	uxtb	r3, r3
 80218a8:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 80218ac:	f363 4517 	bfi	r5, r3, #16, #8
 80218b0:	fb12 ee03 	smlabb	lr, r2, r3, lr
 80218b4:	0e2e      	lsrs	r6, r5, #24
 80218b6:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 80218ba:	fb10 e606 	smlabb	r6, r0, r6, lr
 80218be:	e7c9      	b.n	8021854 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 80218c0:	1c5e      	adds	r6, r3, #1
 80218c2:	42a6      	cmp	r6, r4
 80218c4:	dd4e      	ble.n	8021964 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 80218c6:	1b36      	subs	r6, r6, r4
 80218c8:	2e00      	cmp	r6, #0
 80218ca:	dc4e      	bgt.n	802196a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 80218cc:	f8dd b004 	ldr.w	fp, [sp, #4]
 80218d0:	2400      	movs	r4, #0
 80218d2:	f1bb 0f00 	cmp.w	fp, #0
 80218d6:	f340 8122 	ble.w	8021b1e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 80218da:	1c7b      	adds	r3, r7, #1
 80218dc:	9303      	str	r3, [sp, #12]
 80218de:	783b      	ldrb	r3, [r7, #0]
 80218e0:	b2db      	uxtb	r3, r3
 80218e2:	2bfe      	cmp	r3, #254	@ 0xfe
 80218e4:	d160      	bne.n	80219a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 80218e6:	7879      	ldrb	r1, [r7, #1]
 80218e8:	78ba      	ldrb	r2, [r7, #2]
 80218ea:	78f8      	ldrb	r0, [r7, #3]
 80218ec:	b2c9      	uxtb	r1, r1
 80218ee:	f361 0507 	bfi	r5, r1, #0, #8
 80218f2:	b2d2      	uxtb	r2, r2
 80218f4:	1d3b      	adds	r3, r7, #4
 80218f6:	f362 250f 	bfi	r5, r2, #8, #8
 80218fa:	b2c0      	uxtb	r0, r0
 80218fc:	9303      	str	r3, [sp, #12]
 80218fe:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8021902:	2303      	movs	r3, #3
 8021904:	fb13 2200 	smlabb	r2, r3, r0, r2
 8021908:	f360 4517 	bfi	r5, r0, #16, #8
 802190c:	2307      	movs	r3, #7
 802190e:	fb13 2101 	smlabb	r1, r3, r1, r2
 8021912:	0e2e      	lsrs	r6, r5, #24
 8021914:	230b      	movs	r3, #11
 8021916:	fb13 1306 	smlabb	r3, r3, r6, r1
 802191a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 802191e:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8021922:	605d      	str	r5, [r3, #4]
 8021924:	2601      	movs	r6, #1
 8021926:	4637      	mov	r7, r6
 8021928:	0e2b      	lsrs	r3, r5, #24
 802192a:	ebab 0b07 	sub.w	fp, fp, r7
 802192e:	eba6 0607 	sub.w	r6, r6, r7
 8021932:	f040 80d3 	bne.w	8021adc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 8021936:	b18c      	cbz	r4, 802195c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 8021938:	4648      	mov	r0, r9
 802193a:	00a1      	lsls	r1, r4, #2
 802193c:	f7e0 fee6 	bl	800270c <_ZN8touchgfx5paint9flushLineEPmi>
 8021940:	9b05      	ldr	r3, [sp, #20]
 8021942:	4622      	mov	r2, r4
 8021944:	4649      	mov	r1, r9
 8021946:	4640      	mov	r0, r8
 8021948:	f7e0 ff3a 	bl	80027c0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 802194c:	4b2c      	ldr	r3, [pc, #176]	@ (8021a00 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 802194e:	4a2d      	ldr	r2, [pc, #180]	@ (8021a04 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 8021950:	4599      	cmp	r9, r3
 8021952:	bf08      	it	eq
 8021954:	4613      	moveq	r3, r2
 8021956:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 802195a:	4699      	mov	r9, r3
 802195c:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 8021960:	2400      	movs	r4, #0
 8021962:	e0da      	b.n	8021b1a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 8021964:	1ba6      	subs	r6, r4, r6
 8021966:	b2b4      	uxth	r4, r6
 8021968:	e70f      	b.n	802178a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 802196a:	9b01      	ldr	r3, [sp, #4]
 802196c:	9a01      	ldr	r2, [sp, #4]
 802196e:	42b3      	cmp	r3, r6
 8021970:	bfa8      	it	ge
 8021972:	4633      	movge	r3, r6
 8021974:	0e2c      	lsrs	r4, r5, #24
 8021976:	eba2 0b03 	sub.w	fp, r2, r3
 802197a:	eba6 0603 	sub.w	r6, r6, r3
 802197e:	d00b      	beq.n	8021998 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 8021980:	f1a9 0104 	sub.w	r1, r9, #4
 8021984:	461a      	mov	r2, r3
 8021986:	2a00      	cmp	r2, #0
 8021988:	dc02      	bgt.n	8021990 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 802198a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802198e:	e7a0      	b.n	80218d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8021990:	f841 5f04 	str.w	r5, [r1, #4]!
 8021994:	3a01      	subs	r2, #1
 8021996:	e7f6      	b.n	8021986 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 8021998:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 802199c:	e799      	b.n	80218d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 802199e:	4637      	mov	r7, r6
 80219a0:	f8dd b004 	ldr.w	fp, [sp, #4]
 80219a4:	4626      	mov	r6, r4
 80219a6:	e794      	b.n	80218d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 80219a8:	2bff      	cmp	r3, #255	@ 0xff
 80219aa:	d11d      	bne.n	80219e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 80219ac:	7878      	ldrb	r0, [r7, #1]
 80219ae:	78ba      	ldrb	r2, [r7, #2]
 80219b0:	78fe      	ldrb	r6, [r7, #3]
 80219b2:	1d7b      	adds	r3, r7, #5
 80219b4:	b2c0      	uxtb	r0, r0
 80219b6:	9303      	str	r3, [sp, #12]
 80219b8:	793b      	ldrb	r3, [r7, #4]
 80219ba:	f360 0507 	bfi	r5, r0, #0, #8
 80219be:	b2d2      	uxtb	r2, r2
 80219c0:	b2d9      	uxtb	r1, r3
 80219c2:	f362 250f 	bfi	r5, r2, #8, #8
 80219c6:	b2f6      	uxtb	r6, r6
 80219c8:	2303      	movs	r3, #3
 80219ca:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80219ce:	fb13 2206 	smlabb	r2, r3, r6, r2
 80219d2:	2307      	movs	r3, #7
 80219d4:	fb13 2000 	smlabb	r0, r3, r0, r2
 80219d8:	f366 4517 	bfi	r5, r6, #16, #8
 80219dc:	230b      	movs	r3, #11
 80219de:	f361 651f 	bfi	r5, r1, #24, #8
 80219e2:	fb13 0301 	smlabb	r3, r3, r1, r0
 80219e6:	e798      	b.n	802191a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 80219e8:	119e      	asrs	r6, r3, #6
 80219ea:	d10d      	bne.n	8021a08 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 80219ec:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80219f0:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80219f4:	685d      	ldr	r5, [r3, #4]
 80219f6:	e795      	b.n	8021924 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 80219f8:	2000e40c 	.word	0x2000e40c
 80219fc:	2000e406 	.word	0x2000e406
 8021a00:	20000140 	.word	0x20000140
 8021a04:	20000240 	.word	0x20000240
 8021a08:	2e01      	cmp	r6, #1
 8021a0a:	ea4f 6115 	mov.w	r1, r5, lsr #24
 8021a0e:	d12b      	bne.n	8021a68 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 8021a10:	f003 0003 	and.w	r0, r3, #3
 8021a14:	3802      	subs	r0, #2
 8021a16:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 8021a1a:	b2c0      	uxtb	r0, r0
 8021a1c:	f003 020c 	and.w	r2, r3, #12
 8021a20:	f360 0507 	bfi	r5, r0, #0, #8
 8021a24:	3a08      	subs	r2, #8
 8021a26:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8021a2a:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 8021a2e:	f362 250f 	bfi	r5, r2, #8, #8
 8021a32:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8021a36:	1e9f      	subs	r7, r3, #2
 8021a38:	f3c5 4307 	ubfx	r3, r5, #16, #8
 8021a3c:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8021a40:	b2db      	uxtb	r3, r3
 8021a42:	2703      	movs	r7, #3
 8021a44:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8021a48:	fb17 2203 	smlabb	r2, r7, r3, r2
 8021a4c:	2707      	movs	r7, #7
 8021a4e:	f363 4517 	bfi	r5, r3, #16, #8
 8021a52:	fb17 2000 	smlabb	r0, r7, r0, r2
 8021a56:	230b      	movs	r3, #11
 8021a58:	fb13 0101 	smlabb	r1, r3, r1, r0
 8021a5c:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8021a60:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8021a64:	604d      	str	r5, [r1, #4]
 8021a66:	e75e      	b.n	8021926 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 8021a68:	2e02      	cmp	r6, #2
 8021a6a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8021a6e:	d12f      	bne.n	8021ad0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 8021a70:	7878      	ldrb	r0, [r7, #1]
 8021a72:	1cba      	adds	r2, r7, #2
 8021a74:	b2c0      	uxtb	r0, r0
 8021a76:	9203      	str	r2, [sp, #12]
 8021a78:	f000 020f 	and.w	r2, r0, #15
 8021a7c:	3b20      	subs	r3, #32
 8021a7e:	3a08      	subs	r2, #8
 8021a80:	441a      	add	r2, r3
 8021a82:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 8021a86:	b2d2      	uxtb	r2, r2
 8021a88:	f362 0507 	bfi	r5, r2, #0, #8
 8021a8c:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8021a90:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 8021a94:	b2f6      	uxtb	r6, r6
 8021a96:	1100      	asrs	r0, r0, #4
 8021a98:	f366 250f 	bfi	r5, r6, #8, #8
 8021a9c:	3808      	subs	r0, #8
 8021a9e:	4403      	add	r3, r0
 8021aa0:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8021aa4:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8021aa8:	b2db      	uxtb	r3, r3
 8021aaa:	2003      	movs	r0, #3
 8021aac:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 8021ab0:	fb10 6603 	smlabb	r6, r0, r3, r6
 8021ab4:	2007      	movs	r0, #7
 8021ab6:	f363 4517 	bfi	r5, r3, #16, #8
 8021aba:	fb10 6202 	smlabb	r2, r0, r2, r6
 8021abe:	230b      	movs	r3, #11
 8021ac0:	fb13 2101 	smlabb	r1, r3, r1, r2
 8021ac4:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8021ac8:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8021acc:	604d      	str	r5, [r1, #4]
 8021ace:	e729      	b.n	8021924 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8021ad0:	1c5e      	adds	r6, r3, #1
 8021ad2:	45b3      	cmp	fp, r6
 8021ad4:	465f      	mov	r7, fp
 8021ad6:	bfa8      	it	ge
 8021ad8:	4637      	movge	r7, r6
 8021ada:	e725      	b.n	8021928 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 8021adc:	193b      	adds	r3, r7, r4
 8021ade:	2b40      	cmp	r3, #64	@ 0x40
 8021ae0:	dd13      	ble.n	8021b0a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 8021ae2:	4648      	mov	r0, r9
 8021ae4:	00a1      	lsls	r1, r4, #2
 8021ae6:	f7e0 fe11 	bl	800270c <_ZN8touchgfx5paint9flushLineEPmi>
 8021aea:	4649      	mov	r1, r9
 8021aec:	9b05      	ldr	r3, [sp, #20]
 8021aee:	4622      	mov	r2, r4
 8021af0:	4640      	mov	r0, r8
 8021af2:	f7e0 fe65 	bl	80027c0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8021af6:	4b2d      	ldr	r3, [pc, #180]	@ (8021bac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 8021af8:	4599      	cmp	r9, r3
 8021afa:	bf0c      	ite	eq
 8021afc:	f8df 90b8 	ldreq.w	r9, [pc, #184]	@ 8021bb8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 8021b00:	f8df 90a8 	ldrne.w	r9, [pc, #168]	@ 8021bac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 8021b04:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8021b08:	2400      	movs	r4, #0
 8021b0a:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 8021b0e:	463b      	mov	r3, r7
 8021b10:	3b01      	subs	r3, #1
 8021b12:	f842 5b04 	str.w	r5, [r2], #4
 8021b16:	d1fb      	bne.n	8021b10 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 8021b18:	443c      	add	r4, r7
 8021b1a:	9f03      	ldr	r7, [sp, #12]
 8021b1c:	e6d9      	b.n	80218d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8021b1e:	b15c      	cbz	r4, 8021b38 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 8021b20:	00a1      	lsls	r1, r4, #2
 8021b22:	4648      	mov	r0, r9
 8021b24:	f7e0 fdf2 	bl	800270c <_ZN8touchgfx5paint9flushLineEPmi>
 8021b28:	4640      	mov	r0, r8
 8021b2a:	9b05      	ldr	r3, [sp, #20]
 8021b2c:	4622      	mov	r2, r4
 8021b2e:	4649      	mov	r1, r9
 8021b30:	f7e0 fe46 	bl	80027c0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8021b34:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8021b38:	4b1d      	ldr	r3, [pc, #116]	@ (8021bb0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 8021b3a:	9a01      	ldr	r2, [sp, #4]
 8021b3c:	881b      	ldrh	r3, [r3, #0]
 8021b3e:	1a9b      	subs	r3, r3, r2
 8021b40:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8021b44:	9b04      	ldr	r3, [sp, #16]
 8021b46:	3301      	adds	r3, #1
 8021b48:	9304      	str	r3, [sp, #16]
 8021b4a:	9a04      	ldr	r2, [sp, #16]
 8021b4c:	9b00      	ldr	r3, [sp, #0]
 8021b4e:	4293      	cmp	r3, r2
 8021b50:	d11d      	bne.n	8021b8e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 8021b52:	9b02      	ldr	r3, [sp, #8]
 8021b54:	9a02      	ldr	r2, [sp, #8]
 8021b56:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 8021b5a:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 8021b5e:	9808      	ldr	r0, [sp, #32]
 8021b60:	f103 0b01 	add.w	fp, r3, #1
 8021b64:	9b06      	ldr	r3, [sp, #24]
 8021b66:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8021b6a:	9b07      	ldr	r3, [sp, #28]
 8021b6c:	2500      	movs	r5, #0
 8021b6e:	ba3f      	rev	r7, r7
 8021b70:	1ba4      	subs	r4, r4, r6
 8021b72:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8021b76:	4629      	mov	r1, r5
 8021b78:	441f      	add	r7, r3
 8021b7a:	b2a4      	uxth	r4, r4
 8021b7c:	f00c ffe5 	bl	802eb4a <memset>
 8021b80:	f8cd b008 	str.w	fp, [sp, #8]
 8021b84:	9504      	str	r5, [sp, #16]
 8021b86:	f7e0 fdb5 	bl	80026f4 <_ZN8touchgfx5paint8tearDownEv>
 8021b8a:	463e      	mov	r6, r7
 8021b8c:	e5cc      	b.n	8021728 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 8021b8e:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8021b92:	9b01      	ldr	r3, [sp, #4]
 8021b94:	1ae4      	subs	r4, r4, r3
 8021b96:	1ba4      	subs	r4, r4, r6
 8021b98:	b2a4      	uxth	r4, r4
 8021b9a:	e7f4      	b.n	8021b86 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 8021b9c:	4b05      	ldr	r3, [pc, #20]	@ (8021bb4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 8021b9e:	6818      	ldr	r0, [r3, #0]
 8021ba0:	6803      	ldr	r3, [r0, #0]
 8021ba2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8021ba4:	4798      	blx	r3
 8021ba6:	b00f      	add	sp, #60	@ 0x3c
 8021ba8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021bac:	20000140 	.word	0x20000140
 8021bb0:	2000e406 	.word	0x2000e406
 8021bb4:	2000e40c 	.word	0x2000e40c
 8021bb8:	20000240 	.word	0x20000240

08021bbc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8021bbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021bc0:	b08f      	sub	sp, #60	@ 0x3c
 8021bc2:	461c      	mov	r4, r3
 8021bc4:	9205      	str	r2, [sp, #20]
 8021bc6:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8021bca:	9100      	str	r1, [sp, #0]
 8021bcc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8021bce:	9201      	str	r2, [sp, #4]
 8021bd0:	2a00      	cmp	r2, #0
 8021bd2:	f000 8115 	beq.w	8021e00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 8021bd6:	6820      	ldr	r0, [r4, #0]
 8021bd8:	6861      	ldr	r1, [r4, #4]
 8021bda:	aa0a      	add	r2, sp, #40	@ 0x28
 8021bdc:	c203      	stmia	r2!, {r0, r1}
 8021bde:	6818      	ldr	r0, [r3, #0]
 8021be0:	6859      	ldr	r1, [r3, #4]
 8021be2:	aa0c      	add	r2, sp, #48	@ 0x30
 8021be4:	c203      	stmia	r2!, {r0, r1}
 8021be6:	a80a      	add	r0, sp, #40	@ 0x28
 8021be8:	f7f8 fdbe 	bl	801a768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021bec:	4621      	mov	r1, r4
 8021bee:	a80c      	add	r0, sp, #48	@ 0x30
 8021bf0:	f7f8 fdfe 	bl	801a7f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021bf4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8021bf8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8021bfc:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8021c00:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8021c04:	bfde      	ittt	le
 8021c06:	b2b3      	uxthle	r3, r6
 8021c08:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8021c0c:	fb92 f3f3 	sdivle	r3, r2, r3
 8021c10:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8021c14:	bfc8      	it	gt
 8021c16:	2301      	movgt	r3, #1
 8021c18:	fb92 f1f3 	sdiv	r1, r2, r3
 8021c1c:	fa1f fc81 	uxth.w	ip, r1
 8021c20:	fb0c 2413 	mls	r4, ip, r3, r2
 8021c24:	fb14 f406 	smulbb	r4, r4, r6
 8021c28:	441d      	add	r5, r3
 8021c2a:	4404      	add	r4, r0
 8021c2c:	4661      	mov	r1, ip
 8021c2e:	3d01      	subs	r5, #1
 8021c30:	b2a4      	uxth	r4, r4
 8021c32:	fb95 f5f3 	sdiv	r5, r5, r3
 8021c36:	b131      	cbz	r1, 8021c46 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 8021c38:	9b05      	ldr	r3, [sp, #20]
 8021c3a:	9900      	ldr	r1, [sp, #0]
 8021c3c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8021c40:	ba1b      	rev	r3, r3
 8021c42:	4419      	add	r1, r3
 8021c44:	9100      	str	r1, [sp, #0]
 8021c46:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8021c4a:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 8021c4e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8021c52:	4418      	add	r0, r3
 8021c54:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8021c58:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8021c5c:	441a      	add	r2, r3
 8021c5e:	4b6a      	ldr	r3, [pc, #424]	@ (8021e08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8021c60:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8021c64:	6818      	ldr	r0, [r3, #0]
 8021c66:	6803      	ldr	r3, [r0, #0]
 8021c68:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8021c6a:	4798      	blx	r3
 8021c6c:	4967      	ldr	r1, [pc, #412]	@ (8021e0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8021c6e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8021c72:	880b      	ldrh	r3, [r1, #0]
 8021c74:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8021c78:	9109      	str	r1, [sp, #36]	@ 0x24
 8021c7a:	fb03 c202 	mla	r2, r3, r2, ip
 8021c7e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8021c82:	4373      	muls	r3, r6
 8021c84:	b2ad      	uxth	r5, r5
 8021c86:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8021c8a:	00ad      	lsls	r5, r5, #2
 8021c8c:	9306      	str	r3, [sp, #24]
 8021c8e:	1d2b      	adds	r3, r5, #4
 8021c90:	9307      	str	r3, [sp, #28]
 8021c92:	9b01      	ldr	r3, [sp, #4]
 8021c94:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8021c98:	9103      	str	r1, [sp, #12]
 8021c9a:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 8021c9e:	2c00      	cmp	r4, #0
 8021ca0:	bf0c      	ite	eq
 8021ca2:	46c6      	moveq	lr, r8
 8021ca4:	f04f 0e00 	movne.w	lr, #0
 8021ca8:	2300      	movs	r3, #0
 8021caa:	b292      	uxth	r2, r2
 8021cac:	fa1f fe8e 	uxth.w	lr, lr
 8021cb0:	9302      	str	r3, [sp, #8]
 8021cb2:	9204      	str	r2, [sp, #16]
 8021cb4:	9a06      	ldr	r2, [sp, #24]
 8021cb6:	4282      	cmp	r2, r0
 8021cb8:	f240 809d 	bls.w	8021df6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 8021cbc:	b963      	cbnz	r3, 8021cd8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8021cbe:	9b00      	ldr	r3, [sp, #0]
 8021cc0:	781a      	ldrb	r2, [r3, #0]
 8021cc2:	0993      	lsrs	r3, r2, #6
 8021cc4:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8021cc8:	9202      	str	r2, [sp, #8]
 8021cca:	1e5a      	subs	r2, r3, #1
 8021ccc:	2a02      	cmp	r2, #2
 8021cce:	d815      	bhi.n	8021cfc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 8021cd0:	9a00      	ldr	r2, [sp, #0]
 8021cd2:	3201      	adds	r2, #1
 8021cd4:	9200      	str	r2, [sp, #0]
 8021cd6:	b29b      	uxth	r3, r3
 8021cd8:	b1b4      	cbz	r4, 8021d08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 8021cda:	429c      	cmp	r4, r3
 8021cdc:	bf95      	itete	ls
 8021cde:	1b1c      	subls	r4, r3, r4
 8021ce0:	1ae4      	subhi	r4, r4, r3
 8021ce2:	fa1f fa84 	uxthls.w	sl, r4
 8021ce6:	b2a4      	uxthhi	r4, r4
 8021ce8:	bf87      	ittee	hi
 8021cea:	4671      	movhi	r1, lr
 8021cec:	f04f 0a00 	movhi.w	sl, #0
 8021cf0:	fa1f f188 	uxthls.w	r1, r8
 8021cf4:	2400      	movls	r4, #0
 8021cf6:	4653      	mov	r3, sl
 8021cf8:	468e      	mov	lr, r1
 8021cfa:	e7db      	b.n	8021cb4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 8021cfc:	9a00      	ldr	r2, [sp, #0]
 8021cfe:	9b00      	ldr	r3, [sp, #0]
 8021d00:	3202      	adds	r2, #2
 8021d02:	785b      	ldrb	r3, [r3, #1]
 8021d04:	9200      	str	r2, [sp, #0]
 8021d06:	e7e7      	b.n	8021cd8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8021d08:	2202      	movs	r2, #2
 8021d0a:	4615      	mov	r5, r2
 8021d0c:	9907      	ldr	r1, [sp, #28]
 8021d0e:	9a02      	ldr	r2, [sp, #8]
 8021d10:	fb15 1202 	smlabb	r2, r5, r2, r1
 8021d14:	9905      	ldr	r1, [sp, #20]
 8021d16:	4573      	cmp	r3, lr
 8021d18:	f831 c002 	ldrh.w	ip, [r1, r2]
 8021d1c:	9a01      	ldr	r2, [sp, #4]
 8021d1e:	bf2b      	itete	cs
 8021d20:	eba3 0a0e 	subcs.w	sl, r3, lr
 8021d24:	ebae 0103 	subcc.w	r1, lr, r3
 8021d28:	46f1      	movcs	r9, lr
 8021d2a:	4699      	movcc	r9, r3
 8021d2c:	bf27      	ittee	cs
 8021d2e:	fa1f fa8a 	uxthcs.w	sl, sl
 8021d32:	4621      	movcs	r1, r4
 8021d34:	b289      	uxthcc	r1, r1
 8021d36:	46a2      	movcc	sl, r4
 8021d38:	2aff      	cmp	r2, #255	@ 0xff
 8021d3a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021d3e:	d105      	bne.n	8021d4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8021d40:	4481      	add	r9, r0
 8021d42:	4581      	cmp	r9, r0
 8021d44:	d045      	beq.n	8021dd2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8021d46:	f820 cb02 	strh.w	ip, [r0], #2
 8021d4a:	e7fa      	b.n	8021d42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8021d4c:	9d03      	ldr	r5, [sp, #12]
 8021d4e:	ea4f 222c 	mov.w	r2, ip, asr #8
 8021d52:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8021d56:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8021d5a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8021d5e:	436a      	muls	r2, r5
 8021d60:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8021d64:	fa5f fc8c 	uxtb.w	ip, ip
 8021d68:	9208      	str	r2, [sp, #32]
 8021d6a:	fb0b fb05 	mul.w	fp, fp, r5
 8021d6e:	fb0c fc05 	mul.w	ip, ip, r5
 8021d72:	4481      	add	r9, r0
 8021d74:	4581      	cmp	r9, r0
 8021d76:	d02c      	beq.n	8021dd2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8021d78:	8802      	ldrh	r2, [r0, #0]
 8021d7a:	9d04      	ldr	r5, [sp, #16]
 8021d7c:	9f04      	ldr	r7, [sp, #16]
 8021d7e:	1216      	asrs	r6, r2, #8
 8021d80:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8021d84:	fb16 f605 	smulbb	r6, r6, r5
 8021d88:	9d08      	ldr	r5, [sp, #32]
 8021d8a:	442e      	add	r6, r5
 8021d8c:	10d5      	asrs	r5, r2, #3
 8021d8e:	00d2      	lsls	r2, r2, #3
 8021d90:	b2d2      	uxtb	r2, r2
 8021d92:	fb12 f207 	smulbb	r2, r2, r7
 8021d96:	b2b6      	uxth	r6, r6
 8021d98:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8021d9c:	4462      	add	r2, ip
 8021d9e:	fb15 f507 	smulbb	r5, r5, r7
 8021da2:	b292      	uxth	r2, r2
 8021da4:	1c77      	adds	r7, r6, #1
 8021da6:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8021daa:	1c57      	adds	r7, r2, #1
 8021dac:	445d      	add	r5, fp
 8021dae:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 8021db2:	b2ad      	uxth	r5, r5
 8021db4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8021db8:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8021dbc:	4316      	orrs	r6, r2
 8021dbe:	1c6a      	adds	r2, r5, #1
 8021dc0:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8021dc4:	096d      	lsrs	r5, r5, #5
 8021dc6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021dca:	432e      	orrs	r6, r5
 8021dcc:	f820 6b02 	strh.w	r6, [r0], #2
 8021dd0:	e7d0      	b.n	8021d74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 8021dd2:	4573      	cmp	r3, lr
 8021dd4:	d38f      	bcc.n	8021cf6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8021dd6:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8021dda:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021ddc:	fa1f f188 	uxth.w	r1, r8
 8021de0:	1a64      	subs	r4, r4, r1
 8021de2:	881b      	ldrh	r3, [r3, #0]
 8021de4:	b2a4      	uxth	r4, r4
 8021de6:	2c00      	cmp	r4, #0
 8021de8:	eba3 0308 	sub.w	r3, r3, r8
 8021dec:	bf18      	it	ne
 8021dee:	2100      	movne	r1, #0
 8021df0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021df4:	e77f      	b.n	8021cf6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8021df6:	4b04      	ldr	r3, [pc, #16]	@ (8021e08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8021df8:	6818      	ldr	r0, [r3, #0]
 8021dfa:	6803      	ldr	r3, [r0, #0]
 8021dfc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8021dfe:	4798      	blx	r3
 8021e00:	b00f      	add	sp, #60	@ 0x3c
 8021e02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021e06:	bf00      	nop
 8021e08:	2000e40c 	.word	0x2000e40c
 8021e0c:	2000e406 	.word	0x2000e406

08021e10 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8021e10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021e14:	b09f      	sub	sp, #124	@ 0x7c
 8021e16:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8021e1a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8021e1e:	9209      	str	r2, [sp, #36]	@ 0x24
 8021e20:	461d      	mov	r5, r3
 8021e22:	4604      	mov	r4, r0
 8021e24:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021e26:	2a00      	cmp	r2, #0
 8021e28:	f000 81eb 	beq.w	8022202 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 8021e2c:	6828      	ldr	r0, [r5, #0]
 8021e2e:	6869      	ldr	r1, [r5, #4]
 8021e30:	aa1a      	add	r2, sp, #104	@ 0x68
 8021e32:	c203      	stmia	r2!, {r0, r1}
 8021e34:	6818      	ldr	r0, [r3, #0]
 8021e36:	6859      	ldr	r1, [r3, #4]
 8021e38:	aa1c      	add	r2, sp, #112	@ 0x70
 8021e3a:	c203      	stmia	r2!, {r0, r1}
 8021e3c:	a81a      	add	r0, sp, #104	@ 0x68
 8021e3e:	f7f8 fc93 	bl	801a768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021e42:	4629      	mov	r1, r5
 8021e44:	a81c      	add	r0, sp, #112	@ 0x70
 8021e46:	f7f8 fcd3 	bl	801a7f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021e4a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8021e4e:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 8021e52:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 8021e56:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8021e5a:	bfd7      	itett	le
 8021e5c:	b29a      	uxthle	r2, r3
 8021e5e:	2201      	movgt	r2, #1
 8021e60:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8021e64:	fb91 f2f2 	sdivle	r2, r1, r2
 8021e68:	9202      	str	r2, [sp, #8]
 8021e6a:	9802      	ldr	r0, [sp, #8]
 8021e6c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8021e70:	fb92 f0f0 	sdiv	r0, r2, r0
 8021e74:	b280      	uxth	r0, r0
 8021e76:	9010      	str	r0, [sp, #64]	@ 0x40
 8021e78:	9902      	ldr	r1, [sp, #8]
 8021e7a:	9802      	ldr	r0, [sp, #8]
 8021e7c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8021e7e:	4488      	add	r8, r1
 8021e80:	fb05 2510 	mls	r5, r5, r0, r2
 8021e84:	fb15 f503 	smulbb	r5, r5, r3
 8021e88:	f108 38ff 	add.w	r8, r8, #4294967295
 8021e8c:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8021e90:	fb98 f8f1 	sdiv	r8, r8, r1
 8021e94:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8021e98:	440d      	add	r5, r1
 8021e9a:	4419      	add	r1, r3
 8021e9c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8021ea0:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8021ea4:	441a      	add	r2, r3
 8021ea6:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8021eaa:	9304      	str	r3, [sp, #16]
 8021eac:	4b95      	ldr	r3, [pc, #596]	@ (8022104 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8021eae:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8021eb2:	6818      	ldr	r0, [r3, #0]
 8021eb4:	6803      	ldr	r3, [r0, #0]
 8021eb6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8021eb8:	4798      	blx	r3
 8021eba:	4b93      	ldr	r3, [pc, #588]	@ (8022108 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8021ebc:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8021ec0:	881a      	ldrh	r2, [r3, #0]
 8021ec2:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8021ec6:	9318      	str	r3, [sp, #96]	@ 0x60
 8021ec8:	fb02 7101 	mla	r1, r2, r1, r7
 8021ecc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8021ed0:	4356      	muls	r6, r2
 8021ed2:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 8021ed6:	f108 0801 	add.w	r8, r8, #1
 8021eda:	920a      	str	r2, [sp, #40]	@ 0x28
 8021edc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8021ede:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8021ee2:	930f      	str	r3, [sp, #60]	@ 0x3c
 8021ee4:	fa1f f888 	uxth.w	r8, r8
 8021ee8:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8021eec:	f108 0204 	add.w	r2, r8, #4
 8021ef0:	9211      	str	r2, [sp, #68]	@ 0x44
 8021ef2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8021ef4:	4b85      	ldr	r3, [pc, #532]	@ (802210c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8021ef6:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8021efa:	b2ad      	uxth	r5, r5
 8021efc:	9215      	str	r2, [sp, #84]	@ 0x54
 8021efe:	2d00      	cmp	r5, #0
 8021f00:	9a04      	ldr	r2, [sp, #16]
 8021f02:	f04f 0100 	mov.w	r1, #0
 8021f06:	bf18      	it	ne
 8021f08:	2200      	movne	r2, #0
 8021f0a:	1b1b      	subs	r3, r3, r4
 8021f0c:	b292      	uxth	r2, r2
 8021f0e:	910d      	str	r1, [sp, #52]	@ 0x34
 8021f10:	9319      	str	r3, [sp, #100]	@ 0x64
 8021f12:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8021f14:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8021f16:	fa11 f383 	uxtah	r3, r1, r3
 8021f1a:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8021f1c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8021f20:	3304      	adds	r3, #4
 8021f22:	9306      	str	r3, [sp, #24]
 8021f24:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8021f26:	4283      	cmp	r3, r0
 8021f28:	f240 8166 	bls.w	80221f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 8021f2c:	9902      	ldr	r1, [sp, #8]
 8021f2e:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8021f32:	fbb5 f3f3 	udiv	r3, r5, r3
 8021f36:	1acb      	subs	r3, r1, r3
 8021f38:	b29b      	uxth	r3, r3
 8021f3a:	9316      	str	r3, [sp, #88]	@ 0x58
 8021f3c:	9b06      	ldr	r3, [sp, #24]
 8021f3e:	9e06      	ldr	r6, [sp, #24]
 8021f40:	7859      	ldrb	r1, [r3, #1]
 8021f42:	789b      	ldrb	r3, [r3, #2]
 8021f44:	7836      	ldrb	r6, [r6, #0]
 8021f46:	9612      	str	r6, [sp, #72]	@ 0x48
 8021f48:	021b      	lsls	r3, r3, #8
 8021f4a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8021f4e:	9906      	ldr	r1, [sp, #24]
 8021f50:	78c9      	ldrb	r1, [r1, #3]
 8021f52:	430b      	orrs	r3, r1
 8021f54:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8021f56:	3601      	adds	r6, #1
 8021f58:	4419      	add	r1, r3
 8021f5a:	9605      	str	r6, [sp, #20]
 8021f5c:	1c4e      	adds	r6, r1, #1
 8021f5e:	9603      	str	r6, [sp, #12]
 8021f60:	7849      	ldrb	r1, [r1, #1]
 8021f62:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8021f64:	0209      	lsls	r1, r1, #8
 8021f66:	5cf3      	ldrb	r3, [r6, r3]
 8021f68:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 8021f6c:	4319      	orrs	r1, r3
 8021f6e:	b28b      	uxth	r3, r1
 8021f70:	930c      	str	r3, [sp, #48]	@ 0x30
 8021f72:	2300      	movs	r3, #0
 8021f74:	f04f 0a01 	mov.w	sl, #1
 8021f78:	9307      	str	r3, [sp, #28]
 8021f7a:	469c      	mov	ip, r3
 8021f7c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8021f80:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8021f84:	46d3      	mov	fp, sl
 8021f86:	4657      	mov	r7, sl
 8021f88:	930e      	str	r3, [sp, #56]	@ 0x38
 8021f8a:	2d00      	cmp	r5, #0
 8021f8c:	d07e      	beq.n	802208c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8021f8e:	42af      	cmp	r7, r5
 8021f90:	d26e      	bcs.n	8022070 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 8021f92:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8021f94:	9201      	str	r2, [sp, #4]
 8021f96:	1bed      	subs	r5, r5, r7
 8021f98:	4283      	cmp	r3, r0
 8021f9a:	b2ad      	uxth	r5, r5
 8021f9c:	d802      	bhi.n	8021fa4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8021f9e:	e073      	b.n	8022088 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 8021fa0:	2b00      	cmp	r3, #0
 8021fa2:	d15f      	bne.n	8022064 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 8021fa4:	9b03      	ldr	r3, [sp, #12]
 8021fa6:	785b      	ldrb	r3, [r3, #1]
 8021fa8:	f1cb 0207 	rsb	r2, fp, #7
 8021fac:	4093      	lsls	r3, r2
 8021fae:	005b      	lsls	r3, r3, #1
 8021fb0:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8021fb4:	9b03      	ldr	r3, [sp, #12]
 8021fb6:	781b      	ldrb	r3, [r3, #0]
 8021fb8:	fa43 f30b 	asr.w	r3, r3, fp
 8021fbc:	b2db      	uxtb	r3, r3
 8021fbe:	4313      	orrs	r3, r2
 8021fc0:	f10b 0201 	add.w	r2, fp, #1
 8021fc4:	fa5f fb82 	uxtb.w	fp, r2
 8021fc8:	9a03      	ldr	r2, [sp, #12]
 8021fca:	f1bb 0f08 	cmp.w	fp, #8
 8021fce:	bf15      	itete	ne
 8021fd0:	3201      	addne	r2, #1
 8021fd2:	3202      	addeq	r2, #2
 8021fd4:	9203      	strne	r2, [sp, #12]
 8021fd6:	9203      	streq	r2, [sp, #12]
 8021fd8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8021fda:	b29f      	uxth	r7, r3
 8021fdc:	bf08      	it	eq
 8021fde:	f04f 0b00 	moveq.w	fp, #0
 8021fe2:	42ba      	cmp	r2, r7
 8021fe4:	d309      	bcc.n	8021ffa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 8021fe6:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8021fea:	2301      	movs	r3, #1
 8021fec:	9a05      	ldr	r2, [sp, #20]
 8021fee:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 8021ff2:	d30e      	bcc.n	8022012 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 8021ff4:	469a      	mov	sl, r3
 8021ff6:	2600      	movs	r6, #0
 8021ff8:	e035      	b.n	8022066 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 8021ffa:	9b05      	ldr	r3, [sp, #20]
 8021ffc:	429f      	cmp	r7, r3
 8021ffe:	d318      	bcc.n	8022032 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 8022000:	eb04 030a 	add.w	r3, r4, sl
 8022004:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 8022008:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 802200c:	f10a 0301 	add.w	r3, sl, #1
 8022010:	b29b      	uxth	r3, r3
 8022012:	9a05      	ldr	r2, [sp, #20]
 8022014:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8022018:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802201a:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 802201e:	7116      	strb	r6, [r2, #4]
 8022020:	f10a 0601 	add.w	r6, sl, #1
 8022024:	80d1      	strh	r1, [r2, #6]
 8022026:	7156      	strb	r6, [r2, #5]
 8022028:	9a05      	ldr	r2, [sp, #20]
 802202a:	3201      	adds	r2, #1
 802202c:	b292      	uxth	r2, r2
 802202e:	9205      	str	r2, [sp, #20]
 8022030:	e7e0      	b.n	8021ff4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 8022032:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 8022036:	463a      	mov	r2, r7
 8022038:	795b      	ldrb	r3, [r3, #5]
 802203a:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 802203e:	4426      	add	r6, r4
 8022040:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8022042:	eb01 0c06 	add.w	ip, r1, r6
 8022046:	f1bc 0f00 	cmp.w	ip, #0
 802204a:	dd07      	ble.n	802205c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 802204c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8022050:	f892 c004 	ldrb.w	ip, [r2, #4]
 8022054:	f806 cd01 	strb.w	ip, [r6, #-1]!
 8022058:	88d2      	ldrh	r2, [r2, #6]
 802205a:	e7f1      	b.n	8022040 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 802205c:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8022060:	b29b      	uxth	r3, r3
 8022062:	e7c3      	b.n	8021fec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 8022064:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8022066:	970c      	str	r7, [sp, #48]	@ 0x30
 8022068:	9a01      	ldr	r2, [sp, #4]
 802206a:	46b4      	mov	ip, r6
 802206c:	461f      	mov	r7, r3
 802206e:	e78c      	b.n	8021f8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 8022070:	1b7b      	subs	r3, r7, r5
 8022072:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8022076:	9201      	str	r2, [sp, #4]
 8022078:	eb0c 0605 	add.w	r6, ip, r5
 802207c:	b29b      	uxth	r3, r3
 802207e:	b2b6      	uxth	r6, r6
 8022080:	2500      	movs	r5, #0
 8022082:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8022084:	4282      	cmp	r2, r0
 8022086:	d88b      	bhi.n	8021fa0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8022088:	9a01      	ldr	r2, [sp, #4]
 802208a:	e74b      	b.n	8021f24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 802208c:	4297      	cmp	r7, r2
 802208e:	d332      	bcc.n	80220f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 8022090:	1abb      	subs	r3, r7, r2
 8022092:	b29b      	uxth	r3, r3
 8022094:	9208      	str	r2, [sp, #32]
 8022096:	9501      	str	r5, [sp, #4]
 8022098:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802209a:	29ff      	cmp	r1, #255	@ 0xff
 802209c:	9908      	ldr	r1, [sp, #32]
 802209e:	eb0c 0601 	add.w	r6, ip, r1
 80220a2:	d135      	bne.n	8022110 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 80220a4:	f1a0 0e02 	sub.w	lr, r0, #2
 80220a8:	b2b6      	uxth	r6, r6
 80220aa:	45b4      	cmp	ip, r6
 80220ac:	f040 808c 	bne.w	80221c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 80220b0:	9908      	ldr	r1, [sp, #32]
 80220b2:	4297      	cmp	r7, r2
 80220b4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80220b8:	d3e2      	bcc.n	8022080 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 80220ba:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80220bc:	9904      	ldr	r1, [sp, #16]
 80220be:	8812      	ldrh	r2, [r2, #0]
 80220c0:	1a52      	subs	r2, r2, r1
 80220c2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80220c6:	9a07      	ldr	r2, [sp, #28]
 80220c8:	9916      	ldr	r1, [sp, #88]	@ 0x58
 80220ca:	3201      	adds	r2, #1
 80220cc:	428a      	cmp	r2, r1
 80220ce:	9207      	str	r2, [sp, #28]
 80220d0:	f040 8087 	bne.w	80221e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 80220d4:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 80220d8:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 80220dc:	9b04      	ldr	r3, [sp, #16]
 80220de:	1bed      	subs	r5, r5, r7
 80220e0:	b2ad      	uxth	r5, r5
 80220e2:	2d00      	cmp	r5, #0
 80220e4:	bf08      	it	eq
 80220e6:	461a      	moveq	r2, r3
 80220e8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80220ea:	bf18      	it	ne
 80220ec:	2200      	movne	r2, #0
 80220ee:	3301      	adds	r3, #1
 80220f0:	930d      	str	r3, [sp, #52]	@ 0x34
 80220f2:	b292      	uxth	r2, r2
 80220f4:	e70d      	b.n	8021f12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 80220f6:	1bd1      	subs	r1, r2, r7
 80220f8:	b28b      	uxth	r3, r1
 80220fa:	9301      	str	r3, [sp, #4]
 80220fc:	9708      	str	r7, [sp, #32]
 80220fe:	462b      	mov	r3, r5
 8022100:	e7ca      	b.n	8022098 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 8022102:	bf00      	nop
 8022104:	2000e40c 	.word	0x2000e40c
 8022108:	2000e406 	.word	0x2000e406
 802210c:	fffff7fb 	.word	0xfffff7fb
 8022110:	b2b6      	uxth	r6, r6
 8022112:	900b      	str	r0, [sp, #44]	@ 0x2c
 8022114:	45b4      	cmp	ip, r6
 8022116:	d0cb      	beq.n	80220b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 8022118:	f10c 0101 	add.w	r1, ip, #1
 802211c:	44a4      	add	ip, r4
 802211e:	9117      	str	r1, [sp, #92]	@ 0x5c
 8022120:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8022124:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8022126:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 802212a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802212c:	f8b1 c000 	ldrh.w	ip, [r1]
 8022130:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8022132:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 8022136:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 802213a:	fb1e fe01 	smulbb	lr, lr, r1
 802213e:	ea4f 2825 	mov.w	r8, r5, asr #8
 8022142:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8022144:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8022148:	fb08 e801 	mla	r8, r8, r1, lr
 802214c:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8022150:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8022152:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8022156:	fb19 f901 	smulbb	r9, r9, r1
 802215a:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 802215e:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8022160:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8022164:	fb0e 9e01 	mla	lr, lr, r1, r9
 8022168:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802216c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802216e:	fa5f fc8c 	uxtb.w	ip, ip
 8022172:	fb1c fc01 	smulbb	ip, ip, r1
 8022176:	00ed      	lsls	r5, r5, #3
 8022178:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 802217a:	b2ed      	uxtb	r5, r5
 802217c:	fb05 c501 	mla	r5, r5, r1, ip
 8022180:	fa1f f888 	uxth.w	r8, r8
 8022184:	fa1f fe8e 	uxth.w	lr, lr
 8022188:	b2ad      	uxth	r5, r5
 802218a:	f108 0c01 	add.w	ip, r8, #1
 802218e:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8022192:	f10e 0901 	add.w	r9, lr, #1
 8022196:	f105 0c01 	add.w	ip, r5, #1
 802219a:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 802219e:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 80221a2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80221a6:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 80221aa:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80221ae:	ea4c 0808 	orr.w	r8, ip, r8
 80221b2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80221b4:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 80221b8:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80221bc:	ea48 0809 	orr.w	r8, r8, r9
 80221c0:	f821 8b02 	strh.w	r8, [r1], #2
 80221c4:	910b      	str	r1, [sp, #44]	@ 0x2c
 80221c6:	e7a5      	b.n	8022114 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 80221c8:	f10c 0801 	add.w	r8, ip, #1
 80221cc:	44a4      	add	ip, r4
 80221ce:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80221d0:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 80221d4:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 80221d8:	f82e 5f02 	strh.w	r5, [lr, #2]!
 80221dc:	fa1f fc88 	uxth.w	ip, r8
 80221e0:	e763      	b.n	80220aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 80221e2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80221e6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 80221ea:	1aad      	subs	r5, r5, r2
 80221ec:	b2ad      	uxth	r5, r5
 80221ee:	2d00      	cmp	r5, #0
 80221f0:	bf18      	it	ne
 80221f2:	2200      	movne	r2, #0
 80221f4:	9201      	str	r2, [sp, #4]
 80221f6:	e744      	b.n	8022082 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 80221f8:	4b03      	ldr	r3, [pc, #12]	@ (8022208 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 80221fa:	6818      	ldr	r0, [r3, #0]
 80221fc:	6803      	ldr	r3, [r0, #0]
 80221fe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8022200:	4798      	blx	r3
 8022202:	b01f      	add	sp, #124	@ 0x7c
 8022204:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022208:	2000e40c 	.word	0x2000e40c

0802220c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 802220c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022210:	b093      	sub	sp, #76	@ 0x4c
 8022212:	4616      	mov	r6, r2
 8022214:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 8022218:	9003      	str	r0, [sp, #12]
 802221a:	460d      	mov	r5, r1
 802221c:	9201      	str	r2, [sp, #4]
 802221e:	2a00      	cmp	r2, #0
 8022220:	f000 8304 	beq.w	802282c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 8022224:	6830      	ldr	r0, [r6, #0]
 8022226:	6871      	ldr	r1, [r6, #4]
 8022228:	ac0e      	add	r4, sp, #56	@ 0x38
 802222a:	c403      	stmia	r4!, {r0, r1}
 802222c:	6818      	ldr	r0, [r3, #0]
 802222e:	6859      	ldr	r1, [r3, #4]
 8022230:	ac10      	add	r4, sp, #64	@ 0x40
 8022232:	c403      	stmia	r4!, {r0, r1}
 8022234:	a80e      	add	r0, sp, #56	@ 0x38
 8022236:	f7f8 fa97 	bl	801a768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802223a:	4631      	mov	r1, r6
 802223c:	a810      	add	r0, sp, #64	@ 0x40
 802223e:	f7f8 fad7 	bl	801a7f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8022242:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8022246:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 802224a:	bfd7      	itett	le
 802224c:	b293      	uxthle	r3, r2
 802224e:	2301      	movgt	r3, #1
 8022250:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8022254:	fb91 f3f3 	sdivle	r3, r1, r3
 8022258:	9304      	str	r3, [sp, #16]
 802225a:	f105 0308 	add.w	r3, r5, #8
 802225e:	9904      	ldr	r1, [sp, #16]
 8022260:	9308      	str	r3, [sp, #32]
 8022262:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 8022266:	440b      	add	r3, r1
 8022268:	3b01      	subs	r3, #1
 802226a:	fb93 f3f1 	sdiv	r3, r3, r1
 802226e:	9908      	ldr	r1, [sp, #32]
 8022270:	3b01      	subs	r3, #1
 8022272:	b29b      	uxth	r3, r3
 8022274:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8022278:	9309      	str	r3, [sp, #36]	@ 0x24
 802227a:	9904      	ldr	r1, [sp, #16]
 802227c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8022280:	fb93 f0f1 	sdiv	r0, r3, r1
 8022284:	b284      	uxth	r4, r0
 8022286:	9405      	str	r4, [sp, #20]
 8022288:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 802228c:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 8022290:	fb05 3914 	mls	r9, r5, r4, r3
 8022294:	fb19 f902 	smulbb	r9, r9, r2
 8022298:	4489      	add	r9, r1
 802229a:	fa1f f989 	uxth.w	r9, r9
 802229e:	2d00      	cmp	r5, #0
 80222a0:	d05d      	beq.n	802235e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 80222a2:	1e6a      	subs	r2, r5, #1
 80222a4:	9808      	ldr	r0, [sp, #32]
 80222a6:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 80222aa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80222ac:	fa9a fa8a 	rev.w	sl, sl
 80222b0:	4492      	add	sl, r2
 80222b2:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 80222b6:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 80222ba:	4411      	add	r1, r2
 80222bc:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 80222c0:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 80222c4:	4413      	add	r3, r2
 80222c6:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 80222ca:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 80222ce:	9302      	str	r3, [sp, #8]
 80222d0:	4bcb      	ldr	r3, [pc, #812]	@ (8022600 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 80222d2:	6818      	ldr	r0, [r3, #0]
 80222d4:	6803      	ldr	r3, [r0, #0]
 80222d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80222d8:	4798      	blx	r3
 80222da:	4bca      	ldr	r3, [pc, #808]	@ (8022604 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 80222dc:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 80222e0:	881b      	ldrh	r3, [r3, #0]
 80222e2:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 80222e6:	fb03 2404 	mla	r4, r3, r4, r2
 80222ea:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80222ee:	436b      	muls	r3, r5
 80222f0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80222f4:	930d      	str	r3, [sp, #52]	@ 0x34
 80222f6:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 80222fa:	fb99 f3f3 	sdiv	r3, r9, r3
 80222fe:	9306      	str	r3, [sp, #24]
 8022300:	9b01      	ldr	r3, [sp, #4]
 8022302:	43db      	mvns	r3, r3
 8022304:	b2db      	uxtb	r3, r3
 8022306:	930a      	str	r3, [sp, #40]	@ 0x28
 8022308:	9b03      	ldr	r3, [sp, #12]
 802230a:	3304      	adds	r3, #4
 802230c:	4618      	mov	r0, r3
 802230e:	2280      	movs	r2, #128	@ 0x80
 8022310:	2100      	movs	r1, #0
 8022312:	930b      	str	r3, [sp, #44]	@ 0x2c
 8022314:	f00c fc19 	bl	802eb4a <memset>
 8022318:	4bbb      	ldr	r3, [pc, #748]	@ (8022608 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 802231a:	9300      	str	r3, [sp, #0]
 802231c:	2300      	movs	r3, #0
 802231e:	f04f 0600 	mov.w	r6, #0
 8022322:	9307      	str	r3, [sp, #28]
 8022324:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8022326:	42a3      	cmp	r3, r4
 8022328:	f240 827b 	bls.w	8022822 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 802232c:	f04f 0e07 	mov.w	lr, #7
 8022330:	f1b9 0f00 	cmp.w	r9, #0
 8022334:	f000 8159 	beq.w	80225ea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 8022338:	f89a 5000 	ldrb.w	r5, [sl]
 802233c:	b2ed      	uxtb	r5, r5
 802233e:	11aa      	asrs	r2, r5, #6
 8022340:	f10a 0701 	add.w	r7, sl, #1
 8022344:	d10e      	bne.n	8022364 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 8022346:	9b03      	ldr	r3, [sp, #12]
 8022348:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 802234c:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8022350:	88ae      	ldrh	r6, [r5, #4]
 8022352:	f109 39ff 	add.w	r9, r9, #4294967295
 8022356:	fa1f f989 	uxth.w	r9, r9
 802235a:	46ba      	mov	sl, r7
 802235c:	e7e8      	b.n	8022330 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 802235e:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 8022362:	e7a6      	b.n	80222b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 8022364:	2a01      	cmp	r2, #1
 8022366:	d129      	bne.n	80223bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 8022368:	f3c6 0304 	ubfx	r3, r6, #0, #5
 802236c:	f005 0203 	and.w	r2, r5, #3
 8022370:	3b02      	subs	r3, #2
 8022372:	4413      	add	r3, r2
 8022374:	f003 031f 	and.w	r3, r3, #31
 8022378:	f3c5 0281 	ubfx	r2, r5, #2, #2
 802237c:	f363 0604 	bfi	r6, r3, #0, #5
 8022380:	3a02      	subs	r2, #2
 8022382:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 8022386:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 802238a:	f3c5 1501 	ubfx	r5, r5, #4, #2
 802238e:	f362 164a 	bfi	r6, r2, #5, #6
 8022392:	3d02      	subs	r5, #2
 8022394:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 8022398:	f005 051f 	and.w	r5, r5, #31
 802239c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80223a0:	2103      	movs	r1, #3
 80223a2:	fb11 2205 	smlabb	r2, r1, r5, r2
 80223a6:	fb1e 2303 	smlabb	r3, lr, r3, r2
 80223aa:	9a03      	ldr	r2, [sp, #12]
 80223ac:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80223b0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80223b4:	f365 26cf 	bfi	r6, r5, #11, #5
 80223b8:	809e      	strh	r6, [r3, #4]
 80223ba:	e7ca      	b.n	8022352 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 80223bc:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 80223c0:	2a02      	cmp	r2, #2
 80223c2:	b2ab      	uxth	r3, r5
 80223c4:	d136      	bne.n	8022434 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 80223c6:	2101      	movs	r1, #1
 80223c8:	fb12 1205 	smlabb	r2, r2, r5, r1
 80223cc:	4492      	add	sl, r2
 80223ce:	463a      	mov	r2, r7
 80223d0:	4552      	cmp	r2, sl
 80223d2:	d01c      	beq.n	802240e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 80223d4:	4694      	mov	ip, r2
 80223d6:	f04f 0b03 	mov.w	fp, #3
 80223da:	f81c 1b02 	ldrb.w	r1, [ip], #2
 80223de:	7852      	ldrb	r2, [r2, #1]
 80223e0:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 80223e4:	f3c1 1045 	ubfx	r0, r1, #5, #6
 80223e8:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 80223ec:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80223f0:	f001 021f 	and.w	r2, r1, #31
 80223f4:	fb1b 0008 	smlabb	r0, fp, r8, r0
 80223f8:	fb1e 0002 	smlabb	r0, lr, r2, r0
 80223fc:	9a03      	ldr	r2, [sp, #12]
 80223fe:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8022402:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8022406:	460e      	mov	r6, r1
 8022408:	8081      	strh	r1, [r0, #4]
 802240a:	4662      	mov	r2, ip
 802240c:	e7e0      	b.n	80223d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 802240e:	4599      	cmp	r9, r3
 8022410:	d20b      	bcs.n	802242a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 8022412:	eba5 0509 	sub.w	r5, r5, r9
 8022416:	2d00      	cmp	r5, #0
 8022418:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 802241c:	f300 8209 	bgt.w	8022832 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 8022420:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8022424:	2301      	movs	r3, #1
 8022426:	9307      	str	r3, [sp, #28]
 8022428:	e00c      	b.n	8022444 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 802242a:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 802242e:	eba9 0903 	sub.w	r9, r9, r3
 8022432:	e790      	b.n	8022356 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 8022434:	4599      	cmp	r9, r3
 8022436:	d2fa      	bcs.n	802242e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 8022438:	eba5 0509 	sub.w	r5, r5, r9
 802243c:	2d00      	cmp	r5, #0
 802243e:	dc1d      	bgt.n	802247c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 8022440:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8022444:	f04f 0b00 	mov.w	fp, #0
 8022448:	f1b8 0f00 	cmp.w	r8, #0
 802244c:	f340 81a1 	ble.w	8022792 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 8022450:	783b      	ldrb	r3, [r7, #0]
 8022452:	b2db      	uxtb	r3, r3
 8022454:	119a      	asrs	r2, r3, #6
 8022456:	f107 0a01 	add.w	sl, r7, #1
 802245a:	f040 80d7 	bne.w	802260c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 802245e:	9a03      	ldr	r2, [sp, #12]
 8022460:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8022464:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022468:	889e      	ldrh	r6, [r3, #4]
 802246a:	9b01      	ldr	r3, [sp, #4]
 802246c:	2bff      	cmp	r3, #255	@ 0xff
 802246e:	f040 81e9 	bne.w	8022844 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 8022472:	8026      	strh	r6, [r4, #0]
 8022474:	f108 38ff 	add.w	r8, r8, #4294967295
 8022478:	3402      	adds	r4, #2
 802247a:	e0be      	b.n	80225fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 802247c:	9b02      	ldr	r3, [sp, #8]
 802247e:	9a02      	ldr	r2, [sp, #8]
 8022480:	42ab      	cmp	r3, r5
 8022482:	bfa8      	it	ge
 8022484:	462b      	movge	r3, r5
 8022486:	eba2 0803 	sub.w	r8, r2, r3
 802248a:	9a07      	ldr	r2, [sp, #28]
 802248c:	1aed      	subs	r5, r5, r3
 802248e:	2a00      	cmp	r2, #0
 8022490:	d05a      	beq.n	8022548 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 8022492:	9a01      	ldr	r2, [sp, #4]
 8022494:	2aff      	cmp	r2, #255	@ 0xff
 8022496:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802249a:	d049      	beq.n	8022530 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 802249c:	f8bd e004 	ldrh.w	lr, [sp, #4]
 80224a0:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 80224a4:	42a3      	cmp	r3, r4
 80224a6:	f240 80a5 	bls.w	80225f4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 80224aa:	46bc      	mov	ip, r7
 80224ac:	8820      	ldrh	r0, [r4, #0]
 80224ae:	f81c 2b02 	ldrb.w	r2, [ip], #2
 80224b2:	7879      	ldrb	r1, [r7, #1]
 80224b4:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80224b8:	b212      	sxth	r2, r2
 80224ba:	b291      	uxth	r1, r2
 80224bc:	ea4f 2a20 	mov.w	sl, r0, asr #8
 80224c0:	120f      	asrs	r7, r1, #8
 80224c2:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 80224c6:	fb1a fa09 	smulbb	sl, sl, r9
 80224ca:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80224ce:	fb07 a70e 	mla	r7, r7, lr, sl
 80224d2:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 80224d6:	00c0      	lsls	r0, r0, #3
 80224d8:	10c9      	asrs	r1, r1, #3
 80224da:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80224de:	00d2      	lsls	r2, r2, #3
 80224e0:	b2c0      	uxtb	r0, r0
 80224e2:	fb1a fa09 	smulbb	sl, sl, r9
 80224e6:	fb10 f009 	smulbb	r0, r0, r9
 80224ea:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80224ee:	b2d2      	uxtb	r2, r2
 80224f0:	b2bf      	uxth	r7, r7
 80224f2:	fb01 a10e 	mla	r1, r1, lr, sl
 80224f6:	fb02 020e 	mla	r2, r2, lr, r0
 80224fa:	b289      	uxth	r1, r1
 80224fc:	b292      	uxth	r2, r2
 80224fe:	1c78      	adds	r0, r7, #1
 8022500:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8022504:	f101 0a01 	add.w	sl, r1, #1
 8022508:	1c50      	adds	r0, r2, #1
 802250a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802250e:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 8022512:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8022516:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802251a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 802251e:	4307      	orrs	r7, r0
 8022520:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8022524:	ea47 070a 	orr.w	r7, r7, sl
 8022528:	f824 7b02 	strh.w	r7, [r4], #2
 802252c:	4667      	mov	r7, ip
 802252e:	e7b9      	b.n	80224a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 8022530:	42a3      	cmp	r3, r4
 8022532:	d95f      	bls.n	80225f4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 8022534:	463a      	mov	r2, r7
 8022536:	f812 1b02 	ldrb.w	r1, [r2], #2
 802253a:	7878      	ldrb	r0, [r7, #1]
 802253c:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 8022540:	f824 1b02 	strh.w	r1, [r4], #2
 8022544:	4617      	mov	r7, r2
 8022546:	e7f3      	b.n	8022530 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 8022548:	9901      	ldr	r1, [sp, #4]
 802254a:	29ff      	cmp	r1, #255	@ 0xff
 802254c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8022550:	b2b2      	uxth	r2, r6
 8022552:	d044      	beq.n	80225de <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 8022554:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8022558:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 802255c:	ea4f 2922 	mov.w	r9, r2, asr #8
 8022560:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8022564:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 8022568:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 802256c:	4608      	mov	r0, r1
 802256e:	fb09 f901 	mul.w	r9, r9, r1
 8022572:	fb0e fe01 	mul.w	lr, lr, r1
 8022576:	00d1      	lsls	r1, r2, #3
 8022578:	b2c9      	uxtb	r1, r1
 802257a:	4341      	muls	r1, r0
 802257c:	429c      	cmp	r4, r3
 802257e:	f4bf af61 	bcs.w	8022444 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8022582:	8822      	ldrh	r2, [r4, #0]
 8022584:	1210      	asrs	r0, r2, #8
 8022586:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 802258a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802258e:	00d2      	lsls	r2, r2, #3
 8022590:	fb00 900a 	mla	r0, r0, sl, r9
 8022594:	b2d2      	uxtb	r2, r2
 8022596:	b280      	uxth	r0, r0
 8022598:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 802259c:	fb02 120a 	mla	r2, r2, sl, r1
 80225a0:	b292      	uxth	r2, r2
 80225a2:	f100 0b01 	add.w	fp, r0, #1
 80225a6:	fb0c ec0a 	mla	ip, ip, sl, lr
 80225aa:	fa1f fc8c 	uxth.w	ip, ip
 80225ae:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80225b2:	1c50      	adds	r0, r2, #1
 80225b4:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80225b8:	f10c 0201 	add.w	r2, ip, #1
 80225bc:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80225c0:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 80225c4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80225c8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80225cc:	ea40 0b0b 	orr.w	fp, r0, fp
 80225d0:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 80225d4:	ea4b 0b0c 	orr.w	fp, fp, ip
 80225d8:	f824 bb02 	strh.w	fp, [r4], #2
 80225dc:	e7ce      	b.n	802257c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 80225de:	429c      	cmp	r4, r3
 80225e0:	f4bf af30 	bcs.w	8022444 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 80225e4:	f824 2b02 	strh.w	r2, [r4], #2
 80225e8:	e7f9      	b.n	80225de <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 80225ea:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80225ee:	4657      	mov	r7, sl
 80225f0:	464d      	mov	r5, r9
 80225f2:	e727      	b.n	8022444 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 80225f4:	2300      	movs	r3, #0
 80225f6:	e716      	b.n	8022426 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 80225f8:	44bb      	add	fp, r7
 80225fa:	4657      	mov	r7, sl
 80225fc:	e724      	b.n	8022448 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 80225fe:	bf00      	nop
 8022600:	2000e40c 	.word	0x2000e40c
 8022604:	2000e406 	.word	0x2000e406
 8022608:	20000140 	.word	0x20000140
 802260c:	2a01      	cmp	r2, #1
 802260e:	d12a      	bne.n	8022666 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 8022610:	f3c6 0104 	ubfx	r1, r6, #0, #5
 8022614:	f003 0203 	and.w	r2, r3, #3
 8022618:	3902      	subs	r1, #2
 802261a:	4411      	add	r1, r2
 802261c:	f001 011f 	and.w	r1, r1, #31
 8022620:	f3c3 0081 	ubfx	r0, r3, #2, #2
 8022624:	f361 0604 	bfi	r6, r1, #0, #5
 8022628:	3802      	subs	r0, #2
 802262a:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 802262e:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8022632:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8022636:	f360 164a 	bfi	r6, r0, #5, #6
 802263a:	3b02      	subs	r3, #2
 802263c:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 8022640:	f002 031f 	and.w	r3, r2, #31
 8022644:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8022648:	2203      	movs	r2, #3
 802264a:	f363 26cf 	bfi	r6, r3, #11, #5
 802264e:	fb12 0303 	smlabb	r3, r2, r3, r0
 8022652:	2207      	movs	r2, #7
 8022654:	fb12 3301 	smlabb	r3, r2, r1, r3
 8022658:	9a03      	ldr	r2, [sp, #12]
 802265a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 802265e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022662:	809e      	strh	r6, [r3, #4]
 8022664:	e701      	b.n	802246a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 8022666:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 802266a:	45a8      	cmp	r8, r5
 802266c:	4647      	mov	r7, r8
 802266e:	bfa8      	it	ge
 8022670:	462f      	movge	r7, r5
 8022672:	2a02      	cmp	r2, #2
 8022674:	d154      	bne.n	8022720 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 8022676:	9b01      	ldr	r3, [sp, #4]
 8022678:	2bff      	cmp	r3, #255	@ 0xff
 802267a:	d01a      	beq.n	80226b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 802267c:	eb0b 0307 	add.w	r3, fp, r7
 8022680:	2b40      	cmp	r3, #64	@ 0x40
 8022682:	dd16      	ble.n	80226b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 8022684:	ea4f 094b 	mov.w	r9, fp, lsl #1
 8022688:	4649      	mov	r1, r9
 802268a:	9800      	ldr	r0, [sp, #0]
 802268c:	f7e0 f83e 	bl	800270c <_ZN8touchgfx5paint9flushLineEPmi>
 8022690:	465a      	mov	r2, fp
 8022692:	9b01      	ldr	r3, [sp, #4]
 8022694:	9900      	ldr	r1, [sp, #0]
 8022696:	4620      	mov	r0, r4
 8022698:	f7e0 f868 	bl	800276c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 802269c:	9b00      	ldr	r3, [sp, #0]
 802269e:	461a      	mov	r2, r3
 80226a0:	4b6c      	ldr	r3, [pc, #432]	@ (8022854 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 80226a2:	429a      	cmp	r2, r3
 80226a4:	bf0c      	ite	eq
 80226a6:	4b6c      	ldreq	r3, [pc, #432]	@ (8022858 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 80226a8:	4b6a      	ldrne	r3, [pc, #424]	@ (8022854 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 80226aa:	9300      	str	r3, [sp, #0]
 80226ac:	444c      	add	r4, r9
 80226ae:	f04f 0b00 	mov.w	fp, #0
 80226b2:	4652      	mov	r2, sl
 80226b4:	2100      	movs	r1, #0
 80226b6:	42a9      	cmp	r1, r5
 80226b8:	da2c      	bge.n	8022714 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 80226ba:	4694      	mov	ip, r2
 80226bc:	f04f 0903 	mov.w	r9, #3
 80226c0:	f81c 3b02 	ldrb.w	r3, [ip], #2
 80226c4:	7852      	ldrb	r2, [r2, #1]
 80226c6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80226ca:	f3c3 1045 	ubfx	r0, r3, #5, #6
 80226ce:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 80226d2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80226d6:	f003 021f 	and.w	r2, r3, #31
 80226da:	fb19 000e 	smlabb	r0, r9, lr, r0
 80226de:	f04f 0e07 	mov.w	lr, #7
 80226e2:	fb1e 0002 	smlabb	r0, lr, r2, r0
 80226e6:	9a03      	ldr	r2, [sp, #12]
 80226e8:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 80226ec:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80226f0:	42b9      	cmp	r1, r7
 80226f2:	461e      	mov	r6, r3
 80226f4:	8083      	strh	r3, [r0, #4]
 80226f6:	da0a      	bge.n	802270e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 80226f8:	9a01      	ldr	r2, [sp, #4]
 80226fa:	2aff      	cmp	r2, #255	@ 0xff
 80226fc:	bf15      	itete	ne
 80226fe:	9a00      	ldrne	r2, [sp, #0]
 8022700:	8023      	strheq	r3, [r4, #0]
 8022702:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 8022706:	3402      	addeq	r4, #2
 8022708:	bf18      	it	ne
 802270a:	f10b 0b01 	addne.w	fp, fp, #1
 802270e:	3101      	adds	r1, #1
 8022710:	4662      	mov	r2, ip
 8022712:	e7d0      	b.n	80226b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 8022714:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8022718:	eba8 0807 	sub.w	r8, r8, r7
 802271c:	1bed      	subs	r5, r5, r7
 802271e:	e76c      	b.n	80225fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8022720:	9b01      	ldr	r3, [sp, #4]
 8022722:	2bff      	cmp	r3, #255	@ 0xff
 8022724:	eba8 0807 	sub.w	r8, r8, r7
 8022728:	eba5 0507 	sub.w	r5, r5, r7
 802272c:	fa1f f986 	uxth.w	r9, r6
 8022730:	d027      	beq.n	8022782 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 8022732:	eb0b 0307 	add.w	r3, fp, r7
 8022736:	2b40      	cmp	r3, #64	@ 0x40
 8022738:	dd18      	ble.n	802276c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 802273a:	ea4f 034b 	mov.w	r3, fp, lsl #1
 802273e:	4619      	mov	r1, r3
 8022740:	9800      	ldr	r0, [sp, #0]
 8022742:	930c      	str	r3, [sp, #48]	@ 0x30
 8022744:	f7df ffe2 	bl	800270c <_ZN8touchgfx5paint9flushLineEPmi>
 8022748:	465a      	mov	r2, fp
 802274a:	9b01      	ldr	r3, [sp, #4]
 802274c:	9900      	ldr	r1, [sp, #0]
 802274e:	4620      	mov	r0, r4
 8022750:	f7e0 f80c 	bl	800276c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8022754:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8022756:	441c      	add	r4, r3
 8022758:	9b00      	ldr	r3, [sp, #0]
 802275a:	461a      	mov	r2, r3
 802275c:	4b3d      	ldr	r3, [pc, #244]	@ (8022854 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 802275e:	429a      	cmp	r2, r3
 8022760:	bf0c      	ite	eq
 8022762:	4b3d      	ldreq	r3, [pc, #244]	@ (8022858 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 8022764:	4b3b      	ldrne	r3, [pc, #236]	@ (8022854 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8022766:	9300      	str	r3, [sp, #0]
 8022768:	f04f 0b00 	mov.w	fp, #0
 802276c:	9b00      	ldr	r3, [sp, #0]
 802276e:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 8022772:	463b      	mov	r3, r7
 8022774:	2b00      	cmp	r3, #0
 8022776:	f43f af3f 	beq.w	80225f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 802277a:	f822 9b02 	strh.w	r9, [r2], #2
 802277e:	3b01      	subs	r3, #1
 8022780:	e7f8      	b.n	8022774 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 8022782:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 8022786:	42a7      	cmp	r7, r4
 8022788:	f67f af37 	bls.w	80225fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 802278c:	f824 9b02 	strh.w	r9, [r4], #2
 8022790:	e7f9      	b.n	8022786 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 8022792:	f1bb 0f00 	cmp.w	fp, #0
 8022796:	d00c      	beq.n	80227b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 8022798:	ea4f 084b 	mov.w	r8, fp, lsl #1
 802279c:	4641      	mov	r1, r8
 802279e:	9800      	ldr	r0, [sp, #0]
 80227a0:	f7df ffb4 	bl	800270c <_ZN8touchgfx5paint9flushLineEPmi>
 80227a4:	4620      	mov	r0, r4
 80227a6:	9b01      	ldr	r3, [sp, #4]
 80227a8:	9900      	ldr	r1, [sp, #0]
 80227aa:	465a      	mov	r2, fp
 80227ac:	f7df ffde 	bl	800276c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 80227b0:	4444      	add	r4, r8
 80227b2:	4b2a      	ldr	r3, [pc, #168]	@ (802285c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 80227b4:	9a02      	ldr	r2, [sp, #8]
 80227b6:	881b      	ldrh	r3, [r3, #0]
 80227b8:	1a9b      	subs	r3, r3, r2
 80227ba:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80227be:	9b06      	ldr	r3, [sp, #24]
 80227c0:	3301      	adds	r3, #1
 80227c2:	9306      	str	r3, [sp, #24]
 80227c4:	9a06      	ldr	r2, [sp, #24]
 80227c6:	9b04      	ldr	r3, [sp, #16]
 80227c8:	4293      	cmp	r3, r2
 80227ca:	d120      	bne.n	802280e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 80227cc:	9b05      	ldr	r3, [sp, #20]
 80227ce:	9a05      	ldr	r2, [sp, #20]
 80227d0:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 80227d4:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 80227d8:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80227da:	f103 0801 	add.w	r8, r3, #1
 80227de:	9b08      	ldr	r3, [sp, #32]
 80227e0:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 80227e4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80227e6:	ba3f      	rev	r7, r7
 80227e8:	2280      	movs	r2, #128	@ 0x80
 80227ea:	2100      	movs	r1, #0
 80227ec:	441f      	add	r7, r3
 80227ee:	eba9 0905 	sub.w	r9, r9, r5
 80227f2:	f00c f9aa 	bl	802eb4a <memset>
 80227f6:	2300      	movs	r3, #0
 80227f8:	fa1f f989 	uxth.w	r9, r9
 80227fc:	f04f 0600 	mov.w	r6, #0
 8022800:	f8cd 8014 	str.w	r8, [sp, #20]
 8022804:	9306      	str	r3, [sp, #24]
 8022806:	f7df ff75 	bl	80026f4 <_ZN8touchgfx5paint8tearDownEv>
 802280a:	46ba      	mov	sl, r7
 802280c:	e58a      	b.n	8022324 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 802280e:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 8022812:	9b02      	ldr	r3, [sp, #8]
 8022814:	eba9 0903 	sub.w	r9, r9, r3
 8022818:	eba9 0505 	sub.w	r5, r9, r5
 802281c:	fa1f f985 	uxth.w	r9, r5
 8022820:	e7f1      	b.n	8022806 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 8022822:	4b0f      	ldr	r3, [pc, #60]	@ (8022860 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 8022824:	6818      	ldr	r0, [r3, #0]
 8022826:	6803      	ldr	r3, [r0, #0]
 8022828:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802282a:	4798      	blx	r3
 802282c:	b013      	add	sp, #76	@ 0x4c
 802282e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022832:	9b02      	ldr	r3, [sp, #8]
 8022834:	9a02      	ldr	r2, [sp, #8]
 8022836:	42ab      	cmp	r3, r5
 8022838:	bfa8      	it	ge
 802283a:	462b      	movge	r3, r5
 802283c:	eba2 0803 	sub.w	r8, r2, r3
 8022840:	1aed      	subs	r5, r5, r3
 8022842:	e626      	b.n	8022492 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 8022844:	f108 38ff 	add.w	r8, r8, #4294967295
 8022848:	fa1f f986 	uxth.w	r9, r6
 802284c:	2500      	movs	r5, #0
 802284e:	2701      	movs	r7, #1
 8022850:	e76f      	b.n	8022732 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 8022852:	bf00      	nop
 8022854:	20000140 	.word	0x20000140
 8022858:	20000240 	.word	0x20000240
 802285c:	2000e406 	.word	0x2000e406
 8022860:	2000e40c 	.word	0x2000e40c

08022864 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8022864:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022868:	b08f      	sub	sp, #60	@ 0x3c
 802286a:	461c      	mov	r4, r3
 802286c:	9203      	str	r2, [sp, #12]
 802286e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8022872:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8022874:	9202      	str	r2, [sp, #8]
 8022876:	460f      	mov	r7, r1
 8022878:	2a00      	cmp	r2, #0
 802287a:	f000 8128 	beq.w	8022ace <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 802287e:	6820      	ldr	r0, [r4, #0]
 8022880:	6861      	ldr	r1, [r4, #4]
 8022882:	aa0a      	add	r2, sp, #40	@ 0x28
 8022884:	c203      	stmia	r2!, {r0, r1}
 8022886:	6818      	ldr	r0, [r3, #0]
 8022888:	6859      	ldr	r1, [r3, #4]
 802288a:	aa0c      	add	r2, sp, #48	@ 0x30
 802288c:	c203      	stmia	r2!, {r0, r1}
 802288e:	a80a      	add	r0, sp, #40	@ 0x28
 8022890:	f7f7 ff6a 	bl	801a768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022894:	4621      	mov	r1, r4
 8022896:	a80c      	add	r0, sp, #48	@ 0x30
 8022898:	f7f7 ffaa 	bl	801a7f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802289c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 80228a0:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 80228a4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 80228a8:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80228ac:	bfde      	ittt	le
 80228ae:	b2b3      	uxthle	r3, r6
 80228b0:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 80228b4:	fb92 f3f3 	sdivle	r3, r2, r3
 80228b8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80228bc:	bfc8      	it	gt
 80228be:	2301      	movgt	r3, #1
 80228c0:	fb92 f1f3 	sdiv	r1, r2, r3
 80228c4:	fa1f fc81 	uxth.w	ip, r1
 80228c8:	fb0c 2413 	mls	r4, ip, r3, r2
 80228cc:	fb14 f406 	smulbb	r4, r4, r6
 80228d0:	441d      	add	r5, r3
 80228d2:	4404      	add	r4, r0
 80228d4:	4661      	mov	r1, ip
 80228d6:	3d01      	subs	r5, #1
 80228d8:	b2a4      	uxth	r4, r4
 80228da:	fb95 f5f3 	sdiv	r5, r5, r3
 80228de:	b121      	cbz	r1, 80228ea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 80228e0:	9b03      	ldr	r3, [sp, #12]
 80228e2:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80228e6:	ba1b      	rev	r3, r3
 80228e8:	441f      	add	r7, r3
 80228ea:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80228ee:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 80228f2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 80228f6:	4418      	add	r0, r3
 80228f8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80228fc:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8022900:	441a      	add	r2, r3
 8022902:	4b74      	ldr	r3, [pc, #464]	@ (8022ad4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8022904:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8022908:	6818      	ldr	r0, [r3, #0]
 802290a:	6803      	ldr	r3, [r0, #0]
 802290c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802290e:	4798      	blx	r3
 8022910:	4a71      	ldr	r2, [pc, #452]	@ (8022ad8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 8022912:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8022916:	8813      	ldrh	r3, [r2, #0]
 8022918:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 802291c:	9209      	str	r2, [sp, #36]	@ 0x24
 802291e:	fb03 c101 	mla	r1, r3, r1, ip
 8022922:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8022926:	4373      	muls	r3, r6
 8022928:	b2ad      	uxth	r5, r5
 802292a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 802292e:	00ad      	lsls	r5, r5, #2
 8022930:	2c00      	cmp	r4, #0
 8022932:	9304      	str	r3, [sp, #16]
 8022934:	f105 0304 	add.w	r3, r5, #4
 8022938:	9305      	str	r3, [sp, #20]
 802293a:	bf0c      	ite	eq
 802293c:	46c8      	moveq	r8, r9
 802293e:	f04f 0800 	movne.w	r8, #0
 8022942:	2300      	movs	r3, #0
 8022944:	fa1f f888 	uxth.w	r8, r8
 8022948:	9301      	str	r3, [sp, #4]
 802294a:	9a04      	ldr	r2, [sp, #16]
 802294c:	4282      	cmp	r2, r0
 802294e:	f240 80b9 	bls.w	8022ac4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 8022952:	b95b      	cbnz	r3, 802296c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 8022954:	783a      	ldrb	r2, [r7, #0]
 8022956:	0993      	lsrs	r3, r2, #6
 8022958:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 802295c:	9201      	str	r2, [sp, #4]
 802295e:	1e5a      	subs	r2, r3, #1
 8022960:	2a02      	cmp	r2, #2
 8022962:	bf8d      	iteet	hi
 8022964:	787b      	ldrbhi	r3, [r7, #1]
 8022966:	3701      	addls	r7, #1
 8022968:	b29b      	uxthls	r3, r3
 802296a:	3702      	addhi	r7, #2
 802296c:	b184      	cbz	r4, 8022990 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 802296e:	429c      	cmp	r4, r3
 8022970:	bf95      	itete	ls
 8022972:	1b1c      	subls	r4, r3, r4
 8022974:	1ae4      	subhi	r4, r4, r3
 8022976:	fa1f fa84 	uxthls.w	sl, r4
 802297a:	b2a4      	uxthhi	r4, r4
 802297c:	bf87      	ittee	hi
 802297e:	46c4      	movhi	ip, r8
 8022980:	f04f 0a00 	movhi.w	sl, #0
 8022984:	fa1f fc89 	uxthls.w	ip, r9
 8022988:	2400      	movls	r4, #0
 802298a:	4653      	mov	r3, sl
 802298c:	46e0      	mov	r8, ip
 802298e:	e7dc      	b.n	802294a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 8022990:	2204      	movs	r2, #4
 8022992:	4615      	mov	r5, r2
 8022994:	9905      	ldr	r1, [sp, #20]
 8022996:	9a01      	ldr	r2, [sp, #4]
 8022998:	fb15 1202 	smlabb	r2, r5, r2, r1
 802299c:	9903      	ldr	r1, [sp, #12]
 802299e:	588a      	ldr	r2, [r1, r2]
 80229a0:	4543      	cmp	r3, r8
 80229a2:	bf27      	ittee	cs
 80229a4:	eba3 0a08 	subcs.w	sl, r3, r8
 80229a8:	46c6      	movcs	lr, r8
 80229aa:	eba8 0c03 	subcc.w	ip, r8, r3
 80229ae:	469e      	movcc	lr, r3
 80229b0:	ea4f 6112 	mov.w	r1, r2, lsr #24
 80229b4:	bf27      	ittee	cs
 80229b6:	fa1f fa8a 	uxthcs.w	sl, sl
 80229ba:	46a4      	movcs	ip, r4
 80229bc:	fa1f fc8c 	uxthcc.w	ip, ip
 80229c0:	46a2      	movcc	sl, r4
 80229c2:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 80229c6:	2900      	cmp	r1, #0
 80229c8:	d066      	beq.n	8022a98 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 80229ca:	29ff      	cmp	r1, #255	@ 0xff
 80229cc:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80229d0:	d114      	bne.n	80229fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 80229d2:	9d02      	ldr	r5, [sp, #8]
 80229d4:	2dff      	cmp	r5, #255	@ 0xff
 80229d6:	d111      	bne.n	80229fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 80229d8:	0951      	lsrs	r1, r2, #5
 80229da:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80229de:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80229e2:	f026 0607 	bic.w	r6, r6, #7
 80229e6:	430e      	orrs	r6, r1
 80229e8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80229ec:	4316      	orrs	r6, r2
 80229ee:	b2b6      	uxth	r6, r6
 80229f0:	4486      	add	lr, r0
 80229f2:	4586      	cmp	lr, r0
 80229f4:	d051      	beq.n	8022a9a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80229f6:	f820 6b02 	strh.w	r6, [r0], #2
 80229fa:	e7fa      	b.n	80229f2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 80229fc:	9d02      	ldr	r5, [sp, #8]
 80229fe:	4369      	muls	r1, r5
 8022a00:	1c4d      	adds	r5, r1, #1
 8022a02:	eb05 2521 	add.w	r5, r5, r1, asr #8
 8022a06:	122d      	asrs	r5, r5, #8
 8022a08:	ea6f 0b05 	mvn.w	fp, r5
 8022a0c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8022a10:	b2ad      	uxth	r5, r5
 8022a12:	b2f6      	uxtb	r6, r6
 8022a14:	b2d2      	uxtb	r2, r2
 8022a16:	fb11 f105 	smulbb	r1, r1, r5
 8022a1a:	fb16 f605 	smulbb	r6, r6, r5
 8022a1e:	fb12 f205 	smulbb	r2, r2, r5
 8022a22:	b289      	uxth	r1, r1
 8022a24:	b2b6      	uxth	r6, r6
 8022a26:	b292      	uxth	r2, r2
 8022a28:	9106      	str	r1, [sp, #24]
 8022a2a:	9607      	str	r6, [sp, #28]
 8022a2c:	9208      	str	r2, [sp, #32]
 8022a2e:	4486      	add	lr, r0
 8022a30:	fa5f fb8b 	uxtb.w	fp, fp
 8022a34:	4586      	cmp	lr, r0
 8022a36:	d030      	beq.n	8022a9a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8022a38:	8802      	ldrh	r2, [r0, #0]
 8022a3a:	9906      	ldr	r1, [sp, #24]
 8022a3c:	1216      	asrs	r6, r2, #8
 8022a3e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8022a42:	10d5      	asrs	r5, r2, #3
 8022a44:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8022a48:	fb06 160b 	mla	r6, r6, fp, r1
 8022a4c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8022a50:	9907      	ldr	r1, [sp, #28]
 8022a52:	00d2      	lsls	r2, r2, #3
 8022a54:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8022a58:	fb05 150b 	mla	r5, r5, fp, r1
 8022a5c:	b2d2      	uxtb	r2, r2
 8022a5e:	9908      	ldr	r1, [sp, #32]
 8022a60:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8022a64:	b2b6      	uxth	r6, r6
 8022a66:	fb02 120b 	mla	r2, r2, fp, r1
 8022a6a:	b292      	uxth	r2, r2
 8022a6c:	1c71      	adds	r1, r6, #1
 8022a6e:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 8022a72:	1c51      	adds	r1, r2, #1
 8022a74:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8022a78:	b2ad      	uxth	r5, r5
 8022a7a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022a7e:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8022a82:	4316      	orrs	r6, r2
 8022a84:	1c6a      	adds	r2, r5, #1
 8022a86:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8022a8a:	096d      	lsrs	r5, r5, #5
 8022a8c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8022a90:	432e      	orrs	r6, r5
 8022a92:	f820 6b02 	strh.w	r6, [r0], #2
 8022a96:	e7cd      	b.n	8022a34 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 8022a98:	4470      	add	r0, lr
 8022a9a:	4543      	cmp	r3, r8
 8022a9c:	f4ff af75 	bcc.w	802298a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8022aa0:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8022aa4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022aa6:	fa1f fc89 	uxth.w	ip, r9
 8022aaa:	eba4 040c 	sub.w	r4, r4, ip
 8022aae:	881b      	ldrh	r3, [r3, #0]
 8022ab0:	b2a4      	uxth	r4, r4
 8022ab2:	2c00      	cmp	r4, #0
 8022ab4:	eba3 0309 	sub.w	r3, r3, r9
 8022ab8:	bf18      	it	ne
 8022aba:	f04f 0c00 	movne.w	ip, #0
 8022abe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8022ac2:	e762      	b.n	802298a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8022ac4:	4b03      	ldr	r3, [pc, #12]	@ (8022ad4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8022ac6:	6818      	ldr	r0, [r3, #0]
 8022ac8:	6803      	ldr	r3, [r0, #0]
 8022aca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8022acc:	4798      	blx	r3
 8022ace:	b00f      	add	sp, #60	@ 0x3c
 8022ad0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022ad4:	2000e40c 	.word	0x2000e40c
 8022ad8:	2000e406 	.word	0x2000e406

08022adc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8022adc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022ae0:	b093      	sub	sp, #76	@ 0x4c
 8022ae2:	461c      	mov	r4, r3
 8022ae4:	9205      	str	r2, [sp, #20]
 8022ae6:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 8022aea:	9101      	str	r1, [sp, #4]
 8022aec:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022aee:	9202      	str	r2, [sp, #8]
 8022af0:	2a00      	cmp	r2, #0
 8022af2:	f000 812c 	beq.w	8022d4e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8022af6:	6820      	ldr	r0, [r4, #0]
 8022af8:	6861      	ldr	r1, [r4, #4]
 8022afa:	aa0e      	add	r2, sp, #56	@ 0x38
 8022afc:	c203      	stmia	r2!, {r0, r1}
 8022afe:	6818      	ldr	r0, [r3, #0]
 8022b00:	6859      	ldr	r1, [r3, #4]
 8022b02:	aa10      	add	r2, sp, #64	@ 0x40
 8022b04:	c203      	stmia	r2!, {r0, r1}
 8022b06:	a80e      	add	r0, sp, #56	@ 0x38
 8022b08:	f7f7 fe2e 	bl	801a768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022b0c:	4621      	mov	r1, r4
 8022b0e:	a810      	add	r0, sp, #64	@ 0x40
 8022b10:	f7f7 fe6e 	bl	801a7f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8022b14:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8022b18:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 8022b1c:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 8022b20:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8022b24:	bfde      	ittt	le
 8022b26:	b2b3      	uxthle	r3, r6
 8022b28:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8022b2c:	fb92 f3f3 	sdivle	r3, r2, r3
 8022b30:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8022b34:	bfc8      	it	gt
 8022b36:	2301      	movgt	r3, #1
 8022b38:	fb92 f1f3 	sdiv	r1, r2, r3
 8022b3c:	fa1f fc81 	uxth.w	ip, r1
 8022b40:	fb0c 2413 	mls	r4, ip, r3, r2
 8022b44:	fb14 f406 	smulbb	r4, r4, r6
 8022b48:	441d      	add	r5, r3
 8022b4a:	4404      	add	r4, r0
 8022b4c:	4661      	mov	r1, ip
 8022b4e:	3d01      	subs	r5, #1
 8022b50:	b2a4      	uxth	r4, r4
 8022b52:	fb95 f5f3 	sdiv	r5, r5, r3
 8022b56:	b131      	cbz	r1, 8022b66 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 8022b58:	9b05      	ldr	r3, [sp, #20]
 8022b5a:	9901      	ldr	r1, [sp, #4]
 8022b5c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8022b60:	ba1b      	rev	r3, r3
 8022b62:	4419      	add	r1, r3
 8022b64:	9101      	str	r1, [sp, #4]
 8022b66:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8022b6a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8022b6e:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 8022b72:	4418      	add	r0, r3
 8022b74:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8022b78:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 8022b7c:	441a      	add	r2, r3
 8022b7e:	4b75      	ldr	r3, [pc, #468]	@ (8022d54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8022b80:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 8022b84:	6818      	ldr	r0, [r3, #0]
 8022b86:	6803      	ldr	r3, [r0, #0]
 8022b88:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8022b8a:	4798      	blx	r3
 8022b8c:	4972      	ldr	r1, [pc, #456]	@ (8022d58 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8022b8e:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 8022b92:	880b      	ldrh	r3, [r1, #0]
 8022b94:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8022b98:	910d      	str	r1, [sp, #52]	@ 0x34
 8022b9a:	fb03 c202 	mla	r2, r3, r2, ip
 8022b9e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8022ba2:	4373      	muls	r3, r6
 8022ba4:	b2ad      	uxth	r5, r5
 8022ba6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8022baa:	00ad      	lsls	r5, r5, #2
 8022bac:	9308      	str	r3, [sp, #32]
 8022bae:	1d2b      	adds	r3, r5, #4
 8022bb0:	9309      	str	r3, [sp, #36]	@ 0x24
 8022bb2:	9b02      	ldr	r3, [sp, #8]
 8022bb4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8022bb8:	9106      	str	r1, [sp, #24]
 8022bba:	43da      	mvns	r2, r3
 8022bbc:	2c00      	cmp	r4, #0
 8022bbe:	bf0c      	ite	eq
 8022bc0:	46dc      	moveq	ip, fp
 8022bc2:	f04f 0c00 	movne.w	ip, #0
 8022bc6:	2300      	movs	r3, #0
 8022bc8:	b2d2      	uxtb	r2, r2
 8022bca:	fa1f fc8c 	uxth.w	ip, ip
 8022bce:	9303      	str	r3, [sp, #12]
 8022bd0:	9207      	str	r2, [sp, #28]
 8022bd2:	9a08      	ldr	r2, [sp, #32]
 8022bd4:	4282      	cmp	r2, r0
 8022bd6:	f240 80b5 	bls.w	8022d44 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8022bda:	b963      	cbnz	r3, 8022bf6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8022bdc:	9b01      	ldr	r3, [sp, #4]
 8022bde:	781a      	ldrb	r2, [r3, #0]
 8022be0:	0993      	lsrs	r3, r2, #6
 8022be2:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8022be6:	9203      	str	r2, [sp, #12]
 8022be8:	1e5a      	subs	r2, r3, #1
 8022bea:	2a02      	cmp	r2, #2
 8022bec:	d815      	bhi.n	8022c1a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 8022bee:	9a01      	ldr	r2, [sp, #4]
 8022bf0:	3201      	adds	r2, #1
 8022bf2:	9201      	str	r2, [sp, #4]
 8022bf4:	b29b      	uxth	r3, r3
 8022bf6:	b1b4      	cbz	r4, 8022c26 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 8022bf8:	429c      	cmp	r4, r3
 8022bfa:	bf95      	itete	ls
 8022bfc:	1b1c      	subls	r4, r3, r4
 8022bfe:	1ae4      	subhi	r4, r4, r3
 8022c00:	fa1f f884 	uxthls.w	r8, r4
 8022c04:	b2a4      	uxthhi	r4, r4
 8022c06:	bf87      	ittee	hi
 8022c08:	4666      	movhi	r6, ip
 8022c0a:	f04f 0800 	movhi.w	r8, #0
 8022c0e:	fa1f f68b 	uxthls.w	r6, fp
 8022c12:	2400      	movls	r4, #0
 8022c14:	4643      	mov	r3, r8
 8022c16:	46b4      	mov	ip, r6
 8022c18:	e7db      	b.n	8022bd2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 8022c1a:	9a01      	ldr	r2, [sp, #4]
 8022c1c:	9b01      	ldr	r3, [sp, #4]
 8022c1e:	3202      	adds	r2, #2
 8022c20:	785b      	ldrb	r3, [r3, #1]
 8022c22:	9201      	str	r2, [sp, #4]
 8022c24:	e7e7      	b.n	8022bf6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8022c26:	2203      	movs	r2, #3
 8022c28:	4615      	mov	r5, r2
 8022c2a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8022c2c:	9a03      	ldr	r2, [sp, #12]
 8022c2e:	fb15 1202 	smlabb	r2, r5, r2, r1
 8022c32:	9905      	ldr	r1, [sp, #20]
 8022c34:	4563      	cmp	r3, ip
 8022c36:	eb01 0502 	add.w	r5, r1, r2
 8022c3a:	9902      	ldr	r1, [sp, #8]
 8022c3c:	bf29      	itett	cs
 8022c3e:	eba3 080c 	subcs.w	r8, r3, ip
 8022c42:	ebac 0603 	subcc.w	r6, ip, r3
 8022c46:	fa1f f888 	uxthcs.w	r8, r8
 8022c4a:	46e1      	movcs	r9, ip
 8022c4c:	bf2f      	iteee	cs
 8022c4e:	4626      	movcs	r6, r4
 8022c50:	b2b6      	uxthcc	r6, r6
 8022c52:	4699      	movcc	r9, r3
 8022c54:	46a0      	movcc	r8, r4
 8022c56:	29ff      	cmp	r1, #255	@ 0xff
 8022c58:	d04a      	beq.n	8022cf0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 8022c5a:	9f06      	ldr	r7, [sp, #24]
 8022c5c:	78a9      	ldrb	r1, [r5, #2]
 8022c5e:	9004      	str	r0, [sp, #16]
 8022c60:	4379      	muls	r1, r7
 8022c62:	910a      	str	r1, [sp, #40]	@ 0x28
 8022c64:	7869      	ldrb	r1, [r5, #1]
 8022c66:	4379      	muls	r1, r7
 8022c68:	910b      	str	r1, [sp, #44]	@ 0x2c
 8022c6a:	9905      	ldr	r1, [sp, #20]
 8022c6c:	5c8a      	ldrb	r2, [r1, r2]
 8022c6e:	437a      	muls	r2, r7
 8022c70:	920c      	str	r2, [sp, #48]	@ 0x30
 8022c72:	46ca      	mov	sl, r9
 8022c74:	f1ba 0f00 	cmp.w	sl, #0
 8022c78:	d03d      	beq.n	8022cf6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 8022c7a:	9a04      	ldr	r2, [sp, #16]
 8022c7c:	9f07      	ldr	r7, [sp, #28]
 8022c7e:	8812      	ldrh	r2, [r2, #0]
 8022c80:	1215      	asrs	r5, r2, #8
 8022c82:	46be      	mov	lr, r7
 8022c84:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8022c88:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8022c8a:	10d1      	asrs	r1, r2, #3
 8022c8c:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8022c90:	fb05 750e 	mla	r5, r5, lr, r7
 8022c94:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8022c98:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8022c9a:	00d2      	lsls	r2, r2, #3
 8022c9c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8022ca0:	fb01 710e 	mla	r1, r1, lr, r7
 8022ca4:	b2d2      	uxtb	r2, r2
 8022ca6:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8022ca8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8022cac:	b2ad      	uxth	r5, r5
 8022cae:	fb02 720e 	mla	r2, r2, lr, r7
 8022cb2:	b292      	uxth	r2, r2
 8022cb4:	f105 0e01 	add.w	lr, r5, #1
 8022cb8:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8022cbc:	f102 0e01 	add.w	lr, r2, #1
 8022cc0:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8022cc4:	b289      	uxth	r1, r1
 8022cc6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022cca:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8022cce:	4315      	orrs	r5, r2
 8022cd0:	1c4a      	adds	r2, r1, #1
 8022cd2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022cd6:	0949      	lsrs	r1, r1, #5
 8022cd8:	9a04      	ldr	r2, [sp, #16]
 8022cda:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022cde:	430d      	orrs	r5, r1
 8022ce0:	f822 5b02 	strh.w	r5, [r2], #2
 8022ce4:	f10a 3aff 	add.w	sl, sl, #4294967295
 8022ce8:	9204      	str	r2, [sp, #16]
 8022cea:	fa1f fa8a 	uxth.w	sl, sl
 8022cee:	e7c1      	b.n	8022c74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 8022cf0:	4649      	mov	r1, r9
 8022cf2:	4686      	mov	lr, r0
 8022cf4:	b999      	cbnz	r1, 8022d1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8022cf6:	4563      	cmp	r3, ip
 8022cf8:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8022cfc:	d38a      	bcc.n	8022c14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8022cfe:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 8022d02:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8022d04:	fa1f f68b 	uxth.w	r6, fp
 8022d08:	1ba4      	subs	r4, r4, r6
 8022d0a:	881b      	ldrh	r3, [r3, #0]
 8022d0c:	b2a4      	uxth	r4, r4
 8022d0e:	2c00      	cmp	r4, #0
 8022d10:	eba3 030b 	sub.w	r3, r3, fp
 8022d14:	bf18      	it	ne
 8022d16:	2600      	movne	r6, #0
 8022d18:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8022d1c:	e77a      	b.n	8022c14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8022d1e:	78aa      	ldrb	r2, [r5, #2]
 8022d20:	4f0e      	ldr	r7, [pc, #56]	@ (8022d5c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 8022d22:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 8022d26:	786a      	ldrb	r2, [r5, #1]
 8022d28:	00d2      	lsls	r2, r2, #3
 8022d2a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022d2e:	ea4a 0202 	orr.w	r2, sl, r2
 8022d32:	f895 a000 	ldrb.w	sl, [r5]
 8022d36:	3901      	subs	r1, #1
 8022d38:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8022d3c:	f82e 2b02 	strh.w	r2, [lr], #2
 8022d40:	b289      	uxth	r1, r1
 8022d42:	e7d7      	b.n	8022cf4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 8022d44:	4b03      	ldr	r3, [pc, #12]	@ (8022d54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8022d46:	6818      	ldr	r0, [r3, #0]
 8022d48:	6803      	ldr	r3, [r0, #0]
 8022d4a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8022d4c:	4798      	blx	r3
 8022d4e:	b013      	add	sp, #76	@ 0x4c
 8022d50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022d54:	2000e40c 	.word	0x2000e40c
 8022d58:	2000e406 	.word	0x2000e406
 8022d5c:	fffff800 	.word	0xfffff800

08022d60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8022d60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022d64:	b09d      	sub	sp, #116	@ 0x74
 8022d66:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 8022d6a:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 8022d6e:	920e      	str	r2, [sp, #56]	@ 0x38
 8022d70:	461c      	mov	r4, r3
 8022d72:	4683      	mov	fp, r0
 8022d74:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8022d76:	2a00      	cmp	r2, #0
 8022d78:	f000 81e0 	beq.w	802313c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 8022d7c:	6820      	ldr	r0, [r4, #0]
 8022d7e:	6861      	ldr	r1, [r4, #4]
 8022d80:	aa18      	add	r2, sp, #96	@ 0x60
 8022d82:	c203      	stmia	r2!, {r0, r1}
 8022d84:	6818      	ldr	r0, [r3, #0]
 8022d86:	6859      	ldr	r1, [r3, #4]
 8022d88:	aa1a      	add	r2, sp, #104	@ 0x68
 8022d8a:	c203      	stmia	r2!, {r0, r1}
 8022d8c:	a818      	add	r0, sp, #96	@ 0x60
 8022d8e:	f7f7 fceb 	bl	801a768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022d92:	4621      	mov	r1, r4
 8022d94:	a81a      	add	r0, sp, #104	@ 0x68
 8022d96:	f7f7 fd2b 	bl	801a7f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8022d9a:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 8022d9e:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 8022da2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8022da6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8022daa:	bfd7      	itett	le
 8022dac:	b29a      	uxthle	r2, r3
 8022dae:	2201      	movgt	r2, #1
 8022db0:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8022db4:	fb91 f2f2 	sdivle	r2, r1, r2
 8022db8:	9202      	str	r2, [sp, #8]
 8022dba:	9802      	ldr	r0, [sp, #8]
 8022dbc:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 8022dc0:	fb92 f0f0 	sdiv	r0, r2, r0
 8022dc4:	b280      	uxth	r0, r0
 8022dc6:	900f      	str	r0, [sp, #60]	@ 0x3c
 8022dc8:	9902      	ldr	r1, [sp, #8]
 8022dca:	9802      	ldr	r0, [sp, #8]
 8022dcc:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8022dce:	440c      	add	r4, r1
 8022dd0:	fb05 2510 	mls	r5, r5, r0, r2
 8022dd4:	fb15 f503 	smulbb	r5, r5, r3
 8022dd8:	3c01      	subs	r4, #1
 8022dda:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8022dde:	fb94 f4f1 	sdiv	r4, r4, r1
 8022de2:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 8022de6:	440d      	add	r5, r1
 8022de8:	4419      	add	r1, r3
 8022dea:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 8022dee:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 8022df2:	441a      	add	r2, r3
 8022df4:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8022df8:	9306      	str	r3, [sp, #24]
 8022dfa:	4bb3      	ldr	r3, [pc, #716]	@ (80230c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 8022dfc:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 8022e00:	6818      	ldr	r0, [r3, #0]
 8022e02:	6803      	ldr	r3, [r0, #0]
 8022e04:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8022e06:	4798      	blx	r3
 8022e08:	4bb0      	ldr	r3, [pc, #704]	@ (80230cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 8022e0a:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8022e0e:	881a      	ldrh	r2, [r3, #0]
 8022e10:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 8022e14:	9316      	str	r3, [sp, #88]	@ 0x58
 8022e16:	fb02 7101 	mla	r1, r2, r1, r7
 8022e1a:	3401      	adds	r4, #1
 8022e1c:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8022e20:	b2a4      	uxth	r4, r4
 8022e22:	4356      	muls	r6, r2
 8022e24:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8022e28:	00a4      	lsls	r4, r4, #2
 8022e2a:	920a      	str	r2, [sp, #40]	@ 0x28
 8022e2c:	1d22      	adds	r2, r4, #4
 8022e2e:	b2ad      	uxth	r5, r5
 8022e30:	9213      	str	r2, [sp, #76]	@ 0x4c
 8022e32:	4ba7      	ldr	r3, [pc, #668]	@ (80230d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8022e34:	9a06      	ldr	r2, [sp, #24]
 8022e36:	2d00      	cmp	r5, #0
 8022e38:	bf0c      	ite	eq
 8022e3a:	4611      	moveq	r1, r2
 8022e3c:	2100      	movne	r1, #0
 8022e3e:	2200      	movs	r2, #0
 8022e40:	eba3 030b 	sub.w	r3, r3, fp
 8022e44:	b289      	uxth	r1, r1
 8022e46:	920d      	str	r2, [sp, #52]	@ 0x34
 8022e48:	9317      	str	r3, [sp, #92]	@ 0x5c
 8022e4a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8022e4c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8022e4e:	fa12 f383 	uxtah	r3, r2, r3
 8022e52:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8022e54:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8022e58:	3304      	adds	r3, #4
 8022e5a:	9308      	str	r3, [sp, #32]
 8022e5c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8022e5e:	4543      	cmp	r3, r8
 8022e60:	f240 8167 	bls.w	8023132 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 8022e64:	9a02      	ldr	r2, [sp, #8]
 8022e66:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8022e6a:	fbb5 f3f3 	udiv	r3, r5, r3
 8022e6e:	1ad3      	subs	r3, r2, r3
 8022e70:	b29b      	uxth	r3, r3
 8022e72:	9314      	str	r3, [sp, #80]	@ 0x50
 8022e74:	9b08      	ldr	r3, [sp, #32]
 8022e76:	9808      	ldr	r0, [sp, #32]
 8022e78:	785a      	ldrb	r2, [r3, #1]
 8022e7a:	789b      	ldrb	r3, [r3, #2]
 8022e7c:	7800      	ldrb	r0, [r0, #0]
 8022e7e:	9010      	str	r0, [sp, #64]	@ 0x40
 8022e80:	021b      	lsls	r3, r3, #8
 8022e82:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8022e86:	9a08      	ldr	r2, [sp, #32]
 8022e88:	78d2      	ldrb	r2, [r2, #3]
 8022e8a:	4313      	orrs	r3, r2
 8022e8c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8022e8e:	3001      	adds	r0, #1
 8022e90:	441a      	add	r2, r3
 8022e92:	9007      	str	r0, [sp, #28]
 8022e94:	1c50      	adds	r0, r2, #1
 8022e96:	9005      	str	r0, [sp, #20]
 8022e98:	7852      	ldrb	r2, [r2, #1]
 8022e9a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8022e9c:	0212      	lsls	r2, r2, #8
 8022e9e:	5cc3      	ldrb	r3, [r0, r3]
 8022ea0:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8022ea4:	431a      	orrs	r2, r3
 8022ea6:	b293      	uxth	r3, r2
 8022ea8:	930b      	str	r3, [sp, #44]	@ 0x2c
 8022eaa:	2300      	movs	r3, #0
 8022eac:	9309      	str	r3, [sp, #36]	@ 0x24
 8022eae:	2301      	movs	r3, #1
 8022eb0:	9301      	str	r3, [sp, #4]
 8022eb2:	9304      	str	r3, [sp, #16]
 8022eb4:	2300      	movs	r3, #0
 8022eb6:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 8022eba:	9303      	str	r3, [sp, #12]
 8022ebc:	f04f 0e01 	mov.w	lr, #1
 8022ec0:	2d00      	cmp	r5, #0
 8022ec2:	d07c      	beq.n	8022fbe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 8022ec4:	45ae      	cmp	lr, r5
 8022ec6:	d26b      	bcs.n	8022fa0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8022ec8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8022eca:	eba5 050e 	sub.w	r5, r5, lr
 8022ece:	4543      	cmp	r3, r8
 8022ed0:	b2ad      	uxth	r5, r5
 8022ed2:	460c      	mov	r4, r1
 8022ed4:	d802      	bhi.n	8022edc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 8022ed6:	e070      	b.n	8022fba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8022ed8:	2b00      	cmp	r3, #0
 8022eda:	d15c      	bne.n	8022f96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8022edc:	9b05      	ldr	r3, [sp, #20]
 8022ede:	9a04      	ldr	r2, [sp, #16]
 8022ee0:	785b      	ldrb	r3, [r3, #1]
 8022ee2:	9904      	ldr	r1, [sp, #16]
 8022ee4:	f1c2 0207 	rsb	r2, r2, #7
 8022ee8:	4093      	lsls	r3, r2
 8022eea:	005b      	lsls	r3, r3, #1
 8022eec:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8022ef0:	9b05      	ldr	r3, [sp, #20]
 8022ef2:	781b      	ldrb	r3, [r3, #0]
 8022ef4:	410b      	asrs	r3, r1
 8022ef6:	3101      	adds	r1, #1
 8022ef8:	b2c9      	uxtb	r1, r1
 8022efa:	2908      	cmp	r1, #8
 8022efc:	9104      	str	r1, [sp, #16]
 8022efe:	9905      	ldr	r1, [sp, #20]
 8022f00:	bf0a      	itet	eq
 8022f02:	3102      	addeq	r1, #2
 8022f04:	3101      	addne	r1, #1
 8022f06:	9105      	streq	r1, [sp, #20]
 8022f08:	b2db      	uxtb	r3, r3
 8022f0a:	bf0a      	itet	eq
 8022f0c:	2100      	moveq	r1, #0
 8022f0e:	9105      	strne	r1, [sp, #20]
 8022f10:	9104      	streq	r1, [sp, #16]
 8022f12:	4313      	orrs	r3, r2
 8022f14:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8022f16:	b29a      	uxth	r2, r3
 8022f18:	4291      	cmp	r1, r2
 8022f1a:	d30a      	bcc.n	8022f32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8022f1c:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 8022f20:	2301      	movs	r3, #1
 8022f22:	9907      	ldr	r1, [sp, #28]
 8022f24:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8022f28:	d30f      	bcc.n	8022f4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 8022f2a:	2100      	movs	r1, #0
 8022f2c:	9301      	str	r3, [sp, #4]
 8022f2e:	9103      	str	r1, [sp, #12]
 8022f30:	e032      	b.n	8022f98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 8022f32:	9b07      	ldr	r3, [sp, #28]
 8022f34:	429a      	cmp	r2, r3
 8022f36:	d318      	bcc.n	8022f6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 8022f38:	9b01      	ldr	r3, [sp, #4]
 8022f3a:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 8022f3e:	445b      	add	r3, fp
 8022f40:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8022f44:	9b01      	ldr	r3, [sp, #4]
 8022f46:	3301      	adds	r3, #1
 8022f48:	b29b      	uxth	r3, r3
 8022f4a:	9907      	ldr	r1, [sp, #28]
 8022f4c:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 8022f50:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8022f54:	7108      	strb	r0, [r1, #4]
 8022f56:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8022f58:	80c8      	strh	r0, [r1, #6]
 8022f5a:	9801      	ldr	r0, [sp, #4]
 8022f5c:	3001      	adds	r0, #1
 8022f5e:	7148      	strb	r0, [r1, #5]
 8022f60:	9907      	ldr	r1, [sp, #28]
 8022f62:	3101      	adds	r1, #1
 8022f64:	b289      	uxth	r1, r1
 8022f66:	9107      	str	r1, [sp, #28]
 8022f68:	e7df      	b.n	8022f2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 8022f6a:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8022f6e:	4611      	mov	r1, r2
 8022f70:	795b      	ldrb	r3, [r3, #5]
 8022f72:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 8022f76:	4458      	add	r0, fp
 8022f78:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 8022f7a:	4406      	add	r6, r0
 8022f7c:	2e00      	cmp	r6, #0
 8022f7e:	dd06      	ble.n	8022f8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 8022f80:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8022f84:	790e      	ldrb	r6, [r1, #4]
 8022f86:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8022f8a:	88c9      	ldrh	r1, [r1, #6]
 8022f8c:	e7f4      	b.n	8022f78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 8022f8e:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 8022f92:	b29b      	uxth	r3, r3
 8022f94:	e7c5      	b.n	8022f22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 8022f96:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8022f98:	920b      	str	r2, [sp, #44]	@ 0x2c
 8022f9a:	4621      	mov	r1, r4
 8022f9c:	469e      	mov	lr, r3
 8022f9e:	e78f      	b.n	8022ec0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 8022fa0:	9a03      	ldr	r2, [sp, #12]
 8022fa2:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8022fa6:	442a      	add	r2, r5
 8022fa8:	ebae 0305 	sub.w	r3, lr, r5
 8022fac:	b292      	uxth	r2, r2
 8022fae:	b29b      	uxth	r3, r3
 8022fb0:	9203      	str	r2, [sp, #12]
 8022fb2:	2500      	movs	r5, #0
 8022fb4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8022fb6:	4542      	cmp	r2, r8
 8022fb8:	d88e      	bhi.n	8022ed8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 8022fba:	4621      	mov	r1, r4
 8022fbc:	e74e      	b.n	8022e5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 8022fbe:	458e      	cmp	lr, r1
 8022fc0:	bf29      	itett	cs
 8022fc2:	ebae 0301 	subcs.w	r3, lr, r1
 8022fc6:	eba1 040e 	subcc.w	r4, r1, lr
 8022fca:	b29b      	uxthcs	r3, r3
 8022fcc:	910c      	strcs	r1, [sp, #48]	@ 0x30
 8022fce:	bf2f      	iteee	cs
 8022fd0:	462c      	movcs	r4, r5
 8022fd2:	b2a4      	uxthcc	r4, r4
 8022fd4:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 8022fd8:	462b      	movcc	r3, r5
 8022fda:	f04f 0900 	mov.w	r9, #0
 8022fde:	9a03      	ldr	r2, [sp, #12]
 8022fe0:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8022fe2:	444a      	add	r2, r9
 8022fe4:	4548      	cmp	r0, r9
 8022fe6:	b292      	uxth	r2, r2
 8022fe8:	d074      	beq.n	80230d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 8022fea:	445a      	add	r2, fp
 8022fec:	2004      	movs	r0, #4
 8022fee:	4605      	mov	r5, r0
 8022ff0:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 8022ff4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8022ff6:	fb15 0202 	smlabb	r2, r5, r2, r0
 8022ffa:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8022ffc:	5880      	ldr	r0, [r0, r2]
 8022ffe:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8023002:	d014      	beq.n	802302e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8023004:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8023008:	ea4f 2510 	mov.w	r5, r0, lsr #8
 802300c:	d112      	bne.n	8023034 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 802300e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8023010:	2aff      	cmp	r2, #255	@ 0xff
 8023012:	d10f      	bne.n	8023034 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8023014:	0942      	lsrs	r2, r0, #5
 8023016:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 802301a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802301e:	f025 0507 	bic.w	r5, r5, #7
 8023022:	4315      	orrs	r5, r2
 8023024:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8023028:	4305      	orrs	r5, r0
 802302a:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 802302e:	f109 0901 	add.w	r9, r9, #1
 8023032:	e7d4      	b.n	8022fde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 8023034:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8023038:	ea4f 06ec 	mov.w	r6, ip, asr #3
 802303c:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 8023040:	9215      	str	r2, [sp, #84]	@ 0x54
 8023042:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8023044:	fb02 fa0a 	mul.w	sl, r2, sl
 8023048:	f10a 0201 	add.w	r2, sl, #1
 802304c:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8023050:	ea4f 272c 	mov.w	r7, ip, asr #8
 8023054:	1212      	asrs	r2, r2, #8
 8023056:	fa1f fa82 	uxth.w	sl, r2
 802305a:	f3c0 4607 	ubfx	r6, r0, #16, #8
 802305e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8023062:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8023066:	43d2      	mvns	r2, r2
 8023068:	b2d2      	uxtb	r2, r2
 802306a:	fb16 f60a 	smulbb	r6, r6, sl
 802306e:	fa5f fc8c 	uxtb.w	ip, ip
 8023072:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8023076:	b2c0      	uxtb	r0, r0
 8023078:	fb07 6702 	mla	r7, r7, r2, r6
 802307c:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8023080:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8023082:	fb10 f00a 	smulbb	r0, r0, sl
 8023086:	fb0c 0002 	mla	r0, ip, r2, r0
 802308a:	b2ed      	uxtb	r5, r5
 802308c:	b2bf      	uxth	r7, r7
 802308e:	fb15 f50a 	smulbb	r5, r5, sl
 8023092:	b280      	uxth	r0, r0
 8023094:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8023098:	fb06 5602 	mla	r6, r6, r2, r5
 802309c:	1c7a      	adds	r2, r7, #1
 802309e:	1c45      	adds	r5, r0, #1
 80230a0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80230a4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80230a8:	b2b6      	uxth	r6, r6
 80230aa:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80230ae:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80230b2:	432f      	orrs	r7, r5
 80230b4:	1c75      	adds	r5, r6, #1
 80230b6:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 80230ba:	096d      	lsrs	r5, r5, #5
 80230bc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80230c0:	432f      	orrs	r7, r5
 80230c2:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 80230c6:	e7b2      	b.n	802302e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 80230c8:	2000e40c 	.word	0x2000e40c
 80230cc:	2000e406 	.word	0x2000e406
 80230d0:	fffff7fb 	.word	0xfffff7fb
 80230d4:	9203      	str	r2, [sp, #12]
 80230d6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80230d8:	458e      	cmp	lr, r1
 80230da:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 80230de:	f4ff af68 	bcc.w	8022fb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 80230e2:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 80230e4:	9906      	ldr	r1, [sp, #24]
 80230e6:	8812      	ldrh	r2, [r2, #0]
 80230e8:	1a52      	subs	r2, r2, r1
 80230ea:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 80230ee:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80230f0:	9914      	ldr	r1, [sp, #80]	@ 0x50
 80230f2:	3201      	adds	r2, #1
 80230f4:	428a      	cmp	r2, r1
 80230f6:	9209      	str	r2, [sp, #36]	@ 0x24
 80230f8:	d111      	bne.n	802311e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 80230fa:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 80230fe:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 8023102:	9b06      	ldr	r3, [sp, #24]
 8023104:	eba5 0509 	sub.w	r5, r5, r9
 8023108:	b2ad      	uxth	r5, r5
 802310a:	2d00      	cmp	r5, #0
 802310c:	bf08      	it	eq
 802310e:	4619      	moveq	r1, r3
 8023110:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8023112:	bf18      	it	ne
 8023114:	2100      	movne	r1, #0
 8023116:	3301      	adds	r3, #1
 8023118:	930d      	str	r3, [sp, #52]	@ 0x34
 802311a:	b289      	uxth	r1, r1
 802311c:	e695      	b.n	8022e4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 802311e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8023122:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8023126:	1b2d      	subs	r5, r5, r4
 8023128:	b2ad      	uxth	r5, r5
 802312a:	2d00      	cmp	r5, #0
 802312c:	bf18      	it	ne
 802312e:	2400      	movne	r4, #0
 8023130:	e740      	b.n	8022fb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 8023132:	4b04      	ldr	r3, [pc, #16]	@ (8023144 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 8023134:	6818      	ldr	r0, [r3, #0]
 8023136:	6803      	ldr	r3, [r0, #0]
 8023138:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802313a:	4798      	blx	r3
 802313c:	b01d      	add	sp, #116	@ 0x74
 802313e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023142:	bf00      	nop
 8023144:	2000e40c 	.word	0x2000e40c

08023148 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8023148:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802314c:	b09f      	sub	sp, #124	@ 0x7c
 802314e:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8023152:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8023156:	920a      	str	r2, [sp, #40]	@ 0x28
 8023158:	461d      	mov	r5, r3
 802315a:	4604      	mov	r4, r0
 802315c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802315e:	2a00      	cmp	r2, #0
 8023160:	f000 81fa 	beq.w	8023558 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 8023164:	6828      	ldr	r0, [r5, #0]
 8023166:	6869      	ldr	r1, [r5, #4]
 8023168:	aa1a      	add	r2, sp, #104	@ 0x68
 802316a:	c203      	stmia	r2!, {r0, r1}
 802316c:	6818      	ldr	r0, [r3, #0]
 802316e:	6859      	ldr	r1, [r3, #4]
 8023170:	aa1c      	add	r2, sp, #112	@ 0x70
 8023172:	c203      	stmia	r2!, {r0, r1}
 8023174:	a81a      	add	r0, sp, #104	@ 0x68
 8023176:	f7f7 faf7 	bl	801a768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802317a:	4629      	mov	r1, r5
 802317c:	a81c      	add	r0, sp, #112	@ 0x70
 802317e:	f7f7 fb37 	bl	801a7f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8023182:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8023186:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 802318a:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 802318e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8023192:	bfd7      	itett	le
 8023194:	b29a      	uxthle	r2, r3
 8023196:	2201      	movgt	r2, #1
 8023198:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 802319c:	fb91 f2f2 	sdivle	r2, r1, r2
 80231a0:	9201      	str	r2, [sp, #4]
 80231a2:	9801      	ldr	r0, [sp, #4]
 80231a4:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 80231a8:	fb92 f0f0 	sdiv	r0, r2, r0
 80231ac:	b280      	uxth	r0, r0
 80231ae:	9010      	str	r0, [sp, #64]	@ 0x40
 80231b0:	9901      	ldr	r1, [sp, #4]
 80231b2:	9801      	ldr	r0, [sp, #4]
 80231b4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80231b6:	440e      	add	r6, r1
 80231b8:	fb05 2510 	mls	r5, r5, r0, r2
 80231bc:	fb15 f503 	smulbb	r5, r5, r3
 80231c0:	3e01      	subs	r6, #1
 80231c2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 80231c6:	fb96 f6f1 	sdiv	r6, r6, r1
 80231ca:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 80231ce:	440d      	add	r5, r1
 80231d0:	4419      	add	r1, r3
 80231d2:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 80231d6:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 80231da:	441a      	add	r2, r3
 80231dc:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 80231e0:	9304      	str	r3, [sp, #16]
 80231e2:	4b96      	ldr	r3, [pc, #600]	@ (802343c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 80231e4:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 80231e8:	6818      	ldr	r0, [r3, #0]
 80231ea:	6803      	ldr	r3, [r0, #0]
 80231ec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80231ee:	4798      	blx	r3
 80231f0:	4b93      	ldr	r3, [pc, #588]	@ (8023440 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 80231f2:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 80231f6:	881a      	ldrh	r2, [r3, #0]
 80231f8:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 80231fc:	9318      	str	r3, [sp, #96]	@ 0x60
 80231fe:	fb02 c101 	mla	r1, r2, r1, ip
 8023202:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8023206:	4357      	muls	r7, r2
 8023208:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 802320c:	3601      	adds	r6, #1
 802320e:	920b      	str	r2, [sp, #44]	@ 0x2c
 8023210:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8023212:	4b8c      	ldr	r3, [pc, #560]	@ (8023444 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8023214:	b2b6      	uxth	r6, r6
 8023216:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 802321a:	1d32      	adds	r2, r6, #4
 802321c:	9206      	str	r2, [sp, #24]
 802321e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8023220:	43d2      	mvns	r2, r2
 8023222:	b2d2      	uxtb	r2, r2
 8023224:	b2ad      	uxth	r5, r5
 8023226:	9215      	str	r2, [sp, #84]	@ 0x54
 8023228:	9a04      	ldr	r2, [sp, #16]
 802322a:	2d00      	cmp	r5, #0
 802322c:	bf0c      	ite	eq
 802322e:	4611      	moveq	r1, r2
 8023230:	2100      	movne	r1, #0
 8023232:	2200      	movs	r2, #0
 8023234:	1b1b      	subs	r3, r3, r4
 8023236:	b289      	uxth	r1, r1
 8023238:	920d      	str	r2, [sp, #52]	@ 0x34
 802323a:	9319      	str	r3, [sp, #100]	@ 0x64
 802323c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802323e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8023240:	fa12 f383 	uxtah	r3, r2, r3
 8023244:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8023246:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 802324a:	3304      	adds	r3, #4
 802324c:	9307      	str	r3, [sp, #28]
 802324e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8023250:	455b      	cmp	r3, fp
 8023252:	f240 817c 	bls.w	802354e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 8023256:	9a01      	ldr	r2, [sp, #4]
 8023258:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 802325c:	fbb5 f3f3 	udiv	r3, r5, r3
 8023260:	1ad3      	subs	r3, r2, r3
 8023262:	b29b      	uxth	r3, r3
 8023264:	9316      	str	r3, [sp, #88]	@ 0x58
 8023266:	9b07      	ldr	r3, [sp, #28]
 8023268:	9807      	ldr	r0, [sp, #28]
 802326a:	785a      	ldrb	r2, [r3, #1]
 802326c:	789b      	ldrb	r3, [r3, #2]
 802326e:	7800      	ldrb	r0, [r0, #0]
 8023270:	9011      	str	r0, [sp, #68]	@ 0x44
 8023272:	021b      	lsls	r3, r3, #8
 8023274:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8023278:	9a07      	ldr	r2, [sp, #28]
 802327a:	78d2      	ldrb	r2, [r2, #3]
 802327c:	4313      	orrs	r3, r2
 802327e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8023280:	3001      	adds	r0, #1
 8023282:	441a      	add	r2, r3
 8023284:	9005      	str	r0, [sp, #20]
 8023286:	1c50      	adds	r0, r2, #1
 8023288:	9003      	str	r0, [sp, #12]
 802328a:	7852      	ldrb	r2, [r2, #1]
 802328c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802328e:	0212      	lsls	r2, r2, #8
 8023290:	5cc3      	ldrb	r3, [r0, r3]
 8023292:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8023296:	431a      	orrs	r2, r3
 8023298:	b293      	uxth	r3, r2
 802329a:	930c      	str	r3, [sp, #48]	@ 0x30
 802329c:	2300      	movs	r3, #0
 802329e:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 80232a2:	9308      	str	r3, [sp, #32]
 80232a4:	461a      	mov	r2, r3
 80232a6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80232aa:	930e      	str	r3, [sp, #56]	@ 0x38
 80232ac:	f04f 0801 	mov.w	r8, #1
 80232b0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 80232b4:	f8cd 8008 	str.w	r8, [sp, #8]
 80232b8:	46c4      	mov	ip, r8
 80232ba:	930f      	str	r3, [sp, #60]	@ 0x3c
 80232bc:	2d00      	cmp	r5, #0
 80232be:	d07c      	beq.n	80233ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 80232c0:	45ac      	cmp	ip, r5
 80232c2:	d26c      	bcs.n	802339e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 80232c4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80232c6:	eba5 050c 	sub.w	r5, r5, ip
 80232ca:	455b      	cmp	r3, fp
 80232cc:	b2ad      	uxth	r5, r5
 80232ce:	4608      	mov	r0, r1
 80232d0:	d802      	bhi.n	80232d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 80232d2:	e070      	b.n	80233b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 80232d4:	2b00      	cmp	r3, #0
 80232d6:	d15c      	bne.n	8023392 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 80232d8:	9b03      	ldr	r3, [sp, #12]
 80232da:	9a02      	ldr	r2, [sp, #8]
 80232dc:	785b      	ldrb	r3, [r3, #1]
 80232de:	9902      	ldr	r1, [sp, #8]
 80232e0:	f1c2 0207 	rsb	r2, r2, #7
 80232e4:	4093      	lsls	r3, r2
 80232e6:	005b      	lsls	r3, r3, #1
 80232e8:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 80232ec:	9b03      	ldr	r3, [sp, #12]
 80232ee:	781b      	ldrb	r3, [r3, #0]
 80232f0:	410b      	asrs	r3, r1
 80232f2:	3101      	adds	r1, #1
 80232f4:	b2c9      	uxtb	r1, r1
 80232f6:	2908      	cmp	r1, #8
 80232f8:	9102      	str	r1, [sp, #8]
 80232fa:	9903      	ldr	r1, [sp, #12]
 80232fc:	bf0a      	itet	eq
 80232fe:	3102      	addeq	r1, #2
 8023300:	3101      	addne	r1, #1
 8023302:	9103      	streq	r1, [sp, #12]
 8023304:	b2db      	uxtb	r3, r3
 8023306:	bf0a      	itet	eq
 8023308:	2100      	moveq	r1, #0
 802330a:	9103      	strne	r1, [sp, #12]
 802330c:	9102      	streq	r1, [sp, #8]
 802330e:	4313      	orrs	r3, r2
 8023310:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8023312:	b29a      	uxth	r2, r3
 8023314:	4291      	cmp	r1, r2
 8023316:	d30a      	bcc.n	802332e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 8023318:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 802331c:	2301      	movs	r3, #1
 802331e:	9905      	ldr	r1, [sp, #20]
 8023320:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8023324:	d30f      	bcc.n	8023346 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 8023326:	2100      	movs	r1, #0
 8023328:	4698      	mov	r8, r3
 802332a:	9100      	str	r1, [sp, #0]
 802332c:	e032      	b.n	8023394 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 802332e:	9b05      	ldr	r3, [sp, #20]
 8023330:	429a      	cmp	r2, r3
 8023332:	d318      	bcc.n	8023366 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8023334:	eb04 0308 	add.w	r3, r4, r8
 8023338:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 802333c:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8023340:	f108 0301 	add.w	r3, r8, #1
 8023344:	b29b      	uxth	r3, r3
 8023346:	9905      	ldr	r1, [sp, #20]
 8023348:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 802334c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8023350:	710e      	strb	r6, [r1, #4]
 8023352:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8023354:	80ce      	strh	r6, [r1, #6]
 8023356:	f108 0601 	add.w	r6, r8, #1
 802335a:	714e      	strb	r6, [r1, #5]
 802335c:	9905      	ldr	r1, [sp, #20]
 802335e:	3101      	adds	r1, #1
 8023360:	b289      	uxth	r1, r1
 8023362:	9105      	str	r1, [sp, #20]
 8023364:	e7df      	b.n	8023326 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 8023366:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 802336a:	4611      	mov	r1, r2
 802336c:	795b      	ldrb	r3, [r3, #5]
 802336e:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8023372:	4426      	add	r6, r4
 8023374:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 8023376:	4437      	add	r7, r6
 8023378:	2f00      	cmp	r7, #0
 802337a:	dd06      	ble.n	802338a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 802337c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8023380:	790f      	ldrb	r7, [r1, #4]
 8023382:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8023386:	88c9      	ldrh	r1, [r1, #6]
 8023388:	e7f4      	b.n	8023374 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 802338a:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 802338e:	b29b      	uxth	r3, r3
 8023390:	e7c5      	b.n	802331e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8023392:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8023394:	920c      	str	r2, [sp, #48]	@ 0x30
 8023396:	4601      	mov	r1, r0
 8023398:	9a00      	ldr	r2, [sp, #0]
 802339a:	469c      	mov	ip, r3
 802339c:	e78e      	b.n	80232bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 802339e:	1957      	adds	r7, r2, r5
 80233a0:	ebac 0305 	sub.w	r3, ip, r5
 80233a4:	b2ba      	uxth	r2, r7
 80233a6:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80233aa:	9200      	str	r2, [sp, #0]
 80233ac:	b29b      	uxth	r3, r3
 80233ae:	2500      	movs	r5, #0
 80233b0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80233b2:	455a      	cmp	r2, fp
 80233b4:	d88e      	bhi.n	80232d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 80233b6:	4601      	mov	r1, r0
 80233b8:	e749      	b.n	802324e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 80233ba:	458c      	cmp	ip, r1
 80233bc:	bf2c      	ite	cs
 80233be:	4628      	movcs	r0, r5
 80233c0:	462b      	movcc	r3, r5
 80233c2:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 80233c4:	bf27      	ittee	cs
 80233c6:	9109      	strcs	r1, [sp, #36]	@ 0x24
 80233c8:	ebac 0301 	subcs.w	r3, ip, r1
 80233cc:	eba1 000c 	subcc.w	r0, r1, ip
 80233d0:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 80233d4:	bf2c      	ite	cs
 80233d6:	b29b      	uxthcs	r3, r3
 80233d8:	b280      	uxthcc	r0, r0
 80233da:	2dff      	cmp	r5, #255	@ 0xff
 80233dc:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80233de:	eb02 0705 	add.w	r7, r2, r5
 80233e2:	b2bd      	uxth	r5, r7
 80233e4:	9500      	str	r5, [sp, #0]
 80233e6:	d12f      	bne.n	8023448 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 80233e8:	465e      	mov	r6, fp
 80233ea:	9d00      	ldr	r5, [sp, #0]
 80233ec:	42aa      	cmp	r2, r5
 80233ee:	f040 8084 	bne.w	80234fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 80233f2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80233f4:	458c      	cmp	ip, r1
 80233f6:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80233fa:	d3d8      	bcc.n	80233ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 80233fc:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80233fe:	9904      	ldr	r1, [sp, #16]
 8023400:	8812      	ldrh	r2, [r2, #0]
 8023402:	1a52      	subs	r2, r2, r1
 8023404:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8023408:	9a08      	ldr	r2, [sp, #32]
 802340a:	9916      	ldr	r1, [sp, #88]	@ 0x58
 802340c:	3201      	adds	r2, #1
 802340e:	428a      	cmp	r2, r1
 8023410:	9208      	str	r2, [sp, #32]
 8023412:	f040 8092 	bne.w	802353a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 8023416:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 802341a:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 802341e:	9b04      	ldr	r3, [sp, #16]
 8023420:	eba5 050c 	sub.w	r5, r5, ip
 8023424:	b2ad      	uxth	r5, r5
 8023426:	2d00      	cmp	r5, #0
 8023428:	bf08      	it	eq
 802342a:	4619      	moveq	r1, r3
 802342c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802342e:	bf18      	it	ne
 8023430:	2100      	movne	r1, #0
 8023432:	3301      	adds	r3, #1
 8023434:	930d      	str	r3, [sp, #52]	@ 0x34
 8023436:	b289      	uxth	r1, r1
 8023438:	e700      	b.n	802323c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 802343a:	bf00      	nop
 802343c:	2000e40c 	.word	0x2000e40c
 8023440:	2000e406 	.word	0x2000e406
 8023444:	fffff7fb 	.word	0xfffff7fb
 8023448:	46d9      	mov	r9, fp
 802344a:	9d00      	ldr	r5, [sp, #0]
 802344c:	42aa      	cmp	r2, r5
 802344e:	d0d0      	beq.n	80233f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 8023450:	1c55      	adds	r5, r2, #1
 8023452:	4422      	add	r2, r4
 8023454:	9517      	str	r5, [sp, #92]	@ 0x5c
 8023456:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 802345a:	9a06      	ldr	r2, [sp, #24]
 802345c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8023460:	4472      	add	r2, lr
 8023462:	9212      	str	r2, [sp, #72]	@ 0x48
 8023464:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8023466:	f8b9 2000 	ldrh.w	r2, [r9]
 802346a:	f897 a002 	ldrb.w	sl, [r7, #2]
 802346e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8023470:	1216      	asrs	r6, r2, #8
 8023472:	fb1a fa07 	smulbb	sl, sl, r7
 8023476:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 802347a:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 802347c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8023480:	fb06 a607 	mla	r6, r6, r7, sl
 8023484:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8023486:	f897 a001 	ldrb.w	sl, [r7, #1]
 802348a:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 802348c:	10d5      	asrs	r5, r2, #3
 802348e:	fb1a fa07 	smulbb	sl, sl, r7
 8023492:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8023496:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8023498:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 802349c:	fb05 a507 	mla	r5, r5, r7, sl
 80234a0:	9f06      	ldr	r7, [sp, #24]
 80234a2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80234a6:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 80234a8:	00d2      	lsls	r2, r2, #3
 80234aa:	fb1e fe07 	smulbb	lr, lr, r7
 80234ae:	b2d2      	uxtb	r2, r2
 80234b0:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80234b2:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80234b6:	b2b6      	uxth	r6, r6
 80234b8:	fb02 e207 	mla	r2, r2, r7, lr
 80234bc:	b292      	uxth	r2, r2
 80234be:	b2ad      	uxth	r5, r5
 80234c0:	f106 0a01 	add.w	sl, r6, #1
 80234c4:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80234c8:	f102 0e01 	add.w	lr, r2, #1
 80234cc:	f105 0a01 	add.w	sl, r5, #1
 80234d0:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 80234d4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80234d8:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 80234dc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80234e0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80234e4:	ea4e 0606 	orr.w	r6, lr, r6
 80234e8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80234ec:	ea46 060a 	orr.w	r6, r6, sl
 80234f0:	f829 6b02 	strh.w	r6, [r9], #2
 80234f4:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 80234f8:	e7a7      	b.n	802344a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 80234fa:	f102 0e01 	add.w	lr, r2, #1
 80234fe:	4422      	add	r2, r4
 8023500:	9f06      	ldr	r7, [sp, #24]
 8023502:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 8023506:	9a06      	ldr	r2, [sp, #24]
 8023508:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802350c:	eb02 0a05 	add.w	sl, r2, r5
 8023510:	4a13      	ldr	r2, [pc, #76]	@ (8023560 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 8023512:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8023516:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 802351a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802351e:	00d2      	lsls	r2, r2, #3
 8023520:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023524:	ea49 0202 	orr.w	r2, r9, r2
 8023528:	f817 9005 	ldrb.w	r9, [r7, r5]
 802352c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8023530:	f826 2b02 	strh.w	r2, [r6], #2
 8023534:	fa1f f28e 	uxth.w	r2, lr
 8023538:	e757      	b.n	80233ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 802353a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 802353e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8023542:	1a2d      	subs	r5, r5, r0
 8023544:	b2ad      	uxth	r5, r5
 8023546:	2d00      	cmp	r5, #0
 8023548:	bf18      	it	ne
 802354a:	2000      	movne	r0, #0
 802354c:	e730      	b.n	80233b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 802354e:	4b05      	ldr	r3, [pc, #20]	@ (8023564 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 8023550:	6818      	ldr	r0, [r3, #0]
 8023552:	6803      	ldr	r3, [r0, #0]
 8023554:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8023556:	4798      	blx	r3
 8023558:	b01f      	add	sp, #124	@ 0x7c
 802355a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802355e:	bf00      	nop
 8023560:	fffff800 	.word	0xfffff800
 8023564:	2000e40c 	.word	0x2000e40c

08023568 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8023568:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802356c:	b091      	sub	sp, #68	@ 0x44
 802356e:	469b      	mov	fp, r3
 8023570:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 8023574:	4616      	mov	r6, r2
 8023576:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 802357a:	f9b3 2000 	ldrsh.w	r2, [r3]
 802357e:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8023582:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8023586:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 802358a:	4604      	mov	r4, r0
 802358c:	460d      	mov	r5, r1
 802358e:	4640      	mov	r0, r8
 8023590:	4659      	mov	r1, fp
 8023592:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8023596:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 802359a:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 802359e:	f7ef fb49 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 80235a2:	4631      	mov	r1, r6
 80235a4:	4640      	mov	r0, r8
 80235a6:	f7ef fb45 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 80235aa:	4b74      	ldr	r3, [pc, #464]	@ (802377c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 80235ac:	8818      	ldrh	r0, [r3, #0]
 80235ae:	4b74      	ldr	r3, [pc, #464]	@ (8023780 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 80235b0:	8819      	ldrh	r1, [r3, #0]
 80235b2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 80235b6:	2b00      	cmp	r3, #0
 80235b8:	b202      	sxth	r2, r0
 80235ba:	b20e      	sxth	r6, r1
 80235bc:	da07      	bge.n	80235ce <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 80235be:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 80235c2:	4463      	add	r3, ip
 80235c4:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 80235c8:	2300      	movs	r3, #0
 80235ca:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 80235ce:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 80235d2:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 80235d6:	1ad2      	subs	r2, r2, r3
 80235d8:	4594      	cmp	ip, r2
 80235da:	bfc4      	itt	gt
 80235dc:	1ac2      	subgt	r2, r0, r3
 80235de:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 80235e2:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80235e6:	2a00      	cmp	r2, #0
 80235e8:	da07      	bge.n	80235fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 80235ea:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 80235ee:	4462      	add	r2, ip
 80235f0:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 80235f4:	2200      	movs	r2, #0
 80235f6:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 80235fa:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 80235fe:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8023602:	eba6 060a 	sub.w	r6, r6, sl
 8023606:	42b2      	cmp	r2, r6
 8023608:	bfc4      	itt	gt
 802360a:	eba1 020a 	subgt.w	r2, r1, sl
 802360e:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 8023612:	4a5c      	ldr	r2, [pc, #368]	@ (8023784 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8023614:	7812      	ldrb	r2, [r2, #0]
 8023616:	b9a2      	cbnz	r2, 8023642 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8023618:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 802361c:	4286      	cmp	r6, r0
 802361e:	4640      	mov	r0, r8
 8023620:	9303      	str	r3, [sp, #12]
 8023622:	bf14      	ite	ne
 8023624:	2600      	movne	r6, #0
 8023626:	2601      	moveq	r6, #1
 8023628:	f7ef fb47 	bl	8012cba <_ZNK8touchgfx4Rect7isEmptyEv>
 802362c:	9b03      	ldr	r3, [sp, #12]
 802362e:	b160      	cbz	r0, 802364a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8023630:	2300      	movs	r3, #0
 8023632:	8023      	strh	r3, [r4, #0]
 8023634:	8063      	strh	r3, [r4, #2]
 8023636:	80a3      	strh	r3, [r4, #4]
 8023638:	4620      	mov	r0, r4
 802363a:	80e3      	strh	r3, [r4, #6]
 802363c:	b011      	add	sp, #68	@ 0x44
 802363e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023642:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8023646:	428e      	cmp	r6, r1
 8023648:	e7e9      	b.n	802361e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 802364a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 802364e:	9205      	str	r2, [sp, #20]
 8023650:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8023654:	9206      	str	r2, [sp, #24]
 8023656:	f8bb 2000 	ldrh.w	r2, [fp]
 802365a:	900e      	str	r0, [sp, #56]	@ 0x38
 802365c:	1a9b      	subs	r3, r3, r2
 802365e:	b21b      	sxth	r3, r3
 8023660:	9303      	str	r3, [sp, #12]
 8023662:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8023666:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 802366a:	ebaa 0a03 	sub.w	sl, sl, r3
 802366e:	fa0f f38a 	sxth.w	r3, sl
 8023672:	9304      	str	r3, [sp, #16]
 8023674:	9b03      	ldr	r3, [sp, #12]
 8023676:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 802367a:	9b04      	ldr	r3, [sp, #16]
 802367c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8023680:	9b05      	ldr	r3, [sp, #20]
 8023682:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8023686:	a90e      	add	r1, sp, #56	@ 0x38
 8023688:	9b06      	ldr	r3, [sp, #24]
 802368a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 802368e:	a80c      	add	r0, sp, #48	@ 0x30
 8023690:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 8023694:	f7f7 f8ac 	bl	801a7f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8023698:	4640      	mov	r0, r8
 802369a:	f7f7 f865 	bl	801a768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802369e:	a80e      	add	r0, sp, #56	@ 0x38
 80236a0:	f7f7 f862 	bl	801a768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80236a4:	4b38      	ldr	r3, [pc, #224]	@ (8023788 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 80236a6:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 80236aa:	881b      	ldrh	r3, [r3, #0]
 80236ac:	9307      	str	r3, [sp, #28]
 80236ae:	682b      	ldr	r3, [r5, #0]
 80236b0:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 802378c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80236b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80236b6:	4628      	mov	r0, r5
 80236b8:	4798      	blx	r3
 80236ba:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 80236be:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 80236c2:	4681      	mov	r9, r0
 80236c4:	fb1a 3305 	smlabb	r3, sl, r5, r3
 80236c8:	f8db 0000 	ldr.w	r0, [fp]
 80236cc:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 80236ce:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80236d2:	6803      	ldr	r3, [r0, #0]
 80236d4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80236d6:	4798      	blx	r3
 80236d8:	4607      	mov	r7, r0
 80236da:	f8db 0000 	ldr.w	r0, [fp]
 80236de:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 80236e2:	6803      	ldr	r3, [r0, #0]
 80236e4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80236e8:	9109      	str	r1, [sp, #36]	@ 0x24
 80236ea:	9208      	str	r2, [sp, #32]
 80236ec:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80236ee:	4798      	blx	r3
 80236f0:	f010 0f01 	tst.w	r0, #1
 80236f4:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80236f8:	d012      	beq.n	8023720 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 80236fa:	f8db 0000 	ldr.w	r0, [fp]
 80236fe:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 8023702:	6803      	ldr	r3, [r0, #0]
 8023704:	9200      	str	r2, [sp, #0]
 8023706:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 8023708:	e898 0006 	ldmia.w	r8, {r1, r2}
 802370c:	462b      	mov	r3, r5
 802370e:	47b0      	blx	r6
 8023710:	9b03      	ldr	r3, [sp, #12]
 8023712:	8023      	strh	r3, [r4, #0]
 8023714:	9b04      	ldr	r3, [sp, #16]
 8023716:	8063      	strh	r3, [r4, #2]
 8023718:	9b05      	ldr	r3, [sp, #20]
 802371a:	80a3      	strh	r3, [r4, #4]
 802371c:	9b06      	ldr	r3, [sp, #24]
 802371e:	e78b      	b.n	8023638 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8023720:	fb09 f202 	mul.w	r2, r9, r2
 8023724:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8023728:	440f      	add	r7, r1
 802372a:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 802372e:	b166      	cbz	r6, 802374a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8023730:	9a07      	ldr	r2, [sp, #28]
 8023732:	4592      	cmp	sl, r2
 8023734:	d109      	bne.n	802374a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8023736:	f8db 0000 	ldr.w	r0, [fp]
 802373a:	6802      	ldr	r2, [r0, #0]
 802373c:	fb09 f303 	mul.w	r3, r9, r3
 8023740:	6b96      	ldr	r6, [r2, #56]	@ 0x38
 8023742:	4629      	mov	r1, r5
 8023744:	463a      	mov	r2, r7
 8023746:	47b0      	blx	r6
 8023748:	e7e2      	b.n	8023710 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 802374a:	fb0a f303 	mul.w	r3, sl, r3
 802374e:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 802378c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8023752:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8023756:	ea4f 064a 	mov.w	r6, sl, lsl #1
 802375a:	4545      	cmp	r5, r8
 802375c:	d2d8      	bcs.n	8023710 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 802375e:	f8db 0000 	ldr.w	r0, [fp]
 8023762:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8023766:	6802      	ldr	r2, [r0, #0]
 8023768:	4629      	mov	r1, r5
 802376a:	f8d2 a038 	ldr.w	sl, [r2, #56]	@ 0x38
 802376e:	005b      	lsls	r3, r3, #1
 8023770:	463a      	mov	r2, r7
 8023772:	47d0      	blx	sl
 8023774:	444f      	add	r7, r9
 8023776:	4435      	add	r5, r6
 8023778:	e7ef      	b.n	802375a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 802377a:	bf00      	nop
 802377c:	2000e400 	.word	0x2000e400
 8023780:	2000e402 	.word	0x2000e402
 8023784:	2000e404 	.word	0x2000e404
 8023788:	2000e406 	.word	0x2000e406
 802378c:	2000e40c 	.word	0x2000e40c

08023790 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8023790:	b5f0      	push	{r4, r5, r6, r7, lr}
 8023792:	4606      	mov	r6, r0
 8023794:	b087      	sub	sp, #28
 8023796:	460c      	mov	r4, r1
 8023798:	4617      	mov	r7, r2
 802379a:	461d      	mov	r5, r3
 802379c:	b333      	cbz	r3, 80237ec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 802379e:	4608      	mov	r0, r1
 80237a0:	f7ef fa8b 	bl	8012cba <_ZNK8touchgfx4Rect7isEmptyEv>
 80237a4:	bb10      	cbnz	r0, 80237ec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80237a6:	6820      	ldr	r0, [r4, #0]
 80237a8:	6861      	ldr	r1, [r4, #4]
 80237aa:	4c1c      	ldr	r4, [pc, #112]	@ (802381c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 80237ac:	ab04      	add	r3, sp, #16
 80237ae:	c303      	stmia	r3!, {r0, r1}
 80237b0:	a804      	add	r0, sp, #16
 80237b2:	f7f6 ffd9 	bl	801a768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80237b6:	6820      	ldr	r0, [r4, #0]
 80237b8:	6803      	ldr	r3, [r0, #0]
 80237ba:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80237bc:	4798      	blx	r3
 80237be:	2dff      	cmp	r5, #255	@ 0xff
 80237c0:	d016      	beq.n	80237f0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80237c2:	f010 0f08 	tst.w	r0, #8
 80237c6:	6820      	ldr	r0, [r4, #0]
 80237c8:	d015      	beq.n	80237f6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80237ca:	2400      	movs	r4, #0
 80237cc:	6801      	ldr	r1, [r0, #0]
 80237ce:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80237d2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80237d6:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80237da:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80237de:	9401      	str	r4, [sp, #4]
 80237e0:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 80237e4:	9400      	str	r4, [sp, #0]
 80237e6:	6e4c      	ldr	r4, [r1, #100]	@ 0x64
 80237e8:	4639      	mov	r1, r7
 80237ea:	47a0      	blx	r4
 80237ec:	b007      	add	sp, #28
 80237ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80237f0:	f010 0f02 	tst.w	r0, #2
 80237f4:	e7e7      	b.n	80237c6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80237f6:	6803      	ldr	r3, [r0, #0]
 80237f8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80237fa:	4798      	blx	r3
 80237fc:	4b08      	ldr	r3, [pc, #32]	@ (8023820 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 80237fe:	881a      	ldrh	r2, [r3, #0]
 8023800:	6833      	ldr	r3, [r6, #0]
 8023802:	e9cd 7500 	strd	r7, r5, [sp]
 8023806:	4601      	mov	r1, r0
 8023808:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 802380a:	4630      	mov	r0, r6
 802380c:	ab04      	add	r3, sp, #16
 802380e:	47a8      	blx	r5
 8023810:	6820      	ldr	r0, [r4, #0]
 8023812:	6803      	ldr	r3, [r0, #0]
 8023814:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8023816:	4798      	blx	r3
 8023818:	e7e8      	b.n	80237ec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 802381a:	bf00      	nop
 802381c:	2000e40c 	.word	0x2000e40c
 8023820:	2000e406 	.word	0x2000e406

08023824 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8023824:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023828:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 802382c:	9e08      	ldr	r6, [sp, #32]
 802382e:	4688      	mov	r8, r1
 8023830:	4614      	mov	r4, r2
 8023832:	461d      	mov	r5, r3
 8023834:	2f00      	cmp	r7, #0
 8023836:	f000 80a9 	beq.w	802398c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 802383a:	4618      	mov	r0, r3
 802383c:	f7ef fa3d 	bl	8012cba <_ZNK8touchgfx4Rect7isEmptyEv>
 8023840:	2800      	cmp	r0, #0
 8023842:	f040 80a3 	bne.w	802398c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8023846:	f9b5 1000 	ldrsh.w	r1, [r5]
 802384a:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 802384e:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8023852:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8023856:	fb04 1303 	mla	r3, r4, r3, r1
 802385a:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 802385e:	4365      	muls	r5, r4
 8023860:	2fff      	cmp	r7, #255	@ 0xff
 8023862:	eba4 0200 	sub.w	r2, r4, r0
 8023866:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 802386a:	ea4f 2816 	mov.w	r8, r6, lsr #8
 802386e:	d04a      	beq.n	8023906 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8023870:	b2bc      	uxth	r4, r7
 8023872:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 8023876:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 802387a:	fa5f f788 	uxtb.w	r7, r8
 802387e:	b2f3      	uxtb	r3, r6
 8023880:	0040      	lsls	r0, r0, #1
 8023882:	fb0e fe04 	mul.w	lr, lr, r4
 8023886:	4367      	muls	r7, r4
 8023888:	4363      	muls	r3, r4
 802388a:	ea4f 0842 	mov.w	r8, r2, lsl #1
 802388e:	fa1f fc8c 	uxth.w	ip, ip
 8023892:	42a9      	cmp	r1, r5
 8023894:	d27a      	bcs.n	802398c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8023896:	eb01 0900 	add.w	r9, r1, r0
 802389a:	4549      	cmp	r1, r9
 802389c:	d231      	bcs.n	8023902 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 802389e:	880a      	ldrh	r2, [r1, #0]
 80238a0:	1214      	asrs	r4, r2, #8
 80238a2:	10d6      	asrs	r6, r2, #3
 80238a4:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80238a8:	00d2      	lsls	r2, r2, #3
 80238aa:	b2d2      	uxtb	r2, r2
 80238ac:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80238b0:	fb14 f40c 	smulbb	r4, r4, ip
 80238b4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80238b8:	4474      	add	r4, lr
 80238ba:	fb12 f20c 	smulbb	r2, r2, ip
 80238be:	b2a4      	uxth	r4, r4
 80238c0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80238c4:	441a      	add	r2, r3
 80238c6:	b292      	uxth	r2, r2
 80238c8:	f104 0a01 	add.w	sl, r4, #1
 80238cc:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80238d0:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80238d4:	fb16 f60c 	smulbb	r6, r6, ip
 80238d8:	f102 0a01 	add.w	sl, r2, #1
 80238dc:	443e      	add	r6, r7
 80238de:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 80238e2:	b2b6      	uxth	r6, r6
 80238e4:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80238e8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80238ec:	4322      	orrs	r2, r4
 80238ee:	1c74      	adds	r4, r6, #1
 80238f0:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 80238f4:	0976      	lsrs	r6, r6, #5
 80238f6:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80238fa:	4332      	orrs	r2, r6
 80238fc:	f821 2b02 	strh.w	r2, [r1], #2
 8023900:	e7cb      	b.n	802389a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8023902:	4441      	add	r1, r8
 8023904:	e7c5      	b.n	8023892 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8023906:	4f22      	ldr	r7, [pc, #136]	@ (8023990 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8023908:	0973      	lsrs	r3, r6, #5
 802390a:	ea08 0707 	and.w	r7, r8, r7
 802390e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8023912:	433b      	orrs	r3, r7
 8023914:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8023918:	4333      	orrs	r3, r6
 802391a:	07e7      	lsls	r7, r4, #31
 802391c:	b29b      	uxth	r3, r3
 802391e:	d50b      	bpl.n	8023938 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8023920:	0040      	lsls	r0, r0, #1
 8023922:	0052      	lsls	r2, r2, #1
 8023924:	42a9      	cmp	r1, r5
 8023926:	d231      	bcs.n	802398c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8023928:	180c      	adds	r4, r1, r0
 802392a:	42a1      	cmp	r1, r4
 802392c:	d202      	bcs.n	8023934 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 802392e:	f821 3b02 	strh.w	r3, [r1], #2
 8023932:	e7fa      	b.n	802392a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8023934:	4411      	add	r1, r2
 8023936:	e7f5      	b.n	8023924 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8023938:	078e      	lsls	r6, r1, #30
 802393a:	d008      	beq.n	802394e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 802393c:	0066      	lsls	r6, r4, #1
 802393e:	460a      	mov	r2, r1
 8023940:	42aa      	cmp	r2, r5
 8023942:	d202      	bcs.n	802394a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8023944:	8013      	strh	r3, [r2, #0]
 8023946:	4432      	add	r2, r6
 8023948:	e7fa      	b.n	8023940 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 802394a:	3102      	adds	r1, #2
 802394c:	3801      	subs	r0, #1
 802394e:	07c2      	lsls	r2, r0, #31
 8023950:	d50b      	bpl.n	802396a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8023952:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 8023956:	3a01      	subs	r2, #1
 8023958:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 802395c:	0066      	lsls	r6, r4, #1
 802395e:	42aa      	cmp	r2, r5
 8023960:	d202      	bcs.n	8023968 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8023962:	8013      	strh	r3, [r2, #0]
 8023964:	4432      	add	r2, r6
 8023966:	e7fa      	b.n	802395e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8023968:	3801      	subs	r0, #1
 802396a:	b178      	cbz	r0, 802398c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 802396c:	1040      	asrs	r0, r0, #1
 802396e:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8023972:	0080      	lsls	r0, r0, #2
 8023974:	0064      	lsls	r4, r4, #1
 8023976:	42a9      	cmp	r1, r5
 8023978:	d208      	bcs.n	802398c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 802397a:	180e      	adds	r6, r1, r0
 802397c:	460a      	mov	r2, r1
 802397e:	42b2      	cmp	r2, r6
 8023980:	d202      	bcs.n	8023988 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 8023982:	f842 3b04 	str.w	r3, [r2], #4
 8023986:	e7fa      	b.n	802397e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8023988:	4421      	add	r1, r4
 802398a:	e7f4      	b.n	8023976 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 802398c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023990:	00fff800 	.word	0x00fff800

08023994 <_ZN8touchgfx8LCD16bppC1Ev>:
 8023994:	2200      	movs	r2, #0
 8023996:	4912      	ldr	r1, [pc, #72]	@ (80239e0 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8023998:	6001      	str	r1, [r0, #0]
 802399a:	e9c0 2201 	strd	r2, r2, [r0, #4]
 802399e:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80239a2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80239a6:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80239aa:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 80239ae:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 80239b2:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 80239b6:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 80239ba:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 80239be:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 80239c2:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 80239c6:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 80239ca:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 80239ce:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 80239d2:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 80239d6:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 80239da:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 80239de:	4770      	bx	lr
 80239e0:	080334fc 	.word	0x080334fc

080239e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80239e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80239e8:	460d      	mov	r5, r1
 80239ea:	b08d      	sub	sp, #52	@ 0x34
 80239ec:	4604      	mov	r4, r0
 80239ee:	6808      	ldr	r0, [r1, #0]
 80239f0:	6849      	ldr	r1, [r1, #4]
 80239f2:	4699      	mov	r9, r3
 80239f4:	ab08      	add	r3, sp, #32
 80239f6:	c303      	stmia	r3!, {r0, r1}
 80239f8:	6810      	ldr	r0, [r2, #0]
 80239fa:	6851      	ldr	r1, [r2, #4]
 80239fc:	ab0a      	add	r3, sp, #40	@ 0x28
 80239fe:	c303      	stmia	r3!, {r0, r1}
 8023a00:	a808      	add	r0, sp, #32
 8023a02:	f7f6 feb1 	bl	801a768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8023a06:	4629      	mov	r1, r5
 8023a08:	a80a      	add	r0, sp, #40	@ 0x28
 8023a0a:	f7f6 fef1 	bl	801a7f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8023a0e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8023a12:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 8023a16:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 8023a1a:	4d63      	ldr	r5, [pc, #396]	@ (8023ba8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8023a1c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 8023a20:	6828      	ldr	r0, [r5, #0]
 8023a22:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8023a26:	fb11 2103 	smlabb	r1, r1, r3, r2
 8023a2a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8023a2e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8023a32:	440a      	add	r2, r1
 8023a34:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8023a38:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8023a3c:	4413      	add	r3, r2
 8023a3e:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8023a42:	6803      	ldr	r3, [r0, #0]
 8023a44:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8023a46:	4798      	blx	r3
 8023a48:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8023a4c:	d119      	bne.n	8023a82 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8023a4e:	f010 0f20 	tst.w	r0, #32
 8023a52:	6828      	ldr	r0, [r5, #0]
 8023a54:	d018      	beq.n	8023a88 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8023a56:	2500      	movs	r5, #0
 8023a58:	6801      	ldr	r1, [r0, #0]
 8023a5a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8023a5e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8023a62:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8023a66:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 8023a6a:	9502      	str	r5, [sp, #8]
 8023a6c:	b2b6      	uxth	r6, r6
 8023a6e:	fa1f f588 	uxth.w	r5, r8
 8023a72:	9601      	str	r6, [sp, #4]
 8023a74:	9500      	str	r5, [sp, #0]
 8023a76:	6d4d      	ldr	r5, [r1, #84]	@ 0x54
 8023a78:	4621      	mov	r1, r4
 8023a7a:	47a8      	blx	r5
 8023a7c:	b00d      	add	sp, #52	@ 0x34
 8023a7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023a82:	f010 0f40 	tst.w	r0, #64	@ 0x40
 8023a86:	e7e4      	b.n	8023a52 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8023a88:	6803      	ldr	r3, [r0, #0]
 8023a8a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8023a8c:	4798      	blx	r3
 8023a8e:	4947      	ldr	r1, [pc, #284]	@ (8023bac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8023a90:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8023a94:	880b      	ldrh	r3, [r1, #0]
 8023a96:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 8023a9a:	fb03 5202 	mla	r2, r3, r2, r5
 8023a9e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8023aa2:	4373      	muls	r3, r6
 8023aa4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8023aa8:	9307      	str	r3, [sp, #28]
 8023aaa:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8023aae:	9306      	str	r3, [sp, #24]
 8023ab0:	468a      	mov	sl, r1
 8023ab2:	9b07      	ldr	r3, [sp, #28]
 8023ab4:	4298      	cmp	r0, r3
 8023ab6:	d270      	bcs.n	8023b9a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8023ab8:	9b06      	ldr	r3, [sp, #24]
 8023aba:	4621      	mov	r1, r4
 8023abc:	eb00 0b03 	add.w	fp, r0, r3
 8023ac0:	4558      	cmp	r0, fp
 8023ac2:	d25d      	bcs.n	8023b80 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8023ac4:	f851 4b04 	ldr.w	r4, [r1], #4
 8023ac8:	0e23      	lsrs	r3, r4, #24
 8023aca:	d014      	beq.n	8023af6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8023acc:	2bff      	cmp	r3, #255	@ 0xff
 8023ace:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8023ad2:	d112      	bne.n	8023afa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8023ad4:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8023ad8:	d10f      	bne.n	8023afa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8023ada:	0963      	lsrs	r3, r4, #5
 8023adc:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8023ae0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8023ae4:	f02c 0c07 	bic.w	ip, ip, #7
 8023ae8:	ea43 0c0c 	orr.w	ip, r3, ip
 8023aec:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8023af0:	ea4c 0404 	orr.w	r4, ip, r4
 8023af4:	8004      	strh	r4, [r0, #0]
 8023af6:	3002      	adds	r0, #2
 8023af8:	e7e2      	b.n	8023ac0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8023afa:	fb09 f303 	mul.w	r3, r9, r3
 8023afe:	8807      	ldrh	r7, [r0, #0]
 8023b00:	1c5a      	adds	r2, r3, #1
 8023b02:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8023b06:	1212      	asrs	r2, r2, #8
 8023b08:	123e      	asrs	r6, r7, #8
 8023b0a:	b293      	uxth	r3, r2
 8023b0c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8023b10:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8023b14:	43d2      	mvns	r2, r2
 8023b16:	b2d2      	uxtb	r2, r2
 8023b18:	10fd      	asrs	r5, r7, #3
 8023b1a:	fb1e fe03 	smulbb	lr, lr, r3
 8023b1e:	00ff      	lsls	r7, r7, #3
 8023b20:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8023b24:	fb06 e602 	mla	r6, r6, r2, lr
 8023b28:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8023b2c:	b2ff      	uxtb	r7, r7
 8023b2e:	fa5f fc8c 	uxtb.w	ip, ip
 8023b32:	b2e4      	uxtb	r4, r4
 8023b34:	b2b6      	uxth	r6, r6
 8023b36:	fb1c fc03 	smulbb	ip, ip, r3
 8023b3a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8023b3e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8023b42:	fb14 f403 	smulbb	r4, r4, r3
 8023b46:	fb05 c502 	mla	r5, r5, r2, ip
 8023b4a:	f106 0e01 	add.w	lr, r6, #1
 8023b4e:	fb07 4702 	mla	r7, r7, r2, r4
 8023b52:	b2ad      	uxth	r5, r5
 8023b54:	b2bf      	uxth	r7, r7
 8023b56:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8023b5a:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 8023b5e:	f105 0c01 	add.w	ip, r5, #1
 8023b62:	1c7e      	adds	r6, r7, #1
 8023b64:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8023b68:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023b6c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8023b70:	096d      	lsrs	r5, r5, #5
 8023b72:	ea46 060e 	orr.w	r6, r6, lr
 8023b76:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8023b7a:	432e      	orrs	r6, r5
 8023b7c:	8006      	strh	r6, [r0, #0]
 8023b7e:	e7ba      	b.n	8023af6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8023b80:	f8ba 3000 	ldrh.w	r3, [sl]
 8023b84:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 8023b88:	eba3 0308 	sub.w	r3, r3, r8
 8023b8c:	eba4 0408 	sub.w	r4, r4, r8
 8023b90:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8023b94:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8023b98:	e78b      	b.n	8023ab2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8023b9a:	4b03      	ldr	r3, [pc, #12]	@ (8023ba8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8023b9c:	6818      	ldr	r0, [r3, #0]
 8023b9e:	6803      	ldr	r3, [r0, #0]
 8023ba0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8023ba2:	4798      	blx	r3
 8023ba4:	e76a      	b.n	8023a7c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8023ba6:	bf00      	nop
 8023ba8:	2000e40c 	.word	0x2000e40c
 8023bac:	2000e406 	.word	0x2000e406

08023bb0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8023bb0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8023bb4:	460c      	mov	r4, r1
 8023bb6:	b085      	sub	sp, #20
 8023bb8:	6810      	ldr	r0, [r2, #0]
 8023bba:	6851      	ldr	r1, [r2, #4]
 8023bbc:	466d      	mov	r5, sp
 8023bbe:	c503      	stmia	r5!, {r0, r1}
 8023bc0:	6818      	ldr	r0, [r3, #0]
 8023bc2:	6859      	ldr	r1, [r3, #4]
 8023bc4:	4616      	mov	r6, r2
 8023bc6:	c503      	stmia	r5!, {r0, r1}
 8023bc8:	4668      	mov	r0, sp
 8023bca:	f7f6 fdcd 	bl	801a768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8023bce:	4631      	mov	r1, r6
 8023bd0:	a802      	add	r0, sp, #8
 8023bd2:	f7f6 fe0d 	bl	801a7f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8023bd6:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8023bda:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8023bde:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8023be2:	4d28      	ldr	r5, [pc, #160]	@ (8023c84 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8023be4:	4e28      	ldr	r6, [pc, #160]	@ (8023c88 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8023be6:	6828      	ldr	r0, [r5, #0]
 8023be8:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8023bec:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8023bf0:	fb11 2103 	smlabb	r1, r1, r3, r2
 8023bf4:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8023bf8:	f8bd 1000 	ldrh.w	r1, [sp]
 8023bfc:	440a      	add	r2, r1
 8023bfe:	f8ad 2008 	strh.w	r2, [sp, #8]
 8023c02:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8023c06:	4413      	add	r3, r2
 8023c08:	f8ad 300a 	strh.w	r3, [sp, #10]
 8023c0c:	6803      	ldr	r3, [r0, #0]
 8023c0e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8023c10:	4798      	blx	r3
 8023c12:	8833      	ldrh	r3, [r6, #0]
 8023c14:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8023c18:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8023c1c:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 8023c8c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8023c20:	fb03 1202 	mla	r2, r3, r2, r1
 8023c24:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8023c28:	fb08 f303 	mul.w	r3, r8, r3
 8023c2c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8023c30:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8023c34:	4298      	cmp	r0, r3
 8023c36:	d21d      	bcs.n	8023c74 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8023c38:	eb00 080c 	add.w	r8, r0, ip
 8023c3c:	4540      	cmp	r0, r8
 8023c3e:	d20f      	bcs.n	8023c60 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8023c40:	f854 1b04 	ldr.w	r1, [r4], #4
 8023c44:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8023c48:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8023c4c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8023c50:	ea42 0209 	orr.w	r2, r2, r9
 8023c54:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8023c58:	430a      	orrs	r2, r1
 8023c5a:	f820 2b02 	strh.w	r2, [r0], #2
 8023c5e:	e7ed      	b.n	8023c3c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8023c60:	8832      	ldrh	r2, [r6, #0]
 8023c62:	1bd2      	subs	r2, r2, r7
 8023c64:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8023c68:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8023c6c:	1bd2      	subs	r2, r2, r7
 8023c6e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8023c72:	e7df      	b.n	8023c34 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8023c74:	6828      	ldr	r0, [r5, #0]
 8023c76:	6803      	ldr	r3, [r0, #0]
 8023c78:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8023c7a:	4798      	blx	r3
 8023c7c:	b005      	add	sp, #20
 8023c7e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8023c82:	bf00      	nop
 8023c84:	2000e40c 	.word	0x2000e40c
 8023c88:	2000e406 	.word	0x2000e406
 8023c8c:	fffff800 	.word	0xfffff800

08023c90 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8023c90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023c94:	460e      	mov	r6, r1
 8023c96:	b08e      	sub	sp, #56	@ 0x38
 8023c98:	4604      	mov	r4, r0
 8023c9a:	6808      	ldr	r0, [r1, #0]
 8023c9c:	6849      	ldr	r1, [r1, #4]
 8023c9e:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 8023e78 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8023ca2:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 8023e7c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8023ca6:	461d      	mov	r5, r3
 8023ca8:	ab0a      	add	r3, sp, #40	@ 0x28
 8023caa:	c303      	stmia	r3!, {r0, r1}
 8023cac:	6810      	ldr	r0, [r2, #0]
 8023cae:	6851      	ldr	r1, [r2, #4]
 8023cb0:	ab0c      	add	r3, sp, #48	@ 0x30
 8023cb2:	c303      	stmia	r3!, {r0, r1}
 8023cb4:	a80a      	add	r0, sp, #40	@ 0x28
 8023cb6:	f7f6 fd57 	bl	801a768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8023cba:	4631      	mov	r1, r6
 8023cbc:	a80c      	add	r0, sp, #48	@ 0x30
 8023cbe:	f7f6 fd97 	bl	801a7f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8023cc2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8023cc6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8023cca:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8023cce:	f8d8 0000 	ldr.w	r0, [r8]
 8023cd2:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 8023cd6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8023cda:	fb11 2103 	smlabb	r1, r1, r3, r2
 8023cde:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8023ce2:	440c      	add	r4, r1
 8023ce4:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 8023ce8:	440a      	add	r2, r1
 8023cea:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8023cee:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8023cf2:	4413      	add	r3, r2
 8023cf4:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8023cf8:	6803      	ldr	r3, [r0, #0]
 8023cfa:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8023cfc:	4798      	blx	r3
 8023cfe:	2dff      	cmp	r5, #255	@ 0xff
 8023d00:	d124      	bne.n	8023d4c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8023d02:	f010 0f01 	tst.w	r0, #1
 8023d06:	f8d8 0000 	ldr.w	r0, [r8]
 8023d0a:	d022      	beq.n	8023d52 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8023d0c:	2100      	movs	r1, #0
 8023d0e:	f8d0 c000 	ldr.w	ip, [r0]
 8023d12:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8023d16:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8023d1a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8023d1e:	f04f 0e01 	mov.w	lr, #1
 8023d22:	f8cd e018 	str.w	lr, [sp, #24]
 8023d26:	f8b9 e000 	ldrh.w	lr, [r9]
 8023d2a:	9503      	str	r5, [sp, #12]
 8023d2c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8023d30:	b2b6      	uxth	r6, r6
 8023d32:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8023d36:	9102      	str	r1, [sp, #8]
 8023d38:	b2bf      	uxth	r7, r7
 8023d3a:	9601      	str	r6, [sp, #4]
 8023d3c:	9700      	str	r7, [sp, #0]
 8023d3e:	f8dc 5044 	ldr.w	r5, [ip, #68]	@ 0x44
 8023d42:	4621      	mov	r1, r4
 8023d44:	47a8      	blx	r5
 8023d46:	b00e      	add	sp, #56	@ 0x38
 8023d48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023d4c:	f010 0f04 	tst.w	r0, #4
 8023d50:	e7d9      	b.n	8023d06 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8023d52:	6803      	ldr	r3, [r0, #0]
 8023d54:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8023d56:	4798      	blx	r3
 8023d58:	f8b9 3000 	ldrh.w	r3, [r9]
 8023d5c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8023d60:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8023d64:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8023d68:	fb03 1202 	mla	r2, r3, r2, r1
 8023d6c:	ebac 0c07 	sub.w	ip, ip, r7
 8023d70:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8023d74:	435e      	muls	r6, r3
 8023d76:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8023d7a:	2dff      	cmp	r5, #255	@ 0xff
 8023d7c:	eba3 0707 	sub.w	r7, r3, r7
 8023d80:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8023d84:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8023d88:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8023d8c:	d049      	beq.n	8023e22 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8023d8e:	43eb      	mvns	r3, r5
 8023d90:	fa1f f985 	uxth.w	r9, r5
 8023d94:	b2db      	uxtb	r3, r3
 8023d96:	42b0      	cmp	r0, r6
 8023d98:	d266      	bcs.n	8023e68 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8023d9a:	eb00 0a0e 	add.w	sl, r0, lr
 8023d9e:	4550      	cmp	r0, sl
 8023da0:	4621      	mov	r1, r4
 8023da2:	f104 0403 	add.w	r4, r4, #3
 8023da6:	d25b      	bcs.n	8023e60 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8023da8:	8802      	ldrh	r2, [r0, #0]
 8023daa:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8023dae:	ea4f 2822 	mov.w	r8, r2, asr #8
 8023db2:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8023db6:	fb11 f109 	smulbb	r1, r1, r9
 8023dba:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8023dbe:	10d5      	asrs	r5, r2, #3
 8023dc0:	fb08 1803 	mla	r8, r8, r3, r1
 8023dc4:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8023dc8:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8023dcc:	fb11 f109 	smulbb	r1, r1, r9
 8023dd0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8023dd4:	fb05 1503 	mla	r5, r5, r3, r1
 8023dd8:	00d2      	lsls	r2, r2, #3
 8023dda:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8023dde:	b2d2      	uxtb	r2, r2
 8023de0:	fb11 f109 	smulbb	r1, r1, r9
 8023de4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8023de8:	fa1f f888 	uxth.w	r8, r8
 8023dec:	fb02 1203 	mla	r2, r2, r3, r1
 8023df0:	b292      	uxth	r2, r2
 8023df2:	f108 0101 	add.w	r1, r8, #1
 8023df6:	b2ad      	uxth	r5, r5
 8023df8:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8023dfc:	1c51      	adds	r1, r2, #1
 8023dfe:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8023e02:	1c69      	adds	r1, r5, #1
 8023e04:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8023e08:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8023e0c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8023e10:	096d      	lsrs	r5, r5, #5
 8023e12:	ea42 0208 	orr.w	r2, r2, r8
 8023e16:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8023e1a:	432a      	orrs	r2, r5
 8023e1c:	f820 2b02 	strh.w	r2, [r0], #2
 8023e20:	e7bd      	b.n	8023d9e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8023e22:	4a14      	ldr	r2, [pc, #80]	@ (8023e74 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8023e24:	42b0      	cmp	r0, r6
 8023e26:	d21f      	bcs.n	8023e68 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8023e28:	eb00 050e 	add.w	r5, r0, lr
 8023e2c:	42a8      	cmp	r0, r5
 8023e2e:	4621      	mov	r1, r4
 8023e30:	f104 0403 	add.w	r4, r4, #3
 8023e34:	d210      	bcs.n	8023e58 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8023e36:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8023e3a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8023e3e:	00db      	lsls	r3, r3, #3
 8023e40:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8023e44:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8023e48:	430b      	orrs	r3, r1
 8023e4a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8023e4e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8023e52:	f820 3b02 	strh.w	r3, [r0], #2
 8023e56:	e7e9      	b.n	8023e2c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8023e58:	4438      	add	r0, r7
 8023e5a:	eb01 040c 	add.w	r4, r1, ip
 8023e5e:	e7e1      	b.n	8023e24 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8023e60:	4438      	add	r0, r7
 8023e62:	eb01 040c 	add.w	r4, r1, ip
 8023e66:	e796      	b.n	8023d96 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8023e68:	4b03      	ldr	r3, [pc, #12]	@ (8023e78 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8023e6a:	6818      	ldr	r0, [r3, #0]
 8023e6c:	6803      	ldr	r3, [r0, #0]
 8023e6e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8023e70:	4798      	blx	r3
 8023e72:	e768      	b.n	8023d46 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8023e74:	fffff800 	.word	0xfffff800
 8023e78:	2000e40c 	.word	0x2000e40c
 8023e7c:	2000e406 	.word	0x2000e406

08023e80 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8023e80:	b4f0      	push	{r4, r5, r6, r7}
 8023e82:	4616      	mov	r6, r2
 8023e84:	2e01      	cmp	r6, #1
 8023e86:	461c      	mov	r4, r3
 8023e88:	460d      	mov	r5, r1
 8023e8a:	9a04      	ldr	r2, [sp, #16]
 8023e8c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8023e90:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8023e94:	d012      	beq.n	8023ebc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8023e96:	d303      	bcc.n	8023ea0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8023e98:	2e02      	cmp	r6, #2
 8023e9a:	d00a      	beq.n	8023eb2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8023e9c:	bcf0      	pop	{r4, r5, r6, r7}
 8023e9e:	4770      	bx	lr
 8023ea0:	6805      	ldr	r5, [r0, #0]
 8023ea2:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8023ea6:	68ed      	ldr	r5, [r5, #12]
 8023ea8:	4613      	mov	r3, r2
 8023eaa:	46ac      	mov	ip, r5
 8023eac:	4622      	mov	r2, r4
 8023eae:	bcf0      	pop	{r4, r5, r6, r7}
 8023eb0:	4760      	bx	ip
 8023eb2:	4621      	mov	r1, r4
 8023eb4:	4628      	mov	r0, r5
 8023eb6:	bcf0      	pop	{r4, r5, r6, r7}
 8023eb8:	f7ff bd94 	b.w	80239e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8023ebc:	4621      	mov	r1, r4
 8023ebe:	4628      	mov	r0, r5
 8023ec0:	bcf0      	pop	{r4, r5, r6, r7}
 8023ec2:	f7ff bee5 	b.w	8023c90 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08023ec8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8023ec8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023ecc:	4681      	mov	r9, r0
 8023ece:	b093      	sub	sp, #76	@ 0x4c
 8023ed0:	6810      	ldr	r0, [r2, #0]
 8023ed2:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 8023ed6:	4f6d      	ldr	r7, [pc, #436]	@ (802408c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8023ed8:	4688      	mov	r8, r1
 8023eda:	6851      	ldr	r1, [r2, #4]
 8023edc:	ac0e      	add	r4, sp, #56	@ 0x38
 8023ede:	c403      	stmia	r4!, {r0, r1}
 8023ee0:	6818      	ldr	r0, [r3, #0]
 8023ee2:	6859      	ldr	r1, [r3, #4]
 8023ee4:	ac10      	add	r4, sp, #64	@ 0x40
 8023ee6:	4616      	mov	r6, r2
 8023ee8:	c403      	stmia	r4!, {r0, r1}
 8023eea:	a80e      	add	r0, sp, #56	@ 0x38
 8023eec:	f7f6 fc3c 	bl	801a768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8023ef0:	4631      	mov	r1, r6
 8023ef2:	a810      	add	r0, sp, #64	@ 0x40
 8023ef4:	f7f6 fc7c 	bl	801a7f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8023ef8:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8023efc:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8023f00:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8023f04:	4e62      	ldr	r6, [pc, #392]	@ (8024090 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8023f06:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 8023f0a:	6830      	ldr	r0, [r6, #0]
 8023f0c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8023f10:	fb11 2103 	smlabb	r1, r1, r3, r2
 8023f14:	4489      	add	r9, r1
 8023f16:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 8023f1a:	440a      	add	r2, r1
 8023f1c:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8023f20:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8023f24:	4413      	add	r3, r2
 8023f26:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8023f2a:	6803      	ldr	r3, [r0, #0]
 8023f2c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8023f2e:	4798      	blx	r3
 8023f30:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8023f34:	6830      	ldr	r0, [r6, #0]
 8023f36:	d01d      	beq.n	8023f74 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8023f38:	2200      	movs	r2, #0
 8023f3a:	6801      	ldr	r1, [r0, #0]
 8023f3c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8023f40:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8023f44:	220b      	movs	r2, #11
 8023f46:	9207      	str	r2, [sp, #28]
 8023f48:	883a      	ldrh	r2, [r7, #0]
 8023f4a:	9206      	str	r2, [sp, #24]
 8023f4c:	2201      	movs	r2, #1
 8023f4e:	e9cd a204 	strd	sl, r2, [sp, #16]
 8023f52:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 8023f56:	9203      	str	r2, [sp, #12]
 8023f58:	b2a4      	uxth	r4, r4
 8023f5a:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 8023f5e:	9200      	str	r2, [sp, #0]
 8023f60:	b2ad      	uxth	r5, r5
 8023f62:	9502      	str	r5, [sp, #8]
 8023f64:	9401      	str	r4, [sp, #4]
 8023f66:	6c0c      	ldr	r4, [r1, #64]	@ 0x40
 8023f68:	4642      	mov	r2, r8
 8023f6a:	4649      	mov	r1, r9
 8023f6c:	47a0      	blx	r4
 8023f6e:	b013      	add	sp, #76	@ 0x4c
 8023f70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023f74:	6803      	ldr	r3, [r0, #0]
 8023f76:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8023f78:	4798      	blx	r3
 8023f7a:	883b      	ldrh	r3, [r7, #0]
 8023f7c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8023f80:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8023f84:	fb03 1202 	mla	r2, r3, r2, r1
 8023f88:	435d      	muls	r5, r3
 8023f8a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8023f8e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8023f92:	920c      	str	r2, [sp, #48]	@ 0x30
 8023f94:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8023f98:	1b12      	subs	r2, r2, r4
 8023f9a:	920d      	str	r2, [sp, #52]	@ 0x34
 8023f9c:	0062      	lsls	r2, r4, #1
 8023f9e:	1b1c      	subs	r4, r3, r4
 8023fa0:	0063      	lsls	r3, r4, #1
 8023fa2:	920a      	str	r2, [sp, #40]	@ 0x28
 8023fa4:	930b      	str	r3, [sp, #44]	@ 0x2c
 8023fa6:	f04f 0e04 	mov.w	lr, #4
 8023faa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8023fac:	4298      	cmp	r0, r3
 8023fae:	d266      	bcs.n	802407e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8023fb0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8023fb2:	eb00 0b03 	add.w	fp, r0, r3
 8023fb6:	4558      	cmp	r0, fp
 8023fb8:	d25c      	bcs.n	8024074 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8023fba:	f819 3b01 	ldrb.w	r3, [r9], #1
 8023fbe:	fb1e e303 	smlabb	r3, lr, r3, lr
 8023fc2:	f858 2003 	ldr.w	r2, [r8, r3]
 8023fc6:	0e11      	lsrs	r1, r2, #24
 8023fc8:	d012      	beq.n	8023ff0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8023fca:	29ff      	cmp	r1, #255	@ 0xff
 8023fcc:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8023fd0:	d110      	bne.n	8023ff4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8023fd2:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8023fd6:	d10d      	bne.n	8023ff4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8023fd8:	0953      	lsrs	r3, r2, #5
 8023fda:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 8023fde:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8023fe2:	f027 0707 	bic.w	r7, r7, #7
 8023fe6:	431f      	orrs	r7, r3
 8023fe8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023fec:	433a      	orrs	r2, r7
 8023fee:	8002      	strh	r2, [r0, #0]
 8023ff0:	3002      	adds	r0, #2
 8023ff2:	e7e0      	b.n	8023fb6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8023ff4:	fb0a f101 	mul.w	r1, sl, r1
 8023ff8:	8806      	ldrh	r6, [r0, #0]
 8023ffa:	1c4b      	adds	r3, r1, #1
 8023ffc:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8024000:	1235      	asrs	r5, r6, #8
 8024002:	10f4      	asrs	r4, r6, #3
 8024004:	121b      	asrs	r3, r3, #8
 8024006:	00f6      	lsls	r6, r6, #3
 8024008:	b299      	uxth	r1, r3
 802400a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 802400e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8024012:	b2f6      	uxtb	r6, r6
 8024014:	43db      	mvns	r3, r3
 8024016:	b2d2      	uxtb	r2, r2
 8024018:	b2db      	uxtb	r3, r3
 802401a:	fb1c fc01 	smulbb	ip, ip, r1
 802401e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8024022:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8024026:	fb12 f201 	smulbb	r2, r2, r1
 802402a:	fb05 c503 	mla	r5, r5, r3, ip
 802402e:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8024032:	b2ff      	uxtb	r7, r7
 8024034:	fb06 2203 	mla	r2, r6, r3, r2
 8024038:	b2ad      	uxth	r5, r5
 802403a:	fb17 f701 	smulbb	r7, r7, r1
 802403e:	b292      	uxth	r2, r2
 8024040:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8024044:	fb04 7403 	mla	r4, r4, r3, r7
 8024048:	f105 0c01 	add.w	ip, r5, #1
 802404c:	1c57      	adds	r7, r2, #1
 802404e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8024052:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8024056:	b2a4      	uxth	r4, r4
 8024058:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802405c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8024060:	433d      	orrs	r5, r7
 8024062:	1c67      	adds	r7, r4, #1
 8024064:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8024068:	0964      	lsrs	r4, r4, #5
 802406a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802406e:	4325      	orrs	r5, r4
 8024070:	8005      	strh	r5, [r0, #0]
 8024072:	e7bd      	b.n	8023ff0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8024074:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8024076:	4418      	add	r0, r3
 8024078:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802407a:	4499      	add	r9, r3
 802407c:	e795      	b.n	8023faa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 802407e:	4b04      	ldr	r3, [pc, #16]	@ (8024090 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8024080:	6818      	ldr	r0, [r3, #0]
 8024082:	6803      	ldr	r3, [r0, #0]
 8024084:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024086:	4798      	blx	r3
 8024088:	e771      	b.n	8023f6e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 802408a:	bf00      	nop
 802408c:	2000e406 	.word	0x2000e406
 8024090:	2000e40c 	.word	0x2000e40c

08024094 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8024094:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024098:	b087      	sub	sp, #28
 802409a:	4680      	mov	r8, r0
 802409c:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 80240a0:	460d      	mov	r5, r1
 80240a2:	4614      	mov	r4, r2
 80240a4:	2e00      	cmp	r6, #0
 80240a6:	f000 80b9 	beq.w	802421c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 80240aa:	6810      	ldr	r0, [r2, #0]
 80240ac:	6851      	ldr	r1, [r2, #4]
 80240ae:	af02      	add	r7, sp, #8
 80240b0:	c703      	stmia	r7!, {r0, r1}
 80240b2:	6818      	ldr	r0, [r3, #0]
 80240b4:	6859      	ldr	r1, [r3, #4]
 80240b6:	af04      	add	r7, sp, #16
 80240b8:	c703      	stmia	r7!, {r0, r1}
 80240ba:	a802      	add	r0, sp, #8
 80240bc:	f7f6 fb54 	bl	801a768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80240c0:	4621      	mov	r1, r4
 80240c2:	a804      	add	r0, sp, #16
 80240c4:	f7f6 fb94 	bl	801a7f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80240c8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80240cc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80240d0:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 80240d4:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 80240d8:	fb14 2103 	smlabb	r1, r4, r3, r2
 80240dc:	eb08 0401 	add.w	r4, r8, r1
 80240e0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80240e4:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80240e8:	440a      	add	r2, r1
 80240ea:	f8ad 2010 	strh.w	r2, [sp, #16]
 80240ee:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80240f2:	4413      	add	r3, r2
 80240f4:	f8ad 3012 	strh.w	r3, [sp, #18]
 80240f8:	4b4a      	ldr	r3, [pc, #296]	@ (8024224 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 80240fa:	6818      	ldr	r0, [r3, #0]
 80240fc:	6803      	ldr	r3, [r0, #0]
 80240fe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024100:	4798      	blx	r3
 8024102:	4b49      	ldr	r3, [pc, #292]	@ (8024228 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8024104:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8024108:	881a      	ldrh	r2, [r3, #0]
 802410a:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 802410e:	2eff      	cmp	r6, #255	@ 0xff
 8024110:	fb02 c101 	mla	r1, r2, r1, ip
 8024114:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8024118:	fb02 f207 	mul.w	r2, r2, r7
 802411c:	f105 0104 	add.w	r1, r5, #4
 8024120:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8024124:	461d      	mov	r5, r3
 8024126:	d05a      	beq.n	80241de <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8024128:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 802412c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8024130:	b2b6      	uxth	r6, r6
 8024132:	fa1f fe8e 	uxth.w	lr, lr
 8024136:	9301      	str	r3, [sp, #4]
 8024138:	4282      	cmp	r2, r0
 802413a:	d96a      	bls.n	8024212 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 802413c:	eb00 0b0a 	add.w	fp, r0, sl
 8024140:	4583      	cmp	fp, r0
 8024142:	d940      	bls.n	80241c6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8024144:	f814 3b01 	ldrb.w	r3, [r4], #1
 8024148:	8805      	ldrh	r5, [r0, #0]
 802414a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 802414e:	122f      	asrs	r7, r5, #8
 8024150:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8024154:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8024158:	fb17 f70e 	smulbb	r7, r7, lr
 802415c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8024160:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8024164:	00ed      	lsls	r5, r5, #3
 8024166:	fb0c 7c06 	mla	ip, ip, r6, r7
 802416a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 802416e:	10df      	asrs	r7, r3, #3
 8024170:	b2ed      	uxtb	r5, r5
 8024172:	00db      	lsls	r3, r3, #3
 8024174:	fa1f fc8c 	uxth.w	ip, ip
 8024178:	fb19 f90e 	smulbb	r9, r9, lr
 802417c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8024180:	b2db      	uxtb	r3, r3
 8024182:	fb15 f50e 	smulbb	r5, r5, lr
 8024186:	fb07 9706 	mla	r7, r7, r6, r9
 802418a:	fb03 5306 	mla	r3, r3, r6, r5
 802418e:	f10c 0901 	add.w	r9, ip, #1
 8024192:	b29b      	uxth	r3, r3
 8024194:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8024198:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 802419c:	f103 0c01 	add.w	ip, r3, #1
 80241a0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80241a4:	b2bf      	uxth	r7, r7
 80241a6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80241aa:	ea4c 0c09 	orr.w	ip, ip, r9
 80241ae:	f107 0901 	add.w	r9, r7, #1
 80241b2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 80241b6:	097f      	lsrs	r7, r7, #5
 80241b8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80241bc:	ea4c 0c07 	orr.w	ip, ip, r7
 80241c0:	f820 cb02 	strh.w	ip, [r0], #2
 80241c4:	e7bc      	b.n	8024140 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 80241c6:	9b01      	ldr	r3, [sp, #4]
 80241c8:	881b      	ldrh	r3, [r3, #0]
 80241ca:	eba3 0308 	sub.w	r3, r3, r8
 80241ce:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80241d2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80241d6:	eba3 0308 	sub.w	r3, r3, r8
 80241da:	441c      	add	r4, r3
 80241dc:	e7ac      	b.n	8024138 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 80241de:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80241e2:	4282      	cmp	r2, r0
 80241e4:	d915      	bls.n	8024212 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 80241e6:	eb00 060a 	add.w	r6, r0, sl
 80241ea:	4286      	cmp	r6, r0
 80241ec:	d906      	bls.n	80241fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 80241ee:	f814 3b01 	ldrb.w	r3, [r4], #1
 80241f2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80241f6:	f820 3b02 	strh.w	r3, [r0], #2
 80241fa:	e7f6      	b.n	80241ea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 80241fc:	882b      	ldrh	r3, [r5, #0]
 80241fe:	eba3 0308 	sub.w	r3, r3, r8
 8024202:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8024206:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 802420a:	eba3 0308 	sub.w	r3, r3, r8
 802420e:	441c      	add	r4, r3
 8024210:	e7e7      	b.n	80241e2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8024212:	4b04      	ldr	r3, [pc, #16]	@ (8024224 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8024214:	6818      	ldr	r0, [r3, #0]
 8024216:	6803      	ldr	r3, [r0, #0]
 8024218:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802421a:	4798      	blx	r3
 802421c:	b007      	add	sp, #28
 802421e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024222:	bf00      	nop
 8024224:	2000e40c 	.word	0x2000e40c
 8024228:	2000e406 	.word	0x2000e406

0802422c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 802422c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024230:	b091      	sub	sp, #68	@ 0x44
 8024232:	4680      	mov	r8, r0
 8024234:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 8024238:	460f      	mov	r7, r1
 802423a:	4614      	mov	r4, r2
 802423c:	2d00      	cmp	r5, #0
 802423e:	d051      	beq.n	80242e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8024240:	6810      	ldr	r0, [r2, #0]
 8024242:	6851      	ldr	r1, [r2, #4]
 8024244:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 8024448 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8024248:	ae0c      	add	r6, sp, #48	@ 0x30
 802424a:	c603      	stmia	r6!, {r0, r1}
 802424c:	6818      	ldr	r0, [r3, #0]
 802424e:	6859      	ldr	r1, [r3, #4]
 8024250:	ae0e      	add	r6, sp, #56	@ 0x38
 8024252:	c603      	stmia	r6!, {r0, r1}
 8024254:	a80c      	add	r0, sp, #48	@ 0x30
 8024256:	f7f6 fa87 	bl	801a768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802425a:	4621      	mov	r1, r4
 802425c:	a80e      	add	r0, sp, #56	@ 0x38
 802425e:	f7f6 fac7 	bl	801a7f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024262:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 8024266:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 802426a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 802426e:	f8d9 0000 	ldr.w	r0, [r9]
 8024272:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8024276:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 802427a:	fb11 2103 	smlabb	r1, r1, r3, r2
 802427e:	eb08 0401 	add.w	r4, r8, r1
 8024282:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8024286:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 802444c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 802428a:	440a      	add	r2, r1
 802428c:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8024290:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8024294:	4413      	add	r3, r2
 8024296:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 802429a:	6803      	ldr	r3, [r0, #0]
 802429c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 802429e:	4798      	blx	r3
 80242a0:	f010 0f80 	tst.w	r0, #128	@ 0x80
 80242a4:	f8d9 0000 	ldr.w	r0, [r9]
 80242a8:	d01f      	beq.n	80242ea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 80242aa:	2200      	movs	r2, #0
 80242ac:	6801      	ldr	r1, [r0, #0]
 80242ae:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 80242b2:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80242b6:	220b      	movs	r2, #11
 80242b8:	9207      	str	r2, [sp, #28]
 80242ba:	f8b8 2000 	ldrh.w	r2, [r8]
 80242be:	9206      	str	r2, [sp, #24]
 80242c0:	2201      	movs	r2, #1
 80242c2:	e9cd 5204 	strd	r5, r2, [sp, #16]
 80242c6:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 80242ca:	9203      	str	r2, [sp, #12]
 80242cc:	fa1f f28a 	uxth.w	r2, sl
 80242d0:	9202      	str	r2, [sp, #8]
 80242d2:	b2b6      	uxth	r6, r6
 80242d4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 80242d8:	9200      	str	r2, [sp, #0]
 80242da:	9601      	str	r6, [sp, #4]
 80242dc:	6c0d      	ldr	r5, [r1, #64]	@ 0x40
 80242de:	463a      	mov	r2, r7
 80242e0:	4621      	mov	r1, r4
 80242e2:	47a8      	blx	r5
 80242e4:	b011      	add	sp, #68	@ 0x44
 80242e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80242ea:	6803      	ldr	r3, [r0, #0]
 80242ec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80242ee:	4798      	blx	r3
 80242f0:	f8b8 2000 	ldrh.w	r2, [r8]
 80242f4:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 80242f8:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 80242fc:	2dff      	cmp	r5, #255	@ 0xff
 80242fe:	fb02 1303 	mla	r3, r2, r3, r1
 8024302:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8024306:	ea4f 0946 	mov.w	r9, r6, lsl #1
 802430a:	fb0a fa02 	mul.w	sl, sl, r2
 802430e:	d062      	beq.n	80243d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8024310:	ea6f 0c05 	mvn.w	ip, r5
 8024314:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8024318:	930a      	str	r3, [sp, #40]	@ 0x28
 802431a:	b2ad      	uxth	r5, r5
 802431c:	fa5f fc8c 	uxtb.w	ip, ip
 8024320:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 8024324:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8024326:	4298      	cmp	r0, r3
 8024328:	f080 8085 	bcs.w	8024436 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 802432c:	eb00 0b09 	add.w	fp, r0, r9
 8024330:	4558      	cmp	r0, fp
 8024332:	d246      	bcs.n	80243c2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8024334:	f814 eb01 	ldrb.w	lr, [r4], #1
 8024338:	2303      	movs	r3, #3
 802433a:	2204      	movs	r2, #4
 802433c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8024340:	eb07 0a0e 	add.w	sl, r7, lr
 8024344:	8803      	ldrh	r3, [r0, #0]
 8024346:	f89a 8002 	ldrb.w	r8, [sl, #2]
 802434a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802434e:	1219      	asrs	r1, r3, #8
 8024350:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8024354:	fb18 f805 	smulbb	r8, r8, r5
 8024358:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 802435c:	10da      	asrs	r2, r3, #3
 802435e:	fb01 810c 	mla	r1, r1, ip, r8
 8024362:	00db      	lsls	r3, r3, #3
 8024364:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8024368:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802436c:	b2db      	uxtb	r3, r3
 802436e:	fb18 f805 	smulbb	r8, r8, r5
 8024372:	fb1e fe05 	smulbb	lr, lr, r5
 8024376:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 802437a:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 802437e:	b289      	uxth	r1, r1
 8024380:	fb02 820c 	mla	r2, r2, ip, r8
 8024384:	fb03 e30c 	mla	r3, r3, ip, lr
 8024388:	b292      	uxth	r2, r2
 802438a:	b29b      	uxth	r3, r3
 802438c:	f101 0801 	add.w	r8, r1, #1
 8024390:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8024394:	f103 0e01 	add.w	lr, r3, #1
 8024398:	f102 0801 	add.w	r8, r2, #1
 802439c:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 80243a0:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 80243a4:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80243a8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80243ac:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80243b0:	ea4e 0101 	orr.w	r1, lr, r1
 80243b4:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80243b8:	ea41 0108 	orr.w	r1, r1, r8
 80243bc:	f820 1b02 	strh.w	r1, [r0], #2
 80243c0:	e7b6      	b.n	8024330 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 80243c2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80243c4:	881b      	ldrh	r3, [r3, #0]
 80243c6:	1b9b      	subs	r3, r3, r6
 80243c8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80243cc:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80243d0:	1b9b      	subs	r3, r3, r6
 80243d2:	441c      	add	r4, r3
 80243d4:	e7a6      	b.n	8024324 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 80243d6:	491b      	ldr	r1, [pc, #108]	@ (8024444 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 80243d8:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 80243dc:	2203      	movs	r2, #3
 80243de:	2504      	movs	r5, #4
 80243e0:	4550      	cmp	r0, sl
 80243e2:	d228      	bcs.n	8024436 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80243e4:	eb00 0c09 	add.w	ip, r0, r9
 80243e8:	4560      	cmp	r0, ip
 80243ea:	4623      	mov	r3, r4
 80243ec:	d219      	bcs.n	8024422 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 80243ee:	f893 e000 	ldrb.w	lr, [r3]
 80243f2:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 80243f6:	eb07 0b0e 	add.w	fp, r7, lr
 80243fa:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80243fe:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8024402:	f89b b001 	ldrb.w	fp, [fp, #1]
 8024406:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 802440a:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 802440e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8024412:	ea43 030b 	orr.w	r3, r3, fp
 8024416:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 802441a:	3401      	adds	r4, #1
 802441c:	f820 3b02 	strh.w	r3, [r0], #2
 8024420:	e7e2      	b.n	80243e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8024422:	f8b8 3000 	ldrh.w	r3, [r8]
 8024426:	1b9b      	subs	r3, r3, r6
 8024428:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802442c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8024430:	1b9b      	subs	r3, r3, r6
 8024432:	441c      	add	r4, r3
 8024434:	e7d4      	b.n	80243e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8024436:	4b04      	ldr	r3, [pc, #16]	@ (8024448 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8024438:	6818      	ldr	r0, [r3, #0]
 802443a:	6803      	ldr	r3, [r0, #0]
 802443c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802443e:	4798      	blx	r3
 8024440:	e750      	b.n	80242e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8024442:	bf00      	nop
 8024444:	fffff800 	.word	0xfffff800
 8024448:	2000e40c 	.word	0x2000e40c
 802444c:	2000e406 	.word	0x2000e406

08024450 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8024450:	b4f0      	push	{r4, r5, r6, r7}
 8024452:	460c      	mov	r4, r1
 8024454:	4611      	mov	r1, r2
 8024456:	f89d 5014 	ldrb.w	r5, [sp, #20]
 802445a:	780f      	ldrb	r7, [r1, #0]
 802445c:	784e      	ldrb	r6, [r1, #1]
 802445e:	2f01      	cmp	r7, #1
 8024460:	461a      	mov	r2, r3
 8024462:	9b04      	ldr	r3, [sp, #16]
 8024464:	d038      	beq.n	80244d8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 8024466:	d31f      	bcc.n	80244a8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 8024468:	2f02      	cmp	r7, #2
 802446a:	d14d      	bne.n	8024508 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 802446c:	2e03      	cmp	r6, #3
 802446e:	d84b      	bhi.n	8024508 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8024470:	e8df f006 	tbb	[pc, r6]
 8024474:	17140702 	.word	0x17140702
 8024478:	9504      	str	r5, [sp, #16]
 802447a:	4620      	mov	r0, r4
 802447c:	bcf0      	pop	{r4, r5, r6, r7}
 802447e:	f7ff be09 	b.w	8024094 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8024482:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8024484:	2800      	cmp	r0, #0
 8024486:	d03f      	beq.n	8024508 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8024488:	6806      	ldr	r6, [r0, #0]
 802448a:	e9cd 3504 	strd	r3, r5, [sp, #16]
 802448e:	68b5      	ldr	r5, [r6, #8]
 8024490:	4613      	mov	r3, r2
 8024492:	46ac      	mov	ip, r5
 8024494:	460a      	mov	r2, r1
 8024496:	4621      	mov	r1, r4
 8024498:	bcf0      	pop	{r4, r5, r6, r7}
 802449a:	4760      	bx	ip
 802449c:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 80244a0:	e7f0      	b.n	8024484 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 80244a2:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 80244a6:	e7ed      	b.n	8024484 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 80244a8:	2e03      	cmp	r6, #3
 80244aa:	d82d      	bhi.n	8024508 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80244ac:	e8df f006 	tbb	[pc, r6]
 80244b0:	110e0702 	.word	0x110e0702
 80244b4:	9504      	str	r5, [sp, #16]
 80244b6:	4620      	mov	r0, r4
 80244b8:	bcf0      	pop	{r4, r5, r6, r7}
 80244ba:	f7ff bd05 	b.w	8023ec8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80244be:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 80244c0:	b310      	cbz	r0, 8024508 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80244c2:	6806      	ldr	r6, [r0, #0]
 80244c4:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80244c8:	68f5      	ldr	r5, [r6, #12]
 80244ca:	e7e1      	b.n	8024490 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80244cc:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 80244d0:	e7f6      	b.n	80244c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 80244d2:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 80244d6:	e7f3      	b.n	80244c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 80244d8:	2e03      	cmp	r6, #3
 80244da:	d815      	bhi.n	8024508 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80244dc:	e8df f006 	tbb	[pc, r6]
 80244e0:	110e0702 	.word	0x110e0702
 80244e4:	9504      	str	r5, [sp, #16]
 80244e6:	4620      	mov	r0, r4
 80244e8:	bcf0      	pop	{r4, r5, r6, r7}
 80244ea:	f7ff be9f 	b.w	802422c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80244ee:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 80244f0:	b150      	cbz	r0, 8024508 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80244f2:	6806      	ldr	r6, [r0, #0]
 80244f4:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80244f8:	6935      	ldr	r5, [r6, #16]
 80244fa:	e7c9      	b.n	8024490 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80244fc:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8024500:	e7f6      	b.n	80244f0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8024502:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8024506:	e7f3      	b.n	80244f0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8024508:	bcf0      	pop	{r4, r5, r6, r7}
 802450a:	4770      	bx	lr

0802450c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 802450c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024510:	4604      	mov	r4, r0
 8024512:	b087      	sub	sp, #28
 8024514:	6810      	ldr	r0, [r2, #0]
 8024516:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 802451a:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 8024754 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 802451e:	460e      	mov	r6, r1
 8024520:	6851      	ldr	r1, [r2, #4]
 8024522:	ad02      	add	r5, sp, #8
 8024524:	c503      	stmia	r5!, {r0, r1}
 8024526:	6818      	ldr	r0, [r3, #0]
 8024528:	6859      	ldr	r1, [r3, #4]
 802452a:	ad04      	add	r5, sp, #16
 802452c:	4617      	mov	r7, r2
 802452e:	c503      	stmia	r5!, {r0, r1}
 8024530:	a802      	add	r0, sp, #8
 8024532:	f7f6 f919 	bl	801a768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024536:	4639      	mov	r1, r7
 8024538:	a804      	add	r0, sp, #16
 802453a:	f7f6 f959 	bl	801a7f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802453e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8024542:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8024546:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 802454a:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 802454e:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8024552:	fb11 2103 	smlabb	r1, r1, r3, r2
 8024556:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 802455a:	440e      	add	r6, r1
 802455c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8024560:	440a      	add	r2, r1
 8024562:	f8ad 2010 	strh.w	r2, [sp, #16]
 8024566:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 802456a:	4413      	add	r3, r2
 802456c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8024570:	4b77      	ldr	r3, [pc, #476]	@ (8024750 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8024572:	6818      	ldr	r0, [r3, #0]
 8024574:	6803      	ldr	r3, [r0, #0]
 8024576:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024578:	4798      	blx	r3
 802457a:	f8b9 b000 	ldrh.w	fp, [r9]
 802457e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8024582:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8024586:	fb0b 2303 	mla	r3, fp, r3, r2
 802458a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802458e:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8024592:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8024596:	fb05 f50b 	mul.w	r5, r5, fp
 802459a:	9300      	str	r3, [sp, #0]
 802459c:	d069      	beq.n	8024672 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 802459e:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 80245a2:	4558      	cmp	r0, fp
 80245a4:	f080 80cc 	bcs.w	8024740 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80245a8:	9b00      	ldr	r3, [sp, #0]
 80245aa:	18c3      	adds	r3, r0, r3
 80245ac:	9301      	str	r3, [sp, #4]
 80245ae:	4631      	mov	r1, r6
 80245b0:	9b01      	ldr	r3, [sp, #4]
 80245b2:	4298      	cmp	r0, r3
 80245b4:	d24f      	bcs.n	8024656 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 80245b6:	f811 2b01 	ldrb.w	r2, [r1], #1
 80245ba:	2a00      	cmp	r2, #0
 80245bc:	d048      	beq.n	8024650 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80245be:	fb0a f202 	mul.w	r2, sl, r2
 80245c2:	1c53      	adds	r3, r2, #1
 80245c4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80245c8:	121b      	asrs	r3, r3, #8
 80245ca:	d041      	beq.n	8024650 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80245cc:	8802      	ldrh	r2, [r0, #0]
 80245ce:	f8b4 c000 	ldrh.w	ip, [r4]
 80245d2:	b29e      	uxth	r6, r3
 80245d4:	1215      	asrs	r5, r2, #8
 80245d6:	43db      	mvns	r3, r3
 80245d8:	b2db      	uxtb	r3, r3
 80245da:	ea4f 272c 	mov.w	r7, ip, asr #8
 80245de:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80245e2:	fb15 f503 	smulbb	r5, r5, r3
 80245e6:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80245ea:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80245ee:	00d2      	lsls	r2, r2, #3
 80245f0:	fb07 5706 	mla	r7, r7, r6, r5
 80245f4:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80245f8:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80245fc:	b2d2      	uxtb	r2, r2
 80245fe:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8024602:	b2bf      	uxth	r7, r7
 8024604:	fb1e fe03 	smulbb	lr, lr, r3
 8024608:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 802460c:	fa5f fc8c 	uxtb.w	ip, ip
 8024610:	fb12 f203 	smulbb	r2, r2, r3
 8024614:	fb05 e506 	mla	r5, r5, r6, lr
 8024618:	fb0c 2c06 	mla	ip, ip, r6, r2
 802461c:	f107 0e01 	add.w	lr, r7, #1
 8024620:	fa1f fc8c 	uxth.w	ip, ip
 8024624:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8024628:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 802462c:	f10c 0701 	add.w	r7, ip, #1
 8024630:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024634:	b2ad      	uxth	r5, r5
 8024636:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802463a:	ea47 070e 	orr.w	r7, r7, lr
 802463e:	f105 0e01 	add.w	lr, r5, #1
 8024642:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8024646:	096d      	lsrs	r5, r5, #5
 8024648:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 802464c:	432f      	orrs	r7, r5
 802464e:	8007      	strh	r7, [r0, #0]
 8024650:	3002      	adds	r0, #2
 8024652:	3402      	adds	r4, #2
 8024654:	e7ac      	b.n	80245b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8024656:	f8b9 3000 	ldrh.w	r3, [r9]
 802465a:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 802465e:	eba3 0308 	sub.w	r3, r3, r8
 8024662:	eba6 0608 	sub.w	r6, r6, r8
 8024666:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 802466a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802466e:	440e      	add	r6, r1
 8024670:	e797      	b.n	80245a2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8024672:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8024676:	42a8      	cmp	r0, r5
 8024678:	d262      	bcs.n	8024740 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 802467a:	9b00      	ldr	r3, [sp, #0]
 802467c:	4631      	mov	r1, r6
 802467e:	eb00 0b03 	add.w	fp, r0, r3
 8024682:	4558      	cmp	r0, fp
 8024684:	d24e      	bcs.n	8024724 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8024686:	f811 3b01 	ldrb.w	r3, [r1], #1
 802468a:	b12b      	cbz	r3, 8024698 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 802468c:	2bff      	cmp	r3, #255	@ 0xff
 802468e:	f8b4 e000 	ldrh.w	lr, [r4]
 8024692:	d104      	bne.n	802469e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8024694:	f8a0 e000 	strh.w	lr, [r0]
 8024698:	3002      	adds	r0, #2
 802469a:	3402      	adds	r4, #2
 802469c:	e7f1      	b.n	8024682 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 802469e:	8802      	ldrh	r2, [r0, #0]
 80246a0:	b29f      	uxth	r7, r3
 80246a2:	1216      	asrs	r6, r2, #8
 80246a4:	43db      	mvns	r3, r3
 80246a6:	b2db      	uxtb	r3, r3
 80246a8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80246ac:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80246b0:	fb16 f603 	smulbb	r6, r6, r3
 80246b4:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80246b8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80246bc:	00d2      	lsls	r2, r2, #3
 80246be:	fb0c 6c07 	mla	ip, ip, r7, r6
 80246c2:	b2d2      	uxtb	r2, r2
 80246c4:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80246c8:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80246cc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80246d0:	fb1a fa03 	smulbb	sl, sl, r3
 80246d4:	fa1f fc8c 	uxth.w	ip, ip
 80246d8:	fb12 f303 	smulbb	r3, r2, r3
 80246dc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80246e0:	fa5f fe8e 	uxtb.w	lr, lr
 80246e4:	fb06 a607 	mla	r6, r6, r7, sl
 80246e8:	f10c 0201 	add.w	r2, ip, #1
 80246ec:	fb0e 3307 	mla	r3, lr, r7, r3
 80246f0:	b2b6      	uxth	r6, r6
 80246f2:	b29b      	uxth	r3, r3
 80246f4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80246f8:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 80246fc:	f106 0a01 	add.w	sl, r6, #1
 8024700:	f103 0c01 	add.w	ip, r3, #1
 8024704:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8024708:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 802470c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8024710:	0976      	lsrs	r6, r6, #5
 8024712:	ea4c 0c02 	orr.w	ip, ip, r2
 8024716:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 802471a:	ea4c 0c06 	orr.w	ip, ip, r6
 802471e:	f8a0 c000 	strh.w	ip, [r0]
 8024722:	e7b9      	b.n	8024698 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8024724:	f8b9 3000 	ldrh.w	r3, [r9]
 8024728:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 802472c:	eba3 0308 	sub.w	r3, r3, r8
 8024730:	eba6 0608 	sub.w	r6, r6, r8
 8024734:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8024738:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802473c:	440e      	add	r6, r1
 802473e:	e79a      	b.n	8024676 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8024740:	4b03      	ldr	r3, [pc, #12]	@ (8024750 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8024742:	6818      	ldr	r0, [r3, #0]
 8024744:	6803      	ldr	r3, [r0, #0]
 8024746:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024748:	4798      	blx	r3
 802474a:	b007      	add	sp, #28
 802474c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024750:	2000e40c 	.word	0x2000e40c
 8024754:	2000e406 	.word	0x2000e406

08024758 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8024758:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802475c:	b089      	sub	sp, #36	@ 0x24
 802475e:	4607      	mov	r7, r0
 8024760:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 8024764:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8024766:	4688      	mov	r8, r1
 8024768:	4692      	mov	sl, r2
 802476a:	4699      	mov	r9, r3
 802476c:	2e00      	cmp	r6, #0
 802476e:	d048      	beq.n	8024802 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8024770:	4608      	mov	r0, r1
 8024772:	f7fa f81d 	bl	801e7b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8024776:	4605      	mov	r5, r0
 8024778:	4640      	mov	r0, r8
 802477a:	f7fa f84d 	bl	801e818 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802477e:	f8ad 000e 	strh.w	r0, [sp, #14]
 8024782:	4640      	mov	r0, r8
 8024784:	f8ad a008 	strh.w	sl, [sp, #8]
 8024788:	f8ad 500c 	strh.w	r5, [sp, #12]
 802478c:	f8ad 900a 	strh.w	r9, [sp, #10]
 8024790:	f7fa f900 	bl	801e994 <_ZNK8touchgfx6Bitmap7getDataEv>
 8024794:	4605      	mov	r5, r0
 8024796:	4640      	mov	r0, r8
 8024798:	f7fa f92c 	bl	801e9f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 802479c:	4682      	mov	sl, r0
 802479e:	4640      	mov	r0, r8
 80247a0:	f7fa f97c 	bl	801ea9c <_ZNK8touchgfx6Bitmap9getFormatEv>
 80247a4:	2810      	cmp	r0, #16
 80247a6:	d82c      	bhi.n	8024802 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80247a8:	e8df f010 	tbh	[pc, r0, lsl #1]
 80247ac:	00ba00ca 	.word	0x00ba00ca
 80247b0:	002b0011 	.word	0x002b0011
 80247b4:	002b002b 	.word	0x002b002b
 80247b8:	002b002b 	.word	0x002b002b
 80247bc:	002b002b 	.word	0x002b002b
 80247c0:	00c1002b 	.word	0x00c1002b
 80247c4:	002b002b 	.word	0x002b002b
 80247c8:	002b0180 	.word	0x002b0180
 80247cc:	0173      	.short	0x0173
 80247ce:	4bbc      	ldr	r3, [pc, #752]	@ (8024ac0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 80247d0:	6818      	ldr	r0, [r3, #0]
 80247d2:	6803      	ldr	r3, [r0, #0]
 80247d4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80247d6:	4798      	blx	r3
 80247d8:	2eff      	cmp	r6, #255	@ 0xff
 80247da:	d101      	bne.n	80247e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 80247dc:	0683      	lsls	r3, r0, #26
 80247de:	d506      	bpl.n	80247ee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 80247e0:	4633      	mov	r3, r6
 80247e2:	4622      	mov	r2, r4
 80247e4:	a902      	add	r1, sp, #8
 80247e6:	4628      	mov	r0, r5
 80247e8:	f7ff f8fc 	bl	80239e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80247ec:	e009      	b.n	8024802 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80247ee:	4640      	mov	r0, r8
 80247f0:	f7fa f898 	bl	801e924 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80247f4:	b940      	cbnz	r0, 8024808 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 80247f6:	4623      	mov	r3, r4
 80247f8:	aa02      	add	r2, sp, #8
 80247fa:	4629      	mov	r1, r5
 80247fc:	4638      	mov	r0, r7
 80247fe:	f7ff f9d7 	bl	8023bb0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8024802:	b009      	add	sp, #36	@ 0x24
 8024804:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024808:	f10d 0918 	add.w	r9, sp, #24
 802480c:	4641      	mov	r1, r8
 802480e:	4648      	mov	r0, r9
 8024810:	f7fa f836 	bl	801e880 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8024814:	e899 0003 	ldmia.w	r9, {r0, r1}
 8024818:	f10d 0810 	add.w	r8, sp, #16
 802481c:	e888 0003 	stmia.w	r8, {r0, r1}
 8024820:	4640      	mov	r0, r8
 8024822:	4621      	mov	r1, r4
 8024824:	f7ee fa06 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 8024828:	4640      	mov	r0, r8
 802482a:	f7ee fa46 	bl	8012cba <_ZNK8touchgfx4Rect7isEmptyEv>
 802482e:	2800      	cmp	r0, #0
 8024830:	d1d6      	bne.n	80247e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8024832:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8024836:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 802483a:	4293      	cmp	r3, r2
 802483c:	dd12      	ble.n	8024864 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 802483e:	1a9b      	subs	r3, r3, r2
 8024840:	f9b4 0000 	ldrsh.w	r0, [r4]
 8024844:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8024848:	f8ad 0018 	strh.w	r0, [sp, #24]
 802484c:	f8ad 201a 	strh.w	r2, [sp, #26]
 8024850:	f8ad 101c 	strh.w	r1, [sp, #28]
 8024854:	f8ad 301e 	strh.w	r3, [sp, #30]
 8024858:	464a      	mov	r2, r9
 802485a:	4633      	mov	r3, r6
 802485c:	a902      	add	r1, sp, #8
 802485e:	4628      	mov	r0, r5
 8024860:	f7ff f8c0 	bl	80239e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8024864:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8024868:	f9b4 2000 	ldrsh.w	r2, [r4]
 802486c:	4293      	cmp	r3, r2
 802486e:	dd12      	ble.n	8024896 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 8024870:	1a9b      	subs	r3, r3, r2
 8024872:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8024876:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 802487a:	f8ad 2018 	strh.w	r2, [sp, #24]
 802487e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8024882:	f8ad 301c 	strh.w	r3, [sp, #28]
 8024886:	f8ad 101e 	strh.w	r1, [sp, #30]
 802488a:	23ff      	movs	r3, #255	@ 0xff
 802488c:	464a      	mov	r2, r9
 802488e:	a902      	add	r1, sp, #8
 8024890:	4628      	mov	r0, r5
 8024892:	f7ff f8a7 	bl	80239e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8024896:	4643      	mov	r3, r8
 8024898:	aa02      	add	r2, sp, #8
 802489a:	4629      	mov	r1, r5
 802489c:	4638      	mov	r0, r7
 802489e:	f7ff f987 	bl	8023bb0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80248a2:	88a2      	ldrh	r2, [r4, #4]
 80248a4:	8823      	ldrh	r3, [r4, #0]
 80248a6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80248aa:	4413      	add	r3, r2
 80248ac:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80248b0:	440a      	add	r2, r1
 80248b2:	b29b      	uxth	r3, r3
 80248b4:	b292      	uxth	r2, r2
 80248b6:	b211      	sxth	r1, r2
 80248b8:	b218      	sxth	r0, r3
 80248ba:	4288      	cmp	r0, r1
 80248bc:	dd12      	ble.n	80248e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 80248be:	1a9b      	subs	r3, r3, r2
 80248c0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80248c4:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 80248c8:	f8ad 1018 	strh.w	r1, [sp, #24]
 80248cc:	f8ad 301c 	strh.w	r3, [sp, #28]
 80248d0:	f8ad 001e 	strh.w	r0, [sp, #30]
 80248d4:	23ff      	movs	r3, #255	@ 0xff
 80248d6:	464a      	mov	r2, r9
 80248d8:	a902      	add	r1, sp, #8
 80248da:	4628      	mov	r0, r5
 80248dc:	f8ad 601a 	strh.w	r6, [sp, #26]
 80248e0:	f7ff f880 	bl	80239e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80248e4:	88e2      	ldrh	r2, [r4, #6]
 80248e6:	8863      	ldrh	r3, [r4, #2]
 80248e8:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80248ec:	4413      	add	r3, r2
 80248ee:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80248f2:	440a      	add	r2, r1
 80248f4:	b29b      	uxth	r3, r3
 80248f6:	b292      	uxth	r2, r2
 80248f8:	b211      	sxth	r1, r2
 80248fa:	b218      	sxth	r0, r3
 80248fc:	4288      	cmp	r0, r1
 80248fe:	dd80      	ble.n	8024802 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8024900:	1a9b      	subs	r3, r3, r2
 8024902:	f9b4 6000 	ldrsh.w	r6, [r4]
 8024906:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 802490a:	f8ad 301e 	strh.w	r3, [sp, #30]
 802490e:	f8ad 6018 	strh.w	r6, [sp, #24]
 8024912:	f8ad 101a 	strh.w	r1, [sp, #26]
 8024916:	f8ad 001c 	strh.w	r0, [sp, #28]
 802491a:	23ff      	movs	r3, #255	@ 0xff
 802491c:	464a      	mov	r2, r9
 802491e:	e761      	b.n	80247e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8024920:	4633      	mov	r3, r6
 8024922:	4622      	mov	r2, r4
 8024924:	a902      	add	r1, sp, #8
 8024926:	4628      	mov	r0, r5
 8024928:	f7ff f9b2 	bl	8023c90 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 802492c:	e769      	b.n	8024802 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 802492e:	e9cd 4600 	strd	r4, r6, [sp]
 8024932:	ab02      	add	r3, sp, #8
 8024934:	4652      	mov	r2, sl
 8024936:	4629      	mov	r1, r5
 8024938:	4638      	mov	r0, r7
 802493a:	f7ff fd89 	bl	8024450 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 802493e:	e760      	b.n	8024802 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8024940:	4640      	mov	r0, r8
 8024942:	f7f9 ffef 	bl	801e924 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8024946:	b948      	cbnz	r0, 802495c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 8024948:	683b      	ldr	r3, [r7, #0]
 802494a:	e9cd 6000 	strd	r6, r0, [sp]
 802494e:	aa02      	add	r2, sp, #8
 8024950:	68de      	ldr	r6, [r3, #12]
 8024952:	4629      	mov	r1, r5
 8024954:	4623      	mov	r3, r4
 8024956:	4638      	mov	r0, r7
 8024958:	47b0      	blx	r6
 802495a:	e752      	b.n	8024802 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 802495c:	f10d 0918 	add.w	r9, sp, #24
 8024960:	4641      	mov	r1, r8
 8024962:	4648      	mov	r0, r9
 8024964:	f7f9 ff8c 	bl	801e880 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8024968:	e899 0003 	ldmia.w	r9, {r0, r1}
 802496c:	f10d 0810 	add.w	r8, sp, #16
 8024970:	e888 0003 	stmia.w	r8, {r0, r1}
 8024974:	4640      	mov	r0, r8
 8024976:	4621      	mov	r1, r4
 8024978:	f7ee f95c 	bl	8012c34 <_ZN8touchgfx4RectaNERKS0_>
 802497c:	4640      	mov	r0, r8
 802497e:	f7ee f99c 	bl	8012cba <_ZNK8touchgfx4Rect7isEmptyEv>
 8024982:	b138      	cbz	r0, 8024994 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 8024984:	9600      	str	r6, [sp, #0]
 8024986:	4623      	mov	r3, r4
 8024988:	aa02      	add	r2, sp, #8
 802498a:	4651      	mov	r1, sl
 802498c:	4628      	mov	r0, r5
 802498e:	f7ff fdbd 	bl	802450c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8024992:	e736      	b.n	8024802 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8024994:	683b      	ldr	r3, [r7, #0]
 8024996:	e9cd 6000 	strd	r6, r0, [sp]
 802499a:	aa02      	add	r2, sp, #8
 802499c:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 80249a0:	4629      	mov	r1, r5
 80249a2:	4643      	mov	r3, r8
 80249a4:	4638      	mov	r0, r7
 80249a6:	47d8      	blx	fp
 80249a8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80249ac:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80249b0:	4293      	cmp	r3, r2
 80249b2:	dd13      	ble.n	80249dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 80249b4:	f9b4 0000 	ldrsh.w	r0, [r4]
 80249b8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80249bc:	f8ad 0018 	strh.w	r0, [sp, #24]
 80249c0:	1a9b      	subs	r3, r3, r2
 80249c2:	f8ad 201a 	strh.w	r2, [sp, #26]
 80249c6:	f8ad 101c 	strh.w	r1, [sp, #28]
 80249ca:	f8ad 301e 	strh.w	r3, [sp, #30]
 80249ce:	9600      	str	r6, [sp, #0]
 80249d0:	464b      	mov	r3, r9
 80249d2:	aa02      	add	r2, sp, #8
 80249d4:	4651      	mov	r1, sl
 80249d6:	4628      	mov	r0, r5
 80249d8:	f7ff fd98 	bl	802450c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80249dc:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80249e0:	f9b4 2000 	ldrsh.w	r2, [r4]
 80249e4:	4293      	cmp	r3, r2
 80249e6:	dd13      	ble.n	8024a10 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 80249e8:	1a9b      	subs	r3, r3, r2
 80249ea:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80249ee:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80249f2:	f8ad 2018 	strh.w	r2, [sp, #24]
 80249f6:	f8ad 001a 	strh.w	r0, [sp, #26]
 80249fa:	f8ad 301c 	strh.w	r3, [sp, #28]
 80249fe:	f8ad 101e 	strh.w	r1, [sp, #30]
 8024a02:	9600      	str	r6, [sp, #0]
 8024a04:	464b      	mov	r3, r9
 8024a06:	aa02      	add	r2, sp, #8
 8024a08:	4651      	mov	r1, sl
 8024a0a:	4628      	mov	r0, r5
 8024a0c:	f7ff fd7e 	bl	802450c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8024a10:	88a2      	ldrh	r2, [r4, #4]
 8024a12:	8823      	ldrh	r3, [r4, #0]
 8024a14:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8024a18:	4413      	add	r3, r2
 8024a1a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8024a1e:	440a      	add	r2, r1
 8024a20:	b29b      	uxth	r3, r3
 8024a22:	b292      	uxth	r2, r2
 8024a24:	b211      	sxth	r1, r2
 8024a26:	b218      	sxth	r0, r3
 8024a28:	4288      	cmp	r0, r1
 8024a2a:	dd13      	ble.n	8024a54 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 8024a2c:	1a9b      	subs	r3, r3, r2
 8024a2e:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8024a32:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8024a36:	f8ad 1018 	strh.w	r1, [sp, #24]
 8024a3a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8024a3e:	f8ad 001e 	strh.w	r0, [sp, #30]
 8024a42:	9600      	str	r6, [sp, #0]
 8024a44:	464b      	mov	r3, r9
 8024a46:	aa02      	add	r2, sp, #8
 8024a48:	4651      	mov	r1, sl
 8024a4a:	4628      	mov	r0, r5
 8024a4c:	f8ad 701a 	strh.w	r7, [sp, #26]
 8024a50:	f7ff fd5c 	bl	802450c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8024a54:	88e2      	ldrh	r2, [r4, #6]
 8024a56:	8863      	ldrh	r3, [r4, #2]
 8024a58:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8024a5c:	4413      	add	r3, r2
 8024a5e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8024a62:	440a      	add	r2, r1
 8024a64:	b29b      	uxth	r3, r3
 8024a66:	b292      	uxth	r2, r2
 8024a68:	b211      	sxth	r1, r2
 8024a6a:	b218      	sxth	r0, r3
 8024a6c:	4288      	cmp	r0, r1
 8024a6e:	f77f aec8 	ble.w	8024802 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8024a72:	f9b4 7000 	ldrsh.w	r7, [r4]
 8024a76:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8024a7a:	f8ad 7018 	strh.w	r7, [sp, #24]
 8024a7e:	1a9b      	subs	r3, r3, r2
 8024a80:	f8ad 301e 	strh.w	r3, [sp, #30]
 8024a84:	f8ad 101a 	strh.w	r1, [sp, #26]
 8024a88:	f8ad 001c 	strh.w	r0, [sp, #28]
 8024a8c:	9600      	str	r6, [sp, #0]
 8024a8e:	464b      	mov	r3, r9
 8024a90:	e77a      	b.n	8024988 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 8024a92:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 8024a96:	2800      	cmp	r0, #0
 8024a98:	f43f aeb3 	beq.w	8024802 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8024a9c:	6803      	ldr	r3, [r0, #0]
 8024a9e:	9600      	str	r6, [sp, #0]
 8024aa0:	68de      	ldr	r6, [r3, #12]
 8024aa2:	4623      	mov	r3, r4
 8024aa4:	aa02      	add	r2, sp, #8
 8024aa6:	4629      	mov	r1, r5
 8024aa8:	47b0      	blx	r6
 8024aaa:	e6aa      	b.n	8024802 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8024aac:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 8024ab0:	2800      	cmp	r0, #0
 8024ab2:	f43f aea6 	beq.w	8024802 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8024ab6:	6803      	ldr	r3, [r0, #0]
 8024ab8:	9600      	str	r6, [sp, #0]
 8024aba:	689e      	ldr	r6, [r3, #8]
 8024abc:	e7f1      	b.n	8024aa2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 8024abe:	bf00      	nop
 8024ac0:	2000e40c 	.word	0x2000e40c

08024ac4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8024ac4:	b180      	cbz	r0, 8024ae8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8024ac6:	2903      	cmp	r1, #3
 8024ac8:	d81c      	bhi.n	8024b04 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8024aca:	e8df f001 	tbb	[pc, r1]
 8024ace:	1d02      	.short	0x1d02
 8024ad0:	1f08      	.short	0x1f08
 8024ad2:	4b10      	ldr	r3, [pc, #64]	@ (8024b14 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8024ad4:	8818      	ldrh	r0, [r3, #0]
 8024ad6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8024ada:	4240      	negs	r0, r0
 8024adc:	4770      	bx	lr
 8024ade:	4b0d      	ldr	r3, [pc, #52]	@ (8024b14 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8024ae0:	8818      	ldrh	r0, [r3, #0]
 8024ae2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8024ae6:	4770      	bx	lr
 8024ae8:	2903      	cmp	r1, #3
 8024aea:	d80b      	bhi.n	8024b04 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8024aec:	a301      	add	r3, pc, #4	@ (adr r3, 8024af4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8024aee:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8024af2:	bf00      	nop
 8024af4:	08024b09 	.word	0x08024b09
 8024af8:	08024adf 	.word	0x08024adf
 8024afc:	08024b0d 	.word	0x08024b0d
 8024b00:	08024ad3 	.word	0x08024ad3
 8024b04:	2000      	movs	r0, #0
 8024b06:	4770      	bx	lr
 8024b08:	2001      	movs	r0, #1
 8024b0a:	4770      	bx	lr
 8024b0c:	f04f 30ff 	mov.w	r0, #4294967295
 8024b10:	4770      	bx	lr
 8024b12:	bf00      	nop
 8024b14:	2000e406 	.word	0x2000e406

08024b18 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8024b18:	b180      	cbz	r0, 8024b3c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8024b1a:	2903      	cmp	r1, #3
 8024b1c:	d81c      	bhi.n	8024b58 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8024b1e:	e8df f001 	tbb	[pc, r1]
 8024b22:	021d      	.short	0x021d
 8024b24:	071f      	.short	0x071f
 8024b26:	4b10      	ldr	r3, [pc, #64]	@ (8024b68 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8024b28:	8818      	ldrh	r0, [r3, #0]
 8024b2a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8024b2e:	4770      	bx	lr
 8024b30:	4b0d      	ldr	r3, [pc, #52]	@ (8024b68 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8024b32:	8818      	ldrh	r0, [r3, #0]
 8024b34:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8024b38:	4240      	negs	r0, r0
 8024b3a:	4770      	bx	lr
 8024b3c:	2903      	cmp	r1, #3
 8024b3e:	d80b      	bhi.n	8024b58 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8024b40:	a301      	add	r3, pc, #4	@ (adr r3, 8024b48 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8024b42:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8024b46:	bf00      	nop
 8024b48:	08024b27 	.word	0x08024b27
 8024b4c:	08024b61 	.word	0x08024b61
 8024b50:	08024b31 	.word	0x08024b31
 8024b54:	08024b5d 	.word	0x08024b5d
 8024b58:	2000      	movs	r0, #0
 8024b5a:	4770      	bx	lr
 8024b5c:	2001      	movs	r0, #1
 8024b5e:	4770      	bx	lr
 8024b60:	f04f 30ff 	mov.w	r0, #4294967295
 8024b64:	4770      	bx	lr
 8024b66:	bf00      	nop
 8024b68:	2000e406 	.word	0x2000e406

08024b6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8024b6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024b70:	b099      	sub	sp, #100	@ 0x64
 8024b72:	910d      	str	r1, [sp, #52]	@ 0x34
 8024b74:	a914      	add	r1, sp, #80	@ 0x50
 8024b76:	e881 000c 	stmia.w	r1, {r2, r3}
 8024b7a:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 8024b7e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8024b80:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 8024b84:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8024b88:	9310      	str	r3, [sp, #64]	@ 0x40
 8024b8a:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 8024b8e:	9308      	str	r3, [sp, #32]
 8024b90:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 8024b94:	9309      	str	r3, [sp, #36]	@ 0x24
 8024b96:	7b4b      	ldrb	r3, [r1, #13]
 8024b98:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 8024b9c:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 8024ba0:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 8024ba4:	9f28      	ldr	r7, [sp, #160]	@ 0xa0
 8024ba6:	f8dd 90a8 	ldr.w	r9, [sp, #168]	@ 0xa8
 8024baa:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 8024bae:	ea4f 1843 	mov.w	r8, r3, lsl #5
 8024bb2:	f408 7080 	and.w	r0, r8, #256	@ 0x100
 8024bb6:	f891 8006 	ldrb.w	r8, [r1, #6]
 8024bba:	ea58 0800 	orrs.w	r8, r8, r0
 8024bbe:	f000 81ce 	beq.w	8024f5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8024bc2:	011b      	lsls	r3, r3, #4
 8024bc4:	79c8      	ldrb	r0, [r1, #7]
 8024bc6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8024bca:	4303      	orrs	r3, r0
 8024bcc:	930c      	str	r3, [sp, #48]	@ 0x30
 8024bce:	f000 81c6 	beq.w	8024f5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8024bd2:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8024bd6:	b29b      	uxth	r3, r3
 8024bd8:	2d00      	cmp	r5, #0
 8024bda:	f000 812c 	beq.w	8024e36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ca>
 8024bde:	1aed      	subs	r5, r5, r3
 8024be0:	b2ad      	uxth	r5, r5
 8024be2:	0429      	lsls	r1, r5, #16
 8024be4:	d502      	bpl.n	8024bec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 8024be6:	1b64      	subs	r4, r4, r5
 8024be8:	b224      	sxth	r4, r4
 8024bea:	2500      	movs	r5, #0
 8024bec:	f9b2 0000 	ldrsh.w	r0, [r2]
 8024bf0:	8891      	ldrh	r1, [r2, #4]
 8024bf2:	4284      	cmp	r4, r0
 8024bf4:	b283      	uxth	r3, r0
 8024bf6:	bfb8      	it	lt
 8024bf8:	18ed      	addlt	r5, r5, r3
 8024bfa:	440b      	add	r3, r1
 8024bfc:	b21b      	sxth	r3, r3
 8024bfe:	930a      	str	r3, [sp, #40]	@ 0x28
 8024c00:	88d3      	ldrh	r3, [r2, #6]
 8024c02:	8852      	ldrh	r2, [r2, #2]
 8024c04:	4413      	add	r3, r2
 8024c06:	b21b      	sxth	r3, r3
 8024c08:	930f      	str	r3, [sp, #60]	@ 0x3c
 8024c0a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8024c0c:	930e      	str	r3, [sp, #56]	@ 0x38
 8024c0e:	bfb8      	it	lt
 8024c10:	1b2c      	sublt	r4, r5, r4
 8024c12:	4bb5      	ldr	r3, [pc, #724]	@ (8024ee8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 8024c14:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8024c16:	f893 b000 	ldrb.w	fp, [r3]
 8024c1a:	bfbc      	itt	lt
 8024c1c:	b2a5      	uxthlt	r5, r4
 8024c1e:	4604      	movlt	r4, r0
 8024c20:	4653      	mov	r3, sl
 8024c22:	4621      	mov	r1, r4
 8024c24:	a814      	add	r0, sp, #80	@ 0x50
 8024c26:	f7f5 fc14 	bl	801a452 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8024c2a:	4621      	mov	r1, r4
 8024c2c:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 8024c30:	4653      	mov	r3, sl
 8024c32:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8024c34:	a814      	add	r0, sp, #80	@ 0x50
 8024c36:	f7f5 fc29 	bl	801a48c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8024c3a:	a918      	add	r1, sp, #96	@ 0x60
 8024c3c:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8024c40:	a817      	add	r0, sp, #92	@ 0x5c
 8024c42:	f7f5 fd4f 	bl	801a6e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8024c46:	f1ba 0f00 	cmp.w	sl, #0
 8024c4a:	f040 80f7 	bne.w	8024e3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d0>
 8024c4e:	f1bb 0f01 	cmp.w	fp, #1
 8024c52:	f040 80fb 	bne.w	8024e4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e0>
 8024c56:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8024c58:	2b00      	cmp	r3, #0
 8024c5a:	f040 81a8 	bne.w	8024fae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x442>
 8024c5e:	fa1f f288 	uxth.w	r2, r8
 8024c62:	b905      	cbnz	r5, 8024c66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfa>
 8024c64:	b15e      	cbz	r6, 8024c7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 8024c66:	9808      	ldr	r0, [sp, #32]
 8024c68:	fb06 5302 	mla	r3, r6, r2, r5
 8024c6c:	4343      	muls	r3, r0
 8024c6e:	4631      	mov	r1, r6
 8024c70:	eb07 07d3 	add.w	r7, r7, r3, lsr #3
 8024c74:	f003 0607 	and.w	r6, r3, #7
 8024c78:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8024c7a:	1a5b      	subs	r3, r3, r1
 8024c7c:	930e      	str	r3, [sp, #56]	@ 0x38
 8024c7e:	f10b 31ff 	add.w	r1, fp, #4294967295
 8024c82:	424b      	negs	r3, r1
 8024c84:	414b      	adcs	r3, r1
 8024c86:	4618      	mov	r0, r3
 8024c88:	4651      	mov	r1, sl
 8024c8a:	930c      	str	r3, [sp, #48]	@ 0x30
 8024c8c:	f7ff ff1a 	bl	8024ac4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8024c90:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8024c92:	4683      	mov	fp, r0
 8024c94:	4618      	mov	r0, r3
 8024c96:	f7ff ff3f 	bl	8024b18 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8024c9a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8024c9c:	4603      	mov	r3, r0
 8024c9e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8024ca0:	eba1 0a00 	sub.w	sl, r1, r0
 8024ca4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8024ca6:	458a      	cmp	sl, r1
 8024ca8:	bfa8      	it	ge
 8024caa:	468a      	movge	sl, r1
 8024cac:	f1ba 0f00 	cmp.w	sl, #0
 8024cb0:	f340 8155 	ble.w	8024f5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8024cb4:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8024cb6:	1b64      	subs	r4, r4, r5
 8024cb8:	1b0c      	subs	r4, r1, r4
 8024cba:	4544      	cmp	r4, r8
 8024cbc:	bfd4      	ite	le
 8024cbe:	ebc5 0504 	rsble	r5, r5, r4
 8024cc2:	ebc5 0508 	rsbgt	r5, r5, r8
 8024cc6:	2d00      	cmp	r5, #0
 8024cc8:	f340 8149 	ble.w	8024f5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8024ccc:	9908      	ldr	r1, [sp, #32]
 8024cce:	1b52      	subs	r2, r2, r5
 8024cd0:	434a      	muls	r2, r1
 8024cd2:	920e      	str	r2, [sp, #56]	@ 0x38
 8024cd4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8024cd6:	2a00      	cmp	r2, #0
 8024cd8:	f040 8175 	bne.w	8024fc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45a>
 8024cdc:	4a83      	ldr	r2, [pc, #524]	@ (8024eec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 8024cde:	930a      	str	r3, [sp, #40]	@ 0x28
 8024ce0:	6810      	ldr	r0, [r2, #0]
 8024ce2:	6802      	ldr	r2, [r0, #0]
 8024ce4:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8024ce6:	4790      	blx	r2
 8024ce8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8024cea:	9908      	ldr	r1, [sp, #32]
 8024cec:	2201      	movs	r2, #1
 8024cee:	408a      	lsls	r2, r1
 8024cf0:	3a01      	subs	r2, #1
 8024cf2:	497f      	ldr	r1, [pc, #508]	@ (8024ef0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
 8024cf4:	b2d2      	uxtb	r2, r2
 8024cf6:	880c      	ldrh	r4, [r1, #0]
 8024cf8:	920c      	str	r2, [sp, #48]	@ 0x30
 8024cfa:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	@ 0x5c
 8024cfe:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
 8024d02:	fb04 1202 	mla	r2, r4, r2, r1
 8024d06:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8024d0a:	ea4f 2419 	mov.w	r4, r9, lsr #8
 8024d0e:	920a      	str	r2, [sp, #40]	@ 0x28
 8024d10:	f3c9 4207 	ubfx	r2, r9, #16, #8
 8024d14:	9212      	str	r2, [sp, #72]	@ 0x48
 8024d16:	b2e2      	uxtb	r2, r4
 8024d18:	9211      	str	r2, [sp, #68]	@ 0x44
 8024d1a:	fa5f f289 	uxtb.w	r2, r9
 8024d1e:	9210      	str	r2, [sp, #64]	@ 0x40
 8024d20:	4a74      	ldr	r2, [pc, #464]	@ (8024ef4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
 8024d22:	ea4f 1159 	mov.w	r1, r9, lsr #5
 8024d26:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8024d2a:	4022      	ands	r2, r4
 8024d2c:	430a      	orrs	r2, r1
 8024d2e:	f3c9 09c4 	ubfx	r9, r9, #3, #5
 8024d32:	ea42 0209 	orr.w	r2, r2, r9
 8024d36:	ea4f 014b 	mov.w	r1, fp, lsl #1
 8024d3a:	b292      	uxth	r2, r2
 8024d3c:	fb05 3b1b 	mls	fp, r5, fp, r3
 8024d40:	920f      	str	r2, [sp, #60]	@ 0x3c
 8024d42:	460b      	mov	r3, r1
 8024d44:	783a      	ldrb	r2, [r7, #0]
 8024d46:	910b      	str	r1, [sp, #44]	@ 0x2c
 8024d48:	436b      	muls	r3, r5
 8024d4a:	4132      	asrs	r2, r6
 8024d4c:	eb03 034b 	add.w	r3, r3, fp, lsl #1
 8024d50:	b2d2      	uxtb	r2, r2
 8024d52:	9313      	str	r3, [sp, #76]	@ 0x4c
 8024d54:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8024d58:	f0c0 8149 	bcc.w	8024fee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x482>
 8024d5c:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8024d60:	46a9      	mov	r9, r5
 8024d62:	f119 39ff 	adds.w	r9, r9, #4294967295
 8024d66:	f0c0 8132 	bcc.w	8024fce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x462>
 8024d6a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8024d6c:	4013      	ands	r3, r2
 8024d6e:	d054      	beq.n	8024e1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ae>
 8024d70:	20ff      	movs	r0, #255	@ 0xff
 8024d72:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8024d74:	fb90 f1f1 	sdiv	r1, r0, r1
 8024d78:	434b      	muls	r3, r1
 8024d7a:	2bfe      	cmp	r3, #254	@ 0xfe
 8024d7c:	dd03      	ble.n	8024d86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x21a>
 8024d7e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8024d80:	4281      	cmp	r1, r0
 8024d82:	f000 8122 	beq.w	8024fca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45e>
 8024d86:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8024d88:	f8b8 4000 	ldrh.w	r4, [r8]
 8024d8c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8024d8e:	fb11 f303 	smulbb	r3, r1, r3
 8024d92:	b29b      	uxth	r3, r3
 8024d94:	1c59      	adds	r1, r3, #1
 8024d96:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8024d9a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024d9e:	fa1f fe83 	uxth.w	lr, r3
 8024da2:	1221      	asrs	r1, r4, #8
 8024da4:	fb10 fb0e 	smulbb	fp, r0, lr
 8024da8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8024dac:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8024dae:	43db      	mvns	r3, r3
 8024db0:	b2db      	uxtb	r3, r3
 8024db2:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8024db6:	fb01 b103 	mla	r1, r1, r3, fp
 8024dba:	ea4f 0ce4 	mov.w	ip, r4, asr #3
 8024dbe:	fb10 fb0e 	smulbb	fp, r0, lr
 8024dc2:	00e4      	lsls	r4, r4, #3
 8024dc4:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8024dc6:	b2e4      	uxtb	r4, r4
 8024dc8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8024dcc:	fb10 fe0e 	smulbb	lr, r0, lr
 8024dd0:	fb04 e403 	mla	r4, r4, r3, lr
 8024dd4:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8024dd8:	b289      	uxth	r1, r1
 8024dda:	b2a4      	uxth	r4, r4
 8024ddc:	ea4c 1c9c 	orr.w	ip, ip, ip, lsr #6
 8024de0:	fb0c bc03 	mla	ip, ip, r3, fp
 8024de4:	1c4b      	adds	r3, r1, #1
 8024de6:	f104 0b01 	add.w	fp, r4, #1
 8024dea:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024dee:	eb0b 2b14 	add.w	fp, fp, r4, lsr #8
 8024df2:	fa1f fc8c 	uxth.w	ip, ip
 8024df6:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8024dfa:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8024dfe:	ea4b 0101 	orr.w	r1, fp, r1
 8024e02:	f10c 0b01 	add.w	fp, ip, #1
 8024e06:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
 8024e0a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8024e0e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8024e12:	ea41 010b 	orr.w	r1, r1, fp
 8024e16:	f8a8 1000 	strh.w	r1, [r8]
 8024e1a:	9b08      	ldr	r3, [sp, #32]
 8024e1c:	441e      	add	r6, r3
 8024e1e:	b2b6      	uxth	r6, r6
 8024e20:	2e07      	cmp	r6, #7
 8024e22:	bf98      	it	ls
 8024e24:	411a      	asrls	r2, r3
 8024e26:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8024e28:	bf89      	itett	hi
 8024e2a:	787a      	ldrbhi	r2, [r7, #1]
 8024e2c:	b2d2      	uxtbls	r2, r2
 8024e2e:	3701      	addhi	r7, #1
 8024e30:	2600      	movhi	r6, #0
 8024e32:	4498      	add	r8, r3
 8024e34:	e795      	b.n	8024d62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f6>
 8024e36:	441c      	add	r4, r3
 8024e38:	b224      	sxth	r4, r4
 8024e3a:	e6d7      	b.n	8024bec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 8024e3c:	f1ba 0f01 	cmp.w	sl, #1
 8024e40:	f47f af09 	bne.w	8024c56 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8024e44:	f1bb 0f01 	cmp.w	fp, #1
 8024e48:	f47f af05 	bne.w	8024c56 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8024e4c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8024e4e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8024e50:	1a99      	subs	r1, r3, r2
 8024e52:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8024e54:	1b9b      	subs	r3, r3, r6
 8024e56:	4299      	cmp	r1, r3
 8024e58:	bfa8      	it	ge
 8024e5a:	4619      	movge	r1, r3
 8024e5c:	2900      	cmp	r1, #0
 8024e5e:	9112      	str	r1, [sp, #72]	@ 0x48
 8024e60:	dd7d      	ble.n	8024f5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8024e62:	4a22      	ldr	r2, [pc, #136]	@ (8024eec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 8024e64:	9211      	str	r2, [sp, #68]	@ 0x44
 8024e66:	6810      	ldr	r0, [r2, #0]
 8024e68:	6803      	ldr	r3, [r0, #0]
 8024e6a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8024e6c:	4798      	blx	r3
 8024e6e:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 8024e72:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8024e74:	d006      	beq.n	8024e84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8024e76:	9b08      	ldr	r3, [sp, #32]
 8024e78:	2b04      	cmp	r3, #4
 8024e7a:	d133      	bne.n	8024ee4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>
 8024e7c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8024e7e:	3300      	adds	r3, #0
 8024e80:	bf18      	it	ne
 8024e82:	2301      	movne	r3, #1
 8024e84:	0582      	lsls	r2, r0, #22
 8024e86:	fa1f fc88 	uxth.w	ip, r8
 8024e8a:	f140 80b9 	bpl.w	8025000 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 8024e8e:	9808      	ldr	r0, [sp, #32]
 8024e90:	2808      	cmp	r0, #8
 8024e92:	f040 80b5 	bne.w	8025000 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 8024e96:	2b00      	cmp	r3, #0
 8024e98:	d064      	beq.n	8024f64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f8>
 8024e9a:	f10c 0c01 	add.w	ip, ip, #1
 8024e9e:	f02c 0301 	bic.w	r3, ip, #1
 8024ea2:	b29b      	uxth	r3, r3
 8024ea4:	bb45      	cbnz	r5, 8024ef8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 8024ea6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8024ea8:	eb08 0004 	add.w	r0, r8, r4
 8024eac:	4290      	cmp	r0, r2
 8024eae:	dc23      	bgt.n	8024ef8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 8024eb0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8024eb2:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 8024eb6:	6810      	ldr	r0, [r2, #0]
 8024eb8:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8024ebc:	6804      	ldr	r4, [r0, #0]
 8024ebe:	9506      	str	r5, [sp, #24]
 8024ec0:	f44f 7580 	mov.w	r5, #256	@ 0x100
 8024ec4:	9505      	str	r5, [sp, #20]
 8024ec6:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8024ec8:	9302      	str	r3, [sp, #8]
 8024eca:	b289      	uxth	r1, r1
 8024ecc:	e9cd 3100 	strd	r3, r1, [sp]
 8024ed0:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8024ed4:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8024ed8:	6da4      	ldr	r4, [r4, #88]	@ 0x58
 8024eda:	4673      	mov	r3, lr
 8024edc:	fb06 710c 	mla	r1, r6, ip, r7
 8024ee0:	47a0      	blx	r4
 8024ee2:	e03c      	b.n	8024f5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8024ee4:	2300      	movs	r3, #0
 8024ee6:	e7cd      	b.n	8024e84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8024ee8:	2000e404 	.word	0x2000e404
 8024eec:	2000e40c 	.word	0x2000e40c
 8024ef0:	2000e406 	.word	0x2000e406
 8024ef4:	00fff800 	.word	0x00fff800
 8024ef8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8024efa:	eba4 0e05 	sub.w	lr, r4, r5
 8024efe:	eba2 0e0e 	sub.w	lr, r2, lr
 8024f02:	45c6      	cmp	lr, r8
 8024f04:	bfd4      	ite	le
 8024f06:	ebc5 0e0e 	rsble	lr, r5, lr
 8024f0a:	ebc5 0e08 	rsbgt	lr, r5, r8
 8024f0e:	f1be 0f00 	cmp.w	lr, #0
 8024f12:	d024      	beq.n	8024f5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8024f14:	07e8      	lsls	r0, r5, #31
 8024f16:	f53f ae9e 	bmi.w	8024c56 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8024f1a:	f01e 0001 	ands.w	r0, lr, #1
 8024f1e:	f47f ae9a 	bne.w	8024c56 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8024f22:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8024f24:	f8bd 805e 	ldrh.w	r8, [sp, #94]	@ 0x5e
 8024f28:	6814      	ldr	r4, [r2, #0]
 8024f2a:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8024f2e:	086d      	lsrs	r5, r5, #1
 8024f30:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8024f34:	fb06 560c 	mla	r6, r6, ip, r5
 8024f38:	6825      	ldr	r5, [r4, #0]
 8024f3a:	9006      	str	r0, [sp, #24]
 8024f3c:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8024f40:	9005      	str	r0, [sp, #20]
 8024f42:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8024f44:	9302      	str	r3, [sp, #8]
 8024f46:	e9cd 9003 	strd	r9, r0, [sp, #12]
 8024f4a:	b289      	uxth	r1, r1
 8024f4c:	fa1f f38e 	uxth.w	r3, lr
 8024f50:	9101      	str	r1, [sp, #4]
 8024f52:	9300      	str	r3, [sp, #0]
 8024f54:	6dad      	ldr	r5, [r5, #88]	@ 0x58
 8024f56:	4643      	mov	r3, r8
 8024f58:	19b9      	adds	r1, r7, r6
 8024f5a:	4620      	mov	r0, r4
 8024f5c:	47a8      	blx	r5
 8024f5e:	b019      	add	sp, #100	@ 0x64
 8024f60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024f64:	4a28      	ldr	r2, [pc, #160]	@ (8025008 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 8024f66:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 8024f6a:	6810      	ldr	r0, [r2, #0]
 8024f6c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8024f70:	f8d0 a000 	ldr.w	sl, [r0]
 8024f74:	9306      	str	r3, [sp, #24]
 8024f76:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8024f7a:	9305      	str	r3, [sp, #20]
 8024f7c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024f7e:	f8cd c008 	str.w	ip, [sp, #8]
 8024f82:	e9cd 9303 	strd	r9, r3, [sp, #12]
 8024f86:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8024f88:	1b64      	subs	r4, r4, r5
 8024f8a:	1b1c      	subs	r4, r3, r4
 8024f8c:	fb06 5608 	mla	r6, r6, r8, r5
 8024f90:	4544      	cmp	r4, r8
 8024f92:	bfd4      	ite	le
 8024f94:	ebc5 0504 	rsble	r5, r5, r4
 8024f98:	ebc5 0508 	rsbgt	r5, r5, r8
 8024f9c:	b289      	uxth	r1, r1
 8024f9e:	b2ad      	uxth	r5, r5
 8024fa0:	9101      	str	r1, [sp, #4]
 8024fa2:	9500      	str	r5, [sp, #0]
 8024fa4:	f8da 4058 	ldr.w	r4, [sl, #88]	@ 0x58
 8024fa8:	4673      	mov	r3, lr
 8024faa:	19b9      	adds	r1, r7, r6
 8024fac:	e798      	b.n	8024ee0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>
 8024fae:	2208      	movs	r2, #8
 8024fb0:	9b08      	ldr	r3, [sp, #32]
 8024fb2:	fb92 f3f3 	sdiv	r3, r2, r3
 8024fb6:	1e5a      	subs	r2, r3, #1
 8024fb8:	4442      	add	r2, r8
 8024fba:	fb92 f2f3 	sdiv	r2, r2, r3
 8024fbe:	fb12 f203 	smulbb	r2, r2, r3
 8024fc2:	b292      	uxth	r2, r2
 8024fc4:	e64d      	b.n	8024c62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf6>
 8024fc6:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8024fc8:	e68f      	b.n	8024cea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x17e>
 8024fca:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8024fcc:	e723      	b.n	8024e16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2aa>
 8024fce:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8024fd0:	b143      	cbz	r3, 8024fe4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x478>
 8024fd2:	441e      	add	r6, r3
 8024fd4:	b2b6      	uxth	r6, r6
 8024fd6:	eb07 07d6 	add.w	r7, r7, r6, lsr #3
 8024fda:	f006 0607 	and.w	r6, r6, #7
 8024fde:	783a      	ldrb	r2, [r7, #0]
 8024fe0:	4132      	asrs	r2, r6
 8024fe2:	b2d2      	uxtb	r2, r2
 8024fe4:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8024fe6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8024fe8:	4419      	add	r1, r3
 8024fea:	910a      	str	r1, [sp, #40]	@ 0x28
 8024fec:	e6b2      	b.n	8024d54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e8>
 8024fee:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8024ff0:	2b00      	cmp	r3, #0
 8024ff2:	d1b4      	bne.n	8024f5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8024ff4:	4b04      	ldr	r3, [pc, #16]	@ (8025008 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 8024ff6:	6818      	ldr	r0, [r3, #0]
 8024ff8:	6803      	ldr	r3, [r0, #0]
 8024ffa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024ffc:	4798      	blx	r3
 8024ffe:	e7ae      	b.n	8024f5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8025000:	2b00      	cmp	r3, #0
 8025002:	f47f af4a 	bne.w	8024e9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x32e>
 8025006:	e626      	b.n	8024c56 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8025008:	2000e40c 	.word	0x2000e40c

0802500c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 802500c:	b538      	push	{r3, r4, r5, lr}
 802500e:	4c15      	ldr	r4, [pc, #84]	@ (8025064 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8025010:	7823      	ldrb	r3, [r4, #0]
 8025012:	f3bf 8f5b 	dmb	ish
 8025016:	07da      	lsls	r2, r3, #31
 8025018:	4605      	mov	r5, r0
 802501a:	d40b      	bmi.n	8025034 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 802501c:	4620      	mov	r0, r4
 802501e:	f008 fc48 	bl	802d8b2 <__cxa_guard_acquire>
 8025022:	b138      	cbz	r0, 8025034 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8025024:	4620      	mov	r0, r4
 8025026:	f008 fc50 	bl	802d8ca <__cxa_guard_release>
 802502a:	4a0f      	ldr	r2, [pc, #60]	@ (8025068 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 802502c:	490f      	ldr	r1, [pc, #60]	@ (802506c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 802502e:	4810      	ldr	r0, [pc, #64]	@ (8025070 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8025030:	f008 fc38 	bl	802d8a4 <__aeabi_atexit>
 8025034:	4c0f      	ldr	r4, [pc, #60]	@ (8025074 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8025036:	7823      	ldrb	r3, [r4, #0]
 8025038:	f3bf 8f5b 	dmb	ish
 802503c:	07db      	lsls	r3, r3, #31
 802503e:	d40b      	bmi.n	8025058 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8025040:	4620      	mov	r0, r4
 8025042:	f008 fc36 	bl	802d8b2 <__cxa_guard_acquire>
 8025046:	b138      	cbz	r0, 8025058 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8025048:	4620      	mov	r0, r4
 802504a:	f008 fc3e 	bl	802d8ca <__cxa_guard_release>
 802504e:	4a06      	ldr	r2, [pc, #24]	@ (8025068 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8025050:	4909      	ldr	r1, [pc, #36]	@ (8025078 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8025052:	480a      	ldr	r0, [pc, #40]	@ (802507c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8025054:	f008 fc26 	bl	802d8a4 <__aeabi_atexit>
 8025058:	4b05      	ldr	r3, [pc, #20]	@ (8025070 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 802505a:	616b      	str	r3, [r5, #20]
 802505c:	4b07      	ldr	r3, [pc, #28]	@ (802507c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 802505e:	61ab      	str	r3, [r5, #24]
 8025060:	bd38      	pop	{r3, r4, r5, pc}
 8025062:	bf00      	nop
 8025064:	2000e4f0 	.word	0x2000e4f0
 8025068:	20000000 	.word	0x20000000
 802506c:	08021115 	.word	0x08021115
 8025070:	20000094 	.word	0x20000094
 8025074:	2000e4f4 	.word	0x2000e4f4
 8025078:	08021113 	.word	0x08021113
 802507c:	20000098 	.word	0x20000098

08025080 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8025080:	b538      	push	{r3, r4, r5, lr}
 8025082:	4c15      	ldr	r4, [pc, #84]	@ (80250d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8025084:	7823      	ldrb	r3, [r4, #0]
 8025086:	f3bf 8f5b 	dmb	ish
 802508a:	07da      	lsls	r2, r3, #31
 802508c:	4605      	mov	r5, r0
 802508e:	d40b      	bmi.n	80250a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8025090:	4620      	mov	r0, r4
 8025092:	f008 fc0e 	bl	802d8b2 <__cxa_guard_acquire>
 8025096:	b138      	cbz	r0, 80250a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8025098:	4620      	mov	r0, r4
 802509a:	f008 fc16 	bl	802d8ca <__cxa_guard_release>
 802509e:	4a0f      	ldr	r2, [pc, #60]	@ (80250dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80250a0:	490f      	ldr	r1, [pc, #60]	@ (80250e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 80250a2:	4810      	ldr	r0, [pc, #64]	@ (80250e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80250a4:	f008 fbfe 	bl	802d8a4 <__aeabi_atexit>
 80250a8:	4c0f      	ldr	r4, [pc, #60]	@ (80250e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 80250aa:	7823      	ldrb	r3, [r4, #0]
 80250ac:	f3bf 8f5b 	dmb	ish
 80250b0:	07db      	lsls	r3, r3, #31
 80250b2:	d40b      	bmi.n	80250cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80250b4:	4620      	mov	r0, r4
 80250b6:	f008 fbfc 	bl	802d8b2 <__cxa_guard_acquire>
 80250ba:	b138      	cbz	r0, 80250cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80250bc:	4620      	mov	r0, r4
 80250be:	f008 fc04 	bl	802d8ca <__cxa_guard_release>
 80250c2:	4a06      	ldr	r2, [pc, #24]	@ (80250dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80250c4:	4909      	ldr	r1, [pc, #36]	@ (80250ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 80250c6:	480a      	ldr	r0, [pc, #40]	@ (80250f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80250c8:	f008 fbec 	bl	802d8a4 <__aeabi_atexit>
 80250cc:	4b05      	ldr	r3, [pc, #20]	@ (80250e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80250ce:	60eb      	str	r3, [r5, #12]
 80250d0:	4b07      	ldr	r3, [pc, #28]	@ (80250f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80250d2:	612b      	str	r3, [r5, #16]
 80250d4:	bd38      	pop	{r3, r4, r5, pc}
 80250d6:	bf00      	nop
 80250d8:	2000e4c8 	.word	0x2000e4c8
 80250dc:	20000000 	.word	0x20000000
 80250e0:	08021119 	.word	0x08021119
 80250e4:	2000006c 	.word	0x2000006c
 80250e8:	2000e4cc 	.word	0x2000e4cc
 80250ec:	08021117 	.word	0x08021117
 80250f0:	20000070 	.word	0x20000070

080250f4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 80250f4:	b510      	push	{r4, lr}
 80250f6:	4604      	mov	r4, r0
 80250f8:	f7ff ff88 	bl	802500c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 80250fc:	4620      	mov	r0, r4
 80250fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025102:	f7ff bfbd 	b.w	8025080 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08025108 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8025108:	b538      	push	{r3, r4, r5, lr}
 802510a:	4c15      	ldr	r4, [pc, #84]	@ (8025160 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 802510c:	7823      	ldrb	r3, [r4, #0]
 802510e:	f3bf 8f5b 	dmb	ish
 8025112:	07da      	lsls	r2, r3, #31
 8025114:	4605      	mov	r5, r0
 8025116:	d40b      	bmi.n	8025130 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8025118:	4620      	mov	r0, r4
 802511a:	f008 fbca 	bl	802d8b2 <__cxa_guard_acquire>
 802511e:	b138      	cbz	r0, 8025130 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8025120:	4620      	mov	r0, r4
 8025122:	f008 fbd2 	bl	802d8ca <__cxa_guard_release>
 8025126:	4a0f      	ldr	r2, [pc, #60]	@ (8025164 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8025128:	490f      	ldr	r1, [pc, #60]	@ (8025168 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 802512a:	4810      	ldr	r0, [pc, #64]	@ (802516c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 802512c:	f008 fbba 	bl	802d8a4 <__aeabi_atexit>
 8025130:	4c0f      	ldr	r4, [pc, #60]	@ (8025170 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8025132:	7823      	ldrb	r3, [r4, #0]
 8025134:	f3bf 8f5b 	dmb	ish
 8025138:	07db      	lsls	r3, r3, #31
 802513a:	d40b      	bmi.n	8025154 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 802513c:	4620      	mov	r0, r4
 802513e:	f008 fbb8 	bl	802d8b2 <__cxa_guard_acquire>
 8025142:	b138      	cbz	r0, 8025154 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8025144:	4620      	mov	r0, r4
 8025146:	f008 fbc0 	bl	802d8ca <__cxa_guard_release>
 802514a:	4a06      	ldr	r2, [pc, #24]	@ (8025164 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 802514c:	4909      	ldr	r1, [pc, #36]	@ (8025174 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 802514e:	480a      	ldr	r0, [pc, #40]	@ (8025178 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8025150:	f008 fba8 	bl	802d8a4 <__aeabi_atexit>
 8025154:	4b05      	ldr	r3, [pc, #20]	@ (802516c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8025156:	626b      	str	r3, [r5, #36]	@ 0x24
 8025158:	4b07      	ldr	r3, [pc, #28]	@ (8025178 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 802515a:	62ab      	str	r3, [r5, #40]	@ 0x28
 802515c:	bd38      	pop	{r3, r4, r5, pc}
 802515e:	bf00      	nop
 8025160:	2000e4f8 	.word	0x2000e4f8
 8025164:	20000000 	.word	0x20000000
 8025168:	0802110d 	.word	0x0802110d
 802516c:	2000009c 	.word	0x2000009c
 8025170:	2000e4fc 	.word	0x2000e4fc
 8025174:	0802110b 	.word	0x0802110b
 8025178:	200000a0 	.word	0x200000a0

0802517c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 802517c:	b538      	push	{r3, r4, r5, lr}
 802517e:	4c15      	ldr	r4, [pc, #84]	@ (80251d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8025180:	7823      	ldrb	r3, [r4, #0]
 8025182:	f3bf 8f5b 	dmb	ish
 8025186:	07da      	lsls	r2, r3, #31
 8025188:	4605      	mov	r5, r0
 802518a:	d40b      	bmi.n	80251a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 802518c:	4620      	mov	r0, r4
 802518e:	f008 fb90 	bl	802d8b2 <__cxa_guard_acquire>
 8025192:	b138      	cbz	r0, 80251a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8025194:	4620      	mov	r0, r4
 8025196:	f008 fb98 	bl	802d8ca <__cxa_guard_release>
 802519a:	4a0f      	ldr	r2, [pc, #60]	@ (80251d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 802519c:	490f      	ldr	r1, [pc, #60]	@ (80251dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 802519e:	4810      	ldr	r0, [pc, #64]	@ (80251e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80251a0:	f008 fb80 	bl	802d8a4 <__aeabi_atexit>
 80251a4:	4c0f      	ldr	r4, [pc, #60]	@ (80251e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 80251a6:	7823      	ldrb	r3, [r4, #0]
 80251a8:	f3bf 8f5b 	dmb	ish
 80251ac:	07db      	lsls	r3, r3, #31
 80251ae:	d40b      	bmi.n	80251c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80251b0:	4620      	mov	r0, r4
 80251b2:	f008 fb7e 	bl	802d8b2 <__cxa_guard_acquire>
 80251b6:	b138      	cbz	r0, 80251c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80251b8:	4620      	mov	r0, r4
 80251ba:	f008 fb86 	bl	802d8ca <__cxa_guard_release>
 80251be:	4a06      	ldr	r2, [pc, #24]	@ (80251d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80251c0:	4909      	ldr	r1, [pc, #36]	@ (80251e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 80251c2:	480a      	ldr	r0, [pc, #40]	@ (80251ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80251c4:	f008 fb6e 	bl	802d8a4 <__aeabi_atexit>
 80251c8:	4b05      	ldr	r3, [pc, #20]	@ (80251e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80251ca:	61eb      	str	r3, [r5, #28]
 80251cc:	4b07      	ldr	r3, [pc, #28]	@ (80251ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80251ce:	622b      	str	r3, [r5, #32]
 80251d0:	bd38      	pop	{r3, r4, r5, pc}
 80251d2:	bf00      	nop
 80251d4:	2000e4d0 	.word	0x2000e4d0
 80251d8:	20000000 	.word	0x20000000
 80251dc:	08021111 	.word	0x08021111
 80251e0:	20000074 	.word	0x20000074
 80251e4:	2000e4d4 	.word	0x2000e4d4
 80251e8:	0802110f 	.word	0x0802110f
 80251ec:	20000078 	.word	0x20000078

080251f0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 80251f0:	b510      	push	{r4, lr}
 80251f2:	4604      	mov	r4, r0
 80251f4:	f7ff ff88 	bl	8025108 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 80251f8:	4620      	mov	r0, r4
 80251fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80251fe:	f7ff bfbd 	b.w	802517c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08025204 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8025204:	b538      	push	{r3, r4, r5, lr}
 8025206:	4c15      	ldr	r4, [pc, #84]	@ (802525c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8025208:	7823      	ldrb	r3, [r4, #0]
 802520a:	f3bf 8f5b 	dmb	ish
 802520e:	07da      	lsls	r2, r3, #31
 8025210:	4605      	mov	r5, r0
 8025212:	d40b      	bmi.n	802522c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8025214:	4620      	mov	r0, r4
 8025216:	f008 fb4c 	bl	802d8b2 <__cxa_guard_acquire>
 802521a:	b138      	cbz	r0, 802522c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 802521c:	4620      	mov	r0, r4
 802521e:	f008 fb54 	bl	802d8ca <__cxa_guard_release>
 8025222:	4a0f      	ldr	r2, [pc, #60]	@ (8025260 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8025224:	490f      	ldr	r1, [pc, #60]	@ (8025264 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8025226:	4810      	ldr	r0, [pc, #64]	@ (8025268 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8025228:	f008 fb3c 	bl	802d8a4 <__aeabi_atexit>
 802522c:	4c0f      	ldr	r4, [pc, #60]	@ (802526c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 802522e:	7823      	ldrb	r3, [r4, #0]
 8025230:	f3bf 8f5b 	dmb	ish
 8025234:	07db      	lsls	r3, r3, #31
 8025236:	d40b      	bmi.n	8025250 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8025238:	4620      	mov	r0, r4
 802523a:	f008 fb3a 	bl	802d8b2 <__cxa_guard_acquire>
 802523e:	b138      	cbz	r0, 8025250 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8025240:	4620      	mov	r0, r4
 8025242:	f008 fb42 	bl	802d8ca <__cxa_guard_release>
 8025246:	4a06      	ldr	r2, [pc, #24]	@ (8025260 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8025248:	4909      	ldr	r1, [pc, #36]	@ (8025270 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 802524a:	480a      	ldr	r0, [pc, #40]	@ (8025274 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 802524c:	f008 fb2a 	bl	802d8a4 <__aeabi_atexit>
 8025250:	4b05      	ldr	r3, [pc, #20]	@ (8025268 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8025252:	636b      	str	r3, [r5, #52]	@ 0x34
 8025254:	4b07      	ldr	r3, [pc, #28]	@ (8025274 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8025256:	63ab      	str	r3, [r5, #56]	@ 0x38
 8025258:	bd38      	pop	{r3, r4, r5, pc}
 802525a:	bf00      	nop
 802525c:	2000e508 	.word	0x2000e508
 8025260:	20000000 	.word	0x20000000
 8025264:	08021105 	.word	0x08021105
 8025268:	200000ac 	.word	0x200000ac
 802526c:	2000e50c 	.word	0x2000e50c
 8025270:	08021103 	.word	0x08021103
 8025274:	200000b0 	.word	0x200000b0

08025278 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8025278:	b538      	push	{r3, r4, r5, lr}
 802527a:	4c15      	ldr	r4, [pc, #84]	@ (80252d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 802527c:	7823      	ldrb	r3, [r4, #0]
 802527e:	f3bf 8f5b 	dmb	ish
 8025282:	07da      	lsls	r2, r3, #31
 8025284:	4605      	mov	r5, r0
 8025286:	d40b      	bmi.n	80252a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8025288:	4620      	mov	r0, r4
 802528a:	f008 fb12 	bl	802d8b2 <__cxa_guard_acquire>
 802528e:	b138      	cbz	r0, 80252a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8025290:	4620      	mov	r0, r4
 8025292:	f008 fb1a 	bl	802d8ca <__cxa_guard_release>
 8025296:	4a0f      	ldr	r2, [pc, #60]	@ (80252d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8025298:	490f      	ldr	r1, [pc, #60]	@ (80252d8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 802529a:	4810      	ldr	r0, [pc, #64]	@ (80252dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 802529c:	f008 fb02 	bl	802d8a4 <__aeabi_atexit>
 80252a0:	4c0f      	ldr	r4, [pc, #60]	@ (80252e0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 80252a2:	7823      	ldrb	r3, [r4, #0]
 80252a4:	f3bf 8f5b 	dmb	ish
 80252a8:	07db      	lsls	r3, r3, #31
 80252aa:	d40b      	bmi.n	80252c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80252ac:	4620      	mov	r0, r4
 80252ae:	f008 fb00 	bl	802d8b2 <__cxa_guard_acquire>
 80252b2:	b138      	cbz	r0, 80252c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80252b4:	4620      	mov	r0, r4
 80252b6:	f008 fb08 	bl	802d8ca <__cxa_guard_release>
 80252ba:	4a06      	ldr	r2, [pc, #24]	@ (80252d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80252bc:	4909      	ldr	r1, [pc, #36]	@ (80252e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 80252be:	480a      	ldr	r0, [pc, #40]	@ (80252e8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80252c0:	f008 faf0 	bl	802d8a4 <__aeabi_atexit>
 80252c4:	4b05      	ldr	r3, [pc, #20]	@ (80252dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80252c6:	62eb      	str	r3, [r5, #44]	@ 0x2c
 80252c8:	4b07      	ldr	r3, [pc, #28]	@ (80252e8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80252ca:	632b      	str	r3, [r5, #48]	@ 0x30
 80252cc:	bd38      	pop	{r3, r4, r5, pc}
 80252ce:	bf00      	nop
 80252d0:	2000e4d8 	.word	0x2000e4d8
 80252d4:	20000000 	.word	0x20000000
 80252d8:	08021109 	.word	0x08021109
 80252dc:	2000007c 	.word	0x2000007c
 80252e0:	2000e4dc 	.word	0x2000e4dc
 80252e4:	08021107 	.word	0x08021107
 80252e8:	20000080 	.word	0x20000080

080252ec <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 80252ec:	b510      	push	{r4, lr}
 80252ee:	4604      	mov	r4, r0
 80252f0:	f7ff ff88 	bl	8025204 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 80252f4:	4620      	mov	r0, r4
 80252f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80252fa:	f7ff bfbd 	b.w	8025278 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08025300 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8025300:	b538      	push	{r3, r4, r5, lr}
 8025302:	4c15      	ldr	r4, [pc, #84]	@ (8025358 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8025304:	7823      	ldrb	r3, [r4, #0]
 8025306:	f3bf 8f5b 	dmb	ish
 802530a:	07da      	lsls	r2, r3, #31
 802530c:	4605      	mov	r5, r0
 802530e:	d40b      	bmi.n	8025328 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8025310:	4620      	mov	r0, r4
 8025312:	f008 face 	bl	802d8b2 <__cxa_guard_acquire>
 8025316:	b138      	cbz	r0, 8025328 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8025318:	4620      	mov	r0, r4
 802531a:	f008 fad6 	bl	802d8ca <__cxa_guard_release>
 802531e:	4a0f      	ldr	r2, [pc, #60]	@ (802535c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8025320:	490f      	ldr	r1, [pc, #60]	@ (8025360 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8025322:	4810      	ldr	r0, [pc, #64]	@ (8025364 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8025324:	f008 fabe 	bl	802d8a4 <__aeabi_atexit>
 8025328:	4c0f      	ldr	r4, [pc, #60]	@ (8025368 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 802532a:	7823      	ldrb	r3, [r4, #0]
 802532c:	f3bf 8f5b 	dmb	ish
 8025330:	07db      	lsls	r3, r3, #31
 8025332:	d40b      	bmi.n	802534c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8025334:	4620      	mov	r0, r4
 8025336:	f008 fabc 	bl	802d8b2 <__cxa_guard_acquire>
 802533a:	b138      	cbz	r0, 802534c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 802533c:	4620      	mov	r0, r4
 802533e:	f008 fac4 	bl	802d8ca <__cxa_guard_release>
 8025342:	4a06      	ldr	r2, [pc, #24]	@ (802535c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8025344:	4909      	ldr	r1, [pc, #36]	@ (802536c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8025346:	480a      	ldr	r0, [pc, #40]	@ (8025370 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8025348:	f008 faac 	bl	802d8a4 <__aeabi_atexit>
 802534c:	4b05      	ldr	r3, [pc, #20]	@ (8025364 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 802534e:	656b      	str	r3, [r5, #84]	@ 0x54
 8025350:	4b07      	ldr	r3, [pc, #28]	@ (8025370 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8025352:	65ab      	str	r3, [r5, #88]	@ 0x58
 8025354:	bd38      	pop	{r3, r4, r5, pc}
 8025356:	bf00      	nop
 8025358:	2000e510 	.word	0x2000e510
 802535c:	20000000 	.word	0x20000000
 8025360:	080210f5 	.word	0x080210f5
 8025364:	200000b4 	.word	0x200000b4
 8025368:	2000e514 	.word	0x2000e514
 802536c:	080210f3 	.word	0x080210f3
 8025370:	200000b8 	.word	0x200000b8

08025374 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8025374:	b538      	push	{r3, r4, r5, lr}
 8025376:	4c15      	ldr	r4, [pc, #84]	@ (80253cc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8025378:	7823      	ldrb	r3, [r4, #0]
 802537a:	f3bf 8f5b 	dmb	ish
 802537e:	07da      	lsls	r2, r3, #31
 8025380:	4605      	mov	r5, r0
 8025382:	d40b      	bmi.n	802539c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8025384:	4620      	mov	r0, r4
 8025386:	f008 fa94 	bl	802d8b2 <__cxa_guard_acquire>
 802538a:	b138      	cbz	r0, 802539c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 802538c:	4620      	mov	r0, r4
 802538e:	f008 fa9c 	bl	802d8ca <__cxa_guard_release>
 8025392:	4a0f      	ldr	r2, [pc, #60]	@ (80253d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8025394:	490f      	ldr	r1, [pc, #60]	@ (80253d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8025396:	4810      	ldr	r0, [pc, #64]	@ (80253d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8025398:	f008 fa84 	bl	802d8a4 <__aeabi_atexit>
 802539c:	4c0f      	ldr	r4, [pc, #60]	@ (80253dc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 802539e:	7823      	ldrb	r3, [r4, #0]
 80253a0:	f3bf 8f5b 	dmb	ish
 80253a4:	07db      	lsls	r3, r3, #31
 80253a6:	d40b      	bmi.n	80253c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80253a8:	4620      	mov	r0, r4
 80253aa:	f008 fa82 	bl	802d8b2 <__cxa_guard_acquire>
 80253ae:	b138      	cbz	r0, 80253c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80253b0:	4620      	mov	r0, r4
 80253b2:	f008 fa8a 	bl	802d8ca <__cxa_guard_release>
 80253b6:	4a06      	ldr	r2, [pc, #24]	@ (80253d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80253b8:	4909      	ldr	r1, [pc, #36]	@ (80253e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 80253ba:	480a      	ldr	r0, [pc, #40]	@ (80253e4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80253bc:	f008 fa72 	bl	802d8a4 <__aeabi_atexit>
 80253c0:	4b05      	ldr	r3, [pc, #20]	@ (80253d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80253c2:	64eb      	str	r3, [r5, #76]	@ 0x4c
 80253c4:	4b07      	ldr	r3, [pc, #28]	@ (80253e4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80253c6:	652b      	str	r3, [r5, #80]	@ 0x50
 80253c8:	bd38      	pop	{r3, r4, r5, pc}
 80253ca:	bf00      	nop
 80253cc:	2000e518 	.word	0x2000e518
 80253d0:	20000000 	.word	0x20000000
 80253d4:	080210f9 	.word	0x080210f9
 80253d8:	200000bc 	.word	0x200000bc
 80253dc:	2000e51c 	.word	0x2000e51c
 80253e0:	080210f7 	.word	0x080210f7
 80253e4:	200000c0 	.word	0x200000c0

080253e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 80253e8:	b538      	push	{r3, r4, r5, lr}
 80253ea:	4c15      	ldr	r4, [pc, #84]	@ (8025440 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 80253ec:	7823      	ldrb	r3, [r4, #0]
 80253ee:	f3bf 8f5b 	dmb	ish
 80253f2:	07da      	lsls	r2, r3, #31
 80253f4:	4605      	mov	r5, r0
 80253f6:	d40b      	bmi.n	8025410 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80253f8:	4620      	mov	r0, r4
 80253fa:	f008 fa5a 	bl	802d8b2 <__cxa_guard_acquire>
 80253fe:	b138      	cbz	r0, 8025410 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8025400:	4620      	mov	r0, r4
 8025402:	f008 fa62 	bl	802d8ca <__cxa_guard_release>
 8025406:	4a0f      	ldr	r2, [pc, #60]	@ (8025444 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8025408:	490f      	ldr	r1, [pc, #60]	@ (8025448 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 802540a:	4810      	ldr	r0, [pc, #64]	@ (802544c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 802540c:	f008 fa4a 	bl	802d8a4 <__aeabi_atexit>
 8025410:	4c0f      	ldr	r4, [pc, #60]	@ (8025450 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8025412:	7823      	ldrb	r3, [r4, #0]
 8025414:	f3bf 8f5b 	dmb	ish
 8025418:	07db      	lsls	r3, r3, #31
 802541a:	d40b      	bmi.n	8025434 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 802541c:	4620      	mov	r0, r4
 802541e:	f008 fa48 	bl	802d8b2 <__cxa_guard_acquire>
 8025422:	b138      	cbz	r0, 8025434 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8025424:	4620      	mov	r0, r4
 8025426:	f008 fa50 	bl	802d8ca <__cxa_guard_release>
 802542a:	4a06      	ldr	r2, [pc, #24]	@ (8025444 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 802542c:	4909      	ldr	r1, [pc, #36]	@ (8025454 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 802542e:	480a      	ldr	r0, [pc, #40]	@ (8025458 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8025430:	f008 fa38 	bl	802d8a4 <__aeabi_atexit>
 8025434:	4b05      	ldr	r3, [pc, #20]	@ (802544c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8025436:	646b      	str	r3, [r5, #68]	@ 0x44
 8025438:	4b07      	ldr	r3, [pc, #28]	@ (8025458 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 802543a:	64ab      	str	r3, [r5, #72]	@ 0x48
 802543c:	bd38      	pop	{r3, r4, r5, pc}
 802543e:	bf00      	nop
 8025440:	2000e4e0 	.word	0x2000e4e0
 8025444:	20000000 	.word	0x20000000
 8025448:	080210fd 	.word	0x080210fd
 802544c:	20000084 	.word	0x20000084
 8025450:	2000e4e4 	.word	0x2000e4e4
 8025454:	080210fb 	.word	0x080210fb
 8025458:	20000088 	.word	0x20000088

0802545c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 802545c:	b538      	push	{r3, r4, r5, lr}
 802545e:	4c15      	ldr	r4, [pc, #84]	@ (80254b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8025460:	7823      	ldrb	r3, [r4, #0]
 8025462:	f3bf 8f5b 	dmb	ish
 8025466:	07da      	lsls	r2, r3, #31
 8025468:	4605      	mov	r5, r0
 802546a:	d40b      	bmi.n	8025484 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 802546c:	4620      	mov	r0, r4
 802546e:	f008 fa20 	bl	802d8b2 <__cxa_guard_acquire>
 8025472:	b138      	cbz	r0, 8025484 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8025474:	4620      	mov	r0, r4
 8025476:	f008 fa28 	bl	802d8ca <__cxa_guard_release>
 802547a:	4a0f      	ldr	r2, [pc, #60]	@ (80254b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 802547c:	490f      	ldr	r1, [pc, #60]	@ (80254bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 802547e:	4810      	ldr	r0, [pc, #64]	@ (80254c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8025480:	f008 fa10 	bl	802d8a4 <__aeabi_atexit>
 8025484:	4c0f      	ldr	r4, [pc, #60]	@ (80254c4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8025486:	7823      	ldrb	r3, [r4, #0]
 8025488:	f3bf 8f5b 	dmb	ish
 802548c:	07db      	lsls	r3, r3, #31
 802548e:	d40b      	bmi.n	80254a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8025490:	4620      	mov	r0, r4
 8025492:	f008 fa0e 	bl	802d8b2 <__cxa_guard_acquire>
 8025496:	b138      	cbz	r0, 80254a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8025498:	4620      	mov	r0, r4
 802549a:	f008 fa16 	bl	802d8ca <__cxa_guard_release>
 802549e:	4a06      	ldr	r2, [pc, #24]	@ (80254b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80254a0:	4909      	ldr	r1, [pc, #36]	@ (80254c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80254a2:	480a      	ldr	r0, [pc, #40]	@ (80254cc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80254a4:	f008 f9fe 	bl	802d8a4 <__aeabi_atexit>
 80254a8:	4b05      	ldr	r3, [pc, #20]	@ (80254c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80254aa:	63eb      	str	r3, [r5, #60]	@ 0x3c
 80254ac:	4b07      	ldr	r3, [pc, #28]	@ (80254cc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80254ae:	642b      	str	r3, [r5, #64]	@ 0x40
 80254b0:	bd38      	pop	{r3, r4, r5, pc}
 80254b2:	bf00      	nop
 80254b4:	2000e500 	.word	0x2000e500
 80254b8:	20000000 	.word	0x20000000
 80254bc:	08021101 	.word	0x08021101
 80254c0:	200000a4 	.word	0x200000a4
 80254c4:	2000e504 	.word	0x2000e504
 80254c8:	080210ff 	.word	0x080210ff
 80254cc:	200000a8 	.word	0x200000a8

080254d0 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 80254d0:	b510      	push	{r4, lr}
 80254d2:	4604      	mov	r4, r0
 80254d4:	f7ff ff14 	bl	8025300 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 80254d8:	4620      	mov	r0, r4
 80254da:	f7ff ff85 	bl	80253e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80254de:	4620      	mov	r0, r4
 80254e0:	f7ff ff48 	bl	8025374 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80254e4:	4620      	mov	r0, r4
 80254e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80254ea:	f7ff bfb7 	b.w	802545c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080254f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80254f0:	b538      	push	{r3, r4, r5, lr}
 80254f2:	4c15      	ldr	r4, [pc, #84]	@ (8025548 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80254f4:	7823      	ldrb	r3, [r4, #0]
 80254f6:	f3bf 8f5b 	dmb	ish
 80254fa:	07da      	lsls	r2, r3, #31
 80254fc:	4605      	mov	r5, r0
 80254fe:	d40b      	bmi.n	8025518 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8025500:	4620      	mov	r0, r4
 8025502:	f008 f9d6 	bl	802d8b2 <__cxa_guard_acquire>
 8025506:	b138      	cbz	r0, 8025518 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8025508:	4620      	mov	r0, r4
 802550a:	f008 f9de 	bl	802d8ca <__cxa_guard_release>
 802550e:	4a0f      	ldr	r2, [pc, #60]	@ (802554c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8025510:	490f      	ldr	r1, [pc, #60]	@ (8025550 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8025512:	4810      	ldr	r0, [pc, #64]	@ (8025554 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8025514:	f008 f9c6 	bl	802d8a4 <__aeabi_atexit>
 8025518:	4c0f      	ldr	r4, [pc, #60]	@ (8025558 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 802551a:	7823      	ldrb	r3, [r4, #0]
 802551c:	f3bf 8f5b 	dmb	ish
 8025520:	07db      	lsls	r3, r3, #31
 8025522:	d40b      	bmi.n	802553c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8025524:	4620      	mov	r0, r4
 8025526:	f008 f9c4 	bl	802d8b2 <__cxa_guard_acquire>
 802552a:	b138      	cbz	r0, 802553c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 802552c:	4620      	mov	r0, r4
 802552e:	f008 f9cc 	bl	802d8ca <__cxa_guard_release>
 8025532:	4a06      	ldr	r2, [pc, #24]	@ (802554c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8025534:	4909      	ldr	r1, [pc, #36]	@ (802555c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8025536:	480a      	ldr	r0, [pc, #40]	@ (8025560 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8025538:	f008 f9b4 	bl	802d8a4 <__aeabi_atexit>
 802553c:	4b05      	ldr	r3, [pc, #20]	@ (8025554 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 802553e:	666b      	str	r3, [r5, #100]	@ 0x64
 8025540:	4b07      	ldr	r3, [pc, #28]	@ (8025560 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8025542:	66ab      	str	r3, [r5, #104]	@ 0x68
 8025544:	bd38      	pop	{r3, r4, r5, pc}
 8025546:	bf00      	nop
 8025548:	2000e4e8 	.word	0x2000e4e8
 802554c:	20000000 	.word	0x20000000
 8025550:	080210ed 	.word	0x080210ed
 8025554:	2000008c 	.word	0x2000008c
 8025558:	2000e4ec 	.word	0x2000e4ec
 802555c:	080210eb 	.word	0x080210eb
 8025560:	20000090 	.word	0x20000090

08025564 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8025564:	b538      	push	{r3, r4, r5, lr}
 8025566:	4c15      	ldr	r4, [pc, #84]	@ (80255bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8025568:	7823      	ldrb	r3, [r4, #0]
 802556a:	f3bf 8f5b 	dmb	ish
 802556e:	07da      	lsls	r2, r3, #31
 8025570:	4605      	mov	r5, r0
 8025572:	d40b      	bmi.n	802558c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8025574:	4620      	mov	r0, r4
 8025576:	f008 f99c 	bl	802d8b2 <__cxa_guard_acquire>
 802557a:	b138      	cbz	r0, 802558c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 802557c:	4620      	mov	r0, r4
 802557e:	f008 f9a4 	bl	802d8ca <__cxa_guard_release>
 8025582:	4a0f      	ldr	r2, [pc, #60]	@ (80255c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8025584:	490f      	ldr	r1, [pc, #60]	@ (80255c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8025586:	4810      	ldr	r0, [pc, #64]	@ (80255c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8025588:	f008 f98c 	bl	802d8a4 <__aeabi_atexit>
 802558c:	4c0f      	ldr	r4, [pc, #60]	@ (80255cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 802558e:	7823      	ldrb	r3, [r4, #0]
 8025590:	f3bf 8f5b 	dmb	ish
 8025594:	07db      	lsls	r3, r3, #31
 8025596:	d40b      	bmi.n	80255b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8025598:	4620      	mov	r0, r4
 802559a:	f008 f98a 	bl	802d8b2 <__cxa_guard_acquire>
 802559e:	b138      	cbz	r0, 80255b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80255a0:	4620      	mov	r0, r4
 80255a2:	f008 f992 	bl	802d8ca <__cxa_guard_release>
 80255a6:	4a06      	ldr	r2, [pc, #24]	@ (80255c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80255a8:	4909      	ldr	r1, [pc, #36]	@ (80255d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80255aa:	480a      	ldr	r0, [pc, #40]	@ (80255d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80255ac:	f008 f97a 	bl	802d8a4 <__aeabi_atexit>
 80255b0:	4b05      	ldr	r3, [pc, #20]	@ (80255c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80255b2:	65eb      	str	r3, [r5, #92]	@ 0x5c
 80255b4:	4b07      	ldr	r3, [pc, #28]	@ (80255d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80255b6:	662b      	str	r3, [r5, #96]	@ 0x60
 80255b8:	bd38      	pop	{r3, r4, r5, pc}
 80255ba:	bf00      	nop
 80255bc:	2000e4c0 	.word	0x2000e4c0
 80255c0:	20000000 	.word	0x20000000
 80255c4:	080210f1 	.word	0x080210f1
 80255c8:	20000064 	.word	0x20000064
 80255cc:	2000e4c4 	.word	0x2000e4c4
 80255d0:	080210ef 	.word	0x080210ef
 80255d4:	20000068 	.word	0x20000068

080255d8 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80255d8:	b510      	push	{r4, lr}
 80255da:	4604      	mov	r4, r0
 80255dc:	f7ff ff88 	bl	80254f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80255e0:	4620      	mov	r0, r4
 80255e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80255e6:	f7ff bfbd 	b.w	8025564 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080255ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80255ec:	b538      	push	{r3, r4, r5, lr}
 80255ee:	4c15      	ldr	r4, [pc, #84]	@ (8025644 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80255f0:	7823      	ldrb	r3, [r4, #0]
 80255f2:	f3bf 8f5b 	dmb	ish
 80255f6:	07da      	lsls	r2, r3, #31
 80255f8:	4605      	mov	r5, r0
 80255fa:	d40b      	bmi.n	8025614 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80255fc:	4620      	mov	r0, r4
 80255fe:	f008 f958 	bl	802d8b2 <__cxa_guard_acquire>
 8025602:	b138      	cbz	r0, 8025614 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8025604:	4620      	mov	r0, r4
 8025606:	f008 f960 	bl	802d8ca <__cxa_guard_release>
 802560a:	4a0f      	ldr	r2, [pc, #60]	@ (8025648 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 802560c:	490f      	ldr	r1, [pc, #60]	@ (802564c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 802560e:	4810      	ldr	r0, [pc, #64]	@ (8025650 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8025610:	f008 f948 	bl	802d8a4 <__aeabi_atexit>
 8025614:	4c0f      	ldr	r4, [pc, #60]	@ (8025654 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8025616:	7823      	ldrb	r3, [r4, #0]
 8025618:	f3bf 8f5b 	dmb	ish
 802561c:	07db      	lsls	r3, r3, #31
 802561e:	d40b      	bmi.n	8025638 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8025620:	4620      	mov	r0, r4
 8025622:	f008 f946 	bl	802d8b2 <__cxa_guard_acquire>
 8025626:	b138      	cbz	r0, 8025638 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8025628:	4620      	mov	r0, r4
 802562a:	f008 f94e 	bl	802d8ca <__cxa_guard_release>
 802562e:	4a06      	ldr	r2, [pc, #24]	@ (8025648 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8025630:	4909      	ldr	r1, [pc, #36]	@ (8025658 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8025632:	480a      	ldr	r0, [pc, #40]	@ (802565c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8025634:	f008 f936 	bl	802d8a4 <__aeabi_atexit>
 8025638:	4b05      	ldr	r3, [pc, #20]	@ (8025650 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 802563a:	676b      	str	r3, [r5, #116]	@ 0x74
 802563c:	4b07      	ldr	r3, [pc, #28]	@ (802565c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 802563e:	67ab      	str	r3, [r5, #120]	@ 0x78
 8025640:	bd38      	pop	{r3, r4, r5, pc}
 8025642:	bf00      	nop
 8025644:	2000e4b8 	.word	0x2000e4b8
 8025648:	20000000 	.word	0x20000000
 802564c:	080210e5 	.word	0x080210e5
 8025650:	2000005c 	.word	0x2000005c
 8025654:	2000e4bc 	.word	0x2000e4bc
 8025658:	080210e3 	.word	0x080210e3
 802565c:	20000060 	.word	0x20000060

08025660 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8025660:	b538      	push	{r3, r4, r5, lr}
 8025662:	4c15      	ldr	r4, [pc, #84]	@ (80256b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8025664:	7823      	ldrb	r3, [r4, #0]
 8025666:	f3bf 8f5b 	dmb	ish
 802566a:	07da      	lsls	r2, r3, #31
 802566c:	4605      	mov	r5, r0
 802566e:	d40b      	bmi.n	8025688 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8025670:	4620      	mov	r0, r4
 8025672:	f008 f91e 	bl	802d8b2 <__cxa_guard_acquire>
 8025676:	b138      	cbz	r0, 8025688 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8025678:	4620      	mov	r0, r4
 802567a:	f008 f926 	bl	802d8ca <__cxa_guard_release>
 802567e:	4a0f      	ldr	r2, [pc, #60]	@ (80256bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8025680:	490f      	ldr	r1, [pc, #60]	@ (80256c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8025682:	4810      	ldr	r0, [pc, #64]	@ (80256c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8025684:	f008 f90e 	bl	802d8a4 <__aeabi_atexit>
 8025688:	4c0f      	ldr	r4, [pc, #60]	@ (80256c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 802568a:	7823      	ldrb	r3, [r4, #0]
 802568c:	f3bf 8f5b 	dmb	ish
 8025690:	07db      	lsls	r3, r3, #31
 8025692:	d40b      	bmi.n	80256ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8025694:	4620      	mov	r0, r4
 8025696:	f008 f90c 	bl	802d8b2 <__cxa_guard_acquire>
 802569a:	b138      	cbz	r0, 80256ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 802569c:	4620      	mov	r0, r4
 802569e:	f008 f914 	bl	802d8ca <__cxa_guard_release>
 80256a2:	4a06      	ldr	r2, [pc, #24]	@ (80256bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80256a4:	4909      	ldr	r1, [pc, #36]	@ (80256cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80256a6:	480a      	ldr	r0, [pc, #40]	@ (80256d0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80256a8:	f008 f8fc 	bl	802d8a4 <__aeabi_atexit>
 80256ac:	4b05      	ldr	r3, [pc, #20]	@ (80256c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80256ae:	66eb      	str	r3, [r5, #108]	@ 0x6c
 80256b0:	4b07      	ldr	r3, [pc, #28]	@ (80256d0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80256b2:	672b      	str	r3, [r5, #112]	@ 0x70
 80256b4:	bd38      	pop	{r3, r4, r5, pc}
 80256b6:	bf00      	nop
 80256b8:	2000e4b0 	.word	0x2000e4b0
 80256bc:	20000000 	.word	0x20000000
 80256c0:	080210e9 	.word	0x080210e9
 80256c4:	20000054 	.word	0x20000054
 80256c8:	2000e4b4 	.word	0x2000e4b4
 80256cc:	080210e7 	.word	0x080210e7
 80256d0:	20000058 	.word	0x20000058

080256d4 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80256d4:	b510      	push	{r4, lr}
 80256d6:	4604      	mov	r4, r0
 80256d8:	f7ff ff88 	bl	80255ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80256dc:	4620      	mov	r0, r4
 80256de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80256e2:	f7ff bfbd 	b.w	8025660 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080256e6 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80256e6:	b510      	push	{r4, lr}
 80256e8:	4604      	mov	r4, r0
 80256ea:	f7ff fff3 	bl	80256d4 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80256ee:	4620      	mov	r0, r4
 80256f0:	f7ff ff72 	bl	80255d8 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80256f4:	4620      	mov	r0, r4
 80256f6:	f7ff fdf9 	bl	80252ec <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80256fa:	4620      	mov	r0, r4
 80256fc:	f7ff fcfa 	bl	80250f4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8025700:	4620      	mov	r0, r4
 8025702:	f7ff fd75 	bl	80251f0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8025706:	4620      	mov	r0, r4
 8025708:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802570c:	f7ff bee0 	b.w	80254d0 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08025710 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8025710:	b538      	push	{r3, r4, r5, lr}
 8025712:	4c0b      	ldr	r4, [pc, #44]	@ (8025740 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 8025714:	7823      	ldrb	r3, [r4, #0]
 8025716:	f3bf 8f5b 	dmb	ish
 802571a:	07db      	lsls	r3, r3, #31
 802571c:	4605      	mov	r5, r0
 802571e:	d40b      	bmi.n	8025738 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8025720:	4620      	mov	r0, r4
 8025722:	f008 f8c6 	bl	802d8b2 <__cxa_guard_acquire>
 8025726:	b138      	cbz	r0, 8025738 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8025728:	4620      	mov	r0, r4
 802572a:	f008 f8ce 	bl	802d8ca <__cxa_guard_release>
 802572e:	4a05      	ldr	r2, [pc, #20]	@ (8025744 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8025730:	4905      	ldr	r1, [pc, #20]	@ (8025748 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 8025732:	4806      	ldr	r0, [pc, #24]	@ (802574c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8025734:	f008 f8b6 	bl	802d8a4 <__aeabi_atexit>
 8025738:	4b04      	ldr	r3, [pc, #16]	@ (802574c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 802573a:	67eb      	str	r3, [r5, #124]	@ 0x7c
 802573c:	bd38      	pop	{r3, r4, r5, pc}
 802573e:	bf00      	nop
 8025740:	2000e4a4 	.word	0x2000e4a4
 8025744:	20000000 	.word	0x20000000
 8025748:	080210e1 	.word	0x080210e1
 802574c:	2000004c 	.word	0x2000004c

08025750 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8025750:	b538      	push	{r3, r4, r5, lr}
 8025752:	4c0b      	ldr	r4, [pc, #44]	@ (8025780 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 8025754:	7823      	ldrb	r3, [r4, #0]
 8025756:	f3bf 8f5b 	dmb	ish
 802575a:	07db      	lsls	r3, r3, #31
 802575c:	4605      	mov	r5, r0
 802575e:	d40b      	bmi.n	8025778 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8025760:	4620      	mov	r0, r4
 8025762:	f008 f8a6 	bl	802d8b2 <__cxa_guard_acquire>
 8025766:	b138      	cbz	r0, 8025778 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8025768:	4620      	mov	r0, r4
 802576a:	f008 f8ae 	bl	802d8ca <__cxa_guard_release>
 802576e:	4a05      	ldr	r2, [pc, #20]	@ (8025784 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8025770:	4905      	ldr	r1, [pc, #20]	@ (8025788 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 8025772:	4806      	ldr	r0, [pc, #24]	@ (802578c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8025774:	f008 f896 	bl	802d8a4 <__aeabi_atexit>
 8025778:	4b04      	ldr	r3, [pc, #16]	@ (802578c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 802577a:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 802577e:	bd38      	pop	{r3, r4, r5, pc}
 8025780:	2000e4a8 	.word	0x2000e4a8
 8025784:	20000000 	.word	0x20000000
 8025788:	080210df 	.word	0x080210df
 802578c:	20000050 	.word	0x20000050

08025790 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 8025790:	b570      	push	{r4, r5, r6, lr}
 8025792:	4d0d      	ldr	r5, [pc, #52]	@ (80257c8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 8025794:	4c0d      	ldr	r4, [pc, #52]	@ (80257cc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 8025796:	782b      	ldrb	r3, [r5, #0]
 8025798:	f3bf 8f5b 	dmb	ish
 802579c:	f013 0f01 	tst.w	r3, #1
 80257a0:	4606      	mov	r6, r0
 80257a2:	d10d      	bne.n	80257c0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80257a4:	4628      	mov	r0, r5
 80257a6:	f008 f884 	bl	802d8b2 <__cxa_guard_acquire>
 80257aa:	b148      	cbz	r0, 80257c0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80257ac:	4b08      	ldr	r3, [pc, #32]	@ (80257d0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 80257ae:	6023      	str	r3, [r4, #0]
 80257b0:	4628      	mov	r0, r5
 80257b2:	f008 f88a 	bl	802d8ca <__cxa_guard_release>
 80257b6:	4a07      	ldr	r2, [pc, #28]	@ (80257d4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 80257b8:	4907      	ldr	r1, [pc, #28]	@ (80257d8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 80257ba:	4620      	mov	r0, r4
 80257bc:	f008 f872 	bl	802d8a4 <__aeabi_atexit>
 80257c0:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 80257c4:	bd70      	pop	{r4, r5, r6, pc}
 80257c6:	bf00      	nop
 80257c8:	2000e4ac 	.word	0x2000e4ac
 80257cc:	2000e624 	.word	0x2000e624
 80257d0:	08033298 	.word	0x08033298
 80257d4:	20000000 	.word	0x20000000
 80257d8:	080210dd 	.word	0x080210dd

080257dc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 80257dc:	b510      	push	{r4, lr}
 80257de:	4604      	mov	r4, r0
 80257e0:	f7ff ff96 	bl	8025710 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 80257e4:	4620      	mov	r0, r4
 80257e6:	f7ff ffb3 	bl	8025750 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 80257ea:	4620      	mov	r0, r4
 80257ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80257f0:	f7ff bfce 	b.w	8025790 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

080257f4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 80257f4:	b570      	push	{r4, r5, r6, lr}
 80257f6:	4d0d      	ldr	r5, [pc, #52]	@ (802582c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 80257f8:	4c0d      	ldr	r4, [pc, #52]	@ (8025830 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 80257fa:	782b      	ldrb	r3, [r5, #0]
 80257fc:	f3bf 8f5b 	dmb	ish
 8025800:	f013 0f01 	tst.w	r3, #1
 8025804:	4606      	mov	r6, r0
 8025806:	d10d      	bne.n	8025824 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 8025808:	4628      	mov	r0, r5
 802580a:	f008 f852 	bl	802d8b2 <__cxa_guard_acquire>
 802580e:	b148      	cbz	r0, 8025824 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 8025810:	4b08      	ldr	r3, [pc, #32]	@ (8025834 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 8025812:	6023      	str	r3, [r4, #0]
 8025814:	4628      	mov	r0, r5
 8025816:	f008 f858 	bl	802d8ca <__cxa_guard_release>
 802581a:	4a07      	ldr	r2, [pc, #28]	@ (8025838 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 802581c:	4907      	ldr	r1, [pc, #28]	@ (802583c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 802581e:	4620      	mov	r0, r4
 8025820:	f008 f840 	bl	802d8a4 <__aeabi_atexit>
 8025824:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 8025828:	bd70      	pop	{r4, r5, r6, pc}
 802582a:	bf00      	nop
 802582c:	2000e4a0 	.word	0x2000e4a0
 8025830:	2000e520 	.word	0x2000e520
 8025834:	080332b4 	.word	0x080332b4
 8025838:	20000000 	.word	0x20000000
 802583c:	080210db 	.word	0x080210db

08025840 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8025840:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025844:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 8025848:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 802584c:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 8025850:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 8025854:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 8025858:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 802585c:	8808      	ldrh	r0, [r1, #0]
 802585e:	fb05 4c0e 	mla	ip, r5, lr, r4
 8025862:	2d00      	cmp	r5, #0
 8025864:	eb02 0a0c 	add.w	sl, r2, ip
 8025868:	f2c0 80b0 	blt.w	80259cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 802586c:	45ab      	cmp	fp, r5
 802586e:	f340 80ad 	ble.w	80259cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8025872:	2c00      	cmp	r4, #0
 8025874:	f2c0 80a8 	blt.w	80259c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8025878:	45a6      	cmp	lr, r4
 802587a:	f340 80a5 	ble.w	80259c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 802587e:	f812 200c 	ldrb.w	r2, [r2, ip]
 8025882:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8025886:	1c62      	adds	r2, r4, #1
 8025888:	f100 80a3 	bmi.w	80259d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 802588c:	4596      	cmp	lr, r2
 802588e:	f340 80a0 	ble.w	80259d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8025892:	f1b9 0f00 	cmp.w	r9, #0
 8025896:	f000 809c 	beq.w	80259d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 802589a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802589e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 80258a2:	3501      	adds	r5, #1
 80258a4:	f100 8099 	bmi.w	80259da <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80258a8:	45ab      	cmp	fp, r5
 80258aa:	f340 8096 	ble.w	80259da <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80258ae:	2f00      	cmp	r7, #0
 80258b0:	f000 8093 	beq.w	80259da <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80258b4:	2c00      	cmp	r4, #0
 80258b6:	f2c0 808e 	blt.w	80259d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80258ba:	45a6      	cmp	lr, r4
 80258bc:	f340 808b 	ble.w	80259d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80258c0:	f81a 200e 	ldrb.w	r2, [sl, lr]
 80258c4:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 80258c8:	3401      	adds	r4, #1
 80258ca:	f100 8089 	bmi.w	80259e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80258ce:	45a6      	cmp	lr, r4
 80258d0:	f340 8086 	ble.w	80259e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80258d4:	f1b9 0f00 	cmp.w	r9, #0
 80258d8:	f000 8082 	beq.w	80259e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80258dc:	44d6      	add	lr, sl
 80258de:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80258e2:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80258e6:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80258ea:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80258ee:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 80258f2:	fb19 fe07 	smulbb	lr, r9, r7
 80258f6:	ea44 0808 	orr.w	r8, r4, r8
 80258fa:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80258fe:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8025902:	f1c7 0210 	rsb	r2, r7, #16
 8025906:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 802590a:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 802590e:	ea44 0c0c 	orr.w	ip, r4, ip
 8025912:	eba2 0209 	sub.w	r2, r2, r9
 8025916:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 802591a:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 802591e:	fb04 f40c 	mul.w	r4, r4, ip
 8025922:	fb02 4808 	mla	r8, r2, r8, r4
 8025926:	041a      	lsls	r2, r3, #16
 8025928:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 802592c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8025930:	4313      	orrs	r3, r2
 8025932:	042a      	lsls	r2, r5, #16
 8025934:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8025938:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 802593c:	fb0e 8303 	mla	r3, lr, r3, r8
 8025940:	432a      	orrs	r2, r5
 8025942:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8025946:	fb07 3202 	mla	r2, r7, r2, r3
 802594a:	0d53      	lsrs	r3, r2, #21
 802594c:	0952      	lsrs	r2, r2, #5
 802594e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8025952:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8025956:	431a      	orrs	r2, r3
 8025958:	b293      	uxth	r3, r2
 802595a:	b2b4      	uxth	r4, r6
 802595c:	1202      	asrs	r2, r0, #8
 802595e:	43f6      	mvns	r6, r6
 8025960:	b2f6      	uxtb	r6, r6
 8025962:	121d      	asrs	r5, r3, #8
 8025964:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8025968:	fb12 f206 	smulbb	r2, r2, r6
 802596c:	10c7      	asrs	r7, r0, #3
 802596e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8025972:	00c0      	lsls	r0, r0, #3
 8025974:	fb05 2504 	mla	r5, r5, r4, r2
 8025978:	b2c0      	uxtb	r0, r0
 802597a:	10da      	asrs	r2, r3, #3
 802597c:	00db      	lsls	r3, r3, #3
 802597e:	b2db      	uxtb	r3, r3
 8025980:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8025984:	fb10 f006 	smulbb	r0, r0, r6
 8025988:	b2ad      	uxth	r5, r5
 802598a:	fb03 0004 	mla	r0, r3, r4, r0
 802598e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8025992:	fb17 f706 	smulbb	r7, r7, r6
 8025996:	b280      	uxth	r0, r0
 8025998:	1c6b      	adds	r3, r5, #1
 802599a:	fb02 7204 	mla	r2, r2, r4, r7
 802599e:	b292      	uxth	r2, r2
 80259a0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80259a4:	1c43      	adds	r3, r0, #1
 80259a6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80259aa:	1c50      	adds	r0, r2, #1
 80259ac:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80259b0:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80259b4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80259b8:	0952      	lsrs	r2, r2, #5
 80259ba:	432b      	orrs	r3, r5
 80259bc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80259c0:	4313      	orrs	r3, r2
 80259c2:	800b      	strh	r3, [r1, #0]
 80259c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80259c8:	4680      	mov	r8, r0
 80259ca:	e75c      	b.n	8025886 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 80259cc:	4684      	mov	ip, r0
 80259ce:	4680      	mov	r8, r0
 80259d0:	e767      	b.n	80258a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80259d2:	4684      	mov	ip, r0
 80259d4:	e765      	b.n	80258a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80259d6:	4605      	mov	r5, r0
 80259d8:	e776      	b.n	80258c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 80259da:	4603      	mov	r3, r0
 80259dc:	4605      	mov	r5, r0
 80259de:	e782      	b.n	80258e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80259e0:	4603      	mov	r3, r0
 80259e2:	e780      	b.n	80258e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

080259e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80259e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80259e8:	b099      	sub	sp, #100	@ 0x64
 80259ea:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 80259ee:	9215      	str	r2, [sp, #84]	@ 0x54
 80259f0:	9309      	str	r3, [sp, #36]	@ 0x24
 80259f2:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 80259f4:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 80259f8:	930d      	str	r3, [sp, #52]	@ 0x34
 80259fa:	910c      	str	r1, [sp, #48]	@ 0x30
 80259fc:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 8025a00:	9016      	str	r0, [sp, #88]	@ 0x58
 8025a02:	6850      	ldr	r0, [r2, #4]
 8025a04:	6812      	ldr	r2, [r2, #0]
 8025a06:	fb00 1303 	mla	r3, r0, r3, r1
 8025a0a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8025a0e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8025a10:	681b      	ldr	r3, [r3, #0]
 8025a12:	930b      	str	r3, [sp, #44]	@ 0x2c
 8025a14:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8025a16:	685e      	ldr	r6, [r3, #4]
 8025a18:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8025a1a:	43db      	mvns	r3, r3
 8025a1c:	b2db      	uxtb	r3, r3
 8025a1e:	3604      	adds	r6, #4
 8025a20:	930a      	str	r3, [sp, #40]	@ 0x28
 8025a22:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8025a24:	2b00      	cmp	r3, #0
 8025a26:	dc03      	bgt.n	8025a30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8025a28:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8025a2a:	2b00      	cmp	r3, #0
 8025a2c:	f340 8225 	ble.w	8025e7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8025a30:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8025a32:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025a36:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025a3a:	1e48      	subs	r0, r1, #1
 8025a3c:	1e57      	subs	r7, r2, #1
 8025a3e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025a40:	2b00      	cmp	r3, #0
 8025a42:	f340 80e3 	ble.w	8025c0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8025a46:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8025a4a:	ea4f 4325 	mov.w	r3, r5, asr #16
 8025a4e:	d406      	bmi.n	8025a5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8025a50:	4584      	cmp	ip, r0
 8025a52:	da04      	bge.n	8025a5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8025a54:	2b00      	cmp	r3, #0
 8025a56:	db02      	blt.n	8025a5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8025a58:	42bb      	cmp	r3, r7
 8025a5a:	f2c0 80d8 	blt.w	8025c0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8025a5e:	f11c 0c01 	adds.w	ip, ip, #1
 8025a62:	f100 80c9 	bmi.w	8025bf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8025a66:	4561      	cmp	r1, ip
 8025a68:	f2c0 80c6 	blt.w	8025bf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8025a6c:	3301      	adds	r3, #1
 8025a6e:	f100 80c3 	bmi.w	8025bf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8025a72:	429a      	cmp	r2, r3
 8025a74:	f2c0 80c0 	blt.w	8025bf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8025a78:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8025a7c:	4647      	mov	r7, r8
 8025a7e:	f1bb 0f00 	cmp.w	fp, #0
 8025a82:	f340 80e3 	ble.w	8025c4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8025a86:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8025a88:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8025a8a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8025a8e:	689b      	ldr	r3, [r3, #8]
 8025a90:	ea5f 422a 	movs.w	r2, sl, asr #16
 8025a94:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8025a98:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8025a9c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8025aa0:	f100 8121 	bmi.w	8025ce6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8025aa4:	f103 39ff 	add.w	r9, r3, #4294967295
 8025aa8:	454a      	cmp	r2, r9
 8025aaa:	f280 811c 	bge.w	8025ce6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8025aae:	f1bc 0f00 	cmp.w	ip, #0
 8025ab2:	f2c0 8118 	blt.w	8025ce6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8025ab6:	f10e 39ff 	add.w	r9, lr, #4294967295
 8025aba:	45cc      	cmp	ip, r9
 8025abc:	f280 8113 	bge.w	8025ce6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8025ac0:	b21b      	sxth	r3, r3
 8025ac2:	fb0c 2203 	mla	r2, ip, r3, r2
 8025ac6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8025ac8:	eb04 0902 	add.w	r9, r4, r2
 8025acc:	5ca2      	ldrb	r2, [r4, r2]
 8025ace:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8025ad2:	2800      	cmp	r0, #0
 8025ad4:	f000 80fe 	beq.w	8025cd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8025ad8:	f899 2001 	ldrb.w	r2, [r9, #1]
 8025adc:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8025ae0:	9211      	str	r2, [sp, #68]	@ 0x44
 8025ae2:	b151      	cbz	r1, 8025afa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8025ae4:	eb09 0203 	add.w	r2, r9, r3
 8025ae8:	f819 3003 	ldrb.w	r3, [r9, r3]
 8025aec:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025af0:	930f      	str	r3, [sp, #60]	@ 0x3c
 8025af2:	7853      	ldrb	r3, [r2, #1]
 8025af4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025af8:	9312      	str	r3, [sp, #72]	@ 0x48
 8025afa:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8025afc:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8025afe:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8025b02:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8025b06:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8025b0a:	ea4c 0c03 	orr.w	ip, ip, r3
 8025b0e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8025b10:	041b      	lsls	r3, r3, #16
 8025b12:	fb10 f201 	smulbb	r2, r0, r1
 8025b16:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8025b1a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8025b1e:	10d2      	asrs	r2, r2, #3
 8025b20:	4323      	orrs	r3, r4
 8025b22:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8025b26:	4353      	muls	r3, r2
 8025b28:	fb09 330c 	mla	r3, r9, ip, r3
 8025b2c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8025b30:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8025b34:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8025b38:	ea4c 0e0e 	orr.w	lr, ip, lr
 8025b3c:	f1c1 0c10 	rsb	ip, r1, #16
 8025b40:	ebac 0c00 	sub.w	ip, ip, r0
 8025b44:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8025b48:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8025b4c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8025b4e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8025b50:	0418      	lsls	r0, r3, #16
 8025b52:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8025b56:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8025b5a:	4318      	orrs	r0, r3
 8025b5c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8025b60:	fb02 c200 	mla	r2, r2, r0, ip
 8025b64:	0d53      	lsrs	r3, r2, #21
 8025b66:	0952      	lsrs	r2, r2, #5
 8025b68:	8838      	ldrh	r0, [r7, #0]
 8025b6a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8025b6e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8025b72:	431a      	orrs	r2, r3
 8025b74:	b292      	uxth	r2, r2
 8025b76:	1201      	asrs	r1, r0, #8
 8025b78:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 8025b7c:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8025b80:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8025b84:	fb11 f104 	smulbb	r1, r1, r4
 8025b88:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8025b8c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8025b90:	00c0      	lsls	r0, r0, #3
 8025b92:	fb0c 1c03 	mla	ip, ip, r3, r1
 8025b96:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8025b9a:	10d1      	asrs	r1, r2, #3
 8025b9c:	b2c0      	uxtb	r0, r0
 8025b9e:	00d2      	lsls	r2, r2, #3
 8025ba0:	b2d2      	uxtb	r2, r2
 8025ba2:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8025ba6:	fb1e fe04 	smulbb	lr, lr, r4
 8025baa:	fb10 f004 	smulbb	r0, r0, r4
 8025bae:	fa1f fc8c 	uxth.w	ip, ip
 8025bb2:	fb01 e103 	mla	r1, r1, r3, lr
 8025bb6:	fb02 0303 	mla	r3, r2, r3, r0
 8025bba:	b29a      	uxth	r2, r3
 8025bbc:	f10c 0301 	add.w	r3, ip, #1
 8025bc0:	b289      	uxth	r1, r1
 8025bc2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8025bc6:	1c53      	adds	r3, r2, #1
 8025bc8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025bcc:	1c4a      	adds	r2, r1, #1
 8025bce:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8025bd2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8025bd6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025bda:	0949      	lsrs	r1, r1, #5
 8025bdc:	ea43 030c 	orr.w	r3, r3, ip
 8025be0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8025be4:	430b      	orrs	r3, r1
 8025be6:	803b      	strh	r3, [r7, #0]
 8025be8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8025bea:	449a      	add	sl, r3
 8025bec:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8025bee:	3702      	adds	r7, #2
 8025bf0:	441d      	add	r5, r3
 8025bf2:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025bf6:	e742      	b.n	8025a7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8025bf8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8025bfa:	449a      	add	sl, r3
 8025bfc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8025bfe:	441d      	add	r5, r3
 8025c00:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025c02:	3b01      	subs	r3, #1
 8025c04:	9309      	str	r3, [sp, #36]	@ 0x24
 8025c06:	f108 0802 	add.w	r8, r8, #2
 8025c0a:	e718      	b.n	8025a3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8025c0c:	d023      	beq.n	8025c56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8025c0e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025c10:	9825      	ldr	r0, [sp, #148]	@ 0x94
 8025c12:	3b01      	subs	r3, #1
 8025c14:	fb00 a003 	mla	r0, r0, r3, sl
 8025c18:	1400      	asrs	r0, r0, #16
 8025c1a:	f53f af2d 	bmi.w	8025a78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8025c1e:	3901      	subs	r1, #1
 8025c20:	4288      	cmp	r0, r1
 8025c22:	f6bf af29 	bge.w	8025a78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8025c26:	9926      	ldr	r1, [sp, #152]	@ 0x98
 8025c28:	fb01 5303 	mla	r3, r1, r3, r5
 8025c2c:	141b      	asrs	r3, r3, #16
 8025c2e:	f53f af23 	bmi.w	8025a78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8025c32:	3a01      	subs	r2, #1
 8025c34:	4293      	cmp	r3, r2
 8025c36:	f6bf af1f 	bge.w	8025a78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8025c3a:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8025c3e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 8025c42:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 8025c46:	f1be 0f00 	cmp.w	lr, #0
 8025c4a:	dc6c      	bgt.n	8025d26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8025c4c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025c4e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8025c52:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8025c56:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8025c58:	2b00      	cmp	r3, #0
 8025c5a:	f340 810e 	ble.w	8025e7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8025c5e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025c62:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8025c66:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025c6a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8025c6c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025c70:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025c74:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025c78:	eef0 6a62 	vmov.f32	s13, s5
 8025c7c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025c80:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025c84:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025c88:	ee16 aa90 	vmov	sl, s13
 8025c8c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025c90:	eef0 6a43 	vmov.f32	s13, s6
 8025c94:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025c98:	ee12 2a90 	vmov	r2, s5
 8025c9c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025ca0:	fb92 f3f3 	sdiv	r3, r2, r3
 8025ca4:	ee13 2a10 	vmov	r2, s6
 8025ca8:	9325      	str	r3, [sp, #148]	@ 0x94
 8025caa:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8025cac:	fb92 f3f3 	sdiv	r3, r2, r3
 8025cb0:	9326      	str	r3, [sp, #152]	@ 0x98
 8025cb2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8025cb4:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8025cb6:	3b01      	subs	r3, #1
 8025cb8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025cbc:	930c      	str	r3, [sp, #48]	@ 0x30
 8025cbe:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8025cc0:	bf08      	it	eq
 8025cc2:	4613      	moveq	r3, r2
 8025cc4:	ee16 5a90 	vmov	r5, s13
 8025cc8:	9309      	str	r3, [sp, #36]	@ 0x24
 8025cca:	eeb0 3a67 	vmov.f32	s6, s15
 8025cce:	eef0 2a47 	vmov.f32	s5, s14
 8025cd2:	e6a6      	b.n	8025a22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8025cd4:	2900      	cmp	r1, #0
 8025cd6:	f43f af10 	beq.w	8025afa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8025cda:	f819 3003 	ldrb.w	r3, [r9, r3]
 8025cde:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025ce2:	930f      	str	r3, [sp, #60]	@ 0x3c
 8025ce4:	e709      	b.n	8025afa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8025ce6:	f112 0901 	adds.w	r9, r2, #1
 8025cea:	f53f af7d 	bmi.w	8025be8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8025cee:	454b      	cmp	r3, r9
 8025cf0:	f6ff af7a 	blt.w	8025be8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8025cf4:	f11c 0901 	adds.w	r9, ip, #1
 8025cf8:	f53f af76 	bmi.w	8025be8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8025cfc:	45ce      	cmp	lr, r9
 8025cfe:	f6ff af73 	blt.w	8025be8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8025d02:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8025d04:	9202      	str	r2, [sp, #8]
 8025d06:	b21b      	sxth	r3, r3
 8025d08:	fa0f f28e 	sxth.w	r2, lr
 8025d0c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8025d10:	e9cd c003 	strd	ip, r0, [sp, #12]
 8025d14:	9201      	str	r2, [sp, #4]
 8025d16:	9300      	str	r3, [sp, #0]
 8025d18:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8025d1a:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8025d1c:	4633      	mov	r3, r6
 8025d1e:	4639      	mov	r1, r7
 8025d20:	f7ff fd8e 	bl	8025840 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8025d24:	e760      	b.n	8025be8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8025d26:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8025d28:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8025d2a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8025d2e:	ea4f 422a 	mov.w	r2, sl, asr #16
 8025d32:	1429      	asrs	r1, r5, #16
 8025d34:	fb03 2101 	mla	r1, r3, r1, r2
 8025d38:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8025d3a:	440a      	add	r2, r1
 8025d3c:	5c61      	ldrb	r1, [r4, r1]
 8025d3e:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8025d42:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8025d46:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8025d4a:	f1bc 0f00 	cmp.w	ip, #0
 8025d4e:	f000 808c 	beq.w	8025e6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8025d52:	7857      	ldrb	r7, [r2, #1]
 8025d54:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8025d58:	9413      	str	r4, [sp, #76]	@ 0x4c
 8025d5a:	b140      	cbz	r0, 8025d6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8025d5c:	18d7      	adds	r7, r2, r3
 8025d5e:	5cd3      	ldrb	r3, [r2, r3]
 8025d60:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025d64:	9310      	str	r3, [sp, #64]	@ 0x40
 8025d66:	787b      	ldrb	r3, [r7, #1]
 8025d68:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025d6c:	9314      	str	r3, [sp, #80]	@ 0x50
 8025d6e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8025d70:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8025d72:	fb1c f200 	smulbb	r2, ip, r0
 8025d76:	041f      	lsls	r7, r3, #16
 8025d78:	10d2      	asrs	r2, r2, #3
 8025d7a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8025d7e:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 8025d82:	431f      	orrs	r7, r3
 8025d84:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8025d88:	9317      	str	r3, [sp, #92]	@ 0x5c
 8025d8a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8025d8c:	041b      	lsls	r3, r3, #16
 8025d8e:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 8025d92:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8025d96:	ea43 030b 	orr.w	r3, r3, fp
 8025d9a:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8025d9c:	4353      	muls	r3, r2
 8025d9e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8025da2:	fb04 3707 	mla	r7, r4, r7, r3
 8025da6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8025daa:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 8025dae:	ea43 0b01 	orr.w	fp, r3, r1
 8025db2:	f1c0 0110 	rsb	r1, r0, #16
 8025db6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8025db8:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8025dba:	eba1 0c0c 	sub.w	ip, r1, ip
 8025dbe:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8025dc2:	fb0c 770b 	mla	r7, ip, fp, r7
 8025dc6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8025dca:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 8025dce:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8025dd2:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8025dd6:	ea4c 0c0b 	orr.w	ip, ip, fp
 8025dda:	fb02 770c 	mla	r7, r2, ip, r7
 8025dde:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8025de0:	0d79      	lsrs	r1, r7, #21
 8025de2:	097f      	lsrs	r7, r7, #5
 8025de4:	8812      	ldrh	r2, [r2, #0]
 8025de6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8025dea:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8025dee:	430f      	orrs	r7, r1
 8025df0:	b2bb      	uxth	r3, r7
 8025df2:	1211      	asrs	r1, r2, #8
 8025df4:	1218      	asrs	r0, r3, #8
 8025df6:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8025dfa:	fb11 f104 	smulbb	r1, r1, r4
 8025dfe:	10d7      	asrs	r7, r2, #3
 8025e00:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8025e04:	00d2      	lsls	r2, r2, #3
 8025e06:	fb00 1009 	mla	r0, r0, r9, r1
 8025e0a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8025e0e:	10d9      	asrs	r1, r3, #3
 8025e10:	b2d2      	uxtb	r2, r2
 8025e12:	00db      	lsls	r3, r3, #3
 8025e14:	fb17 f704 	smulbb	r7, r7, r4
 8025e18:	fb12 f204 	smulbb	r2, r2, r4
 8025e1c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8025e20:	b2db      	uxtb	r3, r3
 8025e22:	b280      	uxth	r0, r0
 8025e24:	fb01 7109 	mla	r1, r1, r9, r7
 8025e28:	fb03 2309 	mla	r3, r3, r9, r2
 8025e2c:	b29b      	uxth	r3, r3
 8025e2e:	b289      	uxth	r1, r1
 8025e30:	1c42      	adds	r2, r0, #1
 8025e32:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025e36:	1c4f      	adds	r7, r1, #1
 8025e38:	1c5a      	adds	r2, r3, #1
 8025e3a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8025e3e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8025e42:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8025e46:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8025e4a:	0949      	lsrs	r1, r1, #5
 8025e4c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8025e4e:	4310      	orrs	r0, r2
 8025e50:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8025e54:	4308      	orrs	r0, r1
 8025e56:	f823 0b02 	strh.w	r0, [r3], #2
 8025e5a:	930e      	str	r3, [sp, #56]	@ 0x38
 8025e5c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8025e5e:	449a      	add	sl, r3
 8025e60:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8025e62:	f10e 3eff 	add.w	lr, lr, #4294967295
 8025e66:	441d      	add	r5, r3
 8025e68:	e6ed      	b.n	8025c46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8025e6a:	2800      	cmp	r0, #0
 8025e6c:	f43f af7f 	beq.w	8025d6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8025e70:	5cd3      	ldrb	r3, [r2, r3]
 8025e72:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025e76:	9310      	str	r3, [sp, #64]	@ 0x40
 8025e78:	e779      	b.n	8025d6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8025e7a:	b019      	add	sp, #100	@ 0x64
 8025e7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025e80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8025e80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025e84:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 8025e88:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8025e8c:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 8025e90:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 8025e94:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 8025e98:	8808      	ldrh	r0, [r1, #0]
 8025e9a:	fb08 470e 	mla	r7, r8, lr, r4
 8025e9e:	f1b8 0f00 	cmp.w	r8, #0
 8025ea2:	eb02 0907 	add.w	r9, r2, r7
 8025ea6:	db67      	blt.n	8025f78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8025ea8:	45c2      	cmp	sl, r8
 8025eaa:	dd65      	ble.n	8025f78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8025eac:	2c00      	cmp	r4, #0
 8025eae:	db61      	blt.n	8025f74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8025eb0:	45a6      	cmp	lr, r4
 8025eb2:	dd5f      	ble.n	8025f74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8025eb4:	5dd2      	ldrb	r2, [r2, r7]
 8025eb6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8025eba:	1c62      	adds	r2, r4, #1
 8025ebc:	d45f      	bmi.n	8025f7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8025ebe:	4596      	cmp	lr, r2
 8025ec0:	dd5d      	ble.n	8025f7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8025ec2:	2d00      	cmp	r5, #0
 8025ec4:	d05b      	beq.n	8025f7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8025ec6:	f899 2001 	ldrb.w	r2, [r9, #1]
 8025eca:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8025ece:	f118 0801 	adds.w	r8, r8, #1
 8025ed2:	d458      	bmi.n	8025f86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8025ed4:	45c2      	cmp	sl, r8
 8025ed6:	dd56      	ble.n	8025f86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8025ed8:	2e00      	cmp	r6, #0
 8025eda:	d054      	beq.n	8025f86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8025edc:	2c00      	cmp	r4, #0
 8025ede:	db50      	blt.n	8025f82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8025ee0:	45a6      	cmp	lr, r4
 8025ee2:	dd4e      	ble.n	8025f82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8025ee4:	f819 200e 	ldrb.w	r2, [r9, lr]
 8025ee8:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8025eec:	3401      	adds	r4, #1
 8025eee:	d407      	bmi.n	8025f00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8025ef0:	45a6      	cmp	lr, r4
 8025ef2:	dd05      	ble.n	8025f00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8025ef4:	b125      	cbz	r5, 8025f00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8025ef6:	44ce      	add	lr, r9
 8025ef8:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8025efc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8025f00:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8025f04:	fb15 f406 	smulbb	r4, r5, r6
 8025f08:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8025f0c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8025f10:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8025f14:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8025f18:	ea43 0c0c 	orr.w	ip, r3, ip
 8025f1c:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8025f20:	f1c6 0310 	rsb	r3, r6, #16
 8025f24:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8025f28:	1b5b      	subs	r3, r3, r5
 8025f2a:	ea4e 0707 	orr.w	r7, lr, r7
 8025f2e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8025f32:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8025f36:	437d      	muls	r5, r7
 8025f38:	fb03 5c0c 	mla	ip, r3, ip, r5
 8025f3c:	0403      	lsls	r3, r0, #16
 8025f3e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8025f42:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8025f46:	4318      	orrs	r0, r3
 8025f48:	0413      	lsls	r3, r2, #16
 8025f4a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8025f4e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8025f52:	4313      	orrs	r3, r2
 8025f54:	fb04 c000 	mla	r0, r4, r0, ip
 8025f58:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8025f5c:	fb06 0003 	mla	r0, r6, r3, r0
 8025f60:	0d43      	lsrs	r3, r0, #21
 8025f62:	0940      	lsrs	r0, r0, #5
 8025f64:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8025f68:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8025f6c:	4318      	orrs	r0, r3
 8025f6e:	8008      	strh	r0, [r1, #0]
 8025f70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025f74:	4684      	mov	ip, r0
 8025f76:	e7a0      	b.n	8025eba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8025f78:	4607      	mov	r7, r0
 8025f7a:	4684      	mov	ip, r0
 8025f7c:	e7a7      	b.n	8025ece <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8025f7e:	4607      	mov	r7, r0
 8025f80:	e7a5      	b.n	8025ece <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8025f82:	4602      	mov	r2, r0
 8025f84:	e7b2      	b.n	8025eec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8025f86:	4602      	mov	r2, r0
 8025f88:	e7ba      	b.n	8025f00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08025f8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025f8a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025f8e:	b093      	sub	sp, #76	@ 0x4c
 8025f90:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8025f94:	920f      	str	r2, [sp, #60]	@ 0x3c
 8025f96:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8025f98:	9108      	str	r1, [sp, #32]
 8025f9a:	9306      	str	r3, [sp, #24]
 8025f9c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8025fa0:	9010      	str	r0, [sp, #64]	@ 0x40
 8025fa2:	6850      	ldr	r0, [r2, #4]
 8025fa4:	6812      	ldr	r2, [r2, #0]
 8025fa6:	fb00 1303 	mla	r3, r0, r3, r1
 8025faa:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8025fae:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8025fb0:	681b      	ldr	r3, [r3, #0]
 8025fb2:	9307      	str	r3, [sp, #28]
 8025fb4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8025fb6:	685f      	ldr	r7, [r3, #4]
 8025fb8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8025fbc:	3704      	adds	r7, #4
 8025fbe:	9b08      	ldr	r3, [sp, #32]
 8025fc0:	2b00      	cmp	r3, #0
 8025fc2:	dc03      	bgt.n	8025fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8025fc4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8025fc6:	2b00      	cmp	r3, #0
 8025fc8:	f340 81b2 	ble.w	8026330 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8025fcc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8025fce:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025fd2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025fd6:	1e48      	subs	r0, r1, #1
 8025fd8:	f102 3cff 	add.w	ip, r2, #4294967295
 8025fdc:	9b06      	ldr	r3, [sp, #24]
 8025fde:	2b00      	cmp	r3, #0
 8025fe0:	f340 80a9 	ble.w	8026136 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8025fe4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025fe8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025fec:	d406      	bmi.n	8025ffc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8025fee:	4586      	cmp	lr, r0
 8025ff0:	da04      	bge.n	8025ffc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8025ff2:	2b00      	cmp	r3, #0
 8025ff4:	db02      	blt.n	8025ffc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8025ff6:	4563      	cmp	r3, ip
 8025ff8:	f2c0 809e 	blt.w	8026138 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8025ffc:	f11e 0e01 	adds.w	lr, lr, #1
 8026000:	f100 808f 	bmi.w	8026122 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8026004:	4571      	cmp	r1, lr
 8026006:	f2c0 808c 	blt.w	8026122 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802600a:	3301      	adds	r3, #1
 802600c:	f100 8089 	bmi.w	8026122 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8026010:	429a      	cmp	r2, r3
 8026012:	f2c0 8086 	blt.w	8026122 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8026016:	f8dd b018 	ldr.w	fp, [sp, #24]
 802601a:	46c8      	mov	r8, r9
 802601c:	f1bb 0f00 	cmp.w	fp, #0
 8026020:	f340 80a6 	ble.w	8026170 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8026024:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8026026:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8026028:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802602c:	689b      	ldr	r3, [r3, #8]
 802602e:	1422      	asrs	r2, r4, #16
 8026030:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8026034:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8026038:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802603c:	f100 80e3 	bmi.w	8026206 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8026040:	f103 3aff 	add.w	sl, r3, #4294967295
 8026044:	4552      	cmp	r2, sl
 8026046:	f280 80de 	bge.w	8026206 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 802604a:	f1bc 0f00 	cmp.w	ip, #0
 802604e:	f2c0 80da 	blt.w	8026206 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8026052:	f10e 3aff 	add.w	sl, lr, #4294967295
 8026056:	45d4      	cmp	ip, sl
 8026058:	f280 80d5 	bge.w	8026206 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 802605c:	b21b      	sxth	r3, r3
 802605e:	fb0c 2203 	mla	r2, ip, r3, r2
 8026062:	9d07      	ldr	r5, [sp, #28]
 8026064:	eb05 0a02 	add.w	sl, r5, r2
 8026068:	5caa      	ldrb	r2, [r5, r2]
 802606a:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 802606e:	2800      	cmp	r0, #0
 8026070:	f000 80c0 	beq.w	80261f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8026074:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8026078:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 802607c:	920b      	str	r2, [sp, #44]	@ 0x2c
 802607e:	b151      	cbz	r1, 8026096 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8026080:	eb0a 0203 	add.w	r2, sl, r3
 8026084:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8026088:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802608c:	9309      	str	r3, [sp, #36]	@ 0x24
 802608e:	7853      	ldrb	r3, [r2, #1]
 8026090:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8026094:	930c      	str	r3, [sp, #48]	@ 0x30
 8026096:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8026098:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802609a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802609e:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80260a2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80260a6:	ea4c 0c03 	orr.w	ip, ip, r3
 80260aa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80260ac:	041b      	lsls	r3, r3, #16
 80260ae:	fb10 f201 	smulbb	r2, r0, r1
 80260b2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80260b6:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 80260ba:	10d2      	asrs	r2, r2, #3
 80260bc:	432b      	orrs	r3, r5
 80260be:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 80260c2:	4353      	muls	r3, r2
 80260c4:	fb0a 330c 	mla	r3, sl, ip, r3
 80260c8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80260cc:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80260d0:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80260d4:	ea4c 0e0e 	orr.w	lr, ip, lr
 80260d8:	f1c1 0c10 	rsb	ip, r1, #16
 80260dc:	ebac 0c00 	sub.w	ip, ip, r0
 80260e0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80260e4:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80260e8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80260ea:	0418      	lsls	r0, r3, #16
 80260ec:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 80260f0:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80260f4:	4318      	orrs	r0, r3
 80260f6:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80260fa:	fb02 c200 	mla	r2, r2, r0, ip
 80260fe:	0d53      	lsrs	r3, r2, #21
 8026100:	0952      	lsrs	r2, r2, #5
 8026102:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8026106:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802610a:	431a      	orrs	r2, r3
 802610c:	f8a8 2000 	strh.w	r2, [r8]
 8026110:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8026112:	441c      	add	r4, r3
 8026114:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8026116:	f108 0802 	add.w	r8, r8, #2
 802611a:	441e      	add	r6, r3
 802611c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8026120:	e77c      	b.n	802601c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026122:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8026124:	441c      	add	r4, r3
 8026126:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8026128:	441e      	add	r6, r3
 802612a:	9b06      	ldr	r3, [sp, #24]
 802612c:	3b01      	subs	r3, #1
 802612e:	9306      	str	r3, [sp, #24]
 8026130:	f109 0902 	add.w	r9, r9, #2
 8026134:	e752      	b.n	8025fdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8026136:	d020      	beq.n	802617a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8026138:	9b06      	ldr	r3, [sp, #24]
 802613a:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 802613c:	3b01      	subs	r3, #1
 802613e:	fb00 4003 	mla	r0, r0, r3, r4
 8026142:	1400      	asrs	r0, r0, #16
 8026144:	f53f af67 	bmi.w	8026016 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8026148:	3901      	subs	r1, #1
 802614a:	4288      	cmp	r0, r1
 802614c:	f6bf af63 	bge.w	8026016 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8026150:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8026152:	fb01 6303 	mla	r3, r1, r3, r6
 8026156:	141b      	asrs	r3, r3, #16
 8026158:	f53f af5d 	bmi.w	8026016 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 802615c:	3a01      	subs	r2, #1
 802615e:	4293      	cmp	r3, r2
 8026160:	f6bf af59 	bge.w	8026016 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8026164:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8026168:	46ca      	mov	sl, r9
 802616a:	f1b8 0f00 	cmp.w	r8, #0
 802616e:	dc67      	bgt.n	8026240 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8026170:	9b06      	ldr	r3, [sp, #24]
 8026172:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8026176:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802617a:	9b08      	ldr	r3, [sp, #32]
 802617c:	2b00      	cmp	r3, #0
 802617e:	f340 80d7 	ble.w	8026330 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8026182:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026186:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802618a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 802618e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8026190:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026194:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026198:	eeb0 6a62 	vmov.f32	s12, s5
 802619c:	ee61 7a27 	vmul.f32	s15, s2, s15
 80261a0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80261a4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80261a8:	ee16 4a10 	vmov	r4, s12
 80261ac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80261b0:	eeb0 6a43 	vmov.f32	s12, s6
 80261b4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80261b8:	ee12 2a90 	vmov	r2, s5
 80261bc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80261c0:	fb92 f3f3 	sdiv	r3, r2, r3
 80261c4:	ee13 2a10 	vmov	r2, s6
 80261c8:	931f      	str	r3, [sp, #124]	@ 0x7c
 80261ca:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80261cc:	fb92 f3f3 	sdiv	r3, r2, r3
 80261d0:	9320      	str	r3, [sp, #128]	@ 0x80
 80261d2:	9b08      	ldr	r3, [sp, #32]
 80261d4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80261d6:	3b01      	subs	r3, #1
 80261d8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80261dc:	9308      	str	r3, [sp, #32]
 80261de:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80261e0:	bf08      	it	eq
 80261e2:	4613      	moveq	r3, r2
 80261e4:	ee16 6a10 	vmov	r6, s12
 80261e8:	9306      	str	r3, [sp, #24]
 80261ea:	eeb0 3a67 	vmov.f32	s6, s15
 80261ee:	eef0 2a47 	vmov.f32	s5, s14
 80261f2:	e6e4      	b.n	8025fbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80261f4:	2900      	cmp	r1, #0
 80261f6:	f43f af4e 	beq.w	8026096 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80261fa:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80261fe:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8026202:	9309      	str	r3, [sp, #36]	@ 0x24
 8026204:	e747      	b.n	8026096 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8026206:	f112 0a01 	adds.w	sl, r2, #1
 802620a:	d481      	bmi.n	8026110 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802620c:	4553      	cmp	r3, sl
 802620e:	f6ff af7f 	blt.w	8026110 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8026212:	f11c 0a01 	adds.w	sl, ip, #1
 8026216:	f53f af7b 	bmi.w	8026110 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802621a:	45d6      	cmp	lr, sl
 802621c:	f6ff af78 	blt.w	8026110 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8026220:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8026224:	b21b      	sxth	r3, r3
 8026226:	fa0f f28e 	sxth.w	r2, lr
 802622a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 802622e:	9201      	str	r2, [sp, #4]
 8026230:	9300      	str	r3, [sp, #0]
 8026232:	9a07      	ldr	r2, [sp, #28]
 8026234:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8026236:	463b      	mov	r3, r7
 8026238:	4641      	mov	r1, r8
 802623a:	f7ff fe21 	bl	8025e80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 802623e:	e767      	b.n	8026110 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8026240:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8026242:	9d07      	ldr	r5, [sp, #28]
 8026244:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8026248:	1422      	asrs	r2, r4, #16
 802624a:	1431      	asrs	r1, r6, #16
 802624c:	fb03 2101 	mla	r1, r3, r1, r2
 8026250:	9a07      	ldr	r2, [sp, #28]
 8026252:	440a      	add	r2, r1
 8026254:	5c69      	ldrb	r1, [r5, r1]
 8026256:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 802625a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802625e:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8026262:	f1be 0f00 	cmp.w	lr, #0
 8026266:	d05c      	beq.n	8026322 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8026268:	f892 c001 	ldrb.w	ip, [r2, #1]
 802626c:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8026270:	950d      	str	r5, [sp, #52]	@ 0x34
 8026272:	b150      	cbz	r0, 802628a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8026274:	eb02 0c03 	add.w	ip, r2, r3
 8026278:	5cd3      	ldrb	r3, [r2, r3]
 802627a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802627e:	930a      	str	r3, [sp, #40]	@ 0x28
 8026280:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8026284:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8026288:	930e      	str	r3, [sp, #56]	@ 0x38
 802628a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802628c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802628e:	fb1e f200 	smulbb	r2, lr, r0
 8026292:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8026296:	10d2      	asrs	r2, r2, #3
 8026298:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 802629c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80262a0:	ea4c 0c03 	orr.w	ip, ip, r3
 80262a4:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80262a8:	9311      	str	r3, [sp, #68]	@ 0x44
 80262aa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80262ac:	041b      	lsls	r3, r3, #16
 80262ae:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 80262b2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80262b6:	ea43 030b 	orr.w	r3, r3, fp
 80262ba:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80262bc:	4353      	muls	r3, r2
 80262be:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80262c2:	fb05 3c0c 	mla	ip, r5, ip, r3
 80262c6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80262ca:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 80262ce:	ea43 0b01 	orr.w	fp, r3, r1
 80262d2:	f1c0 0110 	rsb	r1, r0, #16
 80262d6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80262d8:	eba1 0e0e 	sub.w	lr, r1, lr
 80262dc:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 80262e0:	fb0e cc0b 	mla	ip, lr, fp, ip
 80262e4:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80262e8:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 80262ec:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80262f0:	ea4b 0e0e 	orr.w	lr, fp, lr
 80262f4:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80262f8:	fb02 cc0e 	mla	ip, r2, lr, ip
 80262fc:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8026300:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8026304:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8026308:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 802630c:	ea43 0c0c 	orr.w	ip, r3, ip
 8026310:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8026312:	f82a cb02 	strh.w	ip, [sl], #2
 8026316:	441c      	add	r4, r3
 8026318:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802631a:	f108 38ff 	add.w	r8, r8, #4294967295
 802631e:	441e      	add	r6, r3
 8026320:	e723      	b.n	802616a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8026322:	2800      	cmp	r0, #0
 8026324:	d0b1      	beq.n	802628a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8026326:	5cd3      	ldrb	r3, [r2, r3]
 8026328:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802632c:	930a      	str	r3, [sp, #40]	@ 0x28
 802632e:	e7ac      	b.n	802628a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8026330:	b013      	add	sp, #76	@ 0x4c
 8026332:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026336 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8026336:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802633a:	880d      	ldrh	r5, [r1, #0]
 802633c:	b087      	sub	sp, #28
 802633e:	10ef      	asrs	r7, r5, #3
 8026340:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8026344:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8026348:	00ed      	lsls	r5, r5, #3
 802634a:	9701      	str	r7, [sp, #4]
 802634c:	b2ed      	uxtb	r5, r5
 802634e:	9502      	str	r5, [sp, #8]
 8026350:	9d01      	ldr	r5, [sp, #4]
 8026352:	9103      	str	r1, [sp, #12]
 8026354:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 8026358:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 802635c:	9902      	ldr	r1, [sp, #8]
 802635e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8026362:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 8026366:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 802636a:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 802636e:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 8026372:	022d      	lsls	r5, r5, #8
 8026374:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8026378:	fb06 0709 	mla	r7, r6, r9, r0
 802637c:	430d      	orrs	r5, r1
 802637e:	2e00      	cmp	r6, #0
 8026380:	eb02 0c07 	add.w	ip, r2, r7
 8026384:	9505      	str	r5, [sp, #20]
 8026386:	f2c0 80b6 	blt.w	80264f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 802638a:	45b3      	cmp	fp, r6
 802638c:	f340 80b3 	ble.w	80264f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8026390:	2800      	cmp	r0, #0
 8026392:	f2c0 80ae 	blt.w	80264f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8026396:	4581      	cmp	r9, r0
 8026398:	f340 80ab 	ble.w	80264f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 802639c:	5dd7      	ldrb	r7, [r2, r7]
 802639e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80263a2:	441f      	add	r7, r3
 80263a4:	1c42      	adds	r2, r0, #1
 80263a6:	f100 80a9 	bmi.w	80264fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80263aa:	4591      	cmp	r9, r2
 80263ac:	f340 80a6 	ble.w	80264fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80263b0:	2c00      	cmp	r4, #0
 80263b2:	f000 80a3 	beq.w	80264fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80263b6:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80263ba:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80263be:	441d      	add	r5, r3
 80263c0:	3601      	adds	r6, #1
 80263c2:	f100 809f 	bmi.w	8026504 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80263c6:	45b3      	cmp	fp, r6
 80263c8:	f340 809c 	ble.w	8026504 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80263cc:	f1be 0f00 	cmp.w	lr, #0
 80263d0:	f000 8098 	beq.w	8026504 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80263d4:	2800      	cmp	r0, #0
 80263d6:	f2c0 8093 	blt.w	8026500 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80263da:	4581      	cmp	r9, r0
 80263dc:	f340 8090 	ble.w	8026500 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80263e0:	f81c 6009 	ldrb.w	r6, [ip, r9]
 80263e4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80263e8:	441e      	add	r6, r3
 80263ea:	3001      	adds	r0, #1
 80263ec:	f100 808d 	bmi.w	802650a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80263f0:	4581      	cmp	r9, r0
 80263f2:	f340 808a 	ble.w	802650a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80263f6:	2c00      	cmp	r4, #0
 80263f8:	f000 8087 	beq.w	802650a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80263fc:	44e1      	add	r9, ip
 80263fe:	f899 2001 	ldrb.w	r2, [r9, #1]
 8026402:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026406:	4413      	add	r3, r2
 8026408:	b2a4      	uxth	r4, r4
 802640a:	fa1f fe8e 	uxth.w	lr, lr
 802640e:	fb04 fb0e 	mul.w	fp, r4, lr
 8026412:	0124      	lsls	r4, r4, #4
 8026414:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8026418:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 802641c:	eba4 040b 	sub.w	r4, r4, fp
 8026420:	fa1f f08e 	uxth.w	r0, lr
 8026424:	b2a2      	uxth	r2, r4
 8026426:	78ac      	ldrb	r4, [r5, #2]
 8026428:	f897 c002 	ldrb.w	ip, [r7, #2]
 802642c:	9901      	ldr	r1, [sp, #4]
 802642e:	eba9 0900 	sub.w	r9, r9, r0
 8026432:	fa1f f989 	uxth.w	r9, r9
 8026436:	4354      	muls	r4, r2
 8026438:	fb09 440c 	mla	r4, r9, ip, r4
 802643c:	f896 c002 	ldrb.w	ip, [r6, #2]
 8026440:	fb00 440c 	mla	r4, r0, ip, r4
 8026444:	f893 c002 	ldrb.w	ip, [r3, #2]
 8026448:	fa1f fe88 	uxth.w	lr, r8
 802644c:	ea6f 0808 	mvn.w	r8, r8
 8026450:	fa5f f888 	uxtb.w	r8, r8
 8026454:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8026458:	fb1a fa08 	smulbb	sl, sl, r8
 802645c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8026460:	fb0c ac0e 	mla	ip, ip, lr, sl
 8026464:	f895 a001 	ldrb.w	sl, [r5, #1]
 8026468:	787c      	ldrb	r4, [r7, #1]
 802646a:	782d      	ldrb	r5, [r5, #0]
 802646c:	783f      	ldrb	r7, [r7, #0]
 802646e:	fb02 fa0a 	mul.w	sl, r2, sl
 8026472:	fb09 aa04 	mla	sl, r9, r4, sl
 8026476:	7874      	ldrb	r4, [r6, #1]
 8026478:	436a      	muls	r2, r5
 802647a:	7835      	ldrb	r5, [r6, #0]
 802647c:	fb00 aa04 	mla	sl, r0, r4, sl
 8026480:	fb09 2207 	mla	r2, r9, r7, r2
 8026484:	785c      	ldrb	r4, [r3, #1]
 8026486:	781b      	ldrb	r3, [r3, #0]
 8026488:	fb00 2005 	mla	r0, r0, r5, r2
 802648c:	fb0b a404 	mla	r4, fp, r4, sl
 8026490:	fb0b 0b03 	mla	fp, fp, r3, r0
 8026494:	9b02      	ldr	r3, [sp, #8]
 8026496:	fb11 fa08 	smulbb	sl, r1, r8
 802649a:	fa1f fc8c 	uxth.w	ip, ip
 802649e:	fb13 f808 	smulbb	r8, r3, r8
 80264a2:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 80264a6:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80264aa:	fb04 a40e 	mla	r4, r4, lr, sl
 80264ae:	f10c 0301 	add.w	r3, ip, #1
 80264b2:	fb0b 8e0e 	mla	lr, fp, lr, r8
 80264b6:	fa1f fe8e 	uxth.w	lr, lr
 80264ba:	b2a4      	uxth	r4, r4
 80264bc:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80264c0:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 80264c4:	f104 0a01 	add.w	sl, r4, #1
 80264c8:	f10e 0c01 	add.w	ip, lr, #1
 80264cc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80264d0:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80264d4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80264d8:	0964      	lsrs	r4, r4, #5
 80264da:	ea4c 0c03 	orr.w	ip, ip, r3
 80264de:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80264e2:	9b03      	ldr	r3, [sp, #12]
 80264e4:	ea4c 0c04 	orr.w	ip, ip, r4
 80264e8:	f8a3 c000 	strh.w	ip, [r3]
 80264ec:	b007      	add	sp, #28
 80264ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80264f2:	af05      	add	r7, sp, #20
 80264f4:	e756      	b.n	80263a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 80264f6:	ad05      	add	r5, sp, #20
 80264f8:	462f      	mov	r7, r5
 80264fa:	e761      	b.n	80263c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80264fc:	ad05      	add	r5, sp, #20
 80264fe:	e75f      	b.n	80263c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8026500:	ae05      	add	r6, sp, #20
 8026502:	e772      	b.n	80263ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8026504:	ab05      	add	r3, sp, #20
 8026506:	461e      	mov	r6, r3
 8026508:	e77e      	b.n	8026408 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 802650a:	ab05      	add	r3, sp, #20
 802650c:	e77c      	b.n	8026408 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0802650e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802650e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026512:	b095      	sub	sp, #84	@ 0x54
 8026514:	9212      	str	r2, [sp, #72]	@ 0x48
 8026516:	9309      	str	r3, [sp, #36]	@ 0x24
 8026518:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 802651a:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 802651e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8026520:	910e      	str	r1, [sp, #56]	@ 0x38
 8026522:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 8026526:	9013      	str	r0, [sp, #76]	@ 0x4c
 8026528:	6850      	ldr	r0, [r2, #4]
 802652a:	6812      	ldr	r2, [r2, #0]
 802652c:	fb00 1303 	mla	r3, r0, r3, r1
 8026530:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8026534:	930a      	str	r3, [sp, #40]	@ 0x28
 8026536:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8026538:	681b      	ldr	r3, [r3, #0]
 802653a:	930d      	str	r3, [sp, #52]	@ 0x34
 802653c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802653e:	685c      	ldr	r4, [r3, #4]
 8026540:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8026542:	43db      	mvns	r3, r3
 8026544:	b2db      	uxtb	r3, r3
 8026546:	3404      	adds	r4, #4
 8026548:	930b      	str	r3, [sp, #44]	@ 0x2c
 802654a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802654c:	2b00      	cmp	r3, #0
 802654e:	dc03      	bgt.n	8026558 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8026550:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8026552:	2b00      	cmp	r3, #0
 8026554:	f340 8255 	ble.w	8026a02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8026558:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802655a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802655e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026562:	1e48      	subs	r0, r1, #1
 8026564:	1e55      	subs	r5, r2, #1
 8026566:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026568:	2b00      	cmp	r3, #0
 802656a:	f340 80f9 	ble.w	8026760 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 802656e:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 8026570:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8026572:	1436      	asrs	r6, r6, #16
 8026574:	ea4f 4323 	mov.w	r3, r3, asr #16
 8026578:	d406      	bmi.n	8026588 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802657a:	4286      	cmp	r6, r0
 802657c:	da04      	bge.n	8026588 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802657e:	2b00      	cmp	r3, #0
 8026580:	db02      	blt.n	8026588 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8026582:	42ab      	cmp	r3, r5
 8026584:	f2c0 80ed 	blt.w	8026762 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8026588:	3601      	adds	r6, #1
 802658a:	f100 80da 	bmi.w	8026742 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802658e:	42b1      	cmp	r1, r6
 8026590:	f2c0 80d7 	blt.w	8026742 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8026594:	3301      	adds	r3, #1
 8026596:	f100 80d4 	bmi.w	8026742 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802659a:	429a      	cmp	r2, r3
 802659c:	f2c0 80d1 	blt.w	8026742 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80265a0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80265a2:	9311      	str	r3, [sp, #68]	@ 0x44
 80265a4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80265a6:	930c      	str	r3, [sp, #48]	@ 0x30
 80265a8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80265aa:	2b00      	cmp	r3, #0
 80265ac:	f340 80fa 	ble.w	80267a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 80265b0:	9826      	ldr	r0, [sp, #152]	@ 0x98
 80265b2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80265b4:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80265b6:	68c6      	ldr	r6, [r0, #12]
 80265b8:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80265ba:	141d      	asrs	r5, r3, #16
 80265bc:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80265c0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80265c2:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 80265c4:	1400      	asrs	r0, r0, #16
 80265c6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80265ca:	6892      	ldr	r2, [r2, #8]
 80265cc:	f100 813e 	bmi.w	802684c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80265d0:	1e57      	subs	r7, r2, #1
 80265d2:	42b8      	cmp	r0, r7
 80265d4:	f280 813a 	bge.w	802684c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80265d8:	2d00      	cmp	r5, #0
 80265da:	f2c0 8137 	blt.w	802684c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80265de:	1e77      	subs	r7, r6, #1
 80265e0:	42bd      	cmp	r5, r7
 80265e2:	f280 8133 	bge.w	802684c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80265e6:	b212      	sxth	r2, r2
 80265e8:	fb05 0002 	mla	r0, r5, r2, r0
 80265ec:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80265ee:	f815 a000 	ldrb.w	sl, [r5, r0]
 80265f2:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80265f6:	182e      	adds	r6, r5, r0
 80265f8:	eb04 050a 	add.w	r5, r4, sl
 80265fc:	2b00      	cmp	r3, #0
 80265fe:	f000 8117 	beq.w	8026830 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8026602:	f896 c001 	ldrb.w	ip, [r6, #1]
 8026606:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802660a:	44a4      	add	ip, r4
 802660c:	2900      	cmp	r1, #0
 802660e:	f000 8117 	beq.w	8026840 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8026612:	18b0      	adds	r0, r6, r2
 8026614:	5cb2      	ldrb	r2, [r6, r2]
 8026616:	7840      	ldrb	r0, [r0, #1]
 8026618:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802661c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026620:	4422      	add	r2, r4
 8026622:	4420      	add	r0, r4
 8026624:	b29b      	uxth	r3, r3
 8026626:	b289      	uxth	r1, r1
 8026628:	fb03 f901 	mul.w	r9, r3, r1
 802662c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8026630:	011b      	lsls	r3, r3, #4
 8026632:	b289      	uxth	r1, r1
 8026634:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8026638:	f895 b002 	ldrb.w	fp, [r5, #2]
 802663c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802663e:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8026642:	f8b6 e000 	ldrh.w	lr, [r6]
 8026646:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 802664a:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 802664e:	eba3 0309 	sub.w	r3, r3, r9
 8026652:	b29b      	uxth	r3, r3
 8026654:	eba8 0801 	sub.w	r8, r8, r1
 8026658:	fa1f f888 	uxth.w	r8, r8
 802665c:	435f      	muls	r7, r3
 802665e:	fb08 770b 	mla	r7, r8, fp, r7
 8026662:	f892 b002 	ldrb.w	fp, [r2, #2]
 8026666:	9310      	str	r3, [sp, #64]	@ 0x40
 8026668:	fb01 770b 	mla	r7, r1, fp, r7
 802666c:	f890 b002 	ldrb.w	fp, [r0, #2]
 8026670:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8026672:	fb09 770b 	mla	r7, r9, fp, r7
 8026676:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 802667a:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 802667e:	fb1b fb03 	smulbb	fp, fp, r3
 8026682:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8026686:	fb07 b706 	mla	r7, r7, r6, fp
 802668a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802668c:	f895 b001 	ldrb.w	fp, [r5, #1]
 8026690:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8026694:	f89c c000 	ldrb.w	ip, [ip]
 8026698:	435d      	muls	r5, r3
 802669a:	fb08 550b 	mla	r5, r8, fp, r5
 802669e:	f892 b001 	ldrb.w	fp, [r2, #1]
 80266a2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80266a4:	fb01 550b 	mla	r5, r1, fp, r5
 80266a8:	f890 b001 	ldrb.w	fp, [r0, #1]
 80266ac:	fb09 550b 	mla	r5, r9, fp, r5
 80266b0:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80266b4:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 80266b8:	fb1b fb03 	smulbb	fp, fp, r3
 80266bc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80266be:	fb03 f30c 	mul.w	r3, r3, ip
 80266c2:	f892 c000 	ldrb.w	ip, [r2]
 80266c6:	fb08 330a 	mla	r3, r8, sl, r3
 80266ca:	fb01 330c 	mla	r3, r1, ip, r3
 80266ce:	f890 c000 	ldrb.w	ip, [r0]
 80266d2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80266d6:	fb09 3c0c 	mla	ip, r9, ip, r3
 80266da:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80266dc:	fa5f fe8e 	uxtb.w	lr, lr
 80266e0:	b2bf      	uxth	r7, r7
 80266e2:	fb1e fe03 	smulbb	lr, lr, r3
 80266e6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80266ea:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80266ee:	fb05 b506 	mla	r5, r5, r6, fp
 80266f2:	1c7b      	adds	r3, r7, #1
 80266f4:	fb0c e606 	mla	r6, ip, r6, lr
 80266f8:	b2ad      	uxth	r5, r5
 80266fa:	b2b6      	uxth	r6, r6
 80266fc:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8026700:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 8026704:	f105 0b01 	add.w	fp, r5, #1
 8026708:	1c77      	adds	r7, r6, #1
 802670a:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 802670e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8026712:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8026716:	096d      	lsrs	r5, r5, #5
 8026718:	431f      	orrs	r7, r3
 802671a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 802671e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8026720:	433d      	orrs	r5, r7
 8026722:	801d      	strh	r5, [r3, #0]
 8026724:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8026726:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8026728:	3302      	adds	r3, #2
 802672a:	930c      	str	r3, [sp, #48]	@ 0x30
 802672c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802672e:	4413      	add	r3, r2
 8026730:	931f      	str	r3, [sp, #124]	@ 0x7c
 8026732:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8026734:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8026736:	4413      	add	r3, r2
 8026738:	9320      	str	r3, [sp, #128]	@ 0x80
 802673a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 802673c:	3b01      	subs	r3, #1
 802673e:	9311      	str	r3, [sp, #68]	@ 0x44
 8026740:	e732      	b.n	80265a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8026742:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8026744:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 8026746:	4433      	add	r3, r6
 8026748:	931f      	str	r3, [sp, #124]	@ 0x7c
 802674a:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 802674c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802674e:	4433      	add	r3, r6
 8026750:	9320      	str	r3, [sp, #128]	@ 0x80
 8026752:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026754:	3b01      	subs	r3, #1
 8026756:	9309      	str	r3, [sp, #36]	@ 0x24
 8026758:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802675a:	3302      	adds	r3, #2
 802675c:	930a      	str	r3, [sp, #40]	@ 0x28
 802675e:	e702      	b.n	8026566 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8026760:	d027      	beq.n	80267b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8026762:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026764:	9821      	ldr	r0, [sp, #132]	@ 0x84
 8026766:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 8026768:	3b01      	subs	r3, #1
 802676a:	fb00 5003 	mla	r0, r0, r3, r5
 802676e:	1400      	asrs	r0, r0, #16
 8026770:	f53f af16 	bmi.w	80265a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026774:	3901      	subs	r1, #1
 8026776:	4288      	cmp	r0, r1
 8026778:	f6bf af12 	bge.w	80265a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802677c:	9922      	ldr	r1, [sp, #136]	@ 0x88
 802677e:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8026780:	fb01 0303 	mla	r3, r1, r3, r0
 8026784:	141b      	asrs	r3, r3, #16
 8026786:	f53f af0b 	bmi.w	80265a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802678a:	3a01      	subs	r2, #1
 802678c:	4293      	cmp	r3, r2
 802678e:	f6bf af07 	bge.w	80265a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026792:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026794:	9311      	str	r3, [sp, #68]	@ 0x44
 8026796:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 802679a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802679c:	930c      	str	r3, [sp, #48]	@ 0x30
 802679e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80267a0:	2b00      	cmp	r3, #0
 80267a2:	dc70      	bgt.n	8026886 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80267a4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80267a6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80267a8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80267ac:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80267b0:	930a      	str	r3, [sp, #40]	@ 0x28
 80267b2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80267b4:	2b00      	cmp	r3, #0
 80267b6:	f340 8124 	ble.w	8026a02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80267ba:	ee30 0a04 	vadd.f32	s0, s0, s8
 80267be:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80267c2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80267c6:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80267c8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80267cc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80267d0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80267d4:	eef0 6a62 	vmov.f32	s13, s5
 80267d8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80267dc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80267e0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80267e4:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 80267e8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80267ec:	eef0 6a43 	vmov.f32	s13, s6
 80267f0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80267f4:	ee12 2a90 	vmov	r2, s5
 80267f8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80267fc:	fb92 f3f3 	sdiv	r3, r2, r3
 8026800:	ee13 2a10 	vmov	r2, s6
 8026804:	9321      	str	r3, [sp, #132]	@ 0x84
 8026806:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8026808:	fb92 f3f3 	sdiv	r3, r2, r3
 802680c:	9322      	str	r3, [sp, #136]	@ 0x88
 802680e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8026810:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8026812:	3b01      	subs	r3, #1
 8026814:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026818:	930e      	str	r3, [sp, #56]	@ 0x38
 802681a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 802681c:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 8026820:	bf08      	it	eq
 8026822:	4613      	moveq	r3, r2
 8026824:	9309      	str	r3, [sp, #36]	@ 0x24
 8026826:	eeb0 3a67 	vmov.f32	s6, s15
 802682a:	eef0 2a47 	vmov.f32	s5, s14
 802682e:	e68c      	b.n	802654a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8026830:	b149      	cbz	r1, 8026846 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8026832:	5cb2      	ldrb	r2, [r6, r2]
 8026834:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026838:	4422      	add	r2, r4
 802683a:	4628      	mov	r0, r5
 802683c:	46ac      	mov	ip, r5
 802683e:	e6f1      	b.n	8026624 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8026840:	4628      	mov	r0, r5
 8026842:	462a      	mov	r2, r5
 8026844:	e6ee      	b.n	8026624 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8026846:	4628      	mov	r0, r5
 8026848:	462a      	mov	r2, r5
 802684a:	e7f7      	b.n	802683c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802684c:	1c47      	adds	r7, r0, #1
 802684e:	f53f af69 	bmi.w	8026724 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8026852:	42ba      	cmp	r2, r7
 8026854:	f6ff af66 	blt.w	8026724 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8026858:	1c6f      	adds	r7, r5, #1
 802685a:	f53f af63 	bmi.w	8026724 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802685e:	42be      	cmp	r6, r7
 8026860:	f6ff af60 	blt.w	8026724 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8026864:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8026866:	9002      	str	r0, [sp, #8]
 8026868:	b236      	sxth	r6, r6
 802686a:	b212      	sxth	r2, r2
 802686c:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8026870:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8026874:	9200      	str	r2, [sp, #0]
 8026876:	9601      	str	r6, [sp, #4]
 8026878:	4623      	mov	r3, r4
 802687a:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 802687e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8026880:	f7ff fd59 	bl	8026336 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8026884:	e74e      	b.n	8026724 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8026886:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8026888:	9820      	ldr	r0, [sp, #128]	@ 0x80
 802688a:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 802688c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802688e:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8026892:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8026894:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8026898:	142d      	asrs	r5, r5, #16
 802689a:	1400      	asrs	r0, r0, #16
 802689c:	fb02 5000 	mla	r0, r2, r0, r5
 80268a0:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80268a2:	f815 9000 	ldrb.w	r9, [r5, r0]
 80268a6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80268aa:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 80268ae:	182e      	adds	r6, r5, r0
 80268b0:	eb04 0509 	add.w	r5, r4, r9
 80268b4:	2b00      	cmp	r3, #0
 80268b6:	f000 8096 	beq.w	80269e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80268ba:	7877      	ldrb	r7, [r6, #1]
 80268bc:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80268c0:	4427      	add	r7, r4
 80268c2:	2900      	cmp	r1, #0
 80268c4:	f000 8097 	beq.w	80269f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 80268c8:	18b0      	adds	r0, r6, r2
 80268ca:	5cb2      	ldrb	r2, [r6, r2]
 80268cc:	7840      	ldrb	r0, [r0, #1]
 80268ce:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80268d2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80268d6:	4422      	add	r2, r4
 80268d8:	4420      	add	r0, r4
 80268da:	b29b      	uxth	r3, r3
 80268dc:	b289      	uxth	r1, r1
 80268de:	fb03 f801 	mul.w	r8, r3, r1
 80268e2:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80268e4:	f895 b002 	ldrb.w	fp, [r5, #2]
 80268e8:	f8b6 c000 	ldrh.w	ip, [r6]
 80268ec:	78be      	ldrb	r6, [r7, #2]
 80268ee:	f814 9009 	ldrb.w	r9, [r4, r9]
 80268f2:	011b      	lsls	r3, r3, #4
 80268f4:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80268f8:	b289      	uxth	r1, r1
 80268fa:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 80268fe:	eba3 0308 	sub.w	r3, r3, r8
 8026902:	b29b      	uxth	r3, r3
 8026904:	ebae 0e01 	sub.w	lr, lr, r1
 8026908:	fa1f fe8e 	uxth.w	lr, lr
 802690c:	435e      	muls	r6, r3
 802690e:	fb0e 660b 	mla	r6, lr, fp, r6
 8026912:	f892 b002 	ldrb.w	fp, [r2, #2]
 8026916:	9310      	str	r3, [sp, #64]	@ 0x40
 8026918:	fb01 660b 	mla	r6, r1, fp, r6
 802691c:	f890 b002 	ldrb.w	fp, [r0, #2]
 8026920:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8026922:	fb08 660b 	mla	r6, r8, fp, r6
 8026926:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 802692a:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 802692e:	fb1b fb03 	smulbb	fp, fp, r3
 8026932:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8026936:	fb06 b60a 	mla	r6, r6, sl, fp
 802693a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802693c:	f895 b001 	ldrb.w	fp, [r5, #1]
 8026940:	787d      	ldrb	r5, [r7, #1]
 8026942:	783f      	ldrb	r7, [r7, #0]
 8026944:	435d      	muls	r5, r3
 8026946:	fb0e 550b 	mla	r5, lr, fp, r5
 802694a:	f892 b001 	ldrb.w	fp, [r2, #1]
 802694e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8026950:	fb01 550b 	mla	r5, r1, fp, r5
 8026954:	f890 b001 	ldrb.w	fp, [r0, #1]
 8026958:	fb08 550b 	mla	r5, r8, fp, r5
 802695c:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8026960:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8026964:	fb1b fb03 	smulbb	fp, fp, r3
 8026968:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802696a:	437b      	muls	r3, r7
 802696c:	7817      	ldrb	r7, [r2, #0]
 802696e:	fb0e 3309 	mla	r3, lr, r9, r3
 8026972:	fb01 3307 	mla	r3, r1, r7, r3
 8026976:	7807      	ldrb	r7, [r0, #0]
 8026978:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802697c:	fb08 3707 	mla	r7, r8, r7, r3
 8026980:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8026982:	fa5f fc8c 	uxtb.w	ip, ip
 8026986:	fb1c fc03 	smulbb	ip, ip, r3
 802698a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802698e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8026992:	fb05 b50a 	mla	r5, r5, sl, fp
 8026996:	fb07 c70a 	mla	r7, r7, sl, ip
 802699a:	b2b6      	uxth	r6, r6
 802699c:	b2ad      	uxth	r5, r5
 802699e:	b2bf      	uxth	r7, r7
 80269a0:	1c73      	adds	r3, r6, #1
 80269a2:	1c7a      	adds	r2, r7, #1
 80269a4:	f105 0b01 	add.w	fp, r5, #1
 80269a8:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80269ac:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80269b0:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80269b4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80269b8:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 80269bc:	096d      	lsrs	r5, r5, #5
 80269be:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80269c0:	4316      	orrs	r6, r2
 80269c2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80269c6:	432e      	orrs	r6, r5
 80269c8:	f823 6b02 	strh.w	r6, [r3], #2
 80269cc:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80269ce:	930c      	str	r3, [sp, #48]	@ 0x30
 80269d0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80269d2:	4413      	add	r3, r2
 80269d4:	931f      	str	r3, [sp, #124]	@ 0x7c
 80269d6:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80269d8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80269da:	4413      	add	r3, r2
 80269dc:	9320      	str	r3, [sp, #128]	@ 0x80
 80269de:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80269e0:	3b01      	subs	r3, #1
 80269e2:	9311      	str	r3, [sp, #68]	@ 0x44
 80269e4:	e6db      	b.n	802679e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 80269e6:	b149      	cbz	r1, 80269fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80269e8:	5cb2      	ldrb	r2, [r6, r2]
 80269ea:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80269ee:	4422      	add	r2, r4
 80269f0:	4628      	mov	r0, r5
 80269f2:	462f      	mov	r7, r5
 80269f4:	e771      	b.n	80268da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80269f6:	4628      	mov	r0, r5
 80269f8:	462a      	mov	r2, r5
 80269fa:	e76e      	b.n	80268da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80269fc:	4628      	mov	r0, r5
 80269fe:	462a      	mov	r2, r5
 8026a00:	e7f7      	b.n	80269f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8026a02:	b015      	add	sp, #84	@ 0x54
 8026a04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026a08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8026a08:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026a0c:	880f      	ldrh	r7, [r1, #0]
 8026a0e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 8026a12:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8026a16:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 8026a1a:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8026a1e:	023c      	lsls	r4, r7, #8
 8026a20:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 8026a24:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 8026a28:	017c      	lsls	r4, r7, #5
 8026a2a:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 8026a2e:	00ff      	lsls	r7, r7, #3
 8026a30:	ea4b 0404 	orr.w	r4, fp, r4
 8026a34:	b2ff      	uxtb	r7, r7
 8026a36:	fb05 ca0e 	mla	sl, r5, lr, ip
 8026a3a:	4327      	orrs	r7, r4
 8026a3c:	2d00      	cmp	r5, #0
 8026a3e:	eb02 080a 	add.w	r8, r2, sl
 8026a42:	9701      	str	r7, [sp, #4]
 8026a44:	db7e      	blt.n	8026b44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8026a46:	45a9      	cmp	r9, r5
 8026a48:	dd7c      	ble.n	8026b44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8026a4a:	f1bc 0f00 	cmp.w	ip, #0
 8026a4e:	db77      	blt.n	8026b40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8026a50:	45e6      	cmp	lr, ip
 8026a52:	dd75      	ble.n	8026b40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8026a54:	f812 700a 	ldrb.w	r7, [r2, sl]
 8026a58:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8026a5c:	441f      	add	r7, r3
 8026a5e:	f11c 0201 	adds.w	r2, ip, #1
 8026a62:	d472      	bmi.n	8026b4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8026a64:	4596      	cmp	lr, r2
 8026a66:	dd70      	ble.n	8026b4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8026a68:	2800      	cmp	r0, #0
 8026a6a:	d06e      	beq.n	8026b4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8026a6c:	f898 4001 	ldrb.w	r4, [r8, #1]
 8026a70:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8026a74:	441c      	add	r4, r3
 8026a76:	3501      	adds	r5, #1
 8026a78:	d46b      	bmi.n	8026b52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8026a7a:	45a9      	cmp	r9, r5
 8026a7c:	dd69      	ble.n	8026b52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8026a7e:	2e00      	cmp	r6, #0
 8026a80:	d067      	beq.n	8026b52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8026a82:	f1bc 0f00 	cmp.w	ip, #0
 8026a86:	db62      	blt.n	8026b4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8026a88:	45e6      	cmp	lr, ip
 8026a8a:	dd60      	ble.n	8026b4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8026a8c:	f818 500e 	ldrb.w	r5, [r8, lr]
 8026a90:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8026a94:	441d      	add	r5, r3
 8026a96:	f11c 0201 	adds.w	r2, ip, #1
 8026a9a:	d45d      	bmi.n	8026b58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8026a9c:	4596      	cmp	lr, r2
 8026a9e:	dd5b      	ble.n	8026b58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8026aa0:	2800      	cmp	r0, #0
 8026aa2:	d059      	beq.n	8026b58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8026aa4:	44c6      	add	lr, r8
 8026aa6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8026aaa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026aae:	4413      	add	r3, r2
 8026ab0:	b280      	uxth	r0, r0
 8026ab2:	b2b2      	uxth	r2, r6
 8026ab4:	fb00 f602 	mul.w	r6, r0, r2
 8026ab8:	0100      	lsls	r0, r0, #4
 8026aba:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8026abe:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 8026ac2:	1b80      	subs	r0, r0, r6
 8026ac4:	fa1f fc82 	uxth.w	ip, r2
 8026ac8:	b282      	uxth	r2, r0
 8026aca:	78a0      	ldrb	r0, [r4, #2]
 8026acc:	f897 e002 	ldrb.w	lr, [r7, #2]
 8026ad0:	f897 9000 	ldrb.w	r9, [r7]
 8026ad4:	787f      	ldrb	r7, [r7, #1]
 8026ad6:	eba8 080c 	sub.w	r8, r8, ip
 8026ada:	fa1f f888 	uxth.w	r8, r8
 8026ade:	4350      	muls	r0, r2
 8026ae0:	fb08 0e0e 	mla	lr, r8, lr, r0
 8026ae4:	78a8      	ldrb	r0, [r5, #2]
 8026ae6:	fb0c e000 	mla	r0, ip, r0, lr
 8026aea:	f893 e002 	ldrb.w	lr, [r3, #2]
 8026aee:	fb06 0e0e 	mla	lr, r6, lr, r0
 8026af2:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 8026af6:	f894 e000 	ldrb.w	lr, [r4]
 8026afa:	fb02 fe0e 	mul.w	lr, r2, lr
 8026afe:	fb08 e909 	mla	r9, r8, r9, lr
 8026b02:	f895 e000 	ldrb.w	lr, [r5]
 8026b06:	fb0c 990e 	mla	r9, ip, lr, r9
 8026b0a:	f893 e000 	ldrb.w	lr, [r3]
 8026b0e:	785b      	ldrb	r3, [r3, #1]
 8026b10:	fb06 9e0e 	mla	lr, r6, lr, r9
 8026b14:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8026b18:	ea4e 0e00 	orr.w	lr, lr, r0
 8026b1c:	7860      	ldrb	r0, [r4, #1]
 8026b1e:	4350      	muls	r0, r2
 8026b20:	786a      	ldrb	r2, [r5, #1]
 8026b22:	fb08 0007 	mla	r0, r8, r7, r0
 8026b26:	fb0c 0202 	mla	r2, ip, r2, r0
 8026b2a:	fb06 2303 	mla	r3, r6, r3, r2
 8026b2e:	095b      	lsrs	r3, r3, #5
 8026b30:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8026b34:	ea4e 0303 	orr.w	r3, lr, r3
 8026b38:	800b      	strh	r3, [r1, #0]
 8026b3a:	b003      	add	sp, #12
 8026b3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026b40:	af01      	add	r7, sp, #4
 8026b42:	e78c      	b.n	8026a5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8026b44:	ac01      	add	r4, sp, #4
 8026b46:	4627      	mov	r7, r4
 8026b48:	e795      	b.n	8026a76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8026b4a:	ac01      	add	r4, sp, #4
 8026b4c:	e793      	b.n	8026a76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8026b4e:	ad01      	add	r5, sp, #4
 8026b50:	e7a1      	b.n	8026a96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8026b52:	ab01      	add	r3, sp, #4
 8026b54:	461d      	mov	r5, r3
 8026b56:	e7ab      	b.n	8026ab0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8026b58:	ab01      	add	r3, sp, #4
 8026b5a:	e7a9      	b.n	8026ab0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08026b5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026b5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026b60:	b08f      	sub	sp, #60	@ 0x3c
 8026b62:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 8026b66:	920c      	str	r2, [sp, #48]	@ 0x30
 8026b68:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 8026b6a:	910a      	str	r1, [sp, #40]	@ 0x28
 8026b6c:	9306      	str	r3, [sp, #24]
 8026b6e:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 8026b72:	900d      	str	r0, [sp, #52]	@ 0x34
 8026b74:	6850      	ldr	r0, [r2, #4]
 8026b76:	6812      	ldr	r2, [r2, #0]
 8026b78:	fb00 1303 	mla	r3, r0, r3, r1
 8026b7c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8026b80:	9307      	str	r3, [sp, #28]
 8026b82:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8026b84:	681b      	ldr	r3, [r3, #0]
 8026b86:	9308      	str	r3, [sp, #32]
 8026b88:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8026b8a:	685c      	ldr	r4, [r3, #4]
 8026b8c:	3404      	adds	r4, #4
 8026b8e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8026b90:	2b00      	cmp	r3, #0
 8026b92:	dc03      	bgt.n	8026b9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8026b94:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8026b96:	2b00      	cmp	r3, #0
 8026b98:	f340 81d6 	ble.w	8026f48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8026b9c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8026b9e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026ba2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026ba6:	1e48      	subs	r0, r1, #1
 8026ba8:	1e56      	subs	r6, r2, #1
 8026baa:	9b06      	ldr	r3, [sp, #24]
 8026bac:	2b00      	cmp	r3, #0
 8026bae:	f340 80b7 	ble.w	8026d20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8026bb2:	ea5f 472b 	movs.w	r7, fp, asr #16
 8026bb6:	ea4f 4325 	mov.w	r3, r5, asr #16
 8026bba:	d406      	bmi.n	8026bca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8026bbc:	4287      	cmp	r7, r0
 8026bbe:	da04      	bge.n	8026bca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8026bc0:	2b00      	cmp	r3, #0
 8026bc2:	db02      	blt.n	8026bca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8026bc4:	42b3      	cmp	r3, r6
 8026bc6:	f2c0 80ac 	blt.w	8026d22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8026bca:	3701      	adds	r7, #1
 8026bcc:	f100 809d 	bmi.w	8026d0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8026bd0:	42b9      	cmp	r1, r7
 8026bd2:	f2c0 809a 	blt.w	8026d0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8026bd6:	3301      	adds	r3, #1
 8026bd8:	f100 8097 	bmi.w	8026d0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8026bdc:	429a      	cmp	r2, r3
 8026bde:	f2c0 8094 	blt.w	8026d0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8026be2:	9b06      	ldr	r3, [sp, #24]
 8026be4:	930b      	str	r3, [sp, #44]	@ 0x2c
 8026be6:	9b07      	ldr	r3, [sp, #28]
 8026be8:	9309      	str	r3, [sp, #36]	@ 0x24
 8026bea:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8026bec:	2b00      	cmp	r3, #0
 8026bee:	f340 80b5 	ble.w	8026d5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8026bf2:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8026bf4:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8026bf6:	68c7      	ldr	r7, [r0, #12]
 8026bf8:	6892      	ldr	r2, [r2, #8]
 8026bfa:	ea5f 402b 	movs.w	r0, fp, asr #16
 8026bfe:	ea4f 4625 	mov.w	r6, r5, asr #16
 8026c02:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8026c06:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8026c0a:	f100 80fb 	bmi.w	8026e04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8026c0e:	f102 3cff 	add.w	ip, r2, #4294967295
 8026c12:	4560      	cmp	r0, ip
 8026c14:	f280 80f6 	bge.w	8026e04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8026c18:	2e00      	cmp	r6, #0
 8026c1a:	f2c0 80f3 	blt.w	8026e04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8026c1e:	f107 3cff 	add.w	ip, r7, #4294967295
 8026c22:	4566      	cmp	r6, ip
 8026c24:	f280 80ee 	bge.w	8026e04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8026c28:	b212      	sxth	r2, r2
 8026c2a:	fb06 0002 	mla	r0, r6, r2, r0
 8026c2e:	9e08      	ldr	r6, [sp, #32]
 8026c30:	1837      	adds	r7, r6, r0
 8026c32:	5c30      	ldrb	r0, [r6, r0]
 8026c34:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8026c38:	eb04 0c08 	add.w	ip, r4, r8
 8026c3c:	2b00      	cmp	r3, #0
 8026c3e:	f000 80d3 	beq.w	8026de8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8026c42:	787e      	ldrb	r6, [r7, #1]
 8026c44:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8026c48:	4426      	add	r6, r4
 8026c4a:	2900      	cmp	r1, #0
 8026c4c:	f000 80d4 	beq.w	8026df8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8026c50:	18b8      	adds	r0, r7, r2
 8026c52:	5cba      	ldrb	r2, [r7, r2]
 8026c54:	7840      	ldrb	r0, [r0, #1]
 8026c56:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026c5a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026c5e:	4422      	add	r2, r4
 8026c60:	4420      	add	r0, r4
 8026c62:	b29b      	uxth	r3, r3
 8026c64:	b289      	uxth	r1, r1
 8026c66:	fb03 f901 	mul.w	r9, r3, r1
 8026c6a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8026c6e:	011b      	lsls	r3, r3, #4
 8026c70:	b289      	uxth	r1, r1
 8026c72:	78b7      	ldrb	r7, [r6, #2]
 8026c74:	f89c a002 	ldrb.w	sl, [ip, #2]
 8026c78:	f89c c001 	ldrb.w	ip, [ip, #1]
 8026c7c:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8026c80:	eba3 0309 	sub.w	r3, r3, r9
 8026c84:	b29b      	uxth	r3, r3
 8026c86:	ebae 0e01 	sub.w	lr, lr, r1
 8026c8a:	fa1f fe8e 	uxth.w	lr, lr
 8026c8e:	435f      	muls	r7, r3
 8026c90:	fb0e 770a 	mla	r7, lr, sl, r7
 8026c94:	f892 a002 	ldrb.w	sl, [r2, #2]
 8026c98:	fb01 770a 	mla	r7, r1, sl, r7
 8026c9c:	f890 a002 	ldrb.w	sl, [r0, #2]
 8026ca0:	fb09 7a0a 	mla	sl, r9, sl, r7
 8026ca4:	f814 7008 	ldrb.w	r7, [r4, r8]
 8026ca8:	f896 8000 	ldrb.w	r8, [r6]
 8026cac:	7876      	ldrb	r6, [r6, #1]
 8026cae:	fb03 f808 	mul.w	r8, r3, r8
 8026cb2:	fb0e 8807 	mla	r8, lr, r7, r8
 8026cb6:	7817      	ldrb	r7, [r2, #0]
 8026cb8:	fb01 8807 	mla	r8, r1, r7, r8
 8026cbc:	7807      	ldrb	r7, [r0, #0]
 8026cbe:	fb09 8707 	mla	r7, r9, r7, r8
 8026cc2:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 8026cc6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8026cca:	ea47 070a 	orr.w	r7, r7, sl
 8026cce:	4373      	muls	r3, r6
 8026cd0:	f892 a001 	ldrb.w	sl, [r2, #1]
 8026cd4:	fb0e 330c 	mla	r3, lr, ip, r3
 8026cd8:	fb01 310a 	mla	r1, r1, sl, r3
 8026cdc:	f890 a001 	ldrb.w	sl, [r0, #1]
 8026ce0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026ce2:	fb09 1a0a 	mla	sl, r9, sl, r1
 8026ce6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8026cea:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8026cee:	ea47 070a 	orr.w	r7, r7, sl
 8026cf2:	801f      	strh	r7, [r3, #0]
 8026cf4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026cf6:	3302      	adds	r3, #2
 8026cf8:	9309      	str	r3, [sp, #36]	@ 0x24
 8026cfa:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8026cfc:	449b      	add	fp, r3
 8026cfe:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8026d00:	441d      	add	r5, r3
 8026d02:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8026d04:	3b01      	subs	r3, #1
 8026d06:	930b      	str	r3, [sp, #44]	@ 0x2c
 8026d08:	e76f      	b.n	8026bea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8026d0a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8026d0c:	449b      	add	fp, r3
 8026d0e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8026d10:	441d      	add	r5, r3
 8026d12:	9b06      	ldr	r3, [sp, #24]
 8026d14:	3b01      	subs	r3, #1
 8026d16:	9306      	str	r3, [sp, #24]
 8026d18:	9b07      	ldr	r3, [sp, #28]
 8026d1a:	3302      	adds	r3, #2
 8026d1c:	9307      	str	r3, [sp, #28]
 8026d1e:	e744      	b.n	8026baa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8026d20:	d023      	beq.n	8026d6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8026d22:	9b06      	ldr	r3, [sp, #24]
 8026d24:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8026d26:	3b01      	subs	r3, #1
 8026d28:	fb00 b003 	mla	r0, r0, r3, fp
 8026d2c:	1400      	asrs	r0, r0, #16
 8026d2e:	f53f af58 	bmi.w	8026be2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8026d32:	3901      	subs	r1, #1
 8026d34:	4288      	cmp	r0, r1
 8026d36:	f6bf af54 	bge.w	8026be2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8026d3a:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8026d3c:	fb01 5303 	mla	r3, r1, r3, r5
 8026d40:	141b      	asrs	r3, r3, #16
 8026d42:	f53f af4e 	bmi.w	8026be2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8026d46:	3a01      	subs	r2, #1
 8026d48:	4293      	cmp	r3, r2
 8026d4a:	f6bf af4a 	bge.w	8026be2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8026d4e:	9b06      	ldr	r3, [sp, #24]
 8026d50:	9309      	str	r3, [sp, #36]	@ 0x24
 8026d52:	9b07      	ldr	r3, [sp, #28]
 8026d54:	930b      	str	r3, [sp, #44]	@ 0x2c
 8026d56:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026d58:	2b00      	cmp	r3, #0
 8026d5a:	dc70      	bgt.n	8026e3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8026d5c:	9b06      	ldr	r3, [sp, #24]
 8026d5e:	9a07      	ldr	r2, [sp, #28]
 8026d60:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8026d64:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8026d68:	9307      	str	r3, [sp, #28]
 8026d6a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8026d6c:	2b00      	cmp	r3, #0
 8026d6e:	f340 80eb 	ble.w	8026f48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8026d72:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026d76:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8026d7a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026d7e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8026d80:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026d84:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026d88:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026d8c:	eef0 6a62 	vmov.f32	s13, s5
 8026d90:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026d94:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026d98:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026d9c:	ee16 ba90 	vmov	fp, s13
 8026da0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026da4:	eef0 6a43 	vmov.f32	s13, s6
 8026da8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026dac:	ee12 2a90 	vmov	r2, s5
 8026db0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026db4:	fb92 f3f3 	sdiv	r3, r2, r3
 8026db8:	ee13 2a10 	vmov	r2, s6
 8026dbc:	931b      	str	r3, [sp, #108]	@ 0x6c
 8026dbe:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8026dc0:	fb92 f3f3 	sdiv	r3, r2, r3
 8026dc4:	931c      	str	r3, [sp, #112]	@ 0x70
 8026dc6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8026dc8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8026dca:	3b01      	subs	r3, #1
 8026dcc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026dd0:	930a      	str	r3, [sp, #40]	@ 0x28
 8026dd2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8026dd4:	bf08      	it	eq
 8026dd6:	4613      	moveq	r3, r2
 8026dd8:	ee16 5a90 	vmov	r5, s13
 8026ddc:	9306      	str	r3, [sp, #24]
 8026dde:	eeb0 3a67 	vmov.f32	s6, s15
 8026de2:	eef0 2a47 	vmov.f32	s5, s14
 8026de6:	e6d2      	b.n	8026b8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8026de8:	b149      	cbz	r1, 8026dfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8026dea:	5cba      	ldrb	r2, [r7, r2]
 8026dec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026df0:	4422      	add	r2, r4
 8026df2:	4660      	mov	r0, ip
 8026df4:	4666      	mov	r6, ip
 8026df6:	e734      	b.n	8026c62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8026df8:	4660      	mov	r0, ip
 8026dfa:	4662      	mov	r2, ip
 8026dfc:	e731      	b.n	8026c62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8026dfe:	4660      	mov	r0, ip
 8026e00:	4662      	mov	r2, ip
 8026e02:	e7f7      	b.n	8026df4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8026e04:	f110 0c01 	adds.w	ip, r0, #1
 8026e08:	f53f af74 	bmi.w	8026cf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8026e0c:	4562      	cmp	r2, ip
 8026e0e:	f6ff af71 	blt.w	8026cf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8026e12:	f116 0c01 	adds.w	ip, r6, #1
 8026e16:	f53f af6d 	bmi.w	8026cf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8026e1a:	4567      	cmp	r7, ip
 8026e1c:	f6ff af6a 	blt.w	8026cf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8026e20:	b23f      	sxth	r7, r7
 8026e22:	b212      	sxth	r2, r2
 8026e24:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8026e28:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8026e2c:	9200      	str	r2, [sp, #0]
 8026e2e:	9701      	str	r7, [sp, #4]
 8026e30:	4623      	mov	r3, r4
 8026e32:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8026e36:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8026e38:	f7ff fde6 	bl	8026a08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8026e3c:	e75a      	b.n	8026cf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8026e3e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8026e40:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8026e44:	ea4f 462b 	mov.w	r6, fp, asr #16
 8026e48:	1428      	asrs	r0, r5, #16
 8026e4a:	fb02 6000 	mla	r0, r2, r0, r6
 8026e4e:	9e08      	ldr	r6, [sp, #32]
 8026e50:	f816 8000 	ldrb.w	r8, [r6, r0]
 8026e54:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8026e58:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8026e5c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8026e60:	1837      	adds	r7, r6, r0
 8026e62:	eb04 0c08 	add.w	ip, r4, r8
 8026e66:	2b00      	cmp	r3, #0
 8026e68:	d060      	beq.n	8026f2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8026e6a:	787e      	ldrb	r6, [r7, #1]
 8026e6c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8026e70:	4426      	add	r6, r4
 8026e72:	2900      	cmp	r1, #0
 8026e74:	d062      	beq.n	8026f3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8026e76:	18b8      	adds	r0, r7, r2
 8026e78:	5cba      	ldrb	r2, [r7, r2]
 8026e7a:	7840      	ldrb	r0, [r0, #1]
 8026e7c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026e80:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026e84:	4422      	add	r2, r4
 8026e86:	4420      	add	r0, r4
 8026e88:	b29b      	uxth	r3, r3
 8026e8a:	b289      	uxth	r1, r1
 8026e8c:	fb03 f901 	mul.w	r9, r3, r1
 8026e90:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8026e94:	011b      	lsls	r3, r3, #4
 8026e96:	b289      	uxth	r1, r1
 8026e98:	78b7      	ldrb	r7, [r6, #2]
 8026e9a:	f89c a002 	ldrb.w	sl, [ip, #2]
 8026e9e:	f89c c001 	ldrb.w	ip, [ip, #1]
 8026ea2:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8026ea6:	eba3 0309 	sub.w	r3, r3, r9
 8026eaa:	b29b      	uxth	r3, r3
 8026eac:	ebae 0e01 	sub.w	lr, lr, r1
 8026eb0:	fa1f fe8e 	uxth.w	lr, lr
 8026eb4:	435f      	muls	r7, r3
 8026eb6:	fb0e 770a 	mla	r7, lr, sl, r7
 8026eba:	f892 a002 	ldrb.w	sl, [r2, #2]
 8026ebe:	fb01 770a 	mla	r7, r1, sl, r7
 8026ec2:	f890 a002 	ldrb.w	sl, [r0, #2]
 8026ec6:	fb09 7a0a 	mla	sl, r9, sl, r7
 8026eca:	f814 7008 	ldrb.w	r7, [r4, r8]
 8026ece:	f896 8000 	ldrb.w	r8, [r6]
 8026ed2:	7876      	ldrb	r6, [r6, #1]
 8026ed4:	fb03 f808 	mul.w	r8, r3, r8
 8026ed8:	fb0e 8807 	mla	r8, lr, r7, r8
 8026edc:	7817      	ldrb	r7, [r2, #0]
 8026ede:	fb01 8807 	mla	r8, r1, r7, r8
 8026ee2:	7807      	ldrb	r7, [r0, #0]
 8026ee4:	fb09 8707 	mla	r7, r9, r7, r8
 8026ee8:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 8026eec:	4373      	muls	r3, r6
 8026eee:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8026ef2:	7856      	ldrb	r6, [r2, #1]
 8026ef4:	ea47 070a 	orr.w	r7, r7, sl
 8026ef8:	fb0e 330c 	mla	r3, lr, ip, r3
 8026efc:	f890 a001 	ldrb.w	sl, [r0, #1]
 8026f00:	fb01 3306 	mla	r3, r1, r6, r3
 8026f04:	fb09 3a0a 	mla	sl, r9, sl, r3
 8026f08:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8026f0c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8026f0e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8026f12:	ea47 070a 	orr.w	r7, r7, sl
 8026f16:	f823 7b02 	strh.w	r7, [r3], #2
 8026f1a:	930b      	str	r3, [sp, #44]	@ 0x2c
 8026f1c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8026f1e:	449b      	add	fp, r3
 8026f20:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8026f22:	441d      	add	r5, r3
 8026f24:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026f26:	3b01      	subs	r3, #1
 8026f28:	9309      	str	r3, [sp, #36]	@ 0x24
 8026f2a:	e714      	b.n	8026d56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8026f2c:	b149      	cbz	r1, 8026f42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8026f2e:	5cba      	ldrb	r2, [r7, r2]
 8026f30:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026f34:	4422      	add	r2, r4
 8026f36:	4660      	mov	r0, ip
 8026f38:	4666      	mov	r6, ip
 8026f3a:	e7a5      	b.n	8026e88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8026f3c:	4660      	mov	r0, ip
 8026f3e:	4662      	mov	r2, ip
 8026f40:	e7a2      	b.n	8026e88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8026f42:	4660      	mov	r0, ip
 8026f44:	4662      	mov	r2, ip
 8026f46:	e7f7      	b.n	8026f38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8026f48:	b00f      	add	sp, #60	@ 0x3c
 8026f4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026f4e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8026f4e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026f52:	b085      	sub	sp, #20
 8026f54:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 8026f58:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 8026f5c:	9102      	str	r1, [sp, #8]
 8026f5e:	2c00      	cmp	r4, #0
 8026f60:	fb04 710c 	mla	r1, r4, ip, r7
 8026f64:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 8026f68:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 8026f6c:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 8026f70:	eb02 0e01 	add.w	lr, r2, r1
 8026f74:	f2c0 8122 	blt.w	80271bc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8026f78:	45a0      	cmp	r8, r4
 8026f7a:	f340 811f 	ble.w	80271bc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8026f7e:	2f00      	cmp	r7, #0
 8026f80:	f2c0 811a 	blt.w	80271b8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8026f84:	45bc      	cmp	ip, r7
 8026f86:	f340 8117 	ble.w	80271b8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8026f8a:	5c52      	ldrb	r2, [r2, r1]
 8026f8c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8026f90:	1c7a      	adds	r2, r7, #1
 8026f92:	f100 8116 	bmi.w	80271c2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8026f96:	4594      	cmp	ip, r2
 8026f98:	f340 8113 	ble.w	80271c2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8026f9c:	2e00      	cmp	r6, #0
 8026f9e:	f000 8112 	beq.w	80271c6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8026fa2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8026fa6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8026faa:	3401      	adds	r4, #1
 8026fac:	f100 810f 	bmi.w	80271ce <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8026fb0:	45a0      	cmp	r8, r4
 8026fb2:	f340 810c 	ble.w	80271ce <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8026fb6:	2800      	cmp	r0, #0
 8026fb8:	f000 810c 	beq.w	80271d4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8026fbc:	2f00      	cmp	r7, #0
 8026fbe:	f2c0 8104 	blt.w	80271ca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8026fc2:	45bc      	cmp	ip, r7
 8026fc4:	f340 8101 	ble.w	80271ca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8026fc8:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8026fcc:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8026fd0:	3701      	adds	r7, #1
 8026fd2:	f100 8102 	bmi.w	80271da <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8026fd6:	45bc      	cmp	ip, r7
 8026fd8:	f340 80ff 	ble.w	80271da <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8026fdc:	2e00      	cmp	r6, #0
 8026fde:	f000 80fe 	beq.w	80271de <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8026fe2:	44f4      	add	ip, lr
 8026fe4:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8026fe8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8026fec:	b2b6      	uxth	r6, r6
 8026fee:	b280      	uxth	r0, r0
 8026ff0:	fb00 fe06 	mul.w	lr, r0, r6
 8026ff4:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8026ff8:	0136      	lsls	r6, r6, #4
 8026ffa:	eba6 070e 	sub.w	r7, r6, lr
 8026ffe:	b280      	uxth	r0, r0
 8027000:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8027004:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8027008:	b2bf      	uxth	r7, r7
 802700a:	1a1b      	subs	r3, r3, r0
 802700c:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8027010:	b29b      	uxth	r3, r3
 8027012:	fb0a f607 	mul.w	r6, sl, r7
 8027016:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802701a:	fb0b 6603 	mla	r6, fp, r3, r6
 802701e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8027022:	fb00 6609 	mla	r6, r0, r9, r6
 8027026:	fb0e 6608 	mla	r6, lr, r8, r6
 802702a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802702e:	9600      	str	r6, [sp, #0]
 8027030:	2e00      	cmp	r6, #0
 8027032:	f000 80be 	beq.w	80271b2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8027036:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802703a:	fb0b fc0c 	mul.w	ip, fp, ip
 802703e:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8027042:	fb0b f505 	mul.w	r5, fp, r5
 8027046:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802704a:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802704e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8027052:	44dc      	add	ip, fp
 8027054:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027058:	9501      	str	r5, [sp, #4]
 802705a:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 802705e:	9503      	str	r5, [sp, #12]
 8027060:	9d01      	ldr	r5, [sp, #4]
 8027062:	9e02      	ldr	r6, [sp, #8]
 8027064:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8027068:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802706c:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8027070:	fb0a fc0c 	mul.w	ip, sl, ip
 8027074:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8027078:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802707c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8027080:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8027084:	4465      	add	r5, ip
 8027086:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 802708a:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802708e:	fb09 fc0c 	mul.w	ip, r9, ip
 8027092:	fb09 f904 	mul.w	r9, r9, r4
 8027096:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 802709a:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 802709e:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 80270a2:	fb08 f404 	mul.w	r4, r8, r4
 80270a6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80270aa:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80270ae:	fb08 f802 	mul.w	r8, r8, r2
 80270b2:	fb0a fa01 	mul.w	sl, sl, r1
 80270b6:	0a22      	lsrs	r2, r4, #8
 80270b8:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 80270bc:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80270c0:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 80270c4:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80270c8:	4414      	add	r4, r2
 80270ca:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80270ce:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 80270d2:	0a2d      	lsrs	r5, r5, #8
 80270d4:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80270d8:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80270dc:	9a03      	ldr	r2, [sp, #12]
 80270de:	8836      	ldrh	r6, [r6, #0]
 80270e0:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80270e4:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80270e8:	437d      	muls	r5, r7
 80270ea:	4461      	add	r1, ip
 80270ec:	0a24      	lsrs	r4, r4, #8
 80270ee:	fb02 5503 	mla	r5, r2, r3, r5
 80270f2:	0a09      	lsrs	r1, r1, #8
 80270f4:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 80270f8:	fb04 540e 	mla	r4, r4, lr, r5
 80270fc:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8027100:	fb01 4100 	mla	r1, r1, r0, r4
 8027104:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027108:	0a09      	lsrs	r1, r1, #8
 802710a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802710e:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8027112:	fb07 f70a 	mul.w	r7, r7, sl
 8027116:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802711a:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 802711e:	fb03 7101 	mla	r1, r3, r1, r7
 8027122:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027126:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802712a:	fb0e 1e08 	mla	lr, lr, r8, r1
 802712e:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8027132:	fb00 e101 	mla	r1, r0, r1, lr
 8027136:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 802713a:	9a00      	ldr	r2, [sp, #0]
 802713c:	b287      	uxth	r7, r0
 802713e:	437a      	muls	r2, r7
 8027140:	0a09      	lsrs	r1, r1, #8
 8027142:	1c53      	adds	r3, r2, #1
 8027144:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8027148:	4321      	orrs	r1, r4
 802714a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802714e:	1235      	asrs	r5, r6, #8
 8027150:	0c0a      	lsrs	r2, r1, #16
 8027152:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8027156:	b2db      	uxtb	r3, r3
 8027158:	fb12 f207 	smulbb	r2, r2, r7
 802715c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8027160:	fb05 2503 	mla	r5, r5, r3, r2
 8027164:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8027168:	10f2      	asrs	r2, r6, #3
 802716a:	b2c8      	uxtb	r0, r1
 802716c:	00f6      	lsls	r6, r6, #3
 802716e:	fb14 f407 	smulbb	r4, r4, r7
 8027172:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8027176:	b2f6      	uxtb	r6, r6
 8027178:	fb10 f007 	smulbb	r0, r0, r7
 802717c:	fb02 4203 	mla	r2, r2, r3, r4
 8027180:	b2ad      	uxth	r5, r5
 8027182:	fb06 0303 	mla	r3, r6, r3, r0
 8027186:	b299      	uxth	r1, r3
 8027188:	b294      	uxth	r4, r2
 802718a:	1c6b      	adds	r3, r5, #1
 802718c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8027190:	1c62      	adds	r2, r4, #1
 8027192:	1c4b      	adds	r3, r1, #1
 8027194:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8027198:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 802719c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80271a0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80271a4:	0952      	lsrs	r2, r2, #5
 80271a6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80271aa:	432b      	orrs	r3, r5
 80271ac:	4313      	orrs	r3, r2
 80271ae:	9a02      	ldr	r2, [sp, #8]
 80271b0:	8013      	strh	r3, [r2, #0]
 80271b2:	b005      	add	sp, #20
 80271b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80271b8:	2500      	movs	r5, #0
 80271ba:	e6e9      	b.n	8026f90 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 80271bc:	2100      	movs	r1, #0
 80271be:	460d      	mov	r5, r1
 80271c0:	e6f3      	b.n	8026faa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80271c2:	2100      	movs	r1, #0
 80271c4:	e6f1      	b.n	8026faa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80271c6:	4631      	mov	r1, r6
 80271c8:	e6ef      	b.n	8026faa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80271ca:	2400      	movs	r4, #0
 80271cc:	e700      	b.n	8026fd0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 80271ce:	2200      	movs	r2, #0
 80271d0:	4614      	mov	r4, r2
 80271d2:	e70b      	b.n	8026fec <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80271d4:	4602      	mov	r2, r0
 80271d6:	4604      	mov	r4, r0
 80271d8:	e708      	b.n	8026fec <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80271da:	2200      	movs	r2, #0
 80271dc:	e706      	b.n	8026fec <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80271de:	4632      	mov	r2, r6
 80271e0:	e704      	b.n	8026fec <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

080271e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80271e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80271e6:	b09f      	sub	sp, #124	@ 0x7c
 80271e8:	921b      	str	r2, [sp, #108]	@ 0x6c
 80271ea:	9309      	str	r3, [sp, #36]	@ 0x24
 80271ec:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 80271ee:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 80271f2:	931c      	str	r3, [sp, #112]	@ 0x70
 80271f4:	9119      	str	r1, [sp, #100]	@ 0x64
 80271f6:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 80271fa:	901d      	str	r0, [sp, #116]	@ 0x74
 80271fc:	6850      	ldr	r0, [r2, #4]
 80271fe:	6812      	ldr	r2, [r2, #0]
 8027200:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8027202:	fb00 1303 	mla	r3, r0, r3, r1
 8027206:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802720a:	930c      	str	r3, [sp, #48]	@ 0x30
 802720c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 802720e:	681b      	ldr	r3, [r3, #0]
 8027210:	9312      	str	r3, [sp, #72]	@ 0x48
 8027212:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8027214:	685e      	ldr	r6, [r3, #4]
 8027216:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 802721a:	930d      	str	r3, [sp, #52]	@ 0x34
 802721c:	3604      	adds	r6, #4
 802721e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8027220:	2b00      	cmp	r3, #0
 8027222:	dc03      	bgt.n	802722c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8027224:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8027226:	2b00      	cmp	r3, #0
 8027228:	f340 8388 	ble.w	802793c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 802722c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 802722e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027232:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027236:	1e48      	subs	r0, r1, #1
 8027238:	1e57      	subs	r7, r2, #1
 802723a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802723c:	2b00      	cmp	r3, #0
 802723e:	f340 8195 	ble.w	802756c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8027242:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8027244:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8027248:	ea4f 4325 	mov.w	r3, r5, asr #16
 802724c:	d406      	bmi.n	802725c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802724e:	4584      	cmp	ip, r0
 8027250:	da04      	bge.n	802725c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8027252:	2b00      	cmp	r3, #0
 8027254:	db02      	blt.n	802725c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8027256:	42bb      	cmp	r3, r7
 8027258:	f2c0 8189 	blt.w	802756e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 802725c:	f11c 0c01 	adds.w	ip, ip, #1
 8027260:	f100 8177 	bmi.w	8027552 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8027264:	4561      	cmp	r1, ip
 8027266:	f2c0 8174 	blt.w	8027552 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802726a:	3301      	adds	r3, #1
 802726c:	f100 8171 	bmi.w	8027552 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8027270:	429a      	cmp	r2, r3
 8027272:	f2c0 816e 	blt.w	8027552 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8027276:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8027278:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 802727a:	931a      	str	r3, [sp, #104]	@ 0x68
 802727c:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 802727e:	2b00      	cmp	r3, #0
 8027280:	f340 8193 	ble.w	80275aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8027284:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8027286:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802728a:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 802728c:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8027290:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8027292:	141b      	asrs	r3, r3, #16
 8027294:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8027298:	f3c5 3103 	ubfx	r1, r5, #12, #4
 802729c:	f100 81d6 	bmi.w	802764c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80272a0:	f100 38ff 	add.w	r8, r0, #4294967295
 80272a4:	4543      	cmp	r3, r8
 80272a6:	f280 81d1 	bge.w	802764c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80272aa:	f1bc 0f00 	cmp.w	ip, #0
 80272ae:	f2c0 81cd 	blt.w	802764c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80272b2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80272b6:	45c4      	cmp	ip, r8
 80272b8:	f280 81c8 	bge.w	802764c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80272bc:	b200      	sxth	r0, r0
 80272be:	fb0c 3300 	mla	r3, ip, r0, r3
 80272c2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80272c4:	eb04 0803 	add.w	r8, r4, r3
 80272c8:	5ce3      	ldrb	r3, [r4, r3]
 80272ca:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80272ce:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80272d2:	2a00      	cmp	r2, #0
 80272d4:	f000 81af 	beq.w	8027636 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80272d8:	f898 c001 	ldrb.w	ip, [r8, #1]
 80272dc:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80272e0:	940e      	str	r4, [sp, #56]	@ 0x38
 80272e2:	0e24      	lsrs	r4, r4, #24
 80272e4:	9415      	str	r4, [sp, #84]	@ 0x54
 80272e6:	b179      	cbz	r1, 8027308 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80272e8:	eb08 0c00 	add.w	ip, r8, r0
 80272ec:	f818 0000 	ldrb.w	r0, [r8, r0]
 80272f0:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80272f4:	900a      	str	r0, [sp, #40]	@ 0x28
 80272f6:	0e00      	lsrs	r0, r0, #24
 80272f8:	9013      	str	r0, [sp, #76]	@ 0x4c
 80272fa:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80272fe:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8027302:	900f      	str	r0, [sp, #60]	@ 0x3c
 8027304:	0e00      	lsrs	r0, r0, #24
 8027306:	9016      	str	r0, [sp, #88]	@ 0x58
 8027308:	b292      	uxth	r2, r2
 802730a:	b289      	uxth	r1, r1
 802730c:	fb02 f901 	mul.w	r9, r2, r1
 8027310:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8027314:	0112      	lsls	r2, r2, #4
 8027316:	eba2 0809 	sub.w	r8, r2, r9
 802731a:	b289      	uxth	r1, r1
 802731c:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8027320:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8027322:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8027324:	fa1f f888 	uxth.w	r8, r8
 8027328:	1a52      	subs	r2, r2, r1
 802732a:	b292      	uxth	r2, r2
 802732c:	fb08 f000 	mul.w	r0, r8, r0
 8027330:	fb02 000e 	mla	r0, r2, lr, r0
 8027334:	fb01 0004 	mla	r0, r1, r4, r0
 8027338:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 802733a:	fb09 0004 	mla	r0, r9, r4, r0
 802733e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8027342:	2800      	cmp	r0, #0
 8027344:	f000 80fa 	beq.w	802753c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8027348:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802734c:	d01b      	beq.n	8027386 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802734e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8027352:	fb0e fa0a 	mul.w	sl, lr, sl
 8027356:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802735a:	fb0e fe03 	mul.w	lr, lr, r3
 802735e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8027362:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8027366:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802736a:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 802736e:	4453      	add	r3, sl
 8027370:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8027374:	0a1b      	lsrs	r3, r3, #8
 8027376:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802737a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802737e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8027382:	ea43 030c 	orr.w	r3, r3, ip
 8027386:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8027388:	2cff      	cmp	r4, #255	@ 0xff
 802738a:	d021      	beq.n	80273d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802738c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802738e:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8027392:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8027394:	fb04 fb0b 	mul.w	fp, r4, fp
 8027398:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802739a:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 802739e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80273a0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80273a4:	fb04 fa0a 	mul.w	sl, r4, sl
 80273a8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80273ac:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80273b0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80273b4:	44de      	add	lr, fp
 80273b6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80273ba:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80273be:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80273c2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80273c6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80273ca:	ea4e 040a 	orr.w	r4, lr, sl
 80273ce:	940e      	str	r4, [sp, #56]	@ 0x38
 80273d0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80273d2:	2cff      	cmp	r4, #255	@ 0xff
 80273d4:	d021      	beq.n	802741a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80273d6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80273d8:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 80273dc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80273de:	fb04 fb0b 	mul.w	fp, r4, fp
 80273e2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80273e4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80273e8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80273ea:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80273ee:	fb04 fa0a 	mul.w	sl, r4, sl
 80273f2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80273f6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80273fa:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80273fe:	44de      	add	lr, fp
 8027400:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027404:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027408:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802740c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8027410:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8027414:	ea4e 040a 	orr.w	r4, lr, sl
 8027418:	940a      	str	r4, [sp, #40]	@ 0x28
 802741a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 802741c:	2cff      	cmp	r4, #255	@ 0xff
 802741e:	d021      	beq.n	8027464 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8027420:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8027422:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8027426:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8027428:	fb04 fb0b 	mul.w	fp, r4, fp
 802742c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802742e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8027432:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8027434:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027438:	fb04 fa0a 	mul.w	sl, r4, sl
 802743c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8027440:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8027444:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8027448:	44de      	add	lr, fp
 802744a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802744e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027452:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027456:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802745a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802745e:	ea4e 040a 	orr.w	r4, lr, sl
 8027462:	940f      	str	r4, [sp, #60]	@ 0x3c
 8027464:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8027466:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 802746a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802746c:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 8027470:	fb08 fc0c 	mul.w	ip, r8, ip
 8027474:	fb02 cc0e 	mla	ip, r2, lr, ip
 8027478:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 802747c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802747e:	fb01 cc0e 	mla	ip, r1, lr, ip
 8027482:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8027486:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8027488:	fb09 cc0e 	mla	ip, r9, lr, ip
 802748c:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 8027490:	fb08 f80e 	mul.w	r8, r8, lr
 8027494:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8027498:	fb02 8303 	mla	r3, r2, r3, r8
 802749c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802749e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80274a0:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 80274a4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80274a6:	fb01 330a 	mla	r3, r1, sl, r3
 80274aa:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 80274ae:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80274b0:	fb09 3901 	mla	r9, r9, r1, r3
 80274b4:	4342      	muls	r2, r0
 80274b6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80274ba:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80274be:	883b      	ldrh	r3, [r7, #0]
 80274c0:	1c50      	adds	r0, r2, #1
 80274c2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80274c6:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 80274ca:	ea4c 0c09 	orr.w	ip, ip, r9
 80274ce:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80274d2:	1219      	asrs	r1, r3, #8
 80274d4:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80274d8:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80274dc:	b2c0      	uxtb	r0, r0
 80274de:	fb12 f204 	smulbb	r2, r2, r4
 80274e2:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80274e6:	fb01 2100 	mla	r1, r1, r0, r2
 80274ea:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80274ee:	10da      	asrs	r2, r3, #3
 80274f0:	fa5f fc8c 	uxtb.w	ip, ip
 80274f4:	00db      	lsls	r3, r3, #3
 80274f6:	fb1c fc04 	smulbb	ip, ip, r4
 80274fa:	b2db      	uxtb	r3, r3
 80274fc:	b289      	uxth	r1, r1
 80274fe:	fb03 c300 	mla	r3, r3, r0, ip
 8027502:	fa1f fc83 	uxth.w	ip, r3
 8027506:	1c4b      	adds	r3, r1, #1
 8027508:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802750c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8027510:	fb1e fe04 	smulbb	lr, lr, r4
 8027514:	f10c 0301 	add.w	r3, ip, #1
 8027518:	fb02 e200 	mla	r2, r2, r0, lr
 802751c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8027520:	b292      	uxth	r2, r2
 8027522:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8027526:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802752a:	430b      	orrs	r3, r1
 802752c:	1c51      	adds	r1, r2, #1
 802752e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8027532:	0952      	lsrs	r2, r2, #5
 8027534:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8027538:	4313      	orrs	r3, r2
 802753a:	803b      	strh	r3, [r7, #0]
 802753c:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 802753e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8027540:	441a      	add	r2, r3
 8027542:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8027544:	9229      	str	r2, [sp, #164]	@ 0xa4
 8027546:	441d      	add	r5, r3
 8027548:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 802754a:	3b01      	subs	r3, #1
 802754c:	3702      	adds	r7, #2
 802754e:	931a      	str	r3, [sp, #104]	@ 0x68
 8027550:	e694      	b.n	802727c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8027552:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8027554:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8027556:	441c      	add	r4, r3
 8027558:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802755a:	9429      	str	r4, [sp, #164]	@ 0xa4
 802755c:	441d      	add	r5, r3
 802755e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8027560:	3b01      	subs	r3, #1
 8027562:	9309      	str	r3, [sp, #36]	@ 0x24
 8027564:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8027566:	3302      	adds	r3, #2
 8027568:	930c      	str	r3, [sp, #48]	@ 0x30
 802756a:	e666      	b.n	802723a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802756c:	d024      	beq.n	80275b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 802756e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8027570:	982b      	ldr	r0, [sp, #172]	@ 0xac
 8027572:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8027574:	3b01      	subs	r3, #1
 8027576:	fb00 4003 	mla	r0, r0, r3, r4
 802757a:	1400      	asrs	r0, r0, #16
 802757c:	f53f ae7b 	bmi.w	8027276 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8027580:	3901      	subs	r1, #1
 8027582:	4288      	cmp	r0, r1
 8027584:	f6bf ae77 	bge.w	8027276 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8027588:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 802758a:	fb01 5303 	mla	r3, r1, r3, r5
 802758e:	141b      	asrs	r3, r3, #16
 8027590:	f53f ae71 	bmi.w	8027276 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8027594:	3a01      	subs	r2, #1
 8027596:	4293      	cmp	r3, r2
 8027598:	f6bf ae6d 	bge.w	8027276 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802759c:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 80275a0:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 80275a4:	f1bb 0f00 	cmp.w	fp, #0
 80275a8:	dc70      	bgt.n	802768c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 80275aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80275ac:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80275b0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80275b2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80275b6:	930c      	str	r3, [sp, #48]	@ 0x30
 80275b8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80275ba:	2b00      	cmp	r3, #0
 80275bc:	f340 81be 	ble.w	802793c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80275c0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80275c4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80275c8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80275cc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80275ce:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80275d2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80275d6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80275da:	eef0 6a62 	vmov.f32	s13, s5
 80275de:	ee61 7a27 	vmul.f32	s15, s2, s15
 80275e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80275e6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80275ea:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 80275ee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80275f2:	eef0 6a43 	vmov.f32	s13, s6
 80275f6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80275fa:	ee12 2a90 	vmov	r2, s5
 80275fe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8027602:	fb92 f3f3 	sdiv	r3, r2, r3
 8027606:	ee13 2a10 	vmov	r2, s6
 802760a:	932b      	str	r3, [sp, #172]	@ 0xac
 802760c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802760e:	fb92 f3f3 	sdiv	r3, r2, r3
 8027612:	932c      	str	r3, [sp, #176]	@ 0xb0
 8027614:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8027616:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8027618:	3b01      	subs	r3, #1
 802761a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802761e:	9319      	str	r3, [sp, #100]	@ 0x64
 8027620:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8027622:	bf08      	it	eq
 8027624:	4613      	moveq	r3, r2
 8027626:	ee16 5a90 	vmov	r5, s13
 802762a:	9309      	str	r3, [sp, #36]	@ 0x24
 802762c:	eeb0 3a67 	vmov.f32	s6, s15
 8027630:	eef0 2a47 	vmov.f32	s5, s14
 8027634:	e5f3      	b.n	802721e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8027636:	2900      	cmp	r1, #0
 8027638:	f43f ae66 	beq.w	8027308 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 802763c:	f818 0000 	ldrb.w	r0, [r8, r0]
 8027640:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8027644:	900a      	str	r0, [sp, #40]	@ 0x28
 8027646:	0e00      	lsrs	r0, r0, #24
 8027648:	9013      	str	r0, [sp, #76]	@ 0x4c
 802764a:	e65d      	b.n	8027308 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 802764c:	f113 0801 	adds.w	r8, r3, #1
 8027650:	f53f af74 	bmi.w	802753c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8027654:	4540      	cmp	r0, r8
 8027656:	f6ff af71 	blt.w	802753c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802765a:	f11c 0801 	adds.w	r8, ip, #1
 802765e:	f53f af6d 	bmi.w	802753c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8027662:	45c6      	cmp	lr, r8
 8027664:	f6ff af6a 	blt.w	802753c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8027668:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 802766a:	9302      	str	r3, [sp, #8]
 802766c:	b200      	sxth	r0, r0
 802766e:	fa0f f38e 	sxth.w	r3, lr
 8027672:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8027676:	e9cd c203 	strd	ip, r2, [sp, #12]
 802767a:	9301      	str	r3, [sp, #4]
 802767c:	9000      	str	r0, [sp, #0]
 802767e:	4633      	mov	r3, r6
 8027680:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8027682:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8027684:	4639      	mov	r1, r7
 8027686:	f7ff fc62 	bl	8026f4e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 802768a:	e757      	b.n	802753c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802768c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802768e:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8027690:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8027694:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8027696:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802769a:	1427      	asrs	r7, r4, #16
 802769c:	142b      	asrs	r3, r5, #16
 802769e:	fb01 7303 	mla	r3, r1, r3, r7
 80276a2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80276a4:	18e7      	adds	r7, r4, r3
 80276a6:	5ce3      	ldrb	r3, [r4, r3]
 80276a8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80276ac:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80276b0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80276b4:	2a00      	cmp	r2, #0
 80276b6:	f000 8137 	beq.w	8027928 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80276ba:	f897 e001 	ldrb.w	lr, [r7, #1]
 80276be:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80276c2:	9410      	str	r4, [sp, #64]	@ 0x40
 80276c4:	0e24      	lsrs	r4, r4, #24
 80276c6:	9417      	str	r4, [sp, #92]	@ 0x5c
 80276c8:	b170      	cbz	r0, 80276e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80276ca:	eb07 0e01 	add.w	lr, r7, r1
 80276ce:	5c79      	ldrb	r1, [r7, r1]
 80276d0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80276d4:	910b      	str	r1, [sp, #44]	@ 0x2c
 80276d6:	0e09      	lsrs	r1, r1, #24
 80276d8:	9114      	str	r1, [sp, #80]	@ 0x50
 80276da:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80276de:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80276e2:	9111      	str	r1, [sp, #68]	@ 0x44
 80276e4:	0e09      	lsrs	r1, r1, #24
 80276e6:	9118      	str	r1, [sp, #96]	@ 0x60
 80276e8:	b292      	uxth	r2, r2
 80276ea:	b280      	uxth	r0, r0
 80276ec:	fb02 f800 	mul.w	r8, r2, r0
 80276f0:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80276f4:	0112      	lsls	r2, r2, #4
 80276f6:	eba2 0e08 	sub.w	lr, r2, r8
 80276fa:	b280      	uxth	r0, r0
 80276fc:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8027700:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8027702:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8027704:	fa1f fe8e 	uxth.w	lr, lr
 8027708:	1a12      	subs	r2, r2, r0
 802770a:	b292      	uxth	r2, r2
 802770c:	fb0e f101 	mul.w	r1, lr, r1
 8027710:	fb02 110c 	mla	r1, r2, ip, r1
 8027714:	fb00 1104 	mla	r1, r0, r4, r1
 8027718:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 802771a:	fb08 1104 	mla	r1, r8, r4, r1
 802771e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8027722:	2900      	cmp	r1, #0
 8027724:	f000 80f5 	beq.w	8027912 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8027728:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802772c:	d019      	beq.n	8027762 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 802772e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8027732:	fb0c fa0a 	mul.w	sl, ip, sl
 8027736:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802773a:	fb0c fc03 	mul.w	ip, ip, r3
 802773e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8027742:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8027746:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802774a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 802774e:	4453      	add	r3, sl
 8027750:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8027754:	0a1b      	lsrs	r3, r3, #8
 8027756:	0a3f      	lsrs	r7, r7, #8
 8027758:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802775c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8027760:	433b      	orrs	r3, r7
 8027762:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8027764:	2cff      	cmp	r4, #255	@ 0xff
 8027766:	d020      	beq.n	80277aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8027768:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 802776a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 802776e:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8027770:	4367      	muls	r7, r4
 8027772:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8027774:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8027778:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 802777a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802777e:	fb04 fa0a 	mul.w	sl, r4, sl
 8027782:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8027786:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802778a:	44bc      	add	ip, r7
 802778c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8027790:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027794:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027798:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802779c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80277a0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80277a4:	ea4c 040a 	orr.w	r4, ip, sl
 80277a8:	9410      	str	r4, [sp, #64]	@ 0x40
 80277aa:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80277ac:	2cff      	cmp	r4, #255	@ 0xff
 80277ae:	d020      	beq.n	80277f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 80277b0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80277b2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80277b6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80277b8:	4367      	muls	r7, r4
 80277ba:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80277bc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80277c0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80277c2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80277c6:	fb04 fa0a 	mul.w	sl, r4, sl
 80277ca:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80277ce:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80277d2:	44bc      	add	ip, r7
 80277d4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80277d8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80277dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80277e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80277e4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80277e8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80277ec:	ea4c 040a 	orr.w	r4, ip, sl
 80277f0:	940b      	str	r4, [sp, #44]	@ 0x2c
 80277f2:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 80277f4:	2cff      	cmp	r4, #255	@ 0xff
 80277f6:	d020      	beq.n	802783a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 80277f8:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80277fa:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80277fe:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8027800:	4367      	muls	r7, r4
 8027802:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8027804:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8027808:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 802780a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802780e:	fb04 fa0a 	mul.w	sl, r4, sl
 8027812:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8027816:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802781a:	44bc      	add	ip, r7
 802781c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8027820:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027824:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027828:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802782c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8027830:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8027834:	ea4c 040a 	orr.w	r4, ip, sl
 8027838:	9411      	str	r4, [sp, #68]	@ 0x44
 802783a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 802783c:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8027840:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8027842:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8027846:	fb0e f707 	mul.w	r7, lr, r7
 802784a:	fb02 770c 	mla	r7, r2, ip, r7
 802784e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8027852:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8027854:	fb00 770c 	mla	r7, r0, ip, r7
 8027858:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 802785c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 802785e:	fb08 770c 	mla	r7, r8, ip, r7
 8027862:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 8027866:	fb0e fe0c 	mul.w	lr, lr, ip
 802786a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802786e:	fb02 e303 	mla	r3, r2, r3, lr
 8027872:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8027874:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8027876:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 802787a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802787c:	fb00 330a 	mla	r3, r0, sl, r3
 8027880:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 8027884:	fb08 3c0c 	mla	ip, r8, ip, r3
 8027888:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802788a:	f8b9 0000 	ldrh.w	r0, [r9]
 802788e:	434b      	muls	r3, r1
 8027890:	0a3f      	lsrs	r7, r7, #8
 8027892:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027896:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802789a:	1c59      	adds	r1, r3, #1
 802789c:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 80278a0:	ea47 070c 	orr.w	r7, r7, ip
 80278a4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80278a8:	1202      	asrs	r2, r0, #8
 80278aa:	0c3b      	lsrs	r3, r7, #16
 80278ac:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80278b0:	b2c9      	uxtb	r1, r1
 80278b2:	fb13 f304 	smulbb	r3, r3, r4
 80278b6:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80278ba:	fb02 3201 	mla	r2, r2, r1, r3
 80278be:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80278c2:	10c3      	asrs	r3, r0, #3
 80278c4:	b2ff      	uxtb	r7, r7
 80278c6:	00c0      	lsls	r0, r0, #3
 80278c8:	b292      	uxth	r2, r2
 80278ca:	fb1c fc04 	smulbb	ip, ip, r4
 80278ce:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80278d2:	b2c0      	uxtb	r0, r0
 80278d4:	fb17 f704 	smulbb	r7, r7, r4
 80278d8:	fb03 c301 	mla	r3, r3, r1, ip
 80278dc:	fb00 7001 	mla	r0, r0, r1, r7
 80278e0:	f102 0c01 	add.w	ip, r2, #1
 80278e4:	b280      	uxth	r0, r0
 80278e6:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80278ea:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 80278ee:	1c42      	adds	r2, r0, #1
 80278f0:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80278f4:	b29b      	uxth	r3, r3
 80278f6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80278fa:	ea42 020c 	orr.w	r2, r2, ip
 80278fe:	f103 0c01 	add.w	ip, r3, #1
 8027902:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8027906:	095b      	lsrs	r3, r3, #5
 8027908:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802790c:	431a      	orrs	r2, r3
 802790e:	f8a9 2000 	strh.w	r2, [r9]
 8027912:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8027914:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8027916:	441a      	add	r2, r3
 8027918:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802791a:	9229      	str	r2, [sp, #164]	@ 0xa4
 802791c:	f109 0902 	add.w	r9, r9, #2
 8027920:	441d      	add	r5, r3
 8027922:	f10b 3bff 	add.w	fp, fp, #4294967295
 8027926:	e63d      	b.n	80275a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8027928:	2800      	cmp	r0, #0
 802792a:	f43f aedd 	beq.w	80276e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802792e:	5c79      	ldrb	r1, [r7, r1]
 8027930:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8027934:	910b      	str	r1, [sp, #44]	@ 0x2c
 8027936:	0e09      	lsrs	r1, r1, #24
 8027938:	9114      	str	r1, [sp, #80]	@ 0x50
 802793a:	e6d5      	b.n	80276e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802793c:	b01f      	add	sp, #124	@ 0x7c
 802793e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08027942 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8027942:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027946:	b089      	sub	sp, #36	@ 0x24
 8027948:	9101      	str	r1, [sp, #4]
 802794a:	9801      	ldr	r0, [sp, #4]
 802794c:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 8027950:	8800      	ldrh	r0, [r0, #0]
 8027952:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 8027956:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 802795a:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 802795e:	1206      	asrs	r6, r0, #8
 8027960:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 8027964:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8027968:	9602      	str	r6, [sp, #8]
 802796a:	10c6      	asrs	r6, r0, #3
 802796c:	00c0      	lsls	r0, r0, #3
 802796e:	b2c0      	uxtb	r0, r0
 8027970:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8027974:	9004      	str	r0, [sp, #16]
 8027976:	2f00      	cmp	r7, #0
 8027978:	fb07 100c 	mla	r0, r7, ip, r1
 802797c:	9603      	str	r6, [sp, #12]
 802797e:	eb02 0e00 	add.w	lr, r2, r0
 8027982:	f2c0 810a 	blt.w	8027b9a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8027986:	45b8      	cmp	r8, r7
 8027988:	f340 8107 	ble.w	8027b9a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 802798c:	2900      	cmp	r1, #0
 802798e:	f2c0 8102 	blt.w	8027b96 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8027992:	458c      	cmp	ip, r1
 8027994:	f340 80ff 	ble.w	8027b96 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8027998:	5c12      	ldrb	r2, [r2, r0]
 802799a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 802799e:	1c4a      	adds	r2, r1, #1
 80279a0:	f100 80fe 	bmi.w	8027ba0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80279a4:	4594      	cmp	ip, r2
 80279a6:	f340 80fb 	ble.w	8027ba0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80279aa:	2d00      	cmp	r5, #0
 80279ac:	f000 80fa 	beq.w	8027ba4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 80279b0:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80279b4:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80279b8:	3701      	adds	r7, #1
 80279ba:	f100 80f7 	bmi.w	8027bac <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80279be:	45b8      	cmp	r8, r7
 80279c0:	f340 80f4 	ble.w	8027bac <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80279c4:	2c00      	cmp	r4, #0
 80279c6:	f000 80f4 	beq.w	8027bb2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 80279ca:	2900      	cmp	r1, #0
 80279cc:	eb0e 020c 	add.w	r2, lr, ip
 80279d0:	f2c0 80ea 	blt.w	8027ba8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80279d4:	458c      	cmp	ip, r1
 80279d6:	f340 80e7 	ble.w	8027ba8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80279da:	f81e 700c 	ldrb.w	r7, [lr, ip]
 80279de:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 80279e2:	3101      	adds	r1, #1
 80279e4:	f100 80e8 	bmi.w	8027bb8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80279e8:	458c      	cmp	ip, r1
 80279ea:	f340 80e5 	ble.w	8027bb8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80279ee:	2d00      	cmp	r5, #0
 80279f0:	f000 80e4 	beq.w	8027bbc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 80279f4:	7852      	ldrb	r2, [r2, #1]
 80279f6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80279fa:	0e0b      	lsrs	r3, r1, #24
 80279fc:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8027a00:	9300      	str	r3, [sp, #0]
 8027a02:	b2a4      	uxth	r4, r4
 8027a04:	b2ab      	uxth	r3, r5
 8027a06:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 8027a0a:	fb03 f904 	mul.w	r9, r3, r4
 8027a0e:	fb0a f505 	mul.w	r5, sl, r5
 8027a12:	011b      	lsls	r3, r3, #4
 8027a14:	eba3 0e09 	sub.w	lr, r3, r9
 8027a18:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 8027a1c:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 8027a20:	0a28      	lsrs	r0, r5, #8
 8027a22:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8027a26:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 8027a2a:	4405      	add	r5, r0
 8027a2c:	0a2d      	lsrs	r5, r5, #8
 8027a2e:	fb0a f303 	mul.w	r3, sl, r3
 8027a32:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 8027a36:	9005      	str	r0, [sp, #20]
 8027a38:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 8027a3c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8027a40:	0a1b      	lsrs	r3, r3, #8
 8027a42:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8027a46:	9306      	str	r3, [sp, #24]
 8027a48:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 8027a4c:	fb0b f303 	mul.w	r3, fp, r3
 8027a50:	0a1d      	lsrs	r5, r3, #8
 8027a52:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8027a56:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8027a5a:	fb0b f606 	mul.w	r6, fp, r6
 8027a5e:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 8027a62:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 8027a66:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8027a6a:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8027a6e:	fb08 f707 	mul.w	r7, r8, r7
 8027a72:	441d      	add	r5, r3
 8027a74:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 8027a78:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8027a7c:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 8027a80:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8027a84:	fb08 fc0c 	mul.w	ip, r8, ip
 8027a88:	0a1b      	lsrs	r3, r3, #8
 8027a8a:	9307      	str	r3, [sp, #28]
 8027a8c:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8027a90:	0e0b      	lsrs	r3, r1, #24
 8027a92:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 8027a96:	435f      	muls	r7, r3
 8027a98:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8027a9c:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8027aa0:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8027aa4:	4460      	add	r0, ip
 8027aa6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027aaa:	b2a4      	uxth	r4, r4
 8027aac:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8027ab0:	0a2d      	lsrs	r5, r5, #8
 8027ab2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8027ab6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8027aba:	fa1f fe8e 	uxth.w	lr, lr
 8027abe:	4359      	muls	r1, r3
 8027ac0:	1b12      	subs	r2, r2, r4
 8027ac2:	9b05      	ldr	r3, [sp, #20]
 8027ac4:	44bc      	add	ip, r7
 8027ac6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8027aca:	b292      	uxth	r2, r2
 8027acc:	fb05 f50e 	mul.w	r5, r5, lr
 8027ad0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027ad4:	fb03 5502 	mla	r5, r3, r2, r5
 8027ad8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8027adc:	9b06      	ldr	r3, [sp, #24]
 8027ade:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 8027ae2:	0a36      	lsrs	r6, r6, #8
 8027ae4:	0a00      	lsrs	r0, r0, #8
 8027ae6:	fb0c 5509 	mla	r5, ip, r9, r5
 8027aea:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8027aee:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8027af2:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8027af6:	fb00 5504 	mla	r5, r0, r4, r5
 8027afa:	fb0e f606 	mul.w	r6, lr, r6
 8027afe:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 8027b02:	0a09      	lsrs	r1, r1, #8
 8027b04:	9b07      	ldr	r3, [sp, #28]
 8027b06:	fb02 6000 	mla	r0, r2, r0, r6
 8027b0a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8027b0e:	fb09 0001 	mla	r0, r9, r1, r0
 8027b12:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8027b16:	fb0e fe0b 	mul.w	lr, lr, fp
 8027b1a:	fb04 0003 	mla	r0, r4, r3, r0
 8027b1e:	fb02 e20a 	mla	r2, r2, sl, lr
 8027b22:	9b00      	ldr	r3, [sp, #0]
 8027b24:	fb04 2408 	mla	r4, r4, r8, r2
 8027b28:	fb09 4903 	mla	r9, r9, r3, r4
 8027b2c:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8027b30:	9b02      	ldr	r3, [sp, #8]
 8027b32:	9a04      	ldr	r2, [sp, #16]
 8027b34:	fa5f f989 	uxtb.w	r9, r9
 8027b38:	fb03 f109 	mul.w	r1, r3, r9
 8027b3c:	9b03      	ldr	r3, [sp, #12]
 8027b3e:	0a2d      	lsrs	r5, r5, #8
 8027b40:	0a00      	lsrs	r0, r0, #8
 8027b42:	fb03 f309 	mul.w	r3, r3, r9
 8027b46:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 8027b4a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8027b4e:	4305      	orrs	r5, r0
 8027b50:	fb02 f909 	mul.w	r9, r2, r9
 8027b54:	1c58      	adds	r0, r3, #1
 8027b56:	1c4a      	adds	r2, r1, #1
 8027b58:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8027b5c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8027b60:	0a2b      	lsrs	r3, r5, #8
 8027b62:	0c2a      	lsrs	r2, r5, #16
 8027b64:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8027b68:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8027b6c:	00db      	lsls	r3, r3, #3
 8027b6e:	0212      	lsls	r2, r2, #8
 8027b70:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8027b74:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8027b78:	4313      	orrs	r3, r2
 8027b7a:	f109 0201 	add.w	r2, r9, #1
 8027b7e:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8027b82:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8027b86:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8027b8a:	431d      	orrs	r5, r3
 8027b8c:	9b01      	ldr	r3, [sp, #4]
 8027b8e:	801d      	strh	r5, [r3, #0]
 8027b90:	b009      	add	sp, #36	@ 0x24
 8027b92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027b96:	2000      	movs	r0, #0
 8027b98:	e701      	b.n	802799e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8027b9a:	2600      	movs	r6, #0
 8027b9c:	4630      	mov	r0, r6
 8027b9e:	e70b      	b.n	80279b8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8027ba0:	2600      	movs	r6, #0
 8027ba2:	e709      	b.n	80279b8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8027ba4:	462e      	mov	r6, r5
 8027ba6:	e707      	b.n	80279b8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8027ba8:	2700      	movs	r7, #0
 8027baa:	e71a      	b.n	80279e2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8027bac:	2100      	movs	r1, #0
 8027bae:	460f      	mov	r7, r1
 8027bb0:	e723      	b.n	80279fa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8027bb2:	4621      	mov	r1, r4
 8027bb4:	4627      	mov	r7, r4
 8027bb6:	e720      	b.n	80279fa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8027bb8:	2100      	movs	r1, #0
 8027bba:	e71e      	b.n	80279fa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8027bbc:	4629      	mov	r1, r5
 8027bbe:	e71c      	b.n	80279fa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08027bc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027bc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027bc4:	b09b      	sub	sp, #108	@ 0x6c
 8027bc6:	9218      	str	r2, [sp, #96]	@ 0x60
 8027bc8:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8027bca:	9116      	str	r1, [sp, #88]	@ 0x58
 8027bcc:	9307      	str	r3, [sp, #28]
 8027bce:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 8027bd2:	9019      	str	r0, [sp, #100]	@ 0x64
 8027bd4:	6850      	ldr	r0, [r2, #4]
 8027bd6:	6812      	ldr	r2, [r2, #0]
 8027bd8:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 8027bda:	fb00 1303 	mla	r3, r0, r3, r1
 8027bde:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8027be2:	930a      	str	r3, [sp, #40]	@ 0x28
 8027be4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8027be6:	681b      	ldr	r3, [r3, #0]
 8027be8:	930f      	str	r3, [sp, #60]	@ 0x3c
 8027bea:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8027bec:	685e      	ldr	r6, [r3, #4]
 8027bee:	3604      	adds	r6, #4
 8027bf0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8027bf2:	2b00      	cmp	r3, #0
 8027bf4:	dc03      	bgt.n	8027bfe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8027bf6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8027bf8:	2b00      	cmp	r3, #0
 8027bfa:	f340 8373 	ble.w	80282e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8027bfe:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8027c00:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027c04:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027c08:	1e48      	subs	r0, r1, #1
 8027c0a:	1e57      	subs	r7, r2, #1
 8027c0c:	9b07      	ldr	r3, [sp, #28]
 8027c0e:	2b00      	cmp	r3, #0
 8027c10:	f340 8190 	ble.w	8027f34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8027c14:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8027c16:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8027c1a:	ea4f 4325 	mov.w	r3, r5, asr #16
 8027c1e:	d406      	bmi.n	8027c2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8027c20:	4584      	cmp	ip, r0
 8027c22:	da04      	bge.n	8027c2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8027c24:	2b00      	cmp	r3, #0
 8027c26:	db02      	blt.n	8027c2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8027c28:	42bb      	cmp	r3, r7
 8027c2a:	f2c0 8184 	blt.w	8027f36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8027c2e:	f11c 0c01 	adds.w	ip, ip, #1
 8027c32:	f100 8172 	bmi.w	8027f1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8027c36:	4561      	cmp	r1, ip
 8027c38:	f2c0 816f 	blt.w	8027f1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8027c3c:	3301      	adds	r3, #1
 8027c3e:	f100 816c 	bmi.w	8027f1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8027c42:	429a      	cmp	r2, r3
 8027c44:	f2c0 8169 	blt.w	8027f1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8027c48:	9b07      	ldr	r3, [sp, #28]
 8027c4a:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8027c4c:	9317      	str	r3, [sp, #92]	@ 0x5c
 8027c4e:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8027c50:	2b00      	cmp	r3, #0
 8027c52:	f340 818e 	ble.w	8027f72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8027c56:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8027c58:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8027c5c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8027c5e:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8027c62:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8027c64:	141b      	asrs	r3, r3, #16
 8027c66:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8027c6a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8027c6e:	f100 81d1 	bmi.w	8028014 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8027c72:	f101 38ff 	add.w	r8, r1, #4294967295
 8027c76:	4543      	cmp	r3, r8
 8027c78:	f280 81cc 	bge.w	8028014 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8027c7c:	f1bc 0f00 	cmp.w	ip, #0
 8027c80:	f2c0 81c8 	blt.w	8028014 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8027c84:	f10e 38ff 	add.w	r8, lr, #4294967295
 8027c88:	45c4      	cmp	ip, r8
 8027c8a:	f280 81c3 	bge.w	8028014 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8027c8e:	b209      	sxth	r1, r1
 8027c90:	fb0c 3301 	mla	r3, ip, r1, r3
 8027c94:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8027c96:	eb04 0803 	add.w	r8, r4, r3
 8027c9a:	5ce3      	ldrb	r3, [r4, r3]
 8027c9c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8027ca0:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8027ca4:	2a00      	cmp	r2, #0
 8027ca6:	f000 81aa 	beq.w	8027ffe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8027caa:	f898 c001 	ldrb.w	ip, [r8, #1]
 8027cae:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8027cb2:	940b      	str	r4, [sp, #44]	@ 0x2c
 8027cb4:	0e24      	lsrs	r4, r4, #24
 8027cb6:	9412      	str	r4, [sp, #72]	@ 0x48
 8027cb8:	b178      	cbz	r0, 8027cda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8027cba:	eb08 0c01 	add.w	ip, r8, r1
 8027cbe:	f818 1001 	ldrb.w	r1, [r8, r1]
 8027cc2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8027cc6:	9108      	str	r1, [sp, #32]
 8027cc8:	0e09      	lsrs	r1, r1, #24
 8027cca:	9110      	str	r1, [sp, #64]	@ 0x40
 8027ccc:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8027cd0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8027cd4:	910c      	str	r1, [sp, #48]	@ 0x30
 8027cd6:	0e09      	lsrs	r1, r1, #24
 8027cd8:	9113      	str	r1, [sp, #76]	@ 0x4c
 8027cda:	b292      	uxth	r2, r2
 8027cdc:	b280      	uxth	r0, r0
 8027cde:	fb02 f900 	mul.w	r9, r2, r0
 8027ce2:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8027ce6:	0112      	lsls	r2, r2, #4
 8027ce8:	eba2 0809 	sub.w	r8, r2, r9
 8027cec:	b280      	uxth	r0, r0
 8027cee:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8027cf2:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8027cf4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8027cf6:	fa1f f888 	uxth.w	r8, r8
 8027cfa:	1a12      	subs	r2, r2, r0
 8027cfc:	b292      	uxth	r2, r2
 8027cfe:	fb08 f101 	mul.w	r1, r8, r1
 8027d02:	fb02 110e 	mla	r1, r2, lr, r1
 8027d06:	fb00 1104 	mla	r1, r0, r4, r1
 8027d0a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8027d0c:	fb09 1104 	mla	r1, r9, r4, r1
 8027d10:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8027d14:	2900      	cmp	r1, #0
 8027d16:	f000 80f5 	beq.w	8027f04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8027d1a:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8027d1e:	d01b      	beq.n	8027d58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8027d20:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8027d24:	fb0e fa0a 	mul.w	sl, lr, sl
 8027d28:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8027d2c:	fb0e fe03 	mul.w	lr, lr, r3
 8027d30:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8027d34:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8027d38:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8027d3c:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8027d40:	4453      	add	r3, sl
 8027d42:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8027d46:	0a1b      	lsrs	r3, r3, #8
 8027d48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027d4c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8027d50:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8027d54:	ea43 030c 	orr.w	r3, r3, ip
 8027d58:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8027d5a:	2cff      	cmp	r4, #255	@ 0xff
 8027d5c:	d021      	beq.n	8027da2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8027d5e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8027d60:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8027d64:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8027d66:	fb04 fb0b 	mul.w	fp, r4, fp
 8027d6a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8027d6c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8027d70:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8027d72:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027d76:	fb04 fa0a 	mul.w	sl, r4, sl
 8027d7a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8027d7e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8027d82:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8027d86:	44de      	add	lr, fp
 8027d88:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027d8c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027d90:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027d94:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8027d98:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8027d9c:	ea4e 040a 	orr.w	r4, lr, sl
 8027da0:	940b      	str	r4, [sp, #44]	@ 0x2c
 8027da2:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8027da4:	2cff      	cmp	r4, #255	@ 0xff
 8027da6:	d021      	beq.n	8027dec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8027da8:	9c08      	ldr	r4, [sp, #32]
 8027daa:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8027dae:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8027db0:	fb04 fb0b 	mul.w	fp, r4, fp
 8027db4:	9c08      	ldr	r4, [sp, #32]
 8027db6:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8027dba:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8027dbc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027dc0:	fb04 fa0a 	mul.w	sl, r4, sl
 8027dc4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8027dc8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8027dcc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8027dd0:	44de      	add	lr, fp
 8027dd2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027dd6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027dda:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027dde:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8027de2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8027de6:	ea4e 040a 	orr.w	r4, lr, sl
 8027dea:	9408      	str	r4, [sp, #32]
 8027dec:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8027dee:	2cff      	cmp	r4, #255	@ 0xff
 8027df0:	d021      	beq.n	8027e36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8027df2:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8027df4:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8027df8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8027dfa:	fb04 fb0b 	mul.w	fp, r4, fp
 8027dfe:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8027e00:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8027e04:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8027e06:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027e0a:	fb04 fa0a 	mul.w	sl, r4, sl
 8027e0e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8027e12:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8027e16:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8027e1a:	44de      	add	lr, fp
 8027e1c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027e20:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027e24:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027e28:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8027e2c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8027e30:	ea4e 040a 	orr.w	r4, lr, sl
 8027e34:	940c      	str	r4, [sp, #48]	@ 0x30
 8027e36:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8027e38:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8027e3c:	9c08      	ldr	r4, [sp, #32]
 8027e3e:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 8027e42:	fb08 fc0c 	mul.w	ip, r8, ip
 8027e46:	fb02 cc0e 	mla	ip, r2, lr, ip
 8027e4a:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8027e4e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8027e50:	fb00 cc0e 	mla	ip, r0, lr, ip
 8027e54:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8027e58:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8027e5a:	fb09 cc0e 	mla	ip, r9, lr, ip
 8027e5e:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 8027e62:	fb08 f80e 	mul.w	r8, r8, lr
 8027e66:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8027e6a:	fb02 8303 	mla	r3, r2, r3, r8
 8027e6e:	9a08      	ldr	r2, [sp, #32]
 8027e70:	f8b7 8000 	ldrh.w	r8, [r7]
 8027e74:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8027e78:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8027e7a:	fb00 330a 	mla	r3, r0, sl, r3
 8027e7e:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 8027e82:	fb09 3900 	mla	r9, r9, r0, r3
 8027e86:	43c9      	mvns	r1, r1
 8027e88:	ea4f 2228 	mov.w	r2, r8, asr #8
 8027e8c:	fa5f fe81 	uxtb.w	lr, r1
 8027e90:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027e94:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027e98:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8027e9c:	fb02 f20e 	mul.w	r2, r2, lr
 8027ea0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8027ea4:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8027ea8:	ea4c 0c09 	orr.w	ip, ip, r9
 8027eac:	1c53      	adds	r3, r2, #1
 8027eae:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8027eb2:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8027eb6:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8027eba:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8027ebe:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8027ec2:	4a63      	ldr	r2, [pc, #396]	@ (8028050 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8027ec4:	fb00 f00e 	mul.w	r0, r0, lr
 8027ec8:	b2db      	uxtb	r3, r3
 8027eca:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8027ece:	1c43      	adds	r3, r0, #1
 8027ed0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8027ed4:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8027ed8:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8027edc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8027ee0:	b2c9      	uxtb	r1, r1
 8027ee2:	00db      	lsls	r3, r3, #3
 8027ee4:	fb01 f10e 	mul.w	r1, r1, lr
 8027ee8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8027eec:	4313      	orrs	r3, r2
 8027eee:	1c4a      	adds	r2, r1, #1
 8027ef0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8027ef4:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8027ef8:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8027efc:	ea4c 0c03 	orr.w	ip, ip, r3
 8027f00:	f8a7 c000 	strh.w	ip, [r7]
 8027f04:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8027f06:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8027f08:	441a      	add	r2, r3
 8027f0a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8027f0c:	9225      	str	r2, [sp, #148]	@ 0x94
 8027f0e:	441d      	add	r5, r3
 8027f10:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8027f12:	3b01      	subs	r3, #1
 8027f14:	3702      	adds	r7, #2
 8027f16:	9317      	str	r3, [sp, #92]	@ 0x5c
 8027f18:	e699      	b.n	8027c4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8027f1a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8027f1c:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8027f1e:	441c      	add	r4, r3
 8027f20:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8027f22:	9425      	str	r4, [sp, #148]	@ 0x94
 8027f24:	441d      	add	r5, r3
 8027f26:	9b07      	ldr	r3, [sp, #28]
 8027f28:	3b01      	subs	r3, #1
 8027f2a:	9307      	str	r3, [sp, #28]
 8027f2c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8027f2e:	3302      	adds	r3, #2
 8027f30:	930a      	str	r3, [sp, #40]	@ 0x28
 8027f32:	e66b      	b.n	8027c0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8027f34:	d024      	beq.n	8027f80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8027f36:	9b07      	ldr	r3, [sp, #28]
 8027f38:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8027f3a:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8027f3c:	3b01      	subs	r3, #1
 8027f3e:	fb00 4003 	mla	r0, r0, r3, r4
 8027f42:	1400      	asrs	r0, r0, #16
 8027f44:	f53f ae80 	bmi.w	8027c48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8027f48:	3901      	subs	r1, #1
 8027f4a:	4288      	cmp	r0, r1
 8027f4c:	f6bf ae7c 	bge.w	8027c48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8027f50:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8027f52:	fb01 5303 	mla	r3, r1, r3, r5
 8027f56:	141b      	asrs	r3, r3, #16
 8027f58:	f53f ae76 	bmi.w	8027c48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8027f5c:	3a01      	subs	r2, #1
 8027f5e:	4293      	cmp	r3, r2
 8027f60:	f6bf ae72 	bge.w	8027c48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8027f64:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8027f68:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 8027f6c:	f1bb 0f00 	cmp.w	fp, #0
 8027f70:	dc70      	bgt.n	8028054 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8027f72:	9b07      	ldr	r3, [sp, #28]
 8027f74:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8027f78:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8027f7a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8027f7e:	930a      	str	r3, [sp, #40]	@ 0x28
 8027f80:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8027f82:	2b00      	cmp	r3, #0
 8027f84:	f340 81ae 	ble.w	80282e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8027f88:	ee30 0a04 	vadd.f32	s0, s0, s8
 8027f8c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8027f90:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8027f94:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8027f96:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8027f9a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8027f9e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8027fa2:	eef0 6a62 	vmov.f32	s13, s5
 8027fa6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8027faa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027fae:	ee77 2a62 	vsub.f32	s5, s14, s5
 8027fb2:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 8027fb6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8027fba:	eef0 6a43 	vmov.f32	s13, s6
 8027fbe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8027fc2:	ee12 2a90 	vmov	r2, s5
 8027fc6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8027fca:	fb92 f3f3 	sdiv	r3, r2, r3
 8027fce:	ee13 2a10 	vmov	r2, s6
 8027fd2:	9327      	str	r3, [sp, #156]	@ 0x9c
 8027fd4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8027fd6:	fb92 f3f3 	sdiv	r3, r2, r3
 8027fda:	9328      	str	r3, [sp, #160]	@ 0xa0
 8027fdc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8027fde:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8027fe0:	3b01      	subs	r3, #1
 8027fe2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027fe6:	9316      	str	r3, [sp, #88]	@ 0x58
 8027fe8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8027fea:	bf08      	it	eq
 8027fec:	4613      	moveq	r3, r2
 8027fee:	ee16 5a90 	vmov	r5, s13
 8027ff2:	9307      	str	r3, [sp, #28]
 8027ff4:	eeb0 3a67 	vmov.f32	s6, s15
 8027ff8:	eef0 2a47 	vmov.f32	s5, s14
 8027ffc:	e5f8      	b.n	8027bf0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8027ffe:	2800      	cmp	r0, #0
 8028000:	f43f ae6b 	beq.w	8027cda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8028004:	f818 1001 	ldrb.w	r1, [r8, r1]
 8028008:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802800c:	9108      	str	r1, [sp, #32]
 802800e:	0e09      	lsrs	r1, r1, #24
 8028010:	9110      	str	r1, [sp, #64]	@ 0x40
 8028012:	e662      	b.n	8027cda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8028014:	f113 0801 	adds.w	r8, r3, #1
 8028018:	f53f af74 	bmi.w	8027f04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802801c:	4541      	cmp	r1, r8
 802801e:	f6ff af71 	blt.w	8027f04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8028022:	f11c 0801 	adds.w	r8, ip, #1
 8028026:	f53f af6d 	bmi.w	8027f04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802802a:	45c6      	cmp	lr, r8
 802802c:	f6ff af6a 	blt.w	8027f04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8028030:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8028034:	b209      	sxth	r1, r1
 8028036:	fa0f f38e 	sxth.w	r3, lr
 802803a:	e9cd 2004 	strd	r2, r0, [sp, #16]
 802803e:	9301      	str	r3, [sp, #4]
 8028040:	9100      	str	r1, [sp, #0]
 8028042:	4633      	mov	r3, r6
 8028044:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8028046:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8028048:	4639      	mov	r1, r7
 802804a:	f7ff fc7a 	bl	8027942 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 802804e:	e759      	b.n	8027f04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8028050:	fffff800 	.word	0xfffff800
 8028054:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8028056:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8028058:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802805c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802805e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028062:	1427      	asrs	r7, r4, #16
 8028064:	142b      	asrs	r3, r5, #16
 8028066:	fb01 7303 	mla	r3, r1, r3, r7
 802806a:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802806c:	18e7      	adds	r7, r4, r3
 802806e:	5ce3      	ldrb	r3, [r4, r3]
 8028070:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8028074:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8028078:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802807c:	2a00      	cmp	r2, #0
 802807e:	f000 8127 	beq.w	80282d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8028082:	f897 e001 	ldrb.w	lr, [r7, #1]
 8028086:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802808a:	940d      	str	r4, [sp, #52]	@ 0x34
 802808c:	0e24      	lsrs	r4, r4, #24
 802808e:	9414      	str	r4, [sp, #80]	@ 0x50
 8028090:	b170      	cbz	r0, 80280b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8028092:	eb07 0e01 	add.w	lr, r7, r1
 8028096:	5c79      	ldrb	r1, [r7, r1]
 8028098:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802809c:	9109      	str	r1, [sp, #36]	@ 0x24
 802809e:	0e09      	lsrs	r1, r1, #24
 80280a0:	9111      	str	r1, [sp, #68]	@ 0x44
 80280a2:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80280a6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80280aa:	910e      	str	r1, [sp, #56]	@ 0x38
 80280ac:	0e09      	lsrs	r1, r1, #24
 80280ae:	9115      	str	r1, [sp, #84]	@ 0x54
 80280b0:	b292      	uxth	r2, r2
 80280b2:	b280      	uxth	r0, r0
 80280b4:	fb02 f800 	mul.w	r8, r2, r0
 80280b8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80280bc:	0112      	lsls	r2, r2, #4
 80280be:	eba2 0e08 	sub.w	lr, r2, r8
 80280c2:	b280      	uxth	r0, r0
 80280c4:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 80280c8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80280ca:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80280cc:	fa1f fe8e 	uxth.w	lr, lr
 80280d0:	1a09      	subs	r1, r1, r0
 80280d2:	b289      	uxth	r1, r1
 80280d4:	fb0e f202 	mul.w	r2, lr, r2
 80280d8:	fb01 220c 	mla	r2, r1, ip, r2
 80280dc:	fb00 2204 	mla	r2, r0, r4, r2
 80280e0:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80280e2:	fb08 2204 	mla	r2, r8, r4, r2
 80280e6:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80280ea:	2a00      	cmp	r2, #0
 80280ec:	f000 80e5 	beq.w	80282ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 80280f0:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 80280f4:	d019      	beq.n	802812a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 80280f6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 80280fa:	fb0c fa0a 	mul.w	sl, ip, sl
 80280fe:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8028102:	fb0c fc03 	mul.w	ip, ip, r3
 8028106:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802810a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802810e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8028112:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8028116:	4453      	add	r3, sl
 8028118:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802811c:	0a1b      	lsrs	r3, r3, #8
 802811e:	0a3f      	lsrs	r7, r7, #8
 8028120:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8028124:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8028128:	433b      	orrs	r3, r7
 802812a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 802812c:	2cff      	cmp	r4, #255	@ 0xff
 802812e:	d020      	beq.n	8028172 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8028130:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8028132:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8028136:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8028138:	4367      	muls	r7, r4
 802813a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802813c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8028140:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8028142:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8028146:	fb04 fa0a 	mul.w	sl, r4, sl
 802814a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802814e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8028152:	44bc      	add	ip, r7
 8028154:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8028158:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802815c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028160:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028164:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8028168:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802816c:	ea4c 040a 	orr.w	r4, ip, sl
 8028170:	940d      	str	r4, [sp, #52]	@ 0x34
 8028172:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8028174:	2cff      	cmp	r4, #255	@ 0xff
 8028176:	d020      	beq.n	80281ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8028178:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 802817a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 802817e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8028180:	4367      	muls	r7, r4
 8028182:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8028184:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8028188:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 802818a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802818e:	fb04 fa0a 	mul.w	sl, r4, sl
 8028192:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8028196:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802819a:	44bc      	add	ip, r7
 802819c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80281a0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80281a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80281a8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80281ac:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80281b0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80281b4:	ea4c 040a 	orr.w	r4, ip, sl
 80281b8:	9409      	str	r4, [sp, #36]	@ 0x24
 80281ba:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80281bc:	2cff      	cmp	r4, #255	@ 0xff
 80281be:	d020      	beq.n	8028202 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 80281c0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80281c2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80281c6:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80281c8:	4367      	muls	r7, r4
 80281ca:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80281cc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80281d0:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80281d2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80281d6:	fb04 fa0a 	mul.w	sl, r4, sl
 80281da:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80281de:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80281e2:	44bc      	add	ip, r7
 80281e4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80281e8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80281ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80281f0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80281f4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80281f8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80281fc:	ea4c 040a 	orr.w	r4, ip, sl
 8028200:	940e      	str	r4, [sp, #56]	@ 0x38
 8028202:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8028204:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8028208:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 802820a:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 802820e:	fb0e f707 	mul.w	r7, lr, r7
 8028212:	fb01 770c 	mla	r7, r1, ip, r7
 8028216:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 802821a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802821c:	fb00 770c 	mla	r7, r0, ip, r7
 8028220:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8028224:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8028226:	fb08 770c 	mla	r7, r8, ip, r7
 802822a:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 802822e:	fb0e fe0c 	mul.w	lr, lr, ip
 8028232:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8028236:	fb01 e303 	mla	r3, r1, r3, lr
 802823a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802823c:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8028240:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8028242:	fb00 330a 	mla	r3, r0, sl, r3
 8028246:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 802824a:	fb08 3c0c 	mla	ip, r8, ip, r3
 802824e:	f8b9 3000 	ldrh.w	r3, [r9]
 8028252:	43d2      	mvns	r2, r2
 8028254:	1218      	asrs	r0, r3, #8
 8028256:	b2d2      	uxtb	r2, r2
 8028258:	10d9      	asrs	r1, r3, #3
 802825a:	0a3f      	lsrs	r7, r7, #8
 802825c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028260:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8028264:	00db      	lsls	r3, r3, #3
 8028266:	4350      	muls	r0, r2
 8028268:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802826c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8028270:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8028274:	b2db      	uxtb	r3, r3
 8028276:	ea47 070c 	orr.w	r7, r7, ip
 802827a:	4351      	muls	r1, r2
 802827c:	4353      	muls	r3, r2
 802827e:	1c42      	adds	r2, r0, #1
 8028280:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8028284:	0c3a      	lsrs	r2, r7, #16
 8028286:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802828a:	4a18      	ldr	r2, [pc, #96]	@ (80282ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 802828c:	b2c0      	uxtb	r0, r0
 802828e:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8028292:	1c4a      	adds	r2, r1, #1
 8028294:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8028298:	0a3a      	lsrs	r2, r7, #8
 802829a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802829e:	00c9      	lsls	r1, r1, #3
 80282a0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80282a4:	4301      	orrs	r1, r0
 80282a6:	1c58      	adds	r0, r3, #1
 80282a8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80282ac:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80282b0:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80282b4:	4308      	orrs	r0, r1
 80282b6:	f8a9 0000 	strh.w	r0, [r9]
 80282ba:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80282bc:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 80282be:	441a      	add	r2, r3
 80282c0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80282c2:	9225      	str	r2, [sp, #148]	@ 0x94
 80282c4:	f109 0902 	add.w	r9, r9, #2
 80282c8:	441d      	add	r5, r3
 80282ca:	f10b 3bff 	add.w	fp, fp, #4294967295
 80282ce:	e64d      	b.n	8027f6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 80282d0:	2800      	cmp	r0, #0
 80282d2:	f43f aeed 	beq.w	80280b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80282d6:	5c79      	ldrb	r1, [r7, r1]
 80282d8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80282dc:	9109      	str	r1, [sp, #36]	@ 0x24
 80282de:	0e09      	lsrs	r1, r1, #24
 80282e0:	9111      	str	r1, [sp, #68]	@ 0x44
 80282e2:	e6e5      	b.n	80280b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80282e4:	b01b      	add	sp, #108	@ 0x6c
 80282e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80282ea:	bf00      	nop
 80282ec:	fffff800 	.word	0xfffff800

080282f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80282f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80282f4:	b085      	sub	sp, #20
 80282f6:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 80282fa:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 80282fe:	9103      	str	r1, [sp, #12]
 8028300:	fb00 7406 	mla	r4, r0, r6, r7
 8028304:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8028308:	2800      	cmp	r0, #0
 802830a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 802830e:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 8028312:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 8028316:	9501      	str	r5, [sp, #4]
 8028318:	eb03 0904 	add.w	r9, r3, r4
 802831c:	f2c0 8150 	blt.w	80285c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8028320:	4583      	cmp	fp, r0
 8028322:	f340 814d 	ble.w	80285c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8028326:	2f00      	cmp	r7, #0
 8028328:	f2c0 8146 	blt.w	80285b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802832c:	42be      	cmp	r6, r7
 802832e:	f340 8143 	ble.w	80285b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8028332:	f813 c004 	ldrb.w	ip, [r3, r4]
 8028336:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 802833a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802833e:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 8028342:	4355      	muls	r5, r2
 8028344:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8028348:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 802834c:	fb0c f203 	mul.w	r2, ip, r3
 8028350:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8028354:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8028358:	441d      	add	r5, r3
 802835a:	f102 0320 	add.w	r3, r2, #32
 802835e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8028362:	0a1b      	lsrs	r3, r3, #8
 8028364:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8028368:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802836c:	431c      	orrs	r4, r3
 802836e:	1c7b      	adds	r3, r7, #1
 8028370:	f100 812b 	bmi.w	80285ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8028374:	429e      	cmp	r6, r3
 8028376:	f340 8128 	ble.w	80285ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 802837a:	2900      	cmp	r1, #0
 802837c:	f000 8128 	beq.w	80285d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8028380:	9a01      	ldr	r2, [sp, #4]
 8028382:	f899 3001 	ldrb.w	r3, [r9, #1]
 8028386:	8855      	ldrh	r5, [r2, #2]
 8028388:	ea4f 08e3 	mov.w	r8, r3, asr #3
 802838c:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 8028390:	fb08 f802 	mul.w	r8, r8, r2
 8028394:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8028398:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 802839c:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80283a0:	435d      	muls	r5, r3
 80283a2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80283a6:	44d0      	add	r8, sl
 80283a8:	f105 0a20 	add.w	sl, r5, #32
 80283ac:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80283b0:	0a2d      	lsrs	r5, r5, #8
 80283b2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80283b6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80283ba:	432a      	orrs	r2, r5
 80283bc:	3001      	adds	r0, #1
 80283be:	f100 810d 	bmi.w	80285dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80283c2:	4583      	cmp	fp, r0
 80283c4:	f340 810a 	ble.w	80285dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80283c8:	f1be 0f00 	cmp.w	lr, #0
 80283cc:	f000 810b 	beq.w	80285e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 80283d0:	2f00      	cmp	r7, #0
 80283d2:	f2c0 8100 	blt.w	80285d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80283d6:	42be      	cmp	r6, r7
 80283d8:	f340 80fd 	ble.w	80285d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80283dc:	9801      	ldr	r0, [sp, #4]
 80283de:	f819 5006 	ldrb.w	r5, [r9, r6]
 80283e2:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80283e6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80283ea:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 80283ee:	fb0a fa00 	mul.w	sl, sl, r0
 80283f2:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 80283f6:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80283fa:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80283fe:	fb05 f808 	mul.w	r8, r5, r8
 8028402:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 8028406:	4482      	add	sl, r0
 8028408:	f108 0020 	add.w	r0, r8, #32
 802840c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8028410:	0a00      	lsrs	r0, r0, #8
 8028412:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8028416:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802841a:	ea4b 0b00 	orr.w	fp, fp, r0
 802841e:	3701      	adds	r7, #1
 8028420:	f100 80e6 	bmi.w	80285f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8028424:	42be      	cmp	r6, r7
 8028426:	f340 80e3 	ble.w	80285f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 802842a:	2900      	cmp	r1, #0
 802842c:	f000 80e3 	beq.w	80285f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8028430:	3601      	adds	r6, #1
 8028432:	9801      	ldr	r0, [sp, #4]
 8028434:	f819 7006 	ldrb.w	r7, [r9, r6]
 8028438:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 802843c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8028440:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 8028444:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8028448:	fb09 f906 	mul.w	r9, r9, r6
 802844c:	fb07 f800 	mul.w	r8, r7, r0
 8028450:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 8028454:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8028458:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 802845c:	44d1      	add	r9, sl
 802845e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8028462:	f108 0020 	add.w	r0, r8, #32
 8028466:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802846a:	0a00      	lsrs	r0, r0, #8
 802846c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8028470:	4330      	orrs	r0, r6
 8028472:	b28e      	uxth	r6, r1
 8028474:	fa1f f98e 	uxth.w	r9, lr
 8028478:	fb06 f809 	mul.w	r8, r6, r9
 802847c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8028480:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8028484:	0136      	lsls	r6, r6, #4
 8028486:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 802848a:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 802848e:	9601      	str	r6, [sp, #4]
 8028490:	ea4a 0404 	orr.w	r4, sl, r4
 8028494:	fa1f f689 	uxth.w	r6, r9
 8028498:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802849c:	fb11 f90e 	smulbb	r9, r1, lr
 80284a0:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80284a4:	9602      	str	r6, [sp, #8]
 80284a6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80284aa:	4626      	mov	r6, r4
 80284ac:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80284b0:	f1ce 0410 	rsb	r4, lr, #16
 80284b4:	1a64      	subs	r4, r4, r1
 80284b6:	ea4a 0202 	orr.w	r2, sl, r2
 80284ba:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80284be:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80284c2:	434a      	muls	r2, r1
 80284c4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80284c8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80284cc:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80284d0:	fb04 2406 	mla	r4, r4, r6, r2
 80284d4:	ea4a 0000 	orr.w	r0, sl, r0
 80284d8:	fb09 4200 	mla	r2, r9, r0, r4
 80284dc:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80284e0:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80284e4:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 80284e8:	ea44 0b0b 	orr.w	fp, r4, fp
 80284ec:	9c01      	ldr	r4, [sp, #4]
 80284ee:	9e02      	ldr	r6, [sp, #8]
 80284f0:	9903      	ldr	r1, [sp, #12]
 80284f2:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 80284f6:	1ba4      	subs	r4, r4, r6
 80284f8:	9e01      	ldr	r6, [sp, #4]
 80284fa:	8808      	ldrh	r0, [r1, #0]
 80284fc:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 8028500:	eba6 0608 	sub.w	r6, r6, r8
 8028504:	b2b6      	uxth	r6, r6
 8028506:	b2a4      	uxth	r4, r4
 8028508:	4373      	muls	r3, r6
 802850a:	fb0c 3304 	mla	r3, ip, r4, r3
 802850e:	9c02      	ldr	r4, [sp, #8]
 8028510:	fb04 3505 	mla	r5, r4, r5, r3
 8028514:	fb08 5707 	mla	r7, r8, r7, r5
 8028518:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 802851c:	b289      	uxth	r1, r1
 802851e:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8028522:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8028526:	434f      	muls	r7, r1
 8028528:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802852c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8028530:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8028534:	1c7b      	adds	r3, r7, #1
 8028536:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 802853a:	ea42 0e0e 	orr.w	lr, r2, lr
 802853e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8028542:	fa1f f28e 	uxth.w	r2, lr
 8028546:	1203      	asrs	r3, r0, #8
 8028548:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 802854c:	b2ff      	uxtb	r7, r7
 802854e:	1215      	asrs	r5, r2, #8
 8028550:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8028554:	fb13 f307 	smulbb	r3, r3, r7
 8028558:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 802855c:	fb05 3501 	mla	r5, r5, r1, r3
 8028560:	10c3      	asrs	r3, r0, #3
 8028562:	10d4      	asrs	r4, r2, #3
 8028564:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8028568:	fb13 f307 	smulbb	r3, r3, r7
 802856c:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8028570:	fb04 3401 	mla	r4, r4, r1, r3
 8028574:	00c3      	lsls	r3, r0, #3
 8028576:	00d2      	lsls	r2, r2, #3
 8028578:	b2db      	uxtb	r3, r3
 802857a:	fb13 f307 	smulbb	r3, r3, r7
 802857e:	b2d2      	uxtb	r2, r2
 8028580:	fb02 3101 	mla	r1, r2, r1, r3
 8028584:	b2ad      	uxth	r5, r5
 8028586:	b289      	uxth	r1, r1
 8028588:	b2a4      	uxth	r4, r4
 802858a:	1c6b      	adds	r3, r5, #1
 802858c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8028590:	1c62      	adds	r2, r4, #1
 8028592:	1c4b      	adds	r3, r1, #1
 8028594:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8028598:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802859c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80285a0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80285a4:	0964      	lsrs	r4, r4, #5
 80285a6:	432b      	orrs	r3, r5
 80285a8:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80285ac:	9a03      	ldr	r2, [sp, #12]
 80285ae:	4323      	orrs	r3, r4
 80285b0:	8013      	strh	r3, [r2, #0]
 80285b2:	b005      	add	sp, #20
 80285b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80285b8:	f04f 0c00 	mov.w	ip, #0
 80285bc:	4664      	mov	r4, ip
 80285be:	e6d6      	b.n	802836e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 80285c0:	2300      	movs	r3, #0
 80285c2:	469c      	mov	ip, r3
 80285c4:	461a      	mov	r2, r3
 80285c6:	461c      	mov	r4, r3
 80285c8:	e6f8      	b.n	80283bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80285ca:	2300      	movs	r3, #0
 80285cc:	461a      	mov	r2, r3
 80285ce:	e6f5      	b.n	80283bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80285d0:	460b      	mov	r3, r1
 80285d2:	460a      	mov	r2, r1
 80285d4:	e6f2      	b.n	80283bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80285d6:	2500      	movs	r5, #0
 80285d8:	46ab      	mov	fp, r5
 80285da:	e720      	b.n	802841e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 80285dc:	2700      	movs	r7, #0
 80285de:	463d      	mov	r5, r7
 80285e0:	4638      	mov	r0, r7
 80285e2:	46bb      	mov	fp, r7
 80285e4:	e745      	b.n	8028472 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80285e6:	4677      	mov	r7, lr
 80285e8:	4675      	mov	r5, lr
 80285ea:	4670      	mov	r0, lr
 80285ec:	46f3      	mov	fp, lr
 80285ee:	e740      	b.n	8028472 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80285f0:	2700      	movs	r7, #0
 80285f2:	4638      	mov	r0, r7
 80285f4:	e73d      	b.n	8028472 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80285f6:	460f      	mov	r7, r1
 80285f8:	4608      	mov	r0, r1
 80285fa:	e73a      	b.n	8028472 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080285fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80285fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028600:	b097      	sub	sp, #92	@ 0x5c
 8028602:	9214      	str	r2, [sp, #80]	@ 0x50
 8028604:	9308      	str	r3, [sp, #32]
 8028606:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8028608:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 802860c:	9312      	str	r3, [sp, #72]	@ 0x48
 802860e:	9111      	str	r1, [sp, #68]	@ 0x44
 8028610:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 8028614:	9015      	str	r0, [sp, #84]	@ 0x54
 8028616:	6850      	ldr	r0, [r2, #4]
 8028618:	6812      	ldr	r2, [r2, #0]
 802861a:	fb00 1303 	mla	r3, r0, r3, r1
 802861e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8028622:	9309      	str	r3, [sp, #36]	@ 0x24
 8028624:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8028626:	681b      	ldr	r3, [r3, #0]
 8028628:	930b      	str	r3, [sp, #44]	@ 0x2c
 802862a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802862c:	685b      	ldr	r3, [r3, #4]
 802862e:	930c      	str	r3, [sp, #48]	@ 0x30
 8028630:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8028634:	930a      	str	r3, [sp, #40]	@ 0x28
 8028636:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8028638:	2b00      	cmp	r3, #0
 802863a:	dc03      	bgt.n	8028644 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802863c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 802863e:	2b00      	cmp	r3, #0
 8028640:	f340 83cb 	ble.w	8028dda <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8028644:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8028646:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802864a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802864e:	1e48      	subs	r0, r1, #1
 8028650:	1e55      	subs	r5, r2, #1
 8028652:	9b08      	ldr	r3, [sp, #32]
 8028654:	2b00      	cmp	r3, #0
 8028656:	f340 81a3 	ble.w	80289a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 802865a:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 802865c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 802865e:	1436      	asrs	r6, r6, #16
 8028660:	ea4f 4323 	mov.w	r3, r3, asr #16
 8028664:	d406      	bmi.n	8028674 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8028666:	4286      	cmp	r6, r0
 8028668:	da04      	bge.n	8028674 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802866a:	2b00      	cmp	r3, #0
 802866c:	db02      	blt.n	8028674 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802866e:	42ab      	cmp	r3, r5
 8028670:	f2c0 8197 	blt.w	80289a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8028674:	3601      	adds	r6, #1
 8028676:	f100 8184 	bmi.w	8028982 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802867a:	42b1      	cmp	r1, r6
 802867c:	f2c0 8181 	blt.w	8028982 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8028680:	3301      	adds	r3, #1
 8028682:	f100 817e 	bmi.w	8028982 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8028686:	429a      	cmp	r2, r3
 8028688:	f2c0 817b 	blt.w	8028982 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802868c:	9b08      	ldr	r3, [sp, #32]
 802868e:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8028690:	9313      	str	r3, [sp, #76]	@ 0x4c
 8028692:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8028696:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8028698:	2b00      	cmp	r3, #0
 802869a:	f340 81a4 	ble.w	80289e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 802869e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80286a0:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 80286a2:	1418      	asrs	r0, r3, #16
 80286a4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80286a6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80286aa:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80286ac:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80286b0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80286b2:	142d      	asrs	r5, r5, #16
 80286b4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80286b8:	f100 81f8 	bmi.w	8028aac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80286bc:	f102 3eff 	add.w	lr, r2, #4294967295
 80286c0:	4575      	cmp	r5, lr
 80286c2:	f280 81f3 	bge.w	8028aac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80286c6:	2800      	cmp	r0, #0
 80286c8:	f2c0 81f0 	blt.w	8028aac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80286cc:	f103 3eff 	add.w	lr, r3, #4294967295
 80286d0:	4570      	cmp	r0, lr
 80286d2:	f280 81eb 	bge.w	8028aac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80286d6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80286d8:	b212      	sxth	r2, r2
 80286da:	fb00 5002 	mla	r0, r0, r2, r5
 80286de:	fa1f fe81 	uxth.w	lr, r1
 80286e2:	eb03 0a00 	add.w	sl, r3, r0
 80286e6:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80286ea:	f813 9000 	ldrb.w	r9, [r3, r0]
 80286ee:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80286f2:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 80286f6:	b29b      	uxth	r3, r3
 80286f8:	f1bc 0f00 	cmp.w	ip, #0
 80286fc:	f000 81b9 	beq.w	8028a72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8028700:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8028704:	940d      	str	r4, [sp, #52]	@ 0x34
 8028706:	eb0a 0b02 	add.w	fp, sl, r2
 802870a:	fa1f fa8c 	uxth.w	sl, ip
 802870e:	fb0a fe0e 	mul.w	lr, sl, lr
 8028712:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8028716:	fa1f fa8a 	uxth.w	sl, sl
 802871a:	eba5 050e 	sub.w	r5, r5, lr
 802871e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8028722:	940e      	str	r4, [sp, #56]	@ 0x38
 8028724:	eba3 030a 	sub.w	r3, r3, sl
 8028728:	b2ad      	uxth	r5, r5
 802872a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802872c:	b29b      	uxth	r3, r3
 802872e:	fb08 f505 	mul.w	r5, r8, r5
 8028732:	fb09 5303 	mla	r3, r9, r3, r5
 8028736:	fb0a 3304 	mla	r3, sl, r4, r3
 802873a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802873c:	fb0e 3304 	mla	r3, lr, r4, r3
 8028740:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028744:	2b00      	cmp	r3, #0
 8028746:	f000 810f 	beq.w	8028968 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802874a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802874c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8028750:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8028754:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8028758:	f000 8190 	beq.w	8028a7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 802875c:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8028760:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8028764:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8028768:	fb09 f000 	mul.w	r0, r9, r0
 802876c:	fb0a fe0e 	mul.w	lr, sl, lr
 8028770:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8028774:	f100 0b20 	add.w	fp, r0, #32
 8028778:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 802877c:	44ce      	add	lr, r9
 802877e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8028782:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8028786:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802878a:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 802878e:	ea4e 0909 	orr.w	r9, lr, r9
 8028792:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8028796:	8868      	ldrh	r0, [r5, #2]
 8028798:	d019      	beq.n	80287ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 802879a:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 802879e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80287a2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80287a6:	fb08 f800 	mul.w	r8, r8, r0
 80287aa:	fb0a fe0e 	mul.w	lr, sl, lr
 80287ae:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80287b2:	f108 0b20 	add.w	fp, r8, #32
 80287b6:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 80287ba:	4486      	add	lr, r0
 80287bc:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80287c0:	0a00      	lsrs	r0, r0, #8
 80287c2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80287c6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80287ca:	ea4e 0000 	orr.w	r0, lr, r0
 80287ce:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80287d2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80287d6:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 80287da:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80287de:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80287e2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80287e6:	ea4e 0909 	orr.w	r9, lr, r9
 80287ea:	ea4a 0000 	orr.w	r0, sl, r0
 80287ee:	f1bc 0f00 	cmp.w	ip, #0
 80287f2:	f000 8145 	beq.w	8028a80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 80287f6:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 80287fa:	3a01      	subs	r2, #1
 80287fc:	0052      	lsls	r2, r2, #1
 80287fe:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8028800:	3202      	adds	r2, #2
 8028802:	2cff      	cmp	r4, #255	@ 0xff
 8028804:	eb05 0e02 	add.w	lr, r5, r2
 8028808:	5aaa      	ldrh	r2, [r5, r2]
 802880a:	d018      	beq.n	802883e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 802880c:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 8028810:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8028814:	fb04 fa02 	mul.w	sl, r4, r2
 8028818:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802881c:	fb08 f805 	mul.w	r8, r8, r5
 8028820:	f10a 0520 	add.w	r5, sl, #32
 8028824:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8028828:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 802882c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8028830:	4442      	add	r2, r8
 8028832:	0a2d      	lsrs	r5, r5, #8
 8028834:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8028838:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 802883c:	432a      	orrs	r2, r5
 802883e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8028840:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8028844:	2cff      	cmp	r4, #255	@ 0xff
 8028846:	d01a      	beq.n	802887e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8028848:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 802884c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8028850:	fb04 fa05 	mul.w	sl, r4, r5
 8028854:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8028858:	fb08 f80e 	mul.w	r8, r8, lr
 802885c:	f10a 0e20 	add.w	lr, sl, #32
 8028860:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8028864:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8028868:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 802886c:	4445      	add	r5, r8
 802886e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8028872:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8028876:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 802887a:	ea45 050e 	orr.w	r5, r5, lr
 802887e:	fb1c fe01 	smulbb	lr, ip, r1
 8028882:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8028886:	f1cc 0810 	rsb	r8, ip, #16
 802888a:	eba8 0801 	sub.w	r8, r8, r1
 802888e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8028892:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8028896:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802889a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802889e:	4341      	muls	r1, r0
 80288a0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80288a4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80288a8:	ea4a 0202 	orr.w	r2, sl, r2
 80288ac:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80288b0:	fb09 1108 	mla	r1, r9, r8, r1
 80288b4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80288b8:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 80288bc:	fb0c 1102 	mla	r1, ip, r2, r1
 80288c0:	ea4b 0505 	orr.w	r5, fp, r5
 80288c4:	fb0e 1e05 	mla	lr, lr, r5, r1
 80288c8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80288cc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80288d0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80288d4:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80288d8:	ea42 0e0e 	orr.w	lr, r2, lr
 80288dc:	fa1f f28e 	uxth.w	r2, lr
 80288e0:	2bff      	cmp	r3, #255	@ 0xff
 80288e2:	d103      	bne.n	80288ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80288e4:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80288e6:	29ff      	cmp	r1, #255	@ 0xff
 80288e8:	f000 80de 	beq.w	8028aa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80288ec:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80288ee:	8838      	ldrh	r0, [r7, #0]
 80288f0:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80288f2:	434b      	muls	r3, r1
 80288f4:	f103 0c01 	add.w	ip, r3, #1
 80288f8:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80288fc:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8028900:	fa5f fc83 	uxtb.w	ip, r3
 8028904:	1203      	asrs	r3, r0, #8
 8028906:	1215      	asrs	r5, r2, #8
 8028908:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 802890c:	fb13 f30c 	smulbb	r3, r3, ip
 8028910:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8028914:	fb05 3501 	mla	r5, r5, r1, r3
 8028918:	10c3      	asrs	r3, r0, #3
 802891a:	10d1      	asrs	r1, r2, #3
 802891c:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8028920:	fb13 f30c 	smulbb	r3, r3, ip
 8028924:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8028928:	fb01 3104 	mla	r1, r1, r4, r3
 802892c:	00c3      	lsls	r3, r0, #3
 802892e:	00d2      	lsls	r2, r2, #3
 8028930:	b2db      	uxtb	r3, r3
 8028932:	b2d2      	uxtb	r2, r2
 8028934:	fb13 f30c 	smulbb	r3, r3, ip
 8028938:	b2ad      	uxth	r5, r5
 802893a:	fb02 3304 	mla	r3, r2, r4, r3
 802893e:	b29a      	uxth	r2, r3
 8028940:	1c6b      	adds	r3, r5, #1
 8028942:	b289      	uxth	r1, r1
 8028944:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8028948:	1c53      	adds	r3, r2, #1
 802894a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802894e:	1c4a      	adds	r2, r1, #1
 8028950:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8028954:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8028958:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802895c:	0949      	lsrs	r1, r1, #5
 802895e:	432b      	orrs	r3, r5
 8028960:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8028964:	430b      	orrs	r3, r1
 8028966:	803b      	strh	r3, [r7, #0]
 8028968:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 802896a:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 802896c:	4413      	add	r3, r2
 802896e:	9321      	str	r3, [sp, #132]	@ 0x84
 8028970:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8028972:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8028974:	441a      	add	r2, r3
 8028976:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8028978:	9222      	str	r2, [sp, #136]	@ 0x88
 802897a:	3b01      	subs	r3, #1
 802897c:	3702      	adds	r7, #2
 802897e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8028980:	e689      	b.n	8028696 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8028982:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8028984:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 8028986:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 8028988:	4433      	add	r3, r6
 802898a:	9321      	str	r3, [sp, #132]	@ 0x84
 802898c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802898e:	441c      	add	r4, r3
 8028990:	9b08      	ldr	r3, [sp, #32]
 8028992:	9422      	str	r4, [sp, #136]	@ 0x88
 8028994:	3b01      	subs	r3, #1
 8028996:	9308      	str	r3, [sp, #32]
 8028998:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802899a:	3302      	adds	r3, #2
 802899c:	9309      	str	r3, [sp, #36]	@ 0x24
 802899e:	e658      	b.n	8028652 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 80289a0:	d028      	beq.n	80289f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80289a2:	9b08      	ldr	r3, [sp, #32]
 80289a4:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 80289a6:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 80289a8:	3b01      	subs	r3, #1
 80289aa:	fb00 5003 	mla	r0, r0, r3, r5
 80289ae:	1400      	asrs	r0, r0, #16
 80289b0:	f53f ae6c 	bmi.w	802868c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80289b4:	3901      	subs	r1, #1
 80289b6:	4288      	cmp	r0, r1
 80289b8:	f6bf ae68 	bge.w	802868c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80289bc:	9924      	ldr	r1, [sp, #144]	@ 0x90
 80289be:	9822      	ldr	r0, [sp, #136]	@ 0x88
 80289c0:	fb01 0303 	mla	r3, r1, r3, r0
 80289c4:	141b      	asrs	r3, r3, #16
 80289c6:	f53f ae61 	bmi.w	802868c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80289ca:	3a01      	subs	r2, #1
 80289cc:	4293      	cmp	r3, r2
 80289ce:	f6bf ae5d 	bge.w	802868c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80289d2:	9b08      	ldr	r3, [sp, #32]
 80289d4:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 80289d8:	9313      	str	r3, [sp, #76]	@ 0x4c
 80289da:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 80289de:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80289e0:	2b00      	cmp	r3, #0
 80289e2:	f300 8082 	bgt.w	8028aea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80289e6:	9b08      	ldr	r3, [sp, #32]
 80289e8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80289ec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80289ee:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80289f2:	9309      	str	r3, [sp, #36]	@ 0x24
 80289f4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80289f6:	2b00      	cmp	r3, #0
 80289f8:	f340 81ef 	ble.w	8028dda <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80289fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8028a00:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8028a04:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8028a08:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8028a0a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8028a0e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8028a12:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8028a16:	eef0 6a62 	vmov.f32	s13, s5
 8028a1a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8028a1e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028a22:	ee77 2a62 	vsub.f32	s5, s14, s5
 8028a26:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 8028a2a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8028a2e:	eef0 6a43 	vmov.f32	s13, s6
 8028a32:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8028a36:	ee12 2a90 	vmov	r2, s5
 8028a3a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8028a3e:	fb92 f3f3 	sdiv	r3, r2, r3
 8028a42:	ee13 2a10 	vmov	r2, s6
 8028a46:	9323      	str	r3, [sp, #140]	@ 0x8c
 8028a48:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8028a4a:	fb92 f3f3 	sdiv	r3, r2, r3
 8028a4e:	9324      	str	r3, [sp, #144]	@ 0x90
 8028a50:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8028a52:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8028a54:	3b01      	subs	r3, #1
 8028a56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028a5a:	9311      	str	r3, [sp, #68]	@ 0x44
 8028a5c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8028a5e:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 8028a62:	bf08      	it	eq
 8028a64:	4613      	moveq	r3, r2
 8028a66:	9308      	str	r3, [sp, #32]
 8028a68:	eeb0 3a67 	vmov.f32	s6, s15
 8028a6c:	eef0 2a47 	vmov.f32	s5, s14
 8028a70:	e5e1      	b.n	8028636 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8028a72:	fb08 f505 	mul.w	r5, r8, r5
 8028a76:	fb09 5303 	mla	r3, r9, r3, r5
 8028a7a:	e661      	b.n	8028740 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8028a7c:	4681      	mov	r9, r0
 8028a7e:	e688      	b.n	8028792 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8028a80:	f1c1 0210 	rsb	r2, r1, #16
 8028a84:	4341      	muls	r1, r0
 8028a86:	fb09 1902 	mla	r9, r9, r2, r1
 8028a8a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8028a8e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8028a92:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8028a96:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8028a9a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8028a9e:	ea42 0909 	orr.w	r9, r2, r9
 8028aa2:	fa1f f289 	uxth.w	r2, r9
 8028aa6:	e71b      	b.n	80288e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8028aa8:	803a      	strh	r2, [r7, #0]
 8028aaa:	e75d      	b.n	8028968 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8028aac:	f115 0e01 	adds.w	lr, r5, #1
 8028ab0:	f53f af5a 	bmi.w	8028968 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8028ab4:	4572      	cmp	r2, lr
 8028ab6:	f6ff af57 	blt.w	8028968 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8028aba:	f110 0e01 	adds.w	lr, r0, #1
 8028abe:	f53f af53 	bmi.w	8028968 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8028ac2:	4573      	cmp	r3, lr
 8028ac4:	f6ff af50 	blt.w	8028968 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8028ac8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8028aca:	9502      	str	r5, [sp, #8]
 8028acc:	b21b      	sxth	r3, r3
 8028ace:	b212      	sxth	r2, r2
 8028ad0:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8028ad4:	9301      	str	r3, [sp, #4]
 8028ad6:	9200      	str	r2, [sp, #0]
 8028ad8:	e9cd c405 	strd	ip, r4, [sp, #20]
 8028adc:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8028ae0:	4639      	mov	r1, r7
 8028ae2:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8028ae4:	f7ff fc04 	bl	80282f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8028ae8:	e73e      	b.n	8028968 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8028aea:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8028aec:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8028af0:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8028af2:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8028af6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8028af8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028afc:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8028afe:	141f      	asrs	r7, r3, #16
 8028b00:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8028b02:	141b      	asrs	r3, r3, #16
 8028b04:	fb01 3707 	mla	r7, r1, r7, r3
 8028b08:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8028b0a:	fa1f fc82 	uxth.w	ip, r2
 8028b0e:	eb03 0a07 	add.w	sl, r3, r7
 8028b12:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8028b16:	f813 9007 	ldrb.w	r9, [r3, r7]
 8028b1a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8028b1e:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 8028b22:	b29b      	uxth	r3, r3
 8028b24:	2d00      	cmp	r5, #0
 8028b26:	f000 813d 	beq.w	8028da4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8028b2a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8028b2e:	940f      	str	r4, [sp, #60]	@ 0x3c
 8028b30:	eb0a 0b01 	add.w	fp, sl, r1
 8028b34:	fa1f fa85 	uxth.w	sl, r5
 8028b38:	fb0a fc0c 	mul.w	ip, sl, ip
 8028b3c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8028b40:	fa1f fa8a 	uxth.w	sl, sl
 8028b44:	eba0 000c 	sub.w	r0, r0, ip
 8028b48:	eba3 030a 	sub.w	r3, r3, sl
 8028b4c:	b280      	uxth	r0, r0
 8028b4e:	fb08 f000 	mul.w	r0, r8, r0
 8028b52:	b29b      	uxth	r3, r3
 8028b54:	fb09 0303 	mla	r3, r9, r3, r0
 8028b58:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8028b5a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8028b5e:	9410      	str	r4, [sp, #64]	@ 0x40
 8028b60:	fb0a 3300 	mla	r3, sl, r0, r3
 8028b64:	fb0c 3304 	mla	r3, ip, r4, r3
 8028b68:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028b6c:	2b00      	cmp	r3, #0
 8028b6e:	f000 810b 	beq.w	8028d88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8028b72:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8028b74:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8028b76:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8028b7a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8028b7e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8028b82:	f000 8114 	beq.w	8028dae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8028b86:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8028b8a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8028b8e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8028b92:	fb09 f707 	mul.w	r7, r9, r7
 8028b96:	fb0a fc0c 	mul.w	ip, sl, ip
 8028b9a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8028b9e:	f107 0b20 	add.w	fp, r7, #32
 8028ba2:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8028ba6:	44cc      	add	ip, r9
 8028ba8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8028bac:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8028bb0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8028bb4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8028bb8:	ea4c 0909 	orr.w	r9, ip, r9
 8028bbc:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8028bc0:	8847      	ldrh	r7, [r0, #2]
 8028bc2:	d019      	beq.n	8028bf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8028bc4:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8028bc8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8028bcc:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8028bd0:	fb08 f807 	mul.w	r8, r8, r7
 8028bd4:	fb0a fc0c 	mul.w	ip, sl, ip
 8028bd8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8028bdc:	f108 0b20 	add.w	fp, r8, #32
 8028be0:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8028be4:	44bc      	add	ip, r7
 8028be6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8028bea:	0a3f      	lsrs	r7, r7, #8
 8028bec:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8028bf0:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8028bf4:	ea4c 0707 	orr.w	r7, ip, r7
 8028bf8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8028bfc:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8028c00:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8028c04:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8028c08:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8028c0c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8028c10:	ea4c 0909 	orr.w	r9, ip, r9
 8028c14:	ea4a 0707 	orr.w	r7, sl, r7
 8028c18:	2d00      	cmp	r5, #0
 8028c1a:	f000 80ca 	beq.w	8028db2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8028c1e:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8028c22:	3901      	subs	r1, #1
 8028c24:	0049      	lsls	r1, r1, #1
 8028c26:	3102      	adds	r1, #2
 8028c28:	eb00 0c01 	add.w	ip, r0, r1
 8028c2c:	5a41      	ldrh	r1, [r0, r1]
 8028c2e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8028c30:	28ff      	cmp	r0, #255	@ 0xff
 8028c32:	d019      	beq.n	8028c68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8028c34:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8028c36:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 8028c3a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8028c3e:	fb04 fa01 	mul.w	sl, r4, r1
 8028c42:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8028c46:	fb08 f800 	mul.w	r8, r8, r0
 8028c4a:	f10a 0020 	add.w	r0, sl, #32
 8028c4e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8028c52:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8028c56:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8028c5a:	4441      	add	r1, r8
 8028c5c:	0a00      	lsrs	r0, r0, #8
 8028c5e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8028c62:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8028c66:	4301      	orrs	r1, r0
 8028c68:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8028c6a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8028c6e:	2cff      	cmp	r4, #255	@ 0xff
 8028c70:	d01a      	beq.n	8028ca8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8028c72:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 8028c76:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8028c7a:	fb04 fa00 	mul.w	sl, r4, r0
 8028c7e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8028c82:	fb08 f80c 	mul.w	r8, r8, ip
 8028c86:	f10a 0c20 	add.w	ip, sl, #32
 8028c8a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8028c8e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8028c92:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8028c96:	4440      	add	r0, r8
 8028c98:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028c9c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8028ca0:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8028ca4:	ea40 000c 	orr.w	r0, r0, ip
 8028ca8:	fb15 fc02 	smulbb	ip, r5, r2
 8028cac:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8028cb0:	f1c5 0810 	rsb	r8, r5, #16
 8028cb4:	eba8 0802 	sub.w	r8, r8, r2
 8028cb8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8028cbc:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8028cc0:	437a      	muls	r2, r7
 8028cc2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8028cc6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8028cca:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8028cce:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8028cd2:	fb09 2208 	mla	r2, r9, r8, r2
 8028cd6:	ea4a 0101 	orr.w	r1, sl, r1
 8028cda:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8028cde:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8028ce2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8028ce6:	fb05 2201 	mla	r2, r5, r1, r2
 8028cea:	ea4b 0000 	orr.w	r0, fp, r0
 8028cee:	fb0c 2200 	mla	r2, ip, r0, r2
 8028cf2:	0d57      	lsrs	r7, r2, #21
 8028cf4:	0952      	lsrs	r2, r2, #5
 8028cf6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8028cfa:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8028cfe:	433a      	orrs	r2, r7
 8028d00:	2bff      	cmp	r3, #255	@ 0xff
 8028d02:	b292      	uxth	r2, r2
 8028d04:	d102      	bne.n	8028d0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8028d06:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8028d08:	29ff      	cmp	r1, #255	@ 0xff
 8028d0a:	d063      	beq.n	8028dd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8028d0c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8028d0e:	f8be 1000 	ldrh.w	r1, [lr]
 8028d12:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8028d14:	4343      	muls	r3, r0
 8028d16:	1c58      	adds	r0, r3, #1
 8028d18:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8028d1c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8028d20:	1208      	asrs	r0, r1, #8
 8028d22:	b2db      	uxtb	r3, r3
 8028d24:	1215      	asrs	r5, r2, #8
 8028d26:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8028d2a:	fb10 f003 	smulbb	r0, r0, r3
 8028d2e:	10cf      	asrs	r7, r1, #3
 8028d30:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8028d34:	00c9      	lsls	r1, r1, #3
 8028d36:	fb05 0504 	mla	r5, r5, r4, r0
 8028d3a:	b2c9      	uxtb	r1, r1
 8028d3c:	10d0      	asrs	r0, r2, #3
 8028d3e:	00d2      	lsls	r2, r2, #3
 8028d40:	fb11 f103 	smulbb	r1, r1, r3
 8028d44:	b2d2      	uxtb	r2, r2
 8028d46:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8028d4a:	fb02 1204 	mla	r2, r2, r4, r1
 8028d4e:	fb17 f703 	smulbb	r7, r7, r3
 8028d52:	b2ad      	uxth	r5, r5
 8028d54:	b292      	uxth	r2, r2
 8028d56:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8028d5a:	fb00 7004 	mla	r0, r0, r4, r7
 8028d5e:	1c6b      	adds	r3, r5, #1
 8028d60:	1c57      	adds	r7, r2, #1
 8028d62:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8028d66:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8028d6a:	b280      	uxth	r0, r0
 8028d6c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8028d70:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8028d74:	433d      	orrs	r5, r7
 8028d76:	1c47      	adds	r7, r0, #1
 8028d78:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8028d7c:	097f      	lsrs	r7, r7, #5
 8028d7e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8028d82:	433d      	orrs	r5, r7
 8028d84:	f8ae 5000 	strh.w	r5, [lr]
 8028d88:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8028d8a:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8028d8c:	4413      	add	r3, r2
 8028d8e:	9321      	str	r3, [sp, #132]	@ 0x84
 8028d90:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8028d92:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8028d94:	441a      	add	r2, r3
 8028d96:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8028d98:	9222      	str	r2, [sp, #136]	@ 0x88
 8028d9a:	3b01      	subs	r3, #1
 8028d9c:	f10e 0e02 	add.w	lr, lr, #2
 8028da0:	9313      	str	r3, [sp, #76]	@ 0x4c
 8028da2:	e61c      	b.n	80289de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8028da4:	fb08 f000 	mul.w	r0, r8, r0
 8028da8:	fb09 0303 	mla	r3, r9, r3, r0
 8028dac:	e6dc      	b.n	8028b68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8028dae:	46b9      	mov	r9, r7
 8028db0:	e704      	b.n	8028bbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8028db2:	f1c2 0110 	rsb	r1, r2, #16
 8028db6:	437a      	muls	r2, r7
 8028db8:	fb09 2901 	mla	r9, r9, r1, r2
 8028dbc:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8028dc0:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8028dc4:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8028dc8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8028dcc:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8028dd0:	4302      	orrs	r2, r0
 8028dd2:	e795      	b.n	8028d00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8028dd4:	f8ae 2000 	strh.w	r2, [lr]
 8028dd8:	e7d6      	b.n	8028d88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8028dda:	b017      	add	sp, #92	@ 0x5c
 8028ddc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08028de0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8028de0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028de4:	b085      	sub	sp, #20
 8028de6:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 8028dea:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 8028dee:	9103      	str	r1, [sp, #12]
 8028df0:	fb00 7406 	mla	r4, r0, r6, r7
 8028df4:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8028df8:	2800      	cmp	r0, #0
 8028dfa:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 8028dfe:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 8028e02:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 8028e06:	9501      	str	r5, [sp, #4]
 8028e08:	eb02 0904 	add.w	r9, r2, r4
 8028e0c:	f2c0 8141 	blt.w	8029092 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8028e10:	4583      	cmp	fp, r0
 8028e12:	f340 813e 	ble.w	8029092 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8028e16:	2f00      	cmp	r7, #0
 8028e18:	f2c0 8137 	blt.w	802908a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8028e1c:	42be      	cmp	r6, r7
 8028e1e:	f340 8134 	ble.w	802908a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8028e22:	f812 c004 	ldrb.w	ip, [r2, r4]
 8028e26:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8028e2a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8028e2e:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 8028e32:	4355      	muls	r5, r2
 8028e34:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8028e38:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8028e3c:	fb0c f203 	mul.w	r2, ip, r3
 8028e40:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8028e44:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8028e48:	441d      	add	r5, r3
 8028e4a:	f102 0320 	add.w	r3, r2, #32
 8028e4e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8028e52:	0a1b      	lsrs	r3, r3, #8
 8028e54:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8028e58:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8028e5c:	431c      	orrs	r4, r3
 8028e5e:	1c7b      	adds	r3, r7, #1
 8028e60:	f100 811c 	bmi.w	802909c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8028e64:	429e      	cmp	r6, r3
 8028e66:	f340 8119 	ble.w	802909c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8028e6a:	2900      	cmp	r1, #0
 8028e6c:	f000 8119 	beq.w	80290a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8028e70:	9a01      	ldr	r2, [sp, #4]
 8028e72:	f899 3001 	ldrb.w	r3, [r9, #1]
 8028e76:	8855      	ldrh	r5, [r2, #2]
 8028e78:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8028e7c:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 8028e80:	fb08 f802 	mul.w	r8, r8, r2
 8028e84:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8028e88:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8028e8c:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8028e90:	435d      	muls	r5, r3
 8028e92:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8028e96:	44d0      	add	r8, sl
 8028e98:	f105 0a20 	add.w	sl, r5, #32
 8028e9c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8028ea0:	0a2d      	lsrs	r5, r5, #8
 8028ea2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8028ea6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8028eaa:	432a      	orrs	r2, r5
 8028eac:	3001      	adds	r0, #1
 8028eae:	f100 80fe 	bmi.w	80290ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8028eb2:	4583      	cmp	fp, r0
 8028eb4:	f340 80fb 	ble.w	80290ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8028eb8:	f1be 0f00 	cmp.w	lr, #0
 8028ebc:	f000 80fc 	beq.w	80290b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8028ec0:	2f00      	cmp	r7, #0
 8028ec2:	f2c0 80f1 	blt.w	80290a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8028ec6:	42be      	cmp	r6, r7
 8028ec8:	f340 80ee 	ble.w	80290a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8028ecc:	9801      	ldr	r0, [sp, #4]
 8028ece:	f819 5006 	ldrb.w	r5, [r9, r6]
 8028ed2:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8028ed6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8028eda:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 8028ede:	fb0a fa00 	mul.w	sl, sl, r0
 8028ee2:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 8028ee6:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8028eea:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8028eee:	fb05 f808 	mul.w	r8, r5, r8
 8028ef2:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 8028ef6:	4482      	add	sl, r0
 8028ef8:	f108 0020 	add.w	r0, r8, #32
 8028efc:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8028f00:	0a00      	lsrs	r0, r0, #8
 8028f02:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8028f06:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8028f0a:	ea4b 0b00 	orr.w	fp, fp, r0
 8028f0e:	3701      	adds	r7, #1
 8028f10:	f100 80d7 	bmi.w	80290c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8028f14:	42be      	cmp	r6, r7
 8028f16:	f340 80d4 	ble.w	80290c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8028f1a:	2900      	cmp	r1, #0
 8028f1c:	f000 80d4 	beq.w	80290c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8028f20:	3601      	adds	r6, #1
 8028f22:	9801      	ldr	r0, [sp, #4]
 8028f24:	f819 7006 	ldrb.w	r7, [r9, r6]
 8028f28:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8028f2c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8028f30:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 8028f34:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8028f38:	fb09 f906 	mul.w	r9, r9, r6
 8028f3c:	fb07 f800 	mul.w	r8, r7, r0
 8028f40:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 8028f44:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8028f48:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 8028f4c:	44d1      	add	r9, sl
 8028f4e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8028f52:	f108 0020 	add.w	r0, r8, #32
 8028f56:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8028f5a:	0a00      	lsrs	r0, r0, #8
 8028f5c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8028f60:	4330      	orrs	r0, r6
 8028f62:	b28e      	uxth	r6, r1
 8028f64:	fa1f f98e 	uxth.w	r9, lr
 8028f68:	fb06 f809 	mul.w	r8, r6, r9
 8028f6c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8028f70:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8028f74:	0136      	lsls	r6, r6, #4
 8028f76:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8028f7a:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8028f7e:	9601      	str	r6, [sp, #4]
 8028f80:	ea4a 0404 	orr.w	r4, sl, r4
 8028f84:	fa1f f689 	uxth.w	r6, r9
 8028f88:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8028f8c:	fb11 f90e 	smulbb	r9, r1, lr
 8028f90:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8028f94:	9602      	str	r6, [sp, #8]
 8028f96:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8028f9a:	4626      	mov	r6, r4
 8028f9c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8028fa0:	f1ce 0410 	rsb	r4, lr, #16
 8028fa4:	1a64      	subs	r4, r4, r1
 8028fa6:	ea4a 0202 	orr.w	r2, sl, r2
 8028faa:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8028fae:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8028fb2:	434a      	muls	r2, r1
 8028fb4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8028fb8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8028fbc:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8028fc0:	fb04 2406 	mla	r4, r4, r6, r2
 8028fc4:	ea4a 0000 	orr.w	r0, sl, r0
 8028fc8:	fb09 4200 	mla	r2, r9, r0, r4
 8028fcc:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8028fd0:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8028fd4:	9801      	ldr	r0, [sp, #4]
 8028fd6:	9903      	ldr	r1, [sp, #12]
 8028fd8:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8028fdc:	ea44 0b0b 	orr.w	fp, r4, fp
 8028fe0:	9c02      	ldr	r4, [sp, #8]
 8028fe2:	8809      	ldrh	r1, [r1, #0]
 8028fe4:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 8028fe8:	1b00      	subs	r0, r0, r4
 8028fea:	9c01      	ldr	r4, [sp, #4]
 8028fec:	eba4 0608 	sub.w	r6, r4, r8
 8028ff0:	b2b6      	uxth	r6, r6
 8028ff2:	b280      	uxth	r0, r0
 8028ff4:	4373      	muls	r3, r6
 8028ff6:	fb0c 3300 	mla	r3, ip, r0, r3
 8028ffa:	9802      	ldr	r0, [sp, #8]
 8028ffc:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8029000:	fb00 3505 	mla	r5, r0, r5, r3
 8029004:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8029008:	fb08 5707 	mla	r7, r8, r7, r5
 802900c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8029010:	120b      	asrs	r3, r1, #8
 8029012:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8029016:	ea6f 2727 	mvn.w	r7, r7, asr #8
 802901a:	b2ff      	uxtb	r7, r7
 802901c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8029020:	10c8      	asrs	r0, r1, #3
 8029022:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8029026:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 802902a:	00c9      	lsls	r1, r1, #3
 802902c:	437b      	muls	r3, r7
 802902e:	ea42 0e0e 	orr.w	lr, r2, lr
 8029032:	b2c9      	uxtb	r1, r1
 8029034:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8029038:	fa1f f28e 	uxth.w	r2, lr
 802903c:	4378      	muls	r0, r7
 802903e:	434f      	muls	r7, r1
 8029040:	1c59      	adds	r1, r3, #1
 8029042:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8029046:	1213      	asrs	r3, r2, #8
 8029048:	f023 0307 	bic.w	r3, r3, #7
 802904c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8029050:	1c41      	adds	r1, r0, #1
 8029052:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8029056:	10d1      	asrs	r1, r2, #3
 8029058:	f021 0103 	bic.w	r1, r1, #3
 802905c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8029060:	021b      	lsls	r3, r3, #8
 8029062:	00c9      	lsls	r1, r1, #3
 8029064:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8029068:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802906c:	430b      	orrs	r3, r1
 802906e:	1c79      	adds	r1, r7, #1
 8029070:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8029074:	00d2      	lsls	r2, r2, #3
 8029076:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 802907a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802907e:	431a      	orrs	r2, r3
 8029080:	9b03      	ldr	r3, [sp, #12]
 8029082:	801a      	strh	r2, [r3, #0]
 8029084:	b005      	add	sp, #20
 8029086:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802908a:	f04f 0c00 	mov.w	ip, #0
 802908e:	4664      	mov	r4, ip
 8029090:	e6e5      	b.n	8028e5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8029092:	2300      	movs	r3, #0
 8029094:	469c      	mov	ip, r3
 8029096:	461a      	mov	r2, r3
 8029098:	461c      	mov	r4, r3
 802909a:	e707      	b.n	8028eac <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 802909c:	2300      	movs	r3, #0
 802909e:	461a      	mov	r2, r3
 80290a0:	e704      	b.n	8028eac <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80290a2:	460b      	mov	r3, r1
 80290a4:	460a      	mov	r2, r1
 80290a6:	e701      	b.n	8028eac <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80290a8:	2500      	movs	r5, #0
 80290aa:	46ab      	mov	fp, r5
 80290ac:	e72f      	b.n	8028f0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 80290ae:	2700      	movs	r7, #0
 80290b0:	463d      	mov	r5, r7
 80290b2:	4638      	mov	r0, r7
 80290b4:	46bb      	mov	fp, r7
 80290b6:	e754      	b.n	8028f62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80290b8:	4677      	mov	r7, lr
 80290ba:	4675      	mov	r5, lr
 80290bc:	4670      	mov	r0, lr
 80290be:	46f3      	mov	fp, lr
 80290c0:	e74f      	b.n	8028f62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80290c2:	2700      	movs	r7, #0
 80290c4:	4638      	mov	r0, r7
 80290c6:	e74c      	b.n	8028f62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80290c8:	460f      	mov	r7, r1
 80290ca:	4608      	mov	r0, r1
 80290cc:	e749      	b.n	8028f62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

080290d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80290d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80290d4:	b093      	sub	sp, #76	@ 0x4c
 80290d6:	9210      	str	r2, [sp, #64]	@ 0x40
 80290d8:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80290da:	910e      	str	r1, [sp, #56]	@ 0x38
 80290dc:	9306      	str	r3, [sp, #24]
 80290de:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 80290e2:	9011      	str	r0, [sp, #68]	@ 0x44
 80290e4:	6850      	ldr	r0, [r2, #4]
 80290e6:	6812      	ldr	r2, [r2, #0]
 80290e8:	fb00 1303 	mla	r3, r0, r3, r1
 80290ec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80290f0:	9307      	str	r3, [sp, #28]
 80290f2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80290f4:	681b      	ldr	r3, [r3, #0]
 80290f6:	9308      	str	r3, [sp, #32]
 80290f8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80290fa:	685b      	ldr	r3, [r3, #4]
 80290fc:	9309      	str	r3, [sp, #36]	@ 0x24
 80290fe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8029100:	2b00      	cmp	r3, #0
 8029102:	dc03      	bgt.n	802910c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8029104:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8029106:	2b00      	cmp	r3, #0
 8029108:	f340 83b4 	ble.w	8029874 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 802910c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802910e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8029112:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8029116:	1e48      	subs	r0, r1, #1
 8029118:	1e55      	subs	r5, r2, #1
 802911a:	9b06      	ldr	r3, [sp, #24]
 802911c:	2b00      	cmp	r3, #0
 802911e:	f340 8163 	ble.w	80293e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8029122:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 8029124:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8029126:	1436      	asrs	r6, r6, #16
 8029128:	ea4f 4323 	mov.w	r3, r3, asr #16
 802912c:	d406      	bmi.n	802913c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802912e:	4286      	cmp	r6, r0
 8029130:	da04      	bge.n	802913c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8029132:	2b00      	cmp	r3, #0
 8029134:	db02      	blt.n	802913c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8029136:	42ab      	cmp	r3, r5
 8029138:	f2c0 8157 	blt.w	80293ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 802913c:	3601      	adds	r6, #1
 802913e:	f100 8144 	bmi.w	80293ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8029142:	42b1      	cmp	r1, r6
 8029144:	f2c0 8141 	blt.w	80293ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8029148:	3301      	adds	r3, #1
 802914a:	f100 813e 	bmi.w	80293ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802914e:	429a      	cmp	r2, r3
 8029150:	f2c0 813b 	blt.w	80293ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8029154:	9b06      	ldr	r3, [sp, #24]
 8029156:	9f07      	ldr	r7, [sp, #28]
 8029158:	930f      	str	r3, [sp, #60]	@ 0x3c
 802915a:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 802915e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8029160:	2b00      	cmp	r3, #0
 8029162:	f340 8164 	ble.w	802942e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8029166:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8029168:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 802916a:	1418      	asrs	r0, r3, #16
 802916c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 802916e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8029172:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8029174:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8029178:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802917a:	142d      	asrs	r5, r5, #16
 802917c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8029180:	f100 81ee 	bmi.w	8029560 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8029184:	f102 3eff 	add.w	lr, r2, #4294967295
 8029188:	4575      	cmp	r5, lr
 802918a:	f280 81e9 	bge.w	8029560 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802918e:	2800      	cmp	r0, #0
 8029190:	f2c0 81e6 	blt.w	8029560 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8029194:	f103 3eff 	add.w	lr, r3, #4294967295
 8029198:	4570      	cmp	r0, lr
 802919a:	f280 81e1 	bge.w	8029560 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802919e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80291a0:	b212      	sxth	r2, r2
 80291a2:	fb00 5002 	mla	r0, r0, r2, r5
 80291a6:	fa1f fe81 	uxth.w	lr, r1
 80291aa:	eb03 0a00 	add.w	sl, r3, r0
 80291ae:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80291b2:	f813 9000 	ldrb.w	r9, [r3, r0]
 80291b6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80291ba:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 80291be:	b29b      	uxth	r3, r3
 80291c0:	f1bc 0f00 	cmp.w	ip, #0
 80291c4:	f000 8179 	beq.w	80294ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80291c8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80291cc:	940a      	str	r4, [sp, #40]	@ 0x28
 80291ce:	eb0a 0b02 	add.w	fp, sl, r2
 80291d2:	fa1f fa8c 	uxth.w	sl, ip
 80291d6:	fb0a fe0e 	mul.w	lr, sl, lr
 80291da:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80291de:	fa1f fa8a 	uxth.w	sl, sl
 80291e2:	eba5 050e 	sub.w	r5, r5, lr
 80291e6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80291ea:	940b      	str	r4, [sp, #44]	@ 0x2c
 80291ec:	eba3 030a 	sub.w	r3, r3, sl
 80291f0:	b2ad      	uxth	r5, r5
 80291f2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80291f4:	b29b      	uxth	r3, r3
 80291f6:	fb08 f505 	mul.w	r5, r8, r5
 80291fa:	fb09 5303 	mla	r3, r9, r3, r5
 80291fe:	fb0a 3304 	mla	r3, sl, r4, r3
 8029202:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8029204:	fb0e 3304 	mla	r3, lr, r4, r3
 8029208:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802920c:	2b00      	cmp	r3, #0
 802920e:	f000 80cf 	beq.w	80293b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8029212:	9c08      	ldr	r4, [sp, #32]
 8029214:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8029218:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 802921c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8029220:	f000 8150 	beq.w	80294c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8029224:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8029228:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802922c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8029230:	fb09 f000 	mul.w	r0, r9, r0
 8029234:	fb0a fe0e 	mul.w	lr, sl, lr
 8029238:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 802923c:	f100 0b20 	add.w	fp, r0, #32
 8029240:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8029244:	44ce      	add	lr, r9
 8029246:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802924a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802924e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8029252:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8029256:	ea4e 0909 	orr.w	r9, lr, r9
 802925a:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 802925e:	8868      	ldrh	r0, [r5, #2]
 8029260:	d019      	beq.n	8029296 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8029262:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8029266:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802926a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802926e:	fb08 f800 	mul.w	r8, r8, r0
 8029272:	fb0a fe0e 	mul.w	lr, sl, lr
 8029276:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802927a:	f108 0b20 	add.w	fp, r8, #32
 802927e:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8029282:	4486      	add	lr, r0
 8029284:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8029288:	0a00      	lsrs	r0, r0, #8
 802928a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802928e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8029292:	ea4e 0000 	orr.w	r0, lr, r0
 8029296:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802929a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802929e:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 80292a2:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80292a6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80292aa:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80292ae:	ea4e 0909 	orr.w	r9, lr, r9
 80292b2:	ea4a 0000 	orr.w	r0, sl, r0
 80292b6:	f1bc 0f00 	cmp.w	ip, #0
 80292ba:	f000 8105 	beq.w	80294c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80292be:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 80292c2:	3a01      	subs	r2, #1
 80292c4:	0052      	lsls	r2, r2, #1
 80292c6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80292c8:	3202      	adds	r2, #2
 80292ca:	2cff      	cmp	r4, #255	@ 0xff
 80292cc:	eb05 0e02 	add.w	lr, r5, r2
 80292d0:	5aaa      	ldrh	r2, [r5, r2]
 80292d2:	d018      	beq.n	8029306 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80292d4:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 80292d8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80292dc:	fb04 fa02 	mul.w	sl, r4, r2
 80292e0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80292e4:	fb08 f805 	mul.w	r8, r8, r5
 80292e8:	f10a 0520 	add.w	r5, sl, #32
 80292ec:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80292f0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80292f4:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80292f8:	4442      	add	r2, r8
 80292fa:	0a2d      	lsrs	r5, r5, #8
 80292fc:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8029300:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8029304:	432a      	orrs	r2, r5
 8029306:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8029308:	f8be 5002 	ldrh.w	r5, [lr, #2]
 802930c:	2cff      	cmp	r4, #255	@ 0xff
 802930e:	d01a      	beq.n	8029346 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8029310:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 8029314:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8029318:	fb04 fa05 	mul.w	sl, r4, r5
 802931c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8029320:	fb08 f80e 	mul.w	r8, r8, lr
 8029324:	f10a 0e20 	add.w	lr, sl, #32
 8029328:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 802932c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8029330:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8029334:	4445      	add	r5, r8
 8029336:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802933a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802933e:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8029342:	ea45 050e 	orr.w	r5, r5, lr
 8029346:	fb1c fe01 	smulbb	lr, ip, r1
 802934a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802934e:	f1cc 0810 	rsb	r8, ip, #16
 8029352:	eba8 0801 	sub.w	r8, r8, r1
 8029356:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802935a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802935e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8029362:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8029366:	4341      	muls	r1, r0
 8029368:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 802936c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8029370:	ea4a 0202 	orr.w	r2, sl, r2
 8029374:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8029378:	fb09 1108 	mla	r1, r9, r8, r1
 802937c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8029380:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8029384:	fb0c 1102 	mla	r1, ip, r2, r1
 8029388:	ea4b 0505 	orr.w	r5, fp, r5
 802938c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8029390:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8029394:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8029398:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802939c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80293a0:	ea42 0e0e 	orr.w	lr, r2, lr
 80293a4:	fa1f f28e 	uxth.w	r2, lr
 80293a8:	2bff      	cmp	r3, #255	@ 0xff
 80293aa:	f040 80a1 	bne.w	80294f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 80293ae:	803a      	strh	r2, [r7, #0]
 80293b0:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80293b2:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 80293b4:	4413      	add	r3, r2
 80293b6:	931d      	str	r3, [sp, #116]	@ 0x74
 80293b8:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 80293ba:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80293bc:	441a      	add	r2, r3
 80293be:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80293c0:	921e      	str	r2, [sp, #120]	@ 0x78
 80293c2:	3b01      	subs	r3, #1
 80293c4:	3702      	adds	r7, #2
 80293c6:	930f      	str	r3, [sp, #60]	@ 0x3c
 80293c8:	e6c9      	b.n	802915e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80293ca:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80293cc:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 80293ce:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 80293d0:	4433      	add	r3, r6
 80293d2:	931d      	str	r3, [sp, #116]	@ 0x74
 80293d4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80293d6:	441c      	add	r4, r3
 80293d8:	9b06      	ldr	r3, [sp, #24]
 80293da:	941e      	str	r4, [sp, #120]	@ 0x78
 80293dc:	3b01      	subs	r3, #1
 80293de:	9306      	str	r3, [sp, #24]
 80293e0:	9b07      	ldr	r3, [sp, #28]
 80293e2:	3302      	adds	r3, #2
 80293e4:	9307      	str	r3, [sp, #28]
 80293e6:	e698      	b.n	802911a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80293e8:	d028      	beq.n	802943c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80293ea:	9b06      	ldr	r3, [sp, #24]
 80293ec:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80293ee:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 80293f0:	3b01      	subs	r3, #1
 80293f2:	fb00 5003 	mla	r0, r0, r3, r5
 80293f6:	1400      	asrs	r0, r0, #16
 80293f8:	f53f aeac 	bmi.w	8029154 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80293fc:	3901      	subs	r1, #1
 80293fe:	4288      	cmp	r0, r1
 8029400:	f6bf aea8 	bge.w	8029154 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8029404:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8029406:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8029408:	fb01 0303 	mla	r3, r1, r3, r0
 802940c:	141b      	asrs	r3, r3, #16
 802940e:	f53f aea1 	bmi.w	8029154 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8029412:	3a01      	subs	r2, #1
 8029414:	4293      	cmp	r3, r2
 8029416:	f6bf ae9d 	bge.w	8029154 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802941a:	9b06      	ldr	r3, [sp, #24]
 802941c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8029420:	930f      	str	r3, [sp, #60]	@ 0x3c
 8029422:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8029426:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8029428:	2b00      	cmp	r3, #0
 802942a:	f300 80b6 	bgt.w	802959a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 802942e:	9b06      	ldr	r3, [sp, #24]
 8029430:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8029434:	9b07      	ldr	r3, [sp, #28]
 8029436:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802943a:	9307      	str	r3, [sp, #28]
 802943c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802943e:	2b00      	cmp	r3, #0
 8029440:	f340 8218 	ble.w	8029874 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8029444:	ee30 0a04 	vadd.f32	s0, s0, s8
 8029448:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802944c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8029450:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8029452:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8029456:	ee31 1a05 	vadd.f32	s2, s2, s10
 802945a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802945e:	eef0 6a62 	vmov.f32	s13, s5
 8029462:	ee61 7a27 	vmul.f32	s15, s2, s15
 8029466:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802946a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802946e:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 8029472:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8029476:	eef0 6a43 	vmov.f32	s13, s6
 802947a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802947e:	ee12 2a90 	vmov	r2, s5
 8029482:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8029486:	fb92 f3f3 	sdiv	r3, r2, r3
 802948a:	ee13 2a10 	vmov	r2, s6
 802948e:	931f      	str	r3, [sp, #124]	@ 0x7c
 8029490:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8029492:	fb92 f3f3 	sdiv	r3, r2, r3
 8029496:	9320      	str	r3, [sp, #128]	@ 0x80
 8029498:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802949a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802949c:	3b01      	subs	r3, #1
 802949e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80294a2:	930e      	str	r3, [sp, #56]	@ 0x38
 80294a4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80294a6:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 80294aa:	bf08      	it	eq
 80294ac:	4613      	moveq	r3, r2
 80294ae:	9306      	str	r3, [sp, #24]
 80294b0:	eeb0 3a67 	vmov.f32	s6, s15
 80294b4:	eef0 2a47 	vmov.f32	s5, s14
 80294b8:	e621      	b.n	80290fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80294ba:	fb08 f505 	mul.w	r5, r8, r5
 80294be:	fb09 5303 	mla	r3, r9, r3, r5
 80294c2:	e6a1      	b.n	8029208 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80294c4:	4681      	mov	r9, r0
 80294c6:	e6c8      	b.n	802925a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 80294c8:	f1c1 0210 	rsb	r2, r1, #16
 80294cc:	4341      	muls	r1, r0
 80294ce:	fb09 1902 	mla	r9, r9, r2, r1
 80294d2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80294d6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80294da:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80294de:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80294e2:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80294e6:	ea42 0909 	orr.w	r9, r2, r9
 80294ea:	fa1f f289 	uxth.w	r2, r9
 80294ee:	e75b      	b.n	80293a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80294f0:	f8b7 c000 	ldrh.w	ip, [r7]
 80294f4:	43db      	mvns	r3, r3
 80294f6:	ea4f 202c 	mov.w	r0, ip, asr #8
 80294fa:	fa5f fe83 	uxtb.w	lr, r3
 80294fe:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8029502:	fb00 f00e 	mul.w	r0, r0, lr
 8029506:	1c41      	adds	r1, r0, #1
 8029508:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802950c:	1211      	asrs	r1, r2, #8
 802950e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8029512:	f021 0107 	bic.w	r1, r1, #7
 8029516:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802951a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 802951e:	48d7      	ldr	r0, [pc, #860]	@ (802987c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8029520:	fb05 f50e 	mul.w	r5, r5, lr
 8029524:	b2c9      	uxtb	r1, r1
 8029526:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 802952a:	1c69      	adds	r1, r5, #1
 802952c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8029530:	10d1      	asrs	r1, r2, #3
 8029532:	f021 0103 	bic.w	r1, r1, #3
 8029536:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 802953a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802953e:	b2db      	uxtb	r3, r3
 8029540:	00c9      	lsls	r1, r1, #3
 8029542:	fb03 f30e 	mul.w	r3, r3, lr
 8029546:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802954a:	4301      	orrs	r1, r0
 802954c:	1c58      	adds	r0, r3, #1
 802954e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8029552:	00d2      	lsls	r2, r2, #3
 8029554:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8029558:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802955c:	430a      	orrs	r2, r1
 802955e:	e726      	b.n	80293ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8029560:	f115 0e01 	adds.w	lr, r5, #1
 8029564:	f53f af24 	bmi.w	80293b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8029568:	4572      	cmp	r2, lr
 802956a:	f6ff af21 	blt.w	80293b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802956e:	f110 0e01 	adds.w	lr, r0, #1
 8029572:	f53f af1d 	bmi.w	80293b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8029576:	4573      	cmp	r3, lr
 8029578:	f6ff af1a 	blt.w	80293b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802957c:	b21b      	sxth	r3, r3
 802957e:	b212      	sxth	r2, r2
 8029580:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8029584:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8029588:	9301      	str	r3, [sp, #4]
 802958a:	9200      	str	r2, [sp, #0]
 802958c:	4639      	mov	r1, r7
 802958e:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8029592:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8029594:	f7ff fc24 	bl	8028de0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8029598:	e70a      	b.n	80293b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802959a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 802959c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80295a0:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80295a2:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80295a6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80295a8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80295ac:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80295ae:	141f      	asrs	r7, r3, #16
 80295b0:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80295b2:	141b      	asrs	r3, r3, #16
 80295b4:	fb01 3707 	mla	r7, r1, r7, r3
 80295b8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80295ba:	fa1f fc82 	uxth.w	ip, r2
 80295be:	eb03 0a07 	add.w	sl, r3, r7
 80295c2:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80295c6:	f813 9007 	ldrb.w	r9, [r3, r7]
 80295ca:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80295ce:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 80295d2:	b29b      	uxth	r3, r3
 80295d4:	2d00      	cmp	r5, #0
 80295d6:	f000 80fe 	beq.w	80297d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 80295da:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80295de:	940c      	str	r4, [sp, #48]	@ 0x30
 80295e0:	eb0a 0b01 	add.w	fp, sl, r1
 80295e4:	fa1f fa85 	uxth.w	sl, r5
 80295e8:	fb0a fc0c 	mul.w	ip, sl, ip
 80295ec:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80295f0:	fa1f fa8a 	uxth.w	sl, sl
 80295f4:	eba0 000c 	sub.w	r0, r0, ip
 80295f8:	eba3 030a 	sub.w	r3, r3, sl
 80295fc:	b280      	uxth	r0, r0
 80295fe:	fb08 f000 	mul.w	r0, r8, r0
 8029602:	b29b      	uxth	r3, r3
 8029604:	fb09 0303 	mla	r3, r9, r3, r0
 8029608:	980c      	ldr	r0, [sp, #48]	@ 0x30
 802960a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802960e:	940d      	str	r4, [sp, #52]	@ 0x34
 8029610:	fb0a 3300 	mla	r3, sl, r0, r3
 8029614:	fb0c 3304 	mla	r3, ip, r4, r3
 8029618:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802961c:	2b00      	cmp	r3, #0
 802961e:	f000 80cc 	beq.w	80297ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8029622:	9808      	ldr	r0, [sp, #32]
 8029624:	9c08      	ldr	r4, [sp, #32]
 8029626:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 802962a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802962e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8029632:	f000 80d5 	beq.w	80297e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8029636:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 802963a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802963e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8029642:	fb09 f707 	mul.w	r7, r9, r7
 8029646:	fb0a fc0c 	mul.w	ip, sl, ip
 802964a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802964e:	f107 0b20 	add.w	fp, r7, #32
 8029652:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8029656:	44cc      	add	ip, r9
 8029658:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 802965c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8029660:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8029664:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8029668:	ea4c 0909 	orr.w	r9, ip, r9
 802966c:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8029670:	8847      	ldrh	r7, [r0, #2]
 8029672:	d019      	beq.n	80296a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8029674:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8029678:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802967c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8029680:	fb08 f807 	mul.w	r8, r8, r7
 8029684:	fb0a fc0c 	mul.w	ip, sl, ip
 8029688:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 802968c:	f108 0b20 	add.w	fp, r8, #32
 8029690:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8029694:	44bc      	add	ip, r7
 8029696:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 802969a:	0a3f      	lsrs	r7, r7, #8
 802969c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80296a0:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80296a4:	ea4c 0707 	orr.w	r7, ip, r7
 80296a8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80296ac:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80296b0:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80296b4:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80296b8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80296bc:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 80296c0:	ea4c 0909 	orr.w	r9, ip, r9
 80296c4:	ea4a 0707 	orr.w	r7, sl, r7
 80296c8:	2d00      	cmp	r5, #0
 80296ca:	f000 808b 	beq.w	80297e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 80296ce:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 80296d2:	3901      	subs	r1, #1
 80296d4:	0049      	lsls	r1, r1, #1
 80296d6:	3102      	adds	r1, #2
 80296d8:	eb00 0c01 	add.w	ip, r0, r1
 80296dc:	5a41      	ldrh	r1, [r0, r1]
 80296de:	980c      	ldr	r0, [sp, #48]	@ 0x30
 80296e0:	28ff      	cmp	r0, #255	@ 0xff
 80296e2:	d019      	beq.n	8029718 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 80296e4:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80296e6:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 80296ea:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80296ee:	fb04 fa01 	mul.w	sl, r4, r1
 80296f2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80296f6:	fb08 f800 	mul.w	r8, r8, r0
 80296fa:	f10a 0020 	add.w	r0, sl, #32
 80296fe:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8029702:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8029706:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 802970a:	4441      	add	r1, r8
 802970c:	0a00      	lsrs	r0, r0, #8
 802970e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8029712:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8029716:	4301      	orrs	r1, r0
 8029718:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802971a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802971e:	2cff      	cmp	r4, #255	@ 0xff
 8029720:	d01a      	beq.n	8029758 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8029722:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 8029726:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802972a:	fb04 fa00 	mul.w	sl, r4, r0
 802972e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8029732:	fb08 f80c 	mul.w	r8, r8, ip
 8029736:	f10a 0c20 	add.w	ip, sl, #32
 802973a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802973e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8029742:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8029746:	4440      	add	r0, r8
 8029748:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802974c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8029750:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8029754:	ea40 000c 	orr.w	r0, r0, ip
 8029758:	fb15 fc02 	smulbb	ip, r5, r2
 802975c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8029760:	f1c5 0810 	rsb	r8, r5, #16
 8029764:	eba8 0802 	sub.w	r8, r8, r2
 8029768:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 802976c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8029770:	437a      	muls	r2, r7
 8029772:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8029776:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 802977a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 802977e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8029782:	fb09 2208 	mla	r2, r9, r8, r2
 8029786:	ea4a 0101 	orr.w	r1, sl, r1
 802978a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802978e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8029792:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8029796:	fb05 2201 	mla	r2, r5, r1, r2
 802979a:	ea4b 0000 	orr.w	r0, fp, r0
 802979e:	fb0c 2200 	mla	r2, ip, r0, r2
 80297a2:	0d57      	lsrs	r7, r2, #21
 80297a4:	0952      	lsrs	r2, r2, #5
 80297a6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80297aa:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80297ae:	433a      	orrs	r2, r7
 80297b0:	2bff      	cmp	r3, #255	@ 0xff
 80297b2:	b292      	uxth	r2, r2
 80297b4:	d127      	bne.n	8029806 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 80297b6:	f8ae 2000 	strh.w	r2, [lr]
 80297ba:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80297bc:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 80297be:	4413      	add	r3, r2
 80297c0:	931d      	str	r3, [sp, #116]	@ 0x74
 80297c2:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 80297c4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80297c6:	441a      	add	r2, r3
 80297c8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80297ca:	921e      	str	r2, [sp, #120]	@ 0x78
 80297cc:	3b01      	subs	r3, #1
 80297ce:	f10e 0e02 	add.w	lr, lr, #2
 80297d2:	930f      	str	r3, [sp, #60]	@ 0x3c
 80297d4:	e627      	b.n	8029426 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80297d6:	fb08 f000 	mul.w	r0, r8, r0
 80297da:	fb09 0303 	mla	r3, r9, r3, r0
 80297de:	e71b      	b.n	8029618 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 80297e0:	46b9      	mov	r9, r7
 80297e2:	e743      	b.n	802966c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 80297e4:	f1c2 0110 	rsb	r1, r2, #16
 80297e8:	437a      	muls	r2, r7
 80297ea:	fb09 2901 	mla	r9, r9, r1, r2
 80297ee:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80297f2:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80297f6:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80297fa:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80297fe:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8029802:	4302      	orrs	r2, r0
 8029804:	e7d4      	b.n	80297b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8029806:	f8be 7000 	ldrh.w	r7, [lr]
 802980a:	4c1c      	ldr	r4, [pc, #112]	@ (802987c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 802980c:	43db      	mvns	r3, r3
 802980e:	1238      	asrs	r0, r7, #8
 8029810:	fa5f fc83 	uxtb.w	ip, r3
 8029814:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8029818:	10fd      	asrs	r5, r7, #3
 802981a:	fb00 f00c 	mul.w	r0, r0, ip
 802981e:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8029822:	fb05 f10c 	mul.w	r1, r5, ip
 8029826:	1c45      	adds	r5, r0, #1
 8029828:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802982c:	1215      	asrs	r5, r2, #8
 802982e:	f025 0507 	bic.w	r5, r5, #7
 8029832:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8029836:	1c4d      	adds	r5, r1, #1
 8029838:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802983c:	10d1      	asrs	r1, r2, #3
 802983e:	f021 0103 	bic.w	r1, r1, #3
 8029842:	00fb      	lsls	r3, r7, #3
 8029844:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8029848:	b2db      	uxtb	r3, r3
 802984a:	b2c0      	uxtb	r0, r0
 802984c:	00c9      	lsls	r1, r1, #3
 802984e:	fb03 f30c 	mul.w	r3, r3, ip
 8029852:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8029856:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 802985a:	4308      	orrs	r0, r1
 802985c:	1c59      	adds	r1, r3, #1
 802985e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8029862:	00d2      	lsls	r2, r2, #3
 8029864:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8029868:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 802986c:	4318      	orrs	r0, r3
 802986e:	f8ae 0000 	strh.w	r0, [lr]
 8029872:	e7a2      	b.n	80297ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8029874:	b013      	add	sp, #76	@ 0x4c
 8029876:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802987a:	bf00      	nop
 802987c:	fffff800 	.word	0xfffff800

08029880 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8029880:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8029884:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 8029888:	fb05 4c03 	mla	ip, r5, r3, r4
 802988c:	2d00      	cmp	r5, #0
 802988e:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8029892:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 8029896:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 802989a:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 802989e:	8808      	ldrh	r0, [r1, #0]
 80298a0:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80298a4:	f2c0 80a7 	blt.w	80299f6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80298a8:	45aa      	cmp	sl, r5
 80298aa:	f340 80a4 	ble.w	80299f6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80298ae:	2c00      	cmp	r4, #0
 80298b0:	f2c0 809f 	blt.w	80299f2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80298b4:	42a3      	cmp	r3, r4
 80298b6:	f340 809c 	ble.w	80299f2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80298ba:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 80298be:	1c62      	adds	r2, r4, #1
 80298c0:	f100 809c 	bmi.w	80299fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80298c4:	4293      	cmp	r3, r2
 80298c6:	f340 8099 	ble.w	80299fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80298ca:	f1b9 0f00 	cmp.w	r9, #0
 80298ce:	f000 8095 	beq.w	80299fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80298d2:	f8be c002 	ldrh.w	ip, [lr, #2]
 80298d6:	3501      	adds	r5, #1
 80298d8:	f100 8094 	bmi.w	8029a04 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80298dc:	45aa      	cmp	sl, r5
 80298de:	f340 8091 	ble.w	8029a04 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80298e2:	2f00      	cmp	r7, #0
 80298e4:	f000 808e 	beq.w	8029a04 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80298e8:	2c00      	cmp	r4, #0
 80298ea:	f2c0 8089 	blt.w	8029a00 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80298ee:	42a3      	cmp	r3, r4
 80298f0:	f340 8086 	ble.w	8029a00 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80298f4:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 80298f8:	3401      	adds	r4, #1
 80298fa:	f100 8086 	bmi.w	8029a0a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80298fe:	42a3      	cmp	r3, r4
 8029900:	f340 8083 	ble.w	8029a0a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8029904:	f1b9 0f00 	cmp.w	r9, #0
 8029908:	d07f      	beq.n	8029a0a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802990a:	3301      	adds	r3, #1
 802990c:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8029910:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8029914:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8029918:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 802991c:	fb19 fe07 	smulbb	lr, r9, r7
 8029920:	ea44 0808 	orr.w	r8, r4, r8
 8029924:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8029928:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 802992c:	f1c7 0210 	rsb	r2, r7, #16
 8029930:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8029934:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8029938:	ea44 0c0c 	orr.w	ip, r4, ip
 802993c:	eba2 0209 	sub.w	r2, r2, r9
 8029940:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8029944:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8029948:	fb04 f40c 	mul.w	r4, r4, ip
 802994c:	fb02 4808 	mla	r8, r2, r8, r4
 8029950:	041a      	lsls	r2, r3, #16
 8029952:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8029956:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 802995a:	4313      	orrs	r3, r2
 802995c:	042a      	lsls	r2, r5, #16
 802995e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8029962:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8029966:	fb0e 8303 	mla	r3, lr, r3, r8
 802996a:	432a      	orrs	r2, r5
 802996c:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8029970:	fb07 3202 	mla	r2, r7, r2, r3
 8029974:	0d53      	lsrs	r3, r2, #21
 8029976:	0952      	lsrs	r2, r2, #5
 8029978:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802997c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8029980:	431a      	orrs	r2, r3
 8029982:	b293      	uxth	r3, r2
 8029984:	b2b4      	uxth	r4, r6
 8029986:	1202      	asrs	r2, r0, #8
 8029988:	43f6      	mvns	r6, r6
 802998a:	b2f6      	uxtb	r6, r6
 802998c:	121d      	asrs	r5, r3, #8
 802998e:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8029992:	fb12 f206 	smulbb	r2, r2, r6
 8029996:	10c7      	asrs	r7, r0, #3
 8029998:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 802999c:	00c0      	lsls	r0, r0, #3
 802999e:	fb05 2504 	mla	r5, r5, r4, r2
 80299a2:	b2c0      	uxtb	r0, r0
 80299a4:	10da      	asrs	r2, r3, #3
 80299a6:	00db      	lsls	r3, r3, #3
 80299a8:	b2db      	uxtb	r3, r3
 80299aa:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80299ae:	fb10 f006 	smulbb	r0, r0, r6
 80299b2:	b2ad      	uxth	r5, r5
 80299b4:	fb03 0004 	mla	r0, r3, r4, r0
 80299b8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80299bc:	fb17 f706 	smulbb	r7, r7, r6
 80299c0:	b280      	uxth	r0, r0
 80299c2:	1c6b      	adds	r3, r5, #1
 80299c4:	fb02 7204 	mla	r2, r2, r4, r7
 80299c8:	b292      	uxth	r2, r2
 80299ca:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80299ce:	1c43      	adds	r3, r0, #1
 80299d0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80299d4:	1c50      	adds	r0, r2, #1
 80299d6:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80299da:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80299de:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80299e2:	0952      	lsrs	r2, r2, #5
 80299e4:	432b      	orrs	r3, r5
 80299e6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80299ea:	4313      	orrs	r3, r2
 80299ec:	800b      	strh	r3, [r1, #0]
 80299ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80299f2:	4680      	mov	r8, r0
 80299f4:	e763      	b.n	80298be <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 80299f6:	4684      	mov	ip, r0
 80299f8:	4680      	mov	r8, r0
 80299fa:	e76c      	b.n	80298d6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80299fc:	4684      	mov	ip, r0
 80299fe:	e76a      	b.n	80298d6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8029a00:	4605      	mov	r5, r0
 8029a02:	e779      	b.n	80298f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8029a04:	4603      	mov	r3, r0
 8029a06:	4605      	mov	r5, r0
 8029a08:	e782      	b.n	8029910 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8029a0a:	4603      	mov	r3, r0
 8029a0c:	e780      	b.n	8029910 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08029a0e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8029a0e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029a12:	b093      	sub	sp, #76	@ 0x4c
 8029a14:	461d      	mov	r5, r3
 8029a16:	9210      	str	r2, [sp, #64]	@ 0x40
 8029a18:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8029a1a:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 8029a1e:	920b      	str	r2, [sp, #44]	@ 0x2c
 8029a20:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 8029a24:	910a      	str	r1, [sp, #40]	@ 0x28
 8029a26:	6859      	ldr	r1, [r3, #4]
 8029a28:	681b      	ldr	r3, [r3, #0]
 8029a2a:	9011      	str	r0, [sp, #68]	@ 0x44
 8029a2c:	fb01 2707 	mla	r7, r1, r7, r2
 8029a30:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8029a34:	9307      	str	r3, [sp, #28]
 8029a36:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8029a38:	681b      	ldr	r3, [r3, #0]
 8029a3a:	9309      	str	r3, [sp, #36]	@ 0x24
 8029a3c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8029a3e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8029a42:	43db      	mvns	r3, r3
 8029a44:	b2db      	uxtb	r3, r3
 8029a46:	9308      	str	r3, [sp, #32]
 8029a48:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8029a4a:	2b00      	cmp	r3, #0
 8029a4c:	dc03      	bgt.n	8029a56 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8029a4e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8029a50:	2b00      	cmp	r3, #0
 8029a52:	f340 8203 	ble.w	8029e5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8029a56:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8029a58:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8029a5c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8029a60:	1e48      	subs	r0, r1, #1
 8029a62:	f102 3cff 	add.w	ip, r2, #4294967295
 8029a66:	2d00      	cmp	r5, #0
 8029a68:	f340 80da 	ble.w	8029c20 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8029a6c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8029a70:	ea4f 4326 	mov.w	r3, r6, asr #16
 8029a74:	d406      	bmi.n	8029a84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8029a76:	4586      	cmp	lr, r0
 8029a78:	da04      	bge.n	8029a84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8029a7a:	2b00      	cmp	r3, #0
 8029a7c:	db02      	blt.n	8029a84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8029a7e:	4563      	cmp	r3, ip
 8029a80:	f2c0 80cf 	blt.w	8029c22 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8029a84:	f11e 0e01 	adds.w	lr, lr, #1
 8029a88:	f100 80c1 	bmi.w	8029c0e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8029a8c:	4571      	cmp	r1, lr
 8029a8e:	f2c0 80be 	blt.w	8029c0e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8029a92:	3301      	adds	r3, #1
 8029a94:	f100 80bb 	bmi.w	8029c0e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8029a98:	429a      	cmp	r2, r3
 8029a9a:	f2c0 80b8 	blt.w	8029c0e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8029a9e:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8029aa2:	46a9      	mov	r9, r5
 8029aa4:	f1b9 0f00 	cmp.w	r9, #0
 8029aa8:	f340 80d8 	ble.w	8029c5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8029aac:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8029aae:	1421      	asrs	r1, r4, #16
 8029ab0:	ea4f 4026 	mov.w	r0, r6, asr #16
 8029ab4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8029ab8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8029abc:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8029ac0:	f100 8111 	bmi.w	8029ce6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8029ac4:	f10e 3aff 	add.w	sl, lr, #4294967295
 8029ac8:	4551      	cmp	r1, sl
 8029aca:	f280 810c 	bge.w	8029ce6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8029ace:	2800      	cmp	r0, #0
 8029ad0:	f2c0 8109 	blt.w	8029ce6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8029ad4:	f103 3aff 	add.w	sl, r3, #4294967295
 8029ad8:	4550      	cmp	r0, sl
 8029ada:	f280 8104 	bge.w	8029ce6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8029ade:	fa0f f38e 	sxth.w	r3, lr
 8029ae2:	fb00 1103 	mla	r1, r0, r3, r1
 8029ae6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8029ae8:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8029aec:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8029af0:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8029af4:	f1bc 0f00 	cmp.w	ip, #0
 8029af8:	d007      	beq.n	8029b0a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8029afa:	005b      	lsls	r3, r3, #1
 8029afc:	eb0a 0003 	add.w	r0, sl, r3
 8029b00:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8029b04:	930c      	str	r3, [sp, #48]	@ 0x30
 8029b06:	8843      	ldrh	r3, [r0, #2]
 8029b08:	930d      	str	r3, [sp, #52]	@ 0x34
 8029b0a:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8029b0e:	fb12 f30c 	smulbb	r3, r2, ip
 8029b12:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8029b16:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8029b1a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8029b1e:	10db      	asrs	r3, r3, #3
 8029b20:	ea40 000e 	orr.w	r0, r0, lr
 8029b24:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8029b28:	f1cc 0e10 	rsb	lr, ip, #16
 8029b2c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8029b30:	ebae 0e02 	sub.w	lr, lr, r2
 8029b34:	ea4a 0101 	orr.w	r1, sl, r1
 8029b38:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8029b3c:	4351      	muls	r1, r2
 8029b3e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8029b40:	9f08      	ldr	r7, [sp, #32]
 8029b42:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8029b46:	fb0e 1e00 	mla	lr, lr, r0, r1
 8029b4a:	0410      	lsls	r0, r2, #16
 8029b4c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8029b50:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8029b54:	4310      	orrs	r0, r2
 8029b56:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8029b58:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8029b5a:	0412      	lsls	r2, r2, #16
 8029b5c:	fb03 e000 	mla	r0, r3, r0, lr
 8029b60:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8029b64:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 8029b68:	ea42 020e 	orr.w	r2, r2, lr
 8029b6c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8029b70:	fb03 0302 	mla	r3, r3, r2, r0
 8029b74:	0d5a      	lsrs	r2, r3, #21
 8029b76:	095b      	lsrs	r3, r3, #5
 8029b78:	f8b8 0000 	ldrh.w	r0, [r8]
 8029b7c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8029b80:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8029b84:	4313      	orrs	r3, r2
 8029b86:	b29b      	uxth	r3, r3
 8029b88:	1201      	asrs	r1, r0, #8
 8029b8a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8029b8e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8029b92:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8029b96:	fb11 f107 	smulbb	r1, r1, r7
 8029b9a:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8029b9e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8029ba2:	00c0      	lsls	r0, r0, #3
 8029ba4:	fb0c 1c02 	mla	ip, ip, r2, r1
 8029ba8:	b2c0      	uxtb	r0, r0
 8029baa:	10d9      	asrs	r1, r3, #3
 8029bac:	00db      	lsls	r3, r3, #3
 8029bae:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8029bb2:	b2db      	uxtb	r3, r3
 8029bb4:	fb10 f007 	smulbb	r0, r0, r7
 8029bb8:	fa1f fc8c 	uxth.w	ip, ip
 8029bbc:	fb03 0302 	mla	r3, r3, r2, r0
 8029bc0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8029bc4:	fb1e fe07 	smulbb	lr, lr, r7
 8029bc8:	fb01 e102 	mla	r1, r1, r2, lr
 8029bcc:	b29a      	uxth	r2, r3
 8029bce:	f10c 0301 	add.w	r3, ip, #1
 8029bd2:	b289      	uxth	r1, r1
 8029bd4:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8029bd8:	1c53      	adds	r3, r2, #1
 8029bda:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8029bde:	1c4a      	adds	r2, r1, #1
 8029be0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8029be4:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8029be8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8029bec:	0949      	lsrs	r1, r1, #5
 8029bee:	ea43 030c 	orr.w	r3, r3, ip
 8029bf2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8029bf6:	430b      	orrs	r3, r1
 8029bf8:	f8a8 3000 	strh.w	r3, [r8]
 8029bfc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8029bfe:	441c      	add	r4, r3
 8029c00:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8029c02:	f108 0802 	add.w	r8, r8, #2
 8029c06:	441e      	add	r6, r3
 8029c08:	f109 39ff 	add.w	r9, r9, #4294967295
 8029c0c:	e74a      	b.n	8029aa4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8029c0e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8029c10:	441c      	add	r4, r3
 8029c12:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8029c14:	441e      	add	r6, r3
 8029c16:	9b07      	ldr	r3, [sp, #28]
 8029c18:	3302      	adds	r3, #2
 8029c1a:	3d01      	subs	r5, #1
 8029c1c:	9307      	str	r3, [sp, #28]
 8029c1e:	e722      	b.n	8029a66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8029c20:	d022      	beq.n	8029c68 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8029c22:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8029c24:	1e6b      	subs	r3, r5, #1
 8029c26:	fb00 4003 	mla	r0, r0, r3, r4
 8029c2a:	1400      	asrs	r0, r0, #16
 8029c2c:	f53f af37 	bmi.w	8029a9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8029c30:	3901      	subs	r1, #1
 8029c32:	4288      	cmp	r0, r1
 8029c34:	f6bf af33 	bge.w	8029a9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8029c38:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8029c3a:	fb01 6303 	mla	r3, r1, r3, r6
 8029c3e:	141b      	asrs	r3, r3, #16
 8029c40:	f53f af2d 	bmi.w	8029a9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8029c44:	3a01      	subs	r2, #1
 8029c46:	4293      	cmp	r3, r2
 8029c48:	f6bf af29 	bge.w	8029a9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8029c4c:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8029c50:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 8029c54:	46a8      	mov	r8, r5
 8029c56:	f1b8 0f00 	cmp.w	r8, #0
 8029c5a:	dc5e      	bgt.n	8029d1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8029c5c:	9b07      	ldr	r3, [sp, #28]
 8029c5e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8029c62:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8029c66:	9307      	str	r3, [sp, #28]
 8029c68:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8029c6a:	2b00      	cmp	r3, #0
 8029c6c:	f340 80f6 	ble.w	8029e5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8029c70:	ee30 0a04 	vadd.f32	s0, s0, s8
 8029c74:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8029c78:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8029c7c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8029c7e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8029c82:	ee31 1a05 	vadd.f32	s2, s2, s10
 8029c86:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8029c8a:	eef0 6a62 	vmov.f32	s13, s5
 8029c8e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8029c92:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8029c96:	ee77 2a62 	vsub.f32	s5, s14, s5
 8029c9a:	ee16 4a90 	vmov	r4, s13
 8029c9e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8029ca2:	eef0 6a43 	vmov.f32	s13, s6
 8029ca6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8029caa:	ee12 2a90 	vmov	r2, s5
 8029cae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8029cb2:	fb92 f3f3 	sdiv	r3, r2, r3
 8029cb6:	ee13 2a10 	vmov	r2, s6
 8029cba:	931f      	str	r3, [sp, #124]	@ 0x7c
 8029cbc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8029cbe:	fb92 f3f3 	sdiv	r3, r2, r3
 8029cc2:	9320      	str	r3, [sp, #128]	@ 0x80
 8029cc4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8029cc6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8029cc8:	3b01      	subs	r3, #1
 8029cca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8029cce:	930a      	str	r3, [sp, #40]	@ 0x28
 8029cd0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8029cd2:	ee16 6a90 	vmov	r6, s13
 8029cd6:	bf14      	ite	ne
 8029cd8:	461d      	movne	r5, r3
 8029cda:	4615      	moveq	r5, r2
 8029cdc:	eeb0 3a67 	vmov.f32	s6, s15
 8029ce0:	eef0 2a47 	vmov.f32	s5, s14
 8029ce4:	e6b0      	b.n	8029a48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8029ce6:	f111 0a01 	adds.w	sl, r1, #1
 8029cea:	d487      	bmi.n	8029bfc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8029cec:	45d6      	cmp	lr, sl
 8029cee:	db85      	blt.n	8029bfc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8029cf0:	f110 0a01 	adds.w	sl, r0, #1
 8029cf4:	d482      	bmi.n	8029bfc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8029cf6:	4553      	cmp	r3, sl
 8029cf8:	db80      	blt.n	8029bfc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8029cfa:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8029cfc:	9101      	str	r1, [sp, #4]
 8029cfe:	b21b      	sxth	r3, r3
 8029d00:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8029d04:	9300      	str	r3, [sp, #0]
 8029d06:	e9cd c704 	strd	ip, r7, [sp, #16]
 8029d0a:	fa0f f38e 	sxth.w	r3, lr
 8029d0e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8029d10:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8029d12:	4641      	mov	r1, r8
 8029d14:	f7ff fdb4 	bl	8029880 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8029d18:	e770      	b.n	8029bfc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8029d1a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8029d1c:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8029d1e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8029d22:	1430      	asrs	r0, r6, #16
 8029d24:	1423      	asrs	r3, r4, #16
 8029d26:	fb01 3000 	mla	r0, r1, r0, r3
 8029d2a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8029d2c:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8029d30:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8029d34:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8029d38:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8029d3c:	8858      	ldrh	r0, [r3, #2]
 8029d3e:	f1be 0f00 	cmp.w	lr, #0
 8029d42:	d00b      	beq.n	8029d5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8029d44:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8029d48:	3901      	subs	r1, #1
 8029d4a:	0049      	lsls	r1, r1, #1
 8029d4c:	3102      	adds	r1, #2
 8029d4e:	eb03 0b01 	add.w	fp, r3, r1
 8029d52:	5a5b      	ldrh	r3, [r3, r1]
 8029d54:	930e      	str	r3, [sp, #56]	@ 0x38
 8029d56:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8029d5a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8029d5c:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8029d60:	fb12 f30e 	smulbb	r3, r2, lr
 8029d64:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8029d68:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8029d6c:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 8029d70:	10db      	asrs	r3, r3, #3
 8029d72:	ea41 010c 	orr.w	r1, r1, ip
 8029d76:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8029d7a:	f1ce 0c10 	rsb	ip, lr, #16
 8029d7e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8029d82:	ebac 0c02 	sub.w	ip, ip, r2
 8029d86:	ea4b 0000 	orr.w	r0, fp, r0
 8029d8a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8029d8e:	4350      	muls	r0, r2
 8029d90:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8029d92:	9f08      	ldr	r7, [sp, #32]
 8029d94:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8029d98:	fb0c 0c01 	mla	ip, ip, r1, r0
 8029d9c:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8029da0:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 8029da4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8029da6:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8029da8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8029dac:	0412      	lsls	r2, r2, #16
 8029dae:	ea4b 0101 	orr.w	r1, fp, r1
 8029db2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8029db6:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8029dba:	fb03 c101 	mla	r1, r3, r1, ip
 8029dbe:	4302      	orrs	r2, r0
 8029dc0:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8029dc4:	fb03 1202 	mla	r2, r3, r2, r1
 8029dc8:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8029dcc:	0952      	lsrs	r2, r2, #5
 8029dce:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 8029dd2:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8029dd6:	f8b9 2000 	ldrh.w	r2, [r9]
 8029dda:	ea4b 0303 	orr.w	r3, fp, r3
 8029dde:	b29b      	uxth	r3, r3
 8029de0:	1211      	asrs	r1, r2, #8
 8029de2:	1218      	asrs	r0, r3, #8
 8029de4:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8029de8:	fb11 f107 	smulbb	r1, r1, r7
 8029dec:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8029df0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8029df4:	00d2      	lsls	r2, r2, #3
 8029df6:	fb00 100a 	mla	r0, r0, sl, r1
 8029dfa:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8029dfe:	10d9      	asrs	r1, r3, #3
 8029e00:	b2d2      	uxtb	r2, r2
 8029e02:	00db      	lsls	r3, r3, #3
 8029e04:	fb1c fc07 	smulbb	ip, ip, r7
 8029e08:	fb12 f207 	smulbb	r2, r2, r7
 8029e0c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8029e10:	b2db      	uxtb	r3, r3
 8029e12:	b280      	uxth	r0, r0
 8029e14:	fb01 c10a 	mla	r1, r1, sl, ip
 8029e18:	fb03 230a 	mla	r3, r3, sl, r2
 8029e1c:	b29b      	uxth	r3, r3
 8029e1e:	b289      	uxth	r1, r1
 8029e20:	1c42      	adds	r2, r0, #1
 8029e22:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8029e26:	f101 0c01 	add.w	ip, r1, #1
 8029e2a:	1c5a      	adds	r2, r3, #1
 8029e2c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8029e30:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8029e34:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8029e36:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8029e3a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8029e3e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8029e42:	4310      	orrs	r0, r2
 8029e44:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8029e48:	441c      	add	r4, r3
 8029e4a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8029e4c:	ea40 000c 	orr.w	r0, r0, ip
 8029e50:	f829 0b02 	strh.w	r0, [r9], #2
 8029e54:	441e      	add	r6, r3
 8029e56:	f108 38ff 	add.w	r8, r8, #4294967295
 8029e5a:	e6fc      	b.n	8029c56 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8029e5c:	b013      	add	sp, #76	@ 0x4c
 8029e5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08029e62 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8029e62:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8029e66:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8029e6a:	fb0e 4703 	mla	r7, lr, r3, r4
 8029e6e:	f1be 0f00 	cmp.w	lr, #0
 8029e72:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8029e76:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 8029e7a:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 8029e7e:	8808      	ldrh	r0, [r1, #0]
 8029e80:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8029e84:	db60      	blt.n	8029f48 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8029e86:	45f1      	cmp	r9, lr
 8029e88:	dd5e      	ble.n	8029f48 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8029e8a:	2c00      	cmp	r4, #0
 8029e8c:	db5a      	blt.n	8029f44 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8029e8e:	42a3      	cmp	r3, r4
 8029e90:	dd58      	ble.n	8029f44 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8029e92:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8029e96:	1c62      	adds	r2, r4, #1
 8029e98:	d459      	bmi.n	8029f4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8029e9a:	4293      	cmp	r3, r2
 8029e9c:	dd57      	ble.n	8029f4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8029e9e:	2d00      	cmp	r5, #0
 8029ea0:	d055      	beq.n	8029f4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8029ea2:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8029ea6:	f11e 0e01 	adds.w	lr, lr, #1
 8029eaa:	d454      	bmi.n	8029f56 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8029eac:	45f1      	cmp	r9, lr
 8029eae:	dd52      	ble.n	8029f56 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8029eb0:	2e00      	cmp	r6, #0
 8029eb2:	d050      	beq.n	8029f56 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8029eb4:	2c00      	cmp	r4, #0
 8029eb6:	db4c      	blt.n	8029f52 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8029eb8:	42a3      	cmp	r3, r4
 8029eba:	dd4a      	ble.n	8029f52 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8029ebc:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8029ec0:	3401      	adds	r4, #1
 8029ec2:	d405      	bmi.n	8029ed0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8029ec4:	42a3      	cmp	r3, r4
 8029ec6:	dd03      	ble.n	8029ed0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8029ec8:	b115      	cbz	r5, 8029ed0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8029eca:	3301      	adds	r3, #1
 8029ecc:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8029ed0:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8029ed4:	fb15 f406 	smulbb	r4, r5, r6
 8029ed8:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8029edc:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8029ee0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8029ee4:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8029ee8:	ea43 0c0c 	orr.w	ip, r3, ip
 8029eec:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8029ef0:	f1c6 0310 	rsb	r3, r6, #16
 8029ef4:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8029ef8:	1b5b      	subs	r3, r3, r5
 8029efa:	ea4e 0707 	orr.w	r7, lr, r7
 8029efe:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8029f02:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8029f06:	437d      	muls	r5, r7
 8029f08:	fb03 5c0c 	mla	ip, r3, ip, r5
 8029f0c:	0403      	lsls	r3, r0, #16
 8029f0e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8029f12:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8029f16:	4318      	orrs	r0, r3
 8029f18:	0413      	lsls	r3, r2, #16
 8029f1a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8029f1e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8029f22:	4313      	orrs	r3, r2
 8029f24:	fb04 c000 	mla	r0, r4, r0, ip
 8029f28:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8029f2c:	fb06 0003 	mla	r0, r6, r3, r0
 8029f30:	0d43      	lsrs	r3, r0, #21
 8029f32:	0940      	lsrs	r0, r0, #5
 8029f34:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8029f38:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8029f3c:	4318      	orrs	r0, r3
 8029f3e:	8008      	strh	r0, [r1, #0]
 8029f40:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8029f44:	4684      	mov	ip, r0
 8029f46:	e7a6      	b.n	8029e96 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8029f48:	4607      	mov	r7, r0
 8029f4a:	4684      	mov	ip, r0
 8029f4c:	e7ab      	b.n	8029ea6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8029f4e:	4607      	mov	r7, r0
 8029f50:	e7a9      	b.n	8029ea6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8029f52:	4602      	mov	r2, r0
 8029f54:	e7b4      	b.n	8029ec0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8029f56:	4602      	mov	r2, r0
 8029f58:	e7ba      	b.n	8029ed0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08029f5a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8029f5a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029f5e:	b08f      	sub	sp, #60	@ 0x3c
 8029f60:	461d      	mov	r5, r3
 8029f62:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8029f64:	920c      	str	r2, [sp, #48]	@ 0x30
 8029f66:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 8029f6a:	9107      	str	r1, [sp, #28]
 8029f6c:	6859      	ldr	r1, [r3, #4]
 8029f6e:	681b      	ldr	r3, [r3, #0]
 8029f70:	900d      	str	r0, [sp, #52]	@ 0x34
 8029f72:	fb01 2707 	mla	r7, r1, r7, r2
 8029f76:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8029f7a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8029f7c:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 8029f80:	f8d3 8000 	ldr.w	r8, [r3]
 8029f84:	9b07      	ldr	r3, [sp, #28]
 8029f86:	2b00      	cmp	r3, #0
 8029f88:	dc03      	bgt.n	8029f92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8029f8a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8029f8c:	2b00      	cmp	r3, #0
 8029f8e:	f340 8181 	ble.w	802a294 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8029f92:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8029f94:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8029f98:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8029f9c:	1e48      	subs	r0, r1, #1
 8029f9e:	f102 3cff 	add.w	ip, r2, #4294967295
 8029fa2:	2d00      	cmp	r5, #0
 8029fa4:	f340 809b 	ble.w	802a0de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8029fa8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8029fac:	ea4f 4326 	mov.w	r3, r6, asr #16
 8029fb0:	d406      	bmi.n	8029fc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8029fb2:	4586      	cmp	lr, r0
 8029fb4:	da04      	bge.n	8029fc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8029fb6:	2b00      	cmp	r3, #0
 8029fb8:	db02      	blt.n	8029fc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8029fba:	4563      	cmp	r3, ip
 8029fbc:	f2c0 8090 	blt.w	802a0e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8029fc0:	f11e 0e01 	adds.w	lr, lr, #1
 8029fc4:	f100 8084 	bmi.w	802a0d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8029fc8:	4571      	cmp	r1, lr
 8029fca:	f2c0 8081 	blt.w	802a0d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8029fce:	3301      	adds	r3, #1
 8029fd0:	d47e      	bmi.n	802a0d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8029fd2:	429a      	cmp	r2, r3
 8029fd4:	db7c      	blt.n	802a0d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8029fd6:	46aa      	mov	sl, r5
 8029fd8:	46b9      	mov	r9, r7
 8029fda:	f1ba 0f00 	cmp.w	sl, #0
 8029fde:	f340 8099 	ble.w	802a114 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8029fe2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8029fe4:	1421      	asrs	r1, r4, #16
 8029fe6:	ea4f 4026 	mov.w	r0, r6, asr #16
 8029fea:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8029fee:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8029ff2:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8029ff6:	f100 80d0 	bmi.w	802a19a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8029ffa:	f10e 3bff 	add.w	fp, lr, #4294967295
 8029ffe:	4559      	cmp	r1, fp
 802a000:	f280 80cb 	bge.w	802a19a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802a004:	2800      	cmp	r0, #0
 802a006:	f2c0 80c8 	blt.w	802a19a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802a00a:	f103 3bff 	add.w	fp, r3, #4294967295
 802a00e:	4558      	cmp	r0, fp
 802a010:	f280 80c3 	bge.w	802a19a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802a014:	fa0f fe8e 	sxth.w	lr, lr
 802a018:	fb00 110e 	mla	r1, r0, lr, r1
 802a01c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802a020:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 802a024:	8841      	ldrh	r1, [r0, #2]
 802a026:	f1bc 0f00 	cmp.w	ip, #0
 802a02a:	d00b      	beq.n	802a044 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 802a02c:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 802a030:	3b01      	subs	r3, #1
 802a032:	005b      	lsls	r3, r3, #1
 802a034:	3302      	adds	r3, #2
 802a036:	eb00 0e03 	add.w	lr, r0, r3
 802a03a:	5ac3      	ldrh	r3, [r0, r3]
 802a03c:	9308      	str	r3, [sp, #32]
 802a03e:	f8be 3002 	ldrh.w	r3, [lr, #2]
 802a042:	9309      	str	r3, [sp, #36]	@ 0x24
 802a044:	ea4f 400b 	mov.w	r0, fp, lsl #16
 802a048:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 802a04c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 802a050:	ea40 000b 	orr.w	r0, r0, fp
 802a054:	fb12 f30c 	smulbb	r3, r2, ip
 802a058:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802a05c:	10db      	asrs	r3, r3, #3
 802a05e:	f1cc 0e10 	rsb	lr, ip, #16
 802a062:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802a066:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 802a06a:	ebae 0e02 	sub.w	lr, lr, r2
 802a06e:	ea4b 0101 	orr.w	r1, fp, r1
 802a072:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802a076:	4351      	muls	r1, r2
 802a078:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802a07a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 802a07e:	fb0e 1e00 	mla	lr, lr, r0, r1
 802a082:	0410      	lsls	r0, r2, #16
 802a084:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 802a088:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802a08c:	4310      	orrs	r0, r2
 802a08e:	9a08      	ldr	r2, [sp, #32]
 802a090:	9908      	ldr	r1, [sp, #32]
 802a092:	0412      	lsls	r2, r2, #16
 802a094:	fb03 e000 	mla	r0, r3, r0, lr
 802a098:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 802a09c:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 802a0a0:	ea42 020e 	orr.w	r2, r2, lr
 802a0a4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 802a0a8:	fb03 0302 	mla	r3, r3, r2, r0
 802a0ac:	0d5a      	lsrs	r2, r3, #21
 802a0ae:	095b      	lsrs	r3, r3, #5
 802a0b0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802a0b4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 802a0b8:	4313      	orrs	r3, r2
 802a0ba:	f8a9 3000 	strh.w	r3, [r9]
 802a0be:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 802a0c0:	441c      	add	r4, r3
 802a0c2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802a0c4:	f109 0902 	add.w	r9, r9, #2
 802a0c8:	441e      	add	r6, r3
 802a0ca:	f10a 3aff 	add.w	sl, sl, #4294967295
 802a0ce:	e784      	b.n	8029fda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 802a0d0:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 802a0d2:	441c      	add	r4, r3
 802a0d4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802a0d6:	3d01      	subs	r5, #1
 802a0d8:	441e      	add	r6, r3
 802a0da:	3702      	adds	r7, #2
 802a0dc:	e761      	b.n	8029fa2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802a0de:	d01d      	beq.n	802a11c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802a0e0:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 802a0e2:	1e6b      	subs	r3, r5, #1
 802a0e4:	fb00 4003 	mla	r0, r0, r3, r4
 802a0e8:	1400      	asrs	r0, r0, #16
 802a0ea:	f53f af74 	bmi.w	8029fd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802a0ee:	3901      	subs	r1, #1
 802a0f0:	4288      	cmp	r0, r1
 802a0f2:	f6bf af70 	bge.w	8029fd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802a0f6:	991c      	ldr	r1, [sp, #112]	@ 0x70
 802a0f8:	fb01 6303 	mla	r3, r1, r3, r6
 802a0fc:	141b      	asrs	r3, r3, #16
 802a0fe:	f53f af6a 	bmi.w	8029fd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802a102:	3a01      	subs	r2, #1
 802a104:	4293      	cmp	r3, r2
 802a106:	f6bf af66 	bge.w	8029fd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802a10a:	46a9      	mov	r9, r5
 802a10c:	46ba      	mov	sl, r7
 802a10e:	f1b9 0f00 	cmp.w	r9, #0
 802a112:	dc5a      	bgt.n	802a1ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 802a114:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802a118:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 802a11c:	9b07      	ldr	r3, [sp, #28]
 802a11e:	2b00      	cmp	r3, #0
 802a120:	f340 80b8 	ble.w	802a294 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 802a124:	ee30 0a04 	vadd.f32	s0, s0, s8
 802a128:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802a12c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802a130:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802a132:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802a136:	ee31 1a05 	vadd.f32	s2, s2, s10
 802a13a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802a13e:	eef0 6a62 	vmov.f32	s13, s5
 802a142:	ee61 7a27 	vmul.f32	s15, s2, s15
 802a146:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802a14a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802a14e:	ee16 4a90 	vmov	r4, s13
 802a152:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802a156:	eef0 6a43 	vmov.f32	s13, s6
 802a15a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802a15e:	ee12 2a90 	vmov	r2, s5
 802a162:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802a166:	fb92 f3f3 	sdiv	r3, r2, r3
 802a16a:	ee13 2a10 	vmov	r2, s6
 802a16e:	931b      	str	r3, [sp, #108]	@ 0x6c
 802a170:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802a172:	fb92 f3f3 	sdiv	r3, r2, r3
 802a176:	931c      	str	r3, [sp, #112]	@ 0x70
 802a178:	9b07      	ldr	r3, [sp, #28]
 802a17a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802a17c:	3b01      	subs	r3, #1
 802a17e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802a182:	9307      	str	r3, [sp, #28]
 802a184:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802a186:	ee16 6a90 	vmov	r6, s13
 802a18a:	bf14      	ite	ne
 802a18c:	461d      	movne	r5, r3
 802a18e:	4615      	moveq	r5, r2
 802a190:	eeb0 3a67 	vmov.f32	s6, s15
 802a194:	eef0 2a47 	vmov.f32	s5, s14
 802a198:	e6f4      	b.n	8029f84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 802a19a:	f111 0b01 	adds.w	fp, r1, #1
 802a19e:	d48e      	bmi.n	802a0be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802a1a0:	45de      	cmp	lr, fp
 802a1a2:	db8c      	blt.n	802a0be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802a1a4:	f110 0b01 	adds.w	fp, r0, #1
 802a1a8:	d489      	bmi.n	802a0be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802a1aa:	455b      	cmp	r3, fp
 802a1ac:	db87      	blt.n	802a0be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802a1ae:	b21b      	sxth	r3, r3
 802a1b0:	e9cd 1001 	strd	r1, r0, [sp, #4]
 802a1b4:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 802a1b8:	9300      	str	r3, [sp, #0]
 802a1ba:	4642      	mov	r2, r8
 802a1bc:	fa0f f38e 	sxth.w	r3, lr
 802a1c0:	4649      	mov	r1, r9
 802a1c2:	980d      	ldr	r0, [sp, #52]	@ 0x34
 802a1c4:	f7ff fe4d 	bl	8029e62 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 802a1c8:	e779      	b.n	802a0be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802a1ca:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802a1cc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802a1d0:	1420      	asrs	r0, r4, #16
 802a1d2:	1431      	asrs	r1, r6, #16
 802a1d4:	fb03 0101 	mla	r1, r3, r1, r0
 802a1d8:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802a1dc:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 802a1e0:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 802a1e4:	8841      	ldrh	r1, [r0, #2]
 802a1e6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802a1ea:	f1be 0f00 	cmp.w	lr, #0
 802a1ee:	d00b      	beq.n	802a208 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 802a1f0:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 802a1f4:	3b01      	subs	r3, #1
 802a1f6:	005b      	lsls	r3, r3, #1
 802a1f8:	3302      	adds	r3, #2
 802a1fa:	eb00 0b03 	add.w	fp, r0, r3
 802a1fe:	5ac3      	ldrh	r3, [r0, r3]
 802a200:	930a      	str	r3, [sp, #40]	@ 0x28
 802a202:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 802a206:	930b      	str	r3, [sp, #44]	@ 0x2c
 802a208:	ea4f 400c 	mov.w	r0, ip, lsl #16
 802a20c:	fb12 f30e 	smulbb	r3, r2, lr
 802a210:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 802a214:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802a218:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 802a21c:	10db      	asrs	r3, r3, #3
 802a21e:	ea40 000c 	orr.w	r0, r0, ip
 802a222:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802a226:	f1ce 0c10 	rsb	ip, lr, #16
 802a22a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 802a22e:	ebac 0c02 	sub.w	ip, ip, r2
 802a232:	ea4b 0101 	orr.w	r1, fp, r1
 802a236:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802a23a:	4351      	muls	r1, r2
 802a23c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802a23e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802a242:	fb0c 1c00 	mla	ip, ip, r0, r1
 802a246:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 802a24a:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 802a24e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802a250:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802a252:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802a256:	0412      	lsls	r2, r2, #16
 802a258:	ea4b 0000 	orr.w	r0, fp, r0
 802a25c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 802a260:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 802a264:	fb03 c000 	mla	r0, r3, r0, ip
 802a268:	ea42 0b0b 	orr.w	fp, r2, fp
 802a26c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 802a270:	fb03 000b 	mla	r0, r3, fp, r0
 802a274:	0d43      	lsrs	r3, r0, #21
 802a276:	0940      	lsrs	r0, r0, #5
 802a278:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802a27c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 802a280:	4318      	orrs	r0, r3
 802a282:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 802a284:	f82a 0b02 	strh.w	r0, [sl], #2
 802a288:	441c      	add	r4, r3
 802a28a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802a28c:	f109 39ff 	add.w	r9, r9, #4294967295
 802a290:	441e      	add	r6, r3
 802a292:	e73c      	b.n	802a10e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802a294:	b00f      	add	sp, #60	@ 0x3c
 802a296:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802a29a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 802a29a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a29e:	b085      	sub	sp, #20
 802a2a0:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 802a2a4:	9102      	str	r1, [sp, #8]
 802a2a6:	2c00      	cmp	r4, #0
 802a2a8:	fb04 7103 	mla	r1, r4, r3, r7
 802a2ac:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 802a2b0:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 802a2b4:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 802a2b8:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 802a2bc:	f2c0 811b 	blt.w	802a4f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 802a2c0:	45a6      	cmp	lr, r4
 802a2c2:	f340 8118 	ble.w	802a4f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 802a2c6:	2f00      	cmp	r7, #0
 802a2c8:	f2c0 8113 	blt.w	802a4f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802a2cc:	42bb      	cmp	r3, r7
 802a2ce:	f340 8110 	ble.w	802a4f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802a2d2:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802a2d6:	1c7a      	adds	r2, r7, #1
 802a2d8:	f100 8110 	bmi.w	802a4fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802a2dc:	4293      	cmp	r3, r2
 802a2de:	f340 810d 	ble.w	802a4fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802a2e2:	2e00      	cmp	r6, #0
 802a2e4:	f000 810c 	beq.w	802a500 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 802a2e8:	f8dc 1004 	ldr.w	r1, [ip, #4]
 802a2ec:	3401      	adds	r4, #1
 802a2ee:	f100 810b 	bmi.w	802a508 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 802a2f2:	45a6      	cmp	lr, r4
 802a2f4:	f340 8108 	ble.w	802a508 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 802a2f8:	2800      	cmp	r0, #0
 802a2fa:	f000 8108 	beq.w	802a50e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 802a2fe:	2f00      	cmp	r7, #0
 802a300:	f2c0 8100 	blt.w	802a504 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 802a304:	42bb      	cmp	r3, r7
 802a306:	f340 80fd 	ble.w	802a504 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 802a30a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802a30e:	3701      	adds	r7, #1
 802a310:	f100 8100 	bmi.w	802a514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802a314:	42bb      	cmp	r3, r7
 802a316:	f340 80fd 	ble.w	802a514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802a31a:	2e00      	cmp	r6, #0
 802a31c:	f000 80fc 	beq.w	802a518 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 802a320:	3301      	adds	r3, #1
 802a322:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 802a326:	b2b6      	uxth	r6, r6
 802a328:	b280      	uxth	r0, r0
 802a32a:	fb00 fe06 	mul.w	lr, r0, r6
 802a32e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802a332:	0136      	lsls	r6, r6, #4
 802a334:	eba6 070e 	sub.w	r7, r6, lr
 802a338:	b280      	uxth	r0, r0
 802a33a:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 802a33e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802a342:	b2bf      	uxth	r7, r7
 802a344:	1a1b      	subs	r3, r3, r0
 802a346:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802a34a:	b29b      	uxth	r3, r3
 802a34c:	fb0a f607 	mul.w	r6, sl, r7
 802a350:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802a354:	fb0b 6603 	mla	r6, fp, r3, r6
 802a358:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802a35c:	fb00 6609 	mla	r6, r0, r9, r6
 802a360:	fb0e 6608 	mla	r6, lr, r8, r6
 802a364:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802a368:	9600      	str	r6, [sp, #0]
 802a36a:	2e00      	cmp	r6, #0
 802a36c:	f000 80be 	beq.w	802a4ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 802a370:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802a374:	fb0b fc0c 	mul.w	ip, fp, ip
 802a378:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802a37c:	fb0b f505 	mul.w	r5, fp, r5
 802a380:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802a384:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802a388:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802a38c:	44dc      	add	ip, fp
 802a38e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802a392:	9501      	str	r5, [sp, #4]
 802a394:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 802a398:	9503      	str	r5, [sp, #12]
 802a39a:	9d01      	ldr	r5, [sp, #4]
 802a39c:	9e02      	ldr	r6, [sp, #8]
 802a39e:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 802a3a2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802a3a6:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 802a3aa:	fb0a fc0c 	mul.w	ip, sl, ip
 802a3ae:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802a3b2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802a3b6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802a3ba:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802a3be:	4465      	add	r5, ip
 802a3c0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 802a3c4:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802a3c8:	fb09 fc0c 	mul.w	ip, r9, ip
 802a3cc:	fb09 f904 	mul.w	r9, r9, r4
 802a3d0:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 802a3d4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 802a3d8:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 802a3dc:	fb08 f404 	mul.w	r4, r8, r4
 802a3e0:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802a3e4:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802a3e8:	fb08 f802 	mul.w	r8, r8, r2
 802a3ec:	fb0a fa01 	mul.w	sl, sl, r1
 802a3f0:	0a22      	lsrs	r2, r4, #8
 802a3f2:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 802a3f6:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802a3fa:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 802a3fe:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802a402:	4414      	add	r4, r2
 802a404:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802a408:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 802a40c:	0a2d      	lsrs	r5, r5, #8
 802a40e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802a412:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802a416:	9a03      	ldr	r2, [sp, #12]
 802a418:	8836      	ldrh	r6, [r6, #0]
 802a41a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802a41e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802a422:	437d      	muls	r5, r7
 802a424:	4461      	add	r1, ip
 802a426:	0a24      	lsrs	r4, r4, #8
 802a428:	fb02 5503 	mla	r5, r2, r3, r5
 802a42c:	0a09      	lsrs	r1, r1, #8
 802a42e:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802a432:	fb04 540e 	mla	r4, r4, lr, r5
 802a436:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802a43a:	fb01 4100 	mla	r1, r1, r0, r4
 802a43e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802a442:	0a09      	lsrs	r1, r1, #8
 802a444:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802a448:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 802a44c:	fb07 f70a 	mul.w	r7, r7, sl
 802a450:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802a454:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 802a458:	fb03 7101 	mla	r1, r3, r1, r7
 802a45c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802a460:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802a464:	fb0e 1e08 	mla	lr, lr, r8, r1
 802a468:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 802a46c:	fb00 e101 	mla	r1, r0, r1, lr
 802a470:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 802a474:	9a00      	ldr	r2, [sp, #0]
 802a476:	b287      	uxth	r7, r0
 802a478:	437a      	muls	r2, r7
 802a47a:	0a09      	lsrs	r1, r1, #8
 802a47c:	1c53      	adds	r3, r2, #1
 802a47e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802a482:	4321      	orrs	r1, r4
 802a484:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802a488:	1235      	asrs	r5, r6, #8
 802a48a:	0c0a      	lsrs	r2, r1, #16
 802a48c:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802a490:	b2db      	uxtb	r3, r3
 802a492:	fb12 f207 	smulbb	r2, r2, r7
 802a496:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 802a49a:	fb05 2503 	mla	r5, r5, r3, r2
 802a49e:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802a4a2:	10f2      	asrs	r2, r6, #3
 802a4a4:	b2c8      	uxtb	r0, r1
 802a4a6:	00f6      	lsls	r6, r6, #3
 802a4a8:	fb14 f407 	smulbb	r4, r4, r7
 802a4ac:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802a4b0:	b2f6      	uxtb	r6, r6
 802a4b2:	fb10 f007 	smulbb	r0, r0, r7
 802a4b6:	fb02 4203 	mla	r2, r2, r3, r4
 802a4ba:	b2ad      	uxth	r5, r5
 802a4bc:	fb06 0303 	mla	r3, r6, r3, r0
 802a4c0:	b299      	uxth	r1, r3
 802a4c2:	b294      	uxth	r4, r2
 802a4c4:	1c6b      	adds	r3, r5, #1
 802a4c6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802a4ca:	1c62      	adds	r2, r4, #1
 802a4cc:	1c4b      	adds	r3, r1, #1
 802a4ce:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802a4d2:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 802a4d6:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 802a4da:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802a4de:	0952      	lsrs	r2, r2, #5
 802a4e0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802a4e4:	432b      	orrs	r3, r5
 802a4e6:	4313      	orrs	r3, r2
 802a4e8:	9a02      	ldr	r2, [sp, #8]
 802a4ea:	8013      	strh	r3, [r2, #0]
 802a4ec:	b005      	add	sp, #20
 802a4ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a4f2:	2500      	movs	r5, #0
 802a4f4:	e6ef      	b.n	802a2d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 802a4f6:	2100      	movs	r1, #0
 802a4f8:	460d      	mov	r5, r1
 802a4fa:	e6f7      	b.n	802a2ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802a4fc:	2100      	movs	r1, #0
 802a4fe:	e6f5      	b.n	802a2ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802a500:	4631      	mov	r1, r6
 802a502:	e6f3      	b.n	802a2ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802a504:	2400      	movs	r4, #0
 802a506:	e702      	b.n	802a30e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 802a508:	2200      	movs	r2, #0
 802a50a:	4614      	mov	r4, r2
 802a50c:	e70b      	b.n	802a326 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802a50e:	4602      	mov	r2, r0
 802a510:	4604      	mov	r4, r0
 802a512:	e708      	b.n	802a326 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802a514:	2200      	movs	r2, #0
 802a516:	e706      	b.n	802a326 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802a518:	4632      	mov	r2, r6
 802a51a:	e704      	b.n	802a326 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0802a51c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802a51c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a520:	b09d      	sub	sp, #116	@ 0x74
 802a522:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 802a526:	9219      	str	r2, [sp, #100]	@ 0x64
 802a528:	9307      	str	r3, [sp, #28]
 802a52a:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 802a52c:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 802a530:	931a      	str	r3, [sp, #104]	@ 0x68
 802a532:	9117      	str	r1, [sp, #92]	@ 0x5c
 802a534:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 802a538:	901b      	str	r0, [sp, #108]	@ 0x6c
 802a53a:	6850      	ldr	r0, [r2, #4]
 802a53c:	6812      	ldr	r2, [r2, #0]
 802a53e:	fb00 1303 	mla	r3, r0, r3, r1
 802a542:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802a546:	930a      	str	r3, [sp, #40]	@ 0x28
 802a548:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802a54a:	681b      	ldr	r3, [r3, #0]
 802a54c:	9310      	str	r3, [sp, #64]	@ 0x40
 802a54e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 802a552:	930b      	str	r3, [sp, #44]	@ 0x2c
 802a554:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802a556:	2b00      	cmp	r3, #0
 802a558:	dc03      	bgt.n	802a562 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 802a55a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 802a55c:	2b00      	cmp	r3, #0
 802a55e:	f340 8375 	ble.w	802ac4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802a562:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802a564:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802a568:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802a56c:	1e48      	subs	r0, r1, #1
 802a56e:	1e57      	subs	r7, r2, #1
 802a570:	9b07      	ldr	r3, [sp, #28]
 802a572:	2b00      	cmp	r3, #0
 802a574:	f340 818e 	ble.w	802a894 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 802a578:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802a57c:	ea4f 4326 	mov.w	r3, r6, asr #16
 802a580:	d406      	bmi.n	802a590 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802a582:	4584      	cmp	ip, r0
 802a584:	da04      	bge.n	802a590 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802a586:	2b00      	cmp	r3, #0
 802a588:	db02      	blt.n	802a590 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802a58a:	42bb      	cmp	r3, r7
 802a58c:	f2c0 8183 	blt.w	802a896 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802a590:	f11c 0c01 	adds.w	ip, ip, #1
 802a594:	f100 8173 	bmi.w	802a87e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802a598:	4561      	cmp	r1, ip
 802a59a:	f2c0 8170 	blt.w	802a87e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802a59e:	3301      	adds	r3, #1
 802a5a0:	f100 816d 	bmi.w	802a87e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802a5a4:	429a      	cmp	r2, r3
 802a5a6:	f2c0 816a 	blt.w	802a87e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802a5aa:	9b07      	ldr	r3, [sp, #28]
 802a5ac:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 802a5ae:	9318      	str	r3, [sp, #96]	@ 0x60
 802a5b0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802a5b2:	2b00      	cmp	r3, #0
 802a5b4:	f340 818c 	ble.w	802a8d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 802a5b8:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 802a5ba:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802a5bc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802a5c0:	689b      	ldr	r3, [r3, #8]
 802a5c2:	1422      	asrs	r2, r4, #16
 802a5c4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 802a5c8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802a5cc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802a5d0:	f100 81cd 	bmi.w	802a96e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802a5d4:	f103 38ff 	add.w	r8, r3, #4294967295
 802a5d8:	4542      	cmp	r2, r8
 802a5da:	f280 81c8 	bge.w	802a96e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802a5de:	f1bc 0f00 	cmp.w	ip, #0
 802a5e2:	f2c0 81c4 	blt.w	802a96e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802a5e6:	f10e 38ff 	add.w	r8, lr, #4294967295
 802a5ea:	45c4      	cmp	ip, r8
 802a5ec:	f280 81bf 	bge.w	802a96e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802a5f0:	b21b      	sxth	r3, r3
 802a5f2:	fb0c 2203 	mla	r2, ip, r3, r2
 802a5f6:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802a5f8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 802a5fc:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 802a600:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 802a604:	2800      	cmp	r0, #0
 802a606:	f000 81a9 	beq.w	802a95c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 802a60a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802a60e:	950c      	str	r5, [sp, #48]	@ 0x30
 802a610:	0e2d      	lsrs	r5, r5, #24
 802a612:	9513      	str	r5, [sp, #76]	@ 0x4c
 802a614:	b181      	cbz	r1, 802a638 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802a616:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 802a61a:	3b01      	subs	r3, #1
 802a61c:	009b      	lsls	r3, r3, #2
 802a61e:	3304      	adds	r3, #4
 802a620:	eb08 0c03 	add.w	ip, r8, r3
 802a624:	f858 3003 	ldr.w	r3, [r8, r3]
 802a628:	9308      	str	r3, [sp, #32]
 802a62a:	0e1b      	lsrs	r3, r3, #24
 802a62c:	9311      	str	r3, [sp, #68]	@ 0x44
 802a62e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802a632:	930d      	str	r3, [sp, #52]	@ 0x34
 802a634:	0e1b      	lsrs	r3, r3, #24
 802a636:	9314      	str	r3, [sp, #80]	@ 0x50
 802a638:	b280      	uxth	r0, r0
 802a63a:	b289      	uxth	r1, r1
 802a63c:	fb00 f901 	mul.w	r9, r0, r1
 802a640:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802a644:	0100      	lsls	r0, r0, #4
 802a646:	eba0 0809 	sub.w	r8, r0, r9
 802a64a:	b289      	uxth	r1, r1
 802a64c:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 802a650:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802a652:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802a654:	fa1f f888 	uxth.w	r8, r8
 802a658:	1a5b      	subs	r3, r3, r1
 802a65a:	b29b      	uxth	r3, r3
 802a65c:	fb08 f000 	mul.w	r0, r8, r0
 802a660:	fb03 000e 	mla	r0, r3, lr, r0
 802a664:	fb01 0005 	mla	r0, r1, r5, r0
 802a668:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802a66a:	fb09 0005 	mla	r0, r9, r5, r0
 802a66e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802a672:	2800      	cmp	r0, #0
 802a674:	f000 80fa 	beq.w	802a86c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802a678:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802a67c:	d01b      	beq.n	802a6b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802a67e:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 802a682:	fb0e fa0a 	mul.w	sl, lr, sl
 802a686:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802a68a:	fb0e fe02 	mul.w	lr, lr, r2
 802a68e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802a692:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802a696:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802a69a:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 802a69e:	4452      	add	r2, sl
 802a6a0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802a6a4:	0a12      	lsrs	r2, r2, #8
 802a6a6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802a6aa:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802a6ae:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802a6b2:	ea42 020c 	orr.w	r2, r2, ip
 802a6b6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802a6b8:	2dff      	cmp	r5, #255	@ 0xff
 802a6ba:	d021      	beq.n	802a700 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 802a6bc:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802a6be:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802a6c2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802a6c4:	fb05 fb0b 	mul.w	fp, r5, fp
 802a6c8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802a6ca:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802a6ce:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802a6d0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802a6d4:	fb05 fa0a 	mul.w	sl, r5, sl
 802a6d8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802a6dc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802a6e0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802a6e4:	44de      	add	lr, fp
 802a6e6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802a6ea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802a6ee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802a6f2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802a6f6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802a6fa:	ea4e 050a 	orr.w	r5, lr, sl
 802a6fe:	950c      	str	r5, [sp, #48]	@ 0x30
 802a700:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802a702:	2dff      	cmp	r5, #255	@ 0xff
 802a704:	d021      	beq.n	802a74a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 802a706:	9d08      	ldr	r5, [sp, #32]
 802a708:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802a70c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802a70e:	fb05 fb0b 	mul.w	fp, r5, fp
 802a712:	9d08      	ldr	r5, [sp, #32]
 802a714:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802a718:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802a71a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802a71e:	fb05 fa0a 	mul.w	sl, r5, sl
 802a722:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802a726:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802a72a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802a72e:	44de      	add	lr, fp
 802a730:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802a734:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802a738:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802a73c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802a740:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802a744:	ea4e 050a 	orr.w	r5, lr, sl
 802a748:	9508      	str	r5, [sp, #32]
 802a74a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802a74c:	2dff      	cmp	r5, #255	@ 0xff
 802a74e:	d021      	beq.n	802a794 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802a750:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802a752:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802a756:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802a758:	fb05 fb0b 	mul.w	fp, r5, fp
 802a75c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802a75e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802a762:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802a764:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802a768:	fb05 fa0a 	mul.w	sl, r5, sl
 802a76c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802a770:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802a774:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802a778:	44de      	add	lr, fp
 802a77a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802a77e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802a782:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802a786:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802a78a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802a78e:	ea4e 050a 	orr.w	r5, lr, sl
 802a792:	950d      	str	r5, [sp, #52]	@ 0x34
 802a794:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802a796:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802a79a:	9d08      	ldr	r5, [sp, #32]
 802a79c:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 802a7a0:	fb08 fc0c 	mul.w	ip, r8, ip
 802a7a4:	fb03 cc0e 	mla	ip, r3, lr, ip
 802a7a8:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 802a7ac:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802a7ae:	fb01 cc0e 	mla	ip, r1, lr, ip
 802a7b2:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 802a7b6:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802a7b8:	fb09 cc0e 	mla	ip, r9, lr, ip
 802a7bc:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 802a7c0:	fb08 f80e 	mul.w	r8, r8, lr
 802a7c4:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802a7c8:	fb03 8202 	mla	r2, r3, r2, r8
 802a7cc:	9b08      	ldr	r3, [sp, #32]
 802a7ce:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802a7d0:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 802a7d4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802a7d6:	fb01 220a 	mla	r2, r1, sl, r2
 802a7da:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 802a7de:	fb09 2901 	mla	r9, r9, r1, r2
 802a7e2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802a7e4:	883b      	ldrh	r3, [r7, #0]
 802a7e6:	4342      	muls	r2, r0
 802a7e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802a7ec:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802a7f0:	1c50      	adds	r0, r2, #1
 802a7f2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802a7f6:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 802a7fa:	ea4c 0c09 	orr.w	ip, ip, r9
 802a7fe:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802a802:	1219      	asrs	r1, r3, #8
 802a804:	ea4f 421c 	mov.w	r2, ip, lsr #16
 802a808:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 802a80c:	b2c0      	uxtb	r0, r0
 802a80e:	fb12 f205 	smulbb	r2, r2, r5
 802a812:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802a816:	fb01 2100 	mla	r1, r1, r0, r2
 802a81a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802a81e:	10da      	asrs	r2, r3, #3
 802a820:	fa5f fc8c 	uxtb.w	ip, ip
 802a824:	00db      	lsls	r3, r3, #3
 802a826:	fb1c fc05 	smulbb	ip, ip, r5
 802a82a:	b2db      	uxtb	r3, r3
 802a82c:	b289      	uxth	r1, r1
 802a82e:	fb03 c300 	mla	r3, r3, r0, ip
 802a832:	fa1f fc83 	uxth.w	ip, r3
 802a836:	1c4b      	adds	r3, r1, #1
 802a838:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802a83c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802a840:	fb1e fe05 	smulbb	lr, lr, r5
 802a844:	f10c 0301 	add.w	r3, ip, #1
 802a848:	fb02 e200 	mla	r2, r2, r0, lr
 802a84c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802a850:	b292      	uxth	r2, r2
 802a852:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 802a856:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802a85a:	430b      	orrs	r3, r1
 802a85c:	1c51      	adds	r1, r2, #1
 802a85e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802a862:	0952      	lsrs	r2, r2, #5
 802a864:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802a868:	4313      	orrs	r3, r2
 802a86a:	803b      	strh	r3, [r7, #0]
 802a86c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802a86e:	441c      	add	r4, r3
 802a870:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802a872:	441e      	add	r6, r3
 802a874:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802a876:	3b01      	subs	r3, #1
 802a878:	3702      	adds	r7, #2
 802a87a:	9318      	str	r3, [sp, #96]	@ 0x60
 802a87c:	e698      	b.n	802a5b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802a87e:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802a880:	441c      	add	r4, r3
 802a882:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802a884:	441e      	add	r6, r3
 802a886:	9b07      	ldr	r3, [sp, #28]
 802a888:	3b01      	subs	r3, #1
 802a88a:	9307      	str	r3, [sp, #28]
 802a88c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802a88e:	3302      	adds	r3, #2
 802a890:	930a      	str	r3, [sp, #40]	@ 0x28
 802a892:	e66d      	b.n	802a570 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 802a894:	d023      	beq.n	802a8de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802a896:	9b07      	ldr	r3, [sp, #28]
 802a898:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 802a89a:	3b01      	subs	r3, #1
 802a89c:	fb00 4003 	mla	r0, r0, r3, r4
 802a8a0:	1400      	asrs	r0, r0, #16
 802a8a2:	f53f ae82 	bmi.w	802a5aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802a8a6:	3901      	subs	r1, #1
 802a8a8:	4288      	cmp	r0, r1
 802a8aa:	f6bf ae7e 	bge.w	802a5aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802a8ae:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 802a8b0:	fb01 6303 	mla	r3, r1, r3, r6
 802a8b4:	141b      	asrs	r3, r3, #16
 802a8b6:	f53f ae78 	bmi.w	802a5aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802a8ba:	3a01      	subs	r2, #1
 802a8bc:	4293      	cmp	r3, r2
 802a8be:	f6bf ae74 	bge.w	802a5aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802a8c2:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802a8c6:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 802a8ca:	f1bb 0f00 	cmp.w	fp, #0
 802a8ce:	dc6c      	bgt.n	802a9aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802a8d0:	9b07      	ldr	r3, [sp, #28]
 802a8d2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802a8d6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802a8d8:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802a8dc:	930a      	str	r3, [sp, #40]	@ 0x28
 802a8de:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802a8e0:	2b00      	cmp	r3, #0
 802a8e2:	f340 81b3 	ble.w	802ac4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802a8e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 802a8ea:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802a8ee:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802a8f2:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802a8f4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802a8f8:	ee31 1a05 	vadd.f32	s2, s2, s10
 802a8fc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802a900:	eef0 6a62 	vmov.f32	s13, s5
 802a904:	ee61 7a27 	vmul.f32	s15, s2, s15
 802a908:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802a90c:	ee77 2a62 	vsub.f32	s5, s14, s5
 802a910:	ee16 4a90 	vmov	r4, s13
 802a914:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802a918:	eef0 6a43 	vmov.f32	s13, s6
 802a91c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802a920:	ee12 2a90 	vmov	r2, s5
 802a924:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802a928:	fb92 f3f3 	sdiv	r3, r2, r3
 802a92c:	ee13 2a10 	vmov	r2, s6
 802a930:	9329      	str	r3, [sp, #164]	@ 0xa4
 802a932:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802a934:	fb92 f3f3 	sdiv	r3, r2, r3
 802a938:	932a      	str	r3, [sp, #168]	@ 0xa8
 802a93a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802a93c:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 802a93e:	3b01      	subs	r3, #1
 802a940:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802a944:	9317      	str	r3, [sp, #92]	@ 0x5c
 802a946:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802a948:	bf08      	it	eq
 802a94a:	4613      	moveq	r3, r2
 802a94c:	ee16 6a90 	vmov	r6, s13
 802a950:	9307      	str	r3, [sp, #28]
 802a952:	eeb0 3a67 	vmov.f32	s6, s15
 802a956:	eef0 2a47 	vmov.f32	s5, s14
 802a95a:	e5fb      	b.n	802a554 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 802a95c:	2900      	cmp	r1, #0
 802a95e:	f43f ae6b 	beq.w	802a638 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802a962:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 802a966:	9308      	str	r3, [sp, #32]
 802a968:	0e1b      	lsrs	r3, r3, #24
 802a96a:	9311      	str	r3, [sp, #68]	@ 0x44
 802a96c:	e664      	b.n	802a638 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802a96e:	f112 0801 	adds.w	r8, r2, #1
 802a972:	f53f af7b 	bmi.w	802a86c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802a976:	4543      	cmp	r3, r8
 802a978:	f6ff af78 	blt.w	802a86c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802a97c:	f11c 0801 	adds.w	r8, ip, #1
 802a980:	f53f af74 	bmi.w	802a86c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802a984:	45c6      	cmp	lr, r8
 802a986:	f6ff af71 	blt.w	802a86c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802a98a:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 802a98c:	9201      	str	r2, [sp, #4]
 802a98e:	fa0f f28e 	sxth.w	r2, lr
 802a992:	e9cd 1504 	strd	r1, r5, [sp, #16]
 802a996:	e9cd c002 	strd	ip, r0, [sp, #8]
 802a99a:	9200      	str	r2, [sp, #0]
 802a99c:	b21b      	sxth	r3, r3
 802a99e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802a9a0:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 802a9a2:	4639      	mov	r1, r7
 802a9a4:	f7ff fc79 	bl	802a29a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 802a9a8:	e760      	b.n	802a86c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802a9aa:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802a9ac:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802a9ae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802a9b2:	1427      	asrs	r7, r4, #16
 802a9b4:	1433      	asrs	r3, r6, #16
 802a9b6:	fb01 7303 	mla	r3, r1, r3, r7
 802a9ba:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 802a9be:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802a9c2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802a9c6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802a9ca:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802a9ce:	2a00      	cmp	r2, #0
 802a9d0:	f000 8133 	beq.w	802ac3a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 802a9d4:	687d      	ldr	r5, [r7, #4]
 802a9d6:	950e      	str	r5, [sp, #56]	@ 0x38
 802a9d8:	0e2d      	lsrs	r5, r5, #24
 802a9da:	9515      	str	r5, [sp, #84]	@ 0x54
 802a9dc:	b178      	cbz	r0, 802a9fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802a9de:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 802a9e2:	3901      	subs	r1, #1
 802a9e4:	0089      	lsls	r1, r1, #2
 802a9e6:	3104      	adds	r1, #4
 802a9e8:	eb07 0e01 	add.w	lr, r7, r1
 802a9ec:	5879      	ldr	r1, [r7, r1]
 802a9ee:	9109      	str	r1, [sp, #36]	@ 0x24
 802a9f0:	0e09      	lsrs	r1, r1, #24
 802a9f2:	9112      	str	r1, [sp, #72]	@ 0x48
 802a9f4:	f8de 1004 	ldr.w	r1, [lr, #4]
 802a9f8:	910f      	str	r1, [sp, #60]	@ 0x3c
 802a9fa:	0e09      	lsrs	r1, r1, #24
 802a9fc:	9116      	str	r1, [sp, #88]	@ 0x58
 802a9fe:	b292      	uxth	r2, r2
 802aa00:	b280      	uxth	r0, r0
 802aa02:	fb02 f800 	mul.w	r8, r2, r0
 802aa06:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802aa0a:	0112      	lsls	r2, r2, #4
 802aa0c:	eba2 0e08 	sub.w	lr, r2, r8
 802aa10:	b280      	uxth	r0, r0
 802aa12:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802aa16:	9915      	ldr	r1, [sp, #84]	@ 0x54
 802aa18:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802aa1a:	fa1f fe8e 	uxth.w	lr, lr
 802aa1e:	1a12      	subs	r2, r2, r0
 802aa20:	b292      	uxth	r2, r2
 802aa22:	fb0e f101 	mul.w	r1, lr, r1
 802aa26:	fb02 110c 	mla	r1, r2, ip, r1
 802aa2a:	fb00 1105 	mla	r1, r0, r5, r1
 802aa2e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802aa30:	fb08 1105 	mla	r1, r8, r5, r1
 802aa34:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802aa38:	2900      	cmp	r1, #0
 802aa3a:	f000 80f5 	beq.w	802ac28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802aa3e:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802aa42:	d019      	beq.n	802aa78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 802aa44:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 802aa48:	fb0c fa0a 	mul.w	sl, ip, sl
 802aa4c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802aa50:	fb0c fc03 	mul.w	ip, ip, r3
 802aa54:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802aa58:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802aa5c:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802aa60:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 802aa64:	4453      	add	r3, sl
 802aa66:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802aa6a:	0a1b      	lsrs	r3, r3, #8
 802aa6c:	0a3f      	lsrs	r7, r7, #8
 802aa6e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802aa72:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802aa76:	433b      	orrs	r3, r7
 802aa78:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802aa7a:	2dff      	cmp	r5, #255	@ 0xff
 802aa7c:	d020      	beq.n	802aac0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 802aa7e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802aa80:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802aa84:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802aa86:	436f      	muls	r7, r5
 802aa88:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802aa8a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802aa8e:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802aa90:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802aa94:	fb05 fa0a 	mul.w	sl, r5, sl
 802aa98:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802aa9c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802aaa0:	44bc      	add	ip, r7
 802aaa2:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802aaa6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802aaaa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802aaae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802aab2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802aab6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802aaba:	ea4c 050a 	orr.w	r5, ip, sl
 802aabe:	950e      	str	r5, [sp, #56]	@ 0x38
 802aac0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802aac2:	2dff      	cmp	r5, #255	@ 0xff
 802aac4:	d020      	beq.n	802ab08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 802aac6:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802aac8:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802aacc:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802aace:	436f      	muls	r7, r5
 802aad0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802aad2:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802aad6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802aad8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802aadc:	fb05 fa0a 	mul.w	sl, r5, sl
 802aae0:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802aae4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802aae8:	44bc      	add	ip, r7
 802aaea:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802aaee:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802aaf2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802aaf6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802aafa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802aafe:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802ab02:	ea4c 050a 	orr.w	r5, ip, sl
 802ab06:	9509      	str	r5, [sp, #36]	@ 0x24
 802ab08:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802ab0a:	2dff      	cmp	r5, #255	@ 0xff
 802ab0c:	d020      	beq.n	802ab50 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 802ab0e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802ab10:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802ab14:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802ab16:	436f      	muls	r7, r5
 802ab18:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802ab1a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802ab1e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802ab20:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802ab24:	fb05 fa0a 	mul.w	sl, r5, sl
 802ab28:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802ab2c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802ab30:	44bc      	add	ip, r7
 802ab32:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802ab36:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802ab3a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802ab3e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802ab42:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802ab46:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802ab4a:	ea4c 050a 	orr.w	r5, ip, sl
 802ab4e:	950f      	str	r5, [sp, #60]	@ 0x3c
 802ab50:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802ab52:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802ab56:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802ab58:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 802ab5c:	fb0e f707 	mul.w	r7, lr, r7
 802ab60:	fb02 770c 	mla	r7, r2, ip, r7
 802ab64:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802ab68:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802ab6a:	fb00 770c 	mla	r7, r0, ip, r7
 802ab6e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802ab72:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802ab74:	fb08 770c 	mla	r7, r8, ip, r7
 802ab78:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 802ab7c:	fb0e fe0c 	mul.w	lr, lr, ip
 802ab80:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ab84:	fb02 e303 	mla	r3, r2, r3, lr
 802ab88:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802ab8a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802ab8c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 802ab90:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802ab92:	fb00 330a 	mla	r3, r0, sl, r3
 802ab96:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 802ab9a:	fb08 3c0c 	mla	ip, r8, ip, r3
 802ab9e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802aba0:	f8b9 0000 	ldrh.w	r0, [r9]
 802aba4:	4359      	muls	r1, r3
 802aba6:	0a3f      	lsrs	r7, r7, #8
 802aba8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802abac:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802abb0:	1c4b      	adds	r3, r1, #1
 802abb2:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802abb6:	ea47 070c 	orr.w	r7, r7, ip
 802abba:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802abbe:	1202      	asrs	r2, r0, #8
 802abc0:	0c3b      	lsrs	r3, r7, #16
 802abc2:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802abc6:	b2c9      	uxtb	r1, r1
 802abc8:	fb13 f305 	smulbb	r3, r3, r5
 802abcc:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 802abd0:	fb02 3201 	mla	r2, r2, r1, r3
 802abd4:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 802abd8:	10c3      	asrs	r3, r0, #3
 802abda:	b2ff      	uxtb	r7, r7
 802abdc:	00c0      	lsls	r0, r0, #3
 802abde:	b2c0      	uxtb	r0, r0
 802abe0:	fb17 f705 	smulbb	r7, r7, r5
 802abe4:	fb00 7001 	mla	r0, r0, r1, r7
 802abe8:	b292      	uxth	r2, r2
 802abea:	fb1c fc05 	smulbb	ip, ip, r5
 802abee:	b280      	uxth	r0, r0
 802abf0:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802abf4:	fb03 c301 	mla	r3, r3, r1, ip
 802abf8:	1c51      	adds	r1, r2, #1
 802abfa:	f100 0c01 	add.w	ip, r0, #1
 802abfe:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802ac02:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 802ac06:	b29b      	uxth	r3, r3
 802ac08:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 802ac0c:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 802ac10:	ea4c 0202 	orr.w	r2, ip, r2
 802ac14:	f103 0c01 	add.w	ip, r3, #1
 802ac18:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 802ac1c:	095b      	lsrs	r3, r3, #5
 802ac1e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802ac22:	431a      	orrs	r2, r3
 802ac24:	f8a9 2000 	strh.w	r2, [r9]
 802ac28:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802ac2a:	441c      	add	r4, r3
 802ac2c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802ac2e:	f109 0902 	add.w	r9, r9, #2
 802ac32:	441e      	add	r6, r3
 802ac34:	f10b 3bff 	add.w	fp, fp, #4294967295
 802ac38:	e647      	b.n	802a8ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802ac3a:	2800      	cmp	r0, #0
 802ac3c:	f43f aedf 	beq.w	802a9fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802ac40:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 802ac44:	9109      	str	r1, [sp, #36]	@ 0x24
 802ac46:	0e09      	lsrs	r1, r1, #24
 802ac48:	9112      	str	r1, [sp, #72]	@ 0x48
 802ac4a:	e6d8      	b.n	802a9fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802ac4c:	b01d      	add	sp, #116	@ 0x74
 802ac4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802ac52 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 802ac52:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ac56:	b085      	sub	sp, #20
 802ac58:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 802ac5c:	9102      	str	r1, [sp, #8]
 802ac5e:	2c00      	cmp	r4, #0
 802ac60:	fb04 7103 	mla	r1, r4, r3, r7
 802ac64:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 802ac68:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 802ac6c:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 802ac70:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 802ac74:	f2c0 810c 	blt.w	802ae90 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 802ac78:	45a6      	cmp	lr, r4
 802ac7a:	f340 8109 	ble.w	802ae90 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 802ac7e:	2f00      	cmp	r7, #0
 802ac80:	f2c0 8104 	blt.w	802ae8c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 802ac84:	42bb      	cmp	r3, r7
 802ac86:	f340 8101 	ble.w	802ae8c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 802ac8a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802ac8e:	1c7a      	adds	r2, r7, #1
 802ac90:	f100 8101 	bmi.w	802ae96 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 802ac94:	4293      	cmp	r3, r2
 802ac96:	f340 80fe 	ble.w	802ae96 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 802ac9a:	2e00      	cmp	r6, #0
 802ac9c:	f000 80fd 	beq.w	802ae9a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 802aca0:	f8dc 1004 	ldr.w	r1, [ip, #4]
 802aca4:	3401      	adds	r4, #1
 802aca6:	f100 80fc 	bmi.w	802aea2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 802acaa:	45a6      	cmp	lr, r4
 802acac:	f340 80f9 	ble.w	802aea2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 802acb0:	2800      	cmp	r0, #0
 802acb2:	f000 80f9 	beq.w	802aea8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 802acb6:	2f00      	cmp	r7, #0
 802acb8:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 802acbc:	f2c0 80ef 	blt.w	802ae9e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 802acc0:	42bb      	cmp	r3, r7
 802acc2:	f340 80ec 	ble.w	802ae9e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 802acc6:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802acca:	3701      	adds	r7, #1
 802accc:	f100 80ef 	bmi.w	802aeae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 802acd0:	42bb      	cmp	r3, r7
 802acd2:	f340 80ec 	ble.w	802aeae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 802acd6:	2e00      	cmp	r6, #0
 802acd8:	f000 80eb 	beq.w	802aeb2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 802acdc:	6852      	ldr	r2, [r2, #4]
 802acde:	b2b6      	uxth	r6, r6
 802ace0:	b280      	uxth	r0, r0
 802ace2:	fb00 fe06 	mul.w	lr, r0, r6
 802ace6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802acea:	0136      	lsls	r6, r6, #4
 802acec:	eba6 070e 	sub.w	r7, r6, lr
 802acf0:	b280      	uxth	r0, r0
 802acf2:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 802acf6:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802acfa:	b2bf      	uxth	r7, r7
 802acfc:	1a1b      	subs	r3, r3, r0
 802acfe:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802ad02:	b29b      	uxth	r3, r3
 802ad04:	fb07 f60a 	mul.w	r6, r7, sl
 802ad08:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802ad0c:	fb0b 6603 	mla	r6, fp, r3, r6
 802ad10:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802ad14:	fb00 6609 	mla	r6, r0, r9, r6
 802ad18:	fb0e 6608 	mla	r6, lr, r8, r6
 802ad1c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802ad20:	9600      	str	r6, [sp, #0]
 802ad22:	2e00      	cmp	r6, #0
 802ad24:	f000 80af 	beq.w	802ae86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 802ad28:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802ad2c:	fb0b fc0c 	mul.w	ip, fp, ip
 802ad30:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802ad34:	fb0b f505 	mul.w	r5, fp, r5
 802ad38:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802ad3c:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802ad40:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802ad44:	44dc      	add	ip, fp
 802ad46:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802ad4a:	9501      	str	r5, [sp, #4]
 802ad4c:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 802ad50:	9503      	str	r5, [sp, #12]
 802ad52:	9d01      	ldr	r5, [sp, #4]
 802ad54:	9e02      	ldr	r6, [sp, #8]
 802ad56:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 802ad5a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802ad5e:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 802ad62:	fb0a fc0c 	mul.w	ip, sl, ip
 802ad66:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802ad6a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802ad6e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802ad72:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802ad76:	4465      	add	r5, ip
 802ad78:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 802ad7c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802ad80:	fb09 fc0c 	mul.w	ip, r9, ip
 802ad84:	fb09 f904 	mul.w	r9, r9, r4
 802ad88:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 802ad8c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 802ad90:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 802ad94:	fb08 f404 	mul.w	r4, r8, r4
 802ad98:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802ad9c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802ada0:	fb08 f802 	mul.w	r8, r8, r2
 802ada4:	fb0a fa01 	mul.w	sl, sl, r1
 802ada8:	0a22      	lsrs	r2, r4, #8
 802adaa:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 802adae:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802adb2:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 802adb6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802adba:	4414      	add	r4, r2
 802adbc:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802adc0:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 802adc4:	0a2d      	lsrs	r5, r5, #8
 802adc6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802adca:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802adce:	9a03      	ldr	r2, [sp, #12]
 802add0:	8836      	ldrh	r6, [r6, #0]
 802add2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802add6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802adda:	437d      	muls	r5, r7
 802addc:	4461      	add	r1, ip
 802adde:	0a24      	lsrs	r4, r4, #8
 802ade0:	fb02 5503 	mla	r5, r2, r3, r5
 802ade4:	0a09      	lsrs	r1, r1, #8
 802ade6:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802adea:	fb04 540e 	mla	r4, r4, lr, r5
 802adee:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802adf2:	fb01 4100 	mla	r1, r1, r0, r4
 802adf6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802adfa:	0a09      	lsrs	r1, r1, #8
 802adfc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802ae00:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 802ae04:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802ae08:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 802ae0c:	fb07 f70a 	mul.w	r7, r7, sl
 802ae10:	fb03 7101 	mla	r1, r3, r1, r7
 802ae14:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802ae18:	9b00      	ldr	r3, [sp, #0]
 802ae1a:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802ae1e:	fb0e 1e08 	mla	lr, lr, r8, r1
 802ae22:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 802ae26:	fb00 e101 	mla	r1, r0, r1, lr
 802ae2a:	43da      	mvns	r2, r3
 802ae2c:	1233      	asrs	r3, r6, #8
 802ae2e:	b2d2      	uxtb	r2, r2
 802ae30:	10f0      	asrs	r0, r6, #3
 802ae32:	0a09      	lsrs	r1, r1, #8
 802ae34:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 802ae38:	00f6      	lsls	r6, r6, #3
 802ae3a:	4353      	muls	r3, r2
 802ae3c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802ae40:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802ae44:	b2f6      	uxtb	r6, r6
 802ae46:	4321      	orrs	r1, r4
 802ae48:	4350      	muls	r0, r2
 802ae4a:	4356      	muls	r6, r2
 802ae4c:	1c5a      	adds	r2, r3, #1
 802ae4e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802ae52:	0c0b      	lsrs	r3, r1, #16
 802ae54:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802ae58:	1c42      	adds	r2, r0, #1
 802ae5a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802ae5e:	0a0a      	lsrs	r2, r1, #8
 802ae60:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802ae64:	021b      	lsls	r3, r3, #8
 802ae66:	00d2      	lsls	r2, r2, #3
 802ae68:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802ae6c:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802ae70:	4313      	orrs	r3, r2
 802ae72:	1c72      	adds	r2, r6, #1
 802ae74:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 802ae78:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 802ae7c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802ae80:	4319      	orrs	r1, r3
 802ae82:	9b02      	ldr	r3, [sp, #8]
 802ae84:	8019      	strh	r1, [r3, #0]
 802ae86:	b005      	add	sp, #20
 802ae88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802ae8c:	2500      	movs	r5, #0
 802ae8e:	e6fe      	b.n	802ac8e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 802ae90:	2100      	movs	r1, #0
 802ae92:	460d      	mov	r5, r1
 802ae94:	e706      	b.n	802aca4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802ae96:	2100      	movs	r1, #0
 802ae98:	e704      	b.n	802aca4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802ae9a:	4631      	mov	r1, r6
 802ae9c:	e702      	b.n	802aca4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802ae9e:	2400      	movs	r4, #0
 802aea0:	e713      	b.n	802acca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 802aea2:	2200      	movs	r2, #0
 802aea4:	4614      	mov	r4, r2
 802aea6:	e71a      	b.n	802acde <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802aea8:	4602      	mov	r2, r0
 802aeaa:	4604      	mov	r4, r0
 802aeac:	e717      	b.n	802acde <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802aeae:	2200      	movs	r2, #0
 802aeb0:	e715      	b.n	802acde <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802aeb2:	4632      	mov	r2, r6
 802aeb4:	e713      	b.n	802acde <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0802aeb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802aeb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802aebc:	b09b      	sub	sp, #108	@ 0x6c
 802aebe:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 802aec2:	9218      	str	r2, [sp, #96]	@ 0x60
 802aec4:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 802aec6:	9116      	str	r1, [sp, #88]	@ 0x58
 802aec8:	9307      	str	r3, [sp, #28]
 802aeca:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 802aece:	9019      	str	r0, [sp, #100]	@ 0x64
 802aed0:	6850      	ldr	r0, [r2, #4]
 802aed2:	6812      	ldr	r2, [r2, #0]
 802aed4:	fb00 1303 	mla	r3, r0, r3, r1
 802aed8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802aedc:	930a      	str	r3, [sp, #40]	@ 0x28
 802aede:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802aee0:	681b      	ldr	r3, [r3, #0]
 802aee2:	930f      	str	r3, [sp, #60]	@ 0x3c
 802aee4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802aee6:	2b00      	cmp	r3, #0
 802aee8:	dc03      	bgt.n	802aef2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802aeea:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802aeec:	2b00      	cmp	r3, #0
 802aeee:	f340 8386 	ble.w	802b5fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802aef2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802aef4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802aef8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802aefc:	1e48      	subs	r0, r1, #1
 802aefe:	1e57      	subs	r7, r2, #1
 802af00:	9b07      	ldr	r3, [sp, #28]
 802af02:	2b00      	cmp	r3, #0
 802af04:	f340 8166 	ble.w	802b1d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802af08:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802af0c:	ea4f 4326 	mov.w	r3, r6, asr #16
 802af10:	d406      	bmi.n	802af20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802af12:	4584      	cmp	ip, r0
 802af14:	da04      	bge.n	802af20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802af16:	2b00      	cmp	r3, #0
 802af18:	db02      	blt.n	802af20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802af1a:	42bb      	cmp	r3, r7
 802af1c:	f2c0 815b 	blt.w	802b1d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 802af20:	f11c 0c01 	adds.w	ip, ip, #1
 802af24:	f100 814b 	bmi.w	802b1be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802af28:	4561      	cmp	r1, ip
 802af2a:	f2c0 8148 	blt.w	802b1be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802af2e:	3301      	adds	r3, #1
 802af30:	f100 8145 	bmi.w	802b1be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802af34:	429a      	cmp	r2, r3
 802af36:	f2c0 8142 	blt.w	802b1be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802af3a:	9b07      	ldr	r3, [sp, #28]
 802af3c:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 802af3e:	9317      	str	r3, [sp, #92]	@ 0x5c
 802af40:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802af42:	2b00      	cmp	r3, #0
 802af44:	f340 8165 	ble.w	802b212 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802af48:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 802af4a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802af4c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802af50:	689b      	ldr	r3, [r3, #8]
 802af52:	1422      	asrs	r2, r4, #16
 802af54:	ea4f 4c26 	mov.w	ip, r6, asr #16
 802af58:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802af5c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802af60:	f100 81d5 	bmi.w	802b30e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802af64:	f103 38ff 	add.w	r8, r3, #4294967295
 802af68:	4542      	cmp	r2, r8
 802af6a:	f280 81d0 	bge.w	802b30e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802af6e:	f1bc 0f00 	cmp.w	ip, #0
 802af72:	f2c0 81cc 	blt.w	802b30e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802af76:	f10e 38ff 	add.w	r8, lr, #4294967295
 802af7a:	45c4      	cmp	ip, r8
 802af7c:	f280 81c7 	bge.w	802b30e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802af80:	b21b      	sxth	r3, r3
 802af82:	fb0c 2203 	mla	r2, ip, r3, r2
 802af86:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802af88:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 802af8c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 802af90:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 802af94:	2900      	cmp	r1, #0
 802af96:	f000 8182 	beq.w	802b29e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 802af9a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802af9e:	950b      	str	r5, [sp, #44]	@ 0x2c
 802afa0:	0e2d      	lsrs	r5, r5, #24
 802afa2:	9512      	str	r5, [sp, #72]	@ 0x48
 802afa4:	b180      	cbz	r0, 802afc8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802afa6:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 802afaa:	3b01      	subs	r3, #1
 802afac:	009b      	lsls	r3, r3, #2
 802afae:	3304      	adds	r3, #4
 802afb0:	eb08 0c03 	add.w	ip, r8, r3
 802afb4:	f858 3003 	ldr.w	r3, [r8, r3]
 802afb8:	9308      	str	r3, [sp, #32]
 802afba:	0e1b      	lsrs	r3, r3, #24
 802afbc:	9310      	str	r3, [sp, #64]	@ 0x40
 802afbe:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802afc2:	930c      	str	r3, [sp, #48]	@ 0x30
 802afc4:	0e1b      	lsrs	r3, r3, #24
 802afc6:	9313      	str	r3, [sp, #76]	@ 0x4c
 802afc8:	b289      	uxth	r1, r1
 802afca:	b280      	uxth	r0, r0
 802afcc:	fb01 f900 	mul.w	r9, r1, r0
 802afd0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802afd4:	0109      	lsls	r1, r1, #4
 802afd6:	eba1 0809 	sub.w	r8, r1, r9
 802afda:	b280      	uxth	r0, r0
 802afdc:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 802afe0:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 802afe2:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802afe4:	fa1f f888 	uxth.w	r8, r8
 802afe8:	1a09      	subs	r1, r1, r0
 802afea:	b289      	uxth	r1, r1
 802afec:	fb08 f303 	mul.w	r3, r8, r3
 802aff0:	fb01 330e 	mla	r3, r1, lr, r3
 802aff4:	fb00 3305 	mla	r3, r0, r5, r3
 802aff8:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802affa:	fb09 3305 	mla	r3, r9, r5, r3
 802affe:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802b002:	2b00      	cmp	r3, #0
 802b004:	f000 80d2 	beq.w	802b1ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802b008:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802b00c:	d01b      	beq.n	802b046 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 802b00e:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 802b012:	fb0e fa0a 	mul.w	sl, lr, sl
 802b016:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802b01a:	fb0e fe02 	mul.w	lr, lr, r2
 802b01e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802b022:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802b026:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802b02a:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 802b02e:	4452      	add	r2, sl
 802b030:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802b034:	0a12      	lsrs	r2, r2, #8
 802b036:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802b03a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802b03e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802b042:	ea42 020c 	orr.w	r2, r2, ip
 802b046:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802b048:	2dff      	cmp	r5, #255	@ 0xff
 802b04a:	d021      	beq.n	802b090 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 802b04c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802b04e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802b052:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802b054:	fb05 fb0b 	mul.w	fp, r5, fp
 802b058:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802b05a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802b05e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802b060:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802b064:	fb05 fa0a 	mul.w	sl, r5, sl
 802b068:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802b06c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802b070:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802b074:	44de      	add	lr, fp
 802b076:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802b07a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802b07e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802b082:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802b086:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802b08a:	ea4e 050a 	orr.w	r5, lr, sl
 802b08e:	950b      	str	r5, [sp, #44]	@ 0x2c
 802b090:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802b092:	2dff      	cmp	r5, #255	@ 0xff
 802b094:	d021      	beq.n	802b0da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 802b096:	9d08      	ldr	r5, [sp, #32]
 802b098:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802b09c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802b09e:	fb05 fb0b 	mul.w	fp, r5, fp
 802b0a2:	9d08      	ldr	r5, [sp, #32]
 802b0a4:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 802b0a8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802b0aa:	fb05 fa0e 	mul.w	sl, r5, lr
 802b0ae:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802b0b2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802b0b6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802b0ba:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802b0be:	44de      	add	lr, fp
 802b0c0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802b0c4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802b0c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802b0cc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802b0d0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802b0d4:	ea4e 050a 	orr.w	r5, lr, sl
 802b0d8:	9508      	str	r5, [sp, #32]
 802b0da:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802b0dc:	2dff      	cmp	r5, #255	@ 0xff
 802b0de:	d021      	beq.n	802b124 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 802b0e0:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802b0e2:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802b0e6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802b0e8:	fb05 fb0b 	mul.w	fp, r5, fp
 802b0ec:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802b0ee:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802b0f2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802b0f4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802b0f8:	fb05 fa0a 	mul.w	sl, r5, sl
 802b0fc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802b100:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802b104:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802b108:	44de      	add	lr, fp
 802b10a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802b10e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802b112:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802b116:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802b11a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802b11e:	ea4e 050a 	orr.w	r5, lr, sl
 802b122:	950c      	str	r5, [sp, #48]	@ 0x30
 802b124:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802b126:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802b12a:	9d08      	ldr	r5, [sp, #32]
 802b12c:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 802b130:	fb08 fc0c 	mul.w	ip, r8, ip
 802b134:	fb01 cc0e 	mla	ip, r1, lr, ip
 802b138:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 802b13c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802b13e:	fb00 cc0e 	mla	ip, r0, lr, ip
 802b142:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 802b146:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802b148:	fb09 cc0e 	mla	ip, r9, lr, ip
 802b14c:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 802b150:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802b154:	fb08 f80e 	mul.w	r8, r8, lr
 802b158:	fb01 8202 	mla	r2, r1, r2, r8
 802b15c:	9908      	ldr	r1, [sp, #32]
 802b15e:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 802b162:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802b164:	fb00 220a 	mla	r2, r0, sl, r2
 802b168:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 802b16c:	fb09 2900 	mla	r9, r9, r0, r2
 802b170:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802b174:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802b178:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802b17c:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 802b180:	ea4c 0c09 	orr.w	ip, ip, r9
 802b184:	2bff      	cmp	r3, #255	@ 0xff
 802b186:	ea4f 221c 	mov.w	r2, ip, lsr #8
 802b18a:	f040 8091 	bne.w	802b2b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802b18e:	ea4f 135c 	mov.w	r3, ip, lsr #5
 802b192:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 802b196:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802b19a:	f022 0207 	bic.w	r2, r2, #7
 802b19e:	431a      	orrs	r2, r3
 802b1a0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 802b1a4:	ea4c 0c02 	orr.w	ip, ip, r2
 802b1a8:	f8a7 c000 	strh.w	ip, [r7]
 802b1ac:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802b1ae:	441c      	add	r4, r3
 802b1b0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802b1b2:	441e      	add	r6, r3
 802b1b4:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802b1b6:	3b01      	subs	r3, #1
 802b1b8:	3702      	adds	r7, #2
 802b1ba:	9317      	str	r3, [sp, #92]	@ 0x5c
 802b1bc:	e6c0      	b.n	802af40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802b1be:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802b1c0:	441c      	add	r4, r3
 802b1c2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802b1c4:	441e      	add	r6, r3
 802b1c6:	9b07      	ldr	r3, [sp, #28]
 802b1c8:	3b01      	subs	r3, #1
 802b1ca:	9307      	str	r3, [sp, #28]
 802b1cc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802b1ce:	3302      	adds	r3, #2
 802b1d0:	930a      	str	r3, [sp, #40]	@ 0x28
 802b1d2:	e695      	b.n	802af00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802b1d4:	d024      	beq.n	802b220 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 802b1d6:	9b07      	ldr	r3, [sp, #28]
 802b1d8:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 802b1da:	3b01      	subs	r3, #1
 802b1dc:	fb00 4003 	mla	r0, r0, r3, r4
 802b1e0:	1400      	asrs	r0, r0, #16
 802b1e2:	f53f aeaa 	bmi.w	802af3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802b1e6:	3901      	subs	r1, #1
 802b1e8:	4288      	cmp	r0, r1
 802b1ea:	f6bf aea6 	bge.w	802af3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802b1ee:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 802b1f0:	fb01 6303 	mla	r3, r1, r3, r6
 802b1f4:	141b      	asrs	r3, r3, #16
 802b1f6:	f53f aea0 	bmi.w	802af3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802b1fa:	3a01      	subs	r2, #1
 802b1fc:	4293      	cmp	r3, r2
 802b1fe:	f6bf ae9c 	bge.w	802af3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802b202:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802b206:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 802b20a:	f1bb 0f00 	cmp.w	fp, #0
 802b20e:	f300 809a 	bgt.w	802b346 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802b212:	9b07      	ldr	r3, [sp, #28]
 802b214:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802b218:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802b21a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802b21e:	930a      	str	r3, [sp, #40]	@ 0x28
 802b220:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802b222:	2b00      	cmp	r3, #0
 802b224:	f340 81eb 	ble.w	802b5fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802b228:	ee30 0a04 	vadd.f32	s0, s0, s8
 802b22c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802b230:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802b234:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802b236:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802b23a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802b23e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802b242:	eef0 6a62 	vmov.f32	s13, s5
 802b246:	ee61 7a27 	vmul.f32	s15, s2, s15
 802b24a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802b24e:	ee77 2a62 	vsub.f32	s5, s14, s5
 802b252:	ee16 4a90 	vmov	r4, s13
 802b256:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802b25a:	eef0 6a43 	vmov.f32	s13, s6
 802b25e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802b262:	ee12 2a90 	vmov	r2, s5
 802b266:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802b26a:	fb92 f3f3 	sdiv	r3, r2, r3
 802b26e:	ee13 2a10 	vmov	r2, s6
 802b272:	9327      	str	r3, [sp, #156]	@ 0x9c
 802b274:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802b276:	fb92 f3f3 	sdiv	r3, r2, r3
 802b27a:	9328      	str	r3, [sp, #160]	@ 0xa0
 802b27c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802b27e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 802b280:	3b01      	subs	r3, #1
 802b282:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802b286:	9316      	str	r3, [sp, #88]	@ 0x58
 802b288:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802b28a:	bf08      	it	eq
 802b28c:	4613      	moveq	r3, r2
 802b28e:	ee16 6a90 	vmov	r6, s13
 802b292:	9307      	str	r3, [sp, #28]
 802b294:	eeb0 3a67 	vmov.f32	s6, s15
 802b298:	eef0 2a47 	vmov.f32	s5, s14
 802b29c:	e622      	b.n	802aee4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 802b29e:	2800      	cmp	r0, #0
 802b2a0:	f43f ae92 	beq.w	802afc8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802b2a4:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 802b2a8:	9308      	str	r3, [sp, #32]
 802b2aa:	0e1b      	lsrs	r3, r3, #24
 802b2ac:	9310      	str	r3, [sp, #64]	@ 0x40
 802b2ae:	e68b      	b.n	802afc8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802b2b0:	8839      	ldrh	r1, [r7, #0]
 802b2b2:	4dd4      	ldr	r5, [pc, #848]	@ (802b604 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802b2b4:	43db      	mvns	r3, r3
 802b2b6:	ea4f 2e21 	mov.w	lr, r1, asr #8
 802b2ba:	fa5f f883 	uxtb.w	r8, r3
 802b2be:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 802b2c2:	fb0e fe08 	mul.w	lr, lr, r8
 802b2c6:	10c8      	asrs	r0, r1, #3
 802b2c8:	00cb      	lsls	r3, r1, #3
 802b2ca:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802b2ce:	f10e 0101 	add.w	r1, lr, #1
 802b2d2:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802b2d6:	fb00 f008 	mul.w	r0, r0, r8
 802b2da:	ea4f 411c 	mov.w	r1, ip, lsr #16
 802b2de:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802b2e2:	f100 0e01 	add.w	lr, r0, #1
 802b2e6:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 802b2ea:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802b2ee:	b2db      	uxtb	r3, r3
 802b2f0:	b2c9      	uxtb	r1, r1
 802b2f2:	00d2      	lsls	r2, r2, #3
 802b2f4:	fb03 f308 	mul.w	r3, r3, r8
 802b2f8:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 802b2fc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802b300:	430a      	orrs	r2, r1
 802b302:	1c59      	adds	r1, r3, #1
 802b304:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802b308:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 802b30c:	e748      	b.n	802b1a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802b30e:	f112 0801 	adds.w	r8, r2, #1
 802b312:	f53f af4b 	bmi.w	802b1ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802b316:	4543      	cmp	r3, r8
 802b318:	f6ff af48 	blt.w	802b1ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802b31c:	f11c 0801 	adds.w	r8, ip, #1
 802b320:	f53f af44 	bmi.w	802b1ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802b324:	45c6      	cmp	lr, r8
 802b326:	f6ff af41 	blt.w	802b1ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802b32a:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802b32e:	fa0f f28e 	sxth.w	r2, lr
 802b332:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802b336:	9200      	str	r2, [sp, #0]
 802b338:	b21b      	sxth	r3, r3
 802b33a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802b33c:	9819      	ldr	r0, [sp, #100]	@ 0x64
 802b33e:	4639      	mov	r1, r7
 802b340:	f7ff fc87 	bl	802ac52 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 802b344:	e732      	b.n	802b1ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802b346:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802b348:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802b34a:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802b34e:	1421      	asrs	r1, r4, #16
 802b350:	1433      	asrs	r3, r6, #16
 802b352:	fb07 1303 	mla	r3, r7, r3, r1
 802b356:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 802b358:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 802b35c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802b360:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802b364:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802b368:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802b36c:	2a00      	cmp	r2, #0
 802b36e:	f000 8107 	beq.w	802b580 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 802b372:	684d      	ldr	r5, [r1, #4]
 802b374:	950d      	str	r5, [sp, #52]	@ 0x34
 802b376:	0e2d      	lsrs	r5, r5, #24
 802b378:	9514      	str	r5, [sp, #80]	@ 0x50
 802b37a:	b178      	cbz	r0, 802b39c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802b37c:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 802b380:	3f01      	subs	r7, #1
 802b382:	00bf      	lsls	r7, r7, #2
 802b384:	3704      	adds	r7, #4
 802b386:	eb01 0e07 	add.w	lr, r1, r7
 802b38a:	59c9      	ldr	r1, [r1, r7]
 802b38c:	9109      	str	r1, [sp, #36]	@ 0x24
 802b38e:	0e09      	lsrs	r1, r1, #24
 802b390:	9111      	str	r1, [sp, #68]	@ 0x44
 802b392:	f8de 1004 	ldr.w	r1, [lr, #4]
 802b396:	910e      	str	r1, [sp, #56]	@ 0x38
 802b398:	0e09      	lsrs	r1, r1, #24
 802b39a:	9115      	str	r1, [sp, #84]	@ 0x54
 802b39c:	b292      	uxth	r2, r2
 802b39e:	b280      	uxth	r0, r0
 802b3a0:	fb02 f900 	mul.w	r9, r2, r0
 802b3a4:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802b3a8:	0112      	lsls	r2, r2, #4
 802b3aa:	eba2 0e09 	sub.w	lr, r2, r9
 802b3ae:	b280      	uxth	r0, r0
 802b3b0:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 802b3b4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802b3b6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802b3b8:	fa1f fe8e 	uxth.w	lr, lr
 802b3bc:	1a09      	subs	r1, r1, r0
 802b3be:	b289      	uxth	r1, r1
 802b3c0:	fb0e f202 	mul.w	r2, lr, r2
 802b3c4:	fb01 220c 	mla	r2, r1, ip, r2
 802b3c8:	fb00 2205 	mla	r2, r0, r5, r2
 802b3cc:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802b3ce:	fb09 2205 	mla	r2, r9, r5, r2
 802b3d2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802b3d6:	2a00      	cmp	r2, #0
 802b3d8:	f000 80c9 	beq.w	802b56e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802b3dc:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802b3e0:	d019      	beq.n	802b416 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802b3e2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 802b3e6:	fb0c fa0a 	mul.w	sl, ip, sl
 802b3ea:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802b3ee:	fb0c fc03 	mul.w	ip, ip, r3
 802b3f2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802b3f6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802b3fa:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802b3fe:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 802b402:	4453      	add	r3, sl
 802b404:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802b408:	0a1b      	lsrs	r3, r3, #8
 802b40a:	0a3f      	lsrs	r7, r7, #8
 802b40c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802b410:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802b414:	433b      	orrs	r3, r7
 802b416:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802b418:	2dff      	cmp	r5, #255	@ 0xff
 802b41a:	d020      	beq.n	802b45e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 802b41c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802b41e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802b422:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802b424:	436f      	muls	r7, r5
 802b426:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802b428:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802b42c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802b42e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802b432:	fb05 fa0a 	mul.w	sl, r5, sl
 802b436:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802b43a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802b43e:	44bc      	add	ip, r7
 802b440:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802b444:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802b448:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802b44c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802b450:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802b454:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802b458:	ea4c 050a 	orr.w	r5, ip, sl
 802b45c:	950d      	str	r5, [sp, #52]	@ 0x34
 802b45e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802b460:	2dff      	cmp	r5, #255	@ 0xff
 802b462:	d020      	beq.n	802b4a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 802b464:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802b466:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802b46a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802b46c:	436f      	muls	r7, r5
 802b46e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802b470:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 802b474:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802b476:	fb05 fa0c 	mul.w	sl, r5, ip
 802b47a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802b47e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802b482:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802b486:	44bc      	add	ip, r7
 802b488:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802b48c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802b490:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802b494:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802b498:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802b49c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802b4a0:	ea4c 050a 	orr.w	r5, ip, sl
 802b4a4:	9509      	str	r5, [sp, #36]	@ 0x24
 802b4a6:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802b4a8:	2dff      	cmp	r5, #255	@ 0xff
 802b4aa:	d020      	beq.n	802b4ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 802b4ac:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802b4ae:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802b4b2:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802b4b4:	436f      	muls	r7, r5
 802b4b6:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802b4b8:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802b4bc:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802b4be:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802b4c2:	fb05 fa0a 	mul.w	sl, r5, sl
 802b4c6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802b4ca:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802b4ce:	44bc      	add	ip, r7
 802b4d0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802b4d4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802b4d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802b4dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802b4e0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802b4e4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802b4e8:	ea4c 050a 	orr.w	r5, ip, sl
 802b4ec:	950e      	str	r5, [sp, #56]	@ 0x38
 802b4ee:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802b4f0:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802b4f4:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802b4f6:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 802b4fa:	fb0e f707 	mul.w	r7, lr, r7
 802b4fe:	fb01 770c 	mla	r7, r1, ip, r7
 802b502:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802b506:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802b508:	fb00 770c 	mla	r7, r0, ip, r7
 802b50c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802b510:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802b512:	fb09 770c 	mla	r7, r9, ip, r7
 802b516:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 802b51a:	fb0e fe0c 	mul.w	lr, lr, ip
 802b51e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802b522:	fb01 e303 	mla	r3, r1, r3, lr
 802b526:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802b528:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 802b52c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802b52e:	fb00 330a 	mla	r3, r0, sl, r3
 802b532:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 802b536:	fb09 3c0c 	mla	ip, r9, ip, r3
 802b53a:	0a3f      	lsrs	r7, r7, #8
 802b53c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802b540:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802b544:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802b548:	ea47 070c 	orr.w	r7, r7, ip
 802b54c:	2aff      	cmp	r2, #255	@ 0xff
 802b54e:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802b552:	d11e      	bne.n	802b592 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 802b554:	097a      	lsrs	r2, r7, #5
 802b556:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 802b55a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802b55e:	f023 0307 	bic.w	r3, r3, #7
 802b562:	4313      	orrs	r3, r2
 802b564:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 802b568:	431f      	orrs	r7, r3
 802b56a:	f8a8 7000 	strh.w	r7, [r8]
 802b56e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802b570:	441c      	add	r4, r3
 802b572:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802b574:	f108 0802 	add.w	r8, r8, #2
 802b578:	441e      	add	r6, r3
 802b57a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802b57e:	e644      	b.n	802b20a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 802b580:	2800      	cmp	r0, #0
 802b582:	f43f af0b 	beq.w	802b39c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802b586:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802b58a:	9109      	str	r1, [sp, #36]	@ 0x24
 802b58c:	0e09      	lsrs	r1, r1, #24
 802b58e:	9111      	str	r1, [sp, #68]	@ 0x44
 802b590:	e704      	b.n	802b39c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802b592:	f8b8 1000 	ldrh.w	r1, [r8]
 802b596:	43d2      	mvns	r2, r2
 802b598:	ea4f 2c21 	mov.w	ip, r1, asr #8
 802b59c:	fa5f fe82 	uxtb.w	lr, r2
 802b5a0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 802b5a4:	fb0c fc0e 	mul.w	ip, ip, lr
 802b5a8:	10c8      	asrs	r0, r1, #3
 802b5aa:	00ca      	lsls	r2, r1, #3
 802b5ac:	f10c 0101 	add.w	r1, ip, #1
 802b5b0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802b5b4:	0c39      	lsrs	r1, r7, #16
 802b5b6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802b5ba:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802b5be:	4911      	ldr	r1, [pc, #68]	@ (802b604 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802b5c0:	fb00 f00e 	mul.w	r0, r0, lr
 802b5c4:	fa5f fc8c 	uxtb.w	ip, ip
 802b5c8:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 802b5cc:	b2d2      	uxtb	r2, r2
 802b5ce:	1c41      	adds	r1, r0, #1
 802b5d0:	fb02 f20e 	mul.w	r2, r2, lr
 802b5d4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802b5d8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802b5dc:	1c51      	adds	r1, r2, #1
 802b5de:	00c0      	lsls	r0, r0, #3
 802b5e0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802b5e4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802b5e8:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 802b5ec:	ea4c 0c00 	orr.w	ip, ip, r0
 802b5f0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 802b5f4:	ea47 0c0c 	orr.w	ip, r7, ip
 802b5f8:	f8a8 c000 	strh.w	ip, [r8]
 802b5fc:	e7b7      	b.n	802b56e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802b5fe:	b01b      	add	sp, #108	@ 0x6c
 802b600:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b604:	fffff800 	.word	0xfffff800

0802b608 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 802b608:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802b60c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 802b610:	2d00      	cmp	r5, #0
 802b612:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802b616:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 802b61a:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 802b61e:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 802b622:	fb05 0e03 	mla	lr, r5, r3, r0
 802b626:	f2c0 808c 	blt.w	802b742 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802b62a:	45a9      	cmp	r9, r5
 802b62c:	f340 8089 	ble.w	802b742 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802b630:	2800      	cmp	r0, #0
 802b632:	f2c0 8084 	blt.w	802b73e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802b636:	4580      	cmp	r8, r0
 802b638:	f340 8081 	ble.w	802b73e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802b63c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802b640:	f01e 0f01 	tst.w	lr, #1
 802b644:	5d16      	ldrb	r6, [r2, r4]
 802b646:	bf0c      	ite	eq
 802b648:	f006 060f 	andeq.w	r6, r6, #15
 802b64c:	1136      	asrne	r6, r6, #4
 802b64e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802b652:	b2f6      	uxtb	r6, r6
 802b654:	1c44      	adds	r4, r0, #1
 802b656:	d477      	bmi.n	802b748 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 802b658:	45a0      	cmp	r8, r4
 802b65a:	dd75      	ble.n	802b748 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 802b65c:	2f00      	cmp	r7, #0
 802b65e:	d075      	beq.n	802b74c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 802b660:	f10e 0a01 	add.w	sl, lr, #1
 802b664:	ea4f 045a 	mov.w	r4, sl, lsr #1
 802b668:	f01a 0f01 	tst.w	sl, #1
 802b66c:	5d14      	ldrb	r4, [r2, r4]
 802b66e:	bf0c      	ite	eq
 802b670:	f004 040f 	andeq.w	r4, r4, #15
 802b674:	1124      	asrne	r4, r4, #4
 802b676:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 802b67a:	b2e4      	uxtb	r4, r4
 802b67c:	3501      	adds	r5, #1
 802b67e:	d469      	bmi.n	802b754 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802b680:	45a9      	cmp	r9, r5
 802b682:	dd67      	ble.n	802b754 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802b684:	f1bc 0f00 	cmp.w	ip, #0
 802b688:	d067      	beq.n	802b75a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 802b68a:	2800      	cmp	r0, #0
 802b68c:	db60      	blt.n	802b750 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802b68e:	4580      	cmp	r8, r0
 802b690:	dd5e      	ble.n	802b750 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802b692:	eb03 090e 	add.w	r9, r3, lr
 802b696:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802b69a:	f019 0f01 	tst.w	r9, #1
 802b69e:	5d55      	ldrb	r5, [r2, r5]
 802b6a0:	bf0c      	ite	eq
 802b6a2:	f005 050f 	andeq.w	r5, r5, #15
 802b6a6:	112d      	asrne	r5, r5, #4
 802b6a8:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802b6ac:	b2ed      	uxtb	r5, r5
 802b6ae:	3001      	adds	r0, #1
 802b6b0:	d456      	bmi.n	802b760 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802b6b2:	4580      	cmp	r8, r0
 802b6b4:	dd54      	ble.n	802b760 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802b6b6:	2f00      	cmp	r7, #0
 802b6b8:	d054      	beq.n	802b764 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 802b6ba:	3301      	adds	r3, #1
 802b6bc:	449e      	add	lr, r3
 802b6be:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802b6c2:	f01e 0f01 	tst.w	lr, #1
 802b6c6:	5cd0      	ldrb	r0, [r2, r3]
 802b6c8:	bf0c      	ite	eq
 802b6ca:	f000 000f 	andeq.w	r0, r0, #15
 802b6ce:	1100      	asrne	r0, r0, #4
 802b6d0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802b6d4:	b2c3      	uxtb	r3, r0
 802b6d6:	b2ba      	uxth	r2, r7
 802b6d8:	fa1f fc8c 	uxth.w	ip, ip
 802b6dc:	fb02 f00c 	mul.w	r0, r2, ip
 802b6e0:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802b6e4:	0112      	lsls	r2, r2, #4
 802b6e6:	fa1f fc8c 	uxth.w	ip, ip
 802b6ea:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 802b6ee:	1a12      	subs	r2, r2, r0
 802b6f0:	eba7 070c 	sub.w	r7, r7, ip
 802b6f4:	b292      	uxth	r2, r2
 802b6f6:	b2bf      	uxth	r7, r7
 802b6f8:	4362      	muls	r2, r4
 802b6fa:	fb06 2207 	mla	r2, r6, r7, r2
 802b6fe:	fb0c 2505 	mla	r5, ip, r5, r2
 802b702:	fb00 5303 	mla	r3, r0, r3, r5
 802b706:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802b70a:	b1b3      	cbz	r3, 802b73a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802b70c:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 802b710:	435a      	muls	r2, r3
 802b712:	1c53      	adds	r3, r2, #1
 802b714:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802b718:	4a2d      	ldr	r2, [pc, #180]	@ (802b7d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 802b71a:	121b      	asrs	r3, r3, #8
 802b71c:	6812      	ldr	r2, [r2, #0]
 802b71e:	2bff      	cmp	r3, #255	@ 0xff
 802b720:	ea4f 2612 	mov.w	r6, r2, lsr #8
 802b724:	d120      	bne.n	802b768 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 802b726:	4b2b      	ldr	r3, [pc, #172]	@ (802b7d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 802b728:	0950      	lsrs	r0, r2, #5
 802b72a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802b72e:	4033      	ands	r3, r6
 802b730:	4318      	orrs	r0, r3
 802b732:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802b736:	4302      	orrs	r2, r0
 802b738:	800a      	strh	r2, [r1, #0]
 802b73a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b73e:	2600      	movs	r6, #0
 802b740:	e788      	b.n	802b654 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802b742:	2400      	movs	r4, #0
 802b744:	4626      	mov	r6, r4
 802b746:	e799      	b.n	802b67c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802b748:	2400      	movs	r4, #0
 802b74a:	e797      	b.n	802b67c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802b74c:	463c      	mov	r4, r7
 802b74e:	e795      	b.n	802b67c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802b750:	2500      	movs	r5, #0
 802b752:	e7ac      	b.n	802b6ae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 802b754:	2300      	movs	r3, #0
 802b756:	461d      	mov	r5, r3
 802b758:	e7bd      	b.n	802b6d6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802b75a:	4663      	mov	r3, ip
 802b75c:	4665      	mov	r5, ip
 802b75e:	e7ba      	b.n	802b6d6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802b760:	2300      	movs	r3, #0
 802b762:	e7b8      	b.n	802b6d6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802b764:	463b      	mov	r3, r7
 802b766:	e7b6      	b.n	802b6d6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802b768:	880d      	ldrh	r5, [r1, #0]
 802b76a:	b29f      	uxth	r7, r3
 802b76c:	122c      	asrs	r4, r5, #8
 802b76e:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802b772:	43db      	mvns	r3, r3
 802b774:	b2db      	uxtb	r3, r3
 802b776:	fb10 f007 	smulbb	r0, r0, r7
 802b77a:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802b77e:	fb04 0403 	mla	r4, r4, r3, r0
 802b782:	b2f6      	uxtb	r6, r6
 802b784:	10e8      	asrs	r0, r5, #3
 802b786:	b2d2      	uxtb	r2, r2
 802b788:	00ed      	lsls	r5, r5, #3
 802b78a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802b78e:	fb12 f207 	smulbb	r2, r2, r7
 802b792:	fb16 f607 	smulbb	r6, r6, r7
 802b796:	b2ed      	uxtb	r5, r5
 802b798:	b2a4      	uxth	r4, r4
 802b79a:	fb00 6603 	mla	r6, r0, r3, r6
 802b79e:	fb05 2303 	mla	r3, r5, r3, r2
 802b7a2:	b29a      	uxth	r2, r3
 802b7a4:	1c63      	adds	r3, r4, #1
 802b7a6:	b2b0      	uxth	r0, r6
 802b7a8:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802b7ac:	1c53      	adds	r3, r2, #1
 802b7ae:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802b7b2:	1c42      	adds	r2, r0, #1
 802b7b4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802b7b8:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 802b7bc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802b7c0:	0940      	lsrs	r0, r0, #5
 802b7c2:	4323      	orrs	r3, r4
 802b7c4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802b7c8:	4303      	orrs	r3, r0
 802b7ca:	800b      	strh	r3, [r1, #0]
 802b7cc:	e7b5      	b.n	802b73a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802b7ce:	bf00      	nop
 802b7d0:	2000e41c 	.word	0x2000e41c
 802b7d4:	00fff800 	.word	0x00fff800

0802b7d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802b7d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b7dc:	b097      	sub	sp, #92	@ 0x5c
 802b7de:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 802b7e2:	9214      	str	r2, [sp, #80]	@ 0x50
 802b7e4:	9309      	str	r3, [sp, #36]	@ 0x24
 802b7e6:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 802b7e8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 802b7ec:	910d      	str	r1, [sp, #52]	@ 0x34
 802b7ee:	930f      	str	r3, [sp, #60]	@ 0x3c
 802b7f0:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 802b7f4:	9015      	str	r0, [sp, #84]	@ 0x54
 802b7f6:	6850      	ldr	r0, [r2, #4]
 802b7f8:	6812      	ldr	r2, [r2, #0]
 802b7fa:	fb00 1303 	mla	r3, r0, r3, r1
 802b7fe:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802b802:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802b804:	689b      	ldr	r3, [r3, #8]
 802b806:	3301      	adds	r3, #1
 802b808:	f023 0301 	bic.w	r3, r3, #1
 802b80c:	930a      	str	r3, [sp, #40]	@ 0x28
 802b80e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802b810:	681f      	ldr	r7, [r3, #0]
 802b812:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802b814:	2b00      	cmp	r3, #0
 802b816:	dc03      	bgt.n	802b820 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802b818:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 802b81a:	2b00      	cmp	r3, #0
 802b81c:	f340 8287 	ble.w	802bd2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 802b820:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802b822:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802b826:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802b82a:	1e48      	subs	r0, r1, #1
 802b82c:	f102 3cff 	add.w	ip, r2, #4294967295
 802b830:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802b832:	2b00      	cmp	r3, #0
 802b834:	f340 80c4 	ble.w	802b9c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 802b838:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802b83c:	ea4f 4326 	mov.w	r3, r6, asr #16
 802b840:	d406      	bmi.n	802b850 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802b842:	4586      	cmp	lr, r0
 802b844:	da04      	bge.n	802b850 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802b846:	2b00      	cmp	r3, #0
 802b848:	db02      	blt.n	802b850 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802b84a:	4563      	cmp	r3, ip
 802b84c:	f2c0 80b9 	blt.w	802b9c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802b850:	f11e 0e01 	adds.w	lr, lr, #1
 802b854:	f100 80aa 	bmi.w	802b9ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802b858:	4571      	cmp	r1, lr
 802b85a:	f2c0 80a7 	blt.w	802b9ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802b85e:	3301      	adds	r3, #1
 802b860:	f100 80a4 	bmi.w	802b9ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802b864:	429a      	cmp	r2, r3
 802b866:	f2c0 80a1 	blt.w	802b9ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802b86a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802b86c:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 802b870:	930e      	str	r3, [sp, #56]	@ 0x38
 802b872:	46c8      	mov	r8, r9
 802b874:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802b876:	2b00      	cmp	r3, #0
 802b878:	f340 80c3 	ble.w	802ba02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 802b87c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802b87e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802b882:	1423      	asrs	r3, r4, #16
 802b884:	ea4f 4026 	mov.w	r0, r6, asr #16
 802b888:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802b88c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802b890:	f100 814d 	bmi.w	802bb2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802b894:	f10c 3bff 	add.w	fp, ip, #4294967295
 802b898:	455b      	cmp	r3, fp
 802b89a:	f280 8148 	bge.w	802bb2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802b89e:	2800      	cmp	r0, #0
 802b8a0:	f2c0 8145 	blt.w	802bb2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802b8a4:	f10e 3bff 	add.w	fp, lr, #4294967295
 802b8a8:	4558      	cmp	r0, fp
 802b8aa:	f280 8140 	bge.w	802bb2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802b8ae:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802b8b0:	fb00 3305 	mla	r3, r0, r5, r3
 802b8b4:	0858      	lsrs	r0, r3, #1
 802b8b6:	07dd      	lsls	r5, r3, #31
 802b8b8:	f817 c000 	ldrb.w	ip, [r7, r0]
 802b8bc:	bf54      	ite	pl
 802b8be:	f00c 0c0f 	andpl.w	ip, ip, #15
 802b8c2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802b8c6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802b8ca:	fa5f fc8c 	uxtb.w	ip, ip
 802b8ce:	2a00      	cmp	r2, #0
 802b8d0:	f000 80db 	beq.w	802ba8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 802b8d4:	1c58      	adds	r0, r3, #1
 802b8d6:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 802b8da:	07c0      	lsls	r0, r0, #31
 802b8dc:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802b8e0:	bf54      	ite	pl
 802b8e2:	f00e 0e0f 	andpl.w	lr, lr, #15
 802b8e6:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802b8ea:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802b8ee:	fa5f f08e 	uxtb.w	r0, lr
 802b8f2:	9010      	str	r0, [sp, #64]	@ 0x40
 802b8f4:	b1c9      	cbz	r1, 802b92a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802b8f6:	4453      	add	r3, sl
 802b8f8:	0858      	lsrs	r0, r3, #1
 802b8fa:	07dd      	lsls	r5, r3, #31
 802b8fc:	5c38      	ldrb	r0, [r7, r0]
 802b8fe:	bf54      	ite	pl
 802b900:	f000 000f 	andpl.w	r0, r0, #15
 802b904:	1100      	asrmi	r0, r0, #4
 802b906:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802b90a:	3301      	adds	r3, #1
 802b90c:	b2c0      	uxtb	r0, r0
 802b90e:	900b      	str	r0, [sp, #44]	@ 0x2c
 802b910:	0858      	lsrs	r0, r3, #1
 802b912:	07dd      	lsls	r5, r3, #31
 802b914:	f817 e000 	ldrb.w	lr, [r7, r0]
 802b918:	bf54      	ite	pl
 802b91a:	f00e 030f 	andpl.w	r3, lr, #15
 802b91e:	ea4f 132e 	movmi.w	r3, lr, asr #4
 802b922:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802b926:	b2db      	uxtb	r3, r3
 802b928:	9311      	str	r3, [sp, #68]	@ 0x44
 802b92a:	b292      	uxth	r2, r2
 802b92c:	b289      	uxth	r1, r1
 802b92e:	fb02 f301 	mul.w	r3, r2, r1
 802b932:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 802b936:	0112      	lsls	r2, r2, #4
 802b938:	b289      	uxth	r1, r1
 802b93a:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 802b93e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802b940:	1ad2      	subs	r2, r2, r3
 802b942:	1a40      	subs	r0, r0, r1
 802b944:	b292      	uxth	r2, r2
 802b946:	436a      	muls	r2, r5
 802b948:	b280      	uxth	r0, r0
 802b94a:	fb0c 2c00 	mla	ip, ip, r0, r2
 802b94e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802b950:	fb01 c102 	mla	r1, r1, r2, ip
 802b954:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802b956:	fb03 1302 	mla	r3, r3, r2, r1
 802b95a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802b95e:	b1db      	cbz	r3, 802b998 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802b960:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802b962:	4353      	muls	r3, r2
 802b964:	1c5a      	adds	r2, r3, #1
 802b966:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802b96a:	4ac6      	ldr	r2, [pc, #792]	@ (802bc84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 802b96c:	121b      	asrs	r3, r3, #8
 802b96e:	6812      	ldr	r2, [r2, #0]
 802b970:	2bff      	cmp	r3, #255	@ 0xff
 802b972:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802b976:	f040 8099 	bne.w	802baac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 802b97a:	0953      	lsrs	r3, r2, #5
 802b97c:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 802b980:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802b984:	f02c 0c07 	bic.w	ip, ip, #7
 802b988:	ea43 0c0c 	orr.w	ip, r3, ip
 802b98c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802b990:	ea4c 0202 	orr.w	r2, ip, r2
 802b994:	f8a8 2000 	strh.w	r2, [r8]
 802b998:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802b99a:	441c      	add	r4, r3
 802b99c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802b99e:	441e      	add	r6, r3
 802b9a0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802b9a2:	3b01      	subs	r3, #1
 802b9a4:	f108 0802 	add.w	r8, r8, #2
 802b9a8:	930e      	str	r3, [sp, #56]	@ 0x38
 802b9aa:	e763      	b.n	802b874 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802b9ac:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802b9ae:	441c      	add	r4, r3
 802b9b0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802b9b2:	441e      	add	r6, r3
 802b9b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802b9b6:	3b01      	subs	r3, #1
 802b9b8:	9309      	str	r3, [sp, #36]	@ 0x24
 802b9ba:	f109 0902 	add.w	r9, r9, #2
 802b9be:	e737      	b.n	802b830 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802b9c0:	d024      	beq.n	802ba0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802b9c2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802b9c4:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 802b9c6:	3b01      	subs	r3, #1
 802b9c8:	fb00 4003 	mla	r0, r0, r3, r4
 802b9cc:	1400      	asrs	r0, r0, #16
 802b9ce:	f53f af4c 	bmi.w	802b86a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802b9d2:	3901      	subs	r1, #1
 802b9d4:	4288      	cmp	r0, r1
 802b9d6:	f6bf af48 	bge.w	802b86a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802b9da:	9924      	ldr	r1, [sp, #144]	@ 0x90
 802b9dc:	fb01 6303 	mla	r3, r1, r3, r6
 802b9e0:	141b      	asrs	r3, r3, #16
 802b9e2:	f53f af42 	bmi.w	802b86a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802b9e6:	3a01      	subs	r2, #1
 802b9e8:	4293      	cmp	r3, r2
 802b9ea:	f6bf af3e 	bge.w	802b86a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802b9ee:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 802b9f2:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 802b9f6:	930e      	str	r3, [sp, #56]	@ 0x38
 802b9f8:	46c8      	mov	r8, r9
 802b9fa:	f1bb 0f00 	cmp.w	fp, #0
 802b9fe:	f300 80b7 	bgt.w	802bb70 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 802ba02:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802ba04:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802ba08:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802ba0c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802ba0e:	2b00      	cmp	r3, #0
 802ba10:	f340 818d 	ble.w	802bd2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 802ba14:	ee30 0a04 	vadd.f32	s0, s0, s8
 802ba18:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802ba1c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802ba20:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802ba22:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802ba26:	ee31 1a05 	vadd.f32	s2, s2, s10
 802ba2a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802ba2e:	eef0 6a62 	vmov.f32	s13, s5
 802ba32:	ee61 7a27 	vmul.f32	s15, s2, s15
 802ba36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802ba3a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802ba3e:	ee16 4a90 	vmov	r4, s13
 802ba42:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802ba46:	eef0 6a43 	vmov.f32	s13, s6
 802ba4a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802ba4e:	ee12 2a90 	vmov	r2, s5
 802ba52:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802ba56:	fb92 f3f3 	sdiv	r3, r2, r3
 802ba5a:	ee13 2a10 	vmov	r2, s6
 802ba5e:	9323      	str	r3, [sp, #140]	@ 0x8c
 802ba60:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802ba62:	fb92 f3f3 	sdiv	r3, r2, r3
 802ba66:	9324      	str	r3, [sp, #144]	@ 0x90
 802ba68:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802ba6a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802ba6c:	3b01      	subs	r3, #1
 802ba6e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802ba72:	930d      	str	r3, [sp, #52]	@ 0x34
 802ba74:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802ba76:	bf08      	it	eq
 802ba78:	4613      	moveq	r3, r2
 802ba7a:	ee16 6a90 	vmov	r6, s13
 802ba7e:	9309      	str	r3, [sp, #36]	@ 0x24
 802ba80:	eeb0 3a67 	vmov.f32	s6, s15
 802ba84:	eef0 2a47 	vmov.f32	s5, s14
 802ba88:	e6c3      	b.n	802b812 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802ba8a:	2900      	cmp	r1, #0
 802ba8c:	f43f af4d 	beq.w	802b92a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802ba90:	eb0a 0003 	add.w	r0, sl, r3
 802ba94:	0843      	lsrs	r3, r0, #1
 802ba96:	07c0      	lsls	r0, r0, #31
 802ba98:	5cfb      	ldrb	r3, [r7, r3]
 802ba9a:	bf54      	ite	pl
 802ba9c:	f003 030f 	andpl.w	r3, r3, #15
 802baa0:	111b      	asrmi	r3, r3, #4
 802baa2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802baa6:	b2db      	uxtb	r3, r3
 802baa8:	930b      	str	r3, [sp, #44]	@ 0x2c
 802baaa:	e73e      	b.n	802b92a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802baac:	f8b8 e000 	ldrh.w	lr, [r8]
 802bab0:	fa1f fb83 	uxth.w	fp, r3
 802bab4:	ea4f 202e 	mov.w	r0, lr, asr #8
 802bab8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802babc:	43db      	mvns	r3, r3
 802babe:	b2db      	uxtb	r3, r3
 802bac0:	fb11 f10b 	smulbb	r1, r1, fp
 802bac4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802bac8:	fb00 1003 	mla	r0, r0, r3, r1
 802bacc:	fa5f fc8c 	uxtb.w	ip, ip
 802bad0:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802bad4:	b2d2      	uxtb	r2, r2
 802bad6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802bada:	b280      	uxth	r0, r0
 802badc:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802bae0:	fb1c fc0b 	smulbb	ip, ip, fp
 802bae4:	fa5f fe8e 	uxtb.w	lr, lr
 802bae8:	fb12 fb0b 	smulbb	fp, r2, fp
 802baec:	fb01 cc03 	mla	ip, r1, r3, ip
 802baf0:	fb0e bb03 	mla	fp, lr, r3, fp
 802baf4:	1c43      	adds	r3, r0, #1
 802baf6:	fa1f fc8c 	uxth.w	ip, ip
 802bafa:	fa1f fb8b 	uxth.w	fp, fp
 802bafe:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802bb02:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 802bb06:	f10c 0101 	add.w	r1, ip, #1
 802bb0a:	f10b 0001 	add.w	r0, fp, #1
 802bb0e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 802bb12:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802bb16:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802bb1a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802bb1e:	4318      	orrs	r0, r3
 802bb20:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 802bb24:	ea40 000c 	orr.w	r0, r0, ip
 802bb28:	f8a8 0000 	strh.w	r0, [r8]
 802bb2c:	e734      	b.n	802b998 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802bb2e:	f113 0b01 	adds.w	fp, r3, #1
 802bb32:	f53f af31 	bmi.w	802b998 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802bb36:	45dc      	cmp	ip, fp
 802bb38:	f6ff af2e 	blt.w	802b998 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802bb3c:	f110 0b01 	adds.w	fp, r0, #1
 802bb40:	f53f af2a 	bmi.w	802b998 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802bb44:	45de      	cmp	lr, fp
 802bb46:	f6ff af27 	blt.w	802b998 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802bb4a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802bb4c:	9302      	str	r3, [sp, #8]
 802bb4e:	fa0f f38e 	sxth.w	r3, lr
 802bb52:	9301      	str	r3, [sp, #4]
 802bb54:	fa0f f38c 	sxth.w	r3, ip
 802bb58:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802bb5c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 802bb60:	9300      	str	r3, [sp, #0]
 802bb62:	463a      	mov	r2, r7
 802bb64:	4653      	mov	r3, sl
 802bb66:	4641      	mov	r1, r8
 802bb68:	9815      	ldr	r0, [sp, #84]	@ 0x54
 802bb6a:	f7ff fd4d 	bl	802b608 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 802bb6e:	e713      	b.n	802b998 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802bb70:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802bb72:	1422      	asrs	r2, r4, #16
 802bb74:	1433      	asrs	r3, r6, #16
 802bb76:	fb05 2303 	mla	r3, r5, r3, r2
 802bb7a:	085a      	lsrs	r2, r3, #1
 802bb7c:	07dd      	lsls	r5, r3, #31
 802bb7e:	5cba      	ldrb	r2, [r7, r2]
 802bb80:	bf54      	ite	pl
 802bb82:	f002 020f 	andpl.w	r2, r2, #15
 802bb86:	1112      	asrmi	r2, r2, #4
 802bb88:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802bb8c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802bb90:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802bb94:	b2d2      	uxtb	r2, r2
 802bb96:	2900      	cmp	r1, #0
 802bb98:	d076      	beq.n	802bc88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802bb9a:	f103 0e01 	add.w	lr, r3, #1
 802bb9e:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802bba2:	f01e 0f01 	tst.w	lr, #1
 802bba6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802bbaa:	bf0c      	ite	eq
 802bbac:	f00c 0c0f 	andeq.w	ip, ip, #15
 802bbb0:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 802bbb4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802bbb8:	fa5f f58c 	uxtb.w	r5, ip
 802bbbc:	9512      	str	r5, [sp, #72]	@ 0x48
 802bbbe:	b300      	cbz	r0, 802bc02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802bbc0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802bbc2:	442b      	add	r3, r5
 802bbc4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802bbc8:	07dd      	lsls	r5, r3, #31
 802bbca:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802bbce:	bf54      	ite	pl
 802bbd0:	f00c 0c0f 	andpl.w	ip, ip, #15
 802bbd4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802bbd8:	3301      	adds	r3, #1
 802bbda:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802bbde:	fa5f f58c 	uxtb.w	r5, ip
 802bbe2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802bbe6:	950c      	str	r5, [sp, #48]	@ 0x30
 802bbe8:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802bbec:	07dd      	lsls	r5, r3, #31
 802bbee:	bf54      	ite	pl
 802bbf0:	f00c 0c0f 	andpl.w	ip, ip, #15
 802bbf4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802bbf8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802bbfc:	fa5f f38c 	uxtb.w	r3, ip
 802bc00:	9313      	str	r3, [sp, #76]	@ 0x4c
 802bc02:	b289      	uxth	r1, r1
 802bc04:	b280      	uxth	r0, r0
 802bc06:	fb01 f300 	mul.w	r3, r1, r0
 802bc0a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 802bc0e:	0109      	lsls	r1, r1, #4
 802bc10:	b280      	uxth	r0, r0
 802bc12:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 802bc16:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802bc18:	1ac9      	subs	r1, r1, r3
 802bc1a:	ebac 0c00 	sub.w	ip, ip, r0
 802bc1e:	b289      	uxth	r1, r1
 802bc20:	4369      	muls	r1, r5
 802bc22:	fa1f fc8c 	uxth.w	ip, ip
 802bc26:	fb02 120c 	mla	r2, r2, ip, r1
 802bc2a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802bc2c:	fb00 2001 	mla	r0, r0, r1, r2
 802bc30:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802bc32:	fb03 0302 	mla	r3, r3, r2, r0
 802bc36:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802bc3a:	b1d3      	cbz	r3, 802bc72 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802bc3c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802bc3e:	4353      	muls	r3, r2
 802bc40:	1c5a      	adds	r2, r3, #1
 802bc42:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802bc46:	4a0f      	ldr	r2, [pc, #60]	@ (802bc84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 802bc48:	121b      	asrs	r3, r3, #8
 802bc4a:	6812      	ldr	r2, [r2, #0]
 802bc4c:	2bff      	cmp	r3, #255	@ 0xff
 802bc4e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802bc52:	d12d      	bne.n	802bcb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 802bc54:	0953      	lsrs	r3, r2, #5
 802bc56:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 802bc5a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802bc5e:	f02c 0c07 	bic.w	ip, ip, #7
 802bc62:	ea43 0c0c 	orr.w	ip, r3, ip
 802bc66:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802bc6a:	ea4c 0202 	orr.w	r2, ip, r2
 802bc6e:	f8a8 2000 	strh.w	r2, [r8]
 802bc72:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802bc74:	441c      	add	r4, r3
 802bc76:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802bc78:	f108 0802 	add.w	r8, r8, #2
 802bc7c:	441e      	add	r6, r3
 802bc7e:	f10b 3bff 	add.w	fp, fp, #4294967295
 802bc82:	e6ba      	b.n	802b9fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 802bc84:	2000e41c 	.word	0x2000e41c
 802bc88:	2800      	cmp	r0, #0
 802bc8a:	d0ba      	beq.n	802bc02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802bc8c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802bc8e:	442b      	add	r3, r5
 802bc90:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802bc94:	07db      	lsls	r3, r3, #31
 802bc96:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802bc9a:	bf54      	ite	pl
 802bc9c:	f00c 0c0f 	andpl.w	ip, ip, #15
 802bca0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802bca4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802bca8:	fa5f f38c 	uxtb.w	r3, ip
 802bcac:	930c      	str	r3, [sp, #48]	@ 0x30
 802bcae:	e7a8      	b.n	802bc02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802bcb0:	f8b8 e000 	ldrh.w	lr, [r8]
 802bcb4:	fa1f fa83 	uxth.w	sl, r3
 802bcb8:	ea4f 202e 	mov.w	r0, lr, asr #8
 802bcbc:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802bcc0:	43db      	mvns	r3, r3
 802bcc2:	b2db      	uxtb	r3, r3
 802bcc4:	fb11 f10a 	smulbb	r1, r1, sl
 802bcc8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802bccc:	fb00 1003 	mla	r0, r0, r3, r1
 802bcd0:	b2d2      	uxtb	r2, r2
 802bcd2:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802bcd6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802bcda:	fa5f fe8e 	uxtb.w	lr, lr
 802bcde:	fb12 f20a 	smulbb	r2, r2, sl
 802bce2:	fb0e 2203 	mla	r2, lr, r3, r2
 802bce6:	fa5f fc8c 	uxtb.w	ip, ip
 802bcea:	b280      	uxth	r0, r0
 802bcec:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802bcf0:	b292      	uxth	r2, r2
 802bcf2:	fb1c fc0a 	smulbb	ip, ip, sl
 802bcf6:	fb01 cc03 	mla	ip, r1, r3, ip
 802bcfa:	1c43      	adds	r3, r0, #1
 802bcfc:	1c51      	adds	r1, r2, #1
 802bcfe:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802bd02:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 802bd06:	fa1f fc8c 	uxth.w	ip, ip
 802bd0a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802bd0e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 802bd12:	4308      	orrs	r0, r1
 802bd14:	f10c 0101 	add.w	r1, ip, #1
 802bd18:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802bd1c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802bd20:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 802bd24:	ea40 000c 	orr.w	r0, r0, ip
 802bd28:	f8a8 0000 	strh.w	r0, [r8]
 802bd2c:	e7a1      	b.n	802bc72 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802bd2e:	b017      	add	sp, #92	@ 0x5c
 802bd30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802bd34 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 802bd34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802bd38:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 802bd3c:	2d00      	cmp	r5, #0
 802bd3e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802bd42:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 802bd46:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 802bd4a:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 802bd4e:	fb05 0e03 	mla	lr, r5, r3, r0
 802bd52:	f2c0 80b0 	blt.w	802beb6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 802bd56:	45a9      	cmp	r9, r5
 802bd58:	f340 80ad 	ble.w	802beb6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 802bd5c:	2800      	cmp	r0, #0
 802bd5e:	f2c0 80a8 	blt.w	802beb2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 802bd62:	4580      	cmp	r8, r0
 802bd64:	f340 80a5 	ble.w	802beb2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 802bd68:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802bd6c:	f01e 0f01 	tst.w	lr, #1
 802bd70:	5d16      	ldrb	r6, [r2, r4]
 802bd72:	bf0c      	ite	eq
 802bd74:	f006 060f 	andeq.w	r6, r6, #15
 802bd78:	1136      	asrne	r6, r6, #4
 802bd7a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802bd7e:	b2f6      	uxtb	r6, r6
 802bd80:	1c44      	adds	r4, r0, #1
 802bd82:	f100 809b 	bmi.w	802bebc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 802bd86:	45a0      	cmp	r8, r4
 802bd88:	f340 8098 	ble.w	802bebc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 802bd8c:	2f00      	cmp	r7, #0
 802bd8e:	f000 8097 	beq.w	802bec0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 802bd92:	f10e 0a01 	add.w	sl, lr, #1
 802bd96:	ea4f 045a 	mov.w	r4, sl, lsr #1
 802bd9a:	f01a 0f01 	tst.w	sl, #1
 802bd9e:	5d14      	ldrb	r4, [r2, r4]
 802bda0:	bf0c      	ite	eq
 802bda2:	f004 040f 	andeq.w	r4, r4, #15
 802bda6:	1124      	asrne	r4, r4, #4
 802bda8:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 802bdac:	b2e4      	uxtb	r4, r4
 802bdae:	3501      	adds	r5, #1
 802bdb0:	f100 808a 	bmi.w	802bec8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 802bdb4:	45a9      	cmp	r9, r5
 802bdb6:	f340 8087 	ble.w	802bec8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 802bdba:	f1bc 0f00 	cmp.w	ip, #0
 802bdbe:	f000 8086 	beq.w	802bece <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 802bdc2:	2800      	cmp	r0, #0
 802bdc4:	db7e      	blt.n	802bec4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 802bdc6:	4580      	cmp	r8, r0
 802bdc8:	dd7c      	ble.n	802bec4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 802bdca:	eb03 090e 	add.w	r9, r3, lr
 802bdce:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802bdd2:	f019 0f01 	tst.w	r9, #1
 802bdd6:	5d55      	ldrb	r5, [r2, r5]
 802bdd8:	bf0c      	ite	eq
 802bdda:	f005 050f 	andeq.w	r5, r5, #15
 802bdde:	112d      	asrne	r5, r5, #4
 802bde0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802bde4:	b2ed      	uxtb	r5, r5
 802bde6:	3001      	adds	r0, #1
 802bde8:	d474      	bmi.n	802bed4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802bdea:	4580      	cmp	r8, r0
 802bdec:	dd72      	ble.n	802bed4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802bdee:	2f00      	cmp	r7, #0
 802bdf0:	d072      	beq.n	802bed8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 802bdf2:	3301      	adds	r3, #1
 802bdf4:	449e      	add	lr, r3
 802bdf6:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802bdfa:	f01e 0f01 	tst.w	lr, #1
 802bdfe:	5cd0      	ldrb	r0, [r2, r3]
 802be00:	bf0c      	ite	eq
 802be02:	f000 000f 	andeq.w	r0, r0, #15
 802be06:	1100      	asrne	r0, r0, #4
 802be08:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802be0c:	b2c3      	uxtb	r3, r0
 802be0e:	b2ba      	uxth	r2, r7
 802be10:	fa1f fc8c 	uxth.w	ip, ip
 802be14:	fb02 f00c 	mul.w	r0, r2, ip
 802be18:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802be1c:	0112      	lsls	r2, r2, #4
 802be1e:	fa1f fc8c 	uxth.w	ip, ip
 802be22:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 802be26:	1a12      	subs	r2, r2, r0
 802be28:	eba7 070c 	sub.w	r7, r7, ip
 802be2c:	b292      	uxth	r2, r2
 802be2e:	b2bf      	uxth	r7, r7
 802be30:	4362      	muls	r2, r4
 802be32:	fb06 2207 	mla	r2, r6, r7, r2
 802be36:	fb0c 2505 	mla	r5, ip, r5, r2
 802be3a:	fb00 5303 	mla	r3, r0, r3, r5
 802be3e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802be42:	b3a3      	cbz	r3, 802beae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 802be44:	4a25      	ldr	r2, [pc, #148]	@ (802bedc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 802be46:	880e      	ldrh	r6, [r1, #0]
 802be48:	6815      	ldr	r5, [r2, #0]
 802be4a:	1234      	asrs	r4, r6, #8
 802be4c:	b29a      	uxth	r2, r3
 802be4e:	f3c5 4007 	ubfx	r0, r5, #16, #8
 802be52:	43db      	mvns	r3, r3
 802be54:	b2db      	uxtb	r3, r3
 802be56:	fb10 f002 	smulbb	r0, r0, r2
 802be5a:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802be5e:	fb04 0403 	mla	r4, r4, r3, r0
 802be62:	f3c5 2707 	ubfx	r7, r5, #8, #8
 802be66:	10f0      	asrs	r0, r6, #3
 802be68:	b2ed      	uxtb	r5, r5
 802be6a:	00f6      	lsls	r6, r6, #3
 802be6c:	fb17 f702 	smulbb	r7, r7, r2
 802be70:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802be74:	fb15 f202 	smulbb	r2, r5, r2
 802be78:	b2f6      	uxtb	r6, r6
 802be7a:	b2a4      	uxth	r4, r4
 802be7c:	fb00 7003 	mla	r0, r0, r3, r7
 802be80:	fb06 2303 	mla	r3, r6, r3, r2
 802be84:	b29a      	uxth	r2, r3
 802be86:	1c63      	adds	r3, r4, #1
 802be88:	b280      	uxth	r0, r0
 802be8a:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802be8e:	1c53      	adds	r3, r2, #1
 802be90:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802be94:	1c42      	adds	r2, r0, #1
 802be96:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802be9a:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 802be9e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802bea2:	0940      	lsrs	r0, r0, #5
 802bea4:	4323      	orrs	r3, r4
 802bea6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802beaa:	4303      	orrs	r3, r0
 802beac:	800b      	strh	r3, [r1, #0]
 802beae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802beb2:	2600      	movs	r6, #0
 802beb4:	e764      	b.n	802bd80 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 802beb6:	2400      	movs	r4, #0
 802beb8:	4626      	mov	r6, r4
 802beba:	e778      	b.n	802bdae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802bebc:	2400      	movs	r4, #0
 802bebe:	e776      	b.n	802bdae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802bec0:	463c      	mov	r4, r7
 802bec2:	e774      	b.n	802bdae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802bec4:	2500      	movs	r5, #0
 802bec6:	e78e      	b.n	802bde6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 802bec8:	2300      	movs	r3, #0
 802beca:	461d      	mov	r5, r3
 802becc:	e79f      	b.n	802be0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802bece:	4663      	mov	r3, ip
 802bed0:	4665      	mov	r5, ip
 802bed2:	e79c      	b.n	802be0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802bed4:	2300      	movs	r3, #0
 802bed6:	e79a      	b.n	802be0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802bed8:	463b      	mov	r3, r7
 802beda:	e798      	b.n	802be0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802bedc:	2000e41c 	.word	0x2000e41c

0802bee0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802bee0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802bee4:	b093      	sub	sp, #76	@ 0x4c
 802bee6:	461d      	mov	r5, r3
 802bee8:	920c      	str	r2, [sp, #48]	@ 0x30
 802beea:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 802beec:	9107      	str	r1, [sp, #28]
 802beee:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 802bef2:	9011      	str	r0, [sp, #68]	@ 0x44
 802bef4:	6850      	ldr	r0, [r2, #4]
 802bef6:	6812      	ldr	r2, [r2, #0]
 802bef8:	fb00 1303 	mla	r3, r0, r3, r1
 802befc:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802bf00:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802bf02:	689b      	ldr	r3, [r3, #8]
 802bf04:	3301      	adds	r3, #1
 802bf06:	f023 0301 	bic.w	r3, r3, #1
 802bf0a:	9306      	str	r3, [sp, #24]
 802bf0c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802bf0e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 802bf12:	681f      	ldr	r7, [r3, #0]
 802bf14:	9b07      	ldr	r3, [sp, #28]
 802bf16:	2b00      	cmp	r3, #0
 802bf18:	dc03      	bgt.n	802bf22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 802bf1a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802bf1c:	2b00      	cmp	r3, #0
 802bf1e:	f340 8267 	ble.w	802c3f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802bf22:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802bf24:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802bf28:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802bf2c:	1e48      	subs	r0, r1, #1
 802bf2e:	f102 3cff 	add.w	ip, r2, #4294967295
 802bf32:	2d00      	cmp	r5, #0
 802bf34:	f340 80b8 	ble.w	802c0a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 802bf38:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802bf3c:	ea4f 4326 	mov.w	r3, r6, asr #16
 802bf40:	d406      	bmi.n	802bf50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802bf42:	4586      	cmp	lr, r0
 802bf44:	da04      	bge.n	802bf50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802bf46:	2b00      	cmp	r3, #0
 802bf48:	db02      	blt.n	802bf50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802bf4a:	4563      	cmp	r3, ip
 802bf4c:	f2c0 80ad 	blt.w	802c0aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 802bf50:	f11e 0e01 	adds.w	lr, lr, #1
 802bf54:	f100 80a0 	bmi.w	802c098 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802bf58:	4571      	cmp	r1, lr
 802bf5a:	f2c0 809d 	blt.w	802c098 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802bf5e:	3301      	adds	r3, #1
 802bf60:	f100 809a 	bmi.w	802c098 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802bf64:	429a      	cmp	r2, r3
 802bf66:	f2c0 8097 	blt.w	802c098 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802bf6a:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 802bf6e:	9509      	str	r5, [sp, #36]	@ 0x24
 802bf70:	46c8      	mov	r8, r9
 802bf72:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802bf74:	2b00      	cmp	r3, #0
 802bf76:	f340 80b6 	ble.w	802c0e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 802bf7a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 802bf7e:	9308      	str	r3, [sp, #32]
 802bf80:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802bf82:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802bf86:	1423      	asrs	r3, r4, #16
 802bf88:	ea4f 4026 	mov.w	r0, r6, asr #16
 802bf8c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802bf90:	f100 813e 	bmi.w	802c210 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802bf94:	f10c 3bff 	add.w	fp, ip, #4294967295
 802bf98:	455b      	cmp	r3, fp
 802bf9a:	f280 8139 	bge.w	802c210 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802bf9e:	2800      	cmp	r0, #0
 802bfa0:	f2c0 8136 	blt.w	802c210 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802bfa4:	f10e 3bff 	add.w	fp, lr, #4294967295
 802bfa8:	4558      	cmp	r0, fp
 802bfaa:	f280 8131 	bge.w	802c210 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802bfae:	9a06      	ldr	r2, [sp, #24]
 802bfb0:	fb00 3302 	mla	r3, r0, r2, r3
 802bfb4:	0858      	lsrs	r0, r3, #1
 802bfb6:	07da      	lsls	r2, r3, #31
 802bfb8:	f817 c000 	ldrb.w	ip, [r7, r0]
 802bfbc:	9a08      	ldr	r2, [sp, #32]
 802bfbe:	bf54      	ite	pl
 802bfc0:	f00c 0c0f 	andpl.w	ip, ip, #15
 802bfc4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802bfc8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802bfcc:	fa5f fc8c 	uxtb.w	ip, ip
 802bfd0:	2a00      	cmp	r2, #0
 802bfd2:	f000 80cb 	beq.w	802c16c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802bfd6:	1c58      	adds	r0, r3, #1
 802bfd8:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 802bfdc:	07c0      	lsls	r0, r0, #31
 802bfde:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802bfe2:	bf54      	ite	pl
 802bfe4:	f00e 0e0f 	andpl.w	lr, lr, #15
 802bfe8:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802bfec:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802bff0:	fa5f fe8e 	uxtb.w	lr, lr
 802bff4:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 802bff8:	b1b9      	cbz	r1, 802c02a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802bffa:	4453      	add	r3, sl
 802bffc:	0858      	lsrs	r0, r3, #1
 802bffe:	07da      	lsls	r2, r3, #31
 802c000:	5c38      	ldrb	r0, [r7, r0]
 802c002:	bf54      	ite	pl
 802c004:	f000 000f 	andpl.w	r0, r0, #15
 802c008:	1100      	asrmi	r0, r0, #4
 802c00a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802c00e:	b2c0      	uxtb	r0, r0
 802c010:	900a      	str	r0, [sp, #40]	@ 0x28
 802c012:	1c58      	adds	r0, r3, #1
 802c014:	0843      	lsrs	r3, r0, #1
 802c016:	07c2      	lsls	r2, r0, #31
 802c018:	5cfb      	ldrb	r3, [r7, r3]
 802c01a:	bf54      	ite	pl
 802c01c:	f003 030f 	andpl.w	r3, r3, #15
 802c020:	111b      	asrmi	r3, r3, #4
 802c022:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802c026:	b2db      	uxtb	r3, r3
 802c028:	930e      	str	r3, [sp, #56]	@ 0x38
 802c02a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 802c02e:	b289      	uxth	r1, r1
 802c030:	fb02 f301 	mul.w	r3, r2, r1
 802c034:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 802c038:	0112      	lsls	r2, r2, #4
 802c03a:	b289      	uxth	r1, r1
 802c03c:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 802c040:	1a40      	subs	r0, r0, r1
 802c042:	fa1f fe80 	uxth.w	lr, r0
 802c046:	1ad2      	subs	r2, r2, r3
 802c048:	980d      	ldr	r0, [sp, #52]	@ 0x34
 802c04a:	b292      	uxth	r2, r2
 802c04c:	4342      	muls	r2, r0
 802c04e:	fb0c 2c0e 	mla	ip, ip, lr, r2
 802c052:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802c054:	fb01 c102 	mla	r1, r1, r2, ip
 802c058:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802c05a:	fb03 1302 	mla	r3, r3, r2, r1
 802c05e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802c062:	2bff      	cmp	r3, #255	@ 0xff
 802c064:	f040 8093 	bne.w	802c18e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 802c068:	4bbe      	ldr	r3, [pc, #760]	@ (802c364 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802c06a:	681a      	ldr	r2, [r3, #0]
 802c06c:	4bbe      	ldr	r3, [pc, #760]	@ (802c368 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802c06e:	0951      	lsrs	r1, r2, #5
 802c070:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802c074:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802c078:	430b      	orrs	r3, r1
 802c07a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802c07e:	4313      	orrs	r3, r2
 802c080:	f8a8 3000 	strh.w	r3, [r8]
 802c084:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802c086:	441c      	add	r4, r3
 802c088:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802c08a:	441e      	add	r6, r3
 802c08c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802c08e:	3b01      	subs	r3, #1
 802c090:	f108 0802 	add.w	r8, r8, #2
 802c094:	9309      	str	r3, [sp, #36]	@ 0x24
 802c096:	e76c      	b.n	802bf72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802c098:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802c09a:	441c      	add	r4, r3
 802c09c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802c09e:	3d01      	subs	r5, #1
 802c0a0:	441e      	add	r6, r3
 802c0a2:	f109 0902 	add.w	r9, r9, #2
 802c0a6:	e744      	b.n	802bf32 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 802c0a8:	d021      	beq.n	802c0ee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 802c0aa:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 802c0ac:	1e6b      	subs	r3, r5, #1
 802c0ae:	fb00 4003 	mla	r0, r0, r3, r4
 802c0b2:	1400      	asrs	r0, r0, #16
 802c0b4:	f53f af59 	bmi.w	802bf6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802c0b8:	3901      	subs	r1, #1
 802c0ba:	4288      	cmp	r0, r1
 802c0bc:	f6bf af55 	bge.w	802bf6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802c0c0:	9920      	ldr	r1, [sp, #128]	@ 0x80
 802c0c2:	fb01 6303 	mla	r3, r1, r3, r6
 802c0c6:	141b      	asrs	r3, r3, #16
 802c0c8:	f53f af4f 	bmi.w	802bf6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802c0cc:	3a01      	subs	r2, #1
 802c0ce:	4293      	cmp	r3, r2
 802c0d0:	f6bf af4b 	bge.w	802bf6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802c0d4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 802c0d8:	9308      	str	r3, [sp, #32]
 802c0da:	46a8      	mov	r8, r5
 802c0dc:	46ce      	mov	lr, r9
 802c0de:	f1b8 0f00 	cmp.w	r8, #0
 802c0e2:	f300 80b5 	bgt.w	802c250 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802c0e6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802c0ea:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802c0ee:	9b07      	ldr	r3, [sp, #28]
 802c0f0:	2b00      	cmp	r3, #0
 802c0f2:	f340 817d 	ble.w	802c3f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802c0f6:	ee30 0a04 	vadd.f32	s0, s0, s8
 802c0fa:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802c0fe:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802c102:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802c104:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802c108:	ee31 1a05 	vadd.f32	s2, s2, s10
 802c10c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802c110:	eef0 6a62 	vmov.f32	s13, s5
 802c114:	ee61 7a27 	vmul.f32	s15, s2, s15
 802c118:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802c11c:	ee77 2a62 	vsub.f32	s5, s14, s5
 802c120:	ee16 4a90 	vmov	r4, s13
 802c124:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802c128:	eef0 6a43 	vmov.f32	s13, s6
 802c12c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802c130:	ee12 2a90 	vmov	r2, s5
 802c134:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802c138:	fb92 f3f3 	sdiv	r3, r2, r3
 802c13c:	ee13 2a10 	vmov	r2, s6
 802c140:	931f      	str	r3, [sp, #124]	@ 0x7c
 802c142:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802c144:	fb92 f3f3 	sdiv	r3, r2, r3
 802c148:	9320      	str	r3, [sp, #128]	@ 0x80
 802c14a:	9b07      	ldr	r3, [sp, #28]
 802c14c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802c14e:	3b01      	subs	r3, #1
 802c150:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802c154:	9307      	str	r3, [sp, #28]
 802c156:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802c158:	ee16 6a90 	vmov	r6, s13
 802c15c:	bf14      	ite	ne
 802c15e:	461d      	movne	r5, r3
 802c160:	4615      	moveq	r5, r2
 802c162:	eeb0 3a67 	vmov.f32	s6, s15
 802c166:	eef0 2a47 	vmov.f32	s5, s14
 802c16a:	e6d3      	b.n	802bf14 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 802c16c:	2900      	cmp	r1, #0
 802c16e:	f43f af5c 	beq.w	802c02a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802c172:	eb0a 0003 	add.w	r0, sl, r3
 802c176:	0843      	lsrs	r3, r0, #1
 802c178:	07c0      	lsls	r0, r0, #31
 802c17a:	5cfb      	ldrb	r3, [r7, r3]
 802c17c:	bf54      	ite	pl
 802c17e:	f003 030f 	andpl.w	r3, r3, #15
 802c182:	111b      	asrmi	r3, r3, #4
 802c184:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802c188:	b2db      	uxtb	r3, r3
 802c18a:	930a      	str	r3, [sp, #40]	@ 0x28
 802c18c:	e74d      	b.n	802c02a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802c18e:	2b00      	cmp	r3, #0
 802c190:	f43f af78 	beq.w	802c084 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802c194:	4a73      	ldr	r2, [pc, #460]	@ (802c364 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802c196:	f8b8 c000 	ldrh.w	ip, [r8]
 802c19a:	6810      	ldr	r0, [r2, #0]
 802c19c:	fa1f fe83 	uxth.w	lr, r3
 802c1a0:	ea4f 212c 	mov.w	r1, ip, asr #8
 802c1a4:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802c1a8:	43db      	mvns	r3, r3
 802c1aa:	b2db      	uxtb	r3, r3
 802c1ac:	fb12 f20e 	smulbb	r2, r2, lr
 802c1b0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802c1b4:	fb01 2103 	mla	r1, r1, r3, r2
 802c1b8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 802c1bc:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802c1c0:	b2c0      	uxtb	r0, r0
 802c1c2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802c1c6:	fb1b fb0e 	smulbb	fp, fp, lr
 802c1ca:	b289      	uxth	r1, r1
 802c1cc:	fb10 fe0e 	smulbb	lr, r0, lr
 802c1d0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802c1d4:	fa5f fc8c 	uxtb.w	ip, ip
 802c1d8:	fb02 b203 	mla	r2, r2, r3, fp
 802c1dc:	1c48      	adds	r0, r1, #1
 802c1de:	fb0c e303 	mla	r3, ip, r3, lr
 802c1e2:	b292      	uxth	r2, r2
 802c1e4:	b29b      	uxth	r3, r3
 802c1e6:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802c1ea:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 802c1ee:	f102 0b01 	add.w	fp, r2, #1
 802c1f2:	1c59      	adds	r1, r3, #1
 802c1f4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 802c1f8:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802c1fc:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802c200:	0952      	lsrs	r2, r2, #5
 802c202:	4301      	orrs	r1, r0
 802c204:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802c208:	4311      	orrs	r1, r2
 802c20a:	f8a8 1000 	strh.w	r1, [r8]
 802c20e:	e739      	b.n	802c084 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802c210:	f113 0b01 	adds.w	fp, r3, #1
 802c214:	f53f af36 	bmi.w	802c084 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802c218:	45dc      	cmp	ip, fp
 802c21a:	f6ff af33 	blt.w	802c084 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802c21e:	f110 0b01 	adds.w	fp, r0, #1
 802c222:	f53f af2f 	bmi.w	802c084 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802c226:	45de      	cmp	lr, fp
 802c228:	f6ff af2c 	blt.w	802c084 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802c22c:	9a08      	ldr	r2, [sp, #32]
 802c22e:	9302      	str	r3, [sp, #8]
 802c230:	fa0f f38e 	sxth.w	r3, lr
 802c234:	9301      	str	r3, [sp, #4]
 802c236:	fa0f f38c 	sxth.w	r3, ip
 802c23a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802c23e:	9105      	str	r1, [sp, #20]
 802c240:	9300      	str	r3, [sp, #0]
 802c242:	463a      	mov	r2, r7
 802c244:	4653      	mov	r3, sl
 802c246:	4641      	mov	r1, r8
 802c248:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802c24a:	f7ff fd73 	bl	802bd34 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802c24e:	e719      	b.n	802c084 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802c250:	9906      	ldr	r1, [sp, #24]
 802c252:	1422      	asrs	r2, r4, #16
 802c254:	1433      	asrs	r3, r6, #16
 802c256:	fb01 2303 	mla	r3, r1, r3, r2
 802c25a:	085a      	lsrs	r2, r3, #1
 802c25c:	07d9      	lsls	r1, r3, #31
 802c25e:	5cba      	ldrb	r2, [r7, r2]
 802c260:	bf54      	ite	pl
 802c262:	f002 020f 	andpl.w	r2, r2, #15
 802c266:	1112      	asrmi	r2, r2, #4
 802c268:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802c26c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802c270:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802c274:	b2d2      	uxtb	r2, r2
 802c276:	2800      	cmp	r0, #0
 802c278:	d062      	beq.n	802c340 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 802c27a:	f103 0a01 	add.w	sl, r3, #1
 802c27e:	ea4f 015a 	mov.w	r1, sl, lsr #1
 802c282:	f01a 0f01 	tst.w	sl, #1
 802c286:	5c79      	ldrb	r1, [r7, r1]
 802c288:	bf0c      	ite	eq
 802c28a:	f001 010f 	andeq.w	r1, r1, #15
 802c28e:	1109      	asrne	r1, r1, #4
 802c290:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802c294:	b2c9      	uxtb	r1, r1
 802c296:	910f      	str	r1, [sp, #60]	@ 0x3c
 802c298:	f1bc 0f00 	cmp.w	ip, #0
 802c29c:	d019      	beq.n	802c2d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802c29e:	9908      	ldr	r1, [sp, #32]
 802c2a0:	440b      	add	r3, r1
 802c2a2:	0859      	lsrs	r1, r3, #1
 802c2a4:	f013 0f01 	tst.w	r3, #1
 802c2a8:	5c79      	ldrb	r1, [r7, r1]
 802c2aa:	bf0c      	ite	eq
 802c2ac:	f001 010f 	andeq.w	r1, r1, #15
 802c2b0:	1109      	asrne	r1, r1, #4
 802c2b2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802c2b6:	b2c9      	uxtb	r1, r1
 802c2b8:	3301      	adds	r3, #1
 802c2ba:	910b      	str	r1, [sp, #44]	@ 0x2c
 802c2bc:	0859      	lsrs	r1, r3, #1
 802c2be:	07db      	lsls	r3, r3, #31
 802c2c0:	5c79      	ldrb	r1, [r7, r1]
 802c2c2:	bf54      	ite	pl
 802c2c4:	f001 010f 	andpl.w	r1, r1, #15
 802c2c8:	1109      	asrmi	r1, r1, #4
 802c2ca:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802c2ce:	b2c9      	uxtb	r1, r1
 802c2d0:	9110      	str	r1, [sp, #64]	@ 0x40
 802c2d2:	b280      	uxth	r0, r0
 802c2d4:	fa1f fc8c 	uxth.w	ip, ip
 802c2d8:	fb00 f30c 	mul.w	r3, r0, ip
 802c2dc:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 802c2e0:	0100      	lsls	r0, r0, #4
 802c2e2:	fa1f fc8c 	uxth.w	ip, ip
 802c2e6:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 802c2ea:	eba1 010c 	sub.w	r1, r1, ip
 802c2ee:	fa1f fa81 	uxth.w	sl, r1
 802c2f2:	1ac0      	subs	r0, r0, r3
 802c2f4:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 802c2f6:	b280      	uxth	r0, r0
 802c2f8:	4348      	muls	r0, r1
 802c2fa:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802c2fc:	fb02 020a 	mla	r2, r2, sl, r0
 802c300:	fb0c 2c01 	mla	ip, ip, r1, r2
 802c304:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802c306:	fb03 c302 	mla	r3, r3, r2, ip
 802c30a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802c30e:	2bff      	cmp	r3, #255	@ 0xff
 802c310:	d12c      	bne.n	802c36c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802c312:	4b14      	ldr	r3, [pc, #80]	@ (802c364 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802c314:	681a      	ldr	r2, [r3, #0]
 802c316:	4b14      	ldr	r3, [pc, #80]	@ (802c368 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802c318:	0951      	lsrs	r1, r2, #5
 802c31a:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802c31e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802c322:	430b      	orrs	r3, r1
 802c324:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802c328:	4313      	orrs	r3, r2
 802c32a:	f8ae 3000 	strh.w	r3, [lr]
 802c32e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802c330:	441c      	add	r4, r3
 802c332:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802c334:	f10e 0e02 	add.w	lr, lr, #2
 802c338:	441e      	add	r6, r3
 802c33a:	f108 38ff 	add.w	r8, r8, #4294967295
 802c33e:	e6ce      	b.n	802c0de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 802c340:	f1bc 0f00 	cmp.w	ip, #0
 802c344:	d0c5      	beq.n	802c2d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802c346:	9908      	ldr	r1, [sp, #32]
 802c348:	440b      	add	r3, r1
 802c34a:	0859      	lsrs	r1, r3, #1
 802c34c:	07db      	lsls	r3, r3, #31
 802c34e:	5c79      	ldrb	r1, [r7, r1]
 802c350:	bf54      	ite	pl
 802c352:	f001 010f 	andpl.w	r1, r1, #15
 802c356:	1109      	asrmi	r1, r1, #4
 802c358:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802c35c:	b2c9      	uxtb	r1, r1
 802c35e:	910b      	str	r1, [sp, #44]	@ 0x2c
 802c360:	e7b7      	b.n	802c2d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802c362:	bf00      	nop
 802c364:	2000e41c 	.word	0x2000e41c
 802c368:	fffff800 	.word	0xfffff800
 802c36c:	2b00      	cmp	r3, #0
 802c36e:	d0de      	beq.n	802c32e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802c370:	4a21      	ldr	r2, [pc, #132]	@ (802c3f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802c372:	f8be c000 	ldrh.w	ip, [lr]
 802c376:	6810      	ldr	r0, [r2, #0]
 802c378:	fa1f fa83 	uxth.w	sl, r3
 802c37c:	ea4f 212c 	mov.w	r1, ip, asr #8
 802c380:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802c384:	43db      	mvns	r3, r3
 802c386:	b2db      	uxtb	r3, r3
 802c388:	fb12 f20a 	smulbb	r2, r2, sl
 802c38c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802c390:	fb01 2103 	mla	r1, r1, r3, r2
 802c394:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 802c398:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802c39c:	b2c0      	uxtb	r0, r0
 802c39e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802c3a2:	fa5f fc8c 	uxtb.w	ip, ip
 802c3a6:	fb10 f00a 	smulbb	r0, r0, sl
 802c3aa:	fb0c 0003 	mla	r0, ip, r3, r0
 802c3ae:	b289      	uxth	r1, r1
 802c3b0:	fb1b fb0a 	smulbb	fp, fp, sl
 802c3b4:	b280      	uxth	r0, r0
 802c3b6:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802c3ba:	fb02 b203 	mla	r2, r2, r3, fp
 802c3be:	1c4b      	adds	r3, r1, #1
 802c3c0:	f100 0b01 	add.w	fp, r0, #1
 802c3c4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802c3c8:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 802c3cc:	b292      	uxth	r2, r2
 802c3ce:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802c3d2:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 802c3d6:	ea4b 0101 	orr.w	r1, fp, r1
 802c3da:	f102 0b01 	add.w	fp, r2, #1
 802c3de:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802c3e2:	0952      	lsrs	r2, r2, #5
 802c3e4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802c3e8:	4311      	orrs	r1, r2
 802c3ea:	f8ae 1000 	strh.w	r1, [lr]
 802c3ee:	e79e      	b.n	802c32e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802c3f0:	b013      	add	sp, #76	@ 0x4c
 802c3f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c3f6:	bf00      	nop
 802c3f8:	2000e41c 	.word	0x2000e41c

0802c3fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 802c3fc:	b570      	push	{r4, r5, r6, lr}
 802c3fe:	1208      	asrs	r0, r1, #8
 802c400:	b29e      	uxth	r6, r3
 802c402:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 802c406:	1213      	asrs	r3, r2, #8
 802c408:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802c40c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 802c410:	fb13 f305 	smulbb	r3, r3, r5
 802c414:	fb10 f006 	smulbb	r0, r0, r6
 802c418:	4418      	add	r0, r3
 802c41a:	10cc      	asrs	r4, r1, #3
 802c41c:	10d3      	asrs	r3, r2, #3
 802c41e:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802c422:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802c426:	fb13 f305 	smulbb	r3, r3, r5
 802c42a:	fb14 f406 	smulbb	r4, r4, r6
 802c42e:	00c9      	lsls	r1, r1, #3
 802c430:	00d2      	lsls	r2, r2, #3
 802c432:	441c      	add	r4, r3
 802c434:	b2d2      	uxtb	r2, r2
 802c436:	b2cb      	uxtb	r3, r1
 802c438:	fb12 f205 	smulbb	r2, r2, r5
 802c43c:	b280      	uxth	r0, r0
 802c43e:	fb13 f306 	smulbb	r3, r3, r6
 802c442:	4413      	add	r3, r2
 802c444:	1c42      	adds	r2, r0, #1
 802c446:	b29b      	uxth	r3, r3
 802c448:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802c44c:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 802c450:	1c58      	adds	r0, r3, #1
 802c452:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802c456:	b2a4      	uxth	r4, r4
 802c458:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802c45c:	4310      	orrs	r0, r2
 802c45e:	1c62      	adds	r2, r4, #1
 802c460:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802c464:	0964      	lsrs	r4, r4, #5
 802c466:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802c46a:	4320      	orrs	r0, r4
 802c46c:	bd70      	pop	{r4, r5, r6, pc}
	...

0802c470 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 802c470:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c474:	b08f      	sub	sp, #60	@ 0x3c
 802c476:	461c      	mov	r4, r3
 802c478:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 802c47c:	9004      	str	r0, [sp, #16]
 802c47e:	460d      	mov	r5, r1
 802c480:	4616      	mov	r6, r2
 802c482:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802c484:	2f00      	cmp	r7, #0
 802c486:	f000 80f6 	beq.w	802c676 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 802c48a:	6820      	ldr	r0, [r4, #0]
 802c48c:	6861      	ldr	r1, [r4, #4]
 802c48e:	aa0a      	add	r2, sp, #40	@ 0x28
 802c490:	c203      	stmia	r2!, {r0, r1}
 802c492:	6818      	ldr	r0, [r3, #0]
 802c494:	6859      	ldr	r1, [r3, #4]
 802c496:	aa0c      	add	r2, sp, #48	@ 0x30
 802c498:	c203      	stmia	r2!, {r0, r1}
 802c49a:	a80a      	add	r0, sp, #40	@ 0x28
 802c49c:	f7ee f964 	bl	801a768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802c4a0:	4621      	mov	r1, r4
 802c4a2:	a80c      	add	r0, sp, #48	@ 0x30
 802c4a4:	f7ee f9a4 	bl	801a7f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802c4a8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 802c4ac:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 802c4b0:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 802c4b4:	f002 0301 	and.w	r3, r2, #1
 802c4b8:	9306      	str	r3, [sp, #24]
 802c4ba:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802c4be:	f003 0101 	and.w	r1, r3, #1
 802c4c2:	9105      	str	r1, [sp, #20]
 802c4c4:	9805      	ldr	r0, [sp, #20]
 802c4c6:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 802c4ca:	4403      	add	r3, r0
 802c4cc:	fb01 2303 	mla	r3, r1, r3, r2
 802c4d0:	f04f 0802 	mov.w	r8, #2
 802c4d4:	fb93 f3f8 	sdiv	r3, r3, r8
 802c4d8:	441d      	add	r5, r3
 802c4da:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 802c4de:	441a      	add	r2, r3
 802c4e0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 802c4e4:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 802c4e8:	4419      	add	r1, r3
 802c4ea:	4b64      	ldr	r3, [pc, #400]	@ (802c67c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802c4ec:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 802c4f0:	6818      	ldr	r0, [r3, #0]
 802c4f2:	6803      	ldr	r3, [r0, #0]
 802c4f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802c4f6:	4798      	blx	r3
 802c4f8:	4a61      	ldr	r2, [pc, #388]	@ (802c680 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 802c4fa:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 802c4fe:	8813      	ldrh	r3, [r2, #0]
 802c500:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 802c504:	2fff      	cmp	r7, #255	@ 0xff
 802c506:	fb03 a404 	mla	r4, r3, r4, sl
 802c50a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802c50e:	f106 0604 	add.w	r6, r6, #4
 802c512:	4611      	mov	r1, r2
 802c514:	fb03 fb0b 	mul.w	fp, r3, fp
 802c518:	d06b      	beq.n	802c5f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 802c51a:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 802c51e:	9303      	str	r3, [sp, #12]
 802c520:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 802c524:	e9cd 3207 	strd	r3, r2, [sp, #28]
 802c528:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 802c52c:	9b07      	ldr	r3, [sp, #28]
 802c52e:	42a3      	cmp	r3, r4
 802c530:	f240 809c 	bls.w	802c66c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 802c534:	9b06      	ldr	r3, [sp, #24]
 802c536:	2b00      	cmp	r3, #0
 802c538:	d039      	beq.n	802c5ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 802c53a:	782b      	ldrb	r3, [r5, #0]
 802c53c:	8822      	ldrh	r2, [r4, #0]
 802c53e:	9804      	ldr	r0, [sp, #16]
 802c540:	f003 030f 	and.w	r3, r3, #15
 802c544:	f105 0801 	add.w	r8, r5, #1
 802c548:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802c54c:	9b03      	ldr	r3, [sp, #12]
 802c54e:	9300      	str	r3, [sp, #0]
 802c550:	463b      	mov	r3, r7
 802c552:	f7ff ff53 	bl	802c3fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802c556:	f824 0b02 	strh.w	r0, [r4], #2
 802c55a:	f109 3bff 	add.w	fp, r9, #4294967295
 802c55e:	f1bb 0f01 	cmp.w	fp, #1
 802c562:	46a2      	mov	sl, r4
 802c564:	f104 0404 	add.w	r4, r4, #4
 802c568:	dd24      	ble.n	802c5b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 802c56a:	f898 3000 	ldrb.w	r3, [r8]
 802c56e:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802c572:	9804      	ldr	r0, [sp, #16]
 802c574:	091b      	lsrs	r3, r3, #4
 802c576:	f1ab 0b02 	sub.w	fp, fp, #2
 802c57a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802c57e:	9b03      	ldr	r3, [sp, #12]
 802c580:	9300      	str	r3, [sp, #0]
 802c582:	463b      	mov	r3, r7
 802c584:	f7ff ff3a 	bl	802c3fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802c588:	f824 0c04 	strh.w	r0, [r4, #-4]
 802c58c:	f818 3b01 	ldrb.w	r3, [r8], #1
 802c590:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802c594:	9804      	ldr	r0, [sp, #16]
 802c596:	f003 030f 	and.w	r3, r3, #15
 802c59a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802c59e:	9b03      	ldr	r3, [sp, #12]
 802c5a0:	9300      	str	r3, [sp, #0]
 802c5a2:	463b      	mov	r3, r7
 802c5a4:	f7ff ff2a 	bl	802c3fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802c5a8:	f824 0c02 	strh.w	r0, [r4, #-2]
 802c5ac:	e7d7      	b.n	802c55e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802c5ae:	46a8      	mov	r8, r5
 802c5b0:	46cb      	mov	fp, r9
 802c5b2:	e7d4      	b.n	802c55e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802c5b4:	d10e      	bne.n	802c5d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 802c5b6:	f898 3000 	ldrb.w	r3, [r8]
 802c5ba:	f8ba 2000 	ldrh.w	r2, [sl]
 802c5be:	9804      	ldr	r0, [sp, #16]
 802c5c0:	091b      	lsrs	r3, r3, #4
 802c5c2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802c5c6:	9b03      	ldr	r3, [sp, #12]
 802c5c8:	9300      	str	r3, [sp, #0]
 802c5ca:	463b      	mov	r3, r7
 802c5cc:	f7ff ff16 	bl	802c3fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802c5d0:	f82a 0b02 	strh.w	r0, [sl], #2
 802c5d4:	9b08      	ldr	r3, [sp, #32]
 802c5d6:	9a05      	ldr	r2, [sp, #20]
 802c5d8:	881c      	ldrh	r4, [r3, #0]
 802c5da:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802c5de:	eba4 0409 	sub.w	r4, r4, r9
 802c5e2:	4413      	add	r3, r2
 802c5e4:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 802c5e8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802c5ea:	fb93 f3f2 	sdiv	r3, r3, r2
 802c5ee:	441d      	add	r5, r3
 802c5f0:	e79c      	b.n	802c52c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 802c5f2:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 802c5f6:	45a3      	cmp	fp, r4
 802c5f8:	d938      	bls.n	802c66c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 802c5fa:	9b06      	ldr	r3, [sp, #24]
 802c5fc:	b1f3      	cbz	r3, 802c63c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 802c5fe:	782b      	ldrb	r3, [r5, #0]
 802c600:	f003 030f 	and.w	r3, r3, #15
 802c604:	1c6a      	adds	r2, r5, #1
 802c606:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802c60a:	8023      	strh	r3, [r4, #0]
 802c60c:	f109 30ff 	add.w	r0, r9, #4294967295
 802c610:	3402      	adds	r4, #2
 802c612:	2801      	cmp	r0, #1
 802c614:	4623      	mov	r3, r4
 802c616:	f104 0404 	add.w	r4, r4, #4
 802c61a:	dd12      	ble.n	802c642 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 802c61c:	7813      	ldrb	r3, [r2, #0]
 802c61e:	091b      	lsrs	r3, r3, #4
 802c620:	3802      	subs	r0, #2
 802c622:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802c626:	f824 3c04 	strh.w	r3, [r4, #-4]
 802c62a:	f812 3b01 	ldrb.w	r3, [r2], #1
 802c62e:	f003 030f 	and.w	r3, r3, #15
 802c632:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802c636:	f824 3c02 	strh.w	r3, [r4, #-2]
 802c63a:	e7ea      	b.n	802c612 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802c63c:	462a      	mov	r2, r5
 802c63e:	4648      	mov	r0, r9
 802c640:	e7e7      	b.n	802c612 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802c642:	d106      	bne.n	802c652 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 802c644:	7812      	ldrb	r2, [r2, #0]
 802c646:	0912      	lsrs	r2, r2, #4
 802c648:	3302      	adds	r3, #2
 802c64a:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802c64e:	f823 2c02 	strh.w	r2, [r3, #-2]
 802c652:	880c      	ldrh	r4, [r1, #0]
 802c654:	9a05      	ldr	r2, [sp, #20]
 802c656:	eba4 0409 	sub.w	r4, r4, r9
 802c65a:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802c65e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802c662:	4413      	add	r3, r2
 802c664:	fb93 f3f8 	sdiv	r3, r3, r8
 802c668:	441d      	add	r5, r3
 802c66a:	e7c4      	b.n	802c5f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 802c66c:	4b03      	ldr	r3, [pc, #12]	@ (802c67c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802c66e:	6818      	ldr	r0, [r3, #0]
 802c670:	6803      	ldr	r3, [r0, #0]
 802c672:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802c674:	4798      	blx	r3
 802c676:	b00f      	add	sp, #60	@ 0x3c
 802c678:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c67c:	2000e40c 	.word	0x2000e40c
 802c680:	2000e406 	.word	0x2000e406

0802c684 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 802c684:	b5f0      	push	{r4, r5, r6, r7, lr}
 802c686:	f89d 5014 	ldrb.w	r5, [sp, #20]
 802c68a:	2dff      	cmp	r5, #255	@ 0xff
 802c68c:	ea4f 2711 	mov.w	r7, r1, lsr #8
 802c690:	d10c      	bne.n	802c6ac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802c692:	2bff      	cmp	r3, #255	@ 0xff
 802c694:	d10a      	bne.n	802c6ac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802c696:	4b25      	ldr	r3, [pc, #148]	@ (802c72c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 802c698:	0948      	lsrs	r0, r1, #5
 802c69a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802c69e:	403b      	ands	r3, r7
 802c6a0:	4318      	orrs	r0, r3
 802c6a2:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802c6a6:	4308      	orrs	r0, r1
 802c6a8:	b280      	uxth	r0, r0
 802c6aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802c6ac:	fb15 f503 	smulbb	r5, r5, r3
 802c6b0:	b2ab      	uxth	r3, r5
 802c6b2:	1c5d      	adds	r5, r3, #1
 802c6b4:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 802c6b8:	1214      	asrs	r4, r2, #8
 802c6ba:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802c6be:	fa1f fc85 	uxth.w	ip, r5
 802c6c2:	10d6      	asrs	r6, r2, #3
 802c6c4:	00d0      	lsls	r0, r2, #3
 802c6c6:	43ed      	mvns	r5, r5
 802c6c8:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802c6cc:	f3c1 4207 	ubfx	r2, r1, #16, #8
 802c6d0:	b2eb      	uxtb	r3, r5
 802c6d2:	b2c0      	uxtb	r0, r0
 802c6d4:	fb12 f20c 	smulbb	r2, r2, ip
 802c6d8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802c6dc:	fb04 2403 	mla	r4, r4, r3, r2
 802c6e0:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 802c6e4:	b2c8      	uxtb	r0, r1
 802c6e6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 802c6ea:	b2fd      	uxtb	r5, r7
 802c6ec:	fb10 f00c 	smulbb	r0, r0, ip
 802c6f0:	b2a4      	uxth	r4, r4
 802c6f2:	fb02 0003 	mla	r0, r2, r3, r0
 802c6f6:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 802c6fa:	fb15 f50c 	smulbb	r5, r5, ip
 802c6fe:	fb06 5503 	mla	r5, r6, r3, r5
 802c702:	b283      	uxth	r3, r0
 802c704:	1c60      	adds	r0, r4, #1
 802c706:	b2ad      	uxth	r5, r5
 802c708:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 802c70c:	1c58      	adds	r0, r3, #1
 802c70e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802c712:	1c6b      	adds	r3, r5, #1
 802c714:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802c718:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 802c71c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802c720:	096d      	lsrs	r5, r5, #5
 802c722:	4320      	orrs	r0, r4
 802c724:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 802c728:	4328      	orrs	r0, r5
 802c72a:	e7be      	b.n	802c6aa <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 802c72c:	00fff800 	.word	0x00fff800

0802c730 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 802c730:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c734:	461c      	mov	r4, r3
 802c736:	b08d      	sub	sp, #52	@ 0x34
 802c738:	460d      	mov	r5, r1
 802c73a:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802c73c:	6861      	ldr	r1, [r4, #4]
 802c73e:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 802c742:	4680      	mov	r8, r0
 802c744:	6820      	ldr	r0, [r4, #0]
 802c746:	4616      	mov	r6, r2
 802c748:	aa08      	add	r2, sp, #32
 802c74a:	c203      	stmia	r2!, {r0, r1}
 802c74c:	6818      	ldr	r0, [r3, #0]
 802c74e:	6859      	ldr	r1, [r3, #4]
 802c750:	aa0a      	add	r2, sp, #40	@ 0x28
 802c752:	c203      	stmia	r2!, {r0, r1}
 802c754:	a808      	add	r0, sp, #32
 802c756:	f7ee f807 	bl	801a768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802c75a:	4621      	mov	r1, r4
 802c75c:	a80a      	add	r0, sp, #40	@ 0x28
 802c75e:	f7ee f847 	bl	801a7f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802c762:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 802c766:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 802c76a:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 802c76e:	f002 0301 	and.w	r3, r2, #1
 802c772:	9303      	str	r3, [sp, #12]
 802c774:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802c778:	f003 0101 	and.w	r1, r3, #1
 802c77c:	9102      	str	r1, [sp, #8]
 802c77e:	9802      	ldr	r0, [sp, #8]
 802c780:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 802c784:	4403      	add	r3, r0
 802c786:	fb01 2303 	mla	r3, r1, r3, r2
 802c78a:	f04f 0a02 	mov.w	sl, #2
 802c78e:	fb93 f3fa 	sdiv	r3, r3, sl
 802c792:	441d      	add	r5, r3
 802c794:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 802c798:	441a      	add	r2, r3
 802c79a:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 802c79e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 802c7a2:	4a3f      	ldr	r2, [pc, #252]	@ (802c8a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 802c7a4:	9205      	str	r2, [sp, #20]
 802c7a6:	4419      	add	r1, r3
 802c7a8:	6810      	ldr	r0, [r2, #0]
 802c7aa:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 802c7ae:	6803      	ldr	r3, [r0, #0]
 802c7b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802c7b2:	4798      	blx	r3
 802c7b4:	4b3b      	ldr	r3, [pc, #236]	@ (802c8a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 802c7b6:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 802c7ba:	8819      	ldrh	r1, [r3, #0]
 802c7bc:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 802c7c0:	fb01 c404 	mla	r4, r1, r4, ip
 802c7c4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802c7c8:	434f      	muls	r7, r1
 802c7ca:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 802c7ce:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802c7d2:	3604      	adds	r6, #4
 802c7d4:	9204      	str	r2, [sp, #16]
 802c7d6:	9b04      	ldr	r3, [sp, #16]
 802c7d8:	429c      	cmp	r4, r3
 802c7da:	d258      	bcs.n	802c88e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 802c7dc:	9b03      	ldr	r3, [sp, #12]
 802c7de:	2b00      	cmp	r3, #0
 802c7e0:	d034      	beq.n	802c84c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802c7e2:	782b      	ldrb	r3, [r5, #0]
 802c7e4:	f003 030f 	and.w	r3, r3, #15
 802c7e8:	1c6f      	adds	r7, r5, #1
 802c7ea:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802c7ee:	0e0b      	lsrs	r3, r1, #24
 802c7f0:	d006      	beq.n	802c800 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802c7f2:	8822      	ldrh	r2, [r4, #0]
 802c7f4:	9300      	str	r3, [sp, #0]
 802c7f6:	4640      	mov	r0, r8
 802c7f8:	464b      	mov	r3, r9
 802c7fa:	f7ff ff43 	bl	802c684 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802c7fe:	8020      	strh	r0, [r4, #0]
 802c800:	3402      	adds	r4, #2
 802c802:	f10b 3aff 	add.w	sl, fp, #4294967295
 802c806:	f1ba 0f01 	cmp.w	sl, #1
 802c80a:	dd22      	ble.n	802c852 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 802c80c:	783b      	ldrb	r3, [r7, #0]
 802c80e:	091b      	lsrs	r3, r3, #4
 802c810:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802c814:	0e0b      	lsrs	r3, r1, #24
 802c816:	d006      	beq.n	802c826 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 802c818:	8822      	ldrh	r2, [r4, #0]
 802c81a:	9300      	str	r3, [sp, #0]
 802c81c:	4640      	mov	r0, r8
 802c81e:	464b      	mov	r3, r9
 802c820:	f7ff ff30 	bl	802c684 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802c824:	8020      	strh	r0, [r4, #0]
 802c826:	f817 3b01 	ldrb.w	r3, [r7], #1
 802c82a:	f003 030f 	and.w	r3, r3, #15
 802c82e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802c832:	0e0b      	lsrs	r3, r1, #24
 802c834:	d006      	beq.n	802c844 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 802c836:	8862      	ldrh	r2, [r4, #2]
 802c838:	9300      	str	r3, [sp, #0]
 802c83a:	4640      	mov	r0, r8
 802c83c:	464b      	mov	r3, r9
 802c83e:	f7ff ff21 	bl	802c684 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802c842:	8060      	strh	r0, [r4, #2]
 802c844:	3404      	adds	r4, #4
 802c846:	f1aa 0a02 	sub.w	sl, sl, #2
 802c84a:	e7dc      	b.n	802c806 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802c84c:	462f      	mov	r7, r5
 802c84e:	46da      	mov	sl, fp
 802c850:	e7d9      	b.n	802c806 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802c852:	d10d      	bne.n	802c870 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 802c854:	783b      	ldrb	r3, [r7, #0]
 802c856:	091b      	lsrs	r3, r3, #4
 802c858:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802c85c:	0e0b      	lsrs	r3, r1, #24
 802c85e:	d006      	beq.n	802c86e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 802c860:	8822      	ldrh	r2, [r4, #0]
 802c862:	9300      	str	r3, [sp, #0]
 802c864:	4640      	mov	r0, r8
 802c866:	464b      	mov	r3, r9
 802c868:	f7ff ff0c 	bl	802c684 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802c86c:	8020      	strh	r0, [r4, #0]
 802c86e:	3402      	adds	r4, #2
 802c870:	9b06      	ldr	r3, [sp, #24]
 802c872:	9a02      	ldr	r2, [sp, #8]
 802c874:	881b      	ldrh	r3, [r3, #0]
 802c876:	eba3 030b 	sub.w	r3, r3, fp
 802c87a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802c87e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802c882:	4413      	add	r3, r2
 802c884:	9a07      	ldr	r2, [sp, #28]
 802c886:	fb93 f3f2 	sdiv	r3, r3, r2
 802c88a:	441d      	add	r5, r3
 802c88c:	e7a3      	b.n	802c7d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802c88e:	9b05      	ldr	r3, [sp, #20]
 802c890:	6818      	ldr	r0, [r3, #0]
 802c892:	6803      	ldr	r3, [r0, #0]
 802c894:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802c896:	4798      	blx	r3
 802c898:	b00d      	add	sp, #52	@ 0x34
 802c89a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c89e:	bf00      	nop
 802c8a0:	2000e40c 	.word	0x2000e40c
 802c8a4:	2000e406 	.word	0x2000e406

0802c8a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 802c8a8:	b570      	push	{r4, r5, r6, lr}
 802c8aa:	1214      	asrs	r4, r2, #8
 802c8ac:	788d      	ldrb	r5, [r1, #2]
 802c8ae:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802c8b2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802c8b6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802c8ba:	fb15 f503 	smulbb	r5, r5, r3
 802c8be:	fb04 5506 	mla	r5, r4, r6, r5
 802c8c2:	10d0      	asrs	r0, r2, #3
 802c8c4:	784c      	ldrb	r4, [r1, #1]
 802c8c6:	7809      	ldrb	r1, [r1, #0]
 802c8c8:	00d2      	lsls	r2, r2, #3
 802c8ca:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802c8ce:	b2d2      	uxtb	r2, r2
 802c8d0:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 802c8d4:	fb14 f403 	smulbb	r4, r4, r3
 802c8d8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 802c8dc:	fb11 f303 	smulbb	r3, r1, r3
 802c8e0:	fb00 4406 	mla	r4, r0, r6, r4
 802c8e4:	fb02 3306 	mla	r3, r2, r6, r3
 802c8e8:	b2ad      	uxth	r5, r5
 802c8ea:	b29b      	uxth	r3, r3
 802c8ec:	b2a4      	uxth	r4, r4
 802c8ee:	1c68      	adds	r0, r5, #1
 802c8f0:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 802c8f4:	1c62      	adds	r2, r4, #1
 802c8f6:	1c58      	adds	r0, r3, #1
 802c8f8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802c8fc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802c900:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 802c904:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802c908:	0964      	lsrs	r4, r4, #5
 802c90a:	4328      	orrs	r0, r5
 802c90c:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802c910:	4320      	orrs	r0, r4
 802c912:	bd70      	pop	{r4, r5, r6, pc}

0802c914 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 802c914:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c918:	b08f      	sub	sp, #60	@ 0x3c
 802c91a:	461c      	mov	r4, r3
 802c91c:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 802c920:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802c922:	4682      	mov	sl, r0
 802c924:	460e      	mov	r6, r1
 802c926:	4615      	mov	r5, r2
 802c928:	2f00      	cmp	r7, #0
 802c92a:	f000 8142 	beq.w	802cbb2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 802c92e:	6820      	ldr	r0, [r4, #0]
 802c930:	6861      	ldr	r1, [r4, #4]
 802c932:	aa0a      	add	r2, sp, #40	@ 0x28
 802c934:	c203      	stmia	r2!, {r0, r1}
 802c936:	6818      	ldr	r0, [r3, #0]
 802c938:	6859      	ldr	r1, [r3, #4]
 802c93a:	aa0c      	add	r2, sp, #48	@ 0x30
 802c93c:	c203      	stmia	r2!, {r0, r1}
 802c93e:	a80a      	add	r0, sp, #40	@ 0x28
 802c940:	f7ed ff12 	bl	801a768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802c944:	4621      	mov	r1, r4
 802c946:	a80c      	add	r0, sp, #48	@ 0x30
 802c948:	f7ed ff52 	bl	801a7f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802c94c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 802c950:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 802c954:	f002 0301 	and.w	r3, r2, #1
 802c958:	9306      	str	r3, [sp, #24]
 802c95a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802c95e:	f003 0101 	and.w	r1, r3, #1
 802c962:	9105      	str	r1, [sp, #20]
 802c964:	9805      	ldr	r0, [sp, #20]
 802c966:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 802c96a:	4403      	add	r3, r0
 802c96c:	fb01 2303 	mla	r3, r1, r3, r2
 802c970:	f04f 0802 	mov.w	r8, #2
 802c974:	fb93 f3f8 	sdiv	r3, r3, r8
 802c978:	441e      	add	r6, r3
 802c97a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 802c97e:	441a      	add	r2, r3
 802c980:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 802c984:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 802c988:	4419      	add	r1, r3
 802c98a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 802c98e:	9303      	str	r3, [sp, #12]
 802c990:	4b89      	ldr	r3, [pc, #548]	@ (802cbb8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802c992:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 802c996:	6818      	ldr	r0, [r3, #0]
 802c998:	6803      	ldr	r3, [r0, #0]
 802c99a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802c99c:	4798      	blx	r3
 802c99e:	4a87      	ldr	r2, [pc, #540]	@ (802cbbc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 802c9a0:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 802c9a4:	8813      	ldrh	r3, [r2, #0]
 802c9a6:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 802c9aa:	2fff      	cmp	r7, #255	@ 0xff
 802c9ac:	fb03 9404 	mla	r4, r3, r4, r9
 802c9b0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802c9b4:	f105 0504 	add.w	r5, r5, #4
 802c9b8:	4694      	mov	ip, r2
 802c9ba:	fb03 f30b 	mul.w	r3, r3, fp
 802c9be:	d071      	beq.n	802caa4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 802c9c0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802c9c4:	43f9      	mvns	r1, r7
 802c9c6:	e9cd 3207 	strd	r3, r2, [sp, #28]
 802c9ca:	b2c9      	uxtb	r1, r1
 802c9cc:	9104      	str	r1, [sp, #16]
 802c9ce:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 802c9d2:	9b07      	ldr	r3, [sp, #28]
 802c9d4:	42a3      	cmp	r3, r4
 802c9d6:	f240 80e7 	bls.w	802cba8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802c9da:	9b06      	ldr	r3, [sp, #24]
 802c9dc:	2b00      	cmp	r3, #0
 802c9de:	d03d      	beq.n	802ca5c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 802c9e0:	7831      	ldrb	r1, [r6, #0]
 802c9e2:	9b04      	ldr	r3, [sp, #16]
 802c9e4:	8822      	ldrh	r2, [r4, #0]
 802c9e6:	9300      	str	r3, [sp, #0]
 802c9e8:	f001 010f 	and.w	r1, r1, #15
 802c9ec:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802c9f0:	463b      	mov	r3, r7
 802c9f2:	4429      	add	r1, r5
 802c9f4:	4650      	mov	r0, sl
 802c9f6:	f7ff ff57 	bl	802c8a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802c9fa:	9b03      	ldr	r3, [sp, #12]
 802c9fc:	f824 0b02 	strh.w	r0, [r4], #2
 802ca00:	f106 0801 	add.w	r8, r6, #1
 802ca04:	f103 3bff 	add.w	fp, r3, #4294967295
 802ca08:	f1bb 0f01 	cmp.w	fp, #1
 802ca0c:	46a1      	mov	r9, r4
 802ca0e:	f104 0404 	add.w	r4, r4, #4
 802ca12:	dd27      	ble.n	802ca64 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 802ca14:	f898 1000 	ldrb.w	r1, [r8]
 802ca18:	9b04      	ldr	r3, [sp, #16]
 802ca1a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802ca1e:	9300      	str	r3, [sp, #0]
 802ca20:	0909      	lsrs	r1, r1, #4
 802ca22:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802ca26:	463b      	mov	r3, r7
 802ca28:	4429      	add	r1, r5
 802ca2a:	4650      	mov	r0, sl
 802ca2c:	f7ff ff3c 	bl	802c8a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802ca30:	f824 0c04 	strh.w	r0, [r4, #-4]
 802ca34:	f818 1b01 	ldrb.w	r1, [r8], #1
 802ca38:	9b04      	ldr	r3, [sp, #16]
 802ca3a:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802ca3e:	9300      	str	r3, [sp, #0]
 802ca40:	f001 010f 	and.w	r1, r1, #15
 802ca44:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802ca48:	463b      	mov	r3, r7
 802ca4a:	4429      	add	r1, r5
 802ca4c:	4650      	mov	r0, sl
 802ca4e:	f7ff ff2b 	bl	802c8a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802ca52:	f1ab 0b02 	sub.w	fp, fp, #2
 802ca56:	f824 0c02 	strh.w	r0, [r4, #-2]
 802ca5a:	e7d5      	b.n	802ca08 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 802ca5c:	46b0      	mov	r8, r6
 802ca5e:	f8dd b00c 	ldr.w	fp, [sp, #12]
 802ca62:	e7d1      	b.n	802ca08 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 802ca64:	d10f      	bne.n	802ca86 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 802ca66:	f898 1000 	ldrb.w	r1, [r8]
 802ca6a:	9b04      	ldr	r3, [sp, #16]
 802ca6c:	f8b9 2000 	ldrh.w	r2, [r9]
 802ca70:	9300      	str	r3, [sp, #0]
 802ca72:	0909      	lsrs	r1, r1, #4
 802ca74:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802ca78:	463b      	mov	r3, r7
 802ca7a:	4429      	add	r1, r5
 802ca7c:	4650      	mov	r0, sl
 802ca7e:	f7ff ff13 	bl	802c8a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802ca82:	f829 0b02 	strh.w	r0, [r9], #2
 802ca86:	9b08      	ldr	r3, [sp, #32]
 802ca88:	9a05      	ldr	r2, [sp, #20]
 802ca8a:	881c      	ldrh	r4, [r3, #0]
 802ca8c:	9b03      	ldr	r3, [sp, #12]
 802ca8e:	1ae4      	subs	r4, r4, r3
 802ca90:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802ca94:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 802ca98:	4413      	add	r3, r2
 802ca9a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802ca9c:	fb93 f3f2 	sdiv	r3, r3, r2
 802caa0:	441e      	add	r6, r3
 802caa2:	e796      	b.n	802c9d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 802caa4:	4f46      	ldr	r7, [pc, #280]	@ (802cbc0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 802caa6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802caaa:	42a3      	cmp	r3, r4
 802caac:	d97c      	bls.n	802cba8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802caae:	9a06      	ldr	r2, [sp, #24]
 802cab0:	2a00      	cmp	r2, #0
 802cab2:	d054      	beq.n	802cb5e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 802cab4:	7830      	ldrb	r0, [r6, #0]
 802cab6:	f000 000f 	and.w	r0, r0, #15
 802caba:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802cabe:	eb05 0e00 	add.w	lr, r5, r0
 802cac2:	5c28      	ldrb	r0, [r5, r0]
 802cac4:	f89e 2002 	ldrb.w	r2, [lr, #2]
 802cac8:	f89e e001 	ldrb.w	lr, [lr, #1]
 802cacc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802cad0:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 802cad4:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802cad8:	ea42 020e 	orr.w	r2, r2, lr
 802cadc:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 802cae0:	f824 2b02 	strh.w	r2, [r4], #2
 802cae4:	9a03      	ldr	r2, [sp, #12]
 802cae6:	1c71      	adds	r1, r6, #1
 802cae8:	f102 3eff 	add.w	lr, r2, #4294967295
 802caec:	f1be 0f01 	cmp.w	lr, #1
 802caf0:	4620      	mov	r0, r4
 802caf2:	f104 0404 	add.w	r4, r4, #4
 802caf6:	dd36      	ble.n	802cb66 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 802caf8:	7808      	ldrb	r0, [r1, #0]
 802cafa:	0900      	lsrs	r0, r0, #4
 802cafc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802cb00:	eb05 0a00 	add.w	sl, r5, r0
 802cb04:	f1ae 0e02 	sub.w	lr, lr, #2
 802cb08:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802cb0c:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802cb10:	00d2      	lsls	r2, r2, #3
 802cb12:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 802cb16:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802cb1a:	ea49 0202 	orr.w	r2, r9, r2
 802cb1e:	f815 9000 	ldrb.w	r9, [r5, r0]
 802cb22:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802cb26:	f824 2c04 	strh.w	r2, [r4, #-4]
 802cb2a:	f811 0b01 	ldrb.w	r0, [r1], #1
 802cb2e:	f000 000f 	and.w	r0, r0, #15
 802cb32:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802cb36:	eb05 0a00 	add.w	sl, r5, r0
 802cb3a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802cb3e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802cb42:	00d2      	lsls	r2, r2, #3
 802cb44:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 802cb48:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802cb4c:	ea49 0202 	orr.w	r2, r9, r2
 802cb50:	f815 9000 	ldrb.w	r9, [r5, r0]
 802cb54:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802cb58:	f824 2c02 	strh.w	r2, [r4, #-2]
 802cb5c:	e7c6      	b.n	802caec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802cb5e:	4631      	mov	r1, r6
 802cb60:	f8dd e00c 	ldr.w	lr, [sp, #12]
 802cb64:	e7c2      	b.n	802caec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802cb66:	d111      	bne.n	802cb8c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 802cb68:	7809      	ldrb	r1, [r1, #0]
 802cb6a:	0909      	lsrs	r1, r1, #4
 802cb6c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802cb70:	186c      	adds	r4, r5, r1
 802cb72:	5c69      	ldrb	r1, [r5, r1]
 802cb74:	78a2      	ldrb	r2, [r4, #2]
 802cb76:	7864      	ldrb	r4, [r4, #1]
 802cb78:	00e4      	lsls	r4, r4, #3
 802cb7a:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802cb7e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802cb82:	4322      	orrs	r2, r4
 802cb84:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 802cb88:	f820 2b02 	strh.w	r2, [r0], #2
 802cb8c:	9a03      	ldr	r2, [sp, #12]
 802cb8e:	f8bc 4000 	ldrh.w	r4, [ip]
 802cb92:	9905      	ldr	r1, [sp, #20]
 802cb94:	1aa4      	subs	r4, r4, r2
 802cb96:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 802cb9a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802cb9e:	440a      	add	r2, r1
 802cba0:	fb92 f2f8 	sdiv	r2, r2, r8
 802cba4:	4416      	add	r6, r2
 802cba6:	e780      	b.n	802caaa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 802cba8:	4b03      	ldr	r3, [pc, #12]	@ (802cbb8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802cbaa:	6818      	ldr	r0, [r3, #0]
 802cbac:	6803      	ldr	r3, [r0, #0]
 802cbae:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802cbb0:	4798      	blx	r3
 802cbb2:	b00f      	add	sp, #60	@ 0x3c
 802cbb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802cbb8:	2000e40c 	.word	0x2000e40c
 802cbbc:	2000e406 	.word	0x2000e406
 802cbc0:	fffff800 	.word	0xfffff800

0802cbc4 <CRC_Lock>:
 802cbc4:	b530      	push	{r4, r5, lr}
 802cbc6:	4a2d      	ldr	r2, [pc, #180]	@ (802cc7c <CRC_Lock+0xb8>)
 802cbc8:	6813      	ldr	r3, [r2, #0]
 802cbca:	f023 0301 	bic.w	r3, r3, #1
 802cbce:	6013      	str	r3, [r2, #0]
 802cbd0:	4b2b      	ldr	r3, [pc, #172]	@ (802cc80 <CRC_Lock+0xbc>)
 802cbd2:	681c      	ldr	r4, [r3, #0]
 802cbd4:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 802cbd8:	4014      	ands	r4, r2
 802cbda:	f24c 2540 	movw	r5, #49728	@ 0xc240
 802cbde:	42ac      	cmp	r4, r5
 802cbe0:	d005      	beq.n	802cbee <CRC_Lock+0x2a>
 802cbe2:	681c      	ldr	r4, [r3, #0]
 802cbe4:	f24c 2570 	movw	r5, #49776	@ 0xc270
 802cbe8:	4014      	ands	r4, r2
 802cbea:	42ac      	cmp	r4, r5
 802cbec:	d125      	bne.n	802cc3a <CRC_Lock+0x76>
 802cbee:	4b25      	ldr	r3, [pc, #148]	@ (802cc84 <CRC_Lock+0xc0>)
 802cbf0:	681b      	ldr	r3, [r3, #0]
 802cbf2:	2b00      	cmp	r3, #0
 802cbf4:	d139      	bne.n	802cc6a <CRC_Lock+0xa6>
 802cbf6:	4b24      	ldr	r3, [pc, #144]	@ (802cc88 <CRC_Lock+0xc4>)
 802cbf8:	681a      	ldr	r2, [r3, #0]
 802cbfa:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802cbfe:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 802cc02:	d00d      	beq.n	802cc20 <CRC_Lock+0x5c>
 802cc04:	681a      	ldr	r2, [r3, #0]
 802cc06:	f240 4483 	movw	r4, #1155	@ 0x483
 802cc0a:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802cc0e:	42a2      	cmp	r2, r4
 802cc10:	d006      	beq.n	802cc20 <CRC_Lock+0x5c>
 802cc12:	681b      	ldr	r3, [r3, #0]
 802cc14:	f240 4285 	movw	r2, #1157	@ 0x485
 802cc18:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802cc1c:	4293      	cmp	r3, r2
 802cc1e:	d124      	bne.n	802cc6a <CRC_Lock+0xa6>
 802cc20:	4b1a      	ldr	r3, [pc, #104]	@ (802cc8c <CRC_Lock+0xc8>)
 802cc22:	2201      	movs	r2, #1
 802cc24:	601a      	str	r2, [r3, #0]
 802cc26:	681a      	ldr	r2, [r3, #0]
 802cc28:	2a00      	cmp	r2, #0
 802cc2a:	d1fc      	bne.n	802cc26 <CRC_Lock+0x62>
 802cc2c:	4b18      	ldr	r3, [pc, #96]	@ (802cc90 <CRC_Lock+0xcc>)
 802cc2e:	6018      	str	r0, [r3, #0]
 802cc30:	6818      	ldr	r0, [r3, #0]
 802cc32:	1a43      	subs	r3, r0, r1
 802cc34:	4258      	negs	r0, r3
 802cc36:	4158      	adcs	r0, r3
 802cc38:	e00e      	b.n	802cc58 <CRC_Lock+0x94>
 802cc3a:	681b      	ldr	r3, [r3, #0]
 802cc3c:	4013      	ands	r3, r2
 802cc3e:	f24d 2220 	movw	r2, #53792	@ 0xd220
 802cc42:	4293      	cmp	r3, r2
 802cc44:	d111      	bne.n	802cc6a <CRC_Lock+0xa6>
 802cc46:	4b13      	ldr	r3, [pc, #76]	@ (802cc94 <CRC_Lock+0xd0>)
 802cc48:	681b      	ldr	r3, [r3, #0]
 802cc4a:	f240 4286 	movw	r2, #1158	@ 0x486
 802cc4e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802cc52:	4293      	cmp	r3, r2
 802cc54:	d001      	beq.n	802cc5a <CRC_Lock+0x96>
 802cc56:	2000      	movs	r0, #0
 802cc58:	bd30      	pop	{r4, r5, pc}
 802cc5a:	4b0f      	ldr	r3, [pc, #60]	@ (802cc98 <CRC_Lock+0xd4>)
 802cc5c:	2201      	movs	r2, #1
 802cc5e:	601a      	str	r2, [r3, #0]
 802cc60:	681a      	ldr	r2, [r3, #0]
 802cc62:	2a00      	cmp	r2, #0
 802cc64:	d1fc      	bne.n	802cc60 <CRC_Lock+0x9c>
 802cc66:	4b0d      	ldr	r3, [pc, #52]	@ (802cc9c <CRC_Lock+0xd8>)
 802cc68:	e7e1      	b.n	802cc2e <CRC_Lock+0x6a>
 802cc6a:	4b0d      	ldr	r3, [pc, #52]	@ (802cca0 <CRC_Lock+0xdc>)
 802cc6c:	2201      	movs	r2, #1
 802cc6e:	601a      	str	r2, [r3, #0]
 802cc70:	681a      	ldr	r2, [r3, #0]
 802cc72:	2a00      	cmp	r2, #0
 802cc74:	d1fc      	bne.n	802cc70 <CRC_Lock+0xac>
 802cc76:	4b0b      	ldr	r3, [pc, #44]	@ (802cca4 <CRC_Lock+0xe0>)
 802cc78:	e7d9      	b.n	802cc2e <CRC_Lock+0x6a>
 802cc7a:	bf00      	nop
 802cc7c:	e0002000 	.word	0xe0002000
 802cc80:	e000ed00 	.word	0xe000ed00
 802cc84:	e0042000 	.word	0xe0042000
 802cc88:	5c001000 	.word	0x5c001000
 802cc8c:	58024c08 	.word	0x58024c08
 802cc90:	58024c00 	.word	0x58024c00
 802cc94:	46008ff0 	.word	0x46008ff0
 802cc98:	46024c08 	.word	0x46024c08
 802cc9c:	46024c00 	.word	0x46024c00
 802cca0:	40023008 	.word	0x40023008
 802cca4:	40023000 	.word	0x40023000

0802cca8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 802cca8:	6101      	str	r1, [r0, #16]
 802ccaa:	4770      	bx	lr

0802ccac <_ZN8touchgfx8Gestures4tickEv>:
 802ccac:	7b83      	ldrb	r3, [r0, #14]
 802ccae:	b14b      	cbz	r3, 802ccc4 <_ZN8touchgfx8Gestures4tickEv+0x18>
 802ccb0:	8903      	ldrh	r3, [r0, #8]
 802ccb2:	3301      	adds	r3, #1
 802ccb4:	b29b      	uxth	r3, r3
 802ccb6:	2b07      	cmp	r3, #7
 802ccb8:	8103      	strh	r3, [r0, #8]
 802ccba:	bf81      	itttt	hi
 802ccbc:	2300      	movhi	r3, #0
 802ccbe:	8143      	strhhi	r3, [r0, #10]
 802ccc0:	8183      	strhhi	r3, [r0, #12]
 802ccc2:	7383      	strbhi	r3, [r0, #14]
 802ccc4:	4770      	bx	lr
	...

0802ccc8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 802ccc8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 802cccc:	4698      	mov	r8, r3
 802ccce:	8883      	ldrh	r3, [r0, #4]
 802ccd0:	f8ad 3006 	strh.w	r3, [sp, #6]
 802ccd4:	eba8 0303 	sub.w	r3, r8, r3
 802ccd8:	b21b      	sxth	r3, r3
 802ccda:	4604      	mov	r4, r0
 802ccdc:	2b00      	cmp	r3, #0
 802ccde:	4617      	mov	r7, r2
 802cce0:	4a18      	ldr	r2, [pc, #96]	@ (802cd44 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802cce2:	9200      	str	r2, [sp, #0]
 802cce4:	bfb8      	it	lt
 802cce6:	425b      	neglt	r3, r3
 802cce8:	8aa2      	ldrh	r2, [r4, #20]
 802ccea:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 802ccee:	f8ad 800a 	strh.w	r8, [sp, #10]
 802ccf2:	b21b      	sxth	r3, r3
 802ccf4:	460e      	mov	r6, r1
 802ccf6:	4293      	cmp	r3, r2
 802ccf8:	88c1      	ldrh	r1, [r0, #6]
 802ccfa:	f8ad 1008 	strh.w	r1, [sp, #8]
 802ccfe:	f04f 0000 	mov.w	r0, #0
 802cd02:	f88d 0004 	strb.w	r0, [sp, #4]
 802cd06:	f8ad 500c 	strh.w	r5, [sp, #12]
 802cd0a:	dc07      	bgt.n	802cd1c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 802cd0c:	1a69      	subs	r1, r5, r1
 802cd0e:	b209      	sxth	r1, r1
 802cd10:	2900      	cmp	r1, #0
 802cd12:	bfb8      	it	lt
 802cd14:	4249      	neglt	r1, r1
 802cd16:	b209      	sxth	r1, r1
 802cd18:	428a      	cmp	r2, r1
 802cd1a:	da10      	bge.n	802cd3e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 802cd1c:	6920      	ldr	r0, [r4, #16]
 802cd1e:	6803      	ldr	r3, [r0, #0]
 802cd20:	4669      	mov	r1, sp
 802cd22:	685b      	ldr	r3, [r3, #4]
 802cd24:	4798      	blx	r3
 802cd26:	eba8 0606 	sub.w	r6, r8, r6
 802cd2a:	2300      	movs	r3, #0
 802cd2c:	1bef      	subs	r7, r5, r7
 802cd2e:	2001      	movs	r0, #1
 802cd30:	8123      	strh	r3, [r4, #8]
 802cd32:	8166      	strh	r6, [r4, #10]
 802cd34:	81a7      	strh	r7, [r4, #12]
 802cd36:	f8a4 8004 	strh.w	r8, [r4, #4]
 802cd3a:	80e5      	strh	r5, [r4, #6]
 802cd3c:	73a0      	strb	r0, [r4, #14]
 802cd3e:	b004      	add	sp, #16
 802cd40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802cd44:	08033204 	.word	0x08033204

0802cd48 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 802cd48:	b5f0      	push	{r4, r5, r6, r7, lr}
 802cd4a:	461e      	mov	r6, r3
 802cd4c:	1e4b      	subs	r3, r1, #1
 802cd4e:	2b01      	cmp	r3, #1
 802cd50:	b085      	sub	sp, #20
 802cd52:	4604      	mov	r4, r0
 802cd54:	460d      	mov	r5, r1
 802cd56:	4617      	mov	r7, r2
 802cd58:	d84b      	bhi.n	802cdf2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 802cd5a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802cd5e:	1cd3      	adds	r3, r2, #3
 802cd60:	b29b      	uxth	r3, r3
 802cd62:	2b06      	cmp	r3, #6
 802cd64:	d916      	bls.n	802cd94 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 802cd66:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 802ce08 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802cd6a:	f8cd c004 	str.w	ip, [sp, #4]
 802cd6e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802cd72:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802cd76:	6900      	ldr	r0, [r0, #16]
 802cd78:	f8ad 100c 	strh.w	r1, [sp, #12]
 802cd7c:	f04f 0c00 	mov.w	ip, #0
 802cd80:	f88d c008 	strb.w	ip, [sp, #8]
 802cd84:	f8ad 200a 	strh.w	r2, [sp, #10]
 802cd88:	f8ad 300e 	strh.w	r3, [sp, #14]
 802cd8c:	6803      	ldr	r3, [r0, #0]
 802cd8e:	a901      	add	r1, sp, #4
 802cd90:	689b      	ldr	r3, [r3, #8]
 802cd92:	4798      	blx	r3
 802cd94:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802cd98:	1cd3      	adds	r3, r2, #3
 802cd9a:	b29b      	uxth	r3, r3
 802cd9c:	2b06      	cmp	r3, #6
 802cd9e:	d916      	bls.n	802cdce <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802cda0:	f8df c064 	ldr.w	ip, [pc, #100]	@ 802ce08 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802cda4:	f8cd c004 	str.w	ip, [sp, #4]
 802cda8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802cdac:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802cdb0:	6920      	ldr	r0, [r4, #16]
 802cdb2:	f8ad 100c 	strh.w	r1, [sp, #12]
 802cdb6:	f04f 0c01 	mov.w	ip, #1
 802cdba:	f88d c008 	strb.w	ip, [sp, #8]
 802cdbe:	f8ad 200a 	strh.w	r2, [sp, #10]
 802cdc2:	f8ad 300e 	strh.w	r3, [sp, #14]
 802cdc6:	6803      	ldr	r3, [r0, #0]
 802cdc8:	a901      	add	r1, sp, #4
 802cdca:	689b      	ldr	r3, [r3, #8]
 802cdcc:	4798      	blx	r3
 802cdce:	4b0d      	ldr	r3, [pc, #52]	@ (802ce04 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 802cdd0:	9301      	str	r3, [sp, #4]
 802cdd2:	6920      	ldr	r0, [r4, #16]
 802cdd4:	f88d 5008 	strb.w	r5, [sp, #8]
 802cdd8:	2300      	movs	r3, #0
 802cdda:	f8ad 700a 	strh.w	r7, [sp, #10]
 802cdde:	f8ad 600c 	strh.w	r6, [sp, #12]
 802cde2:	f8ad 300e 	strh.w	r3, [sp, #14]
 802cde6:	6803      	ldr	r3, [r0, #0]
 802cde8:	a901      	add	r1, sp, #4
 802cdea:	681b      	ldr	r3, [r3, #0]
 802cdec:	4798      	blx	r3
 802cdee:	b005      	add	sp, #20
 802cdf0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802cdf2:	2900      	cmp	r1, #0
 802cdf4:	d1eb      	bne.n	802cdce <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802cdf6:	80a2      	strh	r2, [r4, #4]
 802cdf8:	80c6      	strh	r6, [r0, #6]
 802cdfa:	60a1      	str	r1, [r4, #8]
 802cdfc:	81a1      	strh	r1, [r4, #12]
 802cdfe:	73a1      	strb	r1, [r4, #14]
 802ce00:	e7e5      	b.n	802cdce <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802ce02:	bf00      	nop
 802ce04:	080331f0 	.word	0x080331f0
 802ce08:	08033218 	.word	0x08033218

0802ce0c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
 802ce0c:	10c9      	asrs	r1, r1, #3
 802ce0e:	2900      	cmp	r1, #0
 802ce10:	bfb8      	it	lt
 802ce12:	4249      	neglt	r1, r1
 802ce14:	2801      	cmp	r0, #1
 802ce16:	d108      	bne.n	802ce2a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 802ce18:	f3c1 0008 	ubfx	r0, r1, #0, #9
 802ce1c:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 802ce20:	4601      	mov	r1, r0
 802ce22:	dd02      	ble.n	802ce2a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 802ce24:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
 802ce28:	4770      	bx	lr
 802ce2a:	29ff      	cmp	r1, #255	@ 0xff
 802ce2c:	bfa8      	it	ge
 802ce2e:	21ff      	movge	r1, #255	@ 0xff
 802ce30:	4608      	mov	r0, r1
 802ce32:	4770      	bx	lr

0802ce34 <_ZN8touchgfx10Rasterizer6lineToEii>:
 802ce34:	b410      	push	{r4}
 802ce36:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 802ce3a:	429c      	cmp	r4, r3
 802ce3c:	d803      	bhi.n	802ce46 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 802ce3e:	f85d 4b04 	ldr.w	r4, [sp], #4
 802ce42:	f7eb bf81 	b.w	8018d48 <_ZN8touchgfx7Outline6lineToEii>
 802ce46:	f85d 4b04 	ldr.w	r4, [sp], #4
 802ce4a:	4770      	bx	lr

0802ce4c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 802ce4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ce50:	b08b      	sub	sp, #44	@ 0x2c
 802ce52:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802ce56:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 802ce5a:	9308      	str	r3, [sp, #32]
 802ce5c:	4606      	mov	r6, r0
 802ce5e:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 802ce62:	9309      	str	r3, [sp, #36]	@ 0x24
 802ce64:	468a      	mov	sl, r1
 802ce66:	f7ec f8dc 	bl	8019022 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 802ce6a:	68b5      	ldr	r5, [r6, #8]
 802ce6c:	4604      	mov	r4, r0
 802ce6e:	2d00      	cmp	r5, #0
 802ce70:	d044      	beq.n	802cefc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802ce72:	6873      	ldr	r3, [r6, #4]
 802ce74:	42ab      	cmp	r3, r5
 802ce76:	d33d      	bcc.n	802cef4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 802ce78:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 802ce7c:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
 802ce80:	eb02 0b03 	add.w	fp, r2, r3
 802ce84:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 802ce88:	fb02 1203 	mla	r2, r2, r3, r1
 802ce8c:	9205      	str	r2, [sp, #20]
 802ce8e:	1e6a      	subs	r2, r5, #1
 802ce90:	9204      	str	r2, [sp, #16]
 802ce92:	f04f 0800 	mov.w	r8, #0
 802ce96:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 802ce9a:	f9b4 7000 	ldrsh.w	r7, [r4]
 802ce9e:	454b      	cmp	r3, r9
 802cea0:	463a      	mov	r2, r7
 802cea2:	d008      	beq.n	802ceb6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 802cea4:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
 802cea8:	eb03 0b09 	add.w	fp, r3, r9
 802ceac:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 802ceb0:	fb03 1309 	mla	r3, r3, r9, r1
 802ceb4:	9305      	str	r3, [sp, #20]
 802ceb6:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 802ceba:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 802cebe:	4498      	add	r8, r3
 802cec0:	9b04      	ldr	r3, [sp, #16]
 802cec2:	3b01      	subs	r3, #1
 802cec4:	9304      	str	r3, [sp, #16]
 802cec6:	9b04      	ldr	r3, [sp, #16]
 802cec8:	3301      	adds	r3, #1
 802ceca:	d015      	beq.n	802cef8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 802cecc:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 802ced0:	42bb      	cmp	r3, r7
 802ced2:	d117      	bne.n	802cf04 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 802ced4:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 802ced8:	9b04      	ldr	r3, [sp, #16]
 802ceda:	4548      	cmp	r0, r9
 802cedc:	f103 33ff 	add.w	r3, r3, #4294967295
 802cee0:	d17f      	bne.n	802cfe2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 802cee2:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 802cee6:	4401      	add	r1, r0
 802cee8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 802ceec:	4480      	add	r8, r0
 802ceee:	e7e9      	b.n	802cec4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 802cef0:	461f      	mov	r7, r3
 802cef2:	e044      	b.n	802cf7e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 802cef4:	2000      	movs	r0, #0
 802cef6:	e002      	b.n	802cefe <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 802cef8:	2900      	cmp	r1, #0
 802cefa:	d16f      	bne.n	802cfdc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 802cefc:	2001      	movs	r0, #1
 802cefe:	b00b      	add	sp, #44	@ 0x2c
 802cf00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802cf04:	2900      	cmp	r1, #0
 802cf06:	d030      	beq.n	802cf6a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 802cf08:	2f00      	cmp	r7, #0
 802cf0a:	db29      	blt.n	802cf60 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802cf0c:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 802cf10:	42bb      	cmp	r3, r7
 802cf12:	dd25      	ble.n	802cf60 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802cf14:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 802cf18:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 802cf1c:	f7ff ff76 	bl	802ce0c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 802cf20:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802cf22:	fb10 f003 	smulbb	r0, r0, r3
 802cf26:	b280      	uxth	r0, r0
 802cf28:	1c41      	adds	r1, r0, #1
 802cf2a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802cf2e:	1209      	asrs	r1, r1, #8
 802cf30:	f011 0fff 	tst.w	r1, #255	@ 0xff
 802cf34:	d014      	beq.n	802cf60 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802cf36:	9808      	ldr	r0, [sp, #32]
 802cf38:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 802cf3a:	b2c9      	uxtb	r1, r1
 802cf3c:	b2ba      	uxth	r2, r7
 802cf3e:	9102      	str	r1, [sp, #8]
 802cf40:	2101      	movs	r1, #1
 802cf42:	4413      	add	r3, r2
 802cf44:	9101      	str	r1, [sp, #4]
 802cf46:	4402      	add	r2, r0
 802cf48:	fa0f f18b 	sxth.w	r1, fp
 802cf4c:	f8da 0000 	ldr.w	r0, [sl]
 802cf50:	9100      	str	r1, [sp, #0]
 802cf52:	6941      	ldr	r1, [r0, #20]
 802cf54:	b21b      	sxth	r3, r3
 802cf56:	460d      	mov	r5, r1
 802cf58:	b212      	sxth	r2, r2
 802cf5a:	9905      	ldr	r1, [sp, #20]
 802cf5c:	4650      	mov	r0, sl
 802cf5e:	47a8      	blx	r5
 802cf60:	9b04      	ldr	r3, [sp, #16]
 802cf62:	3301      	adds	r3, #1
 802cf64:	f107 0201 	add.w	r2, r7, #1
 802cf68:	d0c8      	beq.n	802cefc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802cf6a:	f9b4 7000 	ldrsh.w	r7, [r4]
 802cf6e:	1abb      	subs	r3, r7, r2
 802cf70:	2b00      	cmp	r3, #0
 802cf72:	dd31      	ble.n	802cfd8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802cf74:	2a00      	cmp	r2, #0
 802cf76:	dabb      	bge.n	802cef0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 802cf78:	2f00      	cmp	r7, #0
 802cf7a:	dd2d      	ble.n	802cfd8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802cf7c:	2200      	movs	r2, #0
 802cf7e:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 802cf82:	19d1      	adds	r1, r2, r7
 802cf84:	4299      	cmp	r1, r3
 802cf86:	db02      	blt.n	802cf8e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 802cf88:	1a9f      	subs	r7, r3, r2
 802cf8a:	2f00      	cmp	r7, #0
 802cf8c:	dd24      	ble.n	802cfd8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802cf8e:	ea4f 1188 	mov.w	r1, r8, lsl #6
 802cf92:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 802cf96:	f7ff ff39 	bl	802ce0c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 802cf9a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802cf9c:	fb10 f003 	smulbb	r0, r0, r3
 802cfa0:	b280      	uxth	r0, r0
 802cfa2:	1c41      	adds	r1, r0, #1
 802cfa4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802cfa8:	1209      	asrs	r1, r1, #8
 802cfaa:	f011 0fff 	tst.w	r1, #255	@ 0xff
 802cfae:	d013      	beq.n	802cfd8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802cfb0:	9808      	ldr	r0, [sp, #32]
 802cfb2:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 802cfb4:	b292      	uxth	r2, r2
 802cfb6:	b2c9      	uxtb	r1, r1
 802cfb8:	4413      	add	r3, r2
 802cfba:	9102      	str	r1, [sp, #8]
 802cfbc:	4402      	add	r2, r0
 802cfbe:	b23f      	sxth	r7, r7
 802cfc0:	f8da 0000 	ldr.w	r0, [sl]
 802cfc4:	9701      	str	r7, [sp, #4]
 802cfc6:	fa0f f18b 	sxth.w	r1, fp
 802cfca:	9100      	str	r1, [sp, #0]
 802cfcc:	6947      	ldr	r7, [r0, #20]
 802cfce:	9905      	ldr	r1, [sp, #20]
 802cfd0:	b21b      	sxth	r3, r3
 802cfd2:	b212      	sxth	r2, r2
 802cfd4:	4650      	mov	r0, sl
 802cfd6:	47b8      	blx	r7
 802cfd8:	464b      	mov	r3, r9
 802cfda:	e75c      	b.n	802ce96 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 802cfdc:	2f00      	cmp	r7, #0
 802cfde:	da95      	bge.n	802cf0c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 802cfe0:	e78c      	b.n	802cefc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802cfe2:	2900      	cmp	r1, #0
 802cfe4:	d0f8      	beq.n	802cfd8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802cfe6:	e78f      	b.n	802cf08 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

0802cfe8 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
 802cfe8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 802cfec:	461e      	mov	r6, r3
 802cfee:	4b36      	ldr	r3, [pc, #216]	@ (802d0c8 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
 802cff0:	e9c0 3100 	strd	r3, r1, [r0]
 802cff4:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 802cff8:	8103      	strh	r3, [r0, #8]
 802cffa:	2500      	movs	r5, #0
 802cffc:	f89d 3020 	ldrb.w	r3, [sp, #32]
 802d000:	7283      	strb	r3, [r0, #10]
 802d002:	f100 0814 	add.w	r8, r0, #20
 802d006:	4604      	mov	r4, r0
 802d008:	8185      	strh	r5, [r0, #12]
 802d00a:	81c5      	strh	r5, [r0, #14]
 802d00c:	8205      	strh	r5, [r0, #16]
 802d00e:	8245      	strh	r5, [r0, #18]
 802d010:	4640      	mov	r0, r8
 802d012:	4617      	mov	r7, r2
 802d014:	f7eb f9d0 	bl	80183b8 <_ZN8touchgfx7OutlineC1Ev>
 802d018:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
 802d01c:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
 802d020:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
 802d024:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
 802d028:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 802d02c:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
 802d030:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
 802d034:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
 802d038:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
 802d03c:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
 802d040:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
 802d044:	6830      	ldr	r0, [r6, #0]
 802d046:	6871      	ldr	r1, [r6, #4]
 802d048:	8872      	ldrh	r2, [r6, #2]
 802d04a:	8835      	ldrh	r5, [r6, #0]
 802d04c:	466b      	mov	r3, sp
 802d04e:	c303      	stmia	r3!, {r0, r1}
 802d050:	887b      	ldrh	r3, [r7, #2]
 802d052:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
 802d056:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
 802d05a:	4413      	add	r3, r2
 802d05c:	883a      	ldrh	r2, [r7, #0]
 802d05e:	81e3      	strh	r3, [r4, #14]
 802d060:	442a      	add	r2, r5
 802d062:	81a2      	strh	r2, [r4, #12]
 802d064:	8220      	strh	r0, [r4, #16]
 802d066:	8261      	strh	r1, [r4, #18]
 802d068:	4668      	mov	r0, sp
 802d06a:	4639      	mov	r1, r7
 802d06c:	f7ed fbc0 	bl	801a7f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802d070:	f104 000c 	add.w	r0, r4, #12
 802d074:	f7ed fb78 	bl	801a768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802d078:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 802d07c:	f8bd 2000 	ldrh.w	r2, [sp]
 802d080:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 802d084:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 802d088:	4640      	mov	r0, r8
 802d08a:	f7eb f979 	bl	8018380 <_ZN8touchgfx7Outline5resetEv>
 802d08e:	f9bd 3000 	ldrsh.w	r3, [sp]
 802d092:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
 802d096:	015b      	lsls	r3, r3, #5
 802d098:	64e3      	str	r3, [r4, #76]	@ 0x4c
 802d09a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 802d09e:	015b      	lsls	r3, r3, #5
 802d0a0:	6523      	str	r3, [r4, #80]	@ 0x50
 802d0a2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 802d0a6:	015b      	lsls	r3, r3, #5
 802d0a8:	6563      	str	r3, [r4, #84]	@ 0x54
 802d0aa:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 802d0ae:	015b      	lsls	r3, r3, #5
 802d0b0:	65a3      	str	r3, [r4, #88]	@ 0x58
 802d0b2:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 802d0b6:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
 802d0ba:	4620      	mov	r0, r4
 802d0bc:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
 802d0c0:	b002      	add	sp, #8
 802d0c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802d0c6:	bf00      	nop
 802d0c8:	08033554 	.word	0x08033554

0802d0cc <_ZN8touchgfx6Canvas5closeEv>:
 802d0cc:	b538      	push	{r3, r4, r5, lr}
 802d0ce:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 802d0d2:	4604      	mov	r4, r0
 802d0d4:	b193      	cbz	r3, 802d0fc <_ZN8touchgfx6Canvas5closeEv+0x30>
 802d0d6:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
 802d0da:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
 802d0de:	4213      	tst	r3, r2
 802d0e0:	d10c      	bne.n	802d0fc <_ZN8touchgfx6Canvas5closeEv+0x30>
 802d0e2:	f100 0514 	add.w	r5, r0, #20
 802d0e6:	b123      	cbz	r3, 802d0f2 <_ZN8touchgfx6Canvas5closeEv+0x26>
 802d0e8:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
 802d0ec:	4628      	mov	r0, r5
 802d0ee:	f7ff fea1 	bl	802ce34 <_ZN8touchgfx10Rasterizer6lineToEii>
 802d0f2:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
 802d0f6:	4628      	mov	r0, r5
 802d0f8:	f7ff fe9c 	bl	802ce34 <_ZN8touchgfx10Rasterizer6lineToEii>
 802d0fc:	2300      	movs	r3, #0
 802d0fe:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802d102:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
 802d106:	4298      	cmp	r0, r3
 802d108:	bf34      	ite	cc
 802d10a:	2000      	movcc	r0, #0
 802d10c:	2001      	movcs	r0, #1
 802d10e:	bd38      	pop	{r3, r4, r5, pc}

0802d110 <_ZN8touchgfx6Canvas6renderEh>:
 802d110:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 802d114:	7a85      	ldrb	r5, [r0, #10]
 802d116:	4369      	muls	r1, r5
 802d118:	1c4d      	adds	r5, r1, #1
 802d11a:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802d11e:	122d      	asrs	r5, r5, #8
 802d120:	4604      	mov	r4, r0
 802d122:	f000 8099 	beq.w	802d258 <_ZN8touchgfx6Canvas6renderEh+0x148>
 802d126:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
 802d12a:	2b00      	cmp	r3, #0
 802d12c:	f000 8094 	beq.w	802d258 <_ZN8touchgfx6Canvas6renderEh+0x148>
 802d130:	f7ff ffcc 	bl	802d0cc <_ZN8touchgfx6Canvas5closeEv>
 802d134:	4607      	mov	r7, r0
 802d136:	2800      	cmp	r0, #0
 802d138:	d045      	beq.n	802d1c6 <_ZN8touchgfx6Canvas6renderEh+0xb6>
 802d13a:	6860      	ldr	r0, [r4, #4]
 802d13c:	4e47      	ldr	r6, [pc, #284]	@ (802d25c <_ZN8touchgfx6Canvas6renderEh+0x14c>)
 802d13e:	6803      	ldr	r3, [r0, #0]
 802d140:	6837      	ldr	r7, [r6, #0]
 802d142:	689b      	ldr	r3, [r3, #8]
 802d144:	4798      	blx	r3
 802d146:	4601      	mov	r1, r0
 802d148:	4638      	mov	r0, r7
 802d14a:	f7e6 fcd7 	bl	8013afc <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 802d14e:	4607      	mov	r7, r0
 802d150:	f7e6 f86a 	bl	8013228 <_ZN8touchgfx3HAL3lcdEv>
 802d154:	6803      	ldr	r3, [r0, #0]
 802d156:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802d158:	4798      	blx	r3
 802d15a:	4680      	mov	r8, r0
 802d15c:	f7e6 f864 	bl	8013228 <_ZN8touchgfx3HAL3lcdEv>
 802d160:	6803      	ldr	r3, [r0, #0]
 802d162:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802d164:	4798      	blx	r3
 802d166:	280b      	cmp	r0, #11
 802d168:	d85b      	bhi.n	802d222 <_ZN8touchgfx6Canvas6renderEh+0x112>
 802d16a:	e8df f000 	tbb	[pc, r0]
 802d16e:	5c51      	.short	0x5c51
 802d170:	305a066c 	.word	0x305a066c
 802d174:	65656540 	.word	0x65656540
 802d178:	6565      	.short	0x6565
 802d17a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802d17e:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 802d182:	2208      	movs	r2, #8
 802d184:	fb91 f2f2 	sdiv	r2, r1, r2
 802d188:	fb08 2303 	mla	r3, r8, r3, r2
 802d18c:	441f      	add	r7, r3
 802d18e:	424b      	negs	r3, r1
 802d190:	f003 0307 	and.w	r3, r3, #7
 802d194:	f001 0107 	and.w	r1, r1, #7
 802d198:	bf58      	it	pl
 802d19a:	4259      	negpl	r1, r3
 802d19c:	b2c9      	uxtb	r1, r1
 802d19e:	b2ed      	uxtb	r5, r5
 802d1a0:	463a      	mov	r2, r7
 802d1a2:	e9cd 1500 	strd	r1, r5, [sp]
 802d1a6:	fa0f f388 	sxth.w	r3, r8
 802d1aa:	6861      	ldr	r1, [r4, #4]
 802d1ac:	f104 0014 	add.w	r0, r4, #20
 802d1b0:	f7ff fe4c 	bl	802ce4c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 802d1b4:	4607      	mov	r7, r0
 802d1b6:	6860      	ldr	r0, [r4, #4]
 802d1b8:	6803      	ldr	r3, [r0, #0]
 802d1ba:	691b      	ldr	r3, [r3, #16]
 802d1bc:	4798      	blx	r3
 802d1be:	6830      	ldr	r0, [r6, #0]
 802d1c0:	6803      	ldr	r3, [r0, #0]
 802d1c2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802d1c4:	4798      	blx	r3
 802d1c6:	4638      	mov	r0, r7
 802d1c8:	b002      	add	sp, #8
 802d1ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802d1ce:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802d1d2:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 802d1d6:	2204      	movs	r2, #4
 802d1d8:	fb91 f2f2 	sdiv	r2, r1, r2
 802d1dc:	fb08 2303 	mla	r3, r8, r3, r2
 802d1e0:	441f      	add	r7, r3
 802d1e2:	424b      	negs	r3, r1
 802d1e4:	f003 0303 	and.w	r3, r3, #3
 802d1e8:	f001 0103 	and.w	r1, r1, #3
 802d1ec:	e7d4      	b.n	802d198 <_ZN8touchgfx6Canvas6renderEh+0x88>
 802d1ee:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 802d1f2:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802d1f6:	2900      	cmp	r1, #0
 802d1f8:	f04f 0202 	mov.w	r2, #2
 802d1fc:	fb91 f2f2 	sdiv	r2, r1, r2
 802d200:	f001 0101 	and.w	r1, r1, #1
 802d204:	fb08 2303 	mla	r3, r8, r3, r2
 802d208:	441f      	add	r7, r3
 802d20a:	bfb8      	it	lt
 802d20c:	4249      	neglt	r1, r1
 802d20e:	e7c5      	b.n	802d19c <_ZN8touchgfx6Canvas6renderEh+0x8c>
 802d210:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802d214:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802d218:	fb08 f303 	mul.w	r3, r8, r3
 802d21c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802d220:	441f      	add	r7, r3
 802d222:	2100      	movs	r1, #0
 802d224:	e7bb      	b.n	802d19e <_ZN8touchgfx6Canvas6renderEh+0x8e>
 802d226:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802d22a:	fb08 f203 	mul.w	r2, r8, r3
 802d22e:	89a3      	ldrh	r3, [r4, #12]
 802d230:	2103      	movs	r1, #3
 802d232:	fb13 2301 	smlabb	r3, r3, r1, r2
 802d236:	e7f3      	b.n	802d220 <_ZN8touchgfx6Canvas6renderEh+0x110>
 802d238:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802d23c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802d240:	fb08 2303 	mla	r3, r8, r3, r2
 802d244:	e7ec      	b.n	802d220 <_ZN8touchgfx6Canvas6renderEh+0x110>
 802d246:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802d24a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802d24e:	fb08 f303 	mul.w	r3, r8, r3
 802d252:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 802d256:	e7e3      	b.n	802d220 <_ZN8touchgfx6Canvas6renderEh+0x110>
 802d258:	2701      	movs	r7, #1
 802d25a:	e7b4      	b.n	802d1c6 <_ZN8touchgfx6Canvas6renderEh+0xb6>
 802d25c:	2000e40c 	.word	0x2000e40c

0802d260 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 802d260:	b510      	push	{r4, lr}
 802d262:	4b06      	ldr	r3, [pc, #24]	@ (802d27c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
 802d264:	781b      	ldrb	r3, [r3, #0]
 802d266:	2b01      	cmp	r3, #1
 802d268:	d107      	bne.n	802d27a <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
 802d26a:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 802d26e:	680b      	ldr	r3, [r1, #0]
 802d270:	6814      	ldr	r4, [r2, #0]
 802d272:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 802d276:	6013      	str	r3, [r2, #0]
 802d278:	600c      	str	r4, [r1, #0]
 802d27a:	bd10      	pop	{r4, pc}
 802d27c:	2000e404 	.word	0x2000e404

0802d280 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 802d280:	b513      	push	{r0, r1, r4, lr}
 802d282:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 802d286:	4604      	mov	r4, r0
 802d288:	e9cd 2100 	strd	r2, r1, [sp]
 802d28c:	b9a3      	cbnz	r3, 802d2b8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 802d28e:	466a      	mov	r2, sp
 802d290:	a901      	add	r1, sp, #4
 802d292:	4620      	mov	r0, r4
 802d294:	f7ff ffe4 	bl	802d260 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802d298:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 802d29a:	9901      	ldr	r1, [sp, #4]
 802d29c:	9a00      	ldr	r2, [sp, #0]
 802d29e:	1ac9      	subs	r1, r1, r3
 802d2a0:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 802d2a2:	9101      	str	r1, [sp, #4]
 802d2a4:	1ad2      	subs	r2, r2, r3
 802d2a6:	2a00      	cmp	r2, #0
 802d2a8:	9200      	str	r2, [sp, #0]
 802d2aa:	da0b      	bge.n	802d2c4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 802d2ac:	2301      	movs	r3, #1
 802d2ae:	2900      	cmp	r1, #0
 802d2b0:	da0e      	bge.n	802d2d0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 802d2b2:	f043 0304 	orr.w	r3, r3, #4
 802d2b6:	e013      	b.n	802d2e0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 802d2b8:	f7ff ff08 	bl	802d0cc <_ZN8touchgfx6Canvas5closeEv>
 802d2bc:	2800      	cmp	r0, #0
 802d2be:	d1e6      	bne.n	802d28e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 802d2c0:	b002      	add	sp, #8
 802d2c2:	bd10      	pop	{r4, pc}
 802d2c4:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 802d2c6:	429a      	cmp	r2, r3
 802d2c8:	bfac      	ite	ge
 802d2ca:	2302      	movge	r3, #2
 802d2cc:	2300      	movlt	r3, #0
 802d2ce:	e7ee      	b.n	802d2ae <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 802d2d0:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 802d2d2:	4281      	cmp	r1, r0
 802d2d4:	bfac      	ite	ge
 802d2d6:	2008      	movge	r0, #8
 802d2d8:	2000      	movlt	r0, #0
 802d2da:	4318      	orrs	r0, r3
 802d2dc:	b2c3      	uxtb	r3, r0
 802d2de:	b158      	cbz	r0, 802d2f8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 802d2e0:	2200      	movs	r2, #0
 802d2e2:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 802d2e6:	9901      	ldr	r1, [sp, #4]
 802d2e8:	9a00      	ldr	r2, [sp, #0]
 802d2ea:	66e1      	str	r1, [r4, #108]	@ 0x6c
 802d2ec:	6722      	str	r2, [r4, #112]	@ 0x70
 802d2ee:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
 802d2f2:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
 802d2f6:	e7e3      	b.n	802d2c0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 802d2f8:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 802d2fc:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 802d300:	4298      	cmp	r0, r3
 802d302:	d803      	bhi.n	802d30c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 802d304:	f104 0014 	add.w	r0, r4, #20
 802d308:	f7eb fd38 	bl	8018d7c <_ZN8touchgfx7Outline6moveToEii>
 802d30c:	2301      	movs	r3, #1
 802d30e:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802d312:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 802d316:	2300      	movs	r3, #0
 802d318:	e7e5      	b.n	802d2e6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802d31a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802d31a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802d31c:	ab02      	add	r3, sp, #8
 802d31e:	4604      	mov	r4, r0
 802d320:	f843 2d08 	str.w	r2, [r3, #-8]!
 802d324:	9101      	str	r1, [sp, #4]
 802d326:	461a      	mov	r2, r3
 802d328:	a901      	add	r1, sp, #4
 802d32a:	f7ff ff99 	bl	802d260 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802d32e:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 802d330:	9901      	ldr	r1, [sp, #4]
 802d332:	9a00      	ldr	r2, [sp, #0]
 802d334:	1ac9      	subs	r1, r1, r3
 802d336:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 802d338:	9101      	str	r1, [sp, #4]
 802d33a:	1ad2      	subs	r2, r2, r3
 802d33c:	2a00      	cmp	r2, #0
 802d33e:	9200      	str	r2, [sp, #0]
 802d340:	db1c      	blt.n	802d37c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802d342:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 802d344:	429a      	cmp	r2, r3
 802d346:	bfac      	ite	ge
 802d348:	2002      	movge	r0, #2
 802d34a:	2000      	movlt	r0, #0
 802d34c:	2900      	cmp	r1, #0
 802d34e:	db17      	blt.n	802d380 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 802d350:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 802d352:	4299      	cmp	r1, r3
 802d354:	bfac      	ite	ge
 802d356:	2308      	movge	r3, #8
 802d358:	2300      	movlt	r3, #0
 802d35a:	4303      	orrs	r3, r0
 802d35c:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
 802d360:	b2dd      	uxtb	r5, r3
 802d362:	b978      	cbnz	r0, 802d384 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 802d364:	f104 0014 	add.w	r0, r4, #20
 802d368:	f7ff fd64 	bl	802ce34 <_ZN8touchgfx10Rasterizer6lineToEii>
 802d36c:	9b01      	ldr	r3, [sp, #4]
 802d36e:	6623      	str	r3, [r4, #96]	@ 0x60
 802d370:	9b00      	ldr	r3, [sp, #0]
 802d372:	6663      	str	r3, [r4, #100]	@ 0x64
 802d374:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
 802d378:	b002      	add	sp, #8
 802d37a:	bd70      	pop	{r4, r5, r6, pc}
 802d37c:	2001      	movs	r0, #1
 802d37e:	e7e5      	b.n	802d34c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 802d380:	2304      	movs	r3, #4
 802d382:	e7ea      	b.n	802d35a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802d384:	b113      	cbz	r3, 802d38c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802d386:	ea10 0305 	ands.w	r3, r0, r5
 802d38a:	d11c      	bne.n	802d3c6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 802d38c:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 802d390:	f104 0614 	add.w	r6, r4, #20
 802d394:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
 802d398:	b98b      	cbnz	r3, 802d3be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802d39a:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 802d39e:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 802d3a2:	4298      	cmp	r0, r3
 802d3a4:	d802      	bhi.n	802d3ac <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802d3a6:	4630      	mov	r0, r6
 802d3a8:	f7eb fce8 	bl	8018d7c <_ZN8touchgfx7Outline6moveToEii>
 802d3ac:	2301      	movs	r3, #1
 802d3ae:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802d3b2:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 802d3b6:	e9dd 2100 	ldrd	r2, r1, [sp]
 802d3ba:	4630      	mov	r0, r6
 802d3bc:	e7d4      	b.n	802d368 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802d3be:	4630      	mov	r0, r6
 802d3c0:	f7ff fd38 	bl	802ce34 <_ZN8touchgfx10Rasterizer6lineToEii>
 802d3c4:	e7f7      	b.n	802d3b6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 802d3c6:	461d      	mov	r5, r3
 802d3c8:	e7d0      	b.n	802d36c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

0802d3cc <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
 802d3cc:	b538      	push	{r3, r4, r5, lr}
 802d3ce:	ed2d 8b10 	vpush	{d8-d15}
 802d3d2:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
 802d3d6:	ed9f ba5a 	vldr	s22, [pc, #360]	@ 802d540 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
 802d3da:	4605      	mov	r5, r0
 802d3dc:	eeb0 ca40 	vmov.f32	s24, s0
 802d3e0:	eef0 ca60 	vmov.f32	s25, s1
 802d3e4:	eeb0 da41 	vmov.f32	s26, s2
 802d3e8:	eef0 da61 	vmov.f32	s27, s3
 802d3ec:	eeb0 ea42 	vmov.f32	s28, s4
 802d3f0:	eef0 ea62 	vmov.f32	s29, s5
 802d3f4:	460c      	mov	r4, r1
 802d3f6:	eef0 aa6b 	vmov.f32	s21, s23
 802d3fa:	2c08      	cmp	r4, #8
 802d3fc:	d86e      	bhi.n	802d4dc <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
 802d3fe:	ee7e 6a4c 	vsub.f32	s13, s28, s24
 802d402:	ee7d 7aee 	vsub.f32	s15, s27, s29
 802d406:	ee3d 6a4e 	vsub.f32	s12, s26, s28
 802d40a:	ee3e 7aec 	vsub.f32	s14, s29, s25
 802d40e:	ee66 7ae7 	vnmul.f32	s15, s13, s15
 802d412:	ee3c fa0d 	vadd.f32	s30, s24, s26
 802d416:	eee6 7a07 	vfma.f32	s15, s12, s14
 802d41a:	ee7c faad 	vadd.f32	s31, s25, s27
 802d41e:	ee7d 9a0e 	vadd.f32	s19, s26, s28
 802d422:	ee3d aaae 	vadd.f32	s20, s27, s29
 802d426:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802d42a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d42e:	ee2f fa2b 	vmul.f32	s30, s30, s23
 802d432:	ee6f faab 	vmul.f32	s31, s31, s23
 802d436:	ee69 9aab 	vmul.f32	s19, s19, s23
 802d43a:	ee2a aa2b 	vmul.f32	s20, s20, s23
 802d43e:	bf48      	it	mi
 802d440:	eef1 7a67 	vnegmi.f32	s15, s15
 802d444:	ee7f 8a29 	vadd.f32	s17, s30, s19
 802d448:	ee3f 9a8a 	vadd.f32	s18, s31, s20
 802d44c:	eef4 7acb 	vcmpe.f32	s15, s22
 802d450:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d454:	ee68 8aab 	vmul.f32	s17, s17, s23
 802d458:	ee29 9a2b 	vmul.f32	s18, s18, s23
 802d45c:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
 802d460:	dd3f      	ble.n	802d4e2 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
 802d462:	ee27 7a07 	vmul.f32	s14, s14, s14
 802d466:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802d46a:	eea6 7aa6 	vfma.f32	s14, s13, s13
 802d46e:	ee27 7a06 	vmul.f32	s14, s14, s12
 802d472:	eef4 7ac7 	vcmpe.f32	s15, s14
 802d476:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d47a:	d847      	bhi.n	802d50c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 802d47c:	ee7e 0a4d 	vsub.f32	s1, s28, s26
 802d480:	ee3e 0aed 	vsub.f32	s0, s29, s27
 802d484:	f000 fa3b 	bl	802d8fe <atan2f>
 802d488:	ee7d 0a4c 	vsub.f32	s1, s26, s24
 802d48c:	eeb0 8a40 	vmov.f32	s16, s0
 802d490:	ee3d 0aec 	vsub.f32	s0, s27, s25
 802d494:	f000 fa33 	bl	802d8fe <atan2f>
 802d498:	ee38 0a40 	vsub.f32	s0, s16, s0
 802d49c:	eddf 7a29 	vldr	s15, [pc, #164]	@ 802d544 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
 802d4a0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802d4a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d4a8:	bf48      	it	mi
 802d4aa:	eeb1 0a40 	vnegmi.f32	s0, s0
 802d4ae:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802d4b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d4b6:	bfa4      	itt	ge
 802d4b8:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 802d548 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
 802d4bc:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 802d4c0:	eddf 7a22 	vldr	s15, [pc, #136]	@ 802d54c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
 802d4c4:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802d4c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d4cc:	d51e      	bpl.n	802d50c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 802d4ce:	eef0 0a49 	vmov.f32	s1, s18
 802d4d2:	eeb0 0a68 	vmov.f32	s0, s17
 802d4d6:	4628      	mov	r0, r5
 802d4d8:	f7e7 fd06 	bl	8014ee8 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 802d4dc:	ecbd 8b10 	vpop	{d8-d15}
 802d4e0:	bd38      	pop	{r3, r4, r5, pc}
 802d4e2:	ee7c 7a0e 	vadd.f32	s15, s24, s28
 802d4e6:	eeb0 7a68 	vmov.f32	s14, s17
 802d4ea:	eea7 7aea 	vfms.f32	s14, s15, s21
 802d4ee:	ee7c 7aae 	vadd.f32	s15, s25, s29
 802d4f2:	eef0 6a49 	vmov.f32	s13, s18
 802d4f6:	eee7 6aea 	vfms.f32	s13, s15, s21
 802d4fa:	ee66 7aa6 	vmul.f32	s15, s13, s13
 802d4fe:	eee7 7a07 	vfma.f32	s15, s14, s14
 802d502:	eef4 7ac6 	vcmpe.f32	s15, s12
 802d506:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d50a:	d9e0      	bls.n	802d4ce <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
 802d50c:	3401      	adds	r4, #1
 802d50e:	eef0 0a6c 	vmov.f32	s1, s25
 802d512:	eeb0 0a4c 	vmov.f32	s0, s24
 802d516:	4621      	mov	r1, r4
 802d518:	eef0 2a49 	vmov.f32	s5, s18
 802d51c:	eeb0 2a68 	vmov.f32	s4, s17
 802d520:	eef0 1a6f 	vmov.f32	s3, s31
 802d524:	eeb0 1a4f 	vmov.f32	s2, s30
 802d528:	4628      	mov	r0, r5
 802d52a:	f7ff ff4f 	bl	802d3cc <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 802d52e:	eef0 da4a 	vmov.f32	s27, s20
 802d532:	eeb0 da69 	vmov.f32	s26, s19
 802d536:	eef0 ca49 	vmov.f32	s25, s18
 802d53a:	eeb0 ca68 	vmov.f32	s24, s17
 802d53e:	e75c      	b.n	802d3fa <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
 802d540:	2edbe6ff 	.word	0x2edbe6ff
 802d544:	40490fdb 	.word	0x40490fdb
 802d548:	40c90fdb 	.word	0x40c90fdb
 802d54c:	3dcccccd 	.word	0x3dcccccd

0802d550 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
 802d550:	b530      	push	{r4, r5, lr}
 802d552:	ed2d 8b10 	vpush	{d8-d15}
 802d556:	4604      	mov	r4, r0
 802d558:	b085      	sub	sp, #20
 802d55a:	eef0 8a40 	vmov.f32	s17, s0
 802d55e:	eef0 9a60 	vmov.f32	s19, s1
 802d562:	eef0 fa41 	vmov.f32	s31, s2
 802d566:	eeb0 fa61 	vmov.f32	s30, s3
 802d56a:	eef0 ba42 	vmov.f32	s23, s4
 802d56e:	eeb0 ca62 	vmov.f32	s24, s5
 802d572:	eef0 aa43 	vmov.f32	s21, s6
 802d576:	eeb0 ba63 	vmov.f32	s22, s7
 802d57a:	460d      	mov	r5, r1
 802d57c:	2d08      	cmp	r5, #8
 802d57e:	f200 8115 	bhi.w	802d7ac <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x25c>
 802d582:	ee3b 6aaa 	vadd.f32	s12, s23, s21
 802d586:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 802d58a:	ee7f 6aab 	vadd.f32	s13, s31, s23
 802d58e:	ee26 6a27 	vmul.f32	s12, s12, s15
 802d592:	ee38 daaf 	vadd.f32	s26, s17, s31
 802d596:	ed8d 6a01 	vstr	s12, [sp, #4]
 802d59a:	eea6 6aa7 	vfma.f32	s12, s13, s15
 802d59e:	ee2d da27 	vmul.f32	s26, s26, s15
 802d5a2:	ee7c ca0b 	vadd.f32	s25, s24, s22
 802d5a6:	eeb0 ea4d 	vmov.f32	s28, s26
 802d5aa:	eea6 eaa7 	vfma.f32	s28, s13, s15
 802d5ae:	ee6c caa7 	vmul.f32	s25, s25, s15
 802d5b2:	ee66 6a27 	vmul.f32	s13, s12, s15
 802d5b6:	ee3f 7a0c 	vadd.f32	s14, s30, s24
 802d5ba:	edcd 6a03 	vstr	s13, [sp, #12]
 802d5be:	ee79 da8f 	vadd.f32	s27, s19, s30
 802d5c2:	eef0 6a6c 	vmov.f32	s13, s25
 802d5c6:	eee7 6a27 	vfma.f32	s13, s14, s15
 802d5ca:	ee6d daa7 	vmul.f32	s27, s27, s15
 802d5ce:	ee2e ea27 	vmul.f32	s28, s28, s15
 802d5d2:	eef0 ea6d 	vmov.f32	s29, s27
 802d5d6:	eee7 ea27 	vfma.f32	s29, s14, s15
 802d5da:	ee26 7aa7 	vmul.f32	s14, s13, s15
 802d5de:	ee6e eaa7 	vmul.f32	s29, s29, s15
 802d5e2:	ed8d 7a02 	vstr	s14, [sp, #8]
 802d5e6:	ed9d 7a03 	vldr	s14, [sp, #12]
 802d5ea:	ee3e 9a07 	vadd.f32	s18, s28, s14
 802d5ee:	ed9d 7a02 	vldr	s14, [sp, #8]
 802d5f2:	ee3e aa87 	vadd.f32	s20, s29, s14
 802d5f6:	ee29 9a27 	vmul.f32	s18, s18, s15
 802d5fa:	ee2a aa27 	vmul.f32	s20, s20, s15
 802d5fe:	eef0 6a67 	vmov.f32	s13, s15
 802d602:	2d00      	cmp	r5, #0
 802d604:	f000 810d 	beq.w	802d822 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802d608:	ee7a 5ae8 	vsub.f32	s11, s21, s17
 802d60c:	ee3f 7a4b 	vsub.f32	s14, s30, s22
 802d610:	ee7b 7a69 	vsub.f32	s15, s22, s19
 802d614:	ee3f 6aea 	vsub.f32	s12, s31, s21
 802d618:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 802d61c:	ee3b 5aea 	vsub.f32	s10, s23, s21
 802d620:	eea6 7a27 	vfma.f32	s14, s12, s15
 802d624:	ee3c 6a4b 	vsub.f32	s12, s24, s22
 802d628:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 802d62c:	ee25 6ac6 	vnmul.f32	s12, s11, s12
 802d630:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d634:	eea5 6a27 	vfma.f32	s12, s10, s15
 802d638:	eddf 4a8b 	vldr	s9, [pc, #556]	@ 802d868 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 802d63c:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 802d640:	bf48      	it	mi
 802d642:	eeb1 7a47 	vnegmi.f32	s14, s14
 802d646:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d64a:	eeb4 7ae4 	vcmpe.f32	s14, s9
 802d64e:	bf48      	it	mi
 802d650:	eeb1 6a46 	vnegmi.f32	s12, s12
 802d654:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d658:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
 802d65c:	f340 80aa 	ble.w	802d7b4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x264>
 802d660:	eeb4 6ae4 	vcmpe.f32	s12, s9
 802d664:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d668:	dd5c      	ble.n	802d724 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d4>
 802d66a:	ee65 5aa5 	vmul.f32	s11, s11, s11
 802d66e:	ee37 7a06 	vadd.f32	s14, s14, s12
 802d672:	eee7 5aa7 	vfma.f32	s11, s15, s15
 802d676:	ee27 7a07 	vmul.f32	s14, s14, s14
 802d67a:	ee65 7a85 	vmul.f32	s15, s11, s10
 802d67e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802d682:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d686:	f200 80cc 	bhi.w	802d822 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802d68a:	ee7b 0aef 	vsub.f32	s1, s23, s31
 802d68e:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 802d692:	f000 f934 	bl	802d8fe <atan2f>
 802d696:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 802d69a:	eeb0 8a40 	vmov.f32	s16, s0
 802d69e:	ee3f 0a69 	vsub.f32	s0, s30, s19
 802d6a2:	f000 f92c 	bl	802d8fe <atan2f>
 802d6a6:	ee38 fa40 	vsub.f32	s30, s16, s0
 802d6aa:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 802d6ae:	eeb5 fac0 	vcmpe.f32	s30, #0.0
 802d6b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d6b6:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 802d6ba:	bf48      	it	mi
 802d6bc:	eeb1 fa4f 	vnegmi.f32	s30, s30
 802d6c0:	f000 f91d 	bl	802d8fe <atan2f>
 802d6c4:	ee30 0a48 	vsub.f32	s0, s0, s16
 802d6c8:	eddf 7a68 	vldr	s15, [pc, #416]	@ 802d86c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 802d6cc:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802d6d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d6d4:	eeb4 fae7 	vcmpe.f32	s30, s15
 802d6d8:	bf48      	it	mi
 802d6da:	eeb1 0a40 	vnegmi.f32	s0, s0
 802d6de:	eddf 7a63 	vldr	s15, [pc, #396]	@ 802d86c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 802d6e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d6e6:	bfa8      	it	ge
 802d6e8:	ed9f 7a61 	vldrge	s14, [pc, #388]	@ 802d870 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 802d6ec:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802d6f0:	bfa8      	it	ge
 802d6f2:	ee37 fa4f 	vsubge.f32	s30, s14, s30
 802d6f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d6fa:	bfa8      	it	ge
 802d6fc:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 802d870 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 802d700:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 802d874 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 802d704:	bfa8      	it	ge
 802d706:	ee37 0a40 	vsubge.f32	s0, s14, s0
 802d70a:	ee3f 0a00 	vadd.f32	s0, s30, s0
 802d70e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802d712:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d716:	f140 8084 	bpl.w	802d822 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802d71a:	eef0 0a4a 	vmov.f32	s1, s20
 802d71e:	eeb0 0a49 	vmov.f32	s0, s18
 802d722:	e040      	b.n	802d7a6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x256>
 802d724:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802d728:	ee27 7a07 	vmul.f32	s14, s14, s14
 802d72c:	eee5 7aa5 	vfma.f32	s15, s11, s11
 802d730:	ee67 7a85 	vmul.f32	s15, s15, s10
 802d734:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802d738:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d73c:	d871      	bhi.n	802d822 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802d73e:	ee7b 0aef 	vsub.f32	s1, s23, s31
 802d742:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 802d746:	f000 f8da 	bl	802d8fe <atan2f>
 802d74a:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 802d74e:	eeb0 8a40 	vmov.f32	s16, s0
 802d752:	ee3f 0a69 	vsub.f32	s0, s30, s19
 802d756:	f000 f8d2 	bl	802d8fe <atan2f>
 802d75a:	ee38 0a40 	vsub.f32	s0, s16, s0
 802d75e:	eddf 7a43 	vldr	s15, [pc, #268]	@ 802d86c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 802d762:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802d766:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d76a:	bf48      	it	mi
 802d76c:	eeb1 0a40 	vnegmi.f32	s0, s0
 802d770:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802d774:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d778:	bfa4      	itt	ge
 802d77a:	eddf 7a3d 	vldrge	s15, [pc, #244]	@ 802d870 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 802d77e:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 802d782:	eddf 7a3c 	vldr	s15, [pc, #240]	@ 802d874 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 802d786:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802d78a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d78e:	d548      	bpl.n	802d822 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802d790:	eef0 0a4f 	vmov.f32	s1, s30
 802d794:	eeb0 0a6f 	vmov.f32	s0, s31
 802d798:	4620      	mov	r0, r4
 802d79a:	f7e7 fba5 	bl	8014ee8 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 802d79e:	eef0 0a4c 	vmov.f32	s1, s24
 802d7a2:	eeb0 0a6b 	vmov.f32	s0, s23
 802d7a6:	4620      	mov	r0, r4
 802d7a8:	f7e7 fb9e 	bl	8014ee8 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 802d7ac:	b005      	add	sp, #20
 802d7ae:	ecbd 8b10 	vpop	{d8-d15}
 802d7b2:	bd30      	pop	{r4, r5, pc}
 802d7b4:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 802d868 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 802d7b8:	eeb4 6ac7 	vcmpe.f32	s12, s14
 802d7bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d7c0:	dd19      	ble.n	802d7f6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a6>
 802d7c2:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802d7c6:	ee26 7a06 	vmul.f32	s14, s12, s12
 802d7ca:	eee5 7aa5 	vfma.f32	s15, s11, s11
 802d7ce:	ee67 7a85 	vmul.f32	s15, s15, s10
 802d7d2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802d7d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d7da:	d822      	bhi.n	802d822 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802d7dc:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 802d7e0:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 802d7e4:	f000 f88b 	bl	802d8fe <atan2f>
 802d7e8:	ee7b 0aef 	vsub.f32	s1, s23, s31
 802d7ec:	eeb0 8a40 	vmov.f32	s16, s0
 802d7f0:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 802d7f4:	e7af      	b.n	802d756 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x206>
 802d7f6:	ee78 7aaa 	vadd.f32	s15, s17, s21
 802d7fa:	eeb0 7a49 	vmov.f32	s14, s18
 802d7fe:	eea7 7ae6 	vfms.f32	s14, s15, s13
 802d802:	ee79 7a8b 	vadd.f32	s15, s19, s22
 802d806:	eeb0 6a4a 	vmov.f32	s12, s20
 802d80a:	eea7 6ae6 	vfms.f32	s12, s15, s13
 802d80e:	ee66 7a06 	vmul.f32	s15, s12, s12
 802d812:	eee7 7a07 	vfma.f32	s15, s14, s14
 802d816:	eef4 7ac5 	vcmpe.f32	s15, s10
 802d81a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d81e:	f67f af7c 	bls.w	802d71a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1ca>
 802d822:	3501      	adds	r5, #1
 802d824:	eef0 0a69 	vmov.f32	s1, s19
 802d828:	eeb0 0a68 	vmov.f32	s0, s17
 802d82c:	4629      	mov	r1, r5
 802d82e:	eef0 3a4a 	vmov.f32	s7, s20
 802d832:	eeb0 3a49 	vmov.f32	s6, s18
 802d836:	eef0 2a6e 	vmov.f32	s5, s29
 802d83a:	eeb0 2a4e 	vmov.f32	s4, s28
 802d83e:	eef0 1a6d 	vmov.f32	s3, s27
 802d842:	eeb0 1a4d 	vmov.f32	s2, s26
 802d846:	4620      	mov	r0, r4
 802d848:	f7ff fe82 	bl	802d550 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 802d84c:	eeb0 ca6c 	vmov.f32	s24, s25
 802d850:	eddd ba01 	vldr	s23, [sp, #4]
 802d854:	ed9d fa02 	vldr	s30, [sp, #8]
 802d858:	eddd fa03 	vldr	s31, [sp, #12]
 802d85c:	eef0 9a4a 	vmov.f32	s19, s20
 802d860:	eef0 8a49 	vmov.f32	s17, s18
 802d864:	e68a      	b.n	802d57c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
 802d866:	bf00      	nop
 802d868:	2edbe6ff 	.word	0x2edbe6ff
 802d86c:	40490fdb 	.word	0x40490fdb
 802d870:	40c90fdb 	.word	0x40c90fdb
 802d874:	3dcccccd 	.word	0x3dcccccd

0802d878 <_ZN8touchgfx6CanvasD1Ev>:
 802d878:	b510      	push	{r4, lr}
 802d87a:	4b04      	ldr	r3, [pc, #16]	@ (802d88c <_ZN8touchgfx6CanvasD1Ev+0x14>)
 802d87c:	4604      	mov	r4, r0
 802d87e:	f840 3b14 	str.w	r3, [r0], #20
 802d882:	f7ea fd75 	bl	8018370 <_ZN8touchgfx7OutlineD1Ev>
 802d886:	4620      	mov	r0, r4
 802d888:	bd10      	pop	{r4, pc}
 802d88a:	bf00      	nop
 802d88c:	08033554 	.word	0x08033554

0802d890 <_ZN8touchgfx6CanvasD0Ev>:
 802d890:	b510      	push	{r4, lr}
 802d892:	4604      	mov	r4, r0
 802d894:	f7ff fff0 	bl	802d878 <_ZN8touchgfx6CanvasD1Ev>
 802d898:	4620      	mov	r0, r4
 802d89a:	2174      	movs	r1, #116	@ 0x74
 802d89c:	f000 f807 	bl	802d8ae <_ZdlPvj>
 802d8a0:	4620      	mov	r0, r4
 802d8a2:	bd10      	pop	{r4, pc}

0802d8a4 <__aeabi_atexit>:
 802d8a4:	460b      	mov	r3, r1
 802d8a6:	4601      	mov	r1, r0
 802d8a8:	4618      	mov	r0, r3
 802d8aa:	f001 b829 	b.w	802e900 <__cxa_atexit>

0802d8ae <_ZdlPvj>:
 802d8ae:	f000 b812 	b.w	802d8d6 <_ZdlPv>

0802d8b2 <__cxa_guard_acquire>:
 802d8b2:	6802      	ldr	r2, [r0, #0]
 802d8b4:	07d2      	lsls	r2, r2, #31
 802d8b6:	4603      	mov	r3, r0
 802d8b8:	d405      	bmi.n	802d8c6 <__cxa_guard_acquire+0x14>
 802d8ba:	7842      	ldrb	r2, [r0, #1]
 802d8bc:	b102      	cbz	r2, 802d8c0 <__cxa_guard_acquire+0xe>
 802d8be:	deff      	udf	#255	@ 0xff
 802d8c0:	2001      	movs	r0, #1
 802d8c2:	7058      	strb	r0, [r3, #1]
 802d8c4:	4770      	bx	lr
 802d8c6:	2000      	movs	r0, #0
 802d8c8:	4770      	bx	lr

0802d8ca <__cxa_guard_release>:
 802d8ca:	2301      	movs	r3, #1
 802d8cc:	6003      	str	r3, [r0, #0]
 802d8ce:	4770      	bx	lr

0802d8d0 <__cxa_pure_virtual>:
 802d8d0:	b508      	push	{r3, lr}
 802d8d2:	f000 f80f 	bl	802d8f4 <_ZSt9terminatev>

0802d8d6 <_ZdlPv>:
 802d8d6:	f000 bf5d 	b.w	802e794 <free>

0802d8da <_ZN10__cxxabiv111__terminateEPFvvE>:
 802d8da:	b508      	push	{r3, lr}
 802d8dc:	4780      	blx	r0
 802d8de:	f000 ff25 	bl	802e72c <abort>
	...

0802d8e4 <_ZSt13get_terminatev>:
 802d8e4:	4b02      	ldr	r3, [pc, #8]	@ (802d8f0 <_ZSt13get_terminatev+0xc>)
 802d8e6:	6818      	ldr	r0, [r3, #0]
 802d8e8:	f3bf 8f5b 	dmb	ish
 802d8ec:	4770      	bx	lr
 802d8ee:	bf00      	nop
 802d8f0:	200000c4 	.word	0x200000c4

0802d8f4 <_ZSt9terminatev>:
 802d8f4:	b508      	push	{r3, lr}
 802d8f6:	f7ff fff5 	bl	802d8e4 <_ZSt13get_terminatev>
 802d8fa:	f7ff ffee 	bl	802d8da <_ZN10__cxxabiv111__terminateEPFvvE>

0802d8fe <atan2f>:
 802d8fe:	f000 b94d 	b.w	802db9c <__ieee754_atan2f>
	...

0802d904 <sqrtf>:
 802d904:	b508      	push	{r3, lr}
 802d906:	ed2d 8b02 	vpush	{d8}
 802d90a:	eeb0 8a40 	vmov.f32	s16, s0
 802d90e:	f000 f8a1 	bl	802da54 <__ieee754_sqrtf>
 802d912:	eeb4 8a48 	vcmp.f32	s16, s16
 802d916:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d91a:	d60c      	bvs.n	802d936 <sqrtf+0x32>
 802d91c:	eddf 8a07 	vldr	s17, [pc, #28]	@ 802d93c <sqrtf+0x38>
 802d920:	eeb4 8ae8 	vcmpe.f32	s16, s17
 802d924:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d928:	d505      	bpl.n	802d936 <sqrtf+0x32>
 802d92a:	f001 fa07 	bl	802ed3c <__errno>
 802d92e:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 802d932:	2321      	movs	r3, #33	@ 0x21
 802d934:	6003      	str	r3, [r0, #0]
 802d936:	ecbd 8b02 	vpop	{d8}
 802d93a:	bd08      	pop	{r3, pc}
 802d93c:	00000000 	.word	0x00000000

0802d940 <cosf>:
 802d940:	ee10 3a10 	vmov	r3, s0
 802d944:	b507      	push	{r0, r1, r2, lr}
 802d946:	4a1e      	ldr	r2, [pc, #120]	@ (802d9c0 <cosf+0x80>)
 802d948:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802d94c:	4293      	cmp	r3, r2
 802d94e:	d806      	bhi.n	802d95e <cosf+0x1e>
 802d950:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 802d9c4 <cosf+0x84>
 802d954:	b003      	add	sp, #12
 802d956:	f85d eb04 	ldr.w	lr, [sp], #4
 802d95a:	f000 b87f 	b.w	802da5c <__kernel_cosf>
 802d95e:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802d962:	d304      	bcc.n	802d96e <cosf+0x2e>
 802d964:	ee30 0a40 	vsub.f32	s0, s0, s0
 802d968:	b003      	add	sp, #12
 802d96a:	f85d fb04 	ldr.w	pc, [sp], #4
 802d96e:	4668      	mov	r0, sp
 802d970:	f000 f9b4 	bl	802dcdc <__ieee754_rem_pio2f>
 802d974:	f000 0003 	and.w	r0, r0, #3
 802d978:	2801      	cmp	r0, #1
 802d97a:	d009      	beq.n	802d990 <cosf+0x50>
 802d97c:	2802      	cmp	r0, #2
 802d97e:	d010      	beq.n	802d9a2 <cosf+0x62>
 802d980:	b9b0      	cbnz	r0, 802d9b0 <cosf+0x70>
 802d982:	eddd 0a01 	vldr	s1, [sp, #4]
 802d986:	ed9d 0a00 	vldr	s0, [sp]
 802d98a:	f000 f867 	bl	802da5c <__kernel_cosf>
 802d98e:	e7eb      	b.n	802d968 <cosf+0x28>
 802d990:	eddd 0a01 	vldr	s1, [sp, #4]
 802d994:	ed9d 0a00 	vldr	s0, [sp]
 802d998:	f000 f8b8 	bl	802db0c <__kernel_sinf>
 802d99c:	eeb1 0a40 	vneg.f32	s0, s0
 802d9a0:	e7e2      	b.n	802d968 <cosf+0x28>
 802d9a2:	eddd 0a01 	vldr	s1, [sp, #4]
 802d9a6:	ed9d 0a00 	vldr	s0, [sp]
 802d9aa:	f000 f857 	bl	802da5c <__kernel_cosf>
 802d9ae:	e7f5      	b.n	802d99c <cosf+0x5c>
 802d9b0:	eddd 0a01 	vldr	s1, [sp, #4]
 802d9b4:	ed9d 0a00 	vldr	s0, [sp]
 802d9b8:	2001      	movs	r0, #1
 802d9ba:	f000 f8a7 	bl	802db0c <__kernel_sinf>
 802d9be:	e7d3      	b.n	802d968 <cosf+0x28>
 802d9c0:	3f490fd8 	.word	0x3f490fd8
 802d9c4:	00000000 	.word	0x00000000

0802d9c8 <sinf>:
 802d9c8:	ee10 3a10 	vmov	r3, s0
 802d9cc:	b507      	push	{r0, r1, r2, lr}
 802d9ce:	4a1f      	ldr	r2, [pc, #124]	@ (802da4c <sinf+0x84>)
 802d9d0:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802d9d4:	4293      	cmp	r3, r2
 802d9d6:	d807      	bhi.n	802d9e8 <sinf+0x20>
 802d9d8:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 802da50 <sinf+0x88>
 802d9dc:	2000      	movs	r0, #0
 802d9de:	b003      	add	sp, #12
 802d9e0:	f85d eb04 	ldr.w	lr, [sp], #4
 802d9e4:	f000 b892 	b.w	802db0c <__kernel_sinf>
 802d9e8:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802d9ec:	d304      	bcc.n	802d9f8 <sinf+0x30>
 802d9ee:	ee30 0a40 	vsub.f32	s0, s0, s0
 802d9f2:	b003      	add	sp, #12
 802d9f4:	f85d fb04 	ldr.w	pc, [sp], #4
 802d9f8:	4668      	mov	r0, sp
 802d9fa:	f000 f96f 	bl	802dcdc <__ieee754_rem_pio2f>
 802d9fe:	f000 0003 	and.w	r0, r0, #3
 802da02:	2801      	cmp	r0, #1
 802da04:	d00a      	beq.n	802da1c <sinf+0x54>
 802da06:	2802      	cmp	r0, #2
 802da08:	d00f      	beq.n	802da2a <sinf+0x62>
 802da0a:	b9c0      	cbnz	r0, 802da3e <sinf+0x76>
 802da0c:	eddd 0a01 	vldr	s1, [sp, #4]
 802da10:	ed9d 0a00 	vldr	s0, [sp]
 802da14:	2001      	movs	r0, #1
 802da16:	f000 f879 	bl	802db0c <__kernel_sinf>
 802da1a:	e7ea      	b.n	802d9f2 <sinf+0x2a>
 802da1c:	eddd 0a01 	vldr	s1, [sp, #4]
 802da20:	ed9d 0a00 	vldr	s0, [sp]
 802da24:	f000 f81a 	bl	802da5c <__kernel_cosf>
 802da28:	e7e3      	b.n	802d9f2 <sinf+0x2a>
 802da2a:	eddd 0a01 	vldr	s1, [sp, #4]
 802da2e:	ed9d 0a00 	vldr	s0, [sp]
 802da32:	2001      	movs	r0, #1
 802da34:	f000 f86a 	bl	802db0c <__kernel_sinf>
 802da38:	eeb1 0a40 	vneg.f32	s0, s0
 802da3c:	e7d9      	b.n	802d9f2 <sinf+0x2a>
 802da3e:	eddd 0a01 	vldr	s1, [sp, #4]
 802da42:	ed9d 0a00 	vldr	s0, [sp]
 802da46:	f000 f809 	bl	802da5c <__kernel_cosf>
 802da4a:	e7f5      	b.n	802da38 <sinf+0x70>
 802da4c:	3f490fd8 	.word	0x3f490fd8
 802da50:	00000000 	.word	0x00000000

0802da54 <__ieee754_sqrtf>:
 802da54:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802da58:	4770      	bx	lr
	...

0802da5c <__kernel_cosf>:
 802da5c:	ee10 3a10 	vmov	r3, s0
 802da60:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802da64:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 802da68:	eef0 6a40 	vmov.f32	s13, s0
 802da6c:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 802da70:	d204      	bcs.n	802da7c <__kernel_cosf+0x20>
 802da72:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 802da76:	ee17 2a90 	vmov	r2, s15
 802da7a:	b342      	cbz	r2, 802dace <__kernel_cosf+0x72>
 802da7c:	ee26 7aa6 	vmul.f32	s14, s13, s13
 802da80:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 802daec <__kernel_cosf+0x90>
 802da84:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 802daf0 <__kernel_cosf+0x94>
 802da88:	4a1a      	ldr	r2, [pc, #104]	@ (802daf4 <__kernel_cosf+0x98>)
 802da8a:	eea7 6a27 	vfma.f32	s12, s14, s15
 802da8e:	4293      	cmp	r3, r2
 802da90:	eddf 7a19 	vldr	s15, [pc, #100]	@ 802daf8 <__kernel_cosf+0x9c>
 802da94:	eee6 7a07 	vfma.f32	s15, s12, s14
 802da98:	ed9f 6a18 	vldr	s12, [pc, #96]	@ 802dafc <__kernel_cosf+0xa0>
 802da9c:	eea7 6a87 	vfma.f32	s12, s15, s14
 802daa0:	eddf 7a17 	vldr	s15, [pc, #92]	@ 802db00 <__kernel_cosf+0xa4>
 802daa4:	eee6 7a07 	vfma.f32	s15, s12, s14
 802daa8:	ed9f 6a16 	vldr	s12, [pc, #88]	@ 802db04 <__kernel_cosf+0xa8>
 802daac:	eea7 6a87 	vfma.f32	s12, s15, s14
 802dab0:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 802dab4:	ee26 6a07 	vmul.f32	s12, s12, s14
 802dab8:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 802dabc:	eee7 0a06 	vfma.f32	s1, s14, s12
 802dac0:	ee67 7a27 	vmul.f32	s15, s14, s15
 802dac4:	d804      	bhi.n	802dad0 <__kernel_cosf+0x74>
 802dac6:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802daca:	ee30 0a67 	vsub.f32	s0, s0, s15
 802dace:	4770      	bx	lr
 802dad0:	4a0d      	ldr	r2, [pc, #52]	@ (802db08 <__kernel_cosf+0xac>)
 802dad2:	4293      	cmp	r3, r2
 802dad4:	bf9a      	itte	ls
 802dad6:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 802dada:	ee07 3a10 	vmovls	s14, r3
 802dade:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 802dae2:	ee30 0a47 	vsub.f32	s0, s0, s14
 802dae6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802daea:	e7ec      	b.n	802dac6 <__kernel_cosf+0x6a>
 802daec:	ad47d74e 	.word	0xad47d74e
 802daf0:	310f74f6 	.word	0x310f74f6
 802daf4:	3e999999 	.word	0x3e999999
 802daf8:	b493f27c 	.word	0xb493f27c
 802dafc:	37d00d01 	.word	0x37d00d01
 802db00:	bab60b61 	.word	0xbab60b61
 802db04:	3d2aaaab 	.word	0x3d2aaaab
 802db08:	3f480000 	.word	0x3f480000

0802db0c <__kernel_sinf>:
 802db0c:	ee10 3a10 	vmov	r3, s0
 802db10:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802db14:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 802db18:	d204      	bcs.n	802db24 <__kernel_sinf+0x18>
 802db1a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802db1e:	ee17 3a90 	vmov	r3, s15
 802db22:	b35b      	cbz	r3, 802db7c <__kernel_sinf+0x70>
 802db24:	ee20 7a00 	vmul.f32	s14, s0, s0
 802db28:	eddf 7a15 	vldr	s15, [pc, #84]	@ 802db80 <__kernel_sinf+0x74>
 802db2c:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 802db84 <__kernel_sinf+0x78>
 802db30:	eea7 6a27 	vfma.f32	s12, s14, s15
 802db34:	eddf 7a14 	vldr	s15, [pc, #80]	@ 802db88 <__kernel_sinf+0x7c>
 802db38:	eee6 7a07 	vfma.f32	s15, s12, s14
 802db3c:	ed9f 6a13 	vldr	s12, [pc, #76]	@ 802db8c <__kernel_sinf+0x80>
 802db40:	eea7 6a87 	vfma.f32	s12, s15, s14
 802db44:	eddf 7a12 	vldr	s15, [pc, #72]	@ 802db90 <__kernel_sinf+0x84>
 802db48:	ee60 6a07 	vmul.f32	s13, s0, s14
 802db4c:	eee6 7a07 	vfma.f32	s15, s12, s14
 802db50:	b930      	cbnz	r0, 802db60 <__kernel_sinf+0x54>
 802db52:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 802db94 <__kernel_sinf+0x88>
 802db56:	eea7 6a27 	vfma.f32	s12, s14, s15
 802db5a:	eea6 0a26 	vfma.f32	s0, s12, s13
 802db5e:	4770      	bx	lr
 802db60:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802db64:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 802db68:	eee0 7a86 	vfma.f32	s15, s1, s12
 802db6c:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802db70:	eddf 7a09 	vldr	s15, [pc, #36]	@ 802db98 <__kernel_sinf+0x8c>
 802db74:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802db78:	ee30 0a60 	vsub.f32	s0, s0, s1
 802db7c:	4770      	bx	lr
 802db7e:	bf00      	nop
 802db80:	2f2ec9d3 	.word	0x2f2ec9d3
 802db84:	b2d72f34 	.word	0xb2d72f34
 802db88:	3638ef1b 	.word	0x3638ef1b
 802db8c:	b9500d01 	.word	0xb9500d01
 802db90:	3c088889 	.word	0x3c088889
 802db94:	be2aaaab 	.word	0xbe2aaaab
 802db98:	3e2aaaab 	.word	0x3e2aaaab

0802db9c <__ieee754_atan2f>:
 802db9c:	ee10 2a90 	vmov	r2, s1
 802dba0:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 802dba4:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 802dba8:	b510      	push	{r4, lr}
 802dbaa:	eef0 7a40 	vmov.f32	s15, s0
 802dbae:	d806      	bhi.n	802dbbe <__ieee754_atan2f+0x22>
 802dbb0:	ee10 0a10 	vmov	r0, s0
 802dbb4:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 802dbb8:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802dbbc:	d904      	bls.n	802dbc8 <__ieee754_atan2f+0x2c>
 802dbbe:	ee77 7aa0 	vadd.f32	s15, s15, s1
 802dbc2:	eeb0 0a67 	vmov.f32	s0, s15
 802dbc6:	bd10      	pop	{r4, pc}
 802dbc8:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 802dbcc:	d103      	bne.n	802dbd6 <__ieee754_atan2f+0x3a>
 802dbce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802dbd2:	f000 b9b3 	b.w	802df3c <atanf>
 802dbd6:	1794      	asrs	r4, r2, #30
 802dbd8:	f004 0402 	and.w	r4, r4, #2
 802dbdc:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 802dbe0:	b943      	cbnz	r3, 802dbf4 <__ieee754_atan2f+0x58>
 802dbe2:	2c02      	cmp	r4, #2
 802dbe4:	d05e      	beq.n	802dca4 <__ieee754_atan2f+0x108>
 802dbe6:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 802dcb8 <__ieee754_atan2f+0x11c>
 802dbea:	2c03      	cmp	r4, #3
 802dbec:	bf08      	it	eq
 802dbee:	eef0 7a47 	vmoveq.f32	s15, s14
 802dbf2:	e7e6      	b.n	802dbc2 <__ieee754_atan2f+0x26>
 802dbf4:	b941      	cbnz	r1, 802dc08 <__ieee754_atan2f+0x6c>
 802dbf6:	eddf 7a31 	vldr	s15, [pc, #196]	@ 802dcbc <__ieee754_atan2f+0x120>
 802dbfa:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 802dcc0 <__ieee754_atan2f+0x124>
 802dbfe:	2800      	cmp	r0, #0
 802dc00:	bfb8      	it	lt
 802dc02:	eef0 7a47 	vmovlt.f32	s15, s14
 802dc06:	e7dc      	b.n	802dbc2 <__ieee754_atan2f+0x26>
 802dc08:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 802dc0c:	d110      	bne.n	802dc30 <__ieee754_atan2f+0x94>
 802dc0e:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802dc12:	f104 34ff 	add.w	r4, r4, #4294967295
 802dc16:	d107      	bne.n	802dc28 <__ieee754_atan2f+0x8c>
 802dc18:	2c02      	cmp	r4, #2
 802dc1a:	d846      	bhi.n	802dcaa <__ieee754_atan2f+0x10e>
 802dc1c:	4b29      	ldr	r3, [pc, #164]	@ (802dcc4 <__ieee754_atan2f+0x128>)
 802dc1e:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 802dc22:	edd3 7a00 	vldr	s15, [r3]
 802dc26:	e7cc      	b.n	802dbc2 <__ieee754_atan2f+0x26>
 802dc28:	2c02      	cmp	r4, #2
 802dc2a:	d841      	bhi.n	802dcb0 <__ieee754_atan2f+0x114>
 802dc2c:	4b26      	ldr	r3, [pc, #152]	@ (802dcc8 <__ieee754_atan2f+0x12c>)
 802dc2e:	e7f6      	b.n	802dc1e <__ieee754_atan2f+0x82>
 802dc30:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802dc34:	d0df      	beq.n	802dbf6 <__ieee754_atan2f+0x5a>
 802dc36:	1a5b      	subs	r3, r3, r1
 802dc38:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
 802dc3c:	ea4f 51e3 	mov.w	r1, r3, asr #23
 802dc40:	da1a      	bge.n	802dc78 <__ieee754_atan2f+0xdc>
 802dc42:	2a00      	cmp	r2, #0
 802dc44:	da01      	bge.n	802dc4a <__ieee754_atan2f+0xae>
 802dc46:	313c      	adds	r1, #60	@ 0x3c
 802dc48:	db19      	blt.n	802dc7e <__ieee754_atan2f+0xe2>
 802dc4a:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 802dc4e:	f000 fa49 	bl	802e0e4 <fabsf>
 802dc52:	f000 f973 	bl	802df3c <atanf>
 802dc56:	eef0 7a40 	vmov.f32	s15, s0
 802dc5a:	2c01      	cmp	r4, #1
 802dc5c:	d012      	beq.n	802dc84 <__ieee754_atan2f+0xe8>
 802dc5e:	2c02      	cmp	r4, #2
 802dc60:	d017      	beq.n	802dc92 <__ieee754_atan2f+0xf6>
 802dc62:	2c00      	cmp	r4, #0
 802dc64:	d0ad      	beq.n	802dbc2 <__ieee754_atan2f+0x26>
 802dc66:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 802dccc <__ieee754_atan2f+0x130>
 802dc6a:	ee77 7a87 	vadd.f32	s15, s15, s14
 802dc6e:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 802dcd0 <__ieee754_atan2f+0x134>
 802dc72:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802dc76:	e7a4      	b.n	802dbc2 <__ieee754_atan2f+0x26>
 802dc78:	eddf 7a10 	vldr	s15, [pc, #64]	@ 802dcbc <__ieee754_atan2f+0x120>
 802dc7c:	e7ed      	b.n	802dc5a <__ieee754_atan2f+0xbe>
 802dc7e:	eddf 7a15 	vldr	s15, [pc, #84]	@ 802dcd4 <__ieee754_atan2f+0x138>
 802dc82:	e7ea      	b.n	802dc5a <__ieee754_atan2f+0xbe>
 802dc84:	ee17 3a90 	vmov	r3, s15
 802dc88:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 802dc8c:	ee07 3a90 	vmov	s15, r3
 802dc90:	e797      	b.n	802dbc2 <__ieee754_atan2f+0x26>
 802dc92:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 802dccc <__ieee754_atan2f+0x130>
 802dc96:	ee77 7a87 	vadd.f32	s15, s15, s14
 802dc9a:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 802dcd0 <__ieee754_atan2f+0x134>
 802dc9e:	ee77 7a67 	vsub.f32	s15, s14, s15
 802dca2:	e78e      	b.n	802dbc2 <__ieee754_atan2f+0x26>
 802dca4:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 802dcd0 <__ieee754_atan2f+0x134>
 802dca8:	e78b      	b.n	802dbc2 <__ieee754_atan2f+0x26>
 802dcaa:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 802dcd8 <__ieee754_atan2f+0x13c>
 802dcae:	e788      	b.n	802dbc2 <__ieee754_atan2f+0x26>
 802dcb0:	eddf 7a08 	vldr	s15, [pc, #32]	@ 802dcd4 <__ieee754_atan2f+0x138>
 802dcb4:	e785      	b.n	802dbc2 <__ieee754_atan2f+0x26>
 802dcb6:	bf00      	nop
 802dcb8:	c0490fdb 	.word	0xc0490fdb
 802dcbc:	3fc90fdb 	.word	0x3fc90fdb
 802dcc0:	bfc90fdb 	.word	0xbfc90fdb
 802dcc4:	0803356c 	.word	0x0803356c
 802dcc8:	08033560 	.word	0x08033560
 802dccc:	33bbbd2e 	.word	0x33bbbd2e
 802dcd0:	40490fdb 	.word	0x40490fdb
 802dcd4:	00000000 	.word	0x00000000
 802dcd8:	3f490fdb 	.word	0x3f490fdb

0802dcdc <__ieee754_rem_pio2f>:
 802dcdc:	b5f0      	push	{r4, r5, r6, r7, lr}
 802dcde:	ee10 6a10 	vmov	r6, s0
 802dce2:	4b88      	ldr	r3, [pc, #544]	@ (802df04 <__ieee754_rem_pio2f+0x228>)
 802dce4:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 802dce8:	429d      	cmp	r5, r3
 802dcea:	b087      	sub	sp, #28
 802dcec:	4604      	mov	r4, r0
 802dcee:	d805      	bhi.n	802dcfc <__ieee754_rem_pio2f+0x20>
 802dcf0:	2300      	movs	r3, #0
 802dcf2:	ed80 0a00 	vstr	s0, [r0]
 802dcf6:	6043      	str	r3, [r0, #4]
 802dcf8:	2000      	movs	r0, #0
 802dcfa:	e022      	b.n	802dd42 <__ieee754_rem_pio2f+0x66>
 802dcfc:	4b82      	ldr	r3, [pc, #520]	@ (802df08 <__ieee754_rem_pio2f+0x22c>)
 802dcfe:	429d      	cmp	r5, r3
 802dd00:	d83a      	bhi.n	802dd78 <__ieee754_rem_pio2f+0x9c>
 802dd02:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 802dd06:	2e00      	cmp	r6, #0
 802dd08:	ed9f 7a80 	vldr	s14, [pc, #512]	@ 802df0c <__ieee754_rem_pio2f+0x230>
 802dd0c:	4a80      	ldr	r2, [pc, #512]	@ (802df10 <__ieee754_rem_pio2f+0x234>)
 802dd0e:	f023 030f 	bic.w	r3, r3, #15
 802dd12:	dd18      	ble.n	802dd46 <__ieee754_rem_pio2f+0x6a>
 802dd14:	4293      	cmp	r3, r2
 802dd16:	ee70 7a47 	vsub.f32	s15, s0, s14
 802dd1a:	bf09      	itett	eq
 802dd1c:	ed9f 7a7d 	vldreq	s14, [pc, #500]	@ 802df14 <__ieee754_rem_pio2f+0x238>
 802dd20:	eddf 6a7d 	vldrne	s13, [pc, #500]	@ 802df18 <__ieee754_rem_pio2f+0x23c>
 802dd24:	eddf 6a7d 	vldreq	s13, [pc, #500]	@ 802df1c <__ieee754_rem_pio2f+0x240>
 802dd28:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802dd2c:	ee37 7ae6 	vsub.f32	s14, s15, s13
 802dd30:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802dd34:	ed80 7a00 	vstr	s14, [r0]
 802dd38:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802dd3c:	edc0 7a01 	vstr	s15, [r0, #4]
 802dd40:	2001      	movs	r0, #1
 802dd42:	b007      	add	sp, #28
 802dd44:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802dd46:	4293      	cmp	r3, r2
 802dd48:	ee70 7a07 	vadd.f32	s15, s0, s14
 802dd4c:	bf09      	itett	eq
 802dd4e:	ed9f 7a71 	vldreq	s14, [pc, #452]	@ 802df14 <__ieee754_rem_pio2f+0x238>
 802dd52:	eddf 6a71 	vldrne	s13, [pc, #452]	@ 802df18 <__ieee754_rem_pio2f+0x23c>
 802dd56:	eddf 6a71 	vldreq	s13, [pc, #452]	@ 802df1c <__ieee754_rem_pio2f+0x240>
 802dd5a:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802dd5e:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802dd62:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802dd66:	ed80 7a00 	vstr	s14, [r0]
 802dd6a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802dd6e:	edc0 7a01 	vstr	s15, [r0, #4]
 802dd72:	f04f 30ff 	mov.w	r0, #4294967295
 802dd76:	e7e4      	b.n	802dd42 <__ieee754_rem_pio2f+0x66>
 802dd78:	4b69      	ldr	r3, [pc, #420]	@ (802df20 <__ieee754_rem_pio2f+0x244>)
 802dd7a:	429d      	cmp	r5, r3
 802dd7c:	d873      	bhi.n	802de66 <__ieee754_rem_pio2f+0x18a>
 802dd7e:	f000 f9b1 	bl	802e0e4 <fabsf>
 802dd82:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 802df24 <__ieee754_rem_pio2f+0x248>
 802dd86:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 802dd8a:	eee0 7a07 	vfma.f32	s15, s0, s14
 802dd8e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802dd92:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802dd96:	ee17 0a90 	vmov	r0, s15
 802dd9a:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 802df0c <__ieee754_rem_pio2f+0x230>
 802dd9e:	eea7 0a67 	vfms.f32	s0, s14, s15
 802dda2:	281f      	cmp	r0, #31
 802dda4:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 802df18 <__ieee754_rem_pio2f+0x23c>
 802dda8:	ee67 7a27 	vmul.f32	s15, s14, s15
 802ddac:	eeb1 6a47 	vneg.f32	s12, s14
 802ddb0:	ee70 6a67 	vsub.f32	s13, s0, s15
 802ddb4:	ee16 1a90 	vmov	r1, s13
 802ddb8:	dc09      	bgt.n	802ddce <__ieee754_rem_pio2f+0xf2>
 802ddba:	4a5b      	ldr	r2, [pc, #364]	@ (802df28 <__ieee754_rem_pio2f+0x24c>)
 802ddbc:	1e47      	subs	r7, r0, #1
 802ddbe:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 802ddc2:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 802ddc6:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 802ddca:	4293      	cmp	r3, r2
 802ddcc:	d107      	bne.n	802ddde <__ieee754_rem_pio2f+0x102>
 802ddce:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 802ddd2:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 802ddd6:	2a08      	cmp	r2, #8
 802ddd8:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802dddc:	dc14      	bgt.n	802de08 <__ieee754_rem_pio2f+0x12c>
 802ddde:	6021      	str	r1, [r4, #0]
 802dde0:	ed94 7a00 	vldr	s14, [r4]
 802dde4:	ee30 0a47 	vsub.f32	s0, s0, s14
 802dde8:	2e00      	cmp	r6, #0
 802ddea:	ee30 0a67 	vsub.f32	s0, s0, s15
 802ddee:	ed84 0a01 	vstr	s0, [r4, #4]
 802ddf2:	daa6      	bge.n	802dd42 <__ieee754_rem_pio2f+0x66>
 802ddf4:	eeb1 7a47 	vneg.f32	s14, s14
 802ddf8:	eeb1 0a40 	vneg.f32	s0, s0
 802ddfc:	ed84 7a00 	vstr	s14, [r4]
 802de00:	ed84 0a01 	vstr	s0, [r4, #4]
 802de04:	4240      	negs	r0, r0
 802de06:	e79c      	b.n	802dd42 <__ieee754_rem_pio2f+0x66>
 802de08:	eddf 5a42 	vldr	s11, [pc, #264]	@ 802df14 <__ieee754_rem_pio2f+0x238>
 802de0c:	eef0 6a40 	vmov.f32	s13, s0
 802de10:	eee6 6a25 	vfma.f32	s13, s12, s11
 802de14:	ee70 7a66 	vsub.f32	s15, s0, s13
 802de18:	eee6 7a25 	vfma.f32	s15, s12, s11
 802de1c:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 802df1c <__ieee754_rem_pio2f+0x240>
 802de20:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802de24:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802de28:	ee15 2a90 	vmov	r2, s11
 802de2c:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802de30:	1a5b      	subs	r3, r3, r1
 802de32:	2b19      	cmp	r3, #25
 802de34:	dc04      	bgt.n	802de40 <__ieee754_rem_pio2f+0x164>
 802de36:	edc4 5a00 	vstr	s11, [r4]
 802de3a:	eeb0 0a66 	vmov.f32	s0, s13
 802de3e:	e7cf      	b.n	802dde0 <__ieee754_rem_pio2f+0x104>
 802de40:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 802df2c <__ieee754_rem_pio2f+0x250>
 802de44:	eeb0 0a66 	vmov.f32	s0, s13
 802de48:	eea6 0a25 	vfma.f32	s0, s12, s11
 802de4c:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802de50:	eddf 6a37 	vldr	s13, [pc, #220]	@ 802df30 <__ieee754_rem_pio2f+0x254>
 802de54:	eee6 7a25 	vfma.f32	s15, s12, s11
 802de58:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802de5c:	ee30 7a67 	vsub.f32	s14, s0, s15
 802de60:	ed84 7a00 	vstr	s14, [r4]
 802de64:	e7bc      	b.n	802dde0 <__ieee754_rem_pio2f+0x104>
 802de66:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 802de6a:	d306      	bcc.n	802de7a <__ieee754_rem_pio2f+0x19e>
 802de6c:	ee70 7a40 	vsub.f32	s15, s0, s0
 802de70:	edc0 7a01 	vstr	s15, [r0, #4]
 802de74:	edc0 7a00 	vstr	s15, [r0]
 802de78:	e73e      	b.n	802dcf8 <__ieee754_rem_pio2f+0x1c>
 802de7a:	15ea      	asrs	r2, r5, #23
 802de7c:	3a86      	subs	r2, #134	@ 0x86
 802de7e:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802de82:	ee07 3a90 	vmov	s15, r3
 802de86:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802de8a:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 802df34 <__ieee754_rem_pio2f+0x258>
 802de8e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802de92:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802de96:	ed8d 7a03 	vstr	s14, [sp, #12]
 802de9a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802de9e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802dea2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802dea6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802deaa:	ed8d 7a04 	vstr	s14, [sp, #16]
 802deae:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802deb2:	eef5 7a40 	vcmp.f32	s15, #0.0
 802deb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802deba:	edcd 7a05 	vstr	s15, [sp, #20]
 802debe:	d11e      	bne.n	802defe <__ieee754_rem_pio2f+0x222>
 802dec0:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802dec4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802dec8:	bf0c      	ite	eq
 802deca:	2301      	moveq	r3, #1
 802decc:	2302      	movne	r3, #2
 802dece:	491a      	ldr	r1, [pc, #104]	@ (802df38 <__ieee754_rem_pio2f+0x25c>)
 802ded0:	9101      	str	r1, [sp, #4]
 802ded2:	2102      	movs	r1, #2
 802ded4:	9100      	str	r1, [sp, #0]
 802ded6:	a803      	add	r0, sp, #12
 802ded8:	4621      	mov	r1, r4
 802deda:	f000 f971 	bl	802e1c0 <__kernel_rem_pio2f>
 802dede:	2e00      	cmp	r6, #0
 802dee0:	f6bf af2f 	bge.w	802dd42 <__ieee754_rem_pio2f+0x66>
 802dee4:	edd4 7a00 	vldr	s15, [r4]
 802dee8:	eef1 7a67 	vneg.f32	s15, s15
 802deec:	edc4 7a00 	vstr	s15, [r4]
 802def0:	edd4 7a01 	vldr	s15, [r4, #4]
 802def4:	eef1 7a67 	vneg.f32	s15, s15
 802def8:	edc4 7a01 	vstr	s15, [r4, #4]
 802defc:	e782      	b.n	802de04 <__ieee754_rem_pio2f+0x128>
 802defe:	2303      	movs	r3, #3
 802df00:	e7e5      	b.n	802dece <__ieee754_rem_pio2f+0x1f2>
 802df02:	bf00      	nop
 802df04:	3f490fd8 	.word	0x3f490fd8
 802df08:	4016cbe3 	.word	0x4016cbe3
 802df0c:	3fc90f80 	.word	0x3fc90f80
 802df10:	3fc90fd0 	.word	0x3fc90fd0
 802df14:	37354400 	.word	0x37354400
 802df18:	37354443 	.word	0x37354443
 802df1c:	2e85a308 	.word	0x2e85a308
 802df20:	43490f80 	.word	0x43490f80
 802df24:	3f22f984 	.word	0x3f22f984
 802df28:	08033578 	.word	0x08033578
 802df2c:	2e85a300 	.word	0x2e85a300
 802df30:	248d3132 	.word	0x248d3132
 802df34:	43800000 	.word	0x43800000
 802df38:	080335f8 	.word	0x080335f8

0802df3c <atanf>:
 802df3c:	b538      	push	{r3, r4, r5, lr}
 802df3e:	ee10 5a10 	vmov	r5, s0
 802df42:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 802df46:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
 802df4a:	eef0 7a40 	vmov.f32	s15, s0
 802df4e:	d310      	bcc.n	802df72 <atanf+0x36>
 802df50:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 802df54:	d904      	bls.n	802df60 <atanf+0x24>
 802df56:	ee70 7a00 	vadd.f32	s15, s0, s0
 802df5a:	eeb0 0a67 	vmov.f32	s0, s15
 802df5e:	bd38      	pop	{r3, r4, r5, pc}
 802df60:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 802e098 <atanf+0x15c>
 802df64:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 802e09c <atanf+0x160>
 802df68:	2d00      	cmp	r5, #0
 802df6a:	bfc8      	it	gt
 802df6c:	eef0 7a47 	vmovgt.f32	s15, s14
 802df70:	e7f3      	b.n	802df5a <atanf+0x1e>
 802df72:	4b4b      	ldr	r3, [pc, #300]	@ (802e0a0 <atanf+0x164>)
 802df74:	429c      	cmp	r4, r3
 802df76:	d810      	bhi.n	802df9a <atanf+0x5e>
 802df78:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
 802df7c:	d20a      	bcs.n	802df94 <atanf+0x58>
 802df7e:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 802e0a4 <atanf+0x168>
 802df82:	ee30 7a07 	vadd.f32	s14, s0, s14
 802df86:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 802df8a:	eeb4 7ae6 	vcmpe.f32	s14, s13
 802df8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802df92:	dce2      	bgt.n	802df5a <atanf+0x1e>
 802df94:	f04f 33ff 	mov.w	r3, #4294967295
 802df98:	e013      	b.n	802dfc2 <atanf+0x86>
 802df9a:	f000 f8a3 	bl	802e0e4 <fabsf>
 802df9e:	4b42      	ldr	r3, [pc, #264]	@ (802e0a8 <atanf+0x16c>)
 802dfa0:	429c      	cmp	r4, r3
 802dfa2:	d84f      	bhi.n	802e044 <atanf+0x108>
 802dfa4:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 802dfa8:	429c      	cmp	r4, r3
 802dfaa:	d841      	bhi.n	802e030 <atanf+0xf4>
 802dfac:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 802dfb0:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 802dfb4:	eea0 7a27 	vfma.f32	s14, s0, s15
 802dfb8:	2300      	movs	r3, #0
 802dfba:	ee30 0a27 	vadd.f32	s0, s0, s15
 802dfbe:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802dfc2:	1c5a      	adds	r2, r3, #1
 802dfc4:	ee27 6aa7 	vmul.f32	s12, s15, s15
 802dfc8:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 802e0ac <atanf+0x170>
 802dfcc:	eddf 5a38 	vldr	s11, [pc, #224]	@ 802e0b0 <atanf+0x174>
 802dfd0:	ed9f 5a38 	vldr	s10, [pc, #224]	@ 802e0b4 <atanf+0x178>
 802dfd4:	ee66 6a06 	vmul.f32	s13, s12, s12
 802dfd8:	eee6 5a87 	vfma.f32	s11, s13, s14
 802dfdc:	ed9f 7a36 	vldr	s14, [pc, #216]	@ 802e0b8 <atanf+0x17c>
 802dfe0:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802dfe4:	eddf 5a35 	vldr	s11, [pc, #212]	@ 802e0bc <atanf+0x180>
 802dfe8:	eee7 5a26 	vfma.f32	s11, s14, s13
 802dfec:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 802e0c0 <atanf+0x184>
 802dff0:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802dff4:	eddf 5a33 	vldr	s11, [pc, #204]	@ 802e0c4 <atanf+0x188>
 802dff8:	eee7 5a26 	vfma.f32	s11, s14, s13
 802dffc:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 802e0c8 <atanf+0x18c>
 802e000:	eea6 5a87 	vfma.f32	s10, s13, s14
 802e004:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 802e0cc <atanf+0x190>
 802e008:	eea5 7a26 	vfma.f32	s14, s10, s13
 802e00c:	ed9f 5a30 	vldr	s10, [pc, #192]	@ 802e0d0 <atanf+0x194>
 802e010:	eea7 5a26 	vfma.f32	s10, s14, s13
 802e014:	ed9f 7a2f 	vldr	s14, [pc, #188]	@ 802e0d4 <atanf+0x198>
 802e018:	eea5 7a26 	vfma.f32	s14, s10, s13
 802e01c:	ee27 7a26 	vmul.f32	s14, s14, s13
 802e020:	eea5 7a86 	vfma.f32	s14, s11, s12
 802e024:	ee27 7a87 	vmul.f32	s14, s15, s14
 802e028:	d121      	bne.n	802e06e <atanf+0x132>
 802e02a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802e02e:	e794      	b.n	802df5a <atanf+0x1e>
 802e030:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 802e034:	ee30 7a67 	vsub.f32	s14, s0, s15
 802e038:	ee30 0a27 	vadd.f32	s0, s0, s15
 802e03c:	2301      	movs	r3, #1
 802e03e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802e042:	e7be      	b.n	802dfc2 <atanf+0x86>
 802e044:	4b24      	ldr	r3, [pc, #144]	@ (802e0d8 <atanf+0x19c>)
 802e046:	429c      	cmp	r4, r3
 802e048:	d80b      	bhi.n	802e062 <atanf+0x126>
 802e04a:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 802e04e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802e052:	eea0 7a27 	vfma.f32	s14, s0, s15
 802e056:	2302      	movs	r3, #2
 802e058:	ee70 6a67 	vsub.f32	s13, s0, s15
 802e05c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 802e060:	e7af      	b.n	802dfc2 <atanf+0x86>
 802e062:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 802e066:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802e06a:	2303      	movs	r3, #3
 802e06c:	e7a9      	b.n	802dfc2 <atanf+0x86>
 802e06e:	4a1b      	ldr	r2, [pc, #108]	@ (802e0dc <atanf+0x1a0>)
 802e070:	491b      	ldr	r1, [pc, #108]	@ (802e0e0 <atanf+0x1a4>)
 802e072:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802e076:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802e07a:	edd3 6a00 	vldr	s13, [r3]
 802e07e:	ee37 7a66 	vsub.f32	s14, s14, s13
 802e082:	2d00      	cmp	r5, #0
 802e084:	ee37 7a67 	vsub.f32	s14, s14, s15
 802e088:	edd2 7a00 	vldr	s15, [r2]
 802e08c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802e090:	bfb8      	it	lt
 802e092:	eef1 7a67 	vneglt.f32	s15, s15
 802e096:	e760      	b.n	802df5a <atanf+0x1e>
 802e098:	bfc90fdb 	.word	0xbfc90fdb
 802e09c:	3fc90fdb 	.word	0x3fc90fdb
 802e0a0:	3edfffff 	.word	0x3edfffff
 802e0a4:	7149f2ca 	.word	0x7149f2ca
 802e0a8:	3f97ffff 	.word	0x3f97ffff
 802e0ac:	3c8569d7 	.word	0x3c8569d7
 802e0b0:	3d4bda59 	.word	0x3d4bda59
 802e0b4:	bd6ef16b 	.word	0xbd6ef16b
 802e0b8:	3d886b35 	.word	0x3d886b35
 802e0bc:	3dba2e6e 	.word	0x3dba2e6e
 802e0c0:	3e124925 	.word	0x3e124925
 802e0c4:	3eaaaaab 	.word	0x3eaaaaab
 802e0c8:	bd15a221 	.word	0xbd15a221
 802e0cc:	bd9d8795 	.word	0xbd9d8795
 802e0d0:	bde38e38 	.word	0xbde38e38
 802e0d4:	be4ccccd 	.word	0xbe4ccccd
 802e0d8:	401bffff 	.word	0x401bffff
 802e0dc:	08033920 	.word	0x08033920
 802e0e0:	08033910 	.word	0x08033910

0802e0e4 <fabsf>:
 802e0e4:	ee10 3a10 	vmov	r3, s0
 802e0e8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802e0ec:	ee00 3a10 	vmov	s0, r3
 802e0f0:	4770      	bx	lr
	...

0802e0f4 <scalbnf>:
 802e0f4:	ee10 3a10 	vmov	r3, s0
 802e0f8:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 802e0fc:	d02b      	beq.n	802e156 <scalbnf+0x62>
 802e0fe:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 802e102:	d302      	bcc.n	802e10a <scalbnf+0x16>
 802e104:	ee30 0a00 	vadd.f32	s0, s0, s0
 802e108:	4770      	bx	lr
 802e10a:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 802e10e:	d123      	bne.n	802e158 <scalbnf+0x64>
 802e110:	4b24      	ldr	r3, [pc, #144]	@ (802e1a4 <scalbnf+0xb0>)
 802e112:	eddf 7a25 	vldr	s15, [pc, #148]	@ 802e1a8 <scalbnf+0xb4>
 802e116:	4298      	cmp	r0, r3
 802e118:	ee20 0a27 	vmul.f32	s0, s0, s15
 802e11c:	db17      	blt.n	802e14e <scalbnf+0x5a>
 802e11e:	ee10 3a10 	vmov	r3, s0
 802e122:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802e126:	3a19      	subs	r2, #25
 802e128:	f24c 3150 	movw	r1, #50000	@ 0xc350
 802e12c:	4288      	cmp	r0, r1
 802e12e:	dd15      	ble.n	802e15c <scalbnf+0x68>
 802e130:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 802e1ac <scalbnf+0xb8>
 802e134:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 802e1b0 <scalbnf+0xbc>
 802e138:	ee10 3a10 	vmov	r3, s0
 802e13c:	eeb0 7a67 	vmov.f32	s14, s15
 802e140:	2b00      	cmp	r3, #0
 802e142:	bfb8      	it	lt
 802e144:	eef0 7a66 	vmovlt.f32	s15, s13
 802e148:	ee27 0a87 	vmul.f32	s0, s15, s14
 802e14c:	4770      	bx	lr
 802e14e:	eddf 7a19 	vldr	s15, [pc, #100]	@ 802e1b4 <scalbnf+0xc0>
 802e152:	ee27 0a80 	vmul.f32	s0, s15, s0
 802e156:	4770      	bx	lr
 802e158:	0dd2      	lsrs	r2, r2, #23
 802e15a:	e7e5      	b.n	802e128 <scalbnf+0x34>
 802e15c:	4410      	add	r0, r2
 802e15e:	28fe      	cmp	r0, #254	@ 0xfe
 802e160:	dce6      	bgt.n	802e130 <scalbnf+0x3c>
 802e162:	2800      	cmp	r0, #0
 802e164:	dd06      	ble.n	802e174 <scalbnf+0x80>
 802e166:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 802e16a:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802e16e:	ee00 3a10 	vmov	s0, r3
 802e172:	4770      	bx	lr
 802e174:	f110 0f16 	cmn.w	r0, #22
 802e178:	da09      	bge.n	802e18e <scalbnf+0x9a>
 802e17a:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 802e1b4 <scalbnf+0xc0>
 802e17e:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 802e1b8 <scalbnf+0xc4>
 802e182:	ee10 3a10 	vmov	r3, s0
 802e186:	eeb0 7a67 	vmov.f32	s14, s15
 802e18a:	2b00      	cmp	r3, #0
 802e18c:	e7d9      	b.n	802e142 <scalbnf+0x4e>
 802e18e:	3019      	adds	r0, #25
 802e190:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 802e194:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802e198:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 802e1bc <scalbnf+0xc8>
 802e19c:	ee07 3a90 	vmov	s15, r3
 802e1a0:	e7d7      	b.n	802e152 <scalbnf+0x5e>
 802e1a2:	bf00      	nop
 802e1a4:	ffff3cb0 	.word	0xffff3cb0
 802e1a8:	4c000000 	.word	0x4c000000
 802e1ac:	7149f2ca 	.word	0x7149f2ca
 802e1b0:	f149f2ca 	.word	0xf149f2ca
 802e1b4:	0da24260 	.word	0x0da24260
 802e1b8:	8da24260 	.word	0x8da24260
 802e1bc:	33000000 	.word	0x33000000

0802e1c0 <__kernel_rem_pio2f>:
 802e1c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802e1c4:	ed2d 8b04 	vpush	{d8-d9}
 802e1c8:	b0d9      	sub	sp, #356	@ 0x164
 802e1ca:	4690      	mov	r8, r2
 802e1cc:	9001      	str	r0, [sp, #4]
 802e1ce:	4ab9      	ldr	r2, [pc, #740]	@ (802e4b4 <__kernel_rem_pio2f+0x2f4>)
 802e1d0:	9866      	ldr	r0, [sp, #408]	@ 0x198
 802e1d2:	f118 0f04 	cmn.w	r8, #4
 802e1d6:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 802e1da:	460f      	mov	r7, r1
 802e1dc:	f103 3bff 	add.w	fp, r3, #4294967295
 802e1e0:	db27      	blt.n	802e232 <__kernel_rem_pio2f+0x72>
 802e1e2:	f1b8 0203 	subs.w	r2, r8, #3
 802e1e6:	bf48      	it	mi
 802e1e8:	f108 0204 	addmi.w	r2, r8, #4
 802e1ec:	10d2      	asrs	r2, r2, #3
 802e1ee:	1c55      	adds	r5, r2, #1
 802e1f0:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 802e1f2:	ed9f 7ab4 	vldr	s14, [pc, #720]	@ 802e4c4 <__kernel_rem_pio2f+0x304>
 802e1f6:	00e8      	lsls	r0, r5, #3
 802e1f8:	eba2 060b 	sub.w	r6, r2, fp
 802e1fc:	9002      	str	r0, [sp, #8]
 802e1fe:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 802e202:	eb0a 0c0b 	add.w	ip, sl, fp
 802e206:	ac1c      	add	r4, sp, #112	@ 0x70
 802e208:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 802e20c:	2000      	movs	r0, #0
 802e20e:	4560      	cmp	r0, ip
 802e210:	dd11      	ble.n	802e236 <__kernel_rem_pio2f+0x76>
 802e212:	a91c      	add	r1, sp, #112	@ 0x70
 802e214:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 802e218:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 802e21c:	f04f 0c00 	mov.w	ip, #0
 802e220:	45d4      	cmp	ip, sl
 802e222:	dc27      	bgt.n	802e274 <__kernel_rem_pio2f+0xb4>
 802e224:	f8dd e004 	ldr.w	lr, [sp, #4]
 802e228:	eddf 7aa6 	vldr	s15, [pc, #664]	@ 802e4c4 <__kernel_rem_pio2f+0x304>
 802e22c:	4606      	mov	r6, r0
 802e22e:	2400      	movs	r4, #0
 802e230:	e016      	b.n	802e260 <__kernel_rem_pio2f+0xa0>
 802e232:	2200      	movs	r2, #0
 802e234:	e7db      	b.n	802e1ee <__kernel_rem_pio2f+0x2e>
 802e236:	42c6      	cmn	r6, r0
 802e238:	bf5d      	ittte	pl
 802e23a:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 802e23e:	ee07 1a90 	vmovpl	s15, r1
 802e242:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802e246:	eef0 7a47 	vmovmi.f32	s15, s14
 802e24a:	ece4 7a01 	vstmia	r4!, {s15}
 802e24e:	3001      	adds	r0, #1
 802e250:	e7dd      	b.n	802e20e <__kernel_rem_pio2f+0x4e>
 802e252:	ecfe 6a01 	vldmia	lr!, {s13}
 802e256:	ed96 7a00 	vldr	s14, [r6]
 802e25a:	eee6 7a87 	vfma.f32	s15, s13, s14
 802e25e:	3401      	adds	r4, #1
 802e260:	455c      	cmp	r4, fp
 802e262:	f1a6 0604 	sub.w	r6, r6, #4
 802e266:	ddf4      	ble.n	802e252 <__kernel_rem_pio2f+0x92>
 802e268:	ece9 7a01 	vstmia	r9!, {s15}
 802e26c:	f10c 0c01 	add.w	ip, ip, #1
 802e270:	3004      	adds	r0, #4
 802e272:	e7d5      	b.n	802e220 <__kernel_rem_pio2f+0x60>
 802e274:	a908      	add	r1, sp, #32
 802e276:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802e27a:	9104      	str	r1, [sp, #16]
 802e27c:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 802e27e:	eddf 8a90 	vldr	s17, [pc, #576]	@ 802e4c0 <__kernel_rem_pio2f+0x300>
 802e282:	ed9f 9a8e 	vldr	s18, [pc, #568]	@ 802e4bc <__kernel_rem_pio2f+0x2fc>
 802e286:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 802e28a:	9203      	str	r2, [sp, #12]
 802e28c:	4654      	mov	r4, sl
 802e28e:	00a2      	lsls	r2, r4, #2
 802e290:	9205      	str	r2, [sp, #20]
 802e292:	aa58      	add	r2, sp, #352	@ 0x160
 802e294:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 802e298:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 802e29c:	a944      	add	r1, sp, #272	@ 0x110
 802e29e:	aa08      	add	r2, sp, #32
 802e2a0:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 802e2a4:	4694      	mov	ip, r2
 802e2a6:	4626      	mov	r6, r4
 802e2a8:	2e00      	cmp	r6, #0
 802e2aa:	f1a0 0004 	sub.w	r0, r0, #4
 802e2ae:	dc4c      	bgt.n	802e34a <__kernel_rem_pio2f+0x18a>
 802e2b0:	4628      	mov	r0, r5
 802e2b2:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802e2b6:	f7ff ff1d 	bl	802e0f4 <scalbnf>
 802e2ba:	eeb0 8a40 	vmov.f32	s16, s0
 802e2be:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 802e2c2:	ee28 0a00 	vmul.f32	s0, s16, s0
 802e2c6:	f000 f9ed 	bl	802e6a4 <floorf>
 802e2ca:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 802e2ce:	eea0 8a67 	vfms.f32	s16, s0, s15
 802e2d2:	2d00      	cmp	r5, #0
 802e2d4:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 802e2d8:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802e2dc:	ee17 9a90 	vmov	r9, s15
 802e2e0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802e2e4:	ee38 8a67 	vsub.f32	s16, s16, s15
 802e2e8:	dd41      	ble.n	802e36e <__kernel_rem_pio2f+0x1ae>
 802e2ea:	f104 3cff 	add.w	ip, r4, #4294967295
 802e2ee:	a908      	add	r1, sp, #32
 802e2f0:	f1c5 0e08 	rsb	lr, r5, #8
 802e2f4:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 802e2f8:	fa46 f00e 	asr.w	r0, r6, lr
 802e2fc:	4481      	add	r9, r0
 802e2fe:	fa00 f00e 	lsl.w	r0, r0, lr
 802e302:	1a36      	subs	r6, r6, r0
 802e304:	f1c5 0007 	rsb	r0, r5, #7
 802e308:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 802e30c:	4106      	asrs	r6, r0
 802e30e:	2e00      	cmp	r6, #0
 802e310:	dd3c      	ble.n	802e38c <__kernel_rem_pio2f+0x1cc>
 802e312:	f04f 0e00 	mov.w	lr, #0
 802e316:	f109 0901 	add.w	r9, r9, #1
 802e31a:	4670      	mov	r0, lr
 802e31c:	4574      	cmp	r4, lr
 802e31e:	dc68      	bgt.n	802e3f2 <__kernel_rem_pio2f+0x232>
 802e320:	2d00      	cmp	r5, #0
 802e322:	dd03      	ble.n	802e32c <__kernel_rem_pio2f+0x16c>
 802e324:	2d01      	cmp	r5, #1
 802e326:	d074      	beq.n	802e412 <__kernel_rem_pio2f+0x252>
 802e328:	2d02      	cmp	r5, #2
 802e32a:	d07d      	beq.n	802e428 <__kernel_rem_pio2f+0x268>
 802e32c:	2e02      	cmp	r6, #2
 802e32e:	d12d      	bne.n	802e38c <__kernel_rem_pio2f+0x1cc>
 802e330:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 802e334:	ee30 8a48 	vsub.f32	s16, s0, s16
 802e338:	b340      	cbz	r0, 802e38c <__kernel_rem_pio2f+0x1cc>
 802e33a:	4628      	mov	r0, r5
 802e33c:	9306      	str	r3, [sp, #24]
 802e33e:	f7ff fed9 	bl	802e0f4 <scalbnf>
 802e342:	9b06      	ldr	r3, [sp, #24]
 802e344:	ee38 8a40 	vsub.f32	s16, s16, s0
 802e348:	e020      	b.n	802e38c <__kernel_rem_pio2f+0x1cc>
 802e34a:	ee60 7a28 	vmul.f32	s15, s0, s17
 802e34e:	3e01      	subs	r6, #1
 802e350:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802e354:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802e358:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802e35c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802e360:	ecac 0a01 	vstmia	ip!, {s0}
 802e364:	ed90 0a00 	vldr	s0, [r0]
 802e368:	ee37 0a80 	vadd.f32	s0, s15, s0
 802e36c:	e79c      	b.n	802e2a8 <__kernel_rem_pio2f+0xe8>
 802e36e:	d105      	bne.n	802e37c <__kernel_rem_pio2f+0x1bc>
 802e370:	1e60      	subs	r0, r4, #1
 802e372:	a908      	add	r1, sp, #32
 802e374:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 802e378:	11f6      	asrs	r6, r6, #7
 802e37a:	e7c8      	b.n	802e30e <__kernel_rem_pio2f+0x14e>
 802e37c:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 802e380:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802e384:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e388:	da31      	bge.n	802e3ee <__kernel_rem_pio2f+0x22e>
 802e38a:	2600      	movs	r6, #0
 802e38c:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802e390:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e394:	f040 8098 	bne.w	802e4c8 <__kernel_rem_pio2f+0x308>
 802e398:	1e60      	subs	r0, r4, #1
 802e39a:	2200      	movs	r2, #0
 802e39c:	4550      	cmp	r0, sl
 802e39e:	da4b      	bge.n	802e438 <__kernel_rem_pio2f+0x278>
 802e3a0:	2a00      	cmp	r2, #0
 802e3a2:	d065      	beq.n	802e470 <__kernel_rem_pio2f+0x2b0>
 802e3a4:	3c01      	subs	r4, #1
 802e3a6:	ab08      	add	r3, sp, #32
 802e3a8:	3d08      	subs	r5, #8
 802e3aa:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802e3ae:	2b00      	cmp	r3, #0
 802e3b0:	d0f8      	beq.n	802e3a4 <__kernel_rem_pio2f+0x1e4>
 802e3b2:	4628      	mov	r0, r5
 802e3b4:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 802e3b8:	f7ff fe9c 	bl	802e0f4 <scalbnf>
 802e3bc:	1c63      	adds	r3, r4, #1
 802e3be:	aa44      	add	r2, sp, #272	@ 0x110
 802e3c0:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 802e4c0 <__kernel_rem_pio2f+0x300>
 802e3c4:	0099      	lsls	r1, r3, #2
 802e3c6:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802e3ca:	4623      	mov	r3, r4
 802e3cc:	2b00      	cmp	r3, #0
 802e3ce:	f280 80a9 	bge.w	802e524 <__kernel_rem_pio2f+0x364>
 802e3d2:	4623      	mov	r3, r4
 802e3d4:	2b00      	cmp	r3, #0
 802e3d6:	f2c0 80c7 	blt.w	802e568 <__kernel_rem_pio2f+0x3a8>
 802e3da:	aa44      	add	r2, sp, #272	@ 0x110
 802e3dc:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802e3e0:	f8df c0d4 	ldr.w	ip, [pc, #212]	@ 802e4b8 <__kernel_rem_pio2f+0x2f8>
 802e3e4:	eddf 7a37 	vldr	s15, [pc, #220]	@ 802e4c4 <__kernel_rem_pio2f+0x304>
 802e3e8:	2000      	movs	r0, #0
 802e3ea:	1ae2      	subs	r2, r4, r3
 802e3ec:	e0b1      	b.n	802e552 <__kernel_rem_pio2f+0x392>
 802e3ee:	2602      	movs	r6, #2
 802e3f0:	e78f      	b.n	802e312 <__kernel_rem_pio2f+0x152>
 802e3f2:	f852 1b04 	ldr.w	r1, [r2], #4
 802e3f6:	b948      	cbnz	r0, 802e40c <__kernel_rem_pio2f+0x24c>
 802e3f8:	b121      	cbz	r1, 802e404 <__kernel_rem_pio2f+0x244>
 802e3fa:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 802e3fe:	f842 1c04 	str.w	r1, [r2, #-4]
 802e402:	2101      	movs	r1, #1
 802e404:	f10e 0e01 	add.w	lr, lr, #1
 802e408:	4608      	mov	r0, r1
 802e40a:	e787      	b.n	802e31c <__kernel_rem_pio2f+0x15c>
 802e40c:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 802e410:	e7f5      	b.n	802e3fe <__kernel_rem_pio2f+0x23e>
 802e412:	f104 3cff 	add.w	ip, r4, #4294967295
 802e416:	aa08      	add	r2, sp, #32
 802e418:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 802e41c:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 802e420:	a908      	add	r1, sp, #32
 802e422:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 802e426:	e781      	b.n	802e32c <__kernel_rem_pio2f+0x16c>
 802e428:	f104 3cff 	add.w	ip, r4, #4294967295
 802e42c:	aa08      	add	r2, sp, #32
 802e42e:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 802e432:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 802e436:	e7f3      	b.n	802e420 <__kernel_rem_pio2f+0x260>
 802e438:	a908      	add	r1, sp, #32
 802e43a:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 802e43e:	3801      	subs	r0, #1
 802e440:	430a      	orrs	r2, r1
 802e442:	e7ab      	b.n	802e39c <__kernel_rem_pio2f+0x1dc>
 802e444:	3201      	adds	r2, #1
 802e446:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 802e44a:	2e00      	cmp	r6, #0
 802e44c:	d0fa      	beq.n	802e444 <__kernel_rem_pio2f+0x284>
 802e44e:	9905      	ldr	r1, [sp, #20]
 802e450:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 802e454:	eb0d 0001 	add.w	r0, sp, r1
 802e458:	18e6      	adds	r6, r4, r3
 802e45a:	a91c      	add	r1, sp, #112	@ 0x70
 802e45c:	f104 0c01 	add.w	ip, r4, #1
 802e460:	384c      	subs	r0, #76	@ 0x4c
 802e462:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 802e466:	4422      	add	r2, r4
 802e468:	4562      	cmp	r2, ip
 802e46a:	da04      	bge.n	802e476 <__kernel_rem_pio2f+0x2b6>
 802e46c:	4614      	mov	r4, r2
 802e46e:	e70e      	b.n	802e28e <__kernel_rem_pio2f+0xce>
 802e470:	9804      	ldr	r0, [sp, #16]
 802e472:	2201      	movs	r2, #1
 802e474:	e7e7      	b.n	802e446 <__kernel_rem_pio2f+0x286>
 802e476:	9903      	ldr	r1, [sp, #12]
 802e478:	f8dd e004 	ldr.w	lr, [sp, #4]
 802e47c:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 802e480:	9105      	str	r1, [sp, #20]
 802e482:	ee07 1a90 	vmov	s15, r1
 802e486:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802e48a:	2400      	movs	r4, #0
 802e48c:	ece6 7a01 	vstmia	r6!, {s15}
 802e490:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 802e4c4 <__kernel_rem_pio2f+0x304>
 802e494:	46b1      	mov	r9, r6
 802e496:	455c      	cmp	r4, fp
 802e498:	dd04      	ble.n	802e4a4 <__kernel_rem_pio2f+0x2e4>
 802e49a:	ece0 7a01 	vstmia	r0!, {s15}
 802e49e:	f10c 0c01 	add.w	ip, ip, #1
 802e4a2:	e7e1      	b.n	802e468 <__kernel_rem_pio2f+0x2a8>
 802e4a4:	ecfe 6a01 	vldmia	lr!, {s13}
 802e4a8:	ed39 7a01 	vldmdb	r9!, {s14}
 802e4ac:	3401      	adds	r4, #1
 802e4ae:	eee6 7a87 	vfma.f32	s15, s13, s14
 802e4b2:	e7f0      	b.n	802e496 <__kernel_rem_pio2f+0x2d6>
 802e4b4:	0803395c 	.word	0x0803395c
 802e4b8:	08033930 	.word	0x08033930
 802e4bc:	43800000 	.word	0x43800000
 802e4c0:	3b800000 	.word	0x3b800000
 802e4c4:	00000000 	.word	0x00000000
 802e4c8:	9b02      	ldr	r3, [sp, #8]
 802e4ca:	eeb0 0a48 	vmov.f32	s0, s16
 802e4ce:	eba3 0008 	sub.w	r0, r3, r8
 802e4d2:	f7ff fe0f 	bl	802e0f4 <scalbnf>
 802e4d6:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 802e4bc <__kernel_rem_pio2f+0x2fc>
 802e4da:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802e4de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e4e2:	db19      	blt.n	802e518 <__kernel_rem_pio2f+0x358>
 802e4e4:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 802e4c0 <__kernel_rem_pio2f+0x300>
 802e4e8:	ee60 7a27 	vmul.f32	s15, s0, s15
 802e4ec:	aa08      	add	r2, sp, #32
 802e4ee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802e4f2:	3508      	adds	r5, #8
 802e4f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802e4f8:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802e4fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802e500:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802e504:	ee10 3a10 	vmov	r3, s0
 802e508:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802e50c:	ee17 3a90 	vmov	r3, s15
 802e510:	3401      	adds	r4, #1
 802e512:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802e516:	e74c      	b.n	802e3b2 <__kernel_rem_pio2f+0x1f2>
 802e518:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802e51c:	aa08      	add	r2, sp, #32
 802e51e:	ee10 3a10 	vmov	r3, s0
 802e522:	e7f6      	b.n	802e512 <__kernel_rem_pio2f+0x352>
 802e524:	a808      	add	r0, sp, #32
 802e526:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802e52a:	9001      	str	r0, [sp, #4]
 802e52c:	ee07 0a90 	vmov	s15, r0
 802e530:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802e534:	3b01      	subs	r3, #1
 802e536:	ee67 7a80 	vmul.f32	s15, s15, s0
 802e53a:	ee20 0a07 	vmul.f32	s0, s0, s14
 802e53e:	ed62 7a01 	vstmdb	r2!, {s15}
 802e542:	e743      	b.n	802e3cc <__kernel_rem_pio2f+0x20c>
 802e544:	ecfc 6a01 	vldmia	ip!, {s13}
 802e548:	ecb5 7a01 	vldmia	r5!, {s14}
 802e54c:	eee6 7a87 	vfma.f32	s15, s13, s14
 802e550:	3001      	adds	r0, #1
 802e552:	4550      	cmp	r0, sl
 802e554:	dc01      	bgt.n	802e55a <__kernel_rem_pio2f+0x39a>
 802e556:	4282      	cmp	r2, r0
 802e558:	daf4      	bge.n	802e544 <__kernel_rem_pio2f+0x384>
 802e55a:	a858      	add	r0, sp, #352	@ 0x160
 802e55c:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802e560:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 802e564:	3b01      	subs	r3, #1
 802e566:	e735      	b.n	802e3d4 <__kernel_rem_pio2f+0x214>
 802e568:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 802e56a:	2b02      	cmp	r3, #2
 802e56c:	dc09      	bgt.n	802e582 <__kernel_rem_pio2f+0x3c2>
 802e56e:	2b00      	cmp	r3, #0
 802e570:	dc2b      	bgt.n	802e5ca <__kernel_rem_pio2f+0x40a>
 802e572:	d044      	beq.n	802e5fe <__kernel_rem_pio2f+0x43e>
 802e574:	f009 0007 	and.w	r0, r9, #7
 802e578:	b059      	add	sp, #356	@ 0x164
 802e57a:	ecbd 8b04 	vpop	{d8-d9}
 802e57e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802e582:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 802e584:	2b03      	cmp	r3, #3
 802e586:	d1f5      	bne.n	802e574 <__kernel_rem_pio2f+0x3b4>
 802e588:	aa30      	add	r2, sp, #192	@ 0xc0
 802e58a:	1f0b      	subs	r3, r1, #4
 802e58c:	4413      	add	r3, r2
 802e58e:	461a      	mov	r2, r3
 802e590:	4620      	mov	r0, r4
 802e592:	2800      	cmp	r0, #0
 802e594:	f1a2 0204 	sub.w	r2, r2, #4
 802e598:	dc52      	bgt.n	802e640 <__kernel_rem_pio2f+0x480>
 802e59a:	4622      	mov	r2, r4
 802e59c:	2a01      	cmp	r2, #1
 802e59e:	f1a3 0304 	sub.w	r3, r3, #4
 802e5a2:	dc5d      	bgt.n	802e660 <__kernel_rem_pio2f+0x4a0>
 802e5a4:	ab30      	add	r3, sp, #192	@ 0xc0
 802e5a6:	ed5f 7a39 	vldr	s15, [pc, #-228]	@ 802e4c4 <__kernel_rem_pio2f+0x304>
 802e5aa:	440b      	add	r3, r1
 802e5ac:	2c01      	cmp	r4, #1
 802e5ae:	dc67      	bgt.n	802e680 <__kernel_rem_pio2f+0x4c0>
 802e5b0:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 802e5b4:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 802e5b8:	2e00      	cmp	r6, #0
 802e5ba:	d167      	bne.n	802e68c <__kernel_rem_pio2f+0x4cc>
 802e5bc:	edc7 6a00 	vstr	s13, [r7]
 802e5c0:	ed87 7a01 	vstr	s14, [r7, #4]
 802e5c4:	edc7 7a02 	vstr	s15, [r7, #8]
 802e5c8:	e7d4      	b.n	802e574 <__kernel_rem_pio2f+0x3b4>
 802e5ca:	ab30      	add	r3, sp, #192	@ 0xc0
 802e5cc:	ed1f 7a43 	vldr	s14, [pc, #-268]	@ 802e4c4 <__kernel_rem_pio2f+0x304>
 802e5d0:	440b      	add	r3, r1
 802e5d2:	4622      	mov	r2, r4
 802e5d4:	2a00      	cmp	r2, #0
 802e5d6:	da24      	bge.n	802e622 <__kernel_rem_pio2f+0x462>
 802e5d8:	b34e      	cbz	r6, 802e62e <__kernel_rem_pio2f+0x46e>
 802e5da:	eef1 7a47 	vneg.f32	s15, s14
 802e5de:	edc7 7a00 	vstr	s15, [r7]
 802e5e2:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 802e5e6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802e5ea:	aa31      	add	r2, sp, #196	@ 0xc4
 802e5ec:	2301      	movs	r3, #1
 802e5ee:	429c      	cmp	r4, r3
 802e5f0:	da20      	bge.n	802e634 <__kernel_rem_pio2f+0x474>
 802e5f2:	b10e      	cbz	r6, 802e5f8 <__kernel_rem_pio2f+0x438>
 802e5f4:	eef1 7a67 	vneg.f32	s15, s15
 802e5f8:	edc7 7a01 	vstr	s15, [r7, #4]
 802e5fc:	e7ba      	b.n	802e574 <__kernel_rem_pio2f+0x3b4>
 802e5fe:	ab30      	add	r3, sp, #192	@ 0xc0
 802e600:	ed5f 7a50 	vldr	s15, [pc, #-320]	@ 802e4c4 <__kernel_rem_pio2f+0x304>
 802e604:	440b      	add	r3, r1
 802e606:	2c00      	cmp	r4, #0
 802e608:	da05      	bge.n	802e616 <__kernel_rem_pio2f+0x456>
 802e60a:	b10e      	cbz	r6, 802e610 <__kernel_rem_pio2f+0x450>
 802e60c:	eef1 7a67 	vneg.f32	s15, s15
 802e610:	edc7 7a00 	vstr	s15, [r7]
 802e614:	e7ae      	b.n	802e574 <__kernel_rem_pio2f+0x3b4>
 802e616:	ed33 7a01 	vldmdb	r3!, {s14}
 802e61a:	3c01      	subs	r4, #1
 802e61c:	ee77 7a87 	vadd.f32	s15, s15, s14
 802e620:	e7f1      	b.n	802e606 <__kernel_rem_pio2f+0x446>
 802e622:	ed73 7a01 	vldmdb	r3!, {s15}
 802e626:	3a01      	subs	r2, #1
 802e628:	ee37 7a27 	vadd.f32	s14, s14, s15
 802e62c:	e7d2      	b.n	802e5d4 <__kernel_rem_pio2f+0x414>
 802e62e:	eef0 7a47 	vmov.f32	s15, s14
 802e632:	e7d4      	b.n	802e5de <__kernel_rem_pio2f+0x41e>
 802e634:	ecb2 7a01 	vldmia	r2!, {s14}
 802e638:	3301      	adds	r3, #1
 802e63a:	ee77 7a87 	vadd.f32	s15, s15, s14
 802e63e:	e7d6      	b.n	802e5ee <__kernel_rem_pio2f+0x42e>
 802e640:	edd2 7a00 	vldr	s15, [r2]
 802e644:	edd2 6a01 	vldr	s13, [r2, #4]
 802e648:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802e64c:	3801      	subs	r0, #1
 802e64e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802e652:	ed82 7a00 	vstr	s14, [r2]
 802e656:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802e65a:	edc2 7a01 	vstr	s15, [r2, #4]
 802e65e:	e798      	b.n	802e592 <__kernel_rem_pio2f+0x3d2>
 802e660:	edd3 7a00 	vldr	s15, [r3]
 802e664:	edd3 6a01 	vldr	s13, [r3, #4]
 802e668:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802e66c:	3a01      	subs	r2, #1
 802e66e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802e672:	ed83 7a00 	vstr	s14, [r3]
 802e676:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802e67a:	edc3 7a01 	vstr	s15, [r3, #4]
 802e67e:	e78d      	b.n	802e59c <__kernel_rem_pio2f+0x3dc>
 802e680:	ed33 7a01 	vldmdb	r3!, {s14}
 802e684:	3c01      	subs	r4, #1
 802e686:	ee77 7a87 	vadd.f32	s15, s15, s14
 802e68a:	e78f      	b.n	802e5ac <__kernel_rem_pio2f+0x3ec>
 802e68c:	eef1 6a66 	vneg.f32	s13, s13
 802e690:	eeb1 7a47 	vneg.f32	s14, s14
 802e694:	edc7 6a00 	vstr	s13, [r7]
 802e698:	ed87 7a01 	vstr	s14, [r7, #4]
 802e69c:	eef1 7a67 	vneg.f32	s15, s15
 802e6a0:	e790      	b.n	802e5c4 <__kernel_rem_pio2f+0x404>
 802e6a2:	bf00      	nop

0802e6a4 <floorf>:
 802e6a4:	ee10 3a10 	vmov	r3, s0
 802e6a8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802e6ac:	3a7f      	subs	r2, #127	@ 0x7f
 802e6ae:	2a16      	cmp	r2, #22
 802e6b0:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 802e6b4:	dc2b      	bgt.n	802e70e <floorf+0x6a>
 802e6b6:	2a00      	cmp	r2, #0
 802e6b8:	da12      	bge.n	802e6e0 <floorf+0x3c>
 802e6ba:	eddf 7a19 	vldr	s15, [pc, #100]	@ 802e720 <floorf+0x7c>
 802e6be:	ee30 0a27 	vadd.f32	s0, s0, s15
 802e6c2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802e6c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e6ca:	dd06      	ble.n	802e6da <floorf+0x36>
 802e6cc:	2b00      	cmp	r3, #0
 802e6ce:	da24      	bge.n	802e71a <floorf+0x76>
 802e6d0:	2900      	cmp	r1, #0
 802e6d2:	4b14      	ldr	r3, [pc, #80]	@ (802e724 <floorf+0x80>)
 802e6d4:	bf08      	it	eq
 802e6d6:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 802e6da:	ee00 3a10 	vmov	s0, r3
 802e6de:	4770      	bx	lr
 802e6e0:	4911      	ldr	r1, [pc, #68]	@ (802e728 <floorf+0x84>)
 802e6e2:	4111      	asrs	r1, r2
 802e6e4:	420b      	tst	r3, r1
 802e6e6:	d0fa      	beq.n	802e6de <floorf+0x3a>
 802e6e8:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 802e720 <floorf+0x7c>
 802e6ec:	ee30 0a27 	vadd.f32	s0, s0, s15
 802e6f0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802e6f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e6f8:	ddef      	ble.n	802e6da <floorf+0x36>
 802e6fa:	2b00      	cmp	r3, #0
 802e6fc:	bfbe      	ittt	lt
 802e6fe:	f44f 0000 	movlt.w	r0, #8388608	@ 0x800000
 802e702:	fa40 f202 	asrlt.w	r2, r0, r2
 802e706:	189b      	addlt	r3, r3, r2
 802e708:	ea23 0301 	bic.w	r3, r3, r1
 802e70c:	e7e5      	b.n	802e6da <floorf+0x36>
 802e70e:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 802e712:	d3e4      	bcc.n	802e6de <floorf+0x3a>
 802e714:	ee30 0a00 	vadd.f32	s0, s0, s0
 802e718:	4770      	bx	lr
 802e71a:	2300      	movs	r3, #0
 802e71c:	e7dd      	b.n	802e6da <floorf+0x36>
 802e71e:	bf00      	nop
 802e720:	7149f2ca 	.word	0x7149f2ca
 802e724:	bf800000 	.word	0xbf800000
 802e728:	007fffff 	.word	0x007fffff

0802e72c <abort>:
 802e72c:	b508      	push	{r3, lr}
 802e72e:	2006      	movs	r0, #6
 802e730:	f000 fa3c 	bl	802ebac <raise>
 802e734:	2001      	movs	r0, #1
 802e736:	f7d5 feab 	bl	8004490 <_exit>
	...

0802e73c <__assert_func>:
 802e73c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802e73e:	4614      	mov	r4, r2
 802e740:	461a      	mov	r2, r3
 802e742:	4b09      	ldr	r3, [pc, #36]	@ (802e768 <__assert_func+0x2c>)
 802e744:	681b      	ldr	r3, [r3, #0]
 802e746:	4605      	mov	r5, r0
 802e748:	68d8      	ldr	r0, [r3, #12]
 802e74a:	b954      	cbnz	r4, 802e762 <__assert_func+0x26>
 802e74c:	4b07      	ldr	r3, [pc, #28]	@ (802e76c <__assert_func+0x30>)
 802e74e:	461c      	mov	r4, r3
 802e750:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802e754:	9100      	str	r1, [sp, #0]
 802e756:	462b      	mov	r3, r5
 802e758:	4905      	ldr	r1, [pc, #20]	@ (802e770 <__assert_func+0x34>)
 802e75a:	f000 f983 	bl	802ea64 <fiprintf>
 802e75e:	f7ff ffe5 	bl	802e72c <abort>
 802e762:	4b04      	ldr	r3, [pc, #16]	@ (802e774 <__assert_func+0x38>)
 802e764:	e7f4      	b.n	802e750 <__assert_func+0x14>
 802e766:	bf00      	nop
 802e768:	200000d4 	.word	0x200000d4
 802e76c:	080339a3 	.word	0x080339a3
 802e770:	08033975 	.word	0x08033975
 802e774:	08033968 	.word	0x08033968

0802e778 <atexit>:
 802e778:	2300      	movs	r3, #0
 802e77a:	4601      	mov	r1, r0
 802e77c:	461a      	mov	r2, r3
 802e77e:	4618      	mov	r0, r3
 802e780:	f000 bb18 	b.w	802edb4 <__register_exitproc>

0802e784 <malloc>:
 802e784:	4b02      	ldr	r3, [pc, #8]	@ (802e790 <malloc+0xc>)
 802e786:	4601      	mov	r1, r0
 802e788:	6818      	ldr	r0, [r3, #0]
 802e78a:	f000 b82d 	b.w	802e7e8 <_malloc_r>
 802e78e:	bf00      	nop
 802e790:	200000d4 	.word	0x200000d4

0802e794 <free>:
 802e794:	4b02      	ldr	r3, [pc, #8]	@ (802e7a0 <free+0xc>)
 802e796:	4601      	mov	r1, r0
 802e798:	6818      	ldr	r0, [r3, #0]
 802e79a:	f000 bb67 	b.w	802ee6c <_free_r>
 802e79e:	bf00      	nop
 802e7a0:	200000d4 	.word	0x200000d4

0802e7a4 <sbrk_aligned>:
 802e7a4:	b570      	push	{r4, r5, r6, lr}
 802e7a6:	4e0f      	ldr	r6, [pc, #60]	@ (802e7e4 <sbrk_aligned+0x40>)
 802e7a8:	460c      	mov	r4, r1
 802e7aa:	6831      	ldr	r1, [r6, #0]
 802e7ac:	4605      	mov	r5, r0
 802e7ae:	b911      	cbnz	r1, 802e7b6 <sbrk_aligned+0x12>
 802e7b0:	f000 faa2 	bl	802ecf8 <_sbrk_r>
 802e7b4:	6030      	str	r0, [r6, #0]
 802e7b6:	4621      	mov	r1, r4
 802e7b8:	4628      	mov	r0, r5
 802e7ba:	f000 fa9d 	bl	802ecf8 <_sbrk_r>
 802e7be:	1c43      	adds	r3, r0, #1
 802e7c0:	d103      	bne.n	802e7ca <sbrk_aligned+0x26>
 802e7c2:	f04f 34ff 	mov.w	r4, #4294967295
 802e7c6:	4620      	mov	r0, r4
 802e7c8:	bd70      	pop	{r4, r5, r6, pc}
 802e7ca:	1cc4      	adds	r4, r0, #3
 802e7cc:	f024 0403 	bic.w	r4, r4, #3
 802e7d0:	42a0      	cmp	r0, r4
 802e7d2:	d0f8      	beq.n	802e7c6 <sbrk_aligned+0x22>
 802e7d4:	1a21      	subs	r1, r4, r0
 802e7d6:	4628      	mov	r0, r5
 802e7d8:	f000 fa8e 	bl	802ecf8 <_sbrk_r>
 802e7dc:	3001      	adds	r0, #1
 802e7de:	d1f2      	bne.n	802e7c6 <sbrk_aligned+0x22>
 802e7e0:	e7ef      	b.n	802e7c2 <sbrk_aligned+0x1e>
 802e7e2:	bf00      	nop
 802e7e4:	2000ee68 	.word	0x2000ee68

0802e7e8 <_malloc_r>:
 802e7e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802e7ec:	1ccd      	adds	r5, r1, #3
 802e7ee:	f025 0503 	bic.w	r5, r5, #3
 802e7f2:	3508      	adds	r5, #8
 802e7f4:	2d0c      	cmp	r5, #12
 802e7f6:	bf38      	it	cc
 802e7f8:	250c      	movcc	r5, #12
 802e7fa:	2d00      	cmp	r5, #0
 802e7fc:	4606      	mov	r6, r0
 802e7fe:	db01      	blt.n	802e804 <_malloc_r+0x1c>
 802e800:	42a9      	cmp	r1, r5
 802e802:	d904      	bls.n	802e80e <_malloc_r+0x26>
 802e804:	230c      	movs	r3, #12
 802e806:	6033      	str	r3, [r6, #0]
 802e808:	2000      	movs	r0, #0
 802e80a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802e80e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 802e8e4 <_malloc_r+0xfc>
 802e812:	f000 f869 	bl	802e8e8 <__malloc_lock>
 802e816:	f8d8 3000 	ldr.w	r3, [r8]
 802e81a:	461c      	mov	r4, r3
 802e81c:	bb44      	cbnz	r4, 802e870 <_malloc_r+0x88>
 802e81e:	4629      	mov	r1, r5
 802e820:	4630      	mov	r0, r6
 802e822:	f7ff ffbf 	bl	802e7a4 <sbrk_aligned>
 802e826:	1c43      	adds	r3, r0, #1
 802e828:	4604      	mov	r4, r0
 802e82a:	d158      	bne.n	802e8de <_malloc_r+0xf6>
 802e82c:	f8d8 4000 	ldr.w	r4, [r8]
 802e830:	4627      	mov	r7, r4
 802e832:	2f00      	cmp	r7, #0
 802e834:	d143      	bne.n	802e8be <_malloc_r+0xd6>
 802e836:	2c00      	cmp	r4, #0
 802e838:	d04b      	beq.n	802e8d2 <_malloc_r+0xea>
 802e83a:	6823      	ldr	r3, [r4, #0]
 802e83c:	4639      	mov	r1, r7
 802e83e:	4630      	mov	r0, r6
 802e840:	eb04 0903 	add.w	r9, r4, r3
 802e844:	f000 fa58 	bl	802ecf8 <_sbrk_r>
 802e848:	4581      	cmp	r9, r0
 802e84a:	d142      	bne.n	802e8d2 <_malloc_r+0xea>
 802e84c:	6821      	ldr	r1, [r4, #0]
 802e84e:	1a6d      	subs	r5, r5, r1
 802e850:	4629      	mov	r1, r5
 802e852:	4630      	mov	r0, r6
 802e854:	f7ff ffa6 	bl	802e7a4 <sbrk_aligned>
 802e858:	3001      	adds	r0, #1
 802e85a:	d03a      	beq.n	802e8d2 <_malloc_r+0xea>
 802e85c:	6823      	ldr	r3, [r4, #0]
 802e85e:	442b      	add	r3, r5
 802e860:	6023      	str	r3, [r4, #0]
 802e862:	f8d8 3000 	ldr.w	r3, [r8]
 802e866:	685a      	ldr	r2, [r3, #4]
 802e868:	bb62      	cbnz	r2, 802e8c4 <_malloc_r+0xdc>
 802e86a:	f8c8 7000 	str.w	r7, [r8]
 802e86e:	e00f      	b.n	802e890 <_malloc_r+0xa8>
 802e870:	6822      	ldr	r2, [r4, #0]
 802e872:	1b52      	subs	r2, r2, r5
 802e874:	d420      	bmi.n	802e8b8 <_malloc_r+0xd0>
 802e876:	2a0b      	cmp	r2, #11
 802e878:	d917      	bls.n	802e8aa <_malloc_r+0xc2>
 802e87a:	1961      	adds	r1, r4, r5
 802e87c:	42a3      	cmp	r3, r4
 802e87e:	6025      	str	r5, [r4, #0]
 802e880:	bf18      	it	ne
 802e882:	6059      	strne	r1, [r3, #4]
 802e884:	6863      	ldr	r3, [r4, #4]
 802e886:	bf08      	it	eq
 802e888:	f8c8 1000 	streq.w	r1, [r8]
 802e88c:	5162      	str	r2, [r4, r5]
 802e88e:	604b      	str	r3, [r1, #4]
 802e890:	4630      	mov	r0, r6
 802e892:	f000 f82f 	bl	802e8f4 <__malloc_unlock>
 802e896:	f104 000b 	add.w	r0, r4, #11
 802e89a:	1d23      	adds	r3, r4, #4
 802e89c:	f020 0007 	bic.w	r0, r0, #7
 802e8a0:	1ac2      	subs	r2, r0, r3
 802e8a2:	bf1c      	itt	ne
 802e8a4:	1a1b      	subne	r3, r3, r0
 802e8a6:	50a3      	strne	r3, [r4, r2]
 802e8a8:	e7af      	b.n	802e80a <_malloc_r+0x22>
 802e8aa:	6862      	ldr	r2, [r4, #4]
 802e8ac:	42a3      	cmp	r3, r4
 802e8ae:	bf0c      	ite	eq
 802e8b0:	f8c8 2000 	streq.w	r2, [r8]
 802e8b4:	605a      	strne	r2, [r3, #4]
 802e8b6:	e7eb      	b.n	802e890 <_malloc_r+0xa8>
 802e8b8:	4623      	mov	r3, r4
 802e8ba:	6864      	ldr	r4, [r4, #4]
 802e8bc:	e7ae      	b.n	802e81c <_malloc_r+0x34>
 802e8be:	463c      	mov	r4, r7
 802e8c0:	687f      	ldr	r7, [r7, #4]
 802e8c2:	e7b6      	b.n	802e832 <_malloc_r+0x4a>
 802e8c4:	461a      	mov	r2, r3
 802e8c6:	685b      	ldr	r3, [r3, #4]
 802e8c8:	42a3      	cmp	r3, r4
 802e8ca:	d1fb      	bne.n	802e8c4 <_malloc_r+0xdc>
 802e8cc:	2300      	movs	r3, #0
 802e8ce:	6053      	str	r3, [r2, #4]
 802e8d0:	e7de      	b.n	802e890 <_malloc_r+0xa8>
 802e8d2:	230c      	movs	r3, #12
 802e8d4:	6033      	str	r3, [r6, #0]
 802e8d6:	4630      	mov	r0, r6
 802e8d8:	f000 f80c 	bl	802e8f4 <__malloc_unlock>
 802e8dc:	e794      	b.n	802e808 <_malloc_r+0x20>
 802e8de:	6005      	str	r5, [r0, #0]
 802e8e0:	e7d6      	b.n	802e890 <_malloc_r+0xa8>
 802e8e2:	bf00      	nop
 802e8e4:	2000ee6c 	.word	0x2000ee6c

0802e8e8 <__malloc_lock>:
 802e8e8:	4801      	ldr	r0, [pc, #4]	@ (802e8f0 <__malloc_lock+0x8>)
 802e8ea:	f000 ba52 	b.w	802ed92 <__retarget_lock_acquire_recursive>
 802e8ee:	bf00      	nop
 802e8f0:	2000efb0 	.word	0x2000efb0

0802e8f4 <__malloc_unlock>:
 802e8f4:	4801      	ldr	r0, [pc, #4]	@ (802e8fc <__malloc_unlock+0x8>)
 802e8f6:	f000 ba4d 	b.w	802ed94 <__retarget_lock_release_recursive>
 802e8fa:	bf00      	nop
 802e8fc:	2000efb0 	.word	0x2000efb0

0802e900 <__cxa_atexit>:
 802e900:	b510      	push	{r4, lr}
 802e902:	4604      	mov	r4, r0
 802e904:	4804      	ldr	r0, [pc, #16]	@ (802e918 <__cxa_atexit+0x18>)
 802e906:	4613      	mov	r3, r2
 802e908:	b120      	cbz	r0, 802e914 <__cxa_atexit+0x14>
 802e90a:	460a      	mov	r2, r1
 802e90c:	2002      	movs	r0, #2
 802e90e:	4621      	mov	r1, r4
 802e910:	f000 fa50 	bl	802edb4 <__register_exitproc>
 802e914:	bd10      	pop	{r4, pc}
 802e916:	bf00      	nop
 802e918:	0802edb5 	.word	0x0802edb5

0802e91c <std>:
 802e91c:	2300      	movs	r3, #0
 802e91e:	b510      	push	{r4, lr}
 802e920:	4604      	mov	r4, r0
 802e922:	e9c0 3300 	strd	r3, r3, [r0]
 802e926:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802e92a:	6083      	str	r3, [r0, #8]
 802e92c:	8181      	strh	r1, [r0, #12]
 802e92e:	6643      	str	r3, [r0, #100]	@ 0x64
 802e930:	81c2      	strh	r2, [r0, #14]
 802e932:	6183      	str	r3, [r0, #24]
 802e934:	4619      	mov	r1, r3
 802e936:	2208      	movs	r2, #8
 802e938:	305c      	adds	r0, #92	@ 0x5c
 802e93a:	f000 f906 	bl	802eb4a <memset>
 802e93e:	4b0d      	ldr	r3, [pc, #52]	@ (802e974 <std+0x58>)
 802e940:	6263      	str	r3, [r4, #36]	@ 0x24
 802e942:	4b0d      	ldr	r3, [pc, #52]	@ (802e978 <std+0x5c>)
 802e944:	62a3      	str	r3, [r4, #40]	@ 0x28
 802e946:	4b0d      	ldr	r3, [pc, #52]	@ (802e97c <std+0x60>)
 802e948:	62e3      	str	r3, [r4, #44]	@ 0x2c
 802e94a:	4b0d      	ldr	r3, [pc, #52]	@ (802e980 <std+0x64>)
 802e94c:	6323      	str	r3, [r4, #48]	@ 0x30
 802e94e:	4b0d      	ldr	r3, [pc, #52]	@ (802e984 <std+0x68>)
 802e950:	6224      	str	r4, [r4, #32]
 802e952:	429c      	cmp	r4, r3
 802e954:	d006      	beq.n	802e964 <std+0x48>
 802e956:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 802e95a:	4294      	cmp	r4, r2
 802e95c:	d002      	beq.n	802e964 <std+0x48>
 802e95e:	33d0      	adds	r3, #208	@ 0xd0
 802e960:	429c      	cmp	r4, r3
 802e962:	d105      	bne.n	802e970 <std+0x54>
 802e964:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 802e968:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802e96c:	f000 ba10 	b.w	802ed90 <__retarget_lock_init_recursive>
 802e970:	bd10      	pop	{r4, pc}
 802e972:	bf00      	nop
 802e974:	0802eac5 	.word	0x0802eac5
 802e978:	0802eae7 	.word	0x0802eae7
 802e97c:	0802eb1f 	.word	0x0802eb1f
 802e980:	0802eb43 	.word	0x0802eb43
 802e984:	2000ee70 	.word	0x2000ee70

0802e988 <stdio_exit_handler>:
 802e988:	4a02      	ldr	r2, [pc, #8]	@ (802e994 <stdio_exit_handler+0xc>)
 802e98a:	4903      	ldr	r1, [pc, #12]	@ (802e998 <stdio_exit_handler+0x10>)
 802e98c:	4803      	ldr	r0, [pc, #12]	@ (802e99c <stdio_exit_handler+0x14>)
 802e98e:	f000 b87b 	b.w	802ea88 <_fwalk_sglue>
 802e992:	bf00      	nop
 802e994:	200000c8 	.word	0x200000c8
 802e998:	0802f5a9 	.word	0x0802f5a9
 802e99c:	200000d8 	.word	0x200000d8

0802e9a0 <cleanup_stdio>:
 802e9a0:	6841      	ldr	r1, [r0, #4]
 802e9a2:	4b0c      	ldr	r3, [pc, #48]	@ (802e9d4 <cleanup_stdio+0x34>)
 802e9a4:	4299      	cmp	r1, r3
 802e9a6:	b510      	push	{r4, lr}
 802e9a8:	4604      	mov	r4, r0
 802e9aa:	d001      	beq.n	802e9b0 <cleanup_stdio+0x10>
 802e9ac:	f000 fdfc 	bl	802f5a8 <_fflush_r>
 802e9b0:	68a1      	ldr	r1, [r4, #8]
 802e9b2:	4b09      	ldr	r3, [pc, #36]	@ (802e9d8 <cleanup_stdio+0x38>)
 802e9b4:	4299      	cmp	r1, r3
 802e9b6:	d002      	beq.n	802e9be <cleanup_stdio+0x1e>
 802e9b8:	4620      	mov	r0, r4
 802e9ba:	f000 fdf5 	bl	802f5a8 <_fflush_r>
 802e9be:	68e1      	ldr	r1, [r4, #12]
 802e9c0:	4b06      	ldr	r3, [pc, #24]	@ (802e9dc <cleanup_stdio+0x3c>)
 802e9c2:	4299      	cmp	r1, r3
 802e9c4:	d004      	beq.n	802e9d0 <cleanup_stdio+0x30>
 802e9c6:	4620      	mov	r0, r4
 802e9c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802e9cc:	f000 bdec 	b.w	802f5a8 <_fflush_r>
 802e9d0:	bd10      	pop	{r4, pc}
 802e9d2:	bf00      	nop
 802e9d4:	2000ee70 	.word	0x2000ee70
 802e9d8:	2000eed8 	.word	0x2000eed8
 802e9dc:	2000ef40 	.word	0x2000ef40

0802e9e0 <global_stdio_init.part.0>:
 802e9e0:	b510      	push	{r4, lr}
 802e9e2:	4b0b      	ldr	r3, [pc, #44]	@ (802ea10 <global_stdio_init.part.0+0x30>)
 802e9e4:	4c0b      	ldr	r4, [pc, #44]	@ (802ea14 <global_stdio_init.part.0+0x34>)
 802e9e6:	4a0c      	ldr	r2, [pc, #48]	@ (802ea18 <global_stdio_init.part.0+0x38>)
 802e9e8:	601a      	str	r2, [r3, #0]
 802e9ea:	4620      	mov	r0, r4
 802e9ec:	2200      	movs	r2, #0
 802e9ee:	2104      	movs	r1, #4
 802e9f0:	f7ff ff94 	bl	802e91c <std>
 802e9f4:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 802e9f8:	2201      	movs	r2, #1
 802e9fa:	2109      	movs	r1, #9
 802e9fc:	f7ff ff8e 	bl	802e91c <std>
 802ea00:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 802ea04:	2202      	movs	r2, #2
 802ea06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ea0a:	2112      	movs	r1, #18
 802ea0c:	f7ff bf86 	b.w	802e91c <std>
 802ea10:	2000efa8 	.word	0x2000efa8
 802ea14:	2000ee70 	.word	0x2000ee70
 802ea18:	0802e989 	.word	0x0802e989

0802ea1c <__sfp_lock_acquire>:
 802ea1c:	4801      	ldr	r0, [pc, #4]	@ (802ea24 <__sfp_lock_acquire+0x8>)
 802ea1e:	f000 b9b8 	b.w	802ed92 <__retarget_lock_acquire_recursive>
 802ea22:	bf00      	nop
 802ea24:	2000efb2 	.word	0x2000efb2

0802ea28 <__sfp_lock_release>:
 802ea28:	4801      	ldr	r0, [pc, #4]	@ (802ea30 <__sfp_lock_release+0x8>)
 802ea2a:	f000 b9b3 	b.w	802ed94 <__retarget_lock_release_recursive>
 802ea2e:	bf00      	nop
 802ea30:	2000efb2 	.word	0x2000efb2

0802ea34 <__sinit>:
 802ea34:	b510      	push	{r4, lr}
 802ea36:	4604      	mov	r4, r0
 802ea38:	f7ff fff0 	bl	802ea1c <__sfp_lock_acquire>
 802ea3c:	6a23      	ldr	r3, [r4, #32]
 802ea3e:	b11b      	cbz	r3, 802ea48 <__sinit+0x14>
 802ea40:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ea44:	f7ff bff0 	b.w	802ea28 <__sfp_lock_release>
 802ea48:	4b04      	ldr	r3, [pc, #16]	@ (802ea5c <__sinit+0x28>)
 802ea4a:	6223      	str	r3, [r4, #32]
 802ea4c:	4b04      	ldr	r3, [pc, #16]	@ (802ea60 <__sinit+0x2c>)
 802ea4e:	681b      	ldr	r3, [r3, #0]
 802ea50:	2b00      	cmp	r3, #0
 802ea52:	d1f5      	bne.n	802ea40 <__sinit+0xc>
 802ea54:	f7ff ffc4 	bl	802e9e0 <global_stdio_init.part.0>
 802ea58:	e7f2      	b.n	802ea40 <__sinit+0xc>
 802ea5a:	bf00      	nop
 802ea5c:	0802e9a1 	.word	0x0802e9a1
 802ea60:	2000efa8 	.word	0x2000efa8

0802ea64 <fiprintf>:
 802ea64:	b40e      	push	{r1, r2, r3}
 802ea66:	b503      	push	{r0, r1, lr}
 802ea68:	4601      	mov	r1, r0
 802ea6a:	ab03      	add	r3, sp, #12
 802ea6c:	4805      	ldr	r0, [pc, #20]	@ (802ea84 <fiprintf+0x20>)
 802ea6e:	f853 2b04 	ldr.w	r2, [r3], #4
 802ea72:	6800      	ldr	r0, [r0, #0]
 802ea74:	9301      	str	r3, [sp, #4]
 802ea76:	f000 fa6d 	bl	802ef54 <_vfiprintf_r>
 802ea7a:	b002      	add	sp, #8
 802ea7c:	f85d eb04 	ldr.w	lr, [sp], #4
 802ea80:	b003      	add	sp, #12
 802ea82:	4770      	bx	lr
 802ea84:	200000d4 	.word	0x200000d4

0802ea88 <_fwalk_sglue>:
 802ea88:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802ea8c:	4607      	mov	r7, r0
 802ea8e:	4688      	mov	r8, r1
 802ea90:	4614      	mov	r4, r2
 802ea92:	2600      	movs	r6, #0
 802ea94:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802ea98:	f1b9 0901 	subs.w	r9, r9, #1
 802ea9c:	d505      	bpl.n	802eaaa <_fwalk_sglue+0x22>
 802ea9e:	6824      	ldr	r4, [r4, #0]
 802eaa0:	2c00      	cmp	r4, #0
 802eaa2:	d1f7      	bne.n	802ea94 <_fwalk_sglue+0xc>
 802eaa4:	4630      	mov	r0, r6
 802eaa6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802eaaa:	89ab      	ldrh	r3, [r5, #12]
 802eaac:	2b01      	cmp	r3, #1
 802eaae:	d907      	bls.n	802eac0 <_fwalk_sglue+0x38>
 802eab0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802eab4:	3301      	adds	r3, #1
 802eab6:	d003      	beq.n	802eac0 <_fwalk_sglue+0x38>
 802eab8:	4629      	mov	r1, r5
 802eaba:	4638      	mov	r0, r7
 802eabc:	47c0      	blx	r8
 802eabe:	4306      	orrs	r6, r0
 802eac0:	3568      	adds	r5, #104	@ 0x68
 802eac2:	e7e9      	b.n	802ea98 <_fwalk_sglue+0x10>

0802eac4 <__sread>:
 802eac4:	b510      	push	{r4, lr}
 802eac6:	460c      	mov	r4, r1
 802eac8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802eacc:	f000 f8ee 	bl	802ecac <_read_r>
 802ead0:	2800      	cmp	r0, #0
 802ead2:	bfab      	itete	ge
 802ead4:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 802ead6:	89a3      	ldrhlt	r3, [r4, #12]
 802ead8:	181b      	addge	r3, r3, r0
 802eada:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 802eade:	bfac      	ite	ge
 802eae0:	6563      	strge	r3, [r4, #84]	@ 0x54
 802eae2:	81a3      	strhlt	r3, [r4, #12]
 802eae4:	bd10      	pop	{r4, pc}

0802eae6 <__swrite>:
 802eae6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802eaea:	461f      	mov	r7, r3
 802eaec:	898b      	ldrh	r3, [r1, #12]
 802eaee:	05db      	lsls	r3, r3, #23
 802eaf0:	4605      	mov	r5, r0
 802eaf2:	460c      	mov	r4, r1
 802eaf4:	4616      	mov	r6, r2
 802eaf6:	d505      	bpl.n	802eb04 <__swrite+0x1e>
 802eaf8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802eafc:	2302      	movs	r3, #2
 802eafe:	2200      	movs	r2, #0
 802eb00:	f000 f8c2 	bl	802ec88 <_lseek_r>
 802eb04:	89a3      	ldrh	r3, [r4, #12]
 802eb06:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802eb0a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 802eb0e:	81a3      	strh	r3, [r4, #12]
 802eb10:	4632      	mov	r2, r6
 802eb12:	463b      	mov	r3, r7
 802eb14:	4628      	mov	r0, r5
 802eb16:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802eb1a:	f000 b8fd 	b.w	802ed18 <_write_r>

0802eb1e <__sseek>:
 802eb1e:	b510      	push	{r4, lr}
 802eb20:	460c      	mov	r4, r1
 802eb22:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802eb26:	f000 f8af 	bl	802ec88 <_lseek_r>
 802eb2a:	1c43      	adds	r3, r0, #1
 802eb2c:	89a3      	ldrh	r3, [r4, #12]
 802eb2e:	bf15      	itete	ne
 802eb30:	6560      	strne	r0, [r4, #84]	@ 0x54
 802eb32:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 802eb36:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 802eb3a:	81a3      	strheq	r3, [r4, #12]
 802eb3c:	bf18      	it	ne
 802eb3e:	81a3      	strhne	r3, [r4, #12]
 802eb40:	bd10      	pop	{r4, pc}

0802eb42 <__sclose>:
 802eb42:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802eb46:	f000 b839 	b.w	802ebbc <_close_r>

0802eb4a <memset>:
 802eb4a:	4402      	add	r2, r0
 802eb4c:	4603      	mov	r3, r0
 802eb4e:	4293      	cmp	r3, r2
 802eb50:	d100      	bne.n	802eb54 <memset+0xa>
 802eb52:	4770      	bx	lr
 802eb54:	f803 1b01 	strb.w	r1, [r3], #1
 802eb58:	e7f9      	b.n	802eb4e <memset+0x4>

0802eb5a <_raise_r>:
 802eb5a:	291f      	cmp	r1, #31
 802eb5c:	b538      	push	{r3, r4, r5, lr}
 802eb5e:	4605      	mov	r5, r0
 802eb60:	460c      	mov	r4, r1
 802eb62:	d904      	bls.n	802eb6e <_raise_r+0x14>
 802eb64:	2316      	movs	r3, #22
 802eb66:	6003      	str	r3, [r0, #0]
 802eb68:	f04f 30ff 	mov.w	r0, #4294967295
 802eb6c:	bd38      	pop	{r3, r4, r5, pc}
 802eb6e:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 802eb70:	b112      	cbz	r2, 802eb78 <_raise_r+0x1e>
 802eb72:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802eb76:	b94b      	cbnz	r3, 802eb8c <_raise_r+0x32>
 802eb78:	4628      	mov	r0, r5
 802eb7a:	f000 f8bb 	bl	802ecf4 <_getpid_r>
 802eb7e:	4622      	mov	r2, r4
 802eb80:	4601      	mov	r1, r0
 802eb82:	4628      	mov	r0, r5
 802eb84:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802eb88:	f000 b8a2 	b.w	802ecd0 <_kill_r>
 802eb8c:	2b01      	cmp	r3, #1
 802eb8e:	d00a      	beq.n	802eba6 <_raise_r+0x4c>
 802eb90:	1c59      	adds	r1, r3, #1
 802eb92:	d103      	bne.n	802eb9c <_raise_r+0x42>
 802eb94:	2316      	movs	r3, #22
 802eb96:	6003      	str	r3, [r0, #0]
 802eb98:	2001      	movs	r0, #1
 802eb9a:	e7e7      	b.n	802eb6c <_raise_r+0x12>
 802eb9c:	2100      	movs	r1, #0
 802eb9e:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 802eba2:	4620      	mov	r0, r4
 802eba4:	4798      	blx	r3
 802eba6:	2000      	movs	r0, #0
 802eba8:	e7e0      	b.n	802eb6c <_raise_r+0x12>
	...

0802ebac <raise>:
 802ebac:	4b02      	ldr	r3, [pc, #8]	@ (802ebb8 <raise+0xc>)
 802ebae:	4601      	mov	r1, r0
 802ebb0:	6818      	ldr	r0, [r3, #0]
 802ebb2:	f7ff bfd2 	b.w	802eb5a <_raise_r>
 802ebb6:	bf00      	nop
 802ebb8:	200000d4 	.word	0x200000d4

0802ebbc <_close_r>:
 802ebbc:	b538      	push	{r3, r4, r5, lr}
 802ebbe:	4d06      	ldr	r5, [pc, #24]	@ (802ebd8 <_close_r+0x1c>)
 802ebc0:	2300      	movs	r3, #0
 802ebc2:	4604      	mov	r4, r0
 802ebc4:	4608      	mov	r0, r1
 802ebc6:	602b      	str	r3, [r5, #0]
 802ebc8:	f7d5 fc84 	bl	80044d4 <_close>
 802ebcc:	1c43      	adds	r3, r0, #1
 802ebce:	d102      	bne.n	802ebd6 <_close_r+0x1a>
 802ebd0:	682b      	ldr	r3, [r5, #0]
 802ebd2:	b103      	cbz	r3, 802ebd6 <_close_r+0x1a>
 802ebd4:	6023      	str	r3, [r4, #0]
 802ebd6:	bd38      	pop	{r3, r4, r5, pc}
 802ebd8:	2000efac 	.word	0x2000efac

0802ebdc <_reclaim_reent>:
 802ebdc:	4b29      	ldr	r3, [pc, #164]	@ (802ec84 <_reclaim_reent+0xa8>)
 802ebde:	681b      	ldr	r3, [r3, #0]
 802ebe0:	4283      	cmp	r3, r0
 802ebe2:	b570      	push	{r4, r5, r6, lr}
 802ebe4:	4604      	mov	r4, r0
 802ebe6:	d04b      	beq.n	802ec80 <_reclaim_reent+0xa4>
 802ebe8:	69c3      	ldr	r3, [r0, #28]
 802ebea:	b1ab      	cbz	r3, 802ec18 <_reclaim_reent+0x3c>
 802ebec:	68db      	ldr	r3, [r3, #12]
 802ebee:	b16b      	cbz	r3, 802ec0c <_reclaim_reent+0x30>
 802ebf0:	2500      	movs	r5, #0
 802ebf2:	69e3      	ldr	r3, [r4, #28]
 802ebf4:	68db      	ldr	r3, [r3, #12]
 802ebf6:	5959      	ldr	r1, [r3, r5]
 802ebf8:	2900      	cmp	r1, #0
 802ebfa:	d13b      	bne.n	802ec74 <_reclaim_reent+0x98>
 802ebfc:	3504      	adds	r5, #4
 802ebfe:	2d80      	cmp	r5, #128	@ 0x80
 802ec00:	d1f7      	bne.n	802ebf2 <_reclaim_reent+0x16>
 802ec02:	69e3      	ldr	r3, [r4, #28]
 802ec04:	4620      	mov	r0, r4
 802ec06:	68d9      	ldr	r1, [r3, #12]
 802ec08:	f000 f930 	bl	802ee6c <_free_r>
 802ec0c:	69e3      	ldr	r3, [r4, #28]
 802ec0e:	6819      	ldr	r1, [r3, #0]
 802ec10:	b111      	cbz	r1, 802ec18 <_reclaim_reent+0x3c>
 802ec12:	4620      	mov	r0, r4
 802ec14:	f000 f92a 	bl	802ee6c <_free_r>
 802ec18:	6961      	ldr	r1, [r4, #20]
 802ec1a:	b111      	cbz	r1, 802ec22 <_reclaim_reent+0x46>
 802ec1c:	4620      	mov	r0, r4
 802ec1e:	f000 f925 	bl	802ee6c <_free_r>
 802ec22:	69e1      	ldr	r1, [r4, #28]
 802ec24:	b111      	cbz	r1, 802ec2c <_reclaim_reent+0x50>
 802ec26:	4620      	mov	r0, r4
 802ec28:	f000 f920 	bl	802ee6c <_free_r>
 802ec2c:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 802ec2e:	b111      	cbz	r1, 802ec36 <_reclaim_reent+0x5a>
 802ec30:	4620      	mov	r0, r4
 802ec32:	f000 f91b 	bl	802ee6c <_free_r>
 802ec36:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 802ec38:	b111      	cbz	r1, 802ec40 <_reclaim_reent+0x64>
 802ec3a:	4620      	mov	r0, r4
 802ec3c:	f000 f916 	bl	802ee6c <_free_r>
 802ec40:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 802ec42:	b111      	cbz	r1, 802ec4a <_reclaim_reent+0x6e>
 802ec44:	4620      	mov	r0, r4
 802ec46:	f000 f911 	bl	802ee6c <_free_r>
 802ec4a:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 802ec4c:	b111      	cbz	r1, 802ec54 <_reclaim_reent+0x78>
 802ec4e:	4620      	mov	r0, r4
 802ec50:	f000 f90c 	bl	802ee6c <_free_r>
 802ec54:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 802ec56:	b111      	cbz	r1, 802ec5e <_reclaim_reent+0x82>
 802ec58:	4620      	mov	r0, r4
 802ec5a:	f000 f907 	bl	802ee6c <_free_r>
 802ec5e:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 802ec60:	b111      	cbz	r1, 802ec68 <_reclaim_reent+0x8c>
 802ec62:	4620      	mov	r0, r4
 802ec64:	f000 f902 	bl	802ee6c <_free_r>
 802ec68:	6a23      	ldr	r3, [r4, #32]
 802ec6a:	b14b      	cbz	r3, 802ec80 <_reclaim_reent+0xa4>
 802ec6c:	4620      	mov	r0, r4
 802ec6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802ec72:	4718      	bx	r3
 802ec74:	680e      	ldr	r6, [r1, #0]
 802ec76:	4620      	mov	r0, r4
 802ec78:	f000 f8f8 	bl	802ee6c <_free_r>
 802ec7c:	4631      	mov	r1, r6
 802ec7e:	e7bb      	b.n	802ebf8 <_reclaim_reent+0x1c>
 802ec80:	bd70      	pop	{r4, r5, r6, pc}
 802ec82:	bf00      	nop
 802ec84:	200000d4 	.word	0x200000d4

0802ec88 <_lseek_r>:
 802ec88:	b538      	push	{r3, r4, r5, lr}
 802ec8a:	4d07      	ldr	r5, [pc, #28]	@ (802eca8 <_lseek_r+0x20>)
 802ec8c:	4604      	mov	r4, r0
 802ec8e:	4608      	mov	r0, r1
 802ec90:	4611      	mov	r1, r2
 802ec92:	2200      	movs	r2, #0
 802ec94:	602a      	str	r2, [r5, #0]
 802ec96:	461a      	mov	r2, r3
 802ec98:	f7d5 fc28 	bl	80044ec <_lseek>
 802ec9c:	1c43      	adds	r3, r0, #1
 802ec9e:	d102      	bne.n	802eca6 <_lseek_r+0x1e>
 802eca0:	682b      	ldr	r3, [r5, #0]
 802eca2:	b103      	cbz	r3, 802eca6 <_lseek_r+0x1e>
 802eca4:	6023      	str	r3, [r4, #0]
 802eca6:	bd38      	pop	{r3, r4, r5, pc}
 802eca8:	2000efac 	.word	0x2000efac

0802ecac <_read_r>:
 802ecac:	b538      	push	{r3, r4, r5, lr}
 802ecae:	4d07      	ldr	r5, [pc, #28]	@ (802eccc <_read_r+0x20>)
 802ecb0:	4604      	mov	r4, r0
 802ecb2:	4608      	mov	r0, r1
 802ecb4:	4611      	mov	r1, r2
 802ecb6:	2200      	movs	r2, #0
 802ecb8:	602a      	str	r2, [r5, #0]
 802ecba:	461a      	mov	r2, r3
 802ecbc:	f7d5 fbee 	bl	800449c <_read>
 802ecc0:	1c43      	adds	r3, r0, #1
 802ecc2:	d102      	bne.n	802ecca <_read_r+0x1e>
 802ecc4:	682b      	ldr	r3, [r5, #0]
 802ecc6:	b103      	cbz	r3, 802ecca <_read_r+0x1e>
 802ecc8:	6023      	str	r3, [r4, #0]
 802ecca:	bd38      	pop	{r3, r4, r5, pc}
 802eccc:	2000efac 	.word	0x2000efac

0802ecd0 <_kill_r>:
 802ecd0:	b538      	push	{r3, r4, r5, lr}
 802ecd2:	4d07      	ldr	r5, [pc, #28]	@ (802ecf0 <_kill_r+0x20>)
 802ecd4:	2300      	movs	r3, #0
 802ecd6:	4604      	mov	r4, r0
 802ecd8:	4608      	mov	r0, r1
 802ecda:	4611      	mov	r1, r2
 802ecdc:	602b      	str	r3, [r5, #0]
 802ecde:	f7d5 fbcf 	bl	8004480 <_kill>
 802ece2:	1c43      	adds	r3, r0, #1
 802ece4:	d102      	bne.n	802ecec <_kill_r+0x1c>
 802ece6:	682b      	ldr	r3, [r5, #0]
 802ece8:	b103      	cbz	r3, 802ecec <_kill_r+0x1c>
 802ecea:	6023      	str	r3, [r4, #0]
 802ecec:	bd38      	pop	{r3, r4, r5, pc}
 802ecee:	bf00      	nop
 802ecf0:	2000efac 	.word	0x2000efac

0802ecf4 <_getpid_r>:
 802ecf4:	f7d5 bbc2 	b.w	800447c <_getpid>

0802ecf8 <_sbrk_r>:
 802ecf8:	b538      	push	{r3, r4, r5, lr}
 802ecfa:	4d06      	ldr	r5, [pc, #24]	@ (802ed14 <_sbrk_r+0x1c>)
 802ecfc:	2300      	movs	r3, #0
 802ecfe:	4604      	mov	r4, r0
 802ed00:	4608      	mov	r0, r1
 802ed02:	602b      	str	r3, [r5, #0]
 802ed04:	f7d5 fbf4 	bl	80044f0 <_sbrk>
 802ed08:	1c43      	adds	r3, r0, #1
 802ed0a:	d102      	bne.n	802ed12 <_sbrk_r+0x1a>
 802ed0c:	682b      	ldr	r3, [r5, #0]
 802ed0e:	b103      	cbz	r3, 802ed12 <_sbrk_r+0x1a>
 802ed10:	6023      	str	r3, [r4, #0]
 802ed12:	bd38      	pop	{r3, r4, r5, pc}
 802ed14:	2000efac 	.word	0x2000efac

0802ed18 <_write_r>:
 802ed18:	b538      	push	{r3, r4, r5, lr}
 802ed1a:	4d07      	ldr	r5, [pc, #28]	@ (802ed38 <_write_r+0x20>)
 802ed1c:	4604      	mov	r4, r0
 802ed1e:	4608      	mov	r0, r1
 802ed20:	4611      	mov	r1, r2
 802ed22:	2200      	movs	r2, #0
 802ed24:	602a      	str	r2, [r5, #0]
 802ed26:	461a      	mov	r2, r3
 802ed28:	f7d5 fbc6 	bl	80044b8 <_write>
 802ed2c:	1c43      	adds	r3, r0, #1
 802ed2e:	d102      	bne.n	802ed36 <_write_r+0x1e>
 802ed30:	682b      	ldr	r3, [r5, #0]
 802ed32:	b103      	cbz	r3, 802ed36 <_write_r+0x1e>
 802ed34:	6023      	str	r3, [r4, #0]
 802ed36:	bd38      	pop	{r3, r4, r5, pc}
 802ed38:	2000efac 	.word	0x2000efac

0802ed3c <__errno>:
 802ed3c:	4b01      	ldr	r3, [pc, #4]	@ (802ed44 <__errno+0x8>)
 802ed3e:	6818      	ldr	r0, [r3, #0]
 802ed40:	4770      	bx	lr
 802ed42:	bf00      	nop
 802ed44:	200000d4 	.word	0x200000d4

0802ed48 <__libc_init_array>:
 802ed48:	b570      	push	{r4, r5, r6, lr}
 802ed4a:	4d0d      	ldr	r5, [pc, #52]	@ (802ed80 <__libc_init_array+0x38>)
 802ed4c:	4c0d      	ldr	r4, [pc, #52]	@ (802ed84 <__libc_init_array+0x3c>)
 802ed4e:	1b64      	subs	r4, r4, r5
 802ed50:	10a4      	asrs	r4, r4, #2
 802ed52:	2600      	movs	r6, #0
 802ed54:	42a6      	cmp	r6, r4
 802ed56:	d109      	bne.n	802ed6c <__libc_init_array+0x24>
 802ed58:	4d0b      	ldr	r5, [pc, #44]	@ (802ed88 <__libc_init_array+0x40>)
 802ed5a:	4c0c      	ldr	r4, [pc, #48]	@ (802ed8c <__libc_init_array+0x44>)
 802ed5c:	f000 fd64 	bl	802f828 <_init>
 802ed60:	1b64      	subs	r4, r4, r5
 802ed62:	10a4      	asrs	r4, r4, #2
 802ed64:	2600      	movs	r6, #0
 802ed66:	42a6      	cmp	r6, r4
 802ed68:	d105      	bne.n	802ed76 <__libc_init_array+0x2e>
 802ed6a:	bd70      	pop	{r4, r5, r6, pc}
 802ed6c:	f855 3b04 	ldr.w	r3, [r5], #4
 802ed70:	4798      	blx	r3
 802ed72:	3601      	adds	r6, #1
 802ed74:	e7ee      	b.n	802ed54 <__libc_init_array+0xc>
 802ed76:	f855 3b04 	ldr.w	r3, [r5], #4
 802ed7a:	4798      	blx	r3
 802ed7c:	3601      	adds	r6, #1
 802ed7e:	e7f2      	b.n	802ed66 <__libc_init_array+0x1e>
 802ed80:	08033a38 	.word	0x08033a38
 802ed84:	08033a38 	.word	0x08033a38
 802ed88:	08033a38 	.word	0x08033a38
 802ed8c:	08033a54 	.word	0x08033a54

0802ed90 <__retarget_lock_init_recursive>:
 802ed90:	4770      	bx	lr

0802ed92 <__retarget_lock_acquire_recursive>:
 802ed92:	4770      	bx	lr

0802ed94 <__retarget_lock_release_recursive>:
 802ed94:	4770      	bx	lr

0802ed96 <memcpy>:
 802ed96:	440a      	add	r2, r1
 802ed98:	4291      	cmp	r1, r2
 802ed9a:	f100 33ff 	add.w	r3, r0, #4294967295
 802ed9e:	d100      	bne.n	802eda2 <memcpy+0xc>
 802eda0:	4770      	bx	lr
 802eda2:	b510      	push	{r4, lr}
 802eda4:	f811 4b01 	ldrb.w	r4, [r1], #1
 802eda8:	f803 4f01 	strb.w	r4, [r3, #1]!
 802edac:	4291      	cmp	r1, r2
 802edae:	d1f9      	bne.n	802eda4 <memcpy+0xe>
 802edb0:	bd10      	pop	{r4, pc}
	...

0802edb4 <__register_exitproc>:
 802edb4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802edb8:	4d27      	ldr	r5, [pc, #156]	@ (802ee58 <__register_exitproc+0xa4>)
 802edba:	4607      	mov	r7, r0
 802edbc:	6828      	ldr	r0, [r5, #0]
 802edbe:	4691      	mov	r9, r2
 802edc0:	460e      	mov	r6, r1
 802edc2:	4698      	mov	r8, r3
 802edc4:	f7ff ffe5 	bl	802ed92 <__retarget_lock_acquire_recursive>
 802edc8:	4a24      	ldr	r2, [pc, #144]	@ (802ee5c <__register_exitproc+0xa8>)
 802edca:	6814      	ldr	r4, [r2, #0]
 802edcc:	b93c      	cbnz	r4, 802edde <__register_exitproc+0x2a>
 802edce:	4b24      	ldr	r3, [pc, #144]	@ (802ee60 <__register_exitproc+0xac>)
 802edd0:	6013      	str	r3, [r2, #0]
 802edd2:	4a24      	ldr	r2, [pc, #144]	@ (802ee64 <__register_exitproc+0xb0>)
 802edd4:	b112      	cbz	r2, 802eddc <__register_exitproc+0x28>
 802edd6:	6812      	ldr	r2, [r2, #0]
 802edd8:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 802eddc:	4c20      	ldr	r4, [pc, #128]	@ (802ee60 <__register_exitproc+0xac>)
 802edde:	6863      	ldr	r3, [r4, #4]
 802ede0:	2b1f      	cmp	r3, #31
 802ede2:	dd06      	ble.n	802edf2 <__register_exitproc+0x3e>
 802ede4:	6828      	ldr	r0, [r5, #0]
 802ede6:	f7ff ffd5 	bl	802ed94 <__retarget_lock_release_recursive>
 802edea:	f04f 30ff 	mov.w	r0, #4294967295
 802edee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802edf2:	b32f      	cbz	r7, 802ee40 <__register_exitproc+0x8c>
 802edf4:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 802edf8:	b968      	cbnz	r0, 802ee16 <__register_exitproc+0x62>
 802edfa:	4b1b      	ldr	r3, [pc, #108]	@ (802ee68 <__register_exitproc+0xb4>)
 802edfc:	2b00      	cmp	r3, #0
 802edfe:	d0f1      	beq.n	802ede4 <__register_exitproc+0x30>
 802ee00:	f44f 7084 	mov.w	r0, #264	@ 0x108
 802ee04:	f7ff fcbe 	bl	802e784 <malloc>
 802ee08:	2800      	cmp	r0, #0
 802ee0a:	d0eb      	beq.n	802ede4 <__register_exitproc+0x30>
 802ee0c:	2300      	movs	r3, #0
 802ee0e:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 802ee12:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 802ee16:	6863      	ldr	r3, [r4, #4]
 802ee18:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802ee1c:	2201      	movs	r2, #1
 802ee1e:	409a      	lsls	r2, r3
 802ee20:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802ee24:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 802ee28:	4313      	orrs	r3, r2
 802ee2a:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 802ee2e:	2f02      	cmp	r7, #2
 802ee30:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 802ee34:	bf02      	ittt	eq
 802ee36:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 802ee3a:	4313      	orreq	r3, r2
 802ee3c:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 802ee40:	6863      	ldr	r3, [r4, #4]
 802ee42:	6828      	ldr	r0, [r5, #0]
 802ee44:	1c5a      	adds	r2, r3, #1
 802ee46:	3302      	adds	r3, #2
 802ee48:	6062      	str	r2, [r4, #4]
 802ee4a:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 802ee4e:	f7ff ffa1 	bl	802ed94 <__retarget_lock_release_recursive>
 802ee52:	2000      	movs	r0, #0
 802ee54:	e7cb      	b.n	802edee <__register_exitproc+0x3a>
 802ee56:	bf00      	nop
 802ee58:	20000124 	.word	0x20000124
 802ee5c:	2000f040 	.word	0x2000f040
 802ee60:	2000efb4 	.word	0x2000efb4
 802ee64:	080339a4 	.word	0x080339a4
 802ee68:	0802e785 	.word	0x0802e785

0802ee6c <_free_r>:
 802ee6c:	b538      	push	{r3, r4, r5, lr}
 802ee6e:	4605      	mov	r5, r0
 802ee70:	2900      	cmp	r1, #0
 802ee72:	d041      	beq.n	802eef8 <_free_r+0x8c>
 802ee74:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802ee78:	1f0c      	subs	r4, r1, #4
 802ee7a:	2b00      	cmp	r3, #0
 802ee7c:	bfb8      	it	lt
 802ee7e:	18e4      	addlt	r4, r4, r3
 802ee80:	f7ff fd32 	bl	802e8e8 <__malloc_lock>
 802ee84:	4a1d      	ldr	r2, [pc, #116]	@ (802eefc <_free_r+0x90>)
 802ee86:	6813      	ldr	r3, [r2, #0]
 802ee88:	b933      	cbnz	r3, 802ee98 <_free_r+0x2c>
 802ee8a:	6063      	str	r3, [r4, #4]
 802ee8c:	6014      	str	r4, [r2, #0]
 802ee8e:	4628      	mov	r0, r5
 802ee90:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802ee94:	f7ff bd2e 	b.w	802e8f4 <__malloc_unlock>
 802ee98:	42a3      	cmp	r3, r4
 802ee9a:	d908      	bls.n	802eeae <_free_r+0x42>
 802ee9c:	6820      	ldr	r0, [r4, #0]
 802ee9e:	1821      	adds	r1, r4, r0
 802eea0:	428b      	cmp	r3, r1
 802eea2:	bf01      	itttt	eq
 802eea4:	6819      	ldreq	r1, [r3, #0]
 802eea6:	685b      	ldreq	r3, [r3, #4]
 802eea8:	1809      	addeq	r1, r1, r0
 802eeaa:	6021      	streq	r1, [r4, #0]
 802eeac:	e7ed      	b.n	802ee8a <_free_r+0x1e>
 802eeae:	461a      	mov	r2, r3
 802eeb0:	685b      	ldr	r3, [r3, #4]
 802eeb2:	b10b      	cbz	r3, 802eeb8 <_free_r+0x4c>
 802eeb4:	42a3      	cmp	r3, r4
 802eeb6:	d9fa      	bls.n	802eeae <_free_r+0x42>
 802eeb8:	6811      	ldr	r1, [r2, #0]
 802eeba:	1850      	adds	r0, r2, r1
 802eebc:	42a0      	cmp	r0, r4
 802eebe:	d10b      	bne.n	802eed8 <_free_r+0x6c>
 802eec0:	6820      	ldr	r0, [r4, #0]
 802eec2:	4401      	add	r1, r0
 802eec4:	1850      	adds	r0, r2, r1
 802eec6:	4283      	cmp	r3, r0
 802eec8:	6011      	str	r1, [r2, #0]
 802eeca:	d1e0      	bne.n	802ee8e <_free_r+0x22>
 802eecc:	6818      	ldr	r0, [r3, #0]
 802eece:	685b      	ldr	r3, [r3, #4]
 802eed0:	6053      	str	r3, [r2, #4]
 802eed2:	4408      	add	r0, r1
 802eed4:	6010      	str	r0, [r2, #0]
 802eed6:	e7da      	b.n	802ee8e <_free_r+0x22>
 802eed8:	d902      	bls.n	802eee0 <_free_r+0x74>
 802eeda:	230c      	movs	r3, #12
 802eedc:	602b      	str	r3, [r5, #0]
 802eede:	e7d6      	b.n	802ee8e <_free_r+0x22>
 802eee0:	6820      	ldr	r0, [r4, #0]
 802eee2:	1821      	adds	r1, r4, r0
 802eee4:	428b      	cmp	r3, r1
 802eee6:	bf04      	itt	eq
 802eee8:	6819      	ldreq	r1, [r3, #0]
 802eeea:	685b      	ldreq	r3, [r3, #4]
 802eeec:	6063      	str	r3, [r4, #4]
 802eeee:	bf04      	itt	eq
 802eef0:	1809      	addeq	r1, r1, r0
 802eef2:	6021      	streq	r1, [r4, #0]
 802eef4:	6054      	str	r4, [r2, #4]
 802eef6:	e7ca      	b.n	802ee8e <_free_r+0x22>
 802eef8:	bd38      	pop	{r3, r4, r5, pc}
 802eefa:	bf00      	nop
 802eefc:	2000ee6c 	.word	0x2000ee6c

0802ef00 <__sfputc_r>:
 802ef00:	6893      	ldr	r3, [r2, #8]
 802ef02:	3b01      	subs	r3, #1
 802ef04:	2b00      	cmp	r3, #0
 802ef06:	b410      	push	{r4}
 802ef08:	6093      	str	r3, [r2, #8]
 802ef0a:	da08      	bge.n	802ef1e <__sfputc_r+0x1e>
 802ef0c:	6994      	ldr	r4, [r2, #24]
 802ef0e:	42a3      	cmp	r3, r4
 802ef10:	db01      	blt.n	802ef16 <__sfputc_r+0x16>
 802ef12:	290a      	cmp	r1, #10
 802ef14:	d103      	bne.n	802ef1e <__sfputc_r+0x1e>
 802ef16:	f85d 4b04 	ldr.w	r4, [sp], #4
 802ef1a:	f000 bb6d 	b.w	802f5f8 <__swbuf_r>
 802ef1e:	6813      	ldr	r3, [r2, #0]
 802ef20:	1c58      	adds	r0, r3, #1
 802ef22:	6010      	str	r0, [r2, #0]
 802ef24:	7019      	strb	r1, [r3, #0]
 802ef26:	4608      	mov	r0, r1
 802ef28:	f85d 4b04 	ldr.w	r4, [sp], #4
 802ef2c:	4770      	bx	lr

0802ef2e <__sfputs_r>:
 802ef2e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ef30:	4606      	mov	r6, r0
 802ef32:	460f      	mov	r7, r1
 802ef34:	4614      	mov	r4, r2
 802ef36:	18d5      	adds	r5, r2, r3
 802ef38:	42ac      	cmp	r4, r5
 802ef3a:	d101      	bne.n	802ef40 <__sfputs_r+0x12>
 802ef3c:	2000      	movs	r0, #0
 802ef3e:	e007      	b.n	802ef50 <__sfputs_r+0x22>
 802ef40:	f814 1b01 	ldrb.w	r1, [r4], #1
 802ef44:	463a      	mov	r2, r7
 802ef46:	4630      	mov	r0, r6
 802ef48:	f7ff ffda 	bl	802ef00 <__sfputc_r>
 802ef4c:	1c43      	adds	r3, r0, #1
 802ef4e:	d1f3      	bne.n	802ef38 <__sfputs_r+0xa>
 802ef50:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802ef54 <_vfiprintf_r>:
 802ef54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ef58:	460d      	mov	r5, r1
 802ef5a:	b09d      	sub	sp, #116	@ 0x74
 802ef5c:	4614      	mov	r4, r2
 802ef5e:	4698      	mov	r8, r3
 802ef60:	4606      	mov	r6, r0
 802ef62:	b118      	cbz	r0, 802ef6c <_vfiprintf_r+0x18>
 802ef64:	6a03      	ldr	r3, [r0, #32]
 802ef66:	b90b      	cbnz	r3, 802ef6c <_vfiprintf_r+0x18>
 802ef68:	f7ff fd64 	bl	802ea34 <__sinit>
 802ef6c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802ef6e:	07d9      	lsls	r1, r3, #31
 802ef70:	d405      	bmi.n	802ef7e <_vfiprintf_r+0x2a>
 802ef72:	89ab      	ldrh	r3, [r5, #12]
 802ef74:	059a      	lsls	r2, r3, #22
 802ef76:	d402      	bmi.n	802ef7e <_vfiprintf_r+0x2a>
 802ef78:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802ef7a:	f7ff ff0a 	bl	802ed92 <__retarget_lock_acquire_recursive>
 802ef7e:	89ab      	ldrh	r3, [r5, #12]
 802ef80:	071b      	lsls	r3, r3, #28
 802ef82:	d501      	bpl.n	802ef88 <_vfiprintf_r+0x34>
 802ef84:	692b      	ldr	r3, [r5, #16]
 802ef86:	b99b      	cbnz	r3, 802efb0 <_vfiprintf_r+0x5c>
 802ef88:	4629      	mov	r1, r5
 802ef8a:	4630      	mov	r0, r6
 802ef8c:	f000 fb72 	bl	802f674 <__swsetup_r>
 802ef90:	b170      	cbz	r0, 802efb0 <_vfiprintf_r+0x5c>
 802ef92:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802ef94:	07dc      	lsls	r4, r3, #31
 802ef96:	d504      	bpl.n	802efa2 <_vfiprintf_r+0x4e>
 802ef98:	f04f 30ff 	mov.w	r0, #4294967295
 802ef9c:	b01d      	add	sp, #116	@ 0x74
 802ef9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802efa2:	89ab      	ldrh	r3, [r5, #12]
 802efa4:	0598      	lsls	r0, r3, #22
 802efa6:	d4f7      	bmi.n	802ef98 <_vfiprintf_r+0x44>
 802efa8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802efaa:	f7ff fef3 	bl	802ed94 <__retarget_lock_release_recursive>
 802efae:	e7f3      	b.n	802ef98 <_vfiprintf_r+0x44>
 802efb0:	2300      	movs	r3, #0
 802efb2:	9309      	str	r3, [sp, #36]	@ 0x24
 802efb4:	2320      	movs	r3, #32
 802efb6:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 802efba:	f8cd 800c 	str.w	r8, [sp, #12]
 802efbe:	2330      	movs	r3, #48	@ 0x30
 802efc0:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 802f170 <_vfiprintf_r+0x21c>
 802efc4:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 802efc8:	f04f 0901 	mov.w	r9, #1
 802efcc:	4623      	mov	r3, r4
 802efce:	469a      	mov	sl, r3
 802efd0:	f813 2b01 	ldrb.w	r2, [r3], #1
 802efd4:	b10a      	cbz	r2, 802efda <_vfiprintf_r+0x86>
 802efd6:	2a25      	cmp	r2, #37	@ 0x25
 802efd8:	d1f9      	bne.n	802efce <_vfiprintf_r+0x7a>
 802efda:	ebba 0b04 	subs.w	fp, sl, r4
 802efde:	d00b      	beq.n	802eff8 <_vfiprintf_r+0xa4>
 802efe0:	465b      	mov	r3, fp
 802efe2:	4622      	mov	r2, r4
 802efe4:	4629      	mov	r1, r5
 802efe6:	4630      	mov	r0, r6
 802efe8:	f7ff ffa1 	bl	802ef2e <__sfputs_r>
 802efec:	3001      	adds	r0, #1
 802efee:	f000 80a7 	beq.w	802f140 <_vfiprintf_r+0x1ec>
 802eff2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802eff4:	445a      	add	r2, fp
 802eff6:	9209      	str	r2, [sp, #36]	@ 0x24
 802eff8:	f89a 3000 	ldrb.w	r3, [sl]
 802effc:	2b00      	cmp	r3, #0
 802effe:	f000 809f 	beq.w	802f140 <_vfiprintf_r+0x1ec>
 802f002:	2300      	movs	r3, #0
 802f004:	f04f 32ff 	mov.w	r2, #4294967295
 802f008:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802f00c:	f10a 0a01 	add.w	sl, sl, #1
 802f010:	9304      	str	r3, [sp, #16]
 802f012:	9307      	str	r3, [sp, #28]
 802f014:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 802f018:	931a      	str	r3, [sp, #104]	@ 0x68
 802f01a:	4654      	mov	r4, sl
 802f01c:	2205      	movs	r2, #5
 802f01e:	f814 1b01 	ldrb.w	r1, [r4], #1
 802f022:	4853      	ldr	r0, [pc, #332]	@ (802f170 <_vfiprintf_r+0x21c>)
 802f024:	f7d1 f8f4 	bl	8000210 <memchr>
 802f028:	9a04      	ldr	r2, [sp, #16]
 802f02a:	b9d8      	cbnz	r0, 802f064 <_vfiprintf_r+0x110>
 802f02c:	06d1      	lsls	r1, r2, #27
 802f02e:	bf44      	itt	mi
 802f030:	2320      	movmi	r3, #32
 802f032:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802f036:	0713      	lsls	r3, r2, #28
 802f038:	bf44      	itt	mi
 802f03a:	232b      	movmi	r3, #43	@ 0x2b
 802f03c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802f040:	f89a 3000 	ldrb.w	r3, [sl]
 802f044:	2b2a      	cmp	r3, #42	@ 0x2a
 802f046:	d015      	beq.n	802f074 <_vfiprintf_r+0x120>
 802f048:	9a07      	ldr	r2, [sp, #28]
 802f04a:	4654      	mov	r4, sl
 802f04c:	2000      	movs	r0, #0
 802f04e:	f04f 0c0a 	mov.w	ip, #10
 802f052:	4621      	mov	r1, r4
 802f054:	f811 3b01 	ldrb.w	r3, [r1], #1
 802f058:	3b30      	subs	r3, #48	@ 0x30
 802f05a:	2b09      	cmp	r3, #9
 802f05c:	d94b      	bls.n	802f0f6 <_vfiprintf_r+0x1a2>
 802f05e:	b1b0      	cbz	r0, 802f08e <_vfiprintf_r+0x13a>
 802f060:	9207      	str	r2, [sp, #28]
 802f062:	e014      	b.n	802f08e <_vfiprintf_r+0x13a>
 802f064:	eba0 0308 	sub.w	r3, r0, r8
 802f068:	fa09 f303 	lsl.w	r3, r9, r3
 802f06c:	4313      	orrs	r3, r2
 802f06e:	9304      	str	r3, [sp, #16]
 802f070:	46a2      	mov	sl, r4
 802f072:	e7d2      	b.n	802f01a <_vfiprintf_r+0xc6>
 802f074:	9b03      	ldr	r3, [sp, #12]
 802f076:	1d19      	adds	r1, r3, #4
 802f078:	681b      	ldr	r3, [r3, #0]
 802f07a:	9103      	str	r1, [sp, #12]
 802f07c:	2b00      	cmp	r3, #0
 802f07e:	bfbb      	ittet	lt
 802f080:	425b      	neglt	r3, r3
 802f082:	f042 0202 	orrlt.w	r2, r2, #2
 802f086:	9307      	strge	r3, [sp, #28]
 802f088:	9307      	strlt	r3, [sp, #28]
 802f08a:	bfb8      	it	lt
 802f08c:	9204      	strlt	r2, [sp, #16]
 802f08e:	7823      	ldrb	r3, [r4, #0]
 802f090:	2b2e      	cmp	r3, #46	@ 0x2e
 802f092:	d10a      	bne.n	802f0aa <_vfiprintf_r+0x156>
 802f094:	7863      	ldrb	r3, [r4, #1]
 802f096:	2b2a      	cmp	r3, #42	@ 0x2a
 802f098:	d132      	bne.n	802f100 <_vfiprintf_r+0x1ac>
 802f09a:	9b03      	ldr	r3, [sp, #12]
 802f09c:	1d1a      	adds	r2, r3, #4
 802f09e:	681b      	ldr	r3, [r3, #0]
 802f0a0:	9203      	str	r2, [sp, #12]
 802f0a2:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 802f0a6:	3402      	adds	r4, #2
 802f0a8:	9305      	str	r3, [sp, #20]
 802f0aa:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 802f180 <_vfiprintf_r+0x22c>
 802f0ae:	7821      	ldrb	r1, [r4, #0]
 802f0b0:	2203      	movs	r2, #3
 802f0b2:	4650      	mov	r0, sl
 802f0b4:	f7d1 f8ac 	bl	8000210 <memchr>
 802f0b8:	b138      	cbz	r0, 802f0ca <_vfiprintf_r+0x176>
 802f0ba:	9b04      	ldr	r3, [sp, #16]
 802f0bc:	eba0 000a 	sub.w	r0, r0, sl
 802f0c0:	2240      	movs	r2, #64	@ 0x40
 802f0c2:	4082      	lsls	r2, r0
 802f0c4:	4313      	orrs	r3, r2
 802f0c6:	3401      	adds	r4, #1
 802f0c8:	9304      	str	r3, [sp, #16]
 802f0ca:	f814 1b01 	ldrb.w	r1, [r4], #1
 802f0ce:	4829      	ldr	r0, [pc, #164]	@ (802f174 <_vfiprintf_r+0x220>)
 802f0d0:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 802f0d4:	2206      	movs	r2, #6
 802f0d6:	f7d1 f89b 	bl	8000210 <memchr>
 802f0da:	2800      	cmp	r0, #0
 802f0dc:	d03f      	beq.n	802f15e <_vfiprintf_r+0x20a>
 802f0de:	4b26      	ldr	r3, [pc, #152]	@ (802f178 <_vfiprintf_r+0x224>)
 802f0e0:	bb1b      	cbnz	r3, 802f12a <_vfiprintf_r+0x1d6>
 802f0e2:	9b03      	ldr	r3, [sp, #12]
 802f0e4:	3307      	adds	r3, #7
 802f0e6:	f023 0307 	bic.w	r3, r3, #7
 802f0ea:	3308      	adds	r3, #8
 802f0ec:	9303      	str	r3, [sp, #12]
 802f0ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802f0f0:	443b      	add	r3, r7
 802f0f2:	9309      	str	r3, [sp, #36]	@ 0x24
 802f0f4:	e76a      	b.n	802efcc <_vfiprintf_r+0x78>
 802f0f6:	fb0c 3202 	mla	r2, ip, r2, r3
 802f0fa:	460c      	mov	r4, r1
 802f0fc:	2001      	movs	r0, #1
 802f0fe:	e7a8      	b.n	802f052 <_vfiprintf_r+0xfe>
 802f100:	2300      	movs	r3, #0
 802f102:	3401      	adds	r4, #1
 802f104:	9305      	str	r3, [sp, #20]
 802f106:	4619      	mov	r1, r3
 802f108:	f04f 0c0a 	mov.w	ip, #10
 802f10c:	4620      	mov	r0, r4
 802f10e:	f810 2b01 	ldrb.w	r2, [r0], #1
 802f112:	3a30      	subs	r2, #48	@ 0x30
 802f114:	2a09      	cmp	r2, #9
 802f116:	d903      	bls.n	802f120 <_vfiprintf_r+0x1cc>
 802f118:	2b00      	cmp	r3, #0
 802f11a:	d0c6      	beq.n	802f0aa <_vfiprintf_r+0x156>
 802f11c:	9105      	str	r1, [sp, #20]
 802f11e:	e7c4      	b.n	802f0aa <_vfiprintf_r+0x156>
 802f120:	fb0c 2101 	mla	r1, ip, r1, r2
 802f124:	4604      	mov	r4, r0
 802f126:	2301      	movs	r3, #1
 802f128:	e7f0      	b.n	802f10c <_vfiprintf_r+0x1b8>
 802f12a:	ab03      	add	r3, sp, #12
 802f12c:	9300      	str	r3, [sp, #0]
 802f12e:	462a      	mov	r2, r5
 802f130:	4b12      	ldr	r3, [pc, #72]	@ (802f17c <_vfiprintf_r+0x228>)
 802f132:	a904      	add	r1, sp, #16
 802f134:	4630      	mov	r0, r6
 802f136:	f3af 8000 	nop.w
 802f13a:	4607      	mov	r7, r0
 802f13c:	1c78      	adds	r0, r7, #1
 802f13e:	d1d6      	bne.n	802f0ee <_vfiprintf_r+0x19a>
 802f140:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802f142:	07d9      	lsls	r1, r3, #31
 802f144:	d405      	bmi.n	802f152 <_vfiprintf_r+0x1fe>
 802f146:	89ab      	ldrh	r3, [r5, #12]
 802f148:	059a      	lsls	r2, r3, #22
 802f14a:	d402      	bmi.n	802f152 <_vfiprintf_r+0x1fe>
 802f14c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802f14e:	f7ff fe21 	bl	802ed94 <__retarget_lock_release_recursive>
 802f152:	89ab      	ldrh	r3, [r5, #12]
 802f154:	065b      	lsls	r3, r3, #25
 802f156:	f53f af1f 	bmi.w	802ef98 <_vfiprintf_r+0x44>
 802f15a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802f15c:	e71e      	b.n	802ef9c <_vfiprintf_r+0x48>
 802f15e:	ab03      	add	r3, sp, #12
 802f160:	9300      	str	r3, [sp, #0]
 802f162:	462a      	mov	r2, r5
 802f164:	4b05      	ldr	r3, [pc, #20]	@ (802f17c <_vfiprintf_r+0x228>)
 802f166:	a904      	add	r1, sp, #16
 802f168:	4630      	mov	r0, r6
 802f16a:	f000 f879 	bl	802f260 <_printf_i>
 802f16e:	e7e4      	b.n	802f13a <_vfiprintf_r+0x1e6>
 802f170:	080339a8 	.word	0x080339a8
 802f174:	080339b2 	.word	0x080339b2
 802f178:	00000000 	.word	0x00000000
 802f17c:	0802ef2f 	.word	0x0802ef2f
 802f180:	080339ae 	.word	0x080339ae

0802f184 <_printf_common>:
 802f184:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802f188:	4616      	mov	r6, r2
 802f18a:	4698      	mov	r8, r3
 802f18c:	688a      	ldr	r2, [r1, #8]
 802f18e:	690b      	ldr	r3, [r1, #16]
 802f190:	f8dd 9020 	ldr.w	r9, [sp, #32]
 802f194:	4293      	cmp	r3, r2
 802f196:	bfb8      	it	lt
 802f198:	4613      	movlt	r3, r2
 802f19a:	6033      	str	r3, [r6, #0]
 802f19c:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 802f1a0:	4607      	mov	r7, r0
 802f1a2:	460c      	mov	r4, r1
 802f1a4:	b10a      	cbz	r2, 802f1aa <_printf_common+0x26>
 802f1a6:	3301      	adds	r3, #1
 802f1a8:	6033      	str	r3, [r6, #0]
 802f1aa:	6823      	ldr	r3, [r4, #0]
 802f1ac:	0699      	lsls	r1, r3, #26
 802f1ae:	bf42      	ittt	mi
 802f1b0:	6833      	ldrmi	r3, [r6, #0]
 802f1b2:	3302      	addmi	r3, #2
 802f1b4:	6033      	strmi	r3, [r6, #0]
 802f1b6:	6825      	ldr	r5, [r4, #0]
 802f1b8:	f015 0506 	ands.w	r5, r5, #6
 802f1bc:	d106      	bne.n	802f1cc <_printf_common+0x48>
 802f1be:	f104 0a19 	add.w	sl, r4, #25
 802f1c2:	68e3      	ldr	r3, [r4, #12]
 802f1c4:	6832      	ldr	r2, [r6, #0]
 802f1c6:	1a9b      	subs	r3, r3, r2
 802f1c8:	42ab      	cmp	r3, r5
 802f1ca:	dc26      	bgt.n	802f21a <_printf_common+0x96>
 802f1cc:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 802f1d0:	6822      	ldr	r2, [r4, #0]
 802f1d2:	3b00      	subs	r3, #0
 802f1d4:	bf18      	it	ne
 802f1d6:	2301      	movne	r3, #1
 802f1d8:	0692      	lsls	r2, r2, #26
 802f1da:	d42b      	bmi.n	802f234 <_printf_common+0xb0>
 802f1dc:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 802f1e0:	4641      	mov	r1, r8
 802f1e2:	4638      	mov	r0, r7
 802f1e4:	47c8      	blx	r9
 802f1e6:	3001      	adds	r0, #1
 802f1e8:	d01e      	beq.n	802f228 <_printf_common+0xa4>
 802f1ea:	6823      	ldr	r3, [r4, #0]
 802f1ec:	6922      	ldr	r2, [r4, #16]
 802f1ee:	f003 0306 	and.w	r3, r3, #6
 802f1f2:	2b04      	cmp	r3, #4
 802f1f4:	bf02      	ittt	eq
 802f1f6:	68e5      	ldreq	r5, [r4, #12]
 802f1f8:	6833      	ldreq	r3, [r6, #0]
 802f1fa:	1aed      	subeq	r5, r5, r3
 802f1fc:	68a3      	ldr	r3, [r4, #8]
 802f1fe:	bf0c      	ite	eq
 802f200:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802f204:	2500      	movne	r5, #0
 802f206:	4293      	cmp	r3, r2
 802f208:	bfc4      	itt	gt
 802f20a:	1a9b      	subgt	r3, r3, r2
 802f20c:	18ed      	addgt	r5, r5, r3
 802f20e:	2600      	movs	r6, #0
 802f210:	341a      	adds	r4, #26
 802f212:	42b5      	cmp	r5, r6
 802f214:	d11a      	bne.n	802f24c <_printf_common+0xc8>
 802f216:	2000      	movs	r0, #0
 802f218:	e008      	b.n	802f22c <_printf_common+0xa8>
 802f21a:	2301      	movs	r3, #1
 802f21c:	4652      	mov	r2, sl
 802f21e:	4641      	mov	r1, r8
 802f220:	4638      	mov	r0, r7
 802f222:	47c8      	blx	r9
 802f224:	3001      	adds	r0, #1
 802f226:	d103      	bne.n	802f230 <_printf_common+0xac>
 802f228:	f04f 30ff 	mov.w	r0, #4294967295
 802f22c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802f230:	3501      	adds	r5, #1
 802f232:	e7c6      	b.n	802f1c2 <_printf_common+0x3e>
 802f234:	18e1      	adds	r1, r4, r3
 802f236:	1c5a      	adds	r2, r3, #1
 802f238:	2030      	movs	r0, #48	@ 0x30
 802f23a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 802f23e:	4422      	add	r2, r4
 802f240:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 802f244:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 802f248:	3302      	adds	r3, #2
 802f24a:	e7c7      	b.n	802f1dc <_printf_common+0x58>
 802f24c:	2301      	movs	r3, #1
 802f24e:	4622      	mov	r2, r4
 802f250:	4641      	mov	r1, r8
 802f252:	4638      	mov	r0, r7
 802f254:	47c8      	blx	r9
 802f256:	3001      	adds	r0, #1
 802f258:	d0e6      	beq.n	802f228 <_printf_common+0xa4>
 802f25a:	3601      	adds	r6, #1
 802f25c:	e7d9      	b.n	802f212 <_printf_common+0x8e>
	...

0802f260 <_printf_i>:
 802f260:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802f264:	7e0f      	ldrb	r7, [r1, #24]
 802f266:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802f268:	2f78      	cmp	r7, #120	@ 0x78
 802f26a:	4691      	mov	r9, r2
 802f26c:	4680      	mov	r8, r0
 802f26e:	460c      	mov	r4, r1
 802f270:	469a      	mov	sl, r3
 802f272:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 802f276:	d807      	bhi.n	802f288 <_printf_i+0x28>
 802f278:	2f62      	cmp	r7, #98	@ 0x62
 802f27a:	d80a      	bhi.n	802f292 <_printf_i+0x32>
 802f27c:	2f00      	cmp	r7, #0
 802f27e:	f000 80d2 	beq.w	802f426 <_printf_i+0x1c6>
 802f282:	2f58      	cmp	r7, #88	@ 0x58
 802f284:	f000 80b9 	beq.w	802f3fa <_printf_i+0x19a>
 802f288:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 802f28c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 802f290:	e03a      	b.n	802f308 <_printf_i+0xa8>
 802f292:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 802f296:	2b15      	cmp	r3, #21
 802f298:	d8f6      	bhi.n	802f288 <_printf_i+0x28>
 802f29a:	a101      	add	r1, pc, #4	@ (adr r1, 802f2a0 <_printf_i+0x40>)
 802f29c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802f2a0:	0802f2f9 	.word	0x0802f2f9
 802f2a4:	0802f30d 	.word	0x0802f30d
 802f2a8:	0802f289 	.word	0x0802f289
 802f2ac:	0802f289 	.word	0x0802f289
 802f2b0:	0802f289 	.word	0x0802f289
 802f2b4:	0802f289 	.word	0x0802f289
 802f2b8:	0802f30d 	.word	0x0802f30d
 802f2bc:	0802f289 	.word	0x0802f289
 802f2c0:	0802f289 	.word	0x0802f289
 802f2c4:	0802f289 	.word	0x0802f289
 802f2c8:	0802f289 	.word	0x0802f289
 802f2cc:	0802f40d 	.word	0x0802f40d
 802f2d0:	0802f337 	.word	0x0802f337
 802f2d4:	0802f3c7 	.word	0x0802f3c7
 802f2d8:	0802f289 	.word	0x0802f289
 802f2dc:	0802f289 	.word	0x0802f289
 802f2e0:	0802f42f 	.word	0x0802f42f
 802f2e4:	0802f289 	.word	0x0802f289
 802f2e8:	0802f337 	.word	0x0802f337
 802f2ec:	0802f289 	.word	0x0802f289
 802f2f0:	0802f289 	.word	0x0802f289
 802f2f4:	0802f3cf 	.word	0x0802f3cf
 802f2f8:	6833      	ldr	r3, [r6, #0]
 802f2fa:	1d1a      	adds	r2, r3, #4
 802f2fc:	681b      	ldr	r3, [r3, #0]
 802f2fe:	6032      	str	r2, [r6, #0]
 802f300:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 802f304:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 802f308:	2301      	movs	r3, #1
 802f30a:	e09d      	b.n	802f448 <_printf_i+0x1e8>
 802f30c:	6833      	ldr	r3, [r6, #0]
 802f30e:	6820      	ldr	r0, [r4, #0]
 802f310:	1d19      	adds	r1, r3, #4
 802f312:	6031      	str	r1, [r6, #0]
 802f314:	0606      	lsls	r6, r0, #24
 802f316:	d501      	bpl.n	802f31c <_printf_i+0xbc>
 802f318:	681d      	ldr	r5, [r3, #0]
 802f31a:	e003      	b.n	802f324 <_printf_i+0xc4>
 802f31c:	0645      	lsls	r5, r0, #25
 802f31e:	d5fb      	bpl.n	802f318 <_printf_i+0xb8>
 802f320:	f9b3 5000 	ldrsh.w	r5, [r3]
 802f324:	2d00      	cmp	r5, #0
 802f326:	da03      	bge.n	802f330 <_printf_i+0xd0>
 802f328:	232d      	movs	r3, #45	@ 0x2d
 802f32a:	426d      	negs	r5, r5
 802f32c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802f330:	4859      	ldr	r0, [pc, #356]	@ (802f498 <_printf_i+0x238>)
 802f332:	230a      	movs	r3, #10
 802f334:	e011      	b.n	802f35a <_printf_i+0xfa>
 802f336:	6821      	ldr	r1, [r4, #0]
 802f338:	6833      	ldr	r3, [r6, #0]
 802f33a:	0608      	lsls	r0, r1, #24
 802f33c:	f853 5b04 	ldr.w	r5, [r3], #4
 802f340:	d402      	bmi.n	802f348 <_printf_i+0xe8>
 802f342:	0649      	lsls	r1, r1, #25
 802f344:	bf48      	it	mi
 802f346:	b2ad      	uxthmi	r5, r5
 802f348:	2f6f      	cmp	r7, #111	@ 0x6f
 802f34a:	4853      	ldr	r0, [pc, #332]	@ (802f498 <_printf_i+0x238>)
 802f34c:	6033      	str	r3, [r6, #0]
 802f34e:	bf14      	ite	ne
 802f350:	230a      	movne	r3, #10
 802f352:	2308      	moveq	r3, #8
 802f354:	2100      	movs	r1, #0
 802f356:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 802f35a:	6866      	ldr	r6, [r4, #4]
 802f35c:	60a6      	str	r6, [r4, #8]
 802f35e:	2e00      	cmp	r6, #0
 802f360:	bfa2      	ittt	ge
 802f362:	6821      	ldrge	r1, [r4, #0]
 802f364:	f021 0104 	bicge.w	r1, r1, #4
 802f368:	6021      	strge	r1, [r4, #0]
 802f36a:	b90d      	cbnz	r5, 802f370 <_printf_i+0x110>
 802f36c:	2e00      	cmp	r6, #0
 802f36e:	d04b      	beq.n	802f408 <_printf_i+0x1a8>
 802f370:	4616      	mov	r6, r2
 802f372:	fbb5 f1f3 	udiv	r1, r5, r3
 802f376:	fb03 5711 	mls	r7, r3, r1, r5
 802f37a:	5dc7      	ldrb	r7, [r0, r7]
 802f37c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 802f380:	462f      	mov	r7, r5
 802f382:	42bb      	cmp	r3, r7
 802f384:	460d      	mov	r5, r1
 802f386:	d9f4      	bls.n	802f372 <_printf_i+0x112>
 802f388:	2b08      	cmp	r3, #8
 802f38a:	d10b      	bne.n	802f3a4 <_printf_i+0x144>
 802f38c:	6823      	ldr	r3, [r4, #0]
 802f38e:	07df      	lsls	r7, r3, #31
 802f390:	d508      	bpl.n	802f3a4 <_printf_i+0x144>
 802f392:	6923      	ldr	r3, [r4, #16]
 802f394:	6861      	ldr	r1, [r4, #4]
 802f396:	4299      	cmp	r1, r3
 802f398:	bfde      	ittt	le
 802f39a:	2330      	movle	r3, #48	@ 0x30
 802f39c:	f806 3c01 	strble.w	r3, [r6, #-1]
 802f3a0:	f106 36ff 	addle.w	r6, r6, #4294967295
 802f3a4:	1b92      	subs	r2, r2, r6
 802f3a6:	6122      	str	r2, [r4, #16]
 802f3a8:	f8cd a000 	str.w	sl, [sp]
 802f3ac:	464b      	mov	r3, r9
 802f3ae:	aa03      	add	r2, sp, #12
 802f3b0:	4621      	mov	r1, r4
 802f3b2:	4640      	mov	r0, r8
 802f3b4:	f7ff fee6 	bl	802f184 <_printf_common>
 802f3b8:	3001      	adds	r0, #1
 802f3ba:	d14a      	bne.n	802f452 <_printf_i+0x1f2>
 802f3bc:	f04f 30ff 	mov.w	r0, #4294967295
 802f3c0:	b004      	add	sp, #16
 802f3c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802f3c6:	6823      	ldr	r3, [r4, #0]
 802f3c8:	f043 0320 	orr.w	r3, r3, #32
 802f3cc:	6023      	str	r3, [r4, #0]
 802f3ce:	4833      	ldr	r0, [pc, #204]	@ (802f49c <_printf_i+0x23c>)
 802f3d0:	2778      	movs	r7, #120	@ 0x78
 802f3d2:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 802f3d6:	6823      	ldr	r3, [r4, #0]
 802f3d8:	6831      	ldr	r1, [r6, #0]
 802f3da:	061f      	lsls	r7, r3, #24
 802f3dc:	f851 5b04 	ldr.w	r5, [r1], #4
 802f3e0:	d402      	bmi.n	802f3e8 <_printf_i+0x188>
 802f3e2:	065f      	lsls	r7, r3, #25
 802f3e4:	bf48      	it	mi
 802f3e6:	b2ad      	uxthmi	r5, r5
 802f3e8:	6031      	str	r1, [r6, #0]
 802f3ea:	07d9      	lsls	r1, r3, #31
 802f3ec:	bf44      	itt	mi
 802f3ee:	f043 0320 	orrmi.w	r3, r3, #32
 802f3f2:	6023      	strmi	r3, [r4, #0]
 802f3f4:	b11d      	cbz	r5, 802f3fe <_printf_i+0x19e>
 802f3f6:	2310      	movs	r3, #16
 802f3f8:	e7ac      	b.n	802f354 <_printf_i+0xf4>
 802f3fa:	4827      	ldr	r0, [pc, #156]	@ (802f498 <_printf_i+0x238>)
 802f3fc:	e7e9      	b.n	802f3d2 <_printf_i+0x172>
 802f3fe:	6823      	ldr	r3, [r4, #0]
 802f400:	f023 0320 	bic.w	r3, r3, #32
 802f404:	6023      	str	r3, [r4, #0]
 802f406:	e7f6      	b.n	802f3f6 <_printf_i+0x196>
 802f408:	4616      	mov	r6, r2
 802f40a:	e7bd      	b.n	802f388 <_printf_i+0x128>
 802f40c:	6833      	ldr	r3, [r6, #0]
 802f40e:	6825      	ldr	r5, [r4, #0]
 802f410:	6961      	ldr	r1, [r4, #20]
 802f412:	1d18      	adds	r0, r3, #4
 802f414:	6030      	str	r0, [r6, #0]
 802f416:	062e      	lsls	r6, r5, #24
 802f418:	681b      	ldr	r3, [r3, #0]
 802f41a:	d501      	bpl.n	802f420 <_printf_i+0x1c0>
 802f41c:	6019      	str	r1, [r3, #0]
 802f41e:	e002      	b.n	802f426 <_printf_i+0x1c6>
 802f420:	0668      	lsls	r0, r5, #25
 802f422:	d5fb      	bpl.n	802f41c <_printf_i+0x1bc>
 802f424:	8019      	strh	r1, [r3, #0]
 802f426:	2300      	movs	r3, #0
 802f428:	6123      	str	r3, [r4, #16]
 802f42a:	4616      	mov	r6, r2
 802f42c:	e7bc      	b.n	802f3a8 <_printf_i+0x148>
 802f42e:	6833      	ldr	r3, [r6, #0]
 802f430:	1d1a      	adds	r2, r3, #4
 802f432:	6032      	str	r2, [r6, #0]
 802f434:	681e      	ldr	r6, [r3, #0]
 802f436:	6862      	ldr	r2, [r4, #4]
 802f438:	2100      	movs	r1, #0
 802f43a:	4630      	mov	r0, r6
 802f43c:	f7d0 fee8 	bl	8000210 <memchr>
 802f440:	b108      	cbz	r0, 802f446 <_printf_i+0x1e6>
 802f442:	1b80      	subs	r0, r0, r6
 802f444:	6060      	str	r0, [r4, #4]
 802f446:	6863      	ldr	r3, [r4, #4]
 802f448:	6123      	str	r3, [r4, #16]
 802f44a:	2300      	movs	r3, #0
 802f44c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802f450:	e7aa      	b.n	802f3a8 <_printf_i+0x148>
 802f452:	6923      	ldr	r3, [r4, #16]
 802f454:	4632      	mov	r2, r6
 802f456:	4649      	mov	r1, r9
 802f458:	4640      	mov	r0, r8
 802f45a:	47d0      	blx	sl
 802f45c:	3001      	adds	r0, #1
 802f45e:	d0ad      	beq.n	802f3bc <_printf_i+0x15c>
 802f460:	6823      	ldr	r3, [r4, #0]
 802f462:	079b      	lsls	r3, r3, #30
 802f464:	d413      	bmi.n	802f48e <_printf_i+0x22e>
 802f466:	68e0      	ldr	r0, [r4, #12]
 802f468:	9b03      	ldr	r3, [sp, #12]
 802f46a:	4298      	cmp	r0, r3
 802f46c:	bfb8      	it	lt
 802f46e:	4618      	movlt	r0, r3
 802f470:	e7a6      	b.n	802f3c0 <_printf_i+0x160>
 802f472:	2301      	movs	r3, #1
 802f474:	4632      	mov	r2, r6
 802f476:	4649      	mov	r1, r9
 802f478:	4640      	mov	r0, r8
 802f47a:	47d0      	blx	sl
 802f47c:	3001      	adds	r0, #1
 802f47e:	d09d      	beq.n	802f3bc <_printf_i+0x15c>
 802f480:	3501      	adds	r5, #1
 802f482:	68e3      	ldr	r3, [r4, #12]
 802f484:	9903      	ldr	r1, [sp, #12]
 802f486:	1a5b      	subs	r3, r3, r1
 802f488:	42ab      	cmp	r3, r5
 802f48a:	dcf2      	bgt.n	802f472 <_printf_i+0x212>
 802f48c:	e7eb      	b.n	802f466 <_printf_i+0x206>
 802f48e:	2500      	movs	r5, #0
 802f490:	f104 0619 	add.w	r6, r4, #25
 802f494:	e7f5      	b.n	802f482 <_printf_i+0x222>
 802f496:	bf00      	nop
 802f498:	080339b9 	.word	0x080339b9
 802f49c:	080339ca 	.word	0x080339ca

0802f4a0 <__sflush_r>:
 802f4a0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 802f4a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802f4a8:	0716      	lsls	r6, r2, #28
 802f4aa:	4605      	mov	r5, r0
 802f4ac:	460c      	mov	r4, r1
 802f4ae:	d454      	bmi.n	802f55a <__sflush_r+0xba>
 802f4b0:	684b      	ldr	r3, [r1, #4]
 802f4b2:	2b00      	cmp	r3, #0
 802f4b4:	dc02      	bgt.n	802f4bc <__sflush_r+0x1c>
 802f4b6:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 802f4b8:	2b00      	cmp	r3, #0
 802f4ba:	dd48      	ble.n	802f54e <__sflush_r+0xae>
 802f4bc:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 802f4be:	2e00      	cmp	r6, #0
 802f4c0:	d045      	beq.n	802f54e <__sflush_r+0xae>
 802f4c2:	2300      	movs	r3, #0
 802f4c4:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 802f4c8:	682f      	ldr	r7, [r5, #0]
 802f4ca:	6a21      	ldr	r1, [r4, #32]
 802f4cc:	602b      	str	r3, [r5, #0]
 802f4ce:	d030      	beq.n	802f532 <__sflush_r+0x92>
 802f4d0:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 802f4d2:	89a3      	ldrh	r3, [r4, #12]
 802f4d4:	0759      	lsls	r1, r3, #29
 802f4d6:	d505      	bpl.n	802f4e4 <__sflush_r+0x44>
 802f4d8:	6863      	ldr	r3, [r4, #4]
 802f4da:	1ad2      	subs	r2, r2, r3
 802f4dc:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 802f4de:	b10b      	cbz	r3, 802f4e4 <__sflush_r+0x44>
 802f4e0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 802f4e2:	1ad2      	subs	r2, r2, r3
 802f4e4:	2300      	movs	r3, #0
 802f4e6:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 802f4e8:	6a21      	ldr	r1, [r4, #32]
 802f4ea:	4628      	mov	r0, r5
 802f4ec:	47b0      	blx	r6
 802f4ee:	1c43      	adds	r3, r0, #1
 802f4f0:	89a3      	ldrh	r3, [r4, #12]
 802f4f2:	d106      	bne.n	802f502 <__sflush_r+0x62>
 802f4f4:	6829      	ldr	r1, [r5, #0]
 802f4f6:	291d      	cmp	r1, #29
 802f4f8:	d82b      	bhi.n	802f552 <__sflush_r+0xb2>
 802f4fa:	4a2a      	ldr	r2, [pc, #168]	@ (802f5a4 <__sflush_r+0x104>)
 802f4fc:	410a      	asrs	r2, r1
 802f4fe:	07d6      	lsls	r6, r2, #31
 802f500:	d427      	bmi.n	802f552 <__sflush_r+0xb2>
 802f502:	2200      	movs	r2, #0
 802f504:	6062      	str	r2, [r4, #4]
 802f506:	04d9      	lsls	r1, r3, #19
 802f508:	6922      	ldr	r2, [r4, #16]
 802f50a:	6022      	str	r2, [r4, #0]
 802f50c:	d504      	bpl.n	802f518 <__sflush_r+0x78>
 802f50e:	1c42      	adds	r2, r0, #1
 802f510:	d101      	bne.n	802f516 <__sflush_r+0x76>
 802f512:	682b      	ldr	r3, [r5, #0]
 802f514:	b903      	cbnz	r3, 802f518 <__sflush_r+0x78>
 802f516:	6560      	str	r0, [r4, #84]	@ 0x54
 802f518:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 802f51a:	602f      	str	r7, [r5, #0]
 802f51c:	b1b9      	cbz	r1, 802f54e <__sflush_r+0xae>
 802f51e:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802f522:	4299      	cmp	r1, r3
 802f524:	d002      	beq.n	802f52c <__sflush_r+0x8c>
 802f526:	4628      	mov	r0, r5
 802f528:	f7ff fca0 	bl	802ee6c <_free_r>
 802f52c:	2300      	movs	r3, #0
 802f52e:	6363      	str	r3, [r4, #52]	@ 0x34
 802f530:	e00d      	b.n	802f54e <__sflush_r+0xae>
 802f532:	2301      	movs	r3, #1
 802f534:	4628      	mov	r0, r5
 802f536:	47b0      	blx	r6
 802f538:	4602      	mov	r2, r0
 802f53a:	1c50      	adds	r0, r2, #1
 802f53c:	d1c9      	bne.n	802f4d2 <__sflush_r+0x32>
 802f53e:	682b      	ldr	r3, [r5, #0]
 802f540:	2b00      	cmp	r3, #0
 802f542:	d0c6      	beq.n	802f4d2 <__sflush_r+0x32>
 802f544:	2b1d      	cmp	r3, #29
 802f546:	d001      	beq.n	802f54c <__sflush_r+0xac>
 802f548:	2b16      	cmp	r3, #22
 802f54a:	d11e      	bne.n	802f58a <__sflush_r+0xea>
 802f54c:	602f      	str	r7, [r5, #0]
 802f54e:	2000      	movs	r0, #0
 802f550:	e022      	b.n	802f598 <__sflush_r+0xf8>
 802f552:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802f556:	b21b      	sxth	r3, r3
 802f558:	e01b      	b.n	802f592 <__sflush_r+0xf2>
 802f55a:	690f      	ldr	r7, [r1, #16]
 802f55c:	2f00      	cmp	r7, #0
 802f55e:	d0f6      	beq.n	802f54e <__sflush_r+0xae>
 802f560:	0793      	lsls	r3, r2, #30
 802f562:	680e      	ldr	r6, [r1, #0]
 802f564:	bf08      	it	eq
 802f566:	694b      	ldreq	r3, [r1, #20]
 802f568:	600f      	str	r7, [r1, #0]
 802f56a:	bf18      	it	ne
 802f56c:	2300      	movne	r3, #0
 802f56e:	eba6 0807 	sub.w	r8, r6, r7
 802f572:	608b      	str	r3, [r1, #8]
 802f574:	f1b8 0f00 	cmp.w	r8, #0
 802f578:	dde9      	ble.n	802f54e <__sflush_r+0xae>
 802f57a:	6a21      	ldr	r1, [r4, #32]
 802f57c:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 802f57e:	4643      	mov	r3, r8
 802f580:	463a      	mov	r2, r7
 802f582:	4628      	mov	r0, r5
 802f584:	47b0      	blx	r6
 802f586:	2800      	cmp	r0, #0
 802f588:	dc08      	bgt.n	802f59c <__sflush_r+0xfc>
 802f58a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802f58e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802f592:	81a3      	strh	r3, [r4, #12]
 802f594:	f04f 30ff 	mov.w	r0, #4294967295
 802f598:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802f59c:	4407      	add	r7, r0
 802f59e:	eba8 0800 	sub.w	r8, r8, r0
 802f5a2:	e7e7      	b.n	802f574 <__sflush_r+0xd4>
 802f5a4:	dfbffffe 	.word	0xdfbffffe

0802f5a8 <_fflush_r>:
 802f5a8:	b538      	push	{r3, r4, r5, lr}
 802f5aa:	690b      	ldr	r3, [r1, #16]
 802f5ac:	4605      	mov	r5, r0
 802f5ae:	460c      	mov	r4, r1
 802f5b0:	b913      	cbnz	r3, 802f5b8 <_fflush_r+0x10>
 802f5b2:	2500      	movs	r5, #0
 802f5b4:	4628      	mov	r0, r5
 802f5b6:	bd38      	pop	{r3, r4, r5, pc}
 802f5b8:	b118      	cbz	r0, 802f5c2 <_fflush_r+0x1a>
 802f5ba:	6a03      	ldr	r3, [r0, #32]
 802f5bc:	b90b      	cbnz	r3, 802f5c2 <_fflush_r+0x1a>
 802f5be:	f7ff fa39 	bl	802ea34 <__sinit>
 802f5c2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802f5c6:	2b00      	cmp	r3, #0
 802f5c8:	d0f3      	beq.n	802f5b2 <_fflush_r+0xa>
 802f5ca:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 802f5cc:	07d0      	lsls	r0, r2, #31
 802f5ce:	d404      	bmi.n	802f5da <_fflush_r+0x32>
 802f5d0:	0599      	lsls	r1, r3, #22
 802f5d2:	d402      	bmi.n	802f5da <_fflush_r+0x32>
 802f5d4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802f5d6:	f7ff fbdc 	bl	802ed92 <__retarget_lock_acquire_recursive>
 802f5da:	4628      	mov	r0, r5
 802f5dc:	4621      	mov	r1, r4
 802f5de:	f7ff ff5f 	bl	802f4a0 <__sflush_r>
 802f5e2:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 802f5e4:	07da      	lsls	r2, r3, #31
 802f5e6:	4605      	mov	r5, r0
 802f5e8:	d4e4      	bmi.n	802f5b4 <_fflush_r+0xc>
 802f5ea:	89a3      	ldrh	r3, [r4, #12]
 802f5ec:	059b      	lsls	r3, r3, #22
 802f5ee:	d4e1      	bmi.n	802f5b4 <_fflush_r+0xc>
 802f5f0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802f5f2:	f7ff fbcf 	bl	802ed94 <__retarget_lock_release_recursive>
 802f5f6:	e7dd      	b.n	802f5b4 <_fflush_r+0xc>

0802f5f8 <__swbuf_r>:
 802f5f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802f5fa:	460e      	mov	r6, r1
 802f5fc:	4614      	mov	r4, r2
 802f5fe:	4605      	mov	r5, r0
 802f600:	b118      	cbz	r0, 802f60a <__swbuf_r+0x12>
 802f602:	6a03      	ldr	r3, [r0, #32]
 802f604:	b90b      	cbnz	r3, 802f60a <__swbuf_r+0x12>
 802f606:	f7ff fa15 	bl	802ea34 <__sinit>
 802f60a:	69a3      	ldr	r3, [r4, #24]
 802f60c:	60a3      	str	r3, [r4, #8]
 802f60e:	89a3      	ldrh	r3, [r4, #12]
 802f610:	071a      	lsls	r2, r3, #28
 802f612:	d501      	bpl.n	802f618 <__swbuf_r+0x20>
 802f614:	6923      	ldr	r3, [r4, #16]
 802f616:	b943      	cbnz	r3, 802f62a <__swbuf_r+0x32>
 802f618:	4621      	mov	r1, r4
 802f61a:	4628      	mov	r0, r5
 802f61c:	f000 f82a 	bl	802f674 <__swsetup_r>
 802f620:	b118      	cbz	r0, 802f62a <__swbuf_r+0x32>
 802f622:	f04f 37ff 	mov.w	r7, #4294967295
 802f626:	4638      	mov	r0, r7
 802f628:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802f62a:	6823      	ldr	r3, [r4, #0]
 802f62c:	6922      	ldr	r2, [r4, #16]
 802f62e:	1a98      	subs	r0, r3, r2
 802f630:	6963      	ldr	r3, [r4, #20]
 802f632:	b2f6      	uxtb	r6, r6
 802f634:	4283      	cmp	r3, r0
 802f636:	4637      	mov	r7, r6
 802f638:	dc05      	bgt.n	802f646 <__swbuf_r+0x4e>
 802f63a:	4621      	mov	r1, r4
 802f63c:	4628      	mov	r0, r5
 802f63e:	f7ff ffb3 	bl	802f5a8 <_fflush_r>
 802f642:	2800      	cmp	r0, #0
 802f644:	d1ed      	bne.n	802f622 <__swbuf_r+0x2a>
 802f646:	68a3      	ldr	r3, [r4, #8]
 802f648:	3b01      	subs	r3, #1
 802f64a:	60a3      	str	r3, [r4, #8]
 802f64c:	6823      	ldr	r3, [r4, #0]
 802f64e:	1c5a      	adds	r2, r3, #1
 802f650:	6022      	str	r2, [r4, #0]
 802f652:	701e      	strb	r6, [r3, #0]
 802f654:	6962      	ldr	r2, [r4, #20]
 802f656:	1c43      	adds	r3, r0, #1
 802f658:	429a      	cmp	r2, r3
 802f65a:	d004      	beq.n	802f666 <__swbuf_r+0x6e>
 802f65c:	89a3      	ldrh	r3, [r4, #12]
 802f65e:	07db      	lsls	r3, r3, #31
 802f660:	d5e1      	bpl.n	802f626 <__swbuf_r+0x2e>
 802f662:	2e0a      	cmp	r6, #10
 802f664:	d1df      	bne.n	802f626 <__swbuf_r+0x2e>
 802f666:	4621      	mov	r1, r4
 802f668:	4628      	mov	r0, r5
 802f66a:	f7ff ff9d 	bl	802f5a8 <_fflush_r>
 802f66e:	2800      	cmp	r0, #0
 802f670:	d0d9      	beq.n	802f626 <__swbuf_r+0x2e>
 802f672:	e7d6      	b.n	802f622 <__swbuf_r+0x2a>

0802f674 <__swsetup_r>:
 802f674:	b538      	push	{r3, r4, r5, lr}
 802f676:	4b29      	ldr	r3, [pc, #164]	@ (802f71c <__swsetup_r+0xa8>)
 802f678:	4605      	mov	r5, r0
 802f67a:	6818      	ldr	r0, [r3, #0]
 802f67c:	460c      	mov	r4, r1
 802f67e:	b118      	cbz	r0, 802f688 <__swsetup_r+0x14>
 802f680:	6a03      	ldr	r3, [r0, #32]
 802f682:	b90b      	cbnz	r3, 802f688 <__swsetup_r+0x14>
 802f684:	f7ff f9d6 	bl	802ea34 <__sinit>
 802f688:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802f68c:	0719      	lsls	r1, r3, #28
 802f68e:	d422      	bmi.n	802f6d6 <__swsetup_r+0x62>
 802f690:	06da      	lsls	r2, r3, #27
 802f692:	d407      	bmi.n	802f6a4 <__swsetup_r+0x30>
 802f694:	2209      	movs	r2, #9
 802f696:	602a      	str	r2, [r5, #0]
 802f698:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802f69c:	81a3      	strh	r3, [r4, #12]
 802f69e:	f04f 30ff 	mov.w	r0, #4294967295
 802f6a2:	e033      	b.n	802f70c <__swsetup_r+0x98>
 802f6a4:	0758      	lsls	r0, r3, #29
 802f6a6:	d512      	bpl.n	802f6ce <__swsetup_r+0x5a>
 802f6a8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 802f6aa:	b141      	cbz	r1, 802f6be <__swsetup_r+0x4a>
 802f6ac:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802f6b0:	4299      	cmp	r1, r3
 802f6b2:	d002      	beq.n	802f6ba <__swsetup_r+0x46>
 802f6b4:	4628      	mov	r0, r5
 802f6b6:	f7ff fbd9 	bl	802ee6c <_free_r>
 802f6ba:	2300      	movs	r3, #0
 802f6bc:	6363      	str	r3, [r4, #52]	@ 0x34
 802f6be:	89a3      	ldrh	r3, [r4, #12]
 802f6c0:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 802f6c4:	81a3      	strh	r3, [r4, #12]
 802f6c6:	2300      	movs	r3, #0
 802f6c8:	6063      	str	r3, [r4, #4]
 802f6ca:	6923      	ldr	r3, [r4, #16]
 802f6cc:	6023      	str	r3, [r4, #0]
 802f6ce:	89a3      	ldrh	r3, [r4, #12]
 802f6d0:	f043 0308 	orr.w	r3, r3, #8
 802f6d4:	81a3      	strh	r3, [r4, #12]
 802f6d6:	6923      	ldr	r3, [r4, #16]
 802f6d8:	b94b      	cbnz	r3, 802f6ee <__swsetup_r+0x7a>
 802f6da:	89a3      	ldrh	r3, [r4, #12]
 802f6dc:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 802f6e0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 802f6e4:	d003      	beq.n	802f6ee <__swsetup_r+0x7a>
 802f6e6:	4621      	mov	r1, r4
 802f6e8:	4628      	mov	r0, r5
 802f6ea:	f000 f83f 	bl	802f76c <__smakebuf_r>
 802f6ee:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802f6f2:	f013 0201 	ands.w	r2, r3, #1
 802f6f6:	d00a      	beq.n	802f70e <__swsetup_r+0x9a>
 802f6f8:	2200      	movs	r2, #0
 802f6fa:	60a2      	str	r2, [r4, #8]
 802f6fc:	6962      	ldr	r2, [r4, #20]
 802f6fe:	4252      	negs	r2, r2
 802f700:	61a2      	str	r2, [r4, #24]
 802f702:	6922      	ldr	r2, [r4, #16]
 802f704:	b942      	cbnz	r2, 802f718 <__swsetup_r+0xa4>
 802f706:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 802f70a:	d1c5      	bne.n	802f698 <__swsetup_r+0x24>
 802f70c:	bd38      	pop	{r3, r4, r5, pc}
 802f70e:	0799      	lsls	r1, r3, #30
 802f710:	bf58      	it	pl
 802f712:	6962      	ldrpl	r2, [r4, #20]
 802f714:	60a2      	str	r2, [r4, #8]
 802f716:	e7f4      	b.n	802f702 <__swsetup_r+0x8e>
 802f718:	2000      	movs	r0, #0
 802f71a:	e7f7      	b.n	802f70c <__swsetup_r+0x98>
 802f71c:	200000d4 	.word	0x200000d4

0802f720 <__swhatbuf_r>:
 802f720:	b570      	push	{r4, r5, r6, lr}
 802f722:	460c      	mov	r4, r1
 802f724:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802f728:	2900      	cmp	r1, #0
 802f72a:	b096      	sub	sp, #88	@ 0x58
 802f72c:	4615      	mov	r5, r2
 802f72e:	461e      	mov	r6, r3
 802f730:	da0d      	bge.n	802f74e <__swhatbuf_r+0x2e>
 802f732:	89a3      	ldrh	r3, [r4, #12]
 802f734:	f013 0f80 	tst.w	r3, #128	@ 0x80
 802f738:	f04f 0100 	mov.w	r1, #0
 802f73c:	bf14      	ite	ne
 802f73e:	2340      	movne	r3, #64	@ 0x40
 802f740:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 802f744:	2000      	movs	r0, #0
 802f746:	6031      	str	r1, [r6, #0]
 802f748:	602b      	str	r3, [r5, #0]
 802f74a:	b016      	add	sp, #88	@ 0x58
 802f74c:	bd70      	pop	{r4, r5, r6, pc}
 802f74e:	466a      	mov	r2, sp
 802f750:	f000 f848 	bl	802f7e4 <_fstat_r>
 802f754:	2800      	cmp	r0, #0
 802f756:	dbec      	blt.n	802f732 <__swhatbuf_r+0x12>
 802f758:	9901      	ldr	r1, [sp, #4]
 802f75a:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 802f75e:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 802f762:	4259      	negs	r1, r3
 802f764:	4159      	adcs	r1, r3
 802f766:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 802f76a:	e7eb      	b.n	802f744 <__swhatbuf_r+0x24>

0802f76c <__smakebuf_r>:
 802f76c:	898b      	ldrh	r3, [r1, #12]
 802f76e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 802f770:	079d      	lsls	r5, r3, #30
 802f772:	4606      	mov	r6, r0
 802f774:	460c      	mov	r4, r1
 802f776:	d507      	bpl.n	802f788 <__smakebuf_r+0x1c>
 802f778:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 802f77c:	6023      	str	r3, [r4, #0]
 802f77e:	6123      	str	r3, [r4, #16]
 802f780:	2301      	movs	r3, #1
 802f782:	6163      	str	r3, [r4, #20]
 802f784:	b003      	add	sp, #12
 802f786:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802f788:	ab01      	add	r3, sp, #4
 802f78a:	466a      	mov	r2, sp
 802f78c:	f7ff ffc8 	bl	802f720 <__swhatbuf_r>
 802f790:	9f00      	ldr	r7, [sp, #0]
 802f792:	4605      	mov	r5, r0
 802f794:	4639      	mov	r1, r7
 802f796:	4630      	mov	r0, r6
 802f798:	f7ff f826 	bl	802e7e8 <_malloc_r>
 802f79c:	b948      	cbnz	r0, 802f7b2 <__smakebuf_r+0x46>
 802f79e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802f7a2:	059a      	lsls	r2, r3, #22
 802f7a4:	d4ee      	bmi.n	802f784 <__smakebuf_r+0x18>
 802f7a6:	f023 0303 	bic.w	r3, r3, #3
 802f7aa:	f043 0302 	orr.w	r3, r3, #2
 802f7ae:	81a3      	strh	r3, [r4, #12]
 802f7b0:	e7e2      	b.n	802f778 <__smakebuf_r+0xc>
 802f7b2:	89a3      	ldrh	r3, [r4, #12]
 802f7b4:	6020      	str	r0, [r4, #0]
 802f7b6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 802f7ba:	81a3      	strh	r3, [r4, #12]
 802f7bc:	9b01      	ldr	r3, [sp, #4]
 802f7be:	e9c4 0704 	strd	r0, r7, [r4, #16]
 802f7c2:	b15b      	cbz	r3, 802f7dc <__smakebuf_r+0x70>
 802f7c4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802f7c8:	4630      	mov	r0, r6
 802f7ca:	f000 f81d 	bl	802f808 <_isatty_r>
 802f7ce:	b128      	cbz	r0, 802f7dc <__smakebuf_r+0x70>
 802f7d0:	89a3      	ldrh	r3, [r4, #12]
 802f7d2:	f023 0303 	bic.w	r3, r3, #3
 802f7d6:	f043 0301 	orr.w	r3, r3, #1
 802f7da:	81a3      	strh	r3, [r4, #12]
 802f7dc:	89a3      	ldrh	r3, [r4, #12]
 802f7de:	431d      	orrs	r5, r3
 802f7e0:	81a5      	strh	r5, [r4, #12]
 802f7e2:	e7cf      	b.n	802f784 <__smakebuf_r+0x18>

0802f7e4 <_fstat_r>:
 802f7e4:	b538      	push	{r3, r4, r5, lr}
 802f7e6:	4d07      	ldr	r5, [pc, #28]	@ (802f804 <_fstat_r+0x20>)
 802f7e8:	2300      	movs	r3, #0
 802f7ea:	4604      	mov	r4, r0
 802f7ec:	4608      	mov	r0, r1
 802f7ee:	4611      	mov	r1, r2
 802f7f0:	602b      	str	r3, [r5, #0]
 802f7f2:	f7d4 fe73 	bl	80044dc <_fstat>
 802f7f6:	1c43      	adds	r3, r0, #1
 802f7f8:	d102      	bne.n	802f800 <_fstat_r+0x1c>
 802f7fa:	682b      	ldr	r3, [r5, #0]
 802f7fc:	b103      	cbz	r3, 802f800 <_fstat_r+0x1c>
 802f7fe:	6023      	str	r3, [r4, #0]
 802f800:	bd38      	pop	{r3, r4, r5, pc}
 802f802:	bf00      	nop
 802f804:	2000efac 	.word	0x2000efac

0802f808 <_isatty_r>:
 802f808:	b538      	push	{r3, r4, r5, lr}
 802f80a:	4d06      	ldr	r5, [pc, #24]	@ (802f824 <_isatty_r+0x1c>)
 802f80c:	2300      	movs	r3, #0
 802f80e:	4604      	mov	r4, r0
 802f810:	4608      	mov	r0, r1
 802f812:	602b      	str	r3, [r5, #0]
 802f814:	f7d4 fe68 	bl	80044e8 <_isatty>
 802f818:	1c43      	adds	r3, r0, #1
 802f81a:	d102      	bne.n	802f822 <_isatty_r+0x1a>
 802f81c:	682b      	ldr	r3, [r5, #0]
 802f81e:	b103      	cbz	r3, 802f822 <_isatty_r+0x1a>
 802f820:	6023      	str	r3, [r4, #0]
 802f822:	bd38      	pop	{r3, r4, r5, pc}
 802f824:	2000efac 	.word	0x2000efac

0802f828 <_init>:
 802f828:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802f82a:	bf00      	nop
 802f82c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802f82e:	bc08      	pop	{r3}
 802f830:	469e      	mov	lr, r3
 802f832:	4770      	bx	lr

0802f834 <_fini>:
 802f834:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802f836:	bf00      	nop
 802f838:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802f83a:	bc08      	pop	{r3}
 802f83c:	469e      	mov	lr, r3
 802f83e:	4770      	bx	lr
